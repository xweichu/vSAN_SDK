# This message file defines all of labels, descriptions in vSAN performance test result showing in UI

#
# ClusterDomClient
#
com.vmware.vsan.perf.entity.cluster-domclient.description = VM 사용량의 관점에서 클러스터에 대한 메트릭입니다.

#
# ClusterDomClientGraphs
#
cluster-domclient.iops.name = IOPS
cluster-domclient.iops.description = 클러스터의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 IOPS입니다.
cluster-domclient.iops.metrics.iopsRead.name = 읽기 IOPS
cluster-domclient.iops.metrics.iopsRead.description = 클러스터의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 읽기 IOPS입니다.
cluster-domclient.iops.metrics.iopsWrite.name = 쓰기 IOPS
cluster-domclient.iops.metrics.iopsWrite.description = 클러스터의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 쓰기 IOPS입니다.

cluster-domclient.throughput.name = 처리량
cluster-domclient.throughput.description = 클러스터의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 처리량입니다.
cluster-domclient.throughput.metrics.throughputRead.name = 읽기 처리량
cluster-domclient.throughput.metrics.throughputRead.description = 클러스터의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 읽기 처리량입니다.
cluster-domclient.throughput.metrics.throughputWrite.name = 쓰기 처리량
cluster-domclient.throughput.metrics.throughputWrite.description = 클러스터의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 쓰기 처리량입니다.

cluster-domclient.latency.name = 지연 시간
cluster-domclient.latency.description = 클러스터의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 생성되는 IO의 평균 지연 시간입니다.
cluster-domclient.latency.metrics.latencyAvgRead.name = 읽기 지연 시간
cluster-domclient.latency.metrics.latencyAvgRead.description = 클러스터의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 생성되는 IO의 평균 읽기 지연 시간입니다.
cluster-domclient.latency.metrics.latencyAvgWrite.name = 쓰기 지연 시간
cluster-domclient.latency.metrics.latencyAvgWrite.description = 클러스터의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 생성되는 IO의 평균 쓰기 지연 시간입니다.

cluster-domclient.congestion.name = 정체
cluster-domclient.congestion.description = 클러스터의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 생성되는 IO의 정체입니다.
cluster-domclient.congestion.metrics.congestion.name = 정체
cluster-domclient.congestion.metrics.congestion.description = 클러스터의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 생성되는 IO의 정체입니다.

cluster-domclient.oio.name = 미결 IO
cluster-domclient.oio.description = 클러스터의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)의 미결 IO입니다.
cluster-domclient.oio.metrics.oio.name = 미결 IO
cluster-domclient.oio.metrics.oio.description = 클러스터의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)의 미결 IO입니다.

#
# ClusterDomCompMgr
#
com.vmware.vsan.perf.entity.cluster-domcompmgr.description = vSAN 백엔드의 관점에서 클러스터에 대한 메트릭입니다.

#
# ClusterDomCompMgrGraphs
#

cluster-domcompmgr.iops.name = IOPS
cluster-domcompmgr.iops.description = vSAN 클러스터 백엔드 IOPS.
cluster-domcompmgr.iops.metrics.iopsRead.name = 읽기 IOPS
cluster-domcompmgr.iops.metrics.iopsRead.description = vSAN 백엔드의 관점에서 vSAN 클러스터 읽기 IOPS입니다.
cluster-domcompmgr.iops.metrics.iopsResyncRead.name = 다시 동기화 읽기 IOPS
cluster-domcompmgr.iops.metrics.iopsResyncRead.description = 다시 동기화 트래픽의 vSAN 클러스터 읽기 IOPS로, vSAN 백엔드의 관점에서 개체 다시 동기화로 인한 정책 변경, 복구, 유지 보수 모드/제거 및 재조정을 포함합니다.
cluster-domcompmgr.iops.metrics.iopsWrite.name = 쓰기 IOPS
cluster-domcompmgr.iops.metrics.iopsWrite.description = vSAN 백엔드의 관점에서 vSAN 클러스터 쓰기 IOPS입니다.
cluster-domcompmgr.iops.metrics.iopsRecWrite.name = 복구 쓰기 IOPS
cluster-domcompmgr.iops.metrics.iopsRecWrite.description = vSAN 백엔드의 관점에서 vSAN 클러스터 복구 쓰기 IOPS입니다.

cluster-domcompmgr.throughput.name = 처리량
cluster-domcompmgr.throughput.description = vSAN 클러스터 백엔드 처리량.
cluster-domcompmgr.throughput.metrics.throughputRead.name = 읽기 처리량
cluster-domcompmgr.throughput.metrics.throughputRead.description = vSAN 백엔드의 관점에서 vSAN 클러스터 읽기 처리량입니다.
cluster-domcompmgr.throughput.metrics.tputResyncRead.name = 다시 동기화 읽기 처리량
cluster-domcompmgr.throughput.metrics.tputResyncRead.description = 다시 동기화 트래픽의 vSAN 클러스터 읽기 처리량으로, vSAN 백엔드의 관점에서 개체 다시 동기화로 인한 정책 변경, 복구, 유지 보수 모드/제거 및 재조정을 포함합니다.
cluster-domcompmgr.throughput.metrics.throughputWrite.name = 쓰기 처리량
cluster-domcompmgr.throughput.metrics.throughputWrite.description = vSAN 백엔드의 관점에서 vSAN 클러스터 쓰기 처리량입니다.
cluster-domcompmgr.throughput.metrics.throughputRecWrite.name = 복구 쓰기 처리량
cluster-domcompmgr.throughput.metrics.throughputRecWrite.description = vSAN 백엔드의 관점에서 vSAN 클러스터 복구 쓰기 처리량입니다.

cluster-domcompmgr.latency.name = 지연 시간
cluster-domcompmgr.latency.description = vSAN 클러스터 백엔드 지연 시간.
cluster-domcompmgr.latency.metrics.latencyAvgRead.name = 읽기 지연 시간
cluster-domcompmgr.latency.metrics.latencyAvgRead.description = vSAN 백엔드의 관점에서 vSAN 클러스터 평균 읽기 지연 시간입니다.
cluster-domcompmgr.latency.metrics.latAvgResyncRead.name = 다시 동기화 읽기 지연 시간
cluster-domcompmgr.latency.metrics.latAvgResyncRead.description = 다시 동기화 트래픽의 vSAN 클러스터 읽기 평균 지연 시간으로, vSAN 백엔드의 관점에서 개체 다시 동기화로 인한 정책 변경, 복구, 유지 보수 모드/제거 및 재조정을 포함합니다.
cluster-domcompmgr.latency.metrics.latencyAvgWrite.name = 쓰기 지연 시간
cluster-domcompmgr.latency.metrics.latencyAvgWrite.description = vSAN 백엔드의 관점에서 vSAN 클러스터 평균 쓰기 지연 시간입니다.
cluster-domcompmgr.latency.metrics.latencyAvgRecWrite.name = 복구 쓰기 지연 시간
cluster-domcompmgr.latency.metrics.latencyAvgRecWrite.description = vSAN 백엔드의 관점에서 vSAN 클러스터 복구 쓰기 평균 지연 시간입니다.

cluster-domcompmgr.congestion.name = 정체
cluster-domcompmgr.congestion.description = vSAN 클러스터 백엔드 정체.
cluster-domcompmgr.congestion.metrics.congestion.name = 정체
cluster-domcompmgr.congestion.metrics.congestion.description = vSAN 백엔드의 관점에서 vSAN 클러스터 정체입니다.

cluster-domcompmgr.oio.name = 미결 IO
cluster-domcompmgr.oio.description = vSAN 클러스터 백엔드 미결 IO.
cluster-domcompmgr.oio.metrics.oio.name = 미결 IO
cluster-domcompmgr.oio.metrics.oio.description = vSAN 백엔드의 관점에서 vSAN 클러스터 미결 IO입니다.

#
# HostDomClient
#
com.vmware.vsan.perf.entity.host-domclient.description = VM 사용량의 관점에서 호스트에 대한 메트릭.

#
# HostDomClientGraphs
#
host-domclient.iops.name = IOPS
host-domclient.iops.description = 호스트의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 IOPS입니다.
host-domclient.iops.metrics.iopsRead.name = 읽기 IOPS
host-domclient.iops.metrics.iopsRead.description = 호스트의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 읽기 IOPS입니다.
host-domclient.iops.metrics.iopsWrite.name =  쓰기 IOPS
host-domclient.iops.metrics.iopsWrite.description = 호스트의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 쓰기 IOPS입니다.
host-domclient.iops.metrics.iopsUnmap.name = 매핑 해제 IOPS
host-domclient.iops.metrics.iopsUnmap.description = 호스트의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 사용되는 트리밍/매핑 해제 명령의 vSAN 호스트 IOPS입니다.

host-domclient.throughput.name = 처리량
host-domclient.throughput.description = 호스트의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 처리량입니다.
host-domclient.throughput.metrics.throughputRead.name = 읽기 처리량
host-domclient.throughput.metrics.throughputRead.description = 호스트의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 읽기 처리량입니다.
host-domclient.throughput.metrics.throughputWrite.name = 쓰기 처리량
host-domclient.throughput.metrics.throughputWrite.description = 호스트의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 쓰기 처리량입니다.

host-domclient.throughputUnmap.name = 트리밍/매핑 해제 처리량
host-domclient.throughputUnmap.description = 호스트의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 트리밍/매핑 해제 처리량입니다.
host-domclient.throughputUnmap.metrics.throughputUnmap.name = 매핑 해제 처리량
host-domclient.throughputUnmap.metrics.throughputUnmap.description = 호스트의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 사용되는 트리밍/매핑 해제 명령의 vSAN 호스트 처리량입니다.

host-domclient.latency.name = 지연 시간
host-domclient.latency.description = 호스트의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 생성되는 IO의 평균 지연 시간입니다.
host-domclient.latency.metrics.latencyAvgRead.name = 읽기 지연 시간
host-domclient.latency.metrics.latencyAvgRead.description = 호스트의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 생성되는 IO의 평균 읽기 지연 시간입니다.
host-domclient.latency.metrics.latencyAvgWrite.name = 쓰기 지연 시간
host-domclient.latency.metrics.latencyAvgWrite.description = 호스트의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 생성되는 IO의 평균 쓰기 지연 시간입니다.
host-domclient.latency.metrics.latencyAvgUnmap.name = 매핑 해제 지연 시간
host-domclient.latency.metrics.latencyAvgUnmap.description = 호스트의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 생성되는 트리밍/매핑 해제 명령의 vSAN 호스트 평균 지연 시간입니다.

host-domclient.clientCacheHits.name = 로컬 클라이언트 캐시 적중 IOPS
host-domclient.clientCacheHits.description = 로컬 클라이언트의 평균 캐시 읽기 IOPS입니다.
host-domclient.clientCacheHits.metrics.clientCacheHits.name = 로컬 클라이언트 캐시 적중 IOPS
host-domclient.clientCacheHits.metrics.clientCacheHits.description = 로컬 클라이언트의 평균 캐시 읽기 IOPS입니다.

host-domclient.clientCacheHitRate.name = 로컬 클라이언트 캐시 적중률
host-domclient.clientCacheHitRate.description = 로컬 클라이언트 캐시로 충족될 수 있는 읽기 IO의 백분율입니다.
host-domclient.clientCacheHitRate.metrics.clientCacheHitRate.name = 로컬 클라이언트 캐시 적중률
host-domclient.clientCacheHitRate.metrics.clientCacheHitRate.description = 로컬 클라이언트 캐시로 충족될 수 있는 읽기 IO의 백분율입니다.

host-domclient.congestion.name = 정체
host-domclient.congestion.description = 호스트의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 생성되는 IO의 정체입니다.
host-domclient.congestion.metrics.congestion.name = 정체
host-domclient.congestion.metrics.congestion.description = 호스트의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 생성되는 IO의 정체입니다.

host-domclient.oio.name = 미결 IO
host-domclient.oio.description = 호스트의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)의 미결 IO입니다.
host-domclient.oio.metrics.oio.name = 미결 IO
host-domclient.oio.metrics.oio.description = 호스트의 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)의 미결 IO입니다.

#
# HostDomCompMgr
#
com.vmware.vsan.perf.entity.host-domcompmgr.description = vSAN 백엔드의 관점에서 호스트에 대한 메트릭입니다.
#
# HostDomCompMgrGraphs
#
host-domcompmgr.iops.name = IOPS
host-domcompmgr.iops.description = vSAN 백엔드 호스트 IOPS.
host-domcompmgr.iops.metrics.iopsRead.name = 읽기 IOPS
host-domcompmgr.iops.metrics.iopsRead.description = vSAN 백엔드의 관점에서 vSAN 호스트 읽기 IOPS입니다.
host-domcompmgr.iops.metrics.iopsWrite.name = 쓰기 IOPS
host-domcompmgr.iops.metrics.iopsWrite.description = vSAN 백엔드의 관점에서 vSAN 호스트 쓰기 IOPS입니다.
host-domcompmgr.iops.metrics.iopsResyncRead.name = 다시 동기화 읽기 IOPS
host-domcompmgr.iops.metrics.iopsResyncRead.description = 다시 동기화 트래픽의 vSAN 호스트 읽기 IOPS로, vSAN 백엔드의 관점에서 개체 다시 동기화로 인한 정책 변경, 복구, 유지 보수 모드/제거 및 재조정을 포함합니다.
host-domcompmgr.iops.metrics.iopsRecWrite.name = 복구 쓰기 IOPS
host-domcompmgr.iops.metrics.iopsRecWrite.description = vSAN 백엔드의 관점에서 vSAN 호스트 복구 쓰기 IOPS입니다.
host-domcompmgr.iops.metrics.iopsUnmap.name = 매핑 해제 IOPS
host-domcompmgr.iops.metrics.iopsUnmap.description = 이 호스트의 디스크 그룹으로 이동하는 트리밍/매핑 해제 명령의 IOPS입니다.
host-domcompmgr.iops.metrics.iopsRecUnmap.name = 복구 매핑 해제 IOPS
host-domcompmgr.iops.metrics.iopsRecUnmap.description = 이 호스트의 디스크 그룹으로 이동하는 복구 트리밍/매핑 해제 명령의 IOPS입니다.

host-domcompmgr.throughput.name = 처리량
host-domcompmgr.throughput.description = vSAN 백엔드 호스트 처리량.
host-domcompmgr.throughput.metrics.throughputRead.name = 읽기 처리량
host-domcompmgr.throughput.metrics.throughputRead.description = vSAN 백엔드의 관점에서 vSAN 호스트 읽기 처리량입니다.
host-domcompmgr.throughput.metrics.throughputWrite.name = 쓰기 처리량
host-domcompmgr.throughput.metrics.throughputWrite.description = vSAN 백엔드의 관점에서 vSAN 호스트 쓰기 처리량입니다.
host-domcompmgr.throughput.metrics.tputResyncRead.name = 다시 동기화 읽기 처리량
host-domcompmgr.throughput.metrics.tputResyncRead.description = 다시 동기화 트래픽의 vSAN 호스트 읽기 처리량으로, vSAN 백엔드의 관점에서 개체 다시 동기화로 인한 정책 변경, 복구, 유지 보수 모드/제거 및 재조정을 포함합니다.
host-domcompmgr.throughput.metrics.throughputRecWrite.name = 복구 쓰기 처리량
host-domcompmgr.throughput.metrics.throughputRecWrite.description = vSAN 백엔드의 관점에서 vSAN 호스트 복구 쓰기 처리량입니다.

host-domcompmgr.throughputUnmap.name = 트리밍/매핑 해제 처리량
host-domcompmgr.throughputUnmap.description = 이 호스트의 디스크 그룹으로 이동하는 트리밍/매핑 해제 처리량입니다.
host-domcompmgr.throughputUnmap.metrics.throughputUnmap.name = 매핑 해제 처리량
host-domcompmgr.throughputUnmap.metrics.throughputUnmap.description = 이 호스트의 디스크 그룹으로 이동하는 총 트리밍/매핑 해제 처리량입니다.
host-domcompmgr.throughputUnmap.metrics.throughputRecUnmap.name = 복구 매핑 해제 처리량
host-domcompmgr.throughputUnmap.metrics.throughputRecUnmap.description = 이 호스트의 디스크 그룹으로 이동하는 총 복구 트리밍/매핑 해제 처리량입니다.

host-domcompmgr.latency.name = 지연 시간
host-domcompmgr.latency.description = vSAN 백엔드 호스트 지연 시간.
host-domcompmgr.latency.metrics.latencyAvgRead.name = 읽기 지연 시간
host-domcompmgr.latency.metrics.latencyAvgRead.description = vSAN 백엔드의 관점에서 vSAN 호스트 읽기 IO 평균 지연 시간입니다.
host-domcompmgr.latency.metrics.latencyAvgWrite.name = 쓰기 지연 시간
host-domcompmgr.latency.metrics.latencyAvgWrite.description = vSAN 백엔드의 관점에서 vSAN 호스트 쓰기 IO 평균 지연 시간입니다.
host-domcompmgr.latency.metrics.latAvgResyncRead.name = 다시 동기화 읽기 지연 시간
host-domcompmgr.latency.metrics.latAvgResyncRead.description = 다시 동기화 트래픽의 vSAN 호스트 읽기 평균 지연 시간으로, vSAN 백엔드의 관점에서 개체 다시 동기화로 인한 정책 변경, 복구, 유지 보수 모드/제거 및 재조정을 포함합니다.
host-domcompmgr.latency.metrics.latencyAvgRecWrite.name = 복구 쓰기 지연 시간
host-domcompmgr.latency.metrics.latencyAvgRecWrite.description = vSAN 백엔드의 관점에서 vSAN 호스트 복구 쓰기 IO 평균 지연 시간입니다.
host-domcompmgr.latency.metrics.latencyAvgUnmap.name = 매핑 해제 지연 시간
host-domcompmgr.latency.metrics.latencyAvgUnmap.description = 이 호스트의 디스크 그룹으로 이동하는 평균 트리밍/매핑 해제 지연 시간입니다.
host-domcompmgr.latency.metrics.latencyAvgRecUnmap.name = 복구 매핑 해제 지연 시간
host-domcompmgr.latency.metrics.latencyAvgRecUnmap.description = 이 호스트의 디스크 그룹으로 이동하는 평균 트리밍/매핑 해제 지연 시간입니다.




host-domcompmgr.congestion.name = 정체
host-domcompmgr.congestion.description = vSAN 백엔드 호스트 정체.
host-domcompmgr.congestion.metrics.congestion.name = 정체
host-domcompmgr.congestion.metrics.congestion.description = vSAN 백엔드의 관점에서 vSAN 호스트 정체입니다.


host-domcompmgr.oio.name = 미결 IO
host-domcompmgr.oio.description = vSAN 백엔드 호스트 미결 IO.
host-domcompmgr.oio.metrics.oio.name = 미결 IO
host-domcompmgr.oio.metrics.oio.description = vSAN 백엔드의 관점에서 vSAN 호스트 미결 IO입니다.

#
# CacheDisk
#
com.vmware.vsan.perf.entity.cache-disk.description = 캐시 계층 디스크에 대한 메트릭.

#
# CacheDiskGraphs
#
cache-disk.iopsDev.name = 물리적/펌웨어 계층 IOPS
cache-disk.iopsDev.description = vSAN 캐시 계층 디스크 물리적/펌웨어 계층 IOPS.
cache-disk.iopsDev.metrics.iopsDevRead.name = 물리적 계층 읽기 IOPS
cache-disk.iopsDev.metrics.iopsDevRead.description = vSAN 디스크 물리적/펌웨어 계층 읽기 IOPS입니다.
cache-disk.iopsDev.metrics.iopsDevWrite.name = 물리적 계층 쓰기 IOPS
cache-disk.iopsDev.metrics.iopsDevWrite.description = vSAN 디스크 물리적/펌웨어 계층 쓰기 IOPS입니다.


cache-disk.throughputDev.name = 물리적/펌웨어 계층 처리량
cache-disk.throughputDev.description = vSAN 캐시 계층 디스크 물리적/펌웨어 계층 처리량.
cache-disk.throughputDev.metrics.throughputDevRead.name = 물리적 계층 읽기 처리량
cache-disk.throughputDev.metrics.throughputDevRead.description = vSAN 디스크 물리적/펌웨어 계층 읽기 처리량입니다.
cache-disk.throughputDev.metrics.throughputDevWrite.name = 물리적 계층 쓰기 처리량
cache-disk.throughputDev.metrics.throughputDevWrite.description = vSAN 디스크 물리적/펌웨어 계층 쓰기 처리량입니다.


cache-disk.latencyDev.name = 물리적/펌웨어 계층 지연 시간
cache-disk.latencyDev.description = vSAN 캐시 계층 디스크 물리적/펌웨어 계층 지연 시간입니다.
cache-disk.latencyDev.metrics.latencyDevRead.name = 물리적 계층 읽기 지연 시간
cache-disk.latencyDev.metrics.latencyDevRead.description = vSAN 디스크 물리적/펌웨어 계층 읽기 지연 시간입니다.
cache-disk.latencyDev.metrics.latencyDevWrite.name = 물리적 계층 쓰기 지연 시간
cache-disk.latencyDev.metrics.latencyDevWrite.description = vSAN 디스크 물리적/펌웨어 계층 쓰기 지연 시간입니다.
cache-disk.latencyDev.metrics.latencyDevGAvg.name = 게스트 평균 지연 시간
cache-disk.latencyDev.metrics.latencyDevGAvg.description = vSAN 디스크 게스트 IO 지연 시간(총 지연 시간)입니다.
cache-disk.latencyDev.metrics.latencyDevDAvg.name = 디바이스 평균 지연 시간
cache-disk.latencyDev.metrics.latencyDevDAvg.description = vSAN 디스크 IO 디바이스 지연 시간(HBA에서 백엔드 스토리지까지)입니다.

#
# CapacityDisk
#
com.vmware.vsan.perf.entity.capacity-disk.description = 용량 계층 디스크에 대한 메트릭.

#
# CapacityDiskGraphs
#
capacity-disk.iopsDev.name = 물리적/펌웨어 계층 IOPS
capacity-disk.iopsDev.description = vSAN 용량 계층 디스크 물리적/펌웨어 계층 IOPS.
capacity-disk.iopsDev.metrics.iopsDevRead.name = 물리적 계층 읽기 IOPS
capacity-disk.iopsDev.metrics.iopsDevRead.description = vSAN 디스크 물리적/펌웨어 계층 읽기 IOPS입니다.
capacity-disk.iopsDev.metrics.iopsDevWrite.name = 물리적 계층 쓰기 IOPS
capacity-disk.iopsDev.metrics.iopsDevWrite.description = vSAN 디스크 물리적/펌웨어 계층 쓰기 IOPS입니다.

capacity-disk.throughputDev.name = 물리적/펌웨어 계층 처리량
capacity-disk.throughputDev.description = vSAN 용량 계층 디스크 물리적/펌웨어 계층 처리량.
capacity-disk.throughputDev.metrics.throughputDevRead.name = 물리적 계층 읽기 처리량
capacity-disk.throughputDev.metrics.throughputDevRead.description = vSAN 디스크 물리적/펌웨어 계층 읽기 처리량입니다.
capacity-disk.throughputDev.metrics.throughputDevWrite.name = 물리적 계층 쓰기 처리량
capacity-disk.throughputDev.metrics.throughputDevWrite.description = vSAN 디스크 물리적/펌웨어 계층 쓰기 처리량입니다.



capacity-disk.latencyDev.name = 물리적/펌웨어 계층 지연 시간
capacity-disk.latencyDev.description = vSAN 용량 계층 디스크 물리적/펌웨어 계층 지연 시간입니다.
capacity-disk.latencyDev.metrics.latencyDevRead.name = 물리적 계층 읽기 지연 시간
capacity-disk.latencyDev.metrics.latencyDevRead.description = vSAN 디스크 물리적/펌웨어 계층 읽기 지연 시간입니다.
capacity-disk.latencyDev.metrics.latencyDevWrite.name = 물리적 계층 쓰기 지연 시간
capacity-disk.latencyDev.metrics.latencyDevWrite.description = vSAN 디스크 물리적/펌웨어 계층 쓰기 지연 시간입니다.
capacity-disk.latencyDev.metrics.latencyDevGAvg.name = 게스트 평균 지연 시간
capacity-disk.latencyDev.metrics.latencyDevGAvg.description = vSAN 디스크 게스트 IO 지연 시간(총 지연 시간)입니다.
capacity-disk.latencyDev.metrics.latencyDevDAvg.name = 디바이스 평균 지연 시간
capacity-disk.latencyDev.metrics.latencyDevDAvg.description = vSAN 디스크 IO 디바이스 지연 시간(HBA에서 백엔드 스토리지까지)입니다.


capacity-disk.iops.name = vSAN 계층 IOPS
capacity-disk.iops.description = 용량 계층 디스크 vSAN 계층 IOPS입니다.
capacity-disk.iops.metrics.iopsRead.name = vSAN 계층 읽기 IOPS
capacity-disk.iops.metrics.iopsRead.description = 디스크 vSAN 계층 읽기 IOPS입니다.
capacity-disk.iops.metrics.iopsWrite.name = vSAN 계층 쓰기 IOPS
capacity-disk.iops.metrics.iopsWrite.description = 디스크 vSAN 계층 쓰기 IOPS입니다.


capacity-disk.latency.name = vSAN 계층 지연 시간
capacity-disk.latency.description = 용량 계층 디스크 vSAN 계층 지연 시간입니다.
capacity-disk.latency.metrics.latencyRead.name = vSAN 계층 읽기 지연 시간
capacity-disk.latency.metrics.latencyRead.description = 디스크 vSAN 계층 읽기 지연 시간입니다.
capacity-disk.latency.metrics.latencyWrite.name = vSAN 계층 쓰기 지연 시간
capacity-disk.latency.metrics.latencyWrite.description = 디스크 vSAN 계층 쓰기 지연 시간입니다.

#
# DiskGroup
#
com.vmware.vsan.perf.entity.disk-group.description = 디스크 그룹에 대한 메트릭입니다.

#
# DiskGroupGraphs
#
disk-group.iopsFrontend.name = 프런트 엔드(게스트) IOPS
disk-group.iopsFrontend.description = vSAN 디스크 그룹(캐시 계층 디스크) 프런트 엔드(게스트) IOPS입니다.
disk-group.iopsFrontend.metrics.iopsRead.name = 프런트 엔드 읽기 IOPS
disk-group.iopsFrontend.metrics.iopsRead.description = RC 읽기 누락을 포함한 vSAN 디스크 그룹(캐시 계층 디스크) 프런트 엔드 읽기 IOPS입니다.
disk-group.iopsFrontend.metrics.iopsWrite.name = 프런트 엔드 쓰기 IOPS
disk-group.iopsFrontend.metrics.iopsWrite.description = vSAN 디스크 그룹(캐시 계층 디스크) 프런트 엔드 쓰기 IOPS입니다.
disk-group.iopsFrontend.metrics.iopsRcRead.name = 읽기 캐시 읽기 IOPS
disk-group.iopsFrontend.metrics.iopsRcRead.description = vSAN 디스크 그룹(캐시 계층 디스크) 읽기 캐시 읽기 IOPS입니다.
disk-group.iopsFrontend.metrics.iopsWbWrite.name = 쓰기 버퍼 쓰기 IOPS
disk-group.iopsFrontend.metrics.iopsWbWrite.description = vSAN 디스크 그룹(캐시 계층 디스크) 쓰기 버퍼 쓰기 IOPS입니다.


disk-group.throughputFrontend.name = 프런트 엔드(게스트) 처리량
disk-group.throughputFrontend.description = vSAN 디스크 그룹(캐시 계층 디스크) 프런트 엔드(게스트) 처리량입니다.
disk-group.throughputFrontend.metrics.throughputRead.name = 프런트 엔드 읽기 처리량
disk-group.throughputFrontend.metrics.throughputRead.description = vSAN 디스크 그룹(캐시 계층 디스크) 프런트 엔드 읽기 처리량입니다.
disk-group.throughputFrontend.metrics.throughputWrite.name = 프런트 엔드 쓰기 처리량
disk-group.throughputFrontend.metrics.throughputWrite.description = vSAN 디스크 그룹(캐시 계층 디스크) 프런트 엔드 쓰기 처리량입니다.


disk-group.latencyFrontend.name = 프런트 엔드(게스트) 지연 시간
disk-group.latencyFrontend.description = vSAN 디스크 그룹(캐시 계층 디스크) 프런트 엔드(게스트) 지연 시간입니다.
disk-group.latencyFrontend.metrics.latencyAvgRead.name = 프런트 엔드 읽기 지연 시간
disk-group.latencyFrontend.metrics.latencyAvgRead.description = vSAN 디스크 그룹(캐시 계층 디스크) 프런트 엔드 읽기 지연 시간입니다.
disk-group.latencyFrontend.metrics.latencyAvgWrite.name = 프런트 엔드 쓰기 지연 시간
disk-group.latencyFrontend.metrics.latencyAvgWrite.description = vSAN 디스크 그룹(캐시 계층 디스크) 프런트 엔드 쓰기 지연 시간입니다.
disk-group.latencyFrontend.metrics.latencyRcRead.name = 읽기 캐시 읽기 지연 시간
disk-group.latencyFrontend.metrics.latencyRcRead.description = vSAN 디스크 그룹(캐시 계층 디스크) 읽기 캐시 읽기 지연 시간입니다.
disk-group.latencyFrontend.metrics.latencyWbWrite.name = 쓰기 버퍼 쓰기 지연 시간
disk-group.latencyFrontend.metrics.latencyWbWrite.description = vSAN 디스크 그룹(캐시 계층 디스크) 쓰기 버퍼 쓰기 지연 시간입니다.


disk-group.iopsOverhead.name = 오버헤드 IOPS
disk-group.iopsOverhead.description = vSAN 디스크 그룹(캐시 계층 디스크) 오버헤드 IOPS입니다.
disk-group.iopsOverhead.metrics.iopsRcWrite.name = 읽기 캐시 쓰기 IOPS
disk-group.iopsOverhead.metrics.iopsRcWrite.description = vSAN 디스크 그룹(캐시 계층 디스크) 읽기 캐시 쓰기 IOPS입니다.
disk-group.iopsOverhead.metrics.iopsWbRead.name = 쓰기 버퍼 읽기 IOPS
disk-group.iopsOverhead.metrics.iopsWbRead.description = vSAN 디스크 그룹(캐시 계층 디스크) 쓰기 버퍼 읽기 IOPS입니다.


disk-group.latencyOverhead.name = 오버헤드 IO 지연 시간
disk-group.latencyOverhead.description = vSAN 디스크 그룹(캐시 계층 디스크) 오버헤드 IO 지연 시간입니다.
disk-group.latencyOverhead.metrics.latencyRcWrite.name = 읽기 캐시 쓰기 지연 시간
disk-group.latencyOverhead.metrics.latencyRcWrite.description = vSAN 디스크 그룹(캐시 계층 디스크) 읽기 캐시 쓰기 지연 시간입니다.
disk-group.latencyOverhead.metrics.latencyWbRead.name = 쓰기 버퍼 읽기 지연 시간
disk-group.latencyOverhead.metrics.latencyWbRead.description = vSAN 디스크 그룹(캐시 계층 디스크) 쓰기 버퍼 읽기 지연 시간입니다.


disk-group.rcHitRate.name = 읽기 캐시 적중률
disk-group.rcHitRate.description = vSAN 디스크 그룹(캐시 계층 디스크) 읽기 캐시 적중률입니다.
disk-group.rcHitRate.metrics.rcHitRate.name = 읽기 캐시 적중률
disk-group.rcHitRate.metrics.rcHitRate.description = vSAN 디스크 그룹(캐시 계층 디스크) 읽기 캐시 적중률입니다.


disk-group.evictions.name = 제거
disk-group.evictions.description = vSAN 디스크 그룹(캐시 계층 디스크) 제거입니다.
disk-group.evictions.metrics.warEvictions.name = 캐시 무효화
disk-group.evictions.metrics.warEvictions.description = 덮어쓰기로 인해 무효화된 캐시 행입니다.
disk-group.evictions.metrics.quotaEvictions.name = 제거
disk-group.evictions.metrics.quotaEvictions.description = 읽기 캐시 경합으로 인한 제거입니다.


disk-group.wbFreePct.name = 쓰기 버퍼 해제 백분율
disk-group.wbFreePct.description = vSAN 디스크 그룹(캐시 계층 디스크) 쓰기 버퍼 해제 백분율입니다.
disk-group.wbFreePct.metrics.wbFreePct.name = 쓰기 버퍼 해제 백분율
disk-group.wbFreePct.metrics.wbFreePct.description = vSAN 디스크 그룹(캐시 계층 디스크) 쓰기 버퍼 해제 백분율입니다.

disk-group.capacity.name = 용량 및 사용량
disk-group.capacity.description = vSAN 디스크 그룹 용량 및 사용량.
disk-group.capacity.metrics.capacity.name = 용량
disk-group.capacity.metrics.capacity.description = vSAN 디스크 그룹 용량입니다.
disk-group.capacity.metrics.capacityUsed.name = 사용된 용량
disk-group.capacity.metrics.capacityUsed.description = vSAN 디스크 그룹 사용된 용량입니다.
disk-group.capacity.metrics.capacityReserved.name = 예약된 용량
disk-group.capacity.metrics.capacityReserved.description = vSAN 디스크 그룹 예약된 용량입니다.
disk-group.capacity.metrics.rcSize.name = 읽기 캐시 크기
disk-group.capacity.metrics.rcSize.description = vSAN 디스크 그룹 읽기 캐시 크기입니다.
disk-group.capacity.metrics.wbSize.name = 쓰기 버퍼 크기
disk-group.capacity.metrics.wbSize.description = vSAN 디스크 그룹 쓰기 버퍼 크기입니다.


disk-group.destage.name = 캐시 디스크 스테이징 해제율
disk-group.destage.description = 캐시 디스크에서 용량 디스크로 데이터 스테이징 해제의 처리량.
disk-group.destage.metrics.ssdBytesDrained.name = SSD에서 바이트 스테이징 해제
disk-group.destage.metrics.ssdBytesDrained.description = 캐시 디스크에서 용량 디스크로 스테이징 해제된 SSD 바이트의 처리량.
disk-group.destage.metrics.zeroBytesDrained.name = 0바이트 스테이징 해제
disk-group.destage.metrics.zeroBytesDrained.description = 용량 디스크로 스테이징 해제된 0바이트의 처리량.

disk-group.congestions.name = 정체
disk-group.congestions.description = vSAN 디스크 그룹 정체입니다.
disk-group.congestions.metrics.memCongestion.name = 메모리 정체
disk-group.congestions.metrics.memCongestion.description = vSAN 디스크 그룹 메모리 정체입니다.
disk-group.congestions.metrics.slabCongestion.name = 슬래브 정체
disk-group.congestions.metrics.slabCongestion.description = vSAN 디스크 그룹 슬래브 정체입니다.
disk-group.congestions.metrics.ssdCongestion.name = SSD 정체
disk-group.congestions.metrics.ssdCongestion.description = vSAN 디스크 그룹 SSD 정체입니다.
disk-group.congestions.metrics.iopsCongestion.name = IOPS 정체
disk-group.congestions.metrics.iopsCongestion.description = vSAN 디스크 그룹 IOPS 정체입니다.
disk-group.congestions.metrics.logCongestion.name = 로그 정체
disk-group.congestions.metrics.logCongestion.description = vSAN 디스크 그룹 로그 정체입니다.
disk-group.congestions.metrics.compCongestion.name = Comp 정체
disk-group.congestions.metrics.compCongestion.description = vSAN 디스크 그룹 Comp 정체입니다.

disk-group.oobCongestion.name = 로그 정체 시 사용할 수 있는 대역폭입니다.
disk-group.oobCongestion.description = 로그 누적이 상위 워터마크를 초과할 때 디스테이징 속도로 지속 가능한 대역폭입니다. 로그 누적은 바인딩된 메모리 사용 및 마운트 시간으로 제한됩니다. 4k 블록 크기 IO의 로그 누적이 가장 높습니다. 로그 누적이 상위 워터마크를 초과하면 현재 디스테이징 속도로 지원할 수 있는 범위로 대역폭을 제한합니다.
disk-group.oobCongestion.metrics.bytesPerSecondBandwidth.name = LogCongestionTput
disk-group.oobCongestion.metrics.bytesPerSecondBandwidth.description = 로그 누적이 상위 워터마크를 초과하기 때문에 현재 디스테이징 속도로 지속할 수 있는 대역폭입니다.

disk-group.oio.name = 미결 IO
disk-group.oio.description = 디스크 그룹의 미결 쓰기 IO.
disk-group.oio.metrics.oioWrite.name = 미결 쓰기 OP
disk-group.oio.metrics.oioWrite.description = 디스크 그룹의 미결 쓰기 작업 수.
disk-group.oio.metrics.oioRecWrite.name = 미결 복구 쓰기 OP
disk-group.oio.metrics.oioRecWrite.description = 디스크 그룹의 미결 복구 쓰기 작업 수.


disk-group.oioSize.name = 미결 IO 크기
disk-group.oioSize.description = 디스크 그룹의 미결 쓰기 IO 크기.
disk-group.oioSize.metrics.oioWriteSize.name = 미결 쓰기 IO 크기
disk-group.oioSize.metrics.oioWriteSize.description = 디스크 그룹의 미결 쓰기 IO 크기.
disk-group.oioSize.metrics.oioRecWriteSize.name = 미결 복구 쓰기 IO 크기
disk-group.oioSize.metrics.oioRecWriteSize.description = 디스크 그룹의 미결 복구 쓰기 IO 크기.


disk-group.schedulerIOPct.name = 지연된 IO 백분율
disk-group.schedulerIOPct.description = vSAN 내부 대기열을 통과하는 IO 백분율입니다.
disk-group.schedulerIOPct.metrics.iopsDelayPctSched.name = 지연된 IO 백분율
disk-group.schedulerIOPct.metrics.iopsDelayPctSched.description = vSAN 내부 대기열을 통과하는 IO 백분율입니다.

disk-group.schedulerLatency.name = 지연된 IO 평균 지연 시간
disk-group.schedulerLatency.description = vSAN 내부 대기열을 통과하는 IO의 평균 지연 시간입니다.
disk-group.schedulerLatency.metrics.latencyDelaySched.name = 지연된 IO 평균 지연 시간
disk-group.schedulerLatency.metrics.latencyDelaySched.description = vSAN 내부 대기열을 통과하는 총 IO의 평균 지연 시간입니다.
disk-group.schedulerLatency.metrics.latencySchedQueueNS.name = 네임스페이스 대기열의 지연 시간
disk-group.schedulerLatency.metrics.latencySchedQueueNS.description = vSAN 내부 스케줄러의 네임스페이스 IO 대기열 지연 시간입니다.
disk-group.schedulerLatency.metrics.latencySchedQueueRec.name = 복구 대기열의 지연 시간
disk-group.schedulerLatency.metrics.latencySchedQueueRec.description = vSAN 내부 스케줄러의 복구 IO 대기열 지연 시간입니다.
disk-group.schedulerLatency.metrics.latencySchedQueueVM.name = VM 대기열의 지연 시간
disk-group.schedulerLatency.metrics.latencySchedQueueVM.description = vSAN 내부 스케줄러의 VM IO 대기열 지연 시간입니다.
disk-group.schedulerLatency.metrics.latencySchedQueueMeta.name = 메타 대기열의 지연 시간
disk-group.schedulerLatency.metrics.latencySchedQueueMeta.description = vSAN 내부 스케줄러의 메타 IO 대기열 지연 시간입니다.


disk-group.schedulerIOPS.name = 지연된 IOPS
disk-group.schedulerIOPS.description = vSAN 내부 대기열을 통과하는 지연된 IO의 IOPS입니다.
disk-group.schedulerIOPS.metrics.iopsSched.name = 총 지연된 IOPS
disk-group.schedulerIOPS.metrics.iopsSched.description = vSAN 내부 대기열을 통과하는 총 IO의 IOPS입니다.
disk-group.schedulerIOPS.metrics.iopsSchedQueueNS.name = 네임스페이스 대기열의 IOPS
disk-group.schedulerIOPS.metrics.iopsSchedQueueNS.description = vSAN 내부 스케줄러의 네임스페이스 IO 대기열 IOPS입니다.
disk-group.schedulerIOPS.metrics.iopsSchedQueueRec.name = 복구 대기열의 IOPS
disk-group.schedulerIOPS.metrics.iopsSchedQueueRec.description = vSAN 내부 스케줄러의 복구 IO 대기열 IOPS입니다.
disk-group.schedulerIOPS.metrics.iopsSchedQueueVM.name = VM 대기열의 IOPS
disk-group.schedulerIOPS.metrics.iopsSchedQueueVM.description = vSAN 내부 스케줄러의 VM IO 대기열 IOPS입니다.
disk-group.schedulerIOPS.metrics.iopsSchedQueueMeta.name = 메타 대기열의 IOPS
disk-group.schedulerIOPS.metrics.iopsSchedQueueMeta.description = vSAN 내부 스케줄러의 메타 IO 대기열 IOPS입니다.


disk-group.schedulerTput.name = 지연된 IO 처리량
disk-group.schedulerTput.description = vSAN 내부 대기열을 통과하는 지연된 IO의 처리량입니다.
disk-group.schedulerTput.metrics.throughputSched.name = 총 대기열 처리량
disk-group.schedulerTput.metrics.throughputSched.description = vSAN 내부 스케줄러의 총 지연된 IO 처리량입니다.
disk-group.schedulerTput.metrics.throughputSchedQueueNS.name = 네임스페이스 대기열의 처리량
disk-group.schedulerTput.metrics.throughputSchedQueueNS.description = vSAN 내부 스케줄러의 네임스페이스 IO 대기열 처리량입니다.
disk-group.schedulerTput.metrics.throughputSchedQueueRec.name = 복구 대기열의 처리량
disk-group.schedulerTput.metrics.throughputSchedQueueRec.description = vSAN 내부 스케줄러의 복구 IO 대기열 처리량입니다.
disk-group.schedulerTput.metrics.throughputSchedQueueVM.name = VM 대기열의 처리량
disk-group.schedulerTput.metrics.throughputSchedQueueVM.description = vSAN 내부 스케줄러의 VM IO 대기열 처리량입니다.
disk-group.schedulerTput.metrics.throughputSchedQueueMeta.name = 메타 대기열의 처리량
disk-group.schedulerTput.metrics.throughputSchedQueueMeta.description = vSAN 내부 스케줄러의 메타 IO 대기열 처리량입니다.


disk-group.iopsResync.name = 다시 동기화 IOPS
disk-group.iopsResync.description = 다시 동기화 트래픽의 vSAN 디스크 그룹 수준 IOPS로, 개체 다시 동기화로 인한 정책 변경, 복구, 유지 보수 모드/제거 및 재조정을 포함합니다.
disk-group.iopsResync.metrics.iopsResyncReadPolicy.name = 정책 변경 읽기
disk-group.iopsResync.metrics.iopsResyncReadPolicy.description = 정책 변경에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 읽기 IOPS입니다.
disk-group.iopsResync.metrics.iopsResyncReadDecom.name = 제거 읽기
disk-group.iopsResync.metrics.iopsResyncReadDecom.description = 유지 보수 모드 및 개체 제거에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 읽기 IOPS입니다.
disk-group.iopsResync.metrics.iopsResyncReadRebalance.name = 재조정 읽기
disk-group.iopsResync.metrics.iopsResyncReadRebalance.description = 개체 재조정에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 읽기 IOPS입니다.
disk-group.iopsResync.metrics.iopsResyncReadFixComp.name = 복구 읽기
disk-group.iopsResync.metrics.iopsResyncReadFixComp.description = 개체 복구에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 읽기 IOPS입니다.
disk-group.iopsResync.metrics.iopsResyncWritePolicy.name = 정책 변경 쓰기
disk-group.iopsResync.metrics.iopsResyncWritePolicy.description = 정책 변경에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 쓰기 IOPS입니다.
disk-group.iopsResync.metrics.iopsResyncWriteDecom.name = 제거 쓰기
disk-group.iopsResync.metrics.iopsResyncWriteDecom.description = 유지 보수 모드 및 개체 제거에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 쓰기 IOPS입니다.
disk-group.iopsResync.metrics.iopsResyncWriteRebalance.name = 재조정 쓰기
disk-group.iopsResync.metrics.iopsResyncWriteRebalance.description = 개체 재조정에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 쓰기 IOPS입니다.
disk-group.iopsResync.metrics.iopsResyncWriteFixComp.name = 복구 쓰기
disk-group.iopsResync.metrics.iopsResyncWriteFixComp.description = 개체 복구에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 쓰기 IOPS입니다.

disk-group.tputResync.name = 다시 동기화 처리량
disk-group.tputResync.description = 다시 동기화 트래픽의 vSAN 디스크 그룹 수준 처리량으로, 개체 다시 동기화로 인한 정책 변경, 복구, 유지 보수 모드/제거 및 재조정을 포함합니다.
disk-group.tputResync.metrics.tputResyncReadPolicy.name = 정책 변경 읽기
disk-group.tputResync.metrics.tputResyncReadPolicy.description = 정책 변경에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 읽기 처리량입니다.
disk-group.tputResync.metrics.tputResyncReadDecom.name = 제거 읽기
disk-group.tputResync.metrics.tputResyncReadDecom.description = 유지 보수 모드 및 개체 제거에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 읽기 처리량입니다.
disk-group.tputResync.metrics.tputResyncReadRebalance.name = 재조정 읽기
disk-group.tputResync.metrics.tputResyncReadRebalance.description = 개체 재조정에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 읽기 처리량입니다.
disk-group.tputResync.metrics.tputResyncReadFixComp.name = 복구 읽기
disk-group.tputResync.metrics.tputResyncReadFixComp.description = 개체 복구에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 읽기 처리량입니다.
disk-group.tputResync.metrics.tputResyncWritePolicy.name = 정책 변경 쓰기
disk-group.tputResync.metrics.tputResyncWritePolicy.description = 정책 변경에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 쓰기 처리량입니다.
disk-group.tputResync.metrics.tputResyncWriteDecom.name = 제거 쓰기
disk-group.tputResync.metrics.tputResyncWriteDecom.description = 유지 보수 모드 및 개체 제거에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 쓰기 처리량입니다.
disk-group.tputResync.metrics.tputResyncWriteRebalance.name = 재조정 쓰기
disk-group.tputResync.metrics.tputResyncWriteRebalance.description = 개체 재조정에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 쓰기 처리량입니다.
disk-group.tputResync.metrics.tputResyncWriteFixComp.name = 복구 쓰기
disk-group.tputResync.metrics.tputResyncWriteFixComp.description = 개체 복구에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 쓰기 처리량입니다.

disk-group.latResync.name = 다시 동기화 지연 시간
disk-group.latResync.description = 다시 동기화 트래픽의 vSAN 디스크 그룹 수준 평균 지연 시간으로, 개체 다시 동기화로 인한 정책 변경, 복구, 유지 보수 모드/제거 및 재조정을 포함합니다.
disk-group.latResync.metrics.latResyncReadPolicy.name = 정책 변경 읽기
disk-group.latResync.metrics.latResyncReadPolicy.description = 정책 변경에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 읽기 지연 시간입니다.
disk-group.latResync.metrics.latResyncReadDecom.name = 제거 읽기
disk-group.latResync.metrics.latResyncReadDecom.description = 유지 보수 모드 및 개체 제거에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 읽기 지연 시간입니다.
disk-group.latResync.metrics.latResyncReadRebalance.name = 재조정 읽기
disk-group.latResync.metrics.latResyncReadRebalance.description = 개체 재조정에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 읽기 지연 시간입니다.
disk-group.latResync.metrics.latResyncReadFixComp.name = 복구 읽기
disk-group.latResync.metrics.latResyncReadFixComp.description = 개체 복구에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 읽기 지연 시간입니다.
disk-group.latResync.metrics.latResyncWritePolicy.name = 정책 변경 쓰기
disk-group.latResync.metrics.latResyncWritePolicy.description = 정책 변경에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 쓰기 지연 시간입니다.
disk-group.latResync.metrics.latResyncWriteDecom.name = 제거 쓰기
disk-group.latResync.metrics.latResyncWriteDecom.description = 유지 보수 모드 및 개체 제거에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 쓰기 지연 시간입니다.
disk-group.latResync.metrics.latResyncWriteRebalance.name = 재조정 쓰기
disk-group.latResync.metrics.latResyncWriteRebalance.description = 개체 재조정에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 쓰기 지연 시간입니다.
disk-group.latResync.metrics.latResyncWriteFixComp.name = 복구 쓰기
disk-group.latResync.metrics.latResyncWriteFixComp.description = 개체 복구에 의해 유발된 다시 동기화 트래픽에 대한 vSAN 디스크 그룹 수준 쓰기 지연 시간입니다.

#
# VirtualSCSI
#
com.vmware.vsan.perf.entity.vscsi.description = 가상 시스템의 가상 SCSI에 대한 메트릭.

#
# VirtualSCSIGraphs
#
vscsi.iops.name = 가상 SCSI IOPS
vscsi.iops.description = 가상 시스템 VSCSI IOPS입니다.
vscsi.iops.metrics.iopsRead.name = 읽기 IOPS
vscsi.iops.metrics.iopsRead.description = 가상 시스템 VSCSI 읽기 IOPS입니다.
vscsi.iops.metrics.iopsWrite.name = 쓰기 IOPS
vscsi.iops.metrics.iopsWrite.description = 가상 시스템 VSCSI 쓰기 IOPS입니다.


vscsi.throughput.name = 가상 SCSI 처리량
vscsi.throughput.description = 가상 시스템 VSCSI 처리량입니다.
vscsi.throughput.metrics.throughputRead.name = 읽기 처리량
vscsi.throughput.metrics.throughputRead.description = 가상 시스템 VSCSI 읽기 처리량입니다.
vscsi.throughput.metrics.throughputWrite.name = 쓰기 처리량
vscsi.throughput.metrics.throughputWrite.description = 가상 시스템 VSCSI 쓰기 처리량입니다.


vscsi.latency.name = 가상 SCSI 지연 시간
vscsi.latency.description = 가상 시스템 VSCSI 지연 시간입니다.
vscsi.latency.metrics.latencyRead.name = 읽기 지연 시간
vscsi.latency.metrics.latencyRead.description = 가상 시스템 VSCSI 읽기 지연 시간입니다.
vscsi.latency.metrics.latencyWrite.name = 쓰기 지연 시간
vscsi.latency.metrics.latencyWrite.description = 가상 시스템 VSCSI 쓰기 지연 시간입니다.


#
# VirtualMachine
#
com.vmware.vsan.perf.entity.vm.description = 가상 시스템에 대한 메트릭.


#
# VirtualMachineGraphs
#
vm.iops.name = IOPS
vm.iops.description = 가상 시스템 IOPS입니다.
vm.iops.metrics.iopsRead.name = 읽기 IOPS
vm.iops.metrics.iopsRead.description = 가상 시스템 읽기 IOPS입니다.
vm.iops.metrics.iopsWrite.name = 쓰기 IOPS
vm.iops.metrics.iopsWrite.description = 가상 시스템 쓰기 IOPS입니다.


vm.throughput.name = 처리량
vm.throughput.description = 가상 시스템 처리량입니다.
vm.throughput.metrics.throughputRead.name = 읽기 처리량
vm.throughput.metrics.throughputRead.description = 가상 시스템 읽기 처리량입니다.
vm.throughput.metrics.throughputWrite.name = 쓰기 처리량
vm.throughput.metrics.throughputWrite.description = 가상 시스템 쓰기 처리량입니다.


vm.latency.name = 지연 시간
vm.latency.description = 가상 시스템 지연 시간입니다.
vm.latency.metrics.latencyRead.name = 읽기 지연 시간
vm.latency.metrics.latencyRead.description = 가상 시스템 읽기 지연 시간입니다.
vm.latency.metrics.latencyWrite.name = 쓰기 지연 시간
vm.latency.metrics.latencyWrite.description = 가상 시스템 쓰기 지연 시간입니다.


#
# VirtualDisk
#
com.vmware.vsan.perf.entity.virtual-disk.description = 가상 디스크에 대한 메트릭입니다.


#
# VirtualDiskGraphs
#
virtual-disk.normalized-iops.name = IOPS 및 IOPS 제한
virtual-disk.normalized-iops.description = 이 그래프는 가상 디스크에 대한 표준화된 IOPS를 보여 줍니다. IOPS 제한이 정책에 지정된 경우 이 그래프는 해당 제한도 표시합니다.
virtual-disk.normalized-iops.metrics.iopsLimit.name = 표준화된 IOPS 제한
virtual-disk.normalized-iops.metrics.iopsLimit.description = 적용된 IOPS 제한입니다.
virtual-disk.normalized-iops.metrics.NIOPS.name = 표준화된 IOPS
virtual-disk.normalized-iops.metrics.NIOPS.description = 이는 기본적으로 32KB의 가중 크기를 사용하여 표시되는 IOPS를 보여 줍니다. 즉, 64KB 읽기 또는 쓰기 작업은 2 표준화된 IO를 나타냅니다. 가중 크기는 구성 가능한 매개 변수입니다.


virtual-disk.delayed-normalized-iops.name = 지연된 표준화된 IOPS
virtual-disk.delayed-normalized-iops.description = 이 그래프는 IOPS 제한의 애플리케이션으로 인해 지연된 IO에 대한 표준화된 IOPS를 보여 줍니다.
virtual-disk.delayed-normalized-iops.metrics.NIOPSDelayed.name = 지연된 표준화된 IOPS
virtual-disk.delayed-normalized-iops.metrics.NIOPSDelayed.description = 이는 지연된 표준화된 IO에 대한 IOPS입니다.

#
# VMKNICNetStats
#
com.vmware.vsan.perf.entity.vsan-vnic-net.description = vSAN VMkernel 네트워크 어댑터의 메트릭

#
# VMKNICNetStatsGraphs
#
vsannic.network-bytes-metrics.name = VMkernel 네트워크 어댑터 처리량
vsannic.network-bytes-metrics.description = VMkernel 네트워크 어댑터 네트워크 I/O 처리량입니다.
vsannic.network-bytes-metrics.metrics.rxThroughput.name = 처리량 인바운드
vsannic.network-bytes-metrics.metrics.rxThroughput.description = VMkernel 네트워크 어댑터 처리량 인바운드입니다.
vsannic.network-bytes-metrics.metrics.txThroughput.name = 처리량 아웃바운드
vsannic.network-bytes-metrics.metrics.txThroughput.description = VMkernel 네트워크 어댑터 처리량 아웃바운드입니다.
vsannic.packets-metrics.name = 초당 VMkernel 네트워크 어댑터 패킷 수
vsannic.packets-metrics.description = 초당 VMkernel 네트워크 어댑터 패킷 수입니다.
vsannic.packets-metrics.metrics.rxPackets.name = 초당 인바운드 패킷 수
vsannic.packets-metrics.metrics.rxPackets.description = 초당 VMkernel 네트워크 어댑터 인바운드 패킷 수입니다.
vsannic.packets-metrics.metrics.txPackets.name = 초당 아웃바운드 패킷 수
vsannic.packets-metrics.metrics.txPackets.description = 초당 VMkernel 네트워크 어댑터 아웃바운드 패킷 수입니다.
vsannic.packets-loss-rate.name = VMkernel 네트워크 어댑터 패킷 삭제율
vsannic.packets-loss-rate.description = VMkernel 네트워크 어댑터 패킷 삭제율(백분율)입니다.
vsannic.packets-loss-rate.metrics.rxPacketsLossRate.name = 인바운드 패킷 삭제율
vsannic.packets-loss-rate.metrics.rxPacketsLossRate.description = VMkernel 네트워크 어댑터 인바운드 패킷 삭제율(백분율)입니다.
vsannic.packets-loss-rate.metrics.txPacketsLossRate.name = 아웃바운드 패킷 삭제율
vsannic.packets-loss-rate.metrics.txPacketsLossRate.description = VMkernel 네트워크 어댑터 아웃바운드 패킷 삭제율(백분율)입니다.
vsannic.port-drop-rate.name = VMkernel 네트워크 vSwitch 포트 삭제율
vsannic.port-drop-rate.description = VMkernel 네트워크 vSwitch 포트 삭제율(백분율)입니다.
vsannic.port-drop-rate.metrics.portRxDrops.name = vSwitch 포트의 인바운드 패킷 삭제율
vsannic.port-drop-rate.metrics.portRxDrops.description = VMkernel 네트워크 vSwitch 포트 인바운드 패킷 삭제율(백분율)입니다.
vsannic.port-drop-rate.metrics.portTxDrops.name = vSwitch 포트의 아웃바운드 패킷 삭제율
vsannic.port-drop-rate.metrics.portTxDrops.description = VMkernel 네트워크 vSwitch 포트 아웃바운드 패킷 삭제율(백분율)입니다.

#
# VsanHostNetStats
#
com.vmware.vsan.perf.entity.vsan-host-net.description = vSAN 호스트 네트워크의 메트릭입니다.

#
# VsanHostNetStatsGraphs
#
vsanhost.network-bytes-metrics.name = vSAN 호스트 네트워크 I/O 처리량
vsanhost.network-bytes-metrics.description = VMkernel 네트워크 어댑터가 사용되도록 설정된 모든 vSAN 트래픽의 호스트 네트워크 I/O 처리량입니다.
vsanhost.network-bytes-metrics.metrics.rxThroughput.name = 네트워크 인바운드 처리량
vsanhost.network-bytes-metrics.metrics.rxThroughput.description = VMkernel 네트워크 어댑터가 사용되도록 설정된 모든 vSAN 트래픽의 호스트 처리량 인바운드입니다.
vsanhost.network-bytes-metrics.metrics.txThroughput.name = 네트워크 아웃바운드 처리량
vsanhost.network-bytes-metrics.metrics.txThroughput.description = VMkernel 네트워크 어댑터가 사용되도록 설정된 모든 vSAN 트래픽의 호스트 처리량 아웃바운드입니다.
vsanhost.packets-metrics.name = 초당 vSAN 호스트 패킷 수
vsanhost.packets-metrics.description = VMkernel 네트워크 어댑터가 사용되도록 설정된 모든 vSAN 트래픽의 초당 vSAN 호스트 패킷 수입니다.
vsanhost.packets-metrics.metrics.rxPackets.name = 초당 네트워크 인바운드 패킷 수
vsanhost.packets-metrics.metrics.rxPackets.description = VMkernel 네트워크 어댑터가 사용되도록 설정된 모든 vSAN 트래픽의 초당 호스트 네트워크 인바운드 패킷 수입니다.
vsanhost.packets-metrics.metrics.txPackets.name = 초당 네트워크 아웃바운드 패킷 수
vsanhost.packets-metrics.metrics.txPackets.description = VMkernel 네트워크 어댑터가 사용되도록 설정된 모든 vSAN 트래픽의 초당 호스트 네트워크 아웃바운드 패킷 수입니다.
vsanhost.packets-loss-rate.name = vSAN 호스트 패킷 삭제율
vsanhost.packets-loss-rate.description = VMkernel 네트워크 어댑터가 사용되도록 설정된 모든 vSAN 트래픽의 호스트 패킷 삭제율(백분율)입니다.
vsanhost.packets-loss-rate.metrics.rxPacketsLossRate.name = 네트워크 인바운드 패킷 삭제율
vsanhost.packets-loss-rate.metrics.rxPacketsLossRate.description = VMkernel 네트워크 어댑터가 사용되도록 설정된 모든 vSAN 트래픽의 호스트 인바운드 패킷 삭제율(백분율)입니다.
vsanhost.packets-loss-rate.metrics.txPacketsLossRate.name = 네트워크 아웃바운드 패킷 삭제율
vsanhost.packets-loss-rate.metrics.txPacketsLossRate.description = VMkernel 네트워크 어댑터가 사용되도록 설정된 모든 vSAN 트래픽의 호스트 아웃바운드 패킷 삭제율(백분율)입니다.
vsanhost.port-drop-rate.name = vSAN 호스트 포트 삭제율
vsanhost.port-drop-rate.description = 모든 vSAN VMkernel 네트워크 vSwitch 포트의 vSAN 호스트 포트 삭제율(백분율)입니다.
vsanhost.port-drop-rate.metrics.portRxDrops.name = vSAN 호스트 포트의 인바운드 패킷 삭제율
vsanhost.port-drop-rate.metrics.portRxDrops.description = vSAN 호스트 포트의 인바운드 패킷 삭제율(백분율)입니다.
vsanhost.port-drop-rate.metrics.portTxDrops.name = vSAN 호스트 포트의 아웃바운드 패킷 삭제율
vsanhost.port-drop-rate.metrics.portTxDrops.description = vSAN 호스트 포트의 아웃바운드 패킷 삭제율(백분율)입니다.


#
# RdtNetStats
#
com.vmware.vsan.perf.entity.rdt-net.description = RDT 네트워크에 대한 메트릭입니다.

#
## RdtNetStatsStatsGraphs
#
rdtnet.checksum.name = RDT 네트워크 체크섬
rdtnet.checksum.description = RDT 네트워크 체크섬입니다.
rdtnet.checksum.metrics.checksumMismatchCount.name = RDT 네트워크 체크섬 불일치 수
rdtnet.checksum.metrics.checksumMismatchCount.description = RDT 네트워크 체크섬 불일치 수입니다.

#
# pNICNetStats
#
com.vmware.vsan.perf.entity.vsan-pnic-net.description = vSAN 물리적 NIC의 메트릭

#
# pNICNetStatsGraphs
#
vsanpnic.network-bytes-metrics.name = 물리적 NIC 처리량
vsanpnic.network-bytes-metrics.description = 물리적 NIC 네트워크 I/O 처리량입니다.
vsanpnic.network-bytes-metrics.metrics.rxThroughput.name = 물리적 NIC 처리량 인바운드
vsanpnic.network-bytes-metrics.metrics.rxThroughput.description = 물리적 NIC 처리량 인바운드입니다.
vsanpnic.network-bytes-metrics.metrics.txThroughput.name = 물리적 NIC 처리량 아웃바운드
vsanpnic.network-bytes-metrics.metrics.txThroughput.description = 물리적 NIC 처리량 아웃바운드입니다.
vsanpnic.packets-metrics.name = 초당 물리적 NIC 패킷 수
vsanpnic.packets-metrics.description = 초당 물리적 NIC 패킷 수입니다.
vsanpnic.packets-metrics.metrics.rxPackets.name = 초당 물리적 NIC 인바운드 패킷 수
vsanpnic.packets-metrics.metrics.rxPackets.description = 초당 물리적 NIC 인바운드 패킷 수입니다.
vsanpnic.packets-metrics.metrics.txPackets.name = 초당 물리적 NIC 아웃바운드 패킷 수
vsanpnic.packets-metrics.metrics.txPackets.description = 초당 물리적 NIC 아웃바운드 패킷 수입니다.
vsanpnic.packets-loss-rate.name = pNIC 패킷 오류 비율
vsanpnic.packets-loss-rate.description = 물리적 NIC 패킷의 오류 비율(백분율)입니다.
vsanpnic.packets-loss-rate.metrics.rxPacketsLossRate.name = pNIC 인바운드 패킷 오류 비율
vsanpnic.packets-loss-rate.metrics.rxPacketsLossRate.description = 물리적 NIC 인바운드 패킷의 오류 비율(백분율)입니다.
vsanpnic.packets-loss-rate.metrics.txPacketsLossRate.name = pNIC 아웃바운드 패킷 오류 비율
vsanpnic.packets-loss-rate.metrics.txPacketsLossRate.description = 물리적 NIC 아웃바운드 패킷의 오류 비율(백분율)입니다.
vsanpnic.port-drop-rate.name = 물리적 NIC vSwitch 포트 삭제율
vsanpnic.port-drop-rate.description = 물리적 NIC vSwitch 포트 삭제율(백분율)입니다.
vsanpnic.port-drop-rate.metrics.portRxDrops.name = pNic vSwitch 포트의 인바운드 패킷 삭제율
vsanpnic.port-drop-rate.metrics.portRxDrops.description = 물리적 NIC 인바운드 vSwitch 포트 삭제율(백분율)입니다.
vsanpnic.port-drop-rate.metrics.portTxDrops.name = pNic vSwitch 포트의 아웃바운드 패킷 삭제율
vsanpnic.port-drop-rate.metrics.portTxDrops.description = 물리적 NIC 아웃바운드 vSwitch 포트 삭제율(백분율)입니다.
vsanpnic.pause-count.name = pNIC 흐름 제어
vsanpnic.pause-count.description = 물리적 NIC 802.3x의 일시 중지 비율(백분율)입니다.
vsanpnic.pause-count.metrics.pauseCount.name = pNic 802.3x 일시 중지 비율
vsanpnic.pause-count.metrics.pauseCount.description = 물리적 NIC 802.3x의 일시 중지 비율(백분율)입니다.
vsanpnic.rxCrcErr.name = 물리적 NIC RX CRC 오류
vsanpnic.rxCrcErr.description = 물리적 NIC RX CRC 오류의 비율입니다.
vsanpnic.rxCrcErr.metrics.rxCrcErr.name = 물리적 NIC RX CRC 오류
vsanpnic.rxCrcErr.metrics.rxCrcErr.description = 물리적 NIC RX CRC 오류의 비율입니다.
vsanpnic.txCarErr.name = 물리적 NIC TX 반송파 오류
vsanpnic.txCarErr.description = 물리적 NIC TX 반송파 오류의 비율입니다.
vsanpnic.txCarErr.metrics.txCarErr.name = 물리적 NIC TX 반송파 오류
vsanpnic.txCarErr.metrics.txCarErr.description = 물리적 NIC TX 반송파 오류의 비율입니다.
vsanpnic.rxErr.name = 물리적 NIC RX 일반 오류
vsanpnic.rxErr.description = 물리적 NIC RX 일반 오류의 비율입니다.
vsanpnic.rxErr.metrics.rxErr.name = 물리적 NIC RX 일반 오류
vsanpnic.rxErr.metrics.rxErr.description = 물리적 NIC RX 일반 오류의 비율입니다.
vsanpnic.txErr.name = 물리적 NIC TX 일반 오류
vsanpnic.txErr.description = 물리적 NIC TX 일반 오류의 비율입니다.
vsanpnic.txErr.metrics.txErr.name = 물리적 NIC TX 일반 오류
vsanpnic.txErr.metrics.txErr.description = 물리적 NIC TX 일반 오류의 비율입니다.
vsanpnic.rxMissErr.name = 물리적 NIC RX 누락 오류
vsanpnic.rxMissErr.description = 물리적 NIC RX 누락 오류의 비율입니다.
vsanpnic.rxMissErr.metrics.rxMissErr.name = 물리적 NIC RX 누락 오류
vsanpnic.rxMissErr.metrics.rxMissErr.description = 물리적 NIC RX 누락 오류의 비율입니다.
vsanpnic.rxOvErr.name = 물리적 NIC RX 버퍼 오버플로 오류
vsanpnic.rxOvErr.description = 물리적 NIC RX 버퍼 오버플로 오류의 비율입니다.
vsanpnic.rxOvErr.metrics.rxOvErr.name = 물리적 NIC RX 버퍼 오버플로 오류
vsanpnic.rxOvErr.metrics.rxOvErr.description = 물리적 NIC RX 버퍼 오버플로 오류의 비율입니다.
vsanpnic.rxFifoErr.name = 물리적 NIC RX FIFO 오류
vsanpnic.rxFifoErr.description = 물리적 NIC RX FIFO 오류의 비율입니다.
vsanpnic.rxFifoErr.metrics.rxFifoErr.name = 물리적 NIC RX FIFO 오류
vsanpnic.rxFifoErr.metrics.rxFifoErr.description = 물리적 NIC RX FIFO 오류의 비율입니다.


#
# VsanIscsiHostStats
#
com.vmware.vsan.perf.entity.vsan-iscsi-host.description = ESXi 호스트에 있는 모든 vSAN iSCSI 대상의 메트릭

#
## VsanIscsiHostStatsGraphs
#
vsaniscsihost.iops.name = IOPS
vsaniscsihost.iops.description = 이 ESXi 호스트의 모든 vSAN iSCSI 대상에 의해 사용되는 IOPS입니다.
vsaniscsihost.iops.metrics.iopsRead.name = 읽기 IOPS
vsaniscsihost.iops.metrics.iopsRead.description = 이 ESXi 호스트의 모든 vSAN iSCSI 대상에 의해 사용되는 읽기 IOPS입니다.
vsaniscsihost.iops.metrics.iopsWrite.name = 쓰기 IOPS
vsaniscsihost.iops.metrics.iopsWrite.description = 이 ESXi 호스트의 모든 vSAN iSCSI 대상에 의해 사용되는 쓰기 IOPS입니다.
vsaniscsihost.iops.metrics.iopsTotal.name = 총 IOPS
vsaniscsihost.iops.metrics.iopsTotal.description = 이 ESXi 호스트의 모든 vSAN iSCSI 대상에 의해 사용되는 총 IOPS입니다.

vsaniscsihost.bandwidth.name = 대역폭
vsaniscsihost.bandwidth.description = 이 ESXi 호스트의 모든 vSAN iSCSI 대상에 의해 사용되는 대역폭입니다.
vsaniscsihost.bandwidth.metrics.bandwidthRead.name = 읽기 대역폭
vsaniscsihost.bandwidth.metrics.bandwidthRead.description = 이 ESXi 호스트의 모든 vSAN iSCSI 대상에 의해 사용되는 읽기 대역폭입니다.
vsaniscsihost.bandwidth.metrics.bandwidthWrite.name = 쓰기 대역폭
vsaniscsihost.bandwidth.metrics.bandwidthWrite.description = 이 ESXi 호스트의 모든 vSAN iSCSI 대상에 의해 사용되는 쓰기 대역폭입니다.
vsaniscsihost.bandwidth.metrics.bandwidthTotal.name = 총 대역폭
vsaniscsihost.bandwidth.metrics.bandwidthTotal.description = 이 ESXi 호스트의 모든 vSAN iSCSI 대상에 의해 사용되는 총 대역폭입니다.

vsaniscsihost.latency.name = 지연 시간
vsaniscsihost.latency.description = 이 ESXi 호스트의 모든 vSAN iSCSI 대상에 의해 생성되는 IO의 평균 지연 시간입니다.
vsaniscsihost.latency.metrics.latencyRead.name = 읽기 지연 시간
vsaniscsihost.latency.metrics.latencyRead.description = 이 ESXi 호스트의 모든 vSAN iSCSI 대상에 의해 생성되는 IO의 평균 읽기 지연 시간입니다.
vsaniscsihost.latency.metrics.latencyWrite.name = 쓰기 지연 시간
vsaniscsihost.latency.metrics.latencyWrite.description = 이 ESXi 호스트의 모든 vSAN iSCSI 대상에 의해 생성되는 IO의 평균 쓰기 지연 시간입니다.
vsaniscsihost.latency.metrics.latencyTotal.name = 총 지연 시간
vsaniscsihost.latency.metrics.latencyTotal.description = 이 ESXi 호스트의 모든 vSAN iSCSI 대상에 의해 생성되는 IO의 평균 총 지연 시간입니다.

vsaniscsihost.queue-depth.name = 미결 IO
vsaniscsihost.queue-depth.description = 이 ESXi 호스트의 모든 vSAN iSCSI 대상의 미결 IO입니다.
vsaniscsihost.queue-depth.metrics.queueDepth.name = 미결 IO
vsaniscsihost.queue-depth.metrics.queueDepth.description = 이 ESXi 호스트의 모든 vSAN iSCSI 대상의 미결 IO입니다.

#
# VsanIscsiTargetStats
#
com.vmware.vsan.perf.entity.vsan-iscsi-target.description = vSAN iSCSI 대상에 있는 모든 LUN의 메트릭

#
## VsanIscsiTargetStatsGraphs
#
vsaniscsitarget.iops.name = IOPS
vsaniscsitarget.iops.description = 이 대상의 모든 vSAN iSCSI LUN에 의해 사용되는 IOPS입니다.
vsaniscsitarget.iops.metrics.iopsRead.name = 읽기 IOPS
vsaniscsitarget.iops.metrics.iopsRead.description = 이 대상의 모든 vSAN iSCSI LUN에 의해 사용되는 읽기 IOPS입니다.
vsaniscsitarget.iops.metrics.iopsWrite.name = 쓰기 IOPS
vsaniscsitarget.iops.metrics.iopsWrite.description = 이 대상의 모든 vSAN iSCSI LUN에 의해 사용되는 쓰기 IOPS입니다.
vsaniscsitarget.iops.metrics.iopsTotal.name = 총 IOPS
vsaniscsitarget.iops.metrics.iopsTotal.description = 이 대상의 모든 vSAN iSCSI LUN에 의해 사용되는 총 IOPS입니다.

vsaniscsitarget.bandwidth.name = 대역폭
vsaniscsitarget.bandwidth.description = 이 대상의 모든 vSAN iSCSI LUN에 의해 사용되는 대역폭입니다.
vsaniscsitarget.bandwidth.metrics.bandwidthRead.name = 읽기 대역폭
vsaniscsitarget.bandwidth.metrics.bandwidthRead.description = 이 대상의 모든 vSAN iSCSI LUN에 의해 사용되는 읽기 대역폭입니다.
vsaniscsitarget.bandwidth.metrics.bandwidthWrite.name = 쓰기 대역폭
vsaniscsitarget.bandwidth.metrics.bandwidthWrite.description = 이 대상의 모든 vSAN iSCSI LUN에 의해 사용되는 쓰기 대역폭입니다.
vsaniscsitarget.bandwidth.metrics.bandwidthTotal.name = 총 대역폭
vsaniscsitarget.bandwidth.metrics.bandwidthTotal.description = 이 대상의 모든 vSAN iSCSI LUN에 의해 사용되는 총 대역폭입니다.

vsaniscsitarget.latency.name = 지연 시간
vsaniscsitarget.latency.description = 이 대상의 모든 vSAN iSCSI LUN에 의해 생성되는 IO의 평균 지연 시간입니다.
vsaniscsitarget.latency.metrics.latencyRead.name = 읽기 지연 시간
vsaniscsitarget.latency.metrics.latencyRead.description = 이 대상의 모든 vSAN iSCSI LUN에 의해 생성되는 IO의 평균 읽기 지연 시간입니다.
vsaniscsitarget.latency.metrics.latencyWrite.name = 쓰기 지연 시간
vsaniscsitarget.latency.metrics.latencyWrite.description = 이 대상의 모든 vSAN iSCSI LUN에 의해 생성되는 IO의 평균 쓰기 지연 시간입니다.
vsaniscsitarget.latency.metrics.latencyTotal.name = 총 지연 시간
vsaniscsitarget.latency.metrics.latencyTotal.description = 이 대상의 모든 vSAN iSCSI LUN에 의해 생성되는 IO의 평균 총 지연 시간입니다.

vsaniscsitarget.queue-depth.name = 미결 IO
vsaniscsitarget.queue-depth.description = 이 대상의 모든 vSAN iSCSI LUN의 미결 IO입니다.
vsaniscsitarget.queue-depth.metrics.queueDepth.name = 미결 IO
vsaniscsitarget.queue-depth.metrics.queueDepth.description = 이 대상의 모든 vSAN iSCSI LUN의 미결 IO입니다.

#
# VsanIscsiLunStats
#
com.vmware.vsan.perf.entity.vsan-iscsi-lun.description = vSAN iSCSI LUN의 메트릭

#
## VsanIscsiLunStatsGraphs
#
vsaniscsilun.iops.name = IOPS
vsaniscsilun.iops.description = 이 vSAN iSCSI LUN에 의해 사용되는 IOPS입니다.
vsaniscsilun.iops.metrics.iopsRead.name = 읽기 IOPS
vsaniscsilun.iops.metrics.iopsRead.description = 이 vSAN iSCSI LUN에 의해 사용되는 읽기 IOPS입니다.
vsaniscsilun.iops.metrics.iopsWrite.name = 쓰기 IOPS
vsaniscsilun.iops.metrics.iopsWrite.description = 이 vSAN iSCSI LUN에 의해 사용되는 쓰기 IOPS입니다.
vsaniscsilun.iops.metrics.iopsTotal.name = 총 IOPS
vsaniscsilun.iops.metrics.iopsTotal.description = 이 vSAN iSCSI LUN에 의해 사용되는 총 IOPS입니다.

vsaniscsilun.bandwidth.name = 대역폭
vsaniscsilun.bandwidth.description = 이 vSAN iSCSI LUN에 의해 사용되는 대역폭입니다.
vsaniscsilun.bandwidth.metrics.bandwidthRead.name = 읽기 대역폭
vsaniscsilun.bandwidth.metrics.bandwidthRead.description = 이 vSAN iSCSI LUN에 의해 사용되는 읽기 대역폭입니다.
vsaniscsilun.bandwidth.metrics.bandwidthWrite.name = 쓰기 대역폭
vsaniscsilun.bandwidth.metrics.bandwidthWrite.description = 이 vSAN iSCSI LUN에 의해 사용되는 쓰기 대역폭입니다.
vsaniscsilun.bandwidth.metrics.bandwidthTotal.name = 총 대역폭
vsaniscsilun.bandwidth.metrics.bandwidthTotal.description = 이 vSAN iSCSI LUN에 의해 사용되는 총 대역폭입니다.

vsaniscsilun.latency.name = 지연 시간
vsaniscsilun.latency.description = 이 vSAN iSCSI LUN에 의해 생성되는 IO의 평균 지연 시간입니다.
vsaniscsilun.latency.metrics.latencyRead.name = 읽기 지연 시간
vsaniscsilun.latency.metrics.latencyRead.description = 이 vSAN iSCSI LUN에 의해 생성되는 IO의 평균 읽기 지연 시간입니다.
vsaniscsilun.latency.metrics.latencyWrite.name = 쓰기 지연 시간
vsaniscsilun.latency.metrics.latencyWrite.description = 이 vSAN iSCSI LUN에 의해 생성되는 IO의 평균 쓰기 지연 시간입니다.
vsaniscsilun.latency.metrics.latencyTotal.name = 총 지연 시간
vsaniscsilun.latency.metrics.latencyTotal.description = 이 vSAN iSCSI LUN에 의해 생성되는 IO의 평균 총 지연 시간입니다.

vsaniscsilun.queue-depth.name = 미결 IO
vsaniscsilun.queue-depth.description = 이 vSAN iSCSI LUN의 미결 IO입니다.
vsaniscsilun.queue-depth.metrics.queueDepth.name = 미결 IO
vsaniscsilun.queue-depth.metrics.queueDepth.description = 이 vSAN iSCSI LUN의 미결 IO입니다.

#
### VsanClusterSpaceReportStats
##
com.vmware.vsan.perf.entity.vsan-cluster-capacity.description = vSAN 용량에 대한 메트릭.
#
##
####VsanClusterCapacityStatsGraphs
##
vsanclustercapacity.overview.name = 개요
vsanclustercapacity.overview.description =
vsanclustercapacity.overview.metrics.total.name = 총 용량
vsanclustercapacity.overview.metrics.total.description = vSAN 클러스터의 총 용량.
vsanclustercapacity.overview.metrics.free.name = 사용 가능한 용량
vsanclustercapacity.overview.metrics.free.description = vSAN 클러스터의 사용 가능한 용량.
vsanclustercapacity.overview.metrics.used.name = 사용된 용량
vsanclustercapacity.overview.metrics.used.description = vSAN 클러스터에서 이미 사용 중인 용량.
vsanclustercapacity.dedup.name = 공간 효율성
vsanclustercapacity.dedup.description = 공간 효율성을 사용하면 물리적 디스크에 저장되는 데이터를 줄여 TCO(총 소유 비용)를 개선할 수 있습니다.
vsanclustercapacity.dedup.metrics.savedByDedup.name = 절약된 용량
vsanclustercapacity.dedup.metrics.savedByDedup.description = 공간 효율성 기능을 통해 절약되는 물리적 용량 크기.
vsanclustercapacity.dedupRatio.name = 공간 효율성 비율
vsanclustercapacity.dedupRatio.description = 공간 효율성 없는 공간 필요/공간 효율성 있는 공간 필요.
vsanclustercapacity.dedupRatio.metrics.dedupRatio.name = 공간 효율성 비율
vsanclustercapacity.dedupRatio.metrics.dedupRatio.description = 공간 효율성 비율은 공간 효율성의 효율성을 나타내는 메트릭으로, 공간 효율성을 사용하도록 설정한 상태에서 사용된 용량을 공간 효율성을 사용하지 않을 때 사용되는 용량으로 나누어 계산된 백분율입니다.


#
# VsanFileService
#
com.vmware.vsan.perf.entity.vsan-file-service.description = vSAN 파일 서비스에 대한 메트릭입니다.

#
# VsanFileServiceGraphs
#
vsan-file-service.throughput.name = 처리량
vsan-file-service.throughput.description = vSAN 파일 서비스에 대한 처리량입니다.
vsan-file-service.throughput.metrics.readRequested.name = 읽기를 위해 요청된 바이트
vsan-file-service.throughput.metrics.readRequested.description = 읽기를 위해 요청된 바이트입니다.
vsan-file-service.throughput.metrics.readTransferred.name = 읽기를 위해 실제 전송된 바이트
vsan-file-service.throughput.metrics.readTransferred.description = 읽기를 위해 실제 전송된 바이트입니다.
vsan-file-service.throughput.metrics.writeRequested.name = 쓰기를 위해 요청된 바이트
vsan-file-service.throughput.metrics.writeRequested.description = 쓰기를 위해 요청된 바이트입니다.
vsan-file-service.throughput.metrics.writeTransferred.name = 쓰기를 위해 실제 전송된 바이트
vsan-file-service.throughput.metrics.writeTransferred.description = 쓰기를 위해 실제 전송된 바이트입니다.

vsan-file-service.iops.name = IOPS
vsan-file-service.iops.description = vSAN 파일 서비스에 대한 IOPS입니다.
vsan-file-service.iops.metrics.readOpTotal.name = 읽기 작업에 대한 IOPS
vsan-file-service.iops.metrics.readOpTotal.description = 읽기 작업에 대한 IOPS입니다.
vsan-file-service.iops.metrics.writeOpTotal.name = 쓰기 작업에 대한 IOPS
vsan-file-service.iops.metrics.writeOpTotal.description = 쓰기 작업에 대한 IOPS입니다.

vsan-file-service.latency.name = 지연 시간
vsan-file-service.latency.description = vSAN 파일 서비스에 대한 지연 시간입니다.
vsan-file-service.latency.metrics.readLatency.name = 읽기 지연 시간
vsan-file-service.latency.metrics.readLatency.description = IO당 평균 읽기 지연 시간입니다.
vsan-file-service.latency.metrics.writeLatency.name = 쓰기 지연 시간
vsan-file-service.latency.metrics.writeLatency.description = IO당 평균 쓰기 지연 시간입니다.


#
# VsanIoInsightVmdk
#
com.vmware.vsan.perf.entity.vmdk-ioinsight.description = vSAN IOInsight에 대한 메트릭입니다.

#
# VsanIoInsightVmdkGraphs
#
vmdk-ioinsight.iosize-dist-histogram.name = IO 크기 분포
vmdk-ioinsight.iosize-dist-histogram.description = 크기에 따른 VMDK IO 분포입니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz0_4k.name = ReadSize<4K
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz0_4k.description = 읽기 IO 크기가 4K 미만입니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz0_4k.name = WriteSize<4K
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz0_4k.description = 쓰기 IO 크기가 4K 미만입니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz4k.name = ReadSize=4K
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz4k.description = 읽기 IO 크기가 4K와 같습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz4k.name = WriteSize=4K
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz4k.description = 쓰기 IO 크기가 4K와 같습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz4k_8k.name = 4K<ReadSize<8K
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz4k_8k.description = 읽기 IO 크기가 4K보다 크고 8K보다 작습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz4k_8k.name = 4K<WriteSize<8K
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz4k_8k.description = 쓰기 IO 크기가 4K보다 크고 8K보다 작습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz8k.name = ReadSize=8K
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz8k.description = 읽기 IO 크기가 8K와 같습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz8k.name = WriteSize=8K
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz8k.description = 쓰기 IO 크기가 8K와 같습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz8k_16k.name = 8K<ReadSize<16K
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz8k_16k.description = 읽기 IO 크기가 8K보다 크고 16K보다 작습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz8k_16k.name = 8K<WriteSize<16K
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz8k_16k.description = 쓰기 IO 크기가 8K보다 크고 16K보다 작습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz16k.name = ReadSize=16K
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz16k.description = 읽기 IO 크기가 16K와 같습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz16k.name = WriteSize=16K
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz16k.description = 쓰기 IO 크기가 16K와 같습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz16k_32k.name = 16K<ReadSize<32K
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz16k_32k.description = 읽기 IO 크기가 16K보다 크고 32K보다 작습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz16k_32k.name = 16K<WriteSize<32K
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz16k_32k.description = 쓰기 IO 크기가 16K보다 크고 32K보다 작습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz32k.name = ReadSize=32K
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz32k.description = 읽기 IO 크기가 32K와 같습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz32k.name = WriteSize=32K
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz32k.description = 쓰기 IO 크기가 32K와 같습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz32k_64k.name = 32K<ReadSize<64K
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz32k_64k.description = 읽기 IO 크기가 32K보다 크고 64K보다 작습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz32k_64k.name = 32K<WriteSize<64K
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz32k_64k.description = 쓰기 IO 크기가 32K보다 크고 64K보다 작습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz64k.name = ReadSize=64K
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz64k.description = 읽기 크기가 64K와 같습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz64k.name = WriteSize=64K
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz64k.description = 쓰기 IO 크기가 64K와 같습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz64k_128k.name = 64K<ReadSize<128K
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz64k_128k.description = 읽기 IO 크기가 64K보다 크고 128K보다 작습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz64k_128k.name = 64K<WriteSize<128K
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz64k_128k.description = 쓰기 IO 크기가 64K보다 크고 128K보다 작습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz128k.name = ReadSize=128K
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz128k.description = 읽기 IO 크기가 128K와 같습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz128k.name = WriteSize=128K
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz128k.description = 쓰기 IO 크기가 128K와 같습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz128k_256k.name = 128K<ReadSize<256K
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz128k_256k.description = 읽기 IO 크기가 128K보다 크고 256K보다 작습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz128k_256k.name = 128K<WriteSize<256K
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz128k_256k.description = 쓰기 IO 크기가 128K보다 크고 256K보다 작습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz256k.name = ReadSize=256K
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz256k.description = 읽기 IO 크기가 256K와 같습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz256k.name = WriteSize=256K
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz256k.description = 쓰기 IO 크기가 256K와 같습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz256k_512k.name = 256K<ReadSize<512K
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz256k_512k.description = 읽기 IO 크기가 256K보다 크고 512K보다 작습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz256k_512k.name = 256K<WriteSize<512K
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz256k_512k.description = 쓰기 IO 크기가 256K보다 크고 512K보다 작습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz512k.name = ReadSize=512K
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz512k.description = 읽기 IO 크기가 512K와 같습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz512k.name = WriteSize=512K
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz512k.description = 쓰기 IO 크기가 512K와 같습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz512k_1m.name = 512K<ReadSize<1M
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz512k_1m.description = 읽기 IO 크기가 512K보다 크고 1M보다 작습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz512k_1m.name = 512K<WriteSize<1M
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz512k_1m.description = 쓰기 IO 크기가 512K보다 크고 1M보다 작습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz1m.name = ReadSize=1M
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz1m.description = 읽기 IO 크기가 1M와 같습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz1m.name = WriteSize=1M
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz1m.description = 쓰기 IO 크기가 1M와 같습니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz1_m.name = ReadSize>1M
vmdk-ioinsight.iosize-dist-histogram.metrics.riosz1_m.description = 읽기 IO 크기가 1M보다 큽니다.
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz1_m.name = WriteSize>1M
vmdk-ioinsight.iosize-dist-histogram.metrics.wiosz1_m.description = 쓰기 IO 크기가 1M보다 큽니다.

vmdk-ioinsight.io-latency-histogram.name = IO 지연 시간 분포
vmdk-ioinsight.io-latency-histogram.description = 지연 시간에 따른 VMDK IO 분포입니다.
vmdk-ioinsight.io-latency-histogram.metrics.rlat0_1us.name = 0<ReadLatency<1(us)
vmdk-ioinsight.io-latency-histogram.metrics.rlat0_1us.description = 읽기 IO 지연 시간이 1마이크로초 이하입니다.
vmdk-ioinsight.io-latency-histogram.metrics.wlat0_1us.name = 0<WriteLatency<1(us)
vmdk-ioinsight.io-latency-histogram.metrics.wlat0_1us.description = 쓰기 IO 지연 시간이 1마이크로초 이하입니다.
vmdk-ioinsight.io-latency-histogram.metrics.rlat1_10us.name = 1<ReadLatency<10(us)
vmdk-ioinsight.io-latency-histogram.metrics.rlat1_10us.description = 읽기 IO 지연 시간이 1마이크로초보다 크고 10마이크로초 이하입니다.
vmdk-ioinsight.io-latency-histogram.metrics.wlat1_10us.name = 1<WriteLatency<10(us)
vmdk-ioinsight.io-latency-histogram.metrics.wlat1_10us.description = 쓰기 IO 지연 시간이 1마이크로초보다 크고 10마이크로초 이하입니다.
vmdk-ioinsight.io-latency-histogram.metrics.rlat10_100us.name = 10<ReadLatency<100(us)
vmdk-ioinsight.io-latency-histogram.metrics.rlat10_100us.description = 읽기 IO 지연 시간이 10마이크로초보다 크고 100마이크로초 이하입니다.
vmdk-ioinsight.io-latency-histogram.metrics.wlat10_100us.name = 10<WriteLatency<100(us)
vmdk-ioinsight.io-latency-histogram.metrics.wlat10_100us.description = 쓰기 IO 지연 시간이 10마이크로초보다 크고 100마이크로초 이하입니다.
vmdk-ioinsight.io-latency-histogram.metrics.rlat100_500us.name = 100<ReadLatency<500(us)
vmdk-ioinsight.io-latency-histogram.metrics.rlat100_500us.description = 읽기 IO 지연 시간이 100마이크로초보다 크고 500마이크로초 이하입니다.
vmdk-ioinsight.io-latency-histogram.metrics.wlat100_500us.name = 100<WriteLatency<500(us)
vmdk-ioinsight.io-latency-histogram.metrics.wlat100_500us.description = 쓰기 IO 지연 시간이 100마이크로초보다 크고 500마이크로초 이하입니다.
vmdk-ioinsight.io-latency-histogram.metrics.rlat500us_1ms.name = 500us<ReadLatency<1ms
vmdk-ioinsight.io-latency-histogram.metrics.rlat500us_1ms.description = 읽기 IO 지연 시간이 500마이크로초보다 크고 1밀리초 이하입니다.
vmdk-ioinsight.io-latency-histogram.metrics.wlat500us_1ms.name = 500us<WriteLatency<1ms
vmdk-ioinsight.io-latency-histogram.metrics.wlat500us_1ms.description = 쓰기 IO 지연 시간이 500마이크로초보다 크고 1밀리초 이하입니다.
vmdk-ioinsight.io-latency-histogram.metrics.rlat1_5ms.name = 1<ReadLatency<5(ms)
vmdk-ioinsight.io-latency-histogram.metrics.rlat1_5ms.description = 읽기 IO 지연 시간이 1밀리초보다 크고 5밀리초 이하입니다.
vmdk-ioinsight.io-latency-histogram.metrics.wlat1_5ms.name = 1<WriteLatency<5(ms)
vmdk-ioinsight.io-latency-histogram.metrics.wlat1_5ms.description = 쓰기 IO 지연 시간이 1밀리초보다 크고 5밀리초 이하입니다.
vmdk-ioinsight.io-latency-histogram.metrics.rlat5_10ms.name = 5<ReadLatency<10(ms)
vmdk-ioinsight.io-latency-histogram.metrics.rlat5_10ms.description = 읽기 IO 지연 시간이 5밀리초보다 크고 10밀리초 이하입니다.
vmdk-ioinsight.io-latency-histogram.metrics.wlat5_10ms.name = 5<WriteLatency<10(ms)
vmdk-ioinsight.io-latency-histogram.metrics.wlat5_10ms.description = 쓰기 IO 지연 시간이 5밀리초보다 크고 10밀리초 이하입니다.
vmdk-ioinsight.io-latency-histogram.metrics.rlat10_25ms.name = 10<ReadLatency<25(ms)
vmdk-ioinsight.io-latency-histogram.metrics.rlat10_25ms.description = 읽기 IO 지연 시간이 10밀리초보다 크고 25밀리초 이하입니다.
vmdk-ioinsight.io-latency-histogram.metrics.wlat10_25ms.name = 10<WriteLatency<25(ms)
vmdk-ioinsight.io-latency-histogram.metrics.wlat10_25ms.description = 쓰기 IO 지연 시간이 10밀리초보다 크고 25밀리초 이하입니다.
vmdk-ioinsight.io-latency-histogram.metrics.rlat25_50ms.name = 25<ReadLatency<50(ms)
vmdk-ioinsight.io-latency-histogram.metrics.rlat25_50ms.description = 읽기 IO 지연 시간이 25밀리초보다 크고 50밀리초 이하입니다.
vmdk-ioinsight.io-latency-histogram.metrics.wlat25_50ms.name = 25<WriteLatency<50(ms)
vmdk-ioinsight.io-latency-histogram.metrics.wlat25_50ms.description = 쓰기 IO 지연 시간이 25밀리초보다 크고 50밀리초 이하입니다.
vmdk-ioinsight.io-latency-histogram.metrics.rlat50_100ms.name = 50<ReadLatency<100(ms)
vmdk-ioinsight.io-latency-histogram.metrics.rlat50_100ms.description = 읽기 IO 지연 시간이 50밀리초보다 크고 100밀리초 이하입니다.
vmdk-ioinsight.io-latency-histogram.metrics.wlat50_100ms.name = 50<WriteLatency<100(ms)
vmdk-ioinsight.io-latency-histogram.metrics.wlat50_100ms.description = 쓰기 IO 지연 시간이 50밀리초보다 크고 100밀리초 이하입니다.
vmdk-ioinsight.io-latency-histogram.metrics.rlat100_ms.name = ReadLatency>100(ms)
vmdk-ioinsight.io-latency-histogram.metrics.rlat100_ms.description = 읽기 IO 지연 시간이 100밀리초보다 큽니다.
vmdk-ioinsight.io-latency-histogram.metrics.wlat100_ms.name = WriteLatency>100(ms)
vmdk-ioinsight.io-latency-histogram.metrics.wlat100_ms.description = 쓰기 IO 지연 시간이 100밀리초보다 큽니다.

vmdk-ioinsight.iops.name = IOPS
vmdk-ioinsight.iops.description = VMDK의 초당 IO입니다.
vmdk-ioinsight.iops.metrics.iopsRead.name = 읽기 IOPS
vmdk-ioinsight.iops.metrics.iopsRead.description = VMDK의 초당 읽기 IO입니다.
vmdk-ioinsight.iops.metrics.iopsWrite.name = 쓰기 IOPS
vmdk-ioinsight.iops.metrics.iopsWrite.description = VMDK의 초당 쓰기 IO입니다.
vmdk-ioinsight.iops.metrics.iopsTotal.name = 총 IOPS
vmdk-ioinsight.iops.metrics.iopsTotal.description = VMDK의 초당 총 IO입니다.

vmdk-ioinsight.readThroughput.name = 처리량
vmdk-ioinsight.readThroughput.description = VMDK의 IO 처리량입니다.
vmdk-ioinsight.readThroughput.metrics.throughputRead.name = 읽기 처리량
vmdk-ioinsight.readThroughput.metrics.throughputRead.description = VMDK의 읽기 IO 처리량입니다.
vmdk-ioinsight.readThroughput.metrics.throughputWrite.name = 쓰기 처리량
vmdk-ioinsight.readThroughput.metrics.throughputWrite.description = VMDK의 쓰기 IO 처리량입니다.
vmdk-ioinsight.readThroughput.metrics.throughputTotal.name = 총 처리량
vmdk-ioinsight.readThroughput.metrics.throughputTotal.description = VMDK의 총 IO 처리량입니다.

vmdk-ioinsight.sequentialityThroughput.name = 순차 및 임의 처리량
vmdk-ioinsight.sequentialityThroughput.description = VMDK의 순차 및 임의 IO 처리량입니다.
vmdk-ioinsight.sequentialityThroughput.metrics.throughputSequential.name = 순차 처리량
vmdk-ioinsight.sequentialityThroughput.metrics.throughputSequential.description = VMDK의 순차 IO 처리량입니다.
vmdk-ioinsight.sequentialityThroughput.metrics.throughputRandom.name = 임의 처리량
vmdk-ioinsight.sequentialityThroughput.metrics.throughputRandom.description = VMDK의 임의 IO 처리량입니다.
vmdk-ioinsight.sequentialityThroughput.metrics.throughputTotal.name = 총 처리량
vmdk-ioinsight.sequentialityThroughput.metrics.throughputTotal.description = VMDK의 총 IO 처리량입니다.

vmdk-ioinsight.sequentialityRatio.name = 순차 및 임의 IO 비율
vmdk-ioinsight.sequentialityRatio.description = 순차 및 임의 IO의 백분율입니다.
vmdk-ioinsight.sequentialityRatio.metrics.sequentialReadRatio.name = 순차 읽기 IO
vmdk-ioinsight.sequentialityRatio.metrics.sequentialReadRatio.description = 순차 읽기 IO의 백분율입니다.
vmdk-ioinsight.sequentialityRatio.metrics.sequentialWriteRatio.name = 순차 쓰기 IO
vmdk-ioinsight.sequentialityRatio.metrics.sequentialWriteRatio.description = 순차 쓰기 IO의 백분율입니다.
vmdk-ioinsight.sequentialityRatio.metrics.sequentialRatio.name = 순차 IO
vmdk-ioinsight.sequentialityRatio.metrics.sequentialRatio.description = 순차 IO의 백분율입니다.
vmdk-ioinsight.sequentialityRatio.metrics.randomReadRatio.name = 임의 읽기 IO
vmdk-ioinsight.sequentialityRatio.metrics.randomReadRatio.description = 임의 읽기 IO의 백분율입니다.
vmdk-ioinsight.sequentialityRatio.metrics.randomWriteRatio.name = 임의 쓰기 IO
vmdk-ioinsight.sequentialityRatio.metrics.randomWriteRatio.description = 임의 쓰기 IO의 백분율입니다.
vmdk-ioinsight.sequentialityRatio.metrics.randomRatio.name = 임의 IO
vmdk-ioinsight.sequentialityRatio.metrics.randomRatio.description = 임의 IO의 백분율입니다.

vmdk-ioinsight.4kbAlignmentRatio.name = 4K 정렬 및 미정렬 IO 비율
vmdk-ioinsight.4kbAlignmentRatio.description = 4K 정렬 및 미정렬 IO의 백분율입니다.
vmdk-ioinsight.4kbAlignmentRatio.metrics.aligned4kReadRatio.name = 4K 정렬 읽기 IO
vmdk-ioinsight.4kbAlignmentRatio.metrics.aligned4kReadRatio.description = 4K 정렬 읽기 IO 비율입니다.
vmdk-ioinsight.4kbAlignmentRatio.metrics.aligned4kWriteRatio.name = 4K 정렬 쓰기 IO
vmdk-ioinsight.4kbAlignmentRatio.metrics.aligned4kWriteRatio.description = 4K 정렬 쓰기 IO의 백분율입니다.
vmdk-ioinsight.4kbAlignmentRatio.metrics.aligned4kRatio.name = 4K 정렬 IO
vmdk-ioinsight.4kbAlignmentRatio.metrics.aligned4kRatio.description = 4K 정렬 IO의 백분율입니다.
vmdk-ioinsight.4kbAlignmentRatio.metrics.unaligned4kReadRatio.name = 4K 미정렬 읽기 IO
vmdk-ioinsight.4kbAlignmentRatio.metrics.unaligned4kReadRatio.description = 4K 미정렬 읽기 IO의 백분율입니다.
vmdk-ioinsight.4kbAlignmentRatio.metrics.unaligned4kWriteRatio.name = 4K 미정렬 쓰기 IO
vmdk-ioinsight.4kbAlignmentRatio.metrics.unaligned4kWriteRatio.description = 4K 미정렬 쓰기 IO의 백분율입니다.
vmdk-ioinsight.4kbAlignmentRatio.metrics.unaligned4kRatio.name = 4K 미정렬 IO
vmdk-ioinsight.4kbAlignmentRatio.metrics.unaligned4kRatio.description = 4K 미정렬 IO의 백분율입니다.

vmdk-ioinsight.readRatio.name = 읽기/쓰기 IO 비율
vmdk-ioinsight.readRatio.description = 읽기/쓰기 IO의 백분율입니다.
vmdk-ioinsight.readRatio.metrics.readRatio.name = 읽기 IO
vmdk-ioinsight.readRatio.metrics.readRatio.description = 읽기 IO의 백분율입니다.
vmdk-ioinsight.readRatio.metrics.writeRatio.name = 쓰기 IO
vmdk-ioinsight.readRatio.metrics.writeRatio.description = 쓰기 IO의 백분율입니다.

#
# VsanPMemClusterStats
#
com.vmware.vsan.perf.entity.vsan-pmem-cluster.description = PMem 데이터스토어에 대한 VMDK 성능 메트릭입니다.

#
# VsanPMemClusterStatsGraphs
#
vsan-pmem-cluster.iops.name = IOPS
vsan-pmem-cluster.iops.description = PMem 데이터스토어의 모든 VM에서 사용된 IOPS입니다.
vsan-pmem-cluster.iops.metrics.iopsRead.name = 읽기 IOPS
vsan-pmem-cluster.iops.metrics.iopsRead.description = PMem 데이터스토어의 모든 VM에서 사용된 읽기 IOPS입니다.
vsan-pmem-cluster.iops.metrics.iopsWrite.name = 쓰기 IOPS
vsan-pmem-cluster.iops.metrics.iopsWrite.description = PMem 데이터스토어의 모든 VM에서 사용된 쓰기 IOPS입니다.
vsan-pmem-cluster.iops.metrics.iopsTotal.name = 총 IOPS
vsan-pmem-cluster.iops.metrics.iopsTotal.description = PMem 데이터스토어의 모든 VM에서 사용된 총 IOPS입니다.

vsan-pmem-cluster.throughput.name = 처리량
vsan-pmem-cluster.throughput.description = PMem 데이터스토어의 모든 VM에서 사용된 처리량입니다.
vsan-pmem-cluster.throughput.metrics.throughputRead.name = 읽기 처리량
vsan-pmem-cluster.throughput.metrics.throughputRead.description = PMem 데이터스토어의 모든 VM에서 사용된 읽기 처리량입니다.
vsan-pmem-cluster.throughput.metrics.throughputWrite.name = 쓰기 처리량
vsan-pmem-cluster.throughput.metrics.throughputWrite.description = PMem 데이터스토어의 모든 VM에서 사용된 쓰기 처리량입니다.
vsan-pmem-cluster.throughput.metrics.throughputTotal.name = 총 처리량
vsan-pmem-cluster.throughput.metrics.throughputTotal.description = PMem 데이터스토어의 모든 VM에서 사용된 총 처리량입니다.

vsan-pmem-cluster.latency.name = 지연 시간
vsan-pmem-cluster.latency.description = PMem 데이터스토어의 모든 VM에서 사용된 IO에서 발생한 평균 지연 시간입니다.
vsan-pmem-cluster.latency.metrics.latencyRead.name = 읽기 지연 시간
vsan-pmem-cluster.latency.metrics.latencyRead.description = PMem 데이터스토어의 모든 VM에서 사용된 IO에서 발생한 읽기 지연 시간입니다.
vsan-pmem-cluster.latency.metrics.latencyWrite.name = 쓰기 지연 시간
vsan-pmem-cluster.latency.metrics.latencyWrite.description = PMem 데이터스토어의 모든 VM에서 사용된 IO에서 발생한 쓰기 지연 시간입니다.

vsan-pmem-cluster.oio.name = 미결 IO
vsan-pmem-cluster.oio.description = PMem 데이터스토어에서 모든 VM의 미결 IO입니다.
vsan-pmem-cluster.oio.metrics.oioRead.name = 읽기 미결 IO
vsan-pmem-cluster.oio.metrics.oioRead.description = PMem 데이터스토어에서 모든 VM의 읽기 미결 IO입니다.
vsan-pmem-cluster.oio.metrics.oioWrite.name = 쓰기 미결 IO
vsan-pmem-cluster.oio.metrics.oioWrite.description = PMem 데이터스토어에서 모든 VM의 쓰기 미결 IO입니다.

#
# VsanPMemHostStats
#
com.vmware.vsan.perf.entity.vsan-pmem-host.description = PMem 데이터스토어에 대한 VMDK 성능 메트릭입니다.

#
# VsanPMemHostStatsGraphs
#
vsan-pmem-host.iops.name = IOPS
vsan-pmem-host.iops.description = 이 호스트의 PMem 데이터스토어에 있는 모든 VM에서 사용된 IOPS입니다.
vsan-pmem-host.iops.metrics.iopsRead.name = 읽기 IOPS
vsan-pmem-host.iops.metrics.iopsRead.description = 이 호스트의 PMem 데이터스토어에 있는 모든 VM에서 사용된 읽기 IOPS입니다.
vsan-pmem-host.iops.metrics.iopsWrite.name = 쓰기 IOPS
vsan-pmem-host.iops.metrics.iopsWrite.description = 이 호스트의 PMem 데이터스토어에 있는 모든 VM에서 사용된 쓰기 IOPS입니다.
vsan-pmem-host.iops.metrics.iopsTotal.name = 총 IOPS
vsan-pmem-host.iops.metrics.iopsTotal.description = 이 호스트의 PMem 데이터스토어에 있는 모든 VM에서 사용된 총 IOPS입니다.

vsan-pmem-host.throughput.name = 처리량
vsan-pmem-host.throughput.description = 이 호스트의 PMem 데이터스토어에 있는 모든 VM에서 사용된 처리량입니다.
vsan-pmem-host.throughput.metrics.throughputRead.name = 읽기 처리량
vsan-pmem-host.throughput.metrics.throughputRead.description = 이 호스트의 PMem 데이터스토어에 있는 모든 VM에서 사용된 읽기 처리량입니다.
vsan-pmem-host.throughput.metrics.throughputWrite.name = 쓰기 처리량
vsan-pmem-host.throughput.metrics.throughputWrite.description = 이 호스트의 PMem 데이터스토어에 있는 모든 VM에서 사용된 쓰기 처리량입니다.
vsan-pmem-host.throughput.metrics.throughputTotal.name = 총 처리량
vsan-pmem-host.throughput.metrics.throughputTotal.description = 이 호스트의 PMem 데이터스토어에 있는 모든 VM에서 사용된 총 처리량입니다.

vsan-pmem-host.latency.name = 지연 시간
vsan-pmem-host.latency.description = 이 호스트의 PMem 데이터스토어에 있는 모든 VM에서 사용된 IO에서 발생한 평균 지연 시간입니다.
vsan-pmem-host.latency.metrics.latencyRead.name = 읽기 지연 시간
vsan-pmem-host.latency.metrics.latencyRead.description = 이 호스트의 PMem 데이터스토어에 있는 모든 VM에서 사용된 IO에서 발생한 읽기 지연 시간입니다.
vsan-pmem-host.latency.metrics.latencyWrite.name = 쓰기 지연 시간
vsan-pmem-host.latency.metrics.latencyWrite.description = 이 호스트의 PMem 데이터스토어에 있는 모든 VM에서 사용된 IO에서 발생한 쓰기 지연 시간입니다.

vsan-pmem-host.oio.name = 미결 IO
vsan-pmem-host.oio.description = 이 호스트의 PMem 데이터스토어에 있는 모든 VM의 미결 IO입니다.
vsan-pmem-host.oio.metrics.oioRead.name = 읽기 미결 IO
vsan-pmem-host.oio.metrics.oioRead.description = 이 호스트의 PMem 데이터스토어에 있는 모든 VM의 읽기 미결 IO입니다.
vsan-pmem-host.oio.metrics.oioWrite.name = 쓰기 미결 IO
vsan-pmem-host.oio.metrics.oioWrite.description = 이 호스트의 PMem 데이터스토어에 있는 모든 VM의 쓰기 미결 IO입니다.

#
# VsanDirectClusterStats
#
com.vmware.vsan.perf.entity.vsan-direct-cluster.description = vSAN Direct 데이터스토어에 대한 VMDK 성능 메트릭입니다.

#
# VsanDirectClusterStatsGraphs
#
vsan-direct-cluster.iops.name = IOPS
vsan-direct-cluster.iops.description = vSAN Direct 데이터스토어의 모든 VMDK가 사용한 IOPS입니다.
vsan-direct-cluster.iops.metrics.iopsDevRead.name = 읽기 IOPS
vsan-direct-cluster.iops.metrics.iopsDevRead.description = vSAN Direct 데이터스토어의 모든 VMDK가 사용한 읽기 IOPS입니다.
vsan-direct-cluster.iops.metrics.iopsDevWrite.name = 쓰기 IOPS
vsan-direct-cluster.iops.metrics.iopsDevWrite.description = vSAN Direct 데이터스토어의 모든 VMDK가 사용한 쓰기 IOPS입니다.

vsan-direct-cluster.throughput.name = 처리량
vsan-direct-cluster.throughput.description = vSAN Direct 데이터스토어의 모든 VMDK가 사용한 처리량입니다.
vsan-direct-cluster.throughput.metrics.throughputDevRead.name = 읽기 처리량
vsan-direct-cluster.throughput.metrics.throughputDevRead.description = vSAN Direct 데이터스토어의 모든 VMDK가 사용한 읽기 처리량입니다.
vsan-direct-cluster.throughput.metrics.throughputDevWrite.name = 쓰기 처리량
vsan-direct-cluster.throughput.metrics.throughputDevWrite.description = vSAN Direct 데이터스토어의 모든 VMDK가 사용한 쓰기 처리량입니다.

vsan-direct-cluster.latency.name = 지연 시간
vsan-direct-cluster.latency.description = vSAN Direct 데이터스토어의 모든 VMDK에서 사용한 IO에서 발생한 평균 지연 시간입니다.
vsan-direct-cluster.latency.metrics.latencyDevRead.name = 읽기 지연 시간
vsan-direct-cluster.latency.metrics.latencyDevRead.description = vSAN Direct 데이터스토어의 모든 VMDK에서 사용한 IO에서 발생한 읽기 지연 시간입니다.
vsan-direct-cluster.latency.metrics.latencyDevWrite.name = 쓰기 지연 시간
vsan-direct-cluster.latency.metrics.latencyDevWrite.description = vSAN Direct 데이터스토어의 모든 VMDK에서 사용한 IO에서 발생한 쓰기 지연 시간입니다.

vsan-direct-cluster.oio.name = 미결 IO
vsan-direct-cluster.oio.description = vSAN Direct 데이터스토어의 모든 VMDK에서 발생한 미결 IO입니다.
vsan-direct-cluster.oio.metrics.oioDevRead.name = 읽기 미결 IO
vsan-direct-cluster.oio.metrics.oioDevRead.description = vSAN Direct 데이터스토어의 모든 VMDK에서 발생한 읽기 미결 IO입니다.
vsan-direct-cluster.oio.metrics.oioDevWrite.name = 쓰기 미결 IO
vsan-direct-cluster.oio.metrics.oioDevWrite.description = vSAN Direct 데이터스토어의 모든 VMDK에서 발생한 쓰기 미결 IO입니다.

#
# VsanDirectHostStats
#
com.vmware.vsan.perf.entity.vsan-direct-host.description = vSAN Direct 데이터스토어에 대한 VMDK 성능 메트릭입니다.

#
# VsanDirectHostStatsGraphs
#
vsan-direct-host.iops.name = IOPS
vsan-direct-host.iops.description = vSAN Direct 데이터스토어의 모든 VMDK가 사용한 IOPS입니다.
vsan-direct-host.iops.metrics.iopsDevRead.name = 읽기 IOPS
vsan-direct-host.iops.metrics.iopsDevRead.description = vSAN Direct 데이터스토어의 모든 VMDK가 사용한 읽기 IOPS입니다.
vsan-direct-host.iops.metrics.iopsDevWrite.name = 쓰기 IOPS
vsan-direct-host.iops.metrics.iopsDevWrite.description = vSAN Direct 데이터스토어의 모든 VMDK가 사용한 쓰기 IOPS입니다.

vsan-direct-host.throughput.name = 처리량
vsan-direct-host.throughput.description = vSAN Direct 데이터스토어의 모든 VMDK가 사용한 처리량입니다.
vsan-direct-host.throughput.metrics.throughputDevRead.name = 읽기 처리량
vsan-direct-host.throughput.metrics.throughputDevRead.description = vSAN Direct 데이터스토어의 모든 VMDK가 사용한 읽기 처리량입니다.
vsan-direct-host.throughput.metrics.throughputDevWrite.name = 쓰기 처리량
vsan-direct-host.throughput.metrics.throughputDevWrite.description = vSAN Direct 데이터스토어의 모든 VMDK가 사용한 쓰기 처리량입니다.

vsan-direct-host.latency.name = 지연 시간
vsan-direct-host.latency.description = vSAN Direct 데이터스토어의 모든 VMDK에서 사용한 IO에서 발생한 평균 지연 시간입니다.
vsan-direct-host.latency.metrics.latencyDevRead.name = 읽기 지연 시간
vsan-direct-host.latency.metrics.latencyDevRead.description = vSAN Direct 데이터스토어의 모든 VMDK에서 사용한 IO에서 발생한 읽기 지연 시간입니다.
vsan-direct-host.latency.metrics.latencyDevWrite.name = 쓰기 지연 시간
vsan-direct-host.latency.metrics.latencyDevWrite.description = vSAN Direct 데이터스토어의 모든 VMDK에서 사용한 IO에서 발생한 쓰기 지연 시간입니다.

vsan-direct-host.oio.name = 미결 IO
vsan-direct-host.oio.description = vSAN Direct 데이터스토어의 모든 VMDK에서 발생한 미결 IO입니다.
vsan-direct-host.oio.metrics.oioDevRead.name = 읽기 미결 IO
vsan-direct-host.oio.metrics.oioDevRead.description = vSAN Direct 데이터스토어의 모든 VMDK에서 발생한 읽기 미결 IO입니다.
vsan-direct-host.oio.metrics.oioDevWrite.name = 쓰기 미결 IO
vsan-direct-host.oio.metrics.oioDevWrite.description = vSAN Direct 데이터스토어의 모든 VMDK에서 발생한 쓰기 미결 IO입니다.


#
# VsanCpuStats
#
com.vmware.vsan.perf.entity.vsan-cpu.description = vSAN CPU 오버헤드의 메트릭입니다.

#
# VsanCpuStatsGraphs
#
vsan-cpu.utilization.name = vSAN CPU 활용률
vsan-cpu.utilization.description = vSAN CPU 활용률입니다.
vsan-cpu.utilization.metrics.usedPct.name = 사용된 CPU 시간 백분율
vsan-cpu.utilization.metrics.usedPct.description = 사용된 CPU 시간 백분율
vsan-cpu.utilization.metrics.readyPct.name = CPU 준비 시간 백분율
vsan-cpu.utilization.metrics.readyPct.description = CPU 준비 시간 백분율입니다.
vsan-cpu.utilization.metrics.runPct.name = 실행 중인 CPU 시간 백분율
vsan-cpu.utilization.metrics.runPct.description = 실행 중인 CPU 시간 백분율입니다.

#
# VsanMemStats
#
com.vmware.vsan.perf.entity.vsan-memory.description = vSAN 메모리 오버헤드의 메트릭입니다.

#
# VsanMemStatsGraphs
#
vsan-memory.usage.name = vSAN 메모리 사용량
vsan-memory.usage.description = 메모리 사용량입니다.
vsan-memory.usage.metrics.kernelReservedSize.name = 커널 예약된 메모리 크기
vsan-memory.usage.metrics.kernelReservedSize.description = 커널 예약된 메모리 크기입니다.
vsan-memory.usage.metrics.uwReservedSize.name = 사용자 월드 예약된 메모리 크기
vsan-memory.usage.metrics.uwReservedSize.description = 사용자 월드 예약된 메모리 크기입니다.

#
# HostCpuStats
#
com.vmware.vsan.perf.entity.host-cpu.description = 호스트의 CPU 메트릭입니다.

#
# HostCpuStatsGraphs
#
host-cpu.utilization.name = CPU 백분율
host-cpu.utilization.description = 호스트 CPU의 백분율입니다.
host-cpu.utilization.metrics.coreUtilPct.name = CPU 코어 활용률
host-cpu.utilization.metrics.coreUtilPct.description = CPU 코어 활용률입니다.
host-cpu.utilization.metrics.pcpuUsedPct.name = 사용된 물리적 CPU 시간 백분율
host-cpu.utilization.metrics.pcpuUsedPct.description = 사용된 물리적 CPU 시간 백분율입니다.
host-cpu.utilization.metrics.pcpuUtilPct.name = 물리적 CPU 활용률
host-cpu.utilization.metrics.pcpuUtilPct.description = 물리적 CPU 활용률입니다.

#
# Vsan2DiskScsifw
#
com.vmware.vsan.perf.entity.vsan2-disk-scsifw.description = vSAN2 디스크 물리적/펌웨어 계층 메트릭입니다.

#
# Vsan2DiskScsifwGraphs
#
vsan2-disk-scsifw.iopsDev.name = vSAN2 디스크 물리적/펌웨어 계층 IOPS
vsan2-disk-scsifw.iopsDev.description = vSAN2 디스크 물리적/펌웨어 계층 IOPS입니다.
vsan2-disk-scsifw.iopsDev.metrics.iopsDevRead.name = vSAN2 디스크 물리적/펌웨어 계층 읽기 IOPS
vsan2-disk-scsifw.iopsDev.metrics.iopsDevRead.description = vSAN2 디스크 물리적/펌웨어 계층 읽기 IOPS입니다.
vsan2-disk-scsifw.iopsDev.metrics.iopsDevWrite.name = vSAN2 디스크 물리적/펌웨어 계층 쓰기 IOPS
vsan2-disk-scsifw.iopsDev.metrics.iopsDevWrite.description = vSAN2 디스크 물리적/펌웨어 계층 쓰기 IOPS입니다.

vsan2-disk-scsifw.latencyDev.name = vSAN2 디스크 물리적/펌웨어 계층 지연 시간
vsan2-disk-scsifw.latencyDev.description = vSAN2 디스크 물리적/펌웨어 계층 지연 시간입니다.
vsan2-disk-scsifw.latencyDev.metrics.latencyDevRead.name = vSAN2 디스크 물리적/펌웨어 계층 읽기 지연 시간
vsan2-disk-scsifw.latencyDev.metrics.latencyDevRead.description = vSAN2 디스크 물리적/펌웨어 계층 읽기 지연 시간입니다.
vsan2-disk-scsifw.latencyDev.metrics.latencyDevWrite.name = vSAN2 디스크 물리적/펌웨어 계층 쓰기 지연 시간
vsan2-disk-scsifw.latencyDev.metrics.latencyDevWrite.description = vSAN2 디스크 물리적/펌웨어 계층 쓰기 지연 시간입니다.
vsan2-disk-scsifw.latencyDev.metrics.latencyDevGAvg.name = vSAN2 디스크 물리적/펌웨어 계층 게스트 평균 지연 시간
vsan2-disk-scsifw.latencyDev.metrics.latencyDevGAvg.description = vSAN2 디스크 물리적/펌웨어 계층 게스트 평균 IO 지연 시간(총 지연 시간)입니다.
vsan2-disk-scsifw.latencyDev.metrics.latencyDevDAvg.name = vSAN2 디스크 물리적/펌웨어 계층 디바이스 평균 지연 시간
vsan2-disk-scsifw.latencyDev.metrics.latencyDevDAvg.description = vSAN2 디스크 물리적/펌웨어 계층 디바이스 평균 IO 지연 시간(HBA에서 백엔드 스토리지까지)입니다.

vsan2-disk-scsifw.throughputDev.name = vSAN2 디스크 물리적/펌웨어 계층 처리량
vsan2-disk-scsifw.throughputDev.description = vSAN2 디스크 물리적/펌웨어 계층 처리량입니다.
vsan2-disk-scsifw.throughputDev.metrics.throughputDevRead.name = vSAN2 디스크 물리적/펌웨어 계층 읽기 처리량
vsan2-disk-scsifw.throughputDev.metrics.throughputDevRead.description = vSAN2 디스크 물리적/펌웨어 계층 읽기 처리량입니다.
vsan2-disk-scsifw.throughputDev.metrics.throughputDevWrite.name = vSAN2 디스크 물리적/펌웨어 계층 쓰기 처리량
vsan2-disk-scsifw.throughputDev.metrics.throughputDevWrite.description = vSAN2 디스크 물리적/펌웨어 계층 쓰기 처리량입니다.


#
# Vsan2DiskLsom2
#
com.vmware.vsan.perf.entity.vsan2-disk-lsom2.description = vSAN2 디스크의 vSAN 계층 메트릭입니다.

#
# Vsan2DiskLsom2Graphs
#
vsan2-disk-lsom2.iopsCap.name = vSAN2 디스크의 vSAN 계층 IOPS
vsan2-disk-lsom2.iopsCap.description = vSAN2 디스크의 vSAN 계층 IOPS입니다.
vsan2-disk-lsom2.iopsCap.metrics.iopsReadCapacity.name = vSAN2 디스크의 vSAN 계층 읽기 IOPS
vsan2-disk-lsom2.iopsCap.metrics.iopsReadCapacity.description = vSAN2 디스크의 vSAN 계층 읽기 IOPS입니다.
vsan2-disk-lsom2.iopsCap.metrics.iopsWriteCapacity.name = vSAN2 디스크의 vSAN 계층 쓰기 IOPS
vsan2-disk-lsom2.iopsCap.metrics.iopsWriteCapacity.description = vSAN2 디스크의 vSAN 계층 쓰기 IOPS입니다.

vsan2-disk-lsom2.throughputCap.name = vSAN2 디스크의 vSAN 계층 처리량
vsan2-disk-lsom2.throughputCap.description = vSAN2 디스크의 vSAN 계층 처리량입니다.
vsan2-disk-lsom2.throughputCap.metrics.tputReadCapacity.name = vSAN2 디스크의 vSAN 계층 읽기 처리량
vsan2-disk-lsom2.throughputCap.metrics.tputReadCapacity.description = vSAN2 디스크의 vSAN 계층 읽기 처리량입니다.
vsan2-disk-lsom2.throughputCap.metrics.tputWriteCapacity.name = vSAN2 디스크의 vSAN 계층 쓰기 처리량
vsan2-disk-lsom2.throughputCap.metrics.tputWriteCapacity.description = vSAN2 디스크의 vSAN 계층 쓰기 처리량입니다.

vsan2-disk-lsom2.avgLatencyCap.name = vSAN2 디스크의 vSAN 계층 평균 지연 시간
vsan2-disk-lsom2.avgLatencyCap.description = vSAN2 디스크의 vSAN 계층 평균 지연 시간입니다.
vsan2-disk-lsom2.avgLatencyCap.metrics.avgLatReadCapacity.name = vSAN2 디스크의 vSAN 계층 평균 읽기 지연 시간
vsan2-disk-lsom2.avgLatencyCap.metrics.avgLatReadCapacity.description = vSAN2 디스크의 vSAN 계층 평균 읽기 지연 시간입니다.
vsan2-disk-lsom2.avgLatencyCap.metrics.avgLatWriteCapacity.name = vSAN2 디스크의 vSAN 계층 평균 쓰기 지연 시간
vsan2-disk-lsom2.avgLatencyCap.metrics.avgLatWriteCapacity.description = vSAN2 디스크의 vSAN 계층 평균 쓰기 지연 시간입니다.


#
# ClusterRemoteDomClient
#
com.vmware.vsan.perf.entity.cluster-remotedomclient.description = 원격 vSAN VM 사용량의 관점에서 클러스터에 대한 메트릭입니다.

#
# ClusterRemoteDomClientGraphs
#
cluster-remotedomclient.iops.name = IOPS
cluster-remotedomclient.iops.description = 선택한 서버 클러스터에 대해 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 IOPS입니다.
cluster-remotedomclient.iops.metrics.iopsRead.name = 읽기 IOPS
cluster-remotedomclient.iops.metrics.iopsRead.description = 선택한 서버 클러스터에 대해 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 읽기 IOPS입니다.
cluster-remotedomclient.iops.metrics.iopsWrite.name = 쓰기 IOPS
cluster-remotedomclient.iops.metrics.iopsWrite.description = 선택한 서버 클러스터에 대해 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 쓰기 IOPS입니다.

cluster-remotedomclient.throughput.name = 처리량
cluster-remotedomclient.throughput.description = 선택한 서버 클러스터에 대해 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 처리량입니다.
cluster-remotedomclient.throughput.metrics.throughputRead.name = 읽기 처리량
cluster-remotedomclient.throughput.metrics.throughputRead.description = 선택한 서버 클러스터에 대해 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 읽기 처리량입니다.
cluster-remotedomclient.throughput.metrics.throughputWrite.name = 쓰기 처리량
cluster-remotedomclient.throughput.metrics.throughputWrite.description = 선택한 서버 클러스터에 대해 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 쓰기 처리량입니다.

cluster-remotedomclient.latency.name = 지연 시간
cluster-remotedomclient.latency.description = 선택한 서버 클러스터에 대해 모든 원격 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 생성되는 IO의 평균 지연 시간입니다.
cluster-remotedomclient.latency.metrics.latencyAvgRead.name = 읽기 지연 시간
cluster-remotedomclient.latency.metrics.latencyAvgRead.description = 선택한 서버 클러스터에 대해 모든 원격 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 생성되는 IO의 평균 읽기 지연 시간입니다.
cluster-remotedomclient.latency.metrics.latencyAvgWrite.name = 쓰기 지연 시간
cluster-remotedomclient.latency.metrics.latencyAvgWrite.description = 선택한 서버 클러스터에 대해 모든 원격 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 생성되는 IO의 평균 쓰기 지연 시간입니다.

cluster-remotedomclient.congestion.name = 정체
cluster-remotedomclient.congestion.description = 선택한 서버 클러스터에 대해 모든 원격 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 생성되는 IO의 정체입니다.
cluster-remotedomclient.congestion.metrics.congestion.name = 정체
cluster-remotedomclient.congestion.metrics.congestion.description = 선택한 서버 클러스터에 대해 모든 원격 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 생성되는 IO의 정체입니다.

cluster-remotedomclient.oio.name = 미결 IO
cluster-remotedomclient.oio.description = 선택한 서버 클러스터에 대해 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 미결 IO입니다.
cluster-remotedomclient.oio.metrics.oio.name = 미결 IO
cluster-remotedomclient.oio.metrics.oio.description = 선택한 서버 클러스터에 대해 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 미결 IO입니다.

#
# ComputeClusterRemoteDomClient
#
com.vmware.vsan.perf.entity.computeCluster-remotedomclient.description = 원격 vSAN VM 사용량의 관점에서 클러스터에 대한 메트릭입니다.

#
# ClusterRemoteDomClientGraphs
#
computeCluster-remotedomclient.iops.name = IOPS
computeCluster-remotedomclient.iops.description = 선택한 서버 클러스터에 대해 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 IOPS입니다.
computeCluster-remotedomclient.iops.metrics.iopsRead.name = 읽기 IOPS
computeCluster-remotedomclient.iops.metrics.iopsRead.description = 선택한 서버 클러스터에 대해 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 읽기 IOPS입니다.
computeCluster-remotedomclient.iops.metrics.iopsWrite.name = 쓰기 IOPS
computeCluster-remotedomclient.iops.metrics.iopsWrite.description = 선택한 서버 클러스터에 대해 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 쓰기 IOPS입니다.

computeCluster-remotedomclient.throughput.name = 처리량
computeCluster-remotedomclient.throughput.description = 선택한 서버 클러스터에 대해 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 처리량입니다.
computeCluster-remotedomclient.throughput.metrics.throughputRead.name = 읽기 처리량
computeCluster-remotedomclient.throughput.metrics.throughputRead.description = 선택한 서버 클러스터에 대해 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 읽기 처리량입니다.
computeCluster-remotedomclient.throughput.metrics.throughputWrite.name = 쓰기 처리량
computeCluster-remotedomclient.throughput.metrics.throughputWrite.description = 선택한 서버 클러스터에 대해 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 쓰기 처리량입니다.

computeCluster-remotedomclient.latency.name = 지연 시간
computeCluster-remotedomclient.latency.description = 선택한 서버 클러스터에 대해 모든 원격 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 생성되는 IO의 평균 지연 시간입니다.
computeCluster-remotedomclient.latency.metrics.latencyAvgRead.name = 읽기 지연 시간
computeCluster-remotedomclient.latency.metrics.latencyAvgRead.description = 선택한 서버 클러스터에 대해 모든 원격 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 생성되는 IO의 평균 읽기 지연 시간입니다.
computeCluster-remotedomclient.latency.metrics.latencyAvgWrite.name = 쓰기 지연 시간
computeCluster-remotedomclient.latency.metrics.latencyAvgWrite.description = 선택한 서버 클러스터에 대해 모든 원격 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 생성되는 IO의 평균 쓰기 지연 시간입니다.

computeCluster-remotedomclient.congestion.name = 정체
computeCluster-remotedomclient.congestion.description = 선택한 서버 클러스터에 대해 모든 원격 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 생성되는 IO의 정체입니다.
computeCluster-remotedomclient.congestion.metrics.congestion.name = 정체
computeCluster-remotedomclient.congestion.metrics.congestion.description = 선택한 서버 클러스터에 대해 모든 원격 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 생성되는 IO의 정체입니다.

computeCluster-remotedomclient.oio.name = 미결 IO
computeCluster-remotedomclient.oio.description = 선택한 서버 클러스터에 대해 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 미결 IO입니다.
computeCluster-remotedomclient.oio.metrics.oio.name = 미결 IO
computeCluster-remotedomclient.oio.metrics.oio.description = 선택한 서버 클러스터에 대해 모든 vSAN 클라이언트(가상 시스템, 통계 개체 등)에 의해 사용되는 미결 IO입니다.
