{"version":3,"sources":["webpack:///src/app/vsan/faultdomains/actions/move/move-hosts-context.ts","webpack:///src/app/vsan/faultdomains/fault-domains.module.ts","webpack:///src/app/vsan/faultdomains/fault-domains.component.ts","webpack:///src/app/vsan/faultdomains/fault-domains.html","webpack:///src/app/vsan/faultdomains/actions/edit/edit-domain.html","webpack:///src/app/vsan/faultdomains/actions/move/move-hosts-confirmation.component.ts","webpack:///src/app/vsan/faultdomains/component/category-label/category-label.component.ts","webpack:///src/app/vsan/faultdomains/actions/edit/edit-domain.component.ts","webpack:///src/app/vsan/faultdomains/component/category-label/category-label.html","webpack:///src/app/vsan/faultdomains/view/fault-domain-action-menu.html","webpack:///src/app/vsan/faultdomains/actions/move/move-hosts-confirmation.html","webpack:///src/app/vsan/faultdomains/actions/stretchedcluster/promote-domain.component.ts","webpack:///src/app/vsan/faultdomains/actions/stretchedcluster/disable-stretched-cluster.html","webpack:///src/app/generated/preferred-fault-domain-data.ts","webpack:///src/app/vsan/faultdomains/actions/edit/edit-domain-context.ts","webpack:///src/app/vsan/faultdomains/view/standalone-hosts-action-menu.component.ts","webpack:///src/app/vsan/faultdomains/view/fault-domain-action-menu.component.ts","webpack:///src/app/vsan/faultdomains/actions/stretchedcluster/promote-domain.html","webpack:///src/app/vsan/faultdomains/actions/stretchedcluster/disable-stretched-cluster.component.ts","webpack:///src/app/vsan/faultdomains/view/standalone-hosts-action-menu.html"],"names":["MoveHostsContext","hostModels","operation","message","targetDomain","actionButtonLabel","actionButtonClass","promptForDomainName","suppressDestructiveWarn","hosts","getHosts","objectInfo","getObjectInfo","sourceDomain","getSourceDomainName","warnDestructiveForSourceDomain","shouldWarnDestructiveForSourceDomain","map","model","data","domain","uid","length","label","getString","allAffected","operationName","buttonText","routes","path","component","FaultDomainsModule","FaultDomainsComponent","taskSvc","permissionService","capabilityProvider","vsanConfigService","stretchedClusterService","capacityDataService","advancedOptionsService","storageService","rdmaService","FaultDomainModel","faultDomainModels","standaloneModels","storageConsumption","alertMessage","witnessInfos","hasEditPermission","allHostsCount","hasDisconnectedHosts","disableCfgStretchedClusterBtn","isStretchedClusterSupported","isHostReservedCapacitySupported","isRdmaSupported","isRdmaStretchedClusterSupported","isSharedWitnessAllowed","isCapacityReservationEnabled","isRdmaEnabled","checkDisconnectedState","some","item","connectionState","connected","hasEnoughHostsForStretchedCluster","STRETCHED_CLUSTER_MIN_HOSTS_COUNT","handleTaskList","taskUids","initializeLoading","fetch","promises","forEach","t","push","getAwaitResult","fromUid","Promise","all","then","showSpinner","noHostsView","clusterRef","getClusterRefFromLocalStorage","contextObject","getVsanConfigSpec","config","isVsanMaxEnabled","getAvailableDomains","domainsData","getWitnessHostData","witnessData","getStorageConsumptionByHost","hostsCapacity","processHostsCapacity","getAdvancedOptionsInfo","advancedOptions","processAdvancedOptions","manageFaultDomainPermissions","EDIT_CLUSTER","CONFIG_STORAGE","hasPermissions","result","getClusterCapabilityData","capability","reduce","sum","isHost","children","FAULT_DOMAINS_VIEW_NO_HOSTS","getSharedWitnessAllowed","refresh","e","warn","pop","FAULT_DOMAINS_CONTEXT_KEY","hostsStorageData","hostRef","capacityReservationConfig","reservationConfig","isReservationEnforced","hostFailureReservation","vsanOperationReservation","isStretchedCluster","witnessHost","getIsSharedWitnessSupportedOnVc","getIsSharedWitnessSupported","isSharedWitnessSupported","isSharedWitnessSupportedOnVc","isLoading","sort","item1","item2","localeCompare","preferredDomain","getPreferredDomain","find","secondaryDomain","getFaultDomainModels","getStandaloneModels","hasAnyDisconnectedState","filter","srOnlyMessage","faultToleranceDescription","getFaultToleranceInfo","standaloneHosts","getDomainConsumptionData","event","onCreateDomain","memberHosts","onEditDomain","onDeleteDomain","onMoveRequest","onMarkAsPreferred","onConfigureStretchedCluster","onDisableStretchedCluster","onChangeWitness","affectedHosts","isStandaloneHostTarget","isDomainPreferred","isPreferred","actionContext","moveHosts","setSize","open","taskRefs","context","createDomain","witnessInfo","editDomain","allSelectedHosts","selectedStandaloneHosts","host","domainModel","isSelected","SELECTED","deleteDomain","CONFIGURE_STRETCHED_CLUSTER_WIZARD","setDimensions","WIZARD_XL","taskRef","witnessName","witnessHostName","domainName","currentWitnessHost","intoStandalone","dragData","selection","isDragging","allHostsAreAffected","isMetadataWitnessHost","CREATE_DOMAIN_PLACEHOLDER","MoveHostsConfirmationComponent","configureClusterMutationProvider","formBuilder","domainValidator","control","domainNameValidationError","getDomainName","value","domainSettings","group","getModalContext","setValue","checkForInaccessibleHosts","invalid","domainSettingsForm","markAsTouched","spec","Factory","create","updateFaultDomainInfo","tasks","closeModalDialog","get","trim","inaccessibleHosts","join","CategoryLabelComponent","EditDomainComponent","stretchedClusterMutationProvider","Icon","existingDomains","selectedHosts","loading","prepopulateName","hostsData","handleData","alertMessages","createHost","domains","preselectHosts","indexOf","validateHosts","specs","unchecked","isCurrentDomainPreferred","preferredFaultDomainName","isCurrentDomainRenamed","setPreferredFaultDomain","disconnectedHostWarning","stretchedClusterConfigurationWarning","validateStretchedClusterConfiguration","validateStretchedClusterStandaloneHostsNotAdded","validateStretchedClusterPreferredDomainNotRemoved","validateStretchedClusterRequiredDomainsNotRemoved","currentDomain","selectedHostsFromCurrentDomainCount","preferredDomainName","selectedHostsFromPreferredDomainCount","hostsCountFromDomainEntries","countSelectedHostsFromOtherDomains","entries","domainsToRemove","domainHostsCount","next","done","hostsCount","Object","keys","selectedHostsCountFromDomain","Map","isHostFromDifferentDomain","has","set","PromoteDomainComponent","mutationProvider","busy","dialogTitle","apply","errors","PreferredFaultDomainData","EditDomainContext","h","StandaloneHostsActionMenuComponent","disabled","isStretchedClusterEnabled","onActionEvent","createDomainEvent","emit","moveHostsEvent","isEmpty","labelKey","FaultDomainActionMenuComponent","iconId","selectionCount","validTargetDomains","DisableStretchedClusterComponent","onError","removeWitnessHost","task","error"],"mappings":"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","file":"72-es5.js","sourcesContent":["/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {FaultDomainModel} from \"@model/fault-domain.model\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * Holds the data for the MoveHostsConfirmationComponent dialog.\n */\nexport class MoveHostsContext {\n\n   hosts: DomainOrHostData[];\n   objectInfo: string;\n   sourceDomain: string;\n   /**\n    * Whether this operation will result in\n    * the source domain being destroyed\n    * because all its hosts are going to be removed.\n    */\n   warnDestructiveForSourceDomain: boolean;\n\n   static createDomain(hosts: FaultDomainModel[]): MoveHostsContext {\n      return new MoveHostsContext(\n            hosts,\n            VsanUiUtils.getString(\"vsan.faultDomains.action.createDomain.title\"),\n            VsanUiUtils.getString(\"vsan.faultDomains.action.createDomain.message.create\"),\n            null,\n            VsanUiUtils.getString(\"vsan.common.create\"),\n            \"btn-success\",\n            true);\n   }\n\n   static renameDomain(domain: FaultDomainModel): MoveHostsContext {\n      return new MoveHostsContext(\n            domain.hosts,\n            VsanUiUtils.getString(\"vsan.faultDomains.action.renameDomain\"),\n            VsanUiUtils.getString(\"vsan.faultDomains.action.renameDomain.message\"),\n            null,\n            VsanUiUtils.getString(\"vsan.faultDomains.action.renameDomain.action\"),\n            \"\",\n            true,\n            true);\n   }\n\n   static deleteDomain(domain: FaultDomainModel): MoveHostsContext {\n      return new MoveHostsContext(\n            domain.hosts,\n            VsanUiUtils.getString(\"vsan.faultDomains.action.deleteDomain\"),\n            VsanUiUtils.getString(\"vsan.faultDomains.action.deleteDomain.message\", domain.data.uid),\n            null,\n            VsanUiUtils.getString(\"vsan.common.delete\"),\n            \"btn-danger\",\n            false,\n            true);\n   }\n\n   static moveHosts(hosts: FaultDomainModel[], targetDomain: string): MoveHostsContext {\n      const operationName: string = VsanUiUtils.getString(targetDomain\n            ? \"vsan.faultDomains.action.moveHosts.moveIn\"\n            : \"vsan.faultDomains.action.moveHosts.moveOut\");\n      const message: string = targetDomain\n            ? VsanUiUtils.getString(\"vsan.faultDomains.action.moveHosts.moveIn.message\", targetDomain)\n            : VsanUiUtils.getString(\"vsan.faultDomains.action.moveHosts.moveOut.message\", hosts[0].domain.data.uid);\n      const buttonText: string = VsanUiUtils.getString(\"vsan.faultDomains.action.moveHosts.action\");\n      return new MoveHostsContext(hosts, operationName, message, targetDomain, buttonText);\n   }\n\n   constructor(\n         hostModels: FaultDomainModel[],\n         public operation: string,\n         public message: string,\n         public targetDomain: string,\n         public actionButtonLabel: string,\n         public actionButtonClass: string = \"\",\n         public promptForDomainName: boolean = false,\n         public suppressDestructiveWarn: boolean = false) {\n      this.hosts = this.getHosts(hostModels);\n      this.objectInfo = this.getObjectInfo(hostModels, this.hosts);\n      this.sourceDomain = this.getSourceDomainName(hostModels);\n      this.warnDestructiveForSourceDomain = this.shouldWarnDestructiveForSourceDomain(hostModels);\n   }\n\n   private getHosts(hostModels: FaultDomainModel[]): DomainOrHostData[] {\n      return hostModels.map(model => model.data);\n   }\n\n   private getObjectInfo(hostModels: FaultDomainModel[], hosts: DomainOrHostData[]): string {\n      if (this.suppressDestructiveWarn) {\n         // domain operation\n         return hostModels[0].domain.data.uid;\n      }\n      if (hosts.length === 1) {\n         return hosts[0].label;\n      }\n      return VsanUiUtils.getString(\"vsan.faultDomains.action.hostCount\", hosts.length);\n   }\n\n   private getSourceDomainName(hostModels: FaultDomainModel[]): string {\n      if (!hostModels[0].domain?.data) {\n         return null;\n      }\n      return hostModels[0].domain.data.uid;\n   }\n\n   private shouldWarnDestructiveForSourceDomain(hostModels: FaultDomainModel[]): boolean {\n      return !this.suppressDestructiveWarn && FaultDomainModel.allAffected(hostModels);\n   }\n\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {DiskmgmtCommonModule} from \"@component/diskmgmt/diskmgmt-common.module\";\nimport {VsanCommonModule} from \"app/vsan/common/vsan-common.module\";\nimport {FaultDomainsComponent} from \"./fault-domains.component\";\nimport {DisableStretchedClusterComponent} from \"./actions/stretchedcluster/disable-stretched-cluster.component\";\nimport {PromoteDomainComponent} from \"./actions/stretchedcluster/promote-domain.component\";\nimport {EditDomainComponent} from \"./actions/edit/edit-domain.component\";\nimport {MoveHostsConfirmationComponent} from \"./actions/move/move-hosts-confirmation.component\";\nimport {StandaloneHostsActionMenuComponent} from \"./view/standalone-hosts-action-menu.component\";\nimport {CategoryLabelComponent} from \"./component/category-label/category-label.component\";\nimport {FaultDomainActionMenuComponent} from \"./view/fault-domain-action-menu.component\";\nimport {NgDragDropModule} from \"ng-drag-drop\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\nimport {ConfigurationsModule} from \"@component/configurations/configurations.module\";\nimport {PersistentStorageService} from \"@service/browser-storage.service\";\n\nconst routes: Routes = [\n   {\n      path: \"\",\n      component: FaultDomainsComponent,\n   },\n   {\n      path: \"disableStretchedCluster\",\n      component: DisableStretchedClusterComponent,\n   },\n   {\n      path: \"promoteDomain\",\n      component: PromoteDomainComponent,\n   },\n   {\n      path: \"editDomain\",\n      component: EditDomainComponent,\n   },\n   {\n      path: \"moveHosts\",\n      component: MoveHostsConfirmationComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      ClarityModule,\n      VsanCommonModule,\n      ConfigurationsModule,\n      DiskmgmtCommonModule,\n      UnavailableViewModule,\n      RouterModule.forChild(routes),\n      NgDragDropModule.forRoot(),\n   ],\n   declarations: [\n      FaultDomainsComponent,\n      CategoryLabelComponent,\n      DisableStretchedClusterComponent,\n      PromoteDomainComponent,\n      EditDomainComponent,\n      MoveHostsConfirmationComponent,\n      StandaloneHostsActionMenuComponent,\n      FaultDomainActionMenuComponent,\n   ],\n   providers: [\n      PersistentStorageService,\n   ],\n})\nexport class FaultDomainsModule {\n}\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ClrSelectedState} from \"@clr/angular\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {WitnessHostData} from \"@generated/witness-host-data\";\nimport {ConnectionState} from \"@generated/connection-state\";\nimport {\n   ChangeWitnessHostEvent,\n   ConfigureStretchedClusterEvent,\n   CreateDomainEvent,\n   DeleteDomainEvent,\n   DisabledStretchedClusterEvent,\n   EditDomainEvent,\n   FaultDomainEvent,\n   MoveHostsEvent,\n   PromoteDomainEvent,\n} from \"../common/event/fault-domain.event\";\nimport {Logger} from \"@util/logger\";\nimport {MoveHostsContext} from \"./actions/move/move-hosts-context\";\nimport {Privileges} from \"@generated/privileges\";\nimport {EditDomainContext} from \"./actions/edit/edit-domain-context\";\nimport {FaultDomainConsumptionData} from \"@model/fault-domain-consumption-data\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {ChangeWitnessContext} from \"@navigation/context/change-witness-context\";\nimport {VsanStretchedClusterService} from \"@generated/vsan-stretched-cluster-service\";\nimport {CapacityDataService} from \"@generated/capacity-data-service\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\nimport {AdvancedOptionsService} from \"@generated/advanced-options-service\";\nimport {AdvancedOptionsInfo} from \"@generated/advanced-options-info\";\nimport {CapacityReservationUtil} from \"@util/capacity-reservation-util\";\nimport {CapacityReservationConfig} from \"@generated/capacity-reservation-config\";\nimport {HostStorageConsumptionData} from \"@generated/host-storage-consumption-data\";\nimport {UnavailableViewSpec} from \"@component/unavailable-view/unavailable-view-spec\";\nimport {VsanRdmaService} from \"@generated/vsan-rdma-service\";\nimport {VsanRoutes} from \"../../vsan-routes\";\nimport {FaultDomainModel} from \"@model/fault-domain.model\";\nimport {InlineViewContextKey} from \"@model/inline-view-context-key.data\";\nimport {PersistentStorageService} from \"@service/browser-storage.service\";\nimport {FaultDomainsUtil} from \"@util/fault-domains-util\";\nimport {VsanConfigService} from \"@generated/vsan-config-service\";\n\n@Component({\n   templateUrl: \"fault-domains.html\",\n   styleUrls: [\"fault-domains.scss\"],\n   selector: \"vsan-fault-domains\",\n})\nexport class FaultDomainsComponent implements OnInit {\n\n   readonly FaultDomainModel: typeof FaultDomainModel = FaultDomainModel;\n   readonly FaultDomainsComponent: typeof FaultDomainsComponent = FaultDomainsComponent;\n   private static readonly STRETCHED_CLUSTER_MIN_HOSTS_COUNT: number = 2;\n\n   clusterRef: ManagedObject;\n   faultDomainModels: FaultDomainModel[] = [];\n   standaloneModels: FaultDomainModel[] = [];\n   preferredDomain: string;\n   secondaryDomain: string;\n   data: DomainOrHostData[];\n   storageConsumption: any = {};\n   isVsanMaxEnabled: boolean;\n   alertMessage: string = null;\n   witnessInfos: WitnessHostData[] = null; // will be null if stretched cluster/metadata only node is disabled\n   hasEditPermission: boolean = true;\n   allHostsCount: number = 0;\n   private hasDisconnectedHosts: boolean = false;\n   disableCfgStretchedClusterBtn: boolean = false;\n   showSpinner: boolean;\n   isStretchedClusterSupported: boolean = false;\n   isHostReservedCapacitySupported: boolean = false;\n   isRdmaSupported: boolean = false;\n   isRdmaStretchedClusterSupported: boolean = false;\n   isSharedWitnessAllowed: boolean = false;\n   isCapacityReservationEnabled: boolean = false;\n   isRdmaEnabled: boolean = false;\n   noHostsView: UnavailableViewSpec;\n   faultToleranceDescription: string;\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   constructor(\n         private taskSvc: TaskMonitorService,\n         private permissionService: PermissionService,\n         private capabilityProvider: VsanCapabilityProvider,\n         private vsanConfigService: VsanConfigService,\n         private stretchedClusterService: VsanStretchedClusterService,\n         private capacityDataService: CapacityDataService,\n         private advancedOptionsService: AdvancedOptionsService,\n         private storageService: PersistentStorageService,\n         private rdmaService: VsanRdmaService) {\n   }\n\n   ngOnInit(): void {\n      this.clusterRef = this.getClusterRefFromLocalStorage() || ManagedObject.contextObject;\n      this.fetch();\n   }\n\n   @RefreshHandler\n   fetch(): void {\n      this.initializeLoading();\n\n      const promises: Promise<any>[] = [];\n\n      promises.push(this.vsanConfigService.getVsanConfigSpec(this.clusterRef)\n            .then(config => this.isVsanMaxEnabled = config.isVsanMaxEnabled));\n\n      promises.push(this.stretchedClusterService.getAvailableDomains(this.clusterRef)\n            .then(domainsData => this.data = domainsData));\n\n      promises.push(this.stretchedClusterService.getWitnessHostData(this.clusterRef)\n            .then(witnessData => this.witnessInfos = witnessData));\n\n      promises.push(this.capacityDataService.getStorageConsumptionByHost(this.clusterRef)\n            .then(hostsCapacity => this.processHostsCapacity(hostsCapacity)));\n\n      promises.push(this.advancedOptionsService.getAdvancedOptionsInfo(this.clusterRef)\n            .then(advancedOptions => this.processAdvancedOptions(advancedOptions)));\n\n      promises.push(this.rdmaService.isRdmaEnabled(this.clusterRef)\n            .then(isRdmaEnabled => this.isRdmaEnabled = isRdmaEnabled));\n\n      const manageFaultDomainPermissions: string[] = [Privileges.EDIT_CLUSTER(), Privileges.CONFIG_STORAGE()];\n      promises.push(this.permissionService.hasPermissions(this.clusterRef, manageFaultDomainPermissions)\n            .then((result: boolean) => this.hasEditPermission = result)\n            .catch(() => this.hasEditPermission = true));\n\n      promises.push(this.capabilityProvider.getClusterCapabilityData(this.clusterRef)\n            .then(capability => {\n               this.isStretchedClusterSupported = capability.isStretchedClusterSupported;\n               this.isHostReservedCapacitySupported = capability.isHostReservedCapacitySupported;\n               this.isRdmaSupported = capability.isRdmaSupported;\n               this.isRdmaStretchedClusterSupported = capability.isRdmaStretchedClusterSupported;\n            }));\n\n      Promise.all(promises)\n            .then(async () => {\n               this.allHostsCount = this.data.reduce((sum, item) => sum += item.isHost ? 1 : item.children.length, 0);\n               if (this.allHostsCount === 0) {\n                  this.noHostsView = UnavailableViewSpec.FAULT_DOMAINS_VIEW_NO_HOSTS;\n                  return;\n               }\n               this.isSharedWitnessAllowed = await this.getSharedWitnessAllowed();\n               this.refresh(this.data, this.witnessInfos);\n            })\n            .catch((e) => {\n               this.alertMessage = e;\n               Logger.warn(\"Failed to get Fault Domains data!\", e);\n            })\n            .finally(() => {\n               this.showSpinner = false;\n            });\n   }\n\n   private getClusterRefFromLocalStorage(): ManagedObject {\n      return this.storageService.pop(InlineViewContextKey.FAULT_DOMAINS_CONTEXT_KEY);\n   }\n\n   private processHostsCapacity(hostsStorageData: HostStorageConsumptionData[]): void {\n      this.storageConsumption = [];\n      hostsStorageData.forEach(item => {\n         if (item.hostRef) {\n            this.storageConsumption[ManagedObject.uid(item.hostRef)] = item;\n         }\n      });\n   }\n\n   private processAdvancedOptions(advancedOptions: AdvancedOptionsInfo): void {\n      if (!advancedOptions || !advancedOptions.capacityReservationConfig) {\n         this.isCapacityReservationEnabled = false;\n         return;\n      }\n      const reservationConfig: CapacityReservationConfig = advancedOptions.capacityReservationConfig;\n      this.isCapacityReservationEnabled =\n            CapacityReservationUtil.isReservationEnforced(reservationConfig.hostFailureReservation) ||\n            CapacityReservationUtil.isReservationEnforced(reservationConfig.vsanOperationReservation);\n   }\n\n   private async getSharedWitnessAllowed(): Promise<boolean>  {\n      if (this.isStretchedCluster && this.allHostsCount === 2) {\n         const hostRef: ManagedObject = this.witnessInfos[0].witnessHost;\n         let isSharedWitnessSupported: boolean;\n         let isSharedWitnessSupportedOnVc: boolean;\n         try {\n            [isSharedWitnessSupported, isSharedWitnessSupportedOnVc] = await Promise.all([\n               this.capabilityProvider.getIsSharedWitnessSupportedOnVc(hostRef),\n               this.capabilityProvider.getIsSharedWitnessSupported(hostRef)]);\n         } catch (e) {\n            Logger.warn(\"Failed to fetch shared witness capability!\", e);\n            return false;\n         }\n         return isSharedWitnessSupported && isSharedWitnessSupportedOnVc;\n      } else {\n         return false;\n      }\n   }\n\n   private refresh(data: DomainOrHostData[], witnessInfos: WitnessHostData[]): void {\n      if (!this.data) {\n         this.faultDomainModels.forEach(model => model.isLoading = true);\n         return;\n      }\n\n      data.sort((item1, item2) => item1.label.localeCompare(item2.label));\n\n      // Preferred domain name should be the same for all witness hosts, retrieve it from the first.\n      const preferredDomain: string = FaultDomainsUtil.getPreferredDomain(witnessInfos);\n      if (preferredDomain) {\n         this.preferredDomain = preferredDomain;\n         const domain: DomainOrHostData = data.find(model => !model.isHost && model.uid !== preferredDomain);\n         this.secondaryDomain = domain ? domain.uid : null;\n      } else {\n         this.preferredDomain = null;\n         this.secondaryDomain = null;\n      }\n\n      this.faultDomainModels = FaultDomainsUtil.getFaultDomainModels(data, preferredDomain);\n      this.standaloneModels = FaultDomainsUtil.getStandaloneModels(data, witnessInfos);\n      this.hasDisconnectedHosts =\n            this.hasAnyDisconnectedState(data.filter(item => item.isHost), this.faultDomainModels);\n\n      this.disableCfgStretchedClusterBtn =\n            this.hasDisconnectedHosts\n            || !this.isStretchedClusterSupported\n            || !this.hasEnoughHostsForStretchedCluster()\n            || this.isCapacityReservationEnabled\n            || (this.isRdmaSupported && this.isRdmaEnabled && !this.isRdmaStretchedClusterSupported);\n      this.srOnlyMessage = VsanUiUtils.getString(\"vsan.screenReader.message.page.loaded\",\n            VsanUiUtils.getString(\"vsan.faultDomains\"));\n      this.faultToleranceDescription = FaultDomainsUtil.getFaultToleranceInfo(data,\n            witnessInfos,\n            this.standaloneModels,\n            this.faultDomainModels,\n            this.storageConsumption);\n   }\n\n   private hasAnyDisconnectedState(standaloneHosts: DomainOrHostData[],\n         faultDomainModels: FaultDomainModel[]): boolean {\n      let result: boolean = this.checkDisconnectedState(standaloneHosts);\n      if (!result) {\n         result = faultDomainModels.some(item => this.checkDisconnectedState(item.data.children));\n      }\n      return result;\n   }\n\n   private checkDisconnectedState = (hosts: any[]): boolean =>\n         hosts.some(item => item.connectionState !== ConnectionState.connected);\n\n   private hasEnoughHostsForStretchedCluster = (): boolean => {\n      return this.allHostsCount >= FaultDomainsComponent.STRETCHED_CLUSTER_MIN_HOSTS_COUNT;\n   };\n\n   get stretchedClusterDisabledReason(): string {\n      if (this.disableCfgStretchedClusterBtn) {\n         if (!this.isStretchedClusterSupported) {\n            return VsanUiUtils.getString(\"vsan.faultDomains.label.notSupported\");\n         } else if (this.hasDisconnectedHosts) {\n            return VsanUiUtils.getString(\"vsan.faultDomains.label.hostDisconnected\");\n         } else if (!this.hasEnoughHostsForStretchedCluster()) {\n            return VsanUiUtils.getString(\"vsan.faultDomains.label.minHostsRquirement\");\n         } else if (this.isCapacityReservationEnabled) {\n            return VsanUiUtils.getString(\"vsan.faultDomains.label.capacityReservationEnabled\");\n         } else if (this.isRdmaSupported && this.isRdmaEnabled && !this.isRdmaStretchedClusterSupported) {\n            return VsanUiUtils.getString(\"vsan.faultDomains.label.rdmaEnabled\");\n         }\n      }\n      return \"\";\n   }\n\n   get faultDomainActionsDisbaledReason(): string {\n      if (this.isCapacityReservationEnabled) {\n         return VsanUiUtils.getString(\"vsan.faultDomains.label.capacityReservationEnabled\");\n      } else if (!this.hasEditPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      }\n      return \"\";\n   }\n\n   get disableChangeWitnessHostBtnReason(): string {\n      if (!this.hasEditPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      } else if (this.hasDisconnectedHosts) {\n         return VsanUiUtils.getString(\"vsan.faultDomains.action.changeHost.disable.label\");\n      } else if (!this.isStretchedClusterSupported) {\n         return VsanUiUtils.getString(\"vsan.faultDomains.label.notSupported\");\n      } else if (this.allHostsCount < FaultDomainsComponent.STRETCHED_CLUSTER_MIN_HOSTS_COUNT) {\n         return VsanUiUtils.getString(\"vsan.faultDomains.label.minHostsRquirement\");\n      }\n      return \"\";\n   }\n\n   getDomainConsumption(model: FaultDomainModel): FaultDomainConsumptionData {\n      return FaultDomainConsumptionData.getDomainConsumptionData(model, this.storageConsumption);\n   }\n\n   handleActionEvent(event: FaultDomainEvent): void {\n      if (event instanceof CreateDomainEvent) {\n         this.onCreateDomain(event.memberHosts);\n      } else if (event instanceof EditDomainEvent) {\n         this.onEditDomain(event.targetDomain);\n      } else if (event instanceof DeleteDomainEvent) {\n         this.onDeleteDomain(event.targetDomain);\n      } else if (event instanceof MoveHostsEvent) {\n         this.onMoveRequest(event.hosts, event.targetDomain);\n      } else if (event instanceof PromoteDomainEvent) {\n         this.onMarkAsPreferred(event.targetDomain);\n      } else if (event instanceof ConfigureStretchedClusterEvent) {\n         this.onConfigureStretchedCluster();\n      } else if (event instanceof DisabledStretchedClusterEvent) {\n         this.onDisableStretchedCluster();\n      } else if (event instanceof ChangeWitnessHostEvent) {\n         this.onChangeWitness();\n      } else {\n         Logger.warn(\"unknown action event\", event);\n      }\n   }\n\n   onMoveRequest(affectedHosts: FaultDomainModel[], targetDomain: string): void {\n      if (affectedHosts.length === 0) {\n         return;\n      }\n      // Prevent invalid stretched cluster configuration:\n      if (this.isStretchedCluster) {\n         // 1) Don't move host from a domain to standalone hosts\n         const isStandaloneHostTarget: boolean = !targetDomain;\n         if (isStandaloneHostTarget) {\n            return;\n         }\n         // 2) Don't move all hosts from domain 'A' to domain 'B' if domain 'A' is preferred or all domains are =< 2\n         const isDomainPreferred: boolean = affectedHosts[0].domain && affectedHosts[0].domain.isPreferred;\n\n         if (FaultDomainModel.allAffected(affectedHosts) && (this.faultDomainModels.length <= 2 || isDomainPreferred)) {\n            return;\n         }\n      }\n\n      const actionContext: MoveHostsContext = MoveHostsContext.moveHosts(affectedHosts, targetDomain);\n\n      new ModalBuilder(\"faultDomains/moveHosts\")\n            .setSize(640, actionContext.warnDestructiveForSourceDomain ? 260 : 220)\n            .open(actionContext)\n            .then(taskRefs => this.handleTaskList(taskRefs.map(ManagedObject.uid)));\n   }\n\n   onCreateDomain(affectedHosts: FaultDomainModel[]): void {\n      const context: MoveHostsContext = MoveHostsContext.createDomain(affectedHosts);\n      new ModalBuilder(\"faultDomains/moveHosts\")\n            .setSize(640, context.warnDestructiveForSourceDomain ? 320 : 280)\n            .open(context)\n            .then(taskRefs => this.handleTaskList(taskRefs.map(ManagedObject.uid)));\n   }\n\n   onEditDomain(domain: FaultDomainModel = null): void {\n      let context: EditDomainContext;\n      // pass witnessInfo for stretched cluster case only\n      const witnessInfo: WitnessHostData = this.isStretchedCluster ? this.witnessInfos[0] : null;\n      if (domain) {\n         context = EditDomainContext.editDomain(domain, witnessInfo, this.clusterRef);\n      } else {\n         const allSelectedHosts: any[] = this.selectedStandaloneHosts.map(host => host.data.uid);\n         for (const domainModel of this.faultDomainModels) {\n            allSelectedHosts.push(...domainModel.hosts\n                  .filter(host => host.isSelected === ClrSelectedState.SELECTED)\n                  .map(host => host.data.uid));\n         }\n         context = EditDomainContext.createDomain(allSelectedHosts, witnessInfo, this.clusterRef);\n      }\n\n      new ModalBuilder(\"faultDomains/editDomain\")\n            .setSize(650, 540)\n            .open(context)\n            .then(taskRefs => this.handleTaskList(taskRefs.map(ManagedObject.uid)));\n   }\n\n   onDeleteDomain(domain: FaultDomainModel): void {\n      new ModalBuilder(\"faultDomains/moveHosts\")\n            .setSize(640, 260)\n            .open(MoveHostsContext.deleteDomain(domain))\n            .then(taskRefs => this.handleTaskList(taskRefs.map(ManagedObject.uid)));\n   }\n\n   onConfigureStretchedCluster(): void {\n      new ModalBuilder(VsanRoutes.CONFIGURE_STRETCHED_CLUSTER_WIZARD)\n            .setDimensions(ModalBuilder.WIZARD_XL)\n            .open()\n            .then((taskRef) => this.handleTaskList([ManagedObject.uid(taskRef)]));\n   }\n\n   onDisableStretchedCluster(): void {\n      const context: any = {\n         clusterRef: this.clusterRef,\n         witnessHost: this.witnessInfos[0].witnessHost,\n         witnessName: this.witnessInfos[0].witnessHostName,\n      };\n      new ModalBuilder(\"faultDomains/disableStretchedCluster\")\n            .setSize(640, 220)\n            .open(context)\n            .then((taskRef) => this.handleTaskList([ManagedObject.uid(taskRef)]));\n   }\n\n   onMarkAsPreferred(domain: FaultDomainModel): void {\n      const context: any = {\n         clusterRef: this.clusterRef,\n         domainName: domain.data.uid,\n      };\n      new ModalBuilder(\"faultDomains/promoteDomain\")\n            .setSize(640, 380)\n            .open(context)\n            .then((taskRefs) => this.handleTaskList([ManagedObject.uid(taskRefs[0])]));\n   }\n\n   onChangeWitness(): void {\n      const context: ChangeWitnessContext = {\n         preferredDomain: this.preferredDomain,\n         currentWitnessHost: this.witnessInfos[0].witnessHost,\n      };\n      new ModalBuilder(VsanRoutes.CONFIGURE_STRETCHED_CLUSTER_WIZARD)\n            .setDimensions(ModalBuilder.WIZARD_XL)\n            .open(context)\n            .then((taskRef) => this.handleTaskList([ManagedObject.uid(taskRef)]));\n   }\n\n   onDropInPlaceholder(event: any, intoStandalone: boolean): void {\n      const hosts: FaultDomainModel[] = [...event.dragData.selection];\n      if (!hosts.find(model => model.data.uid === event.dragData.host.data.uid)) {\n         hosts.push(event.dragData.host);\n      }\n      hosts.forEach(host => host.isDragging = false);\n      if (intoStandalone) {\n         // For stretched cluster don't move hosts from a domain to standalone hosts\n         if (this.isStretchedCluster) {\n            return;\n         }\n         this.onMoveRequest(hosts, null);\n      } else {\n         // For stretched cluster don't move all hosts from a preferred domain\n         const allHostsAreAffected: boolean = FaultDomainModel.allAffected(hosts);\n         const isDomainPreferred: boolean = hosts[0].domain && hosts[0].domain.isPreferred;\n         if (this.isStretchedCluster && allHostsAreAffected && isDomainPreferred) {\n            return;\n         }\n\n         this.onCreateDomain(hosts);\n      }\n   }\n\n   get isStretchedCluster(): boolean {\n      return !!this.witnessInfos && this.witnessInfos.length === 1 && !this.witnessInfos[0].isMetadataWitnessHost;\n   }\n\n   isCreateFaultDomainAllowed(): boolean {\n      return (!this.isStretchedCluster || this.faultDomainModels.length < 2) &&\n            !this.isCapacityReservationEnabled;\n   }\n\n   get validTargetsForStandaloneHosts(): string[] {\n      if (this.isCapacityReservationEnabled) {\n         // Prevent the drag and drop action when capacity reserve is enabled\n         return [];\n      }\n      const result: string[] = [FaultDomainModel.CREATE_DOMAIN_PLACEHOLDER];\n      if (this.data) {\n         this.data.filter(item => !item.isHost)\n               .map(item => item.uid)\n               .forEach(item => result.push(item));\n      }\n      return result;\n   }\n\n   get selectedStandaloneHosts(): FaultDomainModel[] {\n      return this.standaloneModels.filter(model => model.isSelected === ClrSelectedState.SELECTED);\n   }\n\n   get hasDomains(): boolean {\n      return this.faultDomainModels.length === 0;\n   }\n\n   /**\n    * handles the list of task UIDs returned by various action dialogs.\n    * waits for the task results and refreshes the view.\n    * @param taskUids\n    */\n   private handleTaskList = (taskUids: string[]) => {\n      this.initializeLoading();\n      if (taskUids === null || taskUids.length === 0) {\n         this.fetch();\n         return;\n      }\n\n      const promises: Promise<any>[] = [];\n      taskUids.forEach(t => promises.push(this.taskSvc.getAwaitResult(ManagedObject.fromUid(t))));\n      Promise.all(promises).then(() => this.fetch()).catch(() => this.fetch());\n   };\n\n   private initializeLoading = () => {\n      this.data = null;\n      this.faultDomainModels = [];\n      this.standaloneModels = [];\n      this.showSpinner = true;\n      this.noHostsView = null;\n   };\n}\n","<!-- Copyright 2018-2021 VMware, Inc. All rights reserved. VMware Confidential -->\n<h5 vsan-auto-focus>\n   {{\"vsan.faultDomains\" | localized}}\n</h5>\n\n<vsan-validation id=\"validation-message\"\n                 *ngIf=\"alertMessage\"\n                 [alert]=\"alertMessage\"\n                 [allowReload]=\"true\"\n                 (onReload)=\"fetch()\"\n                 (onClosed)=\"alertMessage = null\">\n</vsan-validation>\n\n<!-- busy indicator -->\n<span class=\"busy-backdrop\" *ngIf=\"showSpinner\">\n   <span class=\"spinner central-spinner\"></span>\n</span>\n\n<vsan-unavailable-view *ngIf=\"!showSpinner && noHostsView\"\n                       [unavailableViewSpec]=\"noHostsView\"\n                       [clusterRef]=\"clusterRef\"\n                       [hasEditPrivilege]=\"hasEditPermission\">\n</vsan-unavailable-view>\n\n<ng-container *ngIf=\"!showSpinner && allHostsCount\">\n   <vsan-fault-domains-config\n         [witnessInfos]=\"witnessInfos\"\n         [isSharedWitnessAllowed]=\"isSharedWitnessAllowed\"\n         [isStretchedCluster]=\"isStretchedCluster\"\n         [hasEditPermission]=\"hasEditPermission\"\n         [disableCfgStretchedClusterBtn]=\"disableCfgStretchedClusterBtn\"\n         [disableReason]=\"stretchedClusterDisabledReason\"\n         [disableChangeWitnessHostBtnReason]=\"disableChangeWitnessHostBtnReason\"\n         [faultToleranceInfo]=\"faultToleranceDescription\"\n         (onActionEvent)=\"handleActionEvent($event)\">\n   </vsan-fault-domains-config>\n\n   <div id=\"new-domain-action-container\" *ngIf=\"isCreateFaultDomainAllowed()\">\n      <div *ngIf=\"!hasDomains\" id=\"no-domain-desc\">\n         {{'vsan.faultDomains.action.createDomain.noDomain' | localized}}\n      </div>\n      <div *ngIf=\"hasDomains\" id=\"has-domain-desc\">\n         {{'vsan.faultDomains.action.createDomain.hasDomains' | localized}}\n      </div>\n   </div>\n   <div class=\"fault-domains\">\n      <fault-domain-card\n            #card\n            *ngFor=\"let model of faultDomainModels\"\n            [isVsanMaxEnabled]=\"isVsanMaxEnabled\"\n            [model]=\"model\"\n            [storageConsumption]=\"storageConsumption\"\n            [hostReservedCapacitySupported]=\"isHostReservedCapacitySupported\"\n            (onActionEvent)=\"handleActionEvent($event)\">\n\n         <vsan-fault-domain-action-menu\n               [domain]=\"model\"\n               [disabled]=\"!hasEditPermission\"\n               [isStretchedCluster]=\"isStretchedCluster\"\n               [targetDomains]=\"model.validTargetDomains\"\n               (onActionEvent)=\"handleActionEvent($event)\">\n         </vsan-fault-domain-action-menu>\n      </fault-domain-card>\n\n      <!-- placeholder card for dropping hosts into a new domain -->\n      <div id=\"new-fault-domain\"\n           *ngIf=\"isCreateFaultDomainAllowed()\"\n           class=\"card\"\n           droppable=\"true\"\n           [dropScope]=\"FaultDomainModel.CREATE_DOMAIN_PLACEHOLDER\"\n           [dragOverClass]=\"'drag-overlay'\"\n           [dragHintClass]=\"'drag-hint'\"\n           (onDrop)=\"onDropInPlaceholder($event, false)\">\n         <button class=\"btn btn-icon\"\n                 (click)=\"onEditDomain()\"\n                 [disabled]=\"!hasEditPermission\"\n                 [attr.aria-label]=\"'vsan.faultDomains.newFaultDomain'|localized\">\n            <clr-icon shape=\"plus\" size=\"64\"></clr-icon>\n         </button>\n         <span [innerHTML]=\"'vsan.faultDomains.dropHint' | localized\"></span>\n      </div>\n   </div>\n\n   <!-- Standalone Hosts section -->\n   <vsan-category-label\n         *ngIf=\"!isStretchedCluster || standaloneModels.length > 0\"\n         [info]=\"'vsan.faultDomains.card.category.standalone.info' | localized\"\n         [signpostLabel]=\"'vsan.faultDomains.card.category.standalone.signpost.label' | localized\">\n      {{'vsan.faultDomains.card.category.standalone' | localized: standaloneModels.length}}\n   </vsan-category-label>\n   <standalone-hosts-action-menu\n         *ngIf=\"standaloneModels.length > 0\"\n         [isStretchedClusterEnabled]=\"isStretchedCluster\"\n         [disabled]=\"!hasEditPermission || isCapacityReservationEnabled\"\n         [disabledReason]=\"faultDomainActionsDisbaledReason\"\n         [standaloneHosts]=\"standaloneModels\"\n         [targetDomains]=\"faultDomainModels\"\n         (onActionEvent)=\"handleActionEvent($event)\">\n   </standalone-hosts-action-menu>\n\n   <div class=\"standalone-hosts\"\n        *ngIf=\"!isStretchedCluster || standaloneModels.length > 0\">\n      <standalone-host-card\n            *ngFor=\"let host of standaloneModels\"\n            [isVsanMaxEnabled]=\"isVsanMaxEnabled\"\n            [dropTargets]=\"validTargetsForStandaloneHosts\"\n            [selection]=\"selectedStandaloneHosts\"\n            [host]=\"host\"\n            [consumption]=\"getDomainConsumption(host)\"\n            [hostReservedCapacitySupported]=\"isHostReservedCapacitySupported\"\n            (onActionEvent)=\"handleActionEvent($event)\">\n      </standalone-host-card>\n\n      <!-- placeholder card for dropping hosts out of domains -->\n      <div class=\"card drop-hosts-container\"\n           droppable=\"true\"\n           [dropScope]=\"FaultDomainModel.STANDALONE_PLACEHOLDER\"\n           [dragOverClass]=\"'drag-overlay'\"\n           [dragHintClass]=\"'drag-hint'\"\n           (onDrop)=\"onDropInPlaceholder($event, true)\">\n         <span [innerHTML]=\"'vsan.faultDomains.removeHint' | localized\"></span>\n      </div>\n   </div>\n</ng-container>\n","<!--Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-prompt [title]=\"title\"\n             [subtitle]=\"objectName\"\n             [confirmText]=\"(context.prepopulateName ? 'vsan.common.apply' : 'vsan.common.create') | localized\"\n             [confirmStyle]=\"(context.prepopulateName ? 'btn-primary' : 'btn-success')\"\n             [cancelText]=\"'vsan.common.cancel' | localized\"\n             [blockContent]=\"loading\"\n             [blockButton]=\"loading || domainSettings.invalid\"\n             [(alertMessages)]=\"alertMessages\"\n             (onConfirm)=\"onConfirm()\">\n   <div class=\"dialog-container\">\n      <form clrForm clrLayout=\"horizontal\" [formGroup]=\"domainSettings\">\n         <clr-input-container class=\"control-full-width\">\n            <label id=\"domain-name-label\" class=\"clr-col-3\">\n               {{\"vsan.faultDomains.action.createDomain.label.name\" | localized}}\n            </label>\n            <input id=\"domain-name-input\"\n                   class=\"clr-col-9\"\n                   clrInput\n                   formControlName=\"domainName\"\n                   vsan-auto-focus/>\n            <clr-control-error>{{domainNameValidationError}}</clr-control-error>\n         </clr-input-container>\n      </form>\n\n      <clr-datagrid id=\"host-list\" [(clrDgSelected)]=\"selectedHosts\">\n         <clr-dg-column [clrDgField]=\"'data.label'\" class=\"name-column\">\n            {{'vsan.faultDomains.action.createDomain.hostColumn' | localized}}\n         </clr-dg-column>\n         <clr-dg-column [clrDgField]=\"'domain.data.uid'\">\n            {{'vsan.faultDomains.action.createDomain.domainColumn' | localized}}\n         </clr-dg-column>\n\n         <clr-dg-row *clrDgItems=\"let item of hosts\"\n                     [clrDgItem]=\"item\"\n                     [ngClass]=\"isHostEnabled(item) ? '' : 'disable-action'\">\n            <clr-dg-cell vsan-show-title>\n               <vsan-icon-item [label]=\"item.data?.label\"\n                               [shape]=\"item.data?.iconId\">\n               </vsan-icon-item>\n            </clr-dg-cell>\n            <clr-dg-cell>\n               <vsan-icon-item [label]=\"item.domain?.data.uid\"\n                               [shape]=\"item.domain ? Icon.FAULT_DOMAIN : null\">\n               </vsan-icon-item>\n            </clr-dg-cell>\n         </clr-dg-row>\n\n         <clr-dg-footer>\n         <span *ngIf=\"hosts.length == 1\">\n            {{'vsan.faultDomains.action.hostCountOne' | localized}}\n         </span>\n            <span *ngIf=\"hosts.length != 1\">\n            {{'vsan.faultDomains.action.hostCount' | localized: hosts.length}}\n         </span>\n         </clr-dg-footer>\n      </clr-datagrid>\n   </div>\n</vsan-prompt>\n","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit, ViewChild} from \"@angular/core\";\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, ValidationErrors, ValidatorFn} from \"@angular/forms\";\nimport {ClrForm} from \"@clr/angular\";\nimport {ConfigureVsanClusterMutationProvider} from \"@generated/configure-vsan-cluster-mutation-provider\";\nimport {ConnectionState} from \"@generated/connection-state\";\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {VsanFaultDomainSpec} from \"@generated/vsan-fault-domain-spec\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject, ManagedObjectUtils} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {MoveHostsContext} from \"./move-hosts-context\";\n\n@Component({\n   selector: \"fault-domains-move-hosts\",\n   templateUrl: \"move-hosts-confirmation.html\",\n   styleUrls: [\"move-hosts-confirmation.scss\"],\n})\nexport class MoveHostsConfirmationComponent implements OnInit {\n\n   context: MoveHostsContext;\n   @ErrorMessage()\n   alertMessage: string;\n   @LoadingIndicator()\n   busy: boolean;\n   domainNameValidationError: string;\n\n   domainSettings: FormGroup;\n\n   @ViewChild(ClrForm, {static: true})\n   domainSettingsForm: ClrForm;\n\n   constructor(private configureClusterMutationProvider: ConfigureVsanClusterMutationProvider,\n         private formBuilder: FormBuilder) {\n      this.domainSettings = this.formBuilder.group({\n         domainName: new FormControl(\"\", [this.domainValidator]),\n      });\n   }\n\n   ngOnInit(): void {\n      this.context = VsanUiUtils.getModalContext();\n      if (this.context.targetDomain) {\n         this.domainSettings.setValue({domainName: this.context.targetDomain});\n      }\n      this.checkForInaccessibleHosts();\n   }\n\n   @Loader()\n   async onMove(): Promise<void> {\n      // The form has already been marked as touched by the vsan-auto-focus directive on the input.\n      // The code, however, is left to ensure that behavior in case of directive removal.\n      if (this.domainSettings.invalid) {\n         this.domainSettingsForm.markAsTouched();\n         return;\n      }\n\n      if (!this.checkForInaccessibleHosts()) {\n         return;\n      }\n      const promises: Promise<ManagedObject>[] = this.context.hosts.map((host: DomainOrHostData) => {\n         const hostRef: ManagedObject = ManagedObjectUtils.fromUid(host.uid);\n         const spec: VsanFaultDomainSpec = VsanFaultDomainSpec.Factory.create(this.getDomainName(), hostRef);\n         return this.configureClusterMutationProvider.updateFaultDomainInfo(hostRef, spec);\n      });\n\n      const tasks: ManagedObject[] = await Promise.all(promises);\n      VsanUiUtils.closeModalDialog(tasks);\n   }\n\n   domainValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n      this.domainNameValidationError = \"\";\n      if (!this.context?.promptForDomainName) {\n         // No domain name needed, nothing to validate\n         return;\n      }\n\n      const domainName: string = this.getDomainName();\n      if (!domainName) {\n         this.domainNameValidationError = VsanUiUtils.getString(\n               \"vsan.faultDomains.action.createDomain.validation.noName\");\n      } else if (domainName.length > 256) {\n         this.domainNameValidationError = VsanUiUtils.getString(\n               \"vsan.faultDomains.action.renameDomain.validation.nameTooLong\");\n      }\n      if (this.domainNameValidationError) {\n         return {\"domainInvalid\": {value: control.value}};\n      }\n      return null;\n   };\n\n   private getDomainName(): string {\n      return this.domainSettings && this.domainSettings.get(\"domainName\").value\n            && this.domainSettings.get(\"domainName\").value.trim();\n   }\n\n   private checkForInaccessibleHosts(): boolean {\n      const inaccessibleHosts: DomainOrHostData[] = this.context.hosts.filter(\n            host => host.connectionState !== ConnectionState.connected);\n      if (!inaccessibleHosts?.length) {\n         return true;\n      }\n\n      if (inaccessibleHosts.length === 1) {\n         this.alertMessage =\n               VsanUiUtils.getString(\n                     \"vsan.faultDomains.action.deleteDomain.validation.hostDisconnected\",\n                     inaccessibleHosts[0].label);\n      } else {\n         this.alertMessage =\n               VsanUiUtils.getString(\n                     \"vsan.faultDomains.action.deleteDomain.validation.hostsDisconnected\",\n                     inaccessibleHosts.join(\",\"));\n      }\n      return false;\n   }\n\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\n\n@Component({\n   selector: \"vsan-category-label\",\n   templateUrl: \"category-label.html\",\n   styleUrls: [\"category-label.scss\"],\n})\nexport class CategoryLabelComponent {\n\n   @Input()\n   info: string;\n\n   @Input()\n   signpostLabel: string;\n}\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit, ViewChild} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {Icon} from \"@util/icon\";\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {ConnectionState} from \"@generated/connection-state\";\nimport {VsanFaultDomainSpec} from \"@generated/vsan-fault-domain-spec\";\nimport {PreferredFaultDomainData} from \"@generated/preferred-fault-domain-data\";\nimport {VsanStretchedClusterMutationProvider} from \"@generated/vsan-stretched-cluster-mutation-provider\";\nimport {EditDomainContext} from \"./edit-domain-context\";\nimport {\n   AbstractControl,\n   FormBuilder,\n   FormControl,\n   FormGroup,\n   ValidationErrors,\n   ValidatorFn,\n} from \"@angular/forms\";\nimport {ClrForm} from \"@clr/angular\";\nimport {VsanStretchedClusterService} from \"@generated/vsan-stretched-cluster-service\";\nimport {ConfigureVsanClusterMutationProvider} from \"@generated/configure-vsan-cluster-mutation-provider\";\nimport {FaultDomainModel} from \"@model/fault-domain.model\";\n\n@Component({\n   templateUrl: \"edit-domain.html\",\n   styleUrls: [\"edit-domain.scss\"],\n   selector: \"vsan-fault-domains-edit-domain\",\n})\nexport class EditDomainComponent implements OnInit {\n\n   readonly Icon: typeof Icon = Icon;\n   private existingDomains: any = {};\n\n   context: EditDomainContext;\n   hosts: FaultDomainModel[] = [];\n   selectedHosts: FaultDomainModel[] = [];\n   loading: boolean = true;\n   alertMessages: string[];\n   domainNameValidationError: string;\n\n   domainSettings: FormGroup;\n\n   @ViewChild(ClrForm, {static: true})\n   domainSettingsForm: ClrForm;\n\n   constructor(private stretchedClusterService: VsanStretchedClusterService,\n         private configureClusterMutationProvider: ConfigureVsanClusterMutationProvider,\n         private stretchedClusterMutationProvider: VsanStretchedClusterMutationProvider,\n         private formBuilder: FormBuilder) {\n      this.domainSettings = this.formBuilder.group({\n         domainName: new FormControl(\"\", [this.domainValidator]),\n      });\n   }\n\n   async ngOnInit(): Promise<void> {\n      this.context = VsanUiUtils.getModalContext();\n      if (this.context && this.context.prepopulateName) {\n         this.domainSettings.setValue({domainName: this.context.prepopulateName});\n      }\n\n      try {\n         const hostsData: DomainOrHostData[] = await this.stretchedClusterService.getAvailableDomains(\n               ManagedObject.contextObject);\n         this.handleData(hostsData);\n         this.loading = false;\n      } catch (error) {\n         this.loading = false;\n         this.alertMessages = [error];\n      }\n   }\n\n   handleData(data: DomainOrHostData[]): void {\n      const hosts: FaultDomainModel[] = data\n            .filter(item => item.isHost)\n            .map(item => FaultDomainModel.createHost(item, null, []));\n      const domains: FaultDomainModel[] = data\n            .filter(item => !item.isHost)\n            .map(item => FaultDomainModel.createDomain(item, []));\n      domains.forEach(domain => this.existingDomains[domain.data.uid] = domain);\n      domains.forEach(domain => hosts.push(...domain.hosts));\n\n      for (const host of hosts) {\n         if (this.context.preselectHosts.indexOf(host.data.uid) !== -1) {\n            this.selectedHosts.push(host);\n         }\n      }\n      this.hosts = hosts;\n   }\n\n   onConfirm(): void {\n      // The form has already been marked as touched by the vsan-auto-focus directive on the input.\n      // The code, however, is left to ensure that behavior in case of directive removal.\n      if (this.domainSettings.invalid) {\n         this.domainSettingsForm.markAsTouched();\n         return;\n      }\n\n      this.alertMessages = this.validateHosts();\n      if (!!this.alertMessages && this.alertMessages.length > 0) {\n         return;\n      }\n\n      const domainName: string = this.getDomainName();\n\n      const specs: VsanFaultDomainSpec[] = this.selectedHosts\n            .filter(host => !host.domain || host.domain.data.uid !== domainName)\n            .map(host => VsanFaultDomainSpec.Factory.create(\n                  domainName, ManagedObject.fromUid(host.data.uid)));\n\n      if (this.context.prepopulateName.length > 0) {\n         // renaming existing domain\n         const domain: FaultDomainModel = this.existingDomains[this.context.prepopulateName];\n         const unchecked: FaultDomainModel[] = domain.hosts.filter(host => this.selectedHosts.indexOf(host) === -1);\n         unchecked.forEach(host => specs.push(\n               VsanFaultDomainSpec.Factory.create(null, ManagedObject.fromUid(host.data.uid))));\n      }\n\n      const promises: Promise<ManagedObject>[] = specs\n            .map(spec => this.configureClusterMutationProvider.updateFaultDomainInfo(spec.hostRef, spec));\n\n      if (promises.length === 0) {\n         VsanUiUtils.closeModalDialog([]);\n         return;\n      }\n      // Call setPreferredFaultDomain() when you rename a preferred domain from a stretched cluster\n      if (this.context.witnessInfo) {\n         const isCurrentDomainPreferred: boolean =\n               this.context.witnessInfo.preferredFaultDomainName === this.context.prepopulateName;\n         const isCurrentDomainRenamed: boolean = domainName !== this.context.prepopulateName;\n         if (isCurrentDomainPreferred && isCurrentDomainRenamed) {\n            const spec: PreferredFaultDomainData = PreferredFaultDomainData.Factory.create(domainName);\n            promises.push(this.stretchedClusterMutationProvider.setPreferredFaultDomain(this.context.clusterRef, spec));\n         }\n      }\n\n      this.loading = true;\n      Promise.all(promises)\n            .then((tasks: ManagedObject[]) => VsanUiUtils.closeModalDialog(tasks))\n            .catch(() => VsanUiUtils.closeModalDialog([]));\n   }\n\n   validateHosts(): string[] {\n      if (this.selectedHosts.length === 0) {\n         return [VsanUiUtils.getString(\"vsan.faultDomains.action.createDomain.validation.noHost\")];\n      }\n\n      const disconnectedHostWarning: string[] = this.selectedHosts\n            .filter(host => host.data.connectionState !== ConnectionState.connected)\n            .map(host => VsanUiUtils.getString(\n                  \"vsan.faultDomains.action.createDomain.validation.disconnectedHost\",\n                  host.data.label));\n      if (disconnectedHostWarning.length > 0) {\n         return disconnectedHostWarning;\n      }\n\n      if (this.context.witnessInfo) {\n         const stretchedClusterConfigurationWarning: string = this.validateStretchedClusterConfiguration();\n         if (stretchedClusterConfigurationWarning) {\n            return [stretchedClusterConfigurationWarning];\n         }\n      }\n   }\n\n   domainValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n      this.domainNameValidationError = \"\";\n      const domainName: string = this.getDomainName();\n      if (!domainName) {\n         this.domainNameValidationError = VsanUiUtils.getString(\n               \"vsan.faultDomains.action.createDomain.validation.noName\");\n      } else if (domainName.length > 256) {\n         this.domainNameValidationError = VsanUiUtils.getString(\n               \"vsan.faultDomains.action.renameDomain.validation.nameTooLong\");\n      } else if (this.existingDomains[domainName] && this.context.prepopulateName !== domainName) {\n         this.domainNameValidationError = VsanUiUtils.getString(\n               \"vsan.faultDomains.action.createDomain.validation.duplicateName\");\n      }\n      if (this.domainNameValidationError) {\n         return {\"domainInvalid\": {value: control.value}};\n      }\n      return null;\n   };\n\n   getDomainName(): string {\n      return this.domainSettings && this.domainSettings.get(\"domainName\").value\n            && this.domainSettings.get(\"domainName\").value.trim();\n   }\n\n   private validateStretchedClusterConfiguration(): string {\n      if (this.validateStretchedClusterStandaloneHostsNotAdded()) {\n         return VsanUiUtils.getString(\"vsan.faultDomains.stretchedCluster.action.moveHosts.validation.moveToStandalone\");\n      }\n      if (this.validateStretchedClusterPreferredDomainNotRemoved()) {\n         return VsanUiUtils.getString(\"vsan.faultDomains.stretchedCluster.action.moveHosts.validation.removePreferred\");\n      }\n      if (this.validateStretchedClusterRequiredDomainsNotRemoved()) {\n         return VsanUiUtils.getString(\"vsan.faultDomains.stretchedCluster.action.moveHosts.validation.insufficientFDs\");\n      }\n   }\n\n   private validateStretchedClusterStandaloneHostsNotAdded(): boolean {\n      // Validate not pulling out hosts from an existing domain to standalone via edit action\n      const currentDomain: FaultDomainModel = this.existingDomains[this.context.prepopulateName];\n      if (!currentDomain) {\n         return false;\n      }\n      const selectedHostsFromCurrentDomainCount: number = this.selectedHosts.filter(\n            host => host.domain && host.domain.data.uid === this.context.prepopulateName).length;\n      return (currentDomain.hosts.length !== selectedHostsFromCurrentDomainCount);\n   }\n\n   private validateStretchedClusterPreferredDomainNotRemoved(): boolean {\n      // Validate all hosts of a preferred domain are not removed\n      const preferredDomainName: string = this.context.witnessInfo.preferredFaultDomainName;\n      if (!(preferredDomainName && preferredDomainName !== this.context.prepopulateName)) {\n         return false;\n      }\n      const preferredDomain: FaultDomainModel = this.existingDomains[preferredDomainName];\n      const selectedHostsFromPreferredDomainCount: number = this.selectedHosts.reduce(\n            (sum, host) => sum += (host.domain && host.domain.data.uid === preferredDomainName) ? 1 : 0, 0);\n      return (preferredDomain && preferredDomain.hosts.length === selectedHostsFromPreferredDomainCount);\n   }\n\n   private validateStretchedClusterRequiredDomainsNotRemoved(): boolean {\n      // Validate FDs are not less than 2 when moving hosts to particular FD\n      const hostsCountFromDomainEntries: IterableIterator<[string, number]> = this.countSelectedHostsFromOtherDomains().entries();\n      let domainsToRemove: number = 0;\n      while (true) {\n         const domainHostsCount: IteratorResult<[string, number]> = hostsCountFromDomainEntries.next();\n         if (!domainHostsCount.done) {\n            const domainName: string = domainHostsCount.value[0];\n            const hostsCount: number = domainHostsCount.value[1];\n            const domainModel: FaultDomainModel = this.existingDomains[domainName];\n            if (domainModel.hosts.length === hostsCount) {\n               domainsToRemove++;\n            }\n         } else {\n            break;\n         }\n      }\n      return (domainsToRemove && ((Object.keys(this.existingDomains).length - domainsToRemove) < 2));\n   }\n\n   private countSelectedHostsFromOtherDomains(): Map<string, number>  {\n      const currentDomain: FaultDomainModel = this.existingDomains[this.context.prepopulateName];\n      const selectedHostsCountFromDomain: Map<string, number> = new Map();\n      this.selectedHosts.forEach(host => {\n         // Count hosts that reside in other domains /exclude the current domain/\n         const isHostFromDifferentDomain: boolean =\n               host.domain && (!currentDomain || (host.domain.data.uid !== this.context.prepopulateName));\n         if (isHostFromDifferentDomain) {\n            let domainHostsCount: number = 1;\n            if (selectedHostsCountFromDomain.has(host.domain.data.uid)) {\n               domainHostsCount += selectedHostsCountFromDomain.get(host.domain.data.uid);\n            }\n            selectedHostsCountFromDomain.set(host.domain.data.uid, domainHostsCount);\n         }\n      });\n      return selectedHostsCountFromDomain;\n   }\n\n   isHostEnabled(host: FaultDomainModel): boolean {\n      return ConnectionState.connected === host.data.connectionState;\n   }\n\n   get title(): string {\n      return this.context.prepopulateName.length > 0\n            ? VsanUiUtils.getString(\"vsan.faultDomains.action.renameDomain.title\")\n            : VsanUiUtils.getString(\"vsan.faultDomains.action.createDomain.title\");\n   }\n\n   get objectName(): string {\n      return this.context.prepopulateName.length > 0 ? this.context.prepopulateName : null;\n   }\n}\n","<!-- Copyright 2019-2021 VMware, Inc. All rights reserved. VMware Confidential -->\n<h5 class=\"label-title\">\n   <ng-content></ng-content>\n</h5>\n\n<clr-signpost *ngIf=\"info\"\n              [vsan-signpost-title]=\"signpostLabel\">\n   <clr-signpost-content *clrIfOpen [clrPosition]=\"'bottom-right'\">\n      <span>{{info}}</span>\n   </clr-signpost-content>\n</clr-signpost>\n","<!--Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-dropdown id=\"fd-action-list\"\n              class=\"raise-menu\"\n              *ngIf=\"domain || iconId\">\n\n   <button id=\"fd-actions-toggle\"\n           type=\"button\"\n           [disabled]=\"disabled\"\n           class=\"btn btn-sm btn-link btn-quick-actions\"\n           clrDropdownToggle\n           [attr.aria-label]=\"'vsan.faultDomains.action.quickActions'|localized\">\n      <clr-icon [attr.shape]=\"iconId\" [ngClass]=\"selectionCount > 0 ? 'is-info' : ''\"></clr-icon>\n   </button>\n\n   <clr-dropdown-menu class=\"raise-menu\"\n                      [clrPosition]=\"iconId ? 'bottom-right' : 'bottom-left'\"\n                      *clrIfOpen\n                      [attr.aria-label]=\"'vsan.faultDomains.action.faultDomainActions.srMessage.dropdownMenu.label' | localized\">\n\n      <label class=\"dropdown-header\">\n         {{domain.data.uid}}\n      </label>\n\n      <button type=\"button\"\n              class=\"dropdown-item\"\n              (click)=\"onPromote()\"\n              id=\"promote-domain-button\"\n              *ngIf=\"isStretchedCluster && !domain.isPreferred\"\n              clrDropdownItem>\n         {{'vsan.faultDomains.stretchedCluster.action.promote.action' | localized}}\n      </button>\n\n      <button type=\"button\"\n              class=\"dropdown-item\"\n              (click)=\"onEdit()\"\n              id=\"edit-domain-button\"\n              clrDropdownItem>\n         {{'vsan.faultDomains.action.renameDomain.additionalAction' | localized}}\n      </button>\n\n      <button type=\"button\"\n              class=\"dropdown-item\"\n              (click)=\"onRemove()\"\n              [disabled]=\"isStretchedCluster && (targetDomains.length < 2 || domain.isPreferred)\"\n              id=\"remove-domain-button\"\n              clrDropdownItem>\n         {{'vsan.faultDomains.action.deleteDomain.additionalAction' | localized}}\n      </button>\n\n      <ng-container *ngIf=\"selectionCount > 0\">\n\n         <div class=\"dropdown-divider\"></div>\n\n         <label class=\"dropdown-header\">\n            {{'vsan.faultDomains.action.hostCount' | localized : selectionCount}}\n         </label>\n\n         <button type=\"button\"\n                 *ngIf=\"isStretchedCluster && domain.validTargetDomains.length === 1\"\n                 class=\"dropdown-item\"\n                 [disabled]=\"selectionCount === domain.hosts.length\"\n                 [ngClass]=\"(selectionCount === domain.hosts.length) ? 'disabled' : ''\"\n                 (click)=\"onMove(domain.validTargetDomains[0])\"\n                 id=\"move-selected-button\"\n                 clrDropdownItem>\n            <span [innerHTML]=\"'vsan.faultDomains.action.moveHosts.hint.move' | localized : domain.validTargetDomains[0]\"></span>\n         </button>\n         <clr-dropdown class=\"raise-menu\"\n                       *ngIf=\"!isStretchedCluster || domain.validTargetDomains.length !== 1\">\n            <button class=\"dropdown-item expandable\"\n                    type=\"button\"\n                    [ngClass]=\"moveActionDisabled ? 'disabled' : ''\"\n                    [disabled]=\"moveActionDisabled\"\n                    clrDropdownToggle>\n               {{'vsan.faultDomains.action.moveHosts' | localized}}\n            </button>\n            <clr-dropdown-menu class=\"raise-menu\"\n                               [attr.aria-label]=\"'vsan.faultDomains.action.moveHosts.srMessage.dropdownMenu.label' | localized\">\n               <button type=\"button\"\n                       class=\"dropdown-item\"\n                       id=\"create-domain-btn\"\n                       *ngIf=\"!isStretchedCluster || domain.validTargetDomains.length < 2\"\n                       (click)=\"onCreate()\"\n                       clrDropdownItem>\n                  {{'vsan.faultDomains.action.createDomain' | localized}}\n               </button>\n               <button type=\"button\"\n                       class=\"dropdown-item\"\n                       id=\"remove-domain-btn\"\n                       *ngIf=\"!isStretchedCluster\"\n                       (click)=\"onMove(null)\"\n                       clrDropdownItem>\n                  <span [innerHTML]=\"'vsan.faultDomains.action.moveHosts.hint.remove' | localized : domain.data.uid\"></span>\n               </button>\n               <ng-container *ngIf=\"domain.validTargetDomains.length > 0\">\n                  <div class=\"dropdown-divider\"></div>\n                  <label class=\"dropdown-header\">\n                     {{'vsan.faultDomains.action.moveHosts.hint.moveToExisting' | localized}}\n                  </label>\n                  <button type=\"button\"\n                          class=\"dropdown-item\"\n                          *ngFor=\"let target of domain.validTargetDomains\"\n                          id=\"move-to-{{target}}\"\n                          (click)=\"onMove(target)\"\n                          clrDropdownItem>\n                     {{target}}\n                  </button>\n               </ng-container>\n            </clr-dropdown-menu>\n         </clr-dropdown>\n      </ng-container>\n   </clr-dropdown-menu>\n</clr-dropdown>\n","<!--Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-prompt\n      id=\"move-hosts-dialog\"\n      [title]=\"context.operation\"\n      [subtitle]=\"context.objectInfo\"\n      [confirmText]=\"context.actionButtonLabel | localized\"\n      [cancelText]=\"'vsan.common.cancel' | localized\"\n      [confirmStyle]=\"context.actionButtonClass\"\n      [blockButton]=\"busy || domainSettings.touched && domainSettings.invalid\"\n      [blockContent]=\"busy\"\n      [(alertMessage)]=\"alertMessage\"\n      (onConfirm)=\"onMove()\">\n\n   <div class=\"dialog-container\">\n      <span id=\"move-hosts-message\" [innerHTML]=\"context.message\"></span>\n\n      <form clrForm\n            *ngIf=\"context?.promptForDomainName\"\n            clrLayout=\"horizontal\"\n            [formGroup]=\"domainSettings\">\n         <clr-input-container class=\"control-full-width\">\n            <label id=\"domain-name-label\" class=\"clr-col-3\">\n               {{\"vsan.faultDomains.action.createDomain.label.name\" | localized}}\n            </label>\n            <input id=\"domain-name-input\"\n                   class=\"clr-col-9\"\n                   clrInput\n                   formControlName=\"domainName\"\n                   vsan-auto-focus/>\n            <clr-control-error>{{domainNameValidationError}}</clr-control-error>\n         </clr-input-container>\n      </form>\n\n      <span id=\"destroy-domain-message\"\n            *ngIf=\"context.warnDestructiveForSourceDomain\"\n            [innerHTML]=\"'vsan.faultDomains.action.destructiveWarning' | localized: context.sourceDomain\">\n      </span>\n   </div>\n</vsan-prompt>\n","/* Copyright 2017 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {PreferredFaultDomainData} from \"@generated/preferred-fault-domain-data\";\nimport {VsanStretchedClusterMutationProvider} from \"@generated/vsan-stretched-cluster-mutation-provider\";\n\n@Component({\n   templateUrl: 'promote-domain.html',\n   styleUrls: ['promote-domain.scss'],\n   selector: 'promote-fault-domain-prompt'\n})\nexport class PromoteDomainComponent implements OnInit {\n\n   clusterRef: ManagedObject;\n   domainName: string;\n\n   errors: string[];\n   busy: boolean = false;\n\n   readonly dialogTitle: string = VsanUiUtils.getString(\"vsan.faultDomains.stretchedCluster.action.promote.title\");\n\n   constructor(private mutationProvider: VsanStretchedClusterMutationProvider) {}\n\n   ngOnInit() {\n      let context: any = VsanUiUtils.getModalContext();\n      this.clusterRef = context.clusterRef;\n      this.domainName = context.domainName;\n   }\n\n   apply = () => {\n      let spec = PreferredFaultDomainData.Factory.create(this.domainName);\n      this.mutationProvider.setPreferredFaultDomain(this.clusterRef, spec)\n            .then(taskRef => VsanUiUtils.closeModalDialog(taskRef ? [taskRef] : []))\n            .catch(e => {\n               this.errors = [e];\n               this.busy = false;\n            });\n\n      this.busy = true;\n   }\n}","<!--Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-delete-prompt\n      [title]=\"dialogTitle\"\n      [(alertMessages)]=\"errors\"\n      [blockButton]=\"busy\"\n      [confirmText]=\"'vsan.common.remove' | localized\"\n      (onConfirm)=\"apply()\">\n   <span class=\"confirmation-padding\">\n      {{'vsan.faultDomains.stretchedCluster.action.disable.confirmationText' | localized}}\n   </span>\n   <div [innerHTML]=\"'vsan.faultDomains.stretchedCluster.action.disable.confirmation' | localized: witnessName\"></div>\n</vsan-delete-prompt>\n","\nexport interface PreferredFaultDomainData {\n\n   preferredFaultDomainName: string;\n} //class PreferredFaultDomainData\n\nexport module PreferredFaultDomainData{\nexport class Factory {\n\n   static create = (preferredFaultDomainName: string): PreferredFaultDomainData => {\n      return { preferredFaultDomainName: preferredFaultDomainName, };\n   }\n\n\n} //class Factory\n\n} //module PreferredFaultDomainData\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ManagedObject} from \"@service/managed-object\";\nimport {WitnessHostData} from \"@generated/witness-host-data\";\nimport {FaultDomainModel} from \"@model/fault-domain.model\";\n\nexport class EditDomainContext {\n   prepopulateName: string = \"\";\n   preselectHosts: string[] = [];\n   witnessInfo: WitnessHostData;\n   clusterRef: ManagedObject;\n\n   static createDomain(\n         preselectHosts: string[],\n         witnessInfo: WitnessHostData,\n         clusterRef: ManagedObject): EditDomainContext {\n      return {\n         prepopulateName: \"\",\n         preselectHosts: preselectHosts,\n         witnessInfo: witnessInfo,\n         clusterRef: clusterRef,\n      };\n   }\n   static editDomain(\n         domain: FaultDomainModel,\n         witnessInfo: WitnessHostData,\n         clusterRef: ManagedObject): EditDomainContext {\n      return {\n         prepopulateName: domain.data.uid,\n         preselectHosts: domain.hosts.map(h => h.data.uid),\n         witnessInfo: witnessInfo,\n         clusterRef: clusterRef,\n      };\n   }\n}\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {ClrSelectedState} from \"@clr/angular\";\nimport {FaultDomainModel} from \"@model/fault-domain.model\";\nimport {CreateDomainEvent, FaultDomainEvent, MoveHostsEvent} from \"../../common/event/fault-domain.event\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   selector: \"standalone-hosts-action-menu\",\n   templateUrl: \"standalone-hosts-action-menu.html\",\n   styleUrls: [\"fault-domain-action-menu.scss\"],\n})\nexport class StandaloneHostsActionMenuComponent {\n\n   @Input()\n   standaloneHosts: FaultDomainModel[];\n\n   @Input()\n   targetDomains: FaultDomainModel[];\n\n   @Input()\n   disabled: boolean = false;\n\n   @Input()\n   disabledReason: string;\n\n   @Input()\n   isStretchedClusterEnabled: boolean = false;\n\n   @Output()\n   onActionEvent: EventEmitter<FaultDomainEvent> = new EventEmitter<FaultDomainEvent>();\n\n   onCreate() {\n      const createDomainEvent = new CreateDomainEvent();\n      createDomainEvent.memberHosts = this.selection;\n      this.onActionEvent.emit(createDomainEvent);\n   }\n\n   onMove(targetDomain: string) {\n      const moveHostsEvent = new MoveHostsEvent();\n      moveHostsEvent.hosts = this.selection;\n      moveHostsEvent.targetDomain = targetDomain;\n      this.onActionEvent.emit(moveHostsEvent);\n   }\n\n   get selection(): FaultDomainModel[] {\n      return this.standaloneHosts.filter(host => host.isSelected === ClrSelectedState.SELECTED);\n   }\n\n   get dropdownLabel(): string {\n      if (VsanUiUtils.isEmpty(this.selection)) {\n         return \"\";\n      }\n      const labelKey: string = this.selection.length === 1 ?\n            \"vsan.faultDomains.action.hostCountOne\" : \"vsan.faultDomains.action.hostCount\";\n      return VsanUiUtils.getString(labelKey, this.selection.length);\n   }\n}\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {\n   CreateDomainEvent,\n   DeleteDomainEvent,\n   EditDomainEvent,\n   FaultDomainEvent,\n   MoveHostsEvent,\n   PromoteDomainEvent,\n} from \"../../common/event/fault-domain.event\";\nimport {ClrSelectedState} from \"@clr/angular\";\nimport {FaultDomainModel} from \"@model/fault-domain.model\";\n\n@Component({\n   selector: \"vsan-fault-domain-action-menu\",\n   templateUrl: \"fault-domain-action-menu.html\",\n   styleUrls: [\"fault-domain-action-menu.scss\"],\n})\nexport class FaultDomainActionMenuComponent {\n\n   @Input()\n   domain: FaultDomainModel;\n\n   @Input()\n   isStretchedCluster: boolean;\n\n   @Input()\n   iconId: string = \"ellipsis-vertical\";\n\n   @Input()\n   disabled: boolean;\n\n   @Input()\n   targetDomains: string[];\n\n   @Output()\n   onActionEvent: EventEmitter<FaultDomainEvent> = new EventEmitter<FaultDomainEvent>();\n\n   get selectionCount(): number {\n      return this.domain.hosts.filter(host => host.isSelected  === ClrSelectedState.SELECTED).length;\n   }\n\n   get moveActionDisabled(): boolean {\n      // Disable hosts moving for a stretched cluster when:\n      // 1) All the hosts within the fault domain are selected\n      // 2) And the fault domain is preferred or there are <= 2 fault domains\n      return this.isStretchedCluster && (this.selectionCount === this.domain.hosts.length) &&\n            (this.domain.isPreferred || this.domain.validTargetDomains.length <= 1);\n   }\n\n   onPromote(): void {\n      const event: PromoteDomainEvent = new PromoteDomainEvent();\n      event.targetDomain = this.domain;\n      this.onActionEvent.emit(event);\n   }\n\n   onEdit(): void {\n      const event: EditDomainEvent = new EditDomainEvent();\n      event.targetDomain = this.domain;\n      this.onActionEvent.emit(event);\n   }\n\n   onRemove(): void {\n      const event: DeleteDomainEvent = new DeleteDomainEvent();\n      event.targetDomain = this.domain;\n      this.onActionEvent.emit(event);\n   }\n\n   onCreate(): void {\n      const event: CreateDomainEvent = new CreateDomainEvent();\n      event.memberHosts = this.domain.hosts.filter(host => host.isSelected === ClrSelectedState.SELECTED);\n      this.onActionEvent.emit(event);\n   }\n\n   onMove(targetDomain: string): void {\n      const event: MoveHostsEvent = new MoveHostsEvent();\n      event.hosts = this.domain.hosts.filter(host => host.isSelected === ClrSelectedState.SELECTED);\n      event.targetDomain = targetDomain;\n      this.onActionEvent.emit(event);\n   }\n\n}\n","<!--Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-edit-prompt\n      [title]=\"dialogTitle\"\n      [(alertMessages)]=\"errors\"\n      [blockButton]=\"busy\"\n      (onConfirm)=\"apply()\">\n   <div class=\"dialog-container\">\n      <vsan-validation id=\"promote-domain-warning\"\n                       [alertType]=\"'warning'\"\n                       [alert]=\"'vsan.faultDomains.stretchedCluster.action.promote.warning' | localized\"\n                       [allowReload]=\"false\"\n                       [allowClose]=\"false\">\n      </vsan-validation>\n\n      <span\n            [innerHTML]=\"'vsan.faultDomains.stretchedCluster.action.promote.infoText' | localized: domainName\">\n      </span>\n\n      <span>\n         {{'vsan.faultDomains.stretchedCluster.action.promote.confirmationText' | localized}}\n      </span>\n\n      <span>\n         {{'vsan.faultDomains.stretchedCluster.action.promote.confirmation' | localized}}\n      </span>\n   </div>\n</vsan-edit-prompt>\n","/* Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, OnInit, Output} from \"@angular/core\";\nimport {VsanStretchedClusterMutationProvider} from \"@generated/vsan-stretched-cluster-mutation-provider\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"disable-stretched-cluster.html\",\n   styleUrls: [\"disable-stretched-cluster.scss\"],\n   selector: \"disable-stretched-cluster-prompt\",\n})\nexport class DisableStretchedClusterComponent implements OnInit {\n   clusterRef: ManagedObject = null;\n   witnessHost: ManagedObject = null;\n   witnessName: string = \"\";\n\n   errors: string[] = null;\n   busy: boolean = false;\n   readonly dialogTitle: string = VsanUiUtils.getString(\"vsan.faultDomains.stretchedCluster.action.disable.title\");\n\n   @Output()\n   private onError: EventEmitter<string> = new EventEmitter<string>();\n\n   constructor(private mutationProvider: VsanStretchedClusterMutationProvider) {\n   }\n\n   ngOnInit(): void {\n      const context: any = VsanUiUtils.getModalContext();\n      this.clusterRef = context.clusterRef;\n      this.witnessHost = context.witnessHost;\n      this.witnessName = context.witnessName;\n   }\n\n   apply(): void {\n      this.busy = true;\n      this.mutationProvider.removeWitnessHost(this.clusterRef, this.witnessHost)\n            .then((task: ManagedObject) => {\n               VsanUiUtils.closeModalDialog(task);\n            }).catch((error: string) => {\n               this.errors = [error];\n               this.busy = false;\n            });\n   }\n}","<!--Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-dropdown class=\"raise-menu\">\n   <button id=\"dropdown-button\"\n           type=\"button\"\n           [disabled]=\"disabled || selection.length == 0\"\n           title=\"{{selection.length > 0 ? disabledReason : ''}}\"\n           class=\"btn btn-sm btn-link\"\n           clrDropdownToggle>\n      <div class=\"action-menu-toggle\">\n         {{\"vsan.faultDomains.action.moveHosts\" | localized}}\n      </div>\n      <clr-icon shape=\"caret down\"></clr-icon>\n   </button>\n   <clr-dropdown-menu class=\"raise-menu\" clrPosition=\"bottom-left\" *clrIfOpen\n                      [attr.aria-label]=\"'vsan.faultDomains.action.standaloneHostsActions.srMessage.dropdownMenu.label' | localized\">\n      <label class=\"dropdown-header\">\n         {{dropdownLabel}}\n      </label>\n\n      <button *ngIf=\"!isStretchedClusterEnabled || targetDomains?.length < 2\"\n              type=\"button\"\n              class=\"dropdown-item\"\n              id=\"create-domain-btn\"\n              (click)=\"onCreate()\"\n              clrDropdownItem>\n         {{'vsan.faultDomains.action.createDomain' | localized}}\n      </button>\n\n      <clr-dropdown class=\"raise-menu\" *ngIf=\"targetDomains?.length > 0\">\n         <button class=\"dropdown-item expandable\"\n                 type=\"button\"\n                 clrDropdownToggle>\n            {{'vsan.faultDomains.action.moveHosts.hint.moveToExisting' | localized}}\n         </button>\n         <clr-dropdown-menu\n               class=\"raise-menu\"\n               [attr.aria-label]=\"'vsan.faultDomains.action.moveHosts.hint.moveToExisting.srMessage.dropdownMenu.label' | localized\">\n            <button type=\"button\"\n                    class=\"dropdown-item\"\n                    *ngFor=\"let target of targetDomains\"\n                    id=\"move-to-{{target.data.uid}}\"\n                    (click)=\"onMove(target.data.uid)\"\n                    clrDropdownItem>\n               {{target.data.uid}}\n            </button>\n         </clr-dropdown-menu>\n      </clr-dropdown>\n\n   </clr-dropdown-menu>\n</clr-dropdown>\n"]}