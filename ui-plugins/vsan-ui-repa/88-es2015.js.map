{"version":3,"sources":["./src/app/vsan/common/component/datetime-picker/time-last-field-picker/last-field-date-picker.component.ts","./src/app/vsan/common/component/datetime-picker/time-last-field-picker/last-field-date-picker-util.ts","./src/app/vsan/common/component/datetime-picker/time-last-field-picker/last-field-date-picker.html","./src/app/vsan/common/component/action-button/action-button.module.ts"],"names":[],"mappings":"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","file":"88-es2015.js","sourcesContent":["/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {Logger} from \"@util/logger\";\nimport {DateTimeSelectMode} from \"@component/datetime-picker/datetime-picker.component\";\nimport {DateRangeData} from \"@component/datetime-picker/date-range-picker.component\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\n\n@Component({\n   selector: \"vsan-last-field-date-picker\",\n   templateUrl: \"last-field-date-picker.html\",\n   styleUrls: [\"last-field-date-picker.scss\"],\n})\nexport class LastFieldDatePickerComponent implements OnInit {\n\n   static readonly DEFAULT_MAX_DAYS: number = VsanDateTimeUtils.DAYS_IN_MONTH_DEFAULT;\n\n   @Input()\n   maxDays: number = LastFieldDatePickerComponent.DEFAULT_MAX_DAYS;\n\n   get maxDaysInMilliseconds(): number {\n      return this.maxDays * VsanDateTimeUtils.DAY_IN_MILLISECONDS;\n   }\n\n   DurationPickerState: typeof DurationPickerState = DurationPickerState;\n   currentOptionLabel: string;\n   dateRangeError: string;\n   DateTimeSelectMode: typeof DateTimeSelectMode = DateTimeSelectMode;\n\n   _dateRange: DateRangeData;\n\n   get dateRange(): DateRangeData {\n      return this._dateRange;\n   }\n\n   private _currentPickerState: DurationPickerState;\n\n   get currentPickerState(): DurationPickerState {\n      return this._currentPickerState;\n   }\n\n   @Input()\n   set currentPickerState(value: DurationPickerState) {\n      if (value == null || this._currentPickerState === value) {\n         return;\n      }\n\n      this._currentPickerState = value;\n      const rangeEndDate: number = VsanDateTimeUtils.createNoSecondsDate().getTime();\n\n      switch (this._currentPickerState) {\n         case DurationPickerState.LAST_HOUR:\n            this.currentOptionLabel = VsanUiUtils.getString(\"vsan.monitor.performance.io.insight.timerange.last.hours\");\n            this._dateRange = new DateRangeData(rangeEndDate - VsanDateTimeUtils.HOUR_IN_MILLISECONDS, rangeEndDate);\n            break;\n         case DurationPickerState.LAST_DAY:\n            this.currentOptionLabel = VsanUiUtils.getString(\"vsan.monitor.performance.io.insight.timerange.last.days\");\n            this._dateRange = new DateRangeData(rangeEndDate - VsanDateTimeUtils.DAY_IN_MILLISECONDS, rangeEndDate);\n            break;\n         case DurationPickerState.LAST_WEEK:\n            this.currentOptionLabel = VsanUiUtils.getString(\"vsan.monitor.performance.io.insight.timerange.last.weeks\");\n            this._dateRange = new DateRangeData(rangeEndDate - VsanDateTimeUtils.WEEK_IN_MILLISECONDS, rangeEndDate);\n            break;\n         case DurationPickerState.LAST_MONTH:\n            this.currentOptionLabel = VsanUiUtils.getString(\"vsan.monitor.performance.io.insight.timerange.last.months\");\n            this._dateRange = new DateRangeData(rangeEndDate - VsanDateTimeUtils.MONTH_IN_MILLISECONDS, rangeEndDate);\n            break;\n         case DurationPickerState.CUSTOM_RANGE:\n            this.currentOptionLabel = VsanUiUtils.getString(\"vsan.perf.chart.timerange.custom\");\n            break;\n         case DurationPickerState.ALL:\n            this.currentOptionLabel = VsanUiUtils.getString(\"vsan.monitor.performance.io.insight.timerange.all\");\n            this._dateRange = new DateRangeData(rangeEndDate - this.maxDaysInMilliseconds, rangeEndDate);\n            break;\n         default:\n            Logger.error(\"Unknown RangePickerState: \" + value);\n      }\n      this.currentPickerStateChange.emit(this.currentPickerState);\n      this.dateRangeChange.emit(this.dateRange);\n   }\n\n   @Input()\n   earliestStartTimeErrorKey: string = \"vsan.monitor.performance.io.insight.timerange.custom.earliestStartTime.error\";\n\n   /**\n    * Triggered as a result of time change because of user interaction\n    */\n   @Output()\n   dateRangeChange: EventEmitter<DateRangeData> = new EventEmitter<DateRangeData>();\n\n   @Output()\n   currentPickerStateChange: EventEmitter<DurationPickerState> = new EventEmitter<DurationPickerState>();\n\n   ngOnInit(): void {\n      if (!this.currentPickerState) {\n         this.currentPickerState = DurationPickerState.ALL;\n      }\n   }\n\n   onTimeOptionClicked(pickerState: DurationPickerState): void {\n      this.currentPickerState = pickerState;\n   }\n\n   onDateRangeChange(range: DateRangeData): void {\n      if (!this.isValid(range)) {\n         return;\n      }\n\n      this.dateRangeChange.emit(range);\n   }\n\n   private isValid(range: DateRangeData): boolean {\n      this.dateRangeError = \"\";\n\n      if (this.isCustomRangeSelected()) {\n         if (!range.from) {\n            this.dateRangeError = VsanUiUtils.getString(\"vsan.perf.chart.timerange.custom.startTime.empty.error\");\n            return;\n         }\n\n         if (!range.to) {\n            this.dateRangeError = VsanUiUtils.getString(\"vsan.perf.chart.timerange.custom.endTime.empty.error\");\n            return;\n         }\n\n         const currentTime: number = new Date().getTime();\n         const startTime: number = range.from;\n         const endTime: number = range.to;\n\n         if (endTime - currentTime > 0) {\n            // The end time can not be greater than the current time.\n            this.dateRangeError = VsanUiUtils.getString(\"vsan.perf.chart.timerange.custom.endTime.error\");\n            return false;\n         } else if (endTime - startTime <= 0) {\n            // The end time should be greater than the start time.\n            this.dateRangeError = VsanUiUtils.getString(\"vsan.perf.chart.timerange.custom.startTime.error\");\n            return false;\n         } else {\n            // more than 'max days' back\n            const earliestAvailableTimestamp: number =\n                  VsanDateTimeUtils.getEarliestAvailableTimestamp(currentTime, this.maxDaysInMilliseconds);\n            if (startTime < earliestAvailableTimestamp) {\n               this.dateRangeError = VsanUiUtils.getString(this.earliestStartTimeErrorKey);\n               return false;\n            } else {\n               return true;\n            }\n         }\n         return true;\n      }\n   }\n\n   isCustomRangeSelected(): boolean {\n      return this.currentPickerState === DurationPickerState.CUSTOM_RANGE;\n   }\n\n   showMonthField(): boolean {\n      return this.maxDays > VsanDateTimeUtils.DAYS_IN_MONTH_DEFAULT;\n   }\n}\n\n/**\n * time range picker states enum to indicate what option is selected\n */\nexport enum DurationPickerState {\n   LAST_HOUR,\n   LAST_DAY,\n   LAST_WEEK,\n   LAST_MONTH,\n   CUSTOM_RANGE,\n   ALL,\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {DateRangeData} from \"@component/datetime-picker/date-range-picker.component\";\nimport {DurationPickerState} from \"@component/datetime-picker/time-last-field-picker/last-field-date-picker.component\";\nimport {TimeRange} from \"@generated/time-range\";\n\nexport class LastFieldDatePickerUtil {\n   static filterItemsByTimeRange<T extends {timeRange: TimeRange}>(timePickerRange: DateRangeData,\n         timePickerState: DurationPickerState,\n         items: T[]): T[] {\n      let result: T[];\n      if (VsanUiUtils.isEmpty(items)) {\n         result = [];\n         // Is last field selected (non-custom range)\n      } else if (timePickerRange && timePickerState !== DurationPickerState.CUSTOM_RANGE) {\n         const now: number = new Date().getTime();\n         result = items.filter(item =>\n                               item.timeRange.startTime < now &&\n                               item.timeRange.endTime > timePickerRange.from);\n         // Is custom range selected\n      } else if (timePickerRange && timePickerState === DurationPickerState.CUSTOM_RANGE) {\n         // in case of custom range, use the specified end time\n         result = items.filter(item =>\n                               item.timeRange.startTime < timePickerRange.to &&\n                               item.timeRange.endTime > timePickerRange.from);\n      } else {\n         result = items;\n      }\n      return result;\n   }\n}","<!-- Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<span class=\"form-label\">{{\"vsan.perf.chart.timerange.label\" | localized}}</span>\n<clr-dropdown>\n   <button class=\"dropdown-toggle btn btn-sm btn-link\" clrDropdownToggle>\n      {{currentOptionLabel}}\n      <clr-icon shape=\"caret down\"></clr-icon>\n   </button>\n   <clr-dropdown-menu clrPosition=\"bottom-left\"\n                      [attr.aria-label]=\"'vsan.perf.chart.timerange.srMessage.dropdownMenu.label' | localized\">\n      <button clrDropdownItem\n              (click)=\"onTimeOptionClicked(DurationPickerState.LAST_HOUR)\">\n         {{\"vsan.monitor.performance.io.insight.timerange.last.hours\" | localized}}\n      </button>\n      <button clrDropdownItem\n              (click)=\"onTimeOptionClicked(DurationPickerState.LAST_DAY)\">\n         {{\"vsan.monitor.performance.io.insight.timerange.last.days\" | localized}}\n      </button>\n      <button clrDropdownItem\n              (click)=\"onTimeOptionClicked(DurationPickerState.LAST_WEEK)\">\n         {{\"vsan.monitor.performance.io.insight.timerange.last.weeks\" | localized}}\n      </button>\n      <button *ngIf=\"showMonthField()\"\n              clrDropdownItem\n              (click)=\"onTimeOptionClicked(DurationPickerState.LAST_MONTH)\">\n         {{\"vsan.monitor.performance.io.insight.timerange.last.months\" | localized}}\n      </button>\n      <button clrDropdownItem\n              (click)=\"onTimeOptionClicked(DurationPickerState.CUSTOM_RANGE)\">\n         {{\"vsan.perf.chart.timerange.custom\" | localized}}\n      </button>\n      <button clrDropdownItem\n              (click)=\"onTimeOptionClicked(DurationPickerState.ALL)\">\n         {{\"vsan.monitor.performance.io.insight.timerange.all\" | localized}}\n      </button>\n   </clr-dropdown-menu>\n</clr-dropdown>\n<vsan-datetime-picker id=\"datetime-input\"\n                      *ngIf=\"isCustomRangeSelected()\"\n                      [datetime]=\"dateRange\"\n                      [errorMessage]=\"dateRangeError\"\n                      [selectMode]=\"DateTimeSelectMode.RANGE\"\n                      (datetimeChange)=\"onDateRangeChange($event)\">\n</vsan-datetime-picker>\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ActionButtonSeparatorComponent} from \"@component/action-button/action-button-separator.component\";\nimport {ButtonTitleDirective} from \"@component/action-button/button-title.directive\";\nimport {ButtonGroupDirective} from \"@component/action-button/button-group.directive\";\nimport {ButtonGroupWrapDirective} from \"@component/action-button/button-group-wrap.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n   ],\n   declarations: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ],\n   exports: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ]\n})\nexport class ActionButtonModule {\n}\n"],"sourceRoot":"webpack:///"}