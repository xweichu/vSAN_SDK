{"version":3,"sources":["webpack:///src/app/vsan/cns/volumes/details/volumes-view-details-basics.component.ts","webpack:///src/app/vsan/cns/volumes/dialog/volume-accessibility-dialog.html","webpack:///src/app/vsan/cns/volumes/details/volumes-view-details-basics.html","webpack:///src/app/vsan/cns/pipe/volume-type-label.pipe.ts","webpack:///src/app/vsan/common/util/promise/promise-baton.ts","webpack:///src/app/vsan/cns/pipe/health-status-icon-shape.pipe.ts","webpack:///src/app/vsan/common/service/flow/error-handler.decorator.ts","webpack:///src/app/vsan/cns/volumes/details/volumes-view-details-cluster.html","webpack:///src/app/vsan/common/pipe/compliance-status-icon.pipe.ts","webpack:///src/app/vsan/cns/volumes/dialog/volume-accessibility-dialog.component.ts","webpack:///src/app/vsan/cns/volumes/volumes-vm-service.ts","webpack:///src/app/vsan/common/component/illustrated-message/illustrated-message.component.ts","webpack:///src/app/vsan/cns/volumes/details/volumes-view-details-row.html","webpack:///src/app/vsan/cns/volumes/filter/label-filter.html","webpack:///src/app/vsan/cns/volumes/action/volume-actions.component.ts","webpack:///src/app/vsan/cns/volumes/volumes.html","webpack:///src/app/vsan/common/component/illustrated-message/illustrated-message.module.ts","webpack:///src/app/vsan/cns/volumes/cell/cns-cluster-cell.component.ts","webpack:///src/app/vsan/cns/pipe/health-status-label.pipe.ts","webpack:///src/app/vsan/cns/volumes/cell/cns-health-status-cell.component.ts","webpack:///src/app/vsan/cns/volumes/dialog/compliance-failures-dialog.component.ts","webpack:///src/app/vsan/cns/volumes/action/reapply-policy-volume/reapply-policy-volume.html","webpack:///src/app/vsan/cns/volumes/cell/cns-health-status-cell.html","webpack:///src/app/vsan/cns/volumes/details/volumes-view-details-cluster.component.ts","webpack:///src/app/vsan/cns/volumes/volumes.component.ts","webpack:///src/app/vsan/cns/cns-volumes.module.ts","webpack:///src/app/vsan/cns/volumes/action/reapply-policy-volume/reapply-policy-volume.component.ts","webpack:///src/app/vsan/common/util/promise/race-condition-safe.decorator.ts","webpack:///src/app/vsan/cns/volumes/filter/label-filter.component.ts","webpack:///src/app/vsan/cns/volumes/action/migrate-volume/migrate-volume.html","webpack:///src/app/vsan/common/directive/show-title/show-title-multi-line.directive.ts","webpack:///src/app/vsan/cns/volumes/cell/cns-vm-cell.component.ts","webpack:///src/app/vsan/cns/volumes/cell/cns-compliance-status-cell.html","webpack:///src/app/vsan/cns/volumes/what-is-this-dialog/what-is-this-dialog.html","webpack:///src/app/vsan/cns/volumes/details/volumes-view-details-pod-row.html","webpack:///src/app/generated/cns-health-status.ts","webpack:///src/app/vsan/cns/volumes/cell/cns-compliance-status-cell.component.ts","webpack:///src/app/vsan/cns/volumes/action/volume-action-availability.service.ts","webpack:///src/app/vsan/cns/volumes/details/volumes-view-details.html","webpack:///src/app/vsan/common/component/file-share-perf/container-volume-perf-data.ts","webpack:///src/app/vsan/cns/volumes/action/volume-actions.html","webpack:///src/app/vsan/cns/volumes/cell/cns-vm-cell.html","webpack:///src/app/vsan/common/util/volumes-util.ts","webpack:///src/app/vsan/cns/volumes/details/volumes-view-details-pod-row.component.ts","webpack:///src/app/vsan/cns/volumes/cell/cns-datastore-cell.component.ts","webpack:///src/app/vsan/cns/volumes/cell/cns-cluster-cell.html","webpack:///src/app/vsan/cns/volumes/cell/cns-datastore-cell.html","webpack:///src/app/vsan/cns/volumes/action/delete-volume/delete-volume.component.ts","webpack:///src/app/vsan/cns/volumes/action/migrate-volume/migrate-volume.component.ts","webpack:///src/app/vsan/cns/volumes/what-is-this-dialog/what-is-this-dialog.component.ts","webpack:///src/app/vsan/cns/volumes/details/volumes-view-details-row.component.ts","webpack:///src/app/vsan/cns/volumes/dialog/compliance-failures-dialog.html","webpack:///src/app/vsan/common/pipe/compliance-status-label.pipe.ts","webpack:///src/app/vsan/cns/volumes/action/migrate-volume/migrate-volume.service.ts","webpack:///src/app/vsan/cns/volumes/action/delete-volume/delete-volume.html","webpack:///src/app/vsan/cns/volumes/details/volumes-view-details.component.ts"],"names":["VolumesViewDetailsBasics","navigationService","VolumesUtil","getString","isEmpty","vmData","isPodVM","fileServiceSharesContext","preselectedShareName","volumeItem","fileshareName","shareTypeFilter","CNS_VOLUME","navigateTo","FILE_SERVICE_SHARES","VolumeTypeLabelPipe","type","FILE","BLOCK","PromiseBaton","ongoingPromise","promise","rejectOnCancel","cancelLastOne","cancel","HealthStatusIconShapePipe","status","green","CLR_SUCCESS_STANDARD_ICON_SHAPE","red","CLR_MINUS_CIRCLE_ICON_SHAPE","yellow","CLR_ERROR_STANDARD_ICON_SHAPE","unknown","CLR_HELP","ErrorHandler","props","targetClass","functionName","descriptor","name","errorHandler","value","ComplianceStatusIconPipe","details","EMPTY_ICON","Object","values","includes","spbmComplianceResult","complianceStatus","homeObjectStorageCompliance","compliant","outOfDate","CLR_WARN_STANDARD_ICON_SHAPE","nonCompliant","notApplicable","VolumeAccessibilityDialogComponent","cnsService","alertMessages","hosts","Icon","busy","volume","getModalContext","datastoreRefs","datastoreData","map","data","reference","getHostsDataByDatastoreRefs","then","result","error","accessibility","accessible","notAccessible","VolumesVmService","getVolumeVmsData","id","IllustratedMessageComponent","MISSING_DATA_IMAGE_CLASS","ACCESS_DENIED_IMAGE_CLASS","MISSING_SELECTION_CLASS","FILTER_NO_RESULT_CLASS","IllustratedMessageType","MISSING_DATA","ACCESS_DENIED","MISSING_SELECTION","FILTER_NO_RESULT","warn","CnsVolumeActionsComponent","taskSvc","volumeActionAvailabilityService","selectedVolumes","onError","onSuccess","VolumeActionAvailabilityService","actionDisabled","actionId","loading","getActionStatus","available","getActionButtonTitle","message","checkAvailability","getActionValidationContext","hasReadPolicyPermission","hasUpdatePolicyPermission","hasDatastoreFileManagementPermission","hasHostStoragePermission","isCnsReconfigPolicySupported","updatePolicyPermission","context","volumes","CNS_VOLUMES_VIEW","setSize","REAPPLY_VOLUME_POLICY_DIALOG","width","height","open","taskRefs","Promise","all","taskRef","getAwaitResult","emit","e","objectRef","contextObject","DELETE_VOLUME_DIALOG","storagePolicyName","MIGRATE_VOLUME_DIALOG","IllustratedMessageModule","CnsClusterCell","isClusterFlavor","VANILLA","WORKLOAD","GUEST","clusterFlavor","cluster","flavor","clusterRef","CLUSTER_CNS_VOLUMES","resPoolRef","LAST_VISITED_PAGE","HealthStatusLabelPipe","CnsHealthStatusCell","isLink","isFileVolume","healthStatus","setDimensions","ACCESSIBILITY_DIALOG_WIDTH","ACCESSIBILITY_DIALOG_HEIGHT","ComplianceFailuresDialogComponent","failures","modalContext","volumeName","loadComplianceFailures","VolumesViewDetailsCluster","namespace","getWCPObjectId","pvcName","NAMESPACE_STORAGE_PVCS","serverGuid","CnsVolumesComponent","pbmProvider","permissionService","changeDetector","capabilityProvider","labelCellService","CnsVolumeField","DEFAULT_ITEMS_PER_PAGE","StorageCompliance","CnsHealthStatus","enumToArray","VsanUiUtils","errorMessages","isFileVolumesSupported","isVolumeRelocationSupported","volumeDetailsResetData","toggleFilterSubject","refreshSubject","state","gridFirstRefresh","dispatchFilterRequestPromise","requestFilters","createRequestFilters","loadVolumes","total","isLeftVisible","preselectFilter","refreshSubscription","subscribe","ensureGridSelectionCheckboxes","labelClickSubscription","onLabelClicked","label","next","COLUMN_LABELS","isDatastoreContext","isDatastore","contextObjectUid","getNavigationData","filters","forEach","gridFieldName","contextFieldValue","buildVolumeKey","push","volumeContextFieldPrefix","charAt","toUpperCase","slice","unsubscribe","page","from","DEFAULT_START_INDEX","$","FIRST_PAGE_CLASS","click","storagePoliciesPromises","loadStoragePolicies","capabilityPromises","loadCapabilities","volumesPromise","setTimeout","detectChanges","srOnlyMessage","hasReadUpdatePolicyPermission","dataGrid","selection","selectionType","SELECTION_TYPE","None","promises","hasVcPermissions","READ_POLICIES","UPDATE_POLICIES","queryPermissions","CONFIG_STORAGE","DATASTORE_FILE_MANAGEMENT","getStoragePolicyIdNameMap","storagePolicies","getIsVolumeRelocationSupportedOnVc","getIsCnsReconfigPolicySupportedOnVc","getIsFileVolumesSupportedOnVc","refresh","getVolumes","volumesResult","fetchVolumes","filter","field","COLUMN_STORAGE_POLICY_NAME","NO_STORAGE_POLICY_VALUE","storagePolicyIdsFilter","keys","policyId","toLowerCase","indexOf","toString","length","offset","limit","size","containerClusters","concat","guestClusters","WIZARD_XL","LEFT","RIGHT","pane","item","selectedItem","selectTarget","pagination","getDatagridPaginatedFooterLabel","totalItems","firstItem","lastItem","routes","path","component","CnsVolumesModule","ReapplyPolicyVolumeComponent","eligibleVolumes","description1","description2","getReapplyPolicyEligibleVolumes","setReapplyStorageDescriptions","key","errors","reapplyStoragePolicy","closeModalDialog","RaceConditionSafe","getUniqueId","func","promiseBaton","addEventListeners","args","resolveOnly","call","apply","Instance","registerRefreshHandler","LabelFilterComponent","selectedLabels","labelSearchValue","onFilterSet","dispatchQueryVolumesRequest","searchString","alertMessage","components","split","queryLabels","queryFilterResults","labels","hasMore","clearFilterResults","pipe","REFRESH_WAIT_MS","filterValue","findLabelIndex","findIndex","selectedLabelIndex","splice","ShowTitleMultiLineDirective","viewContainerRef","resolver","renderer","cdr","isTextEllipsisActive","originalParentPosition","element","parentElement","style","position","addEllipsis","isElementCreated","setTitle","addClipboardIcon","removeClipboardIcon","removeTitle","nativeElement","getElRect","right","getParentRect","getBoundingClientRect","setAttribute","innerTextStripped","removeAttribute","copyToClipboard","createClipboardIcon","ellipsisSpan","CLIPBOARDICON_SPACING","elementText","innerText","ellipsisIndex","lastIndexOf","ELLIPSIS_STRING","substring","copyContent","factory","resolveComponentFactory","clipboardIcon","createComponent","clipboardIconEl","injector","get","setClipBoardIconTop","appendChild","instance","content","document","createElement","className","ELLIPSIS_CLASS_NAME","top","topPostion","setEllipsisInitialPadding","destroy","ELLIPSIS_SPACING","CnsVmCell","vmRef","VM_SUMMARY","CnsComplianceStatusCell","COMPLIANCE_FAILURE_DIALOG_WIDTH","COMPLIANCE_FAILURE_DIALOG_HEIGHT","VOLUME_REAPPLY_POLICY_ID","validate","reapplyPolicyVolumeAvailability","VOLUME_DELETE_ID","deleteVolumeAvailability","VOLUME_MIGRATE_ID","migrateVolumeAvailability","hasSelectedVolumes","singleVolumeSelection","isBlockVolume","policiesAreUpToDate","getReapplyPolicyValidationMessage","hasDeletePermissions","hasMigratePermissions","v","storagePolicyId","compliance","isNonCompliantPolicyReapplyEligible","VSAN_DIRECT","VMFS","datastoreType","validatorsGroup","successMessageKey","errorMessage","getFirstError","isActionAvailable","statusMessage","ContainerVolumePerfData","perfEntityData","isAttachedContainerVolume","hasReadPermissions","VolumesViewDetailsPodRowComponent","POD_DELIMITER","podNames","CnsDatastoreCell","datastore","DATASTORE_CNS_VOLUMES","DeleteVolumeComponent","volumesVmService","getVMData","isVolumeAttached","deleteVolume","MigrateVolumeComponent","migrationService","MIGRATE_VOLUME_DOCUMENTAION_GUID","selectionChanged","target","selectedDatastore","showKBLink","policyCompliant","warning","documentationUrl","getVmwareHelpUrl","NETWORKING_URL","getMigrateVolumeData","migrateVolume","destinationDatastores","setInitialSelection","getPaginationLabel","getDatastoreTypeLabel","isCompatible","getCompatibilityIconClass","getCompatibilityIconShape","getCompatibilityLabel","WhatIsThisDialogComponent","title","infoImage","VolumesViewDetailsRow","ComplianceStatusLabelPipe","MigrateVolumeService","isUnset","CLR_SUCCESS_ICON_CLASS","CLR_WARN_ICON_CLASS","itemsPerPage","VSAN","PMEM","NFS","NFS41","VVOL","VolumesViewDetails","physicalPlacementService","perfProvider","perfMultiEntitiesDataQuery","clusterDetailsTabActive","volumeIdToVolumeDetails","Map","volumeIdToPhysicalPlacement","volumeData","VolumeData","_volumeItem","resetVolumeData","PERF_NOT_ATTACHED_BLOCK_VOLUME","isAssociatedVmAccessible","PERF_NOT_VM_READ_PERMISSIONS","queryAllData","reset","virtualObjects","placementData","uuid","uid","iconId","diskUuid","isVolumeOnVsanDirectDatastore","capacityDisk","nodeUuid","virtualObjectsContext","presentVirtualObjectUuids","volumeDetails","virtualObject","uuids","filterTypes","getExtensionId","getVirtualObjectTypeFilter","EXTENSION_APP","VIRTUAL_OBJECTS","canGetVirtualObjectsFromDatastore","extensionId","getVolumeDetails","set","getLabelByKey","EXTENSION_ID","labelKey","queryVMData","queryVolumeDetails","queryPlacementData","queryPerformanceData","performanceData","handleError","physicalPlacement","getPhysicalPlacementData","isVolumeOnVsanDatastore","getVsanPhysicalPlacement","getVsanDirectPhysicalPlacement","volumePhysicalPlacement","toMap","isPerformanceApplicable","queryCommonPerfData","commonPerfData","getVolumePerfData","getFileVolumePerfData","getBlockVolumePerfData","getVirtualMachineDiskData","diskData","disks","parseVirtualDisk","disk","find","diskItem","entityName","containerVolumePerfData","fileShare","config","domainName","protocol","isSmbProtocolSupported","fileSharePerfData","getPerfMonitorCommonPropsData"],"mappings":"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","file":"101-es5.js","sourcesContent":["/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {Volume} from \"@generated/volume\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {CnsVolumeType} from \"@generated/cns-volume-type\";\nimport {SharesContext} from \"@navigation/context/shares-context\";\nimport {FileShareTypeFilterOptions} from \"../../../file-services/shares/filters/file-share-type-filter-options\";\nimport {BasicVmData} from \"@generated/basic-vm-data\";\nimport {VolumesUtil} from \"@util/volumes-util\";\n\n@Component({\n   templateUrl: \"volumes-view-details-basics.html\",\n   styleUrls: [\"volumes-view-details-basics.scss\"],\n   selector: \"cns-volumes-view-details-basics\",\n})\n\n/**\n * The component is used to show basic details of a CNS volume(e.g., name, storage policy, datastore, etc.)\n */\n\nexport class VolumesViewDetailsBasics {\n\n   VolumesUtil: typeof VolumesUtil = VolumesUtil;\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   @Input()\n   volumeItem: Volume;\n\n   @Input()\n   storagePolicyName: string;\n\n   @Input()\n   vmData: BasicVmData[];\n\n   @Input()\n   vmDataLoading: boolean;\n\n   getVMLabel(): string {\n      return VsanUiUtils.getString((!VsanUiUtils.isEmpty(this.vmData) &&\n            this.vmData[0].isPodVM) ?\n            \"cns.volumes.container.grid.details.tab.basics.column.pod\" :\n            \"cns.volumes.container.grid.details.tab.basics.column.vm\");\n   }\n\n   navigateToFileShares() {\n      const fileServiceSharesContext: SharesContext = {\n         preselectedShareName: this.volumeItem.fileshareName,\n         shareTypeFilter: FileShareTypeFilterOptions.CNS_VOLUME,\n      };\n      this.navigationService.navigateTo(PlatformExtension.FILE_SERVICE_SHARES, null, fileServiceSharesContext);\n   }\n}","<!--Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-info-prompt\n      [title]=\"'cns.volumes.container.volume.accessibility.dialog.title' | localized\"\n      [subtitle]=\"volume.name\"\n      [(alertMessages)]=\"alertMessages\"\n      [allowAlertClose]=\"false\">\n   <clr-datagrid *ngIf=\"!alertMessages?.length\"\n                 class=\"datagrid-compact\"\n                 [clrDgLoading]=\"busy\">\n      <!--datagrid columns-->\n      <clr-dg-column>\n         {{'cns.volumes.container.volume.accessibility.dialog.column.hostName' | localized}}\n      </clr-dg-column>\n      <clr-dg-column>\n         {{'cns.volumes.container.volume.accessibility.dialog.column.accessibleStatus' | localized}}\n      </clr-dg-column>\n      <!--datagrid rows-->\n      <clr-dg-row *ngFor=\"let host of hosts\">\n         <clr-dg-cell>\n            <clr-icon [attr.shape]=\"host.iconId\"></clr-icon>\n            {{host.hostName}}\n         </clr-dg-cell>\n         <clr-dg-cell>\n            <clr-icon aria-hidden=\"true\"\n                      [attr.shape]=\"getHealthStatus(host.accessibility) | cnsHealthStatusIconShape\"\n                      [ngClass]=\"Icon.CLR_SOLID_ICON_CLASS + ' ' +\n                      Icon.clrIconShapeClassMap[getHealthStatus(host.accessibility) | cnsHealthStatusIconShape]\">\n            </clr-icon>\n            <span id=\"status-label\">{{getHealthStatus(host.accessibility) | cnsHealthStatusLabel}}</span>\n         </clr-dg-cell>\n      </clr-dg-row>\n   </clr-datagrid>\n</vsan-info-prompt>\n","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<form class=\"clr-form clr-form-compact\">\n   <cns-volumes-view-details-row id=\"volume-type\"\n                                 itemLabel=\"cns.volumes.container.grid.column.type\">\n      {{volumeItem.type | cnsVolumeTypeLabel}}\n   </cns-volumes-view-details-row>\n   <cns-volumes-view-details-row id=\"volume-id\"\n                                 itemLabel=\"cns.volumes.container.grid.column.id\">\n      {{volumeItem.id}}\n   </cns-volumes-view-details-row>\n   <cns-volumes-view-details-row *ngIf=\"volumeItem?.backingObjectId\"\n                                 id=\"volume-backing-object-id\"\n                                 itemLabel=\"cns.volumes.container.grid.column.backingObjectId\">\n      {{volumeItem.backingObjectId}}\n   </cns-volumes-view-details-row>\n   <cns-volumes-view-details-row *ngIf=\"volumeItem?.path\"\n                                 id=\"volume-path\"\n                                 itemLabel=\"cns.volumes.container.grid.column.path\">\n      <div class=\"path-value\">\n         <span>\n            {{volumeItem.path}}\n         </span>\n         <vsan-clipboard-icon [content]=\"volumeItem?.path\"></vsan-clipboard-icon>\n      </div>\n   </cns-volumes-view-details-row>\n   <cns-volumes-view-details-row *ngIf=\"VolumesUtil.isBlockVolume(volumeItem)\"\n                                 id=\"volume-vm\"\n                                 [itemLabel]=\"getVMLabel()\">\n      <cns-vm-cell [vmData]=\"vmData\"\n                   [loading]=\"vmDataLoading\">\n      </cns-vm-cell>\n   </cns-volumes-view-details-row>\n   <cns-volumes-view-details-row id=\"volume-datastore\"\n                                 itemLabel=\"cns.volumes.container.grid.column.datastore\">\n      <cns-datastore-cell [datastoreData]=\"volumeItem.datastoreData\"></cns-datastore-cell>\n   </cns-volumes-view-details-row>\n   <cns-volumes-view-details-row id=\"volume-storage-policy\"\n                                 itemLabel=\"cns.volumes.container.grid.column.storagePolicy\">\n      <storage-policy-cell [storagePolicyName]=\"storagePolicyName\"\n                           [storagePolicyId]=\"volumeItem.storagePolicyId\">\n      </storage-policy-cell>\n   </cns-volumes-view-details-row>\n   <cns-volumes-view-details-row id=\"volume-compliance-status\"\n                                 itemLabel=\"cns.volumes.container.grid.column.compliance\">\n      <cns-compliance-status-cell [volume]=\"volumeItem\"></cns-compliance-status-cell>\n   </cns-volumes-view-details-row>\n   <cns-volumes-view-details-row id=\"volume-health-status\"\n                                 itemLabel=\"cns.volumes.container.grid.column.healthStatus\">\n      <cns-health-status-cell [volume]=\"volumeItem\"></cns-health-status-cell>\n   </cns-volumes-view-details-row>\n   <ng-container *ngIf=\"VolumesUtil.isFileVolume(volumeItem)\">\n      <div>\n         {{\"cns.volumes.container.grid.details.tab.basics.navigateToFileShares.description\" | localized}}\n      </div>\n      <button id=\"file-shares-navigation-btn\"\n              class=\"btn btn-sm btn-link no-spacing\"\n              (click)=\"navigateToFileShares()\">\n         {{\"cns.volumes.container.grid.details.tab.basics.navigateToFileShares.label\" | localized}}\n      </button>\n   </ng-container>\n</form>\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {CnsVolumeType} from \"@generated/cns-volume-type\";\n\n/**\n * This pipe returns the label for a volume type.\n */\n@Pipe({\n   name: \"cnsVolumeTypeLabel\",\n})\nexport class VolumeTypeLabelPipe implements PipeTransform {\n   transform(type: CnsVolumeType): string {\n      switch (type) {\n         case CnsVolumeType.FILE:\n            return VsanUiUtils.getString(\"cns.volumes.container.volumeType.file\");\n         case CnsVolumeType.BLOCK:\n         default:\n            return VsanUiUtils.getString(\"cns.volumes.container.volumeType.block\");\n      }\n   }\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {CancelablePromise} from \"@util/promise/cancelable-promise\";\n\nexport class PromiseBaton<TResult> {\n   private ongoingPromise: CancelablePromise<TResult>;\n\n   constructor() {\n      this.ongoingPromise = null;\n   }\n\n   /**\n    * Only the last passed promise will be resolved. Others will be canceled.\n    * @param promise - The only pending promise that we want to resolve.\n    * @param rejectOnCancel - Whether we want to rethrow the cancellation of the returned promise.\n    * @example\n    * ```ts\n    * // If later we cancel the returned promise it will be rejected with the following error: { canceled: true }.\n    * resolveOnly(promise, true);\n    * ```\n    * ```ts\n    * // If later we cancel the returned promise it won't be rejected and the 'catch' callback won't be invoked.\n    * resolveOnly(promise, false);\n    * ```\n    */\n   resolveOnly(promise: Promise<TResult>, rejectOnCancel: boolean = false): Promise<TResult> {\n      this.cancelLastOne();\n      // We wrap it into CancelablePromise to be able to cancel this one without affecting the original promise.\n      // Original promise subscribers still will be able to get the result.\n      this.ongoingPromise = new CancelablePromise(promise, rejectOnCancel);\n      return this.ongoingPromise.promise;\n   }\n\n   /**\n    * Reject the currently running promise.\n    */\n   cancelLastOne(): void {\n      if (this.ongoingPromise) {\n         this.ongoingPromise.cancel();\n      }\n   }\n}","/* Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {Icon} from \"@util/icon\";\nimport {CnsHealthStatus} from \"@generated/cns-health-status\";\n\n/**\n * This pipe changes icon shapes according the CnsHealthStatus value.\n */\n@Pipe({\n   name: \"cnsHealthStatusIconShape\",\n})\nexport class HealthStatusIconShapePipe implements PipeTransform {\n   transform(status: CnsHealthStatus): string {\n      if (!status) {\n         return \"\";\n      }\n\n      switch (status) {\n         case CnsHealthStatus.green:\n            return Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE;\n         case CnsHealthStatus.red:\n            return Icon.CLR_MINUS_CIRCLE_ICON_SHAPE;\n         case CnsHealthStatus.yellow:\n            return Icon.CLR_ERROR_STANDARD_ICON_SHAPE;\n         case CnsHealthStatus.unknown:\n            return Icon.CLR_HELP;\n         default:\n            return Icon.CLR_ERROR_STANDARD_ICON_SHAPE;\n      }\n   }\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {LoadingFlowWrapper} from \"@service/flow/loading-flow-wrapper.data\";\n\n/**\n * This property decorator is supposed to be used along with the @Loader decorator.\n * If an exception is thrown during the execution of the method decorated with @Loader\n * the ErrorHandler method will be invoked. You can define as many ErrorHandlers as you want,\n * but they must be with different names. The name can be provided as input to the decorator.\n * If a name is set to the ErrorHandler it will handle only the errors thrown by Loader functions\n * with the same name. If no name is passed to the ErrorHandler, it will handle only the errors\n * from Loader functions with no name.\n *\n * <pre>\n * // Example 1:\n * @Loader()\n * loadSyncData(): any {\n *    throw new Error(\"Failed to load sync data\");\n * }\n *\n * @ErrorHandler()\n * handleError(err: any) {\n *    // handle the error.\n * }\n *...\n *\n * // Example 2\n *\n * @Loader({name: \"data-loading-flow})\n * async loadAsyncData(): Promise<any> {\n *    return Promise.reject(\"Failed to load async data\");\n * }\n *\n * @ErrorHandler({name: \"data-loading-flow})\n * handleError(err: any) {\n *    // handle the error.\n * }\n * ...\n * </pre>\n */\nexport function ErrorHandler(props?: ErrorHandlerProperties): MethodDecorator {\n   props = props || {};\n   return (targetClass: any, functionName: string, descriptor: PropertyDescriptor): void => {\n      (new LoadingFlowWrapper(targetClass, props.name)).errorHandler = descriptor.value;\n   };\n}\n\n/**\n * Properties of the ErrorHandler decorator.\n */\nexport interface ErrorHandlerProperties {\n\n   /**\n    * Indicates which @Loder should be handled by this @ErrorHandler\n    */\n   name?: string;\n}\n","<!--Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n\n<!--Classes used by QEs: cluster-label -->\n\n<div class=\"cluster-info\">\n   <!-- The label for the guest cluster is defined in the parent cluster's row  -->\n   <label *ngIf=\"!isGuestCluster()\" class=\"cluster-label\">\n      {{\"cns.volumes.container.grid.details.tab.relatedObjects.column.cluster.label\" | localized}}\n   </label>\n   <cns-cluster-cell [cluster]=\"cluster\"\n                     [volumeName]=\"volumeName\"\n                     [showBadge]=\"true\">\n   </cns-cluster-cell>\n</div>\n<ng-container *ngIf=\"cluster.persistentVolumes && cluster.persistentVolumes.length > 0\">\n   <ng-container *ngFor=\"let pv of cluster.persistentVolumes\">\n      <div class=\"pv-container\">\n         <cns-volumes-view-details-row\n               itemLabel=\"cns.volumes.container.grid.details.tab.relatedObjects.column.pv\"\n               [sectionRow]=\"true\">\n         </cns-volumes-view-details-row>\n         <cns-volumes-view-details-row\n               class=\"related-objects\"\n               itemLabel=\"cns.volumes.container.grid.details.tab.relatedObjects.column.name\">\n            {{pv.name}}\n         </cns-volumes-view-details-row>\n         <cns-volumes-view-details-row\n               class=\"related-objects\"\n               itemLabel=\"cns.volumes.container.grid.details.tab.relatedObjects.column.labels\">\n            <label-cell\n                  [entityLabels]=\"pv.labels\"\n                  [showSeeAllButton]=\"false\"\n                  [isClickable]=\"true\">\n            </label-cell>\n         </cns-volumes-view-details-row>\n      </div>\n      <ng-container *ngIf=\"pv.persistentVolumeClaim\">\n         <div class=\"pvc-container\">\n            <cns-volumes-view-details-row\n                  itemLabel=\"cns.volumes.container.grid.details.tab.relatedObjects.column.namespace\"\n                  [sectionRow]=\"true\">\n                <span *ngIf=\"!isWCPCluster()\">\n                  {{pv.persistentVolumeClaim.namespace}}\n               </span>\n               <a *ngIf=\"isWCPCluster()\"\n                  href=\"javascript://\"\n                  (click)=\"navigateToWCPNamespace(pv.persistentVolumeClaim.namespace)\">\n                  {{pv.persistentVolumeClaim.namespace}}\n               </a>\n            </cns-volumes-view-details-row>\n            <cns-volumes-view-details-row\n                  itemLabel=\"cns.volumes.container.grid.details.tab.relatedObjects.column.pvc\"\n                  [sectionRow]=\"true\">\n            </cns-volumes-view-details-row>\n            <cns-volumes-view-details-row\n                  class=\"related-objects\"\n                  itemLabel=\"cns.volumes.container.grid.details.tab.relatedObjects.column.name\">\n               <span *ngIf=\"!isWCPCluster()\">\n                  {{pv.persistentVolumeClaim.name}}\n               </span>\n               <a *ngIf=\"isWCPCluster()\"\n                  href=\"javascript://\"\n                  (click)=\"navigateToWCPPvc(pv.persistentVolumeClaim.namespace, pv.persistentVolumeClaim.name)\">\n                  {{pv.persistentVolumeClaim.name}}\n               </a>\n            </cns-volumes-view-details-row>\n            <cns-volumes-view-details-row\n                  class=\"related-objects\"\n                  itemLabel=\"cns.volumes.container.grid.details.tab.relatedObjects.column.labels\">\n               <label-cell\n                     [entityLabels]=\"pv.persistentVolumeClaim.labels\"\n                     [showSeeAllButton]=\"false\"></label-cell>\n            </cns-volumes-view-details-row>\n            <cns-volumes-view-details-pod-row *ngIf=\"!pv.persistentVolumeClaim.guestClusters.length\"\n                                              [vmData]=\"vmData\"\n                                              [vmDataLoading]=\"vmDataLoading\"\n                                              [podNames]=\"pv.persistentVolumeClaim.podNames\">\n            </cns-volumes-view-details-pod-row>\n            <cns-volumes-view-details-row *ngIf=\"pv.persistentVolumeClaim.guestClusters.length\"\n                                          class=\"related-objects\"\n                                          itemLabel=\"cns.volumes.container.grid.details.tab.relatedObjects.column.cluster.guest.label\">\n               <cns-volumes-view-details-cluster *ngFor=\"let tkc of pv.persistentVolumeClaim.guestClusters\"\n                                                 [volumeName]=\"volumeName\"\n                                                 [cluster]=\"tkc\"\n                                                 [vmData]=\"vmData\"\n                                                 [vmDataLoading]=\"vmDataLoading\">\n               </cns-volumes-view-details-cluster>\n            </cns-volumes-view-details-row>\n         </div>\n      </ng-container>\n   </ng-container>\n</ng-container>\n\n","/* Copyright 2017-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {PipeTransform, Pipe} from \"@angular/core\";\nimport {PerfStatsObjectInfo} from \"@generated/perf-stats-object-info\";\nimport {VsanIscsiTargetConfig} from \"@generated/vsan-iscsi-target-config\";\nimport {Icon} from \"@util/icon\";\nimport {StorageCompliance} from \"@generated/storage-compliance\";\n\n@Pipe({\n   name: 'complianceStatusIcon'\n})\nexport class ComplianceStatusIconPipe implements PipeTransform {\n\n   public transform(details: any | PerfStatsObjectInfo | VsanIscsiTargetConfig | StorageCompliance): any {\n      if (!details) {\n         return Icon.EMPTY_ICON;\n      }\n\n      let status: StorageCompliance = null;\n      if ((<any> Object).values(StorageCompliance).includes(details)) {\n         status = details;\n      } else if (details.spbmComplianceResult) {\n         status = details.spbmComplianceResult.complianceStatus;\n      } else if (details.homeObjectStorageCompliance) {\n         status = details.homeObjectStorageCompliance\n      }\n\n      if (!status) {\n         return Icon.EMPTY_ICON;\n      }\n\n      switch (status) {\n         case StorageCompliance.compliant:\n            return Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE;\n         case StorageCompliance.unknown:\n            return Icon.CLR_HELP;\n         case StorageCompliance.outOfDate:\n            return Icon.CLR_WARN_STANDARD_ICON_SHAPE;\n         case StorageCompliance.nonCompliant:\n         case StorageCompliance.notApplicable:\n            return Icon.CLR_ERROR_STANDARD_ICON_SHAPE;\n         default:\n            return Icon.EMPTY_ICON;\n      }\n   }\n}\n","/* Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {Icon} from \"@util/icon\";\nimport {Logger} from \"@util/logger\";\nimport {CnsService} from \"@generated/cns-service\";\nimport {CnsHostData} from \"@generated/cns-host-data\";\nimport {Volume} from \"@generated/volume\";\nimport {CnsHealthStatus} from \"@generated/cns-health-status\";\nimport {CnsDatastoreAccessibilityStatus} from \"@generated/cns-datastore-accessibility-status\";\n\n/**\n * Dialog which represents the hosts and their accessibility to datastores.\n */\n@Component({\n   selector: \"cns-volume-accessibility-dialog\",\n   templateUrl: \"volume-accessibility-dialog.html\",\n})\n\nexport class VolumeAccessibilityDialogComponent implements OnInit {\n   volume: Volume;\n   busy: boolean;\n   alertMessages: string[] = [];\n   hosts: CnsHostData[] = [];\n   Icon = Icon;\n\n   constructor(private cnsService: CnsService) {\n   }\n\n   ngOnInit() {\n      this.busy = true;\n      this.volume = VsanUiUtils.getModalContext().volume;\n\n      const datastoreRefs: ManagedObject[] = this.volume.datastoreData.map(data => data.reference);\n      this.cnsService.getHostsDataByDatastoreRefs(datastoreRefs)\n            .then((result: CnsHostData[]) => {\n               this.hosts = result;\n               this.busy = false;\n            }).catch(error => {\n         Logger.error(error);\n         this.alertMessages = [error];\n         this.busy = false;\n      });\n   }\n\n   getHealthStatus(accessibility: CnsDatastoreAccessibilityStatus): CnsHealthStatus {\n      switch (accessibility) {\n         case CnsDatastoreAccessibilityStatus.accessible:\n            return CnsHealthStatus.green;\n         case CnsDatastoreAccessibilityStatus.notAccessible:\n            return CnsHealthStatus.red;\n      }\n   }\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Injectable} from \"@angular/core\";\nimport {CnsVolumeType} from \"@generated/cns-volume-type\";\nimport {BasicVmData} from \"@generated/basic-vm-data\";\nimport {Volume} from \"@generated/volume\";\nimport {CnsService} from \"@generated/cns-service\";\n/**\n * A service that checks whether a block volume is attached to a VM.\n */\n@Injectable()\nexport class VolumesVmService  {\n   constructor(private cnsService: CnsService) {\n   }\n\n   async getVMData(volumeItem: Volume): Promise<void> {\n      // Don't fetch vm data for non-block volumes or if it is already fetched.\n      if (volumeItem.type !== CnsVolumeType.BLOCK || volumeItem.vmData) {\n         return;\n      }\n      // It is not necessary to call the method for each datastore (e.g., in case of having added\n      // multiple NFS datastores to separate DCs) because the API already returns all the VM data.\n      const vmData: BasicVmData[] = await this.cnsService.getVolumeVmsData(\n            volumeItem.datastoreData[0].reference, volumeItem.id);\n      volumeItem.vmData = vmData;\n   }\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, Input} from \"@angular/core\";\nimport {Logger} from \"@util/logger\";\n\n/**\n * Component which displays illustrated messages such as info for the page, lack of data, etc.\n * Each type of message has own IllustratedMessageType.\n * The image on top of message depends on the type. If add new type, define a picture for it.\n * Message is a text right below the image\n * Content between tags if any is displayed at the bottom. This is the place to add custom functionality to the\n * component i.e functionality for new instance, configure, etc.\n */\n@Component({\n   selector: \"vsan-illustrated-message\",\n   templateUrl: \"illustrated-message.html\",\n   styleUrls: [\"illustrated-message.scss\"],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IllustratedMessageComponent {\n   private readonly MISSING_DATA_IMAGE_CLASS: string = \"missing-data-image\";\n   private readonly ACCESS_DENIED_IMAGE_CLASS: string = \"access-denied-image\";\n   private readonly MISSING_SELECTION_CLASS: string = \"missing-selection-image\";\n   private readonly FILTER_NO_RESULT_CLASS: string = \"filter-no-result\";\n\n   @Input()\n   type: IllustratedMessageType = IllustratedMessageType.MISSING_DATA;\n\n   @Input()\n   message: string;\n\n   getImageClass(): string {\n      switch (this.type) {\n         case IllustratedMessageType.MISSING_DATA:\n            return this.MISSING_DATA_IMAGE_CLASS;\n         case IllustratedMessageType.ACCESS_DENIED:\n            return this.ACCESS_DENIED_IMAGE_CLASS;\n         case IllustratedMessageType.MISSING_SELECTION:\n            return this.MISSING_SELECTION_CLASS;\n         case IllustratedMessageType.FILTER_NO_RESULT:\n            return this.FILTER_NO_RESULT_CLASS;\n         default:\n            Logger.warn(\"Not handled type: \" + this.type);\n      }\n   }\n}\n\n/**\n * The type of the message.\n */\nexport enum IllustratedMessageType {\n   // If add new type, add also handling for it in getImageClass() method.\n   MISSING_DATA,\n   ACCESS_DENIED,\n   MISSING_SELECTION,\n   FILTER_NO_RESULT,\n}\n","<!--Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential-->\n\n<div class=\"clr-form-control\" [ngClass]=\"{'section-row': sectionRow}\">\n   <label class=\"clr-control-label\">\n      {{itemLabel | localized}}\n   </label>\n   <span class=\"clr-control-container\">\n      <ng-content>\n      </ng-content>\n   </span>\n</div>\n\n\n","<!-- Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-validation *ngIf=\"alertMessage\"\n                 alertType=\"danger\"\n                 [allowClose]=\"false\"\n                 [alert]=\"alertMessage\"\n                 [isSmall]=\"true\">\n</vsan-validation>\n<input type=\"text\"\n       class=\"clr-input\"\n       placeholder=\"{{'cns.volumes.container.grid.column.label.filter.placeholder' | localized}}\"\n       [(ngModel)]=\"labelSearchValue\"\n       (input)=\"onSearchChange($event.target.value)\"\n       autocomplete=\"off\">\n<div *ngIf=\"labelSearchValue\" id=\"filter-placeholder-label\">\n   {{'cns.volumes.container.grid.column.label.filter.placeholder' | localized}}\n</div>\n<div *ngIf=\"hasMore\" id=\"filter-more-label\">\n   {{'cns.volumes.container.grid.column.label.filter.more' | localized}}\n</div>\n<div *ngIf=\"!loading && queryFilterResults?.length > 1\" id=\"filter-selection-label\">\n   {{'cns.volumes.container.grid.column.label.filter.selection' | localized}}\n</div>\n<div class=\"labels-container\" *ngIf=\"!loading && queryFilterResults?.length > 0\">\n   <div *ngFor=\"let label of queryFilterResults\"\n         class=\"label-wrapper\"\n         vsan-show-title-multi-line\n         [copyToClipboard]=\"true\">\n        <div class=\"label label-light-blue clickable\"\n             [ngClass]=\"{'selected-label': isLabelSelected(label)}\"\n             (click)=\"selectLabel(label)\">\n            {{label.key}}\n            <span class=\"badge\">{{label.value}}</span>\n        </div>\n   </div>\n</div>\n<div *ngIf=\"loading\"\n     class=\"spinner-label\">\n   <span class=\"spinner spinner-sm spinner-inline\"></span>\n   {{'cns.volumes.container.grid.column.label.filter.loading' | localized}}\n</div>","/* Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {Volume} from \"@generated/volume\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {ActionAvailableStatus} from \"@util/validation/action-available-status\";\nimport {VsanDialogUtil} from \"@util/vsan-dialog-util\";\nimport {VsanRoutes} from \"../../../../vsan-routes\";\nimport {CnsVolumesDeleteVolumeModalContext} from \"./delete-volume/delete-volume-modal-context.data\";\nimport {CnsVolumesMigrateVolumeModalContext} from \"./migrate-volume/migrate-volume-modal-context.data\";\nimport {ReapplyPolicyVolumeModalContextData} from \"./reapply-policy-volume/reapply-policy-volume-modal-context.data\";\nimport {VolumeActionAvailabilityService} from \"./volume-action-availability.service\";\nimport {VolumeActionContext} from \"./volume-action-context\";\n\n@Component({\n   templateUrl: \"volume-actions.html\",\n   selector: \"cns-volume-actions\",\n   styleUrls: [\"volume-actions.scss\"],\n})\nexport class CnsVolumeActionsComponent {\n   @Input()\n   selectedVolumes: Volume[] = [];\n\n   @Input()\n   storagePolicyName: string;\n\n   @Input()\n   isVolumeRelocationSupported: boolean;\n\n   @Input()\n   isCnsReconfigPolicySupported: boolean;\n\n   @Input()\n   loading: boolean;\n\n   @Input()\n   hasReadPolicyPermission: boolean;\n\n   @Input()\n   hasUpdatePolicyPermission: boolean;\n\n   @Input()\n   hasDatastoreFileManagementPermission: boolean;\n\n   @Input()\n   hasHostStoragePermission: boolean;\n\n   @Output()\n   onError: EventEmitter<string> = new EventEmitter<string>();\n\n   @Output()\n   onSuccess: EventEmitter<void> = new EventEmitter<void>();\n\n   VolumeActionAvailabilityService: typeof VolumeActionAvailabilityService = VolumeActionAvailabilityService;\n\n   constructor(private taskSvc: TaskMonitorService,\n         private volumeActionAvailabilityService: VolumeActionAvailabilityService,\n   ) {\n   }\n\n   actionDisabled = (actionId: string): boolean => {\n      return this.loading || !this.getActionStatus(actionId).available;\n   };\n\n   getActionButtonTitle = (actionId: string): string => {\n      return this.getActionStatus(actionId).message;\n   };\n\n   private getActionStatus = (actionId: string): ActionAvailableStatus => {\n      return this.volumeActionAvailabilityService.checkAvailability(this.getActionValidationContext(actionId));\n   };\n\n   private getActionValidationContext(actionId: string): VolumeActionContext {\n      return {\n         actionId: actionId,\n         selectedVolumes: this.selectedVolumes,\n         hasReadPolicyPermission: this.hasReadPolicyPermission,\n         hasUpdatePolicyPermission: this.hasUpdatePolicyPermission,\n         hasDatastoreFileManagementPermission: this.hasDatastoreFileManagementPermission,\n         hasHostStoragePermission: this.hasHostStoragePermission,\n         isCnsReconfigPolicySupported: this.isCnsReconfigPolicySupported,\n      };\n   }\n\n   hasReadUpdatePolicyPermission(): boolean {\n      const updatePolicyPermission: boolean = this.isCnsReconfigPolicySupported\n            ? this.hasDatastoreFileManagementPermission\n            : this.hasUpdatePolicyPermission;\n      return this.hasReadPolicyPermission && updatePolicyPermission;\n   }\n\n   reapplyPolicy(): void {\n      const context: ReapplyPolicyVolumeModalContextData = {\n         volumes: this.selectedVolumes,\n         isCnsReconfigPolicySupported: this.isCnsReconfigPolicySupported,\n      };\n      new ModalBuilder(`${VsanRoutes.CNS_VOLUMES_VIEW}/reapplyPolicyVolume`)\n            .setSize(VsanDialogUtil.REAPPLY_VOLUME_POLICY_DIALOG.width,\n                  VsanDialogUtil.REAPPLY_VOLUME_POLICY_DIALOG.height)\n            .open(context)\n            .then(async (taskRefs: ManagedObject[]) => await Promise.all(\n                  taskRefs.map(taskRef => this.taskSvc.getAwaitResult(taskRef))))\n            .then(() => this.onSuccess.emit())\n            .catch(e => this.onError.emit(e));\n   }\n\n   deleteVolume(): void {\n      const context: CnsVolumesDeleteVolumeModalContext = {\n         objectRef: ManagedObject.contextObject,\n         volume: this.selectedVolumes[0],\n      };\n      new ModalBuilder(`${VsanRoutes.CNS_VOLUMES_VIEW}/deleteVolume`)\n            .setSize(VsanDialogUtil.DELETE_VOLUME_DIALOG.width, VsanDialogUtil.DELETE_VOLUME_DIALOG.height)\n            .open(context)\n            .then(async taskRef => await this.taskSvc.getAwaitResult(taskRef))\n            .then(() => this.onSuccess.emit())\n            .catch(e => this.onError.emit(e));\n   }\n\n   migrateVolume(): void {\n      const context: CnsVolumesMigrateVolumeModalContext = {\n         volume: this.selectedVolumes[0],\n         storagePolicyName: this.storagePolicyName,\n      };\n\n      new ModalBuilder(`${VsanRoutes.CNS_VOLUMES_VIEW}/migrateVolume`)\n            .setSize(VsanDialogUtil.MIGRATE_VOLUME_DIALOG.width, VsanDialogUtil.MIGRATE_VOLUME_DIALOG.height)\n            .open(context)\n            .then(async taskRef => await this.taskSvc.getAwaitResult(taskRef))\n            .then(() => this.onSuccess.emit())\n            .catch(e => this.onError.emit(e));\n   }\n}\n","<!-- Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<h5 vsan-auto-focus>\n   {{\"cns.monitor.volumes\" | localized}}\n</h5>\n<h6 class=\"cns-header\">\n   <span>{{\"cns.volumes.container.provider\" | localized}}</span>\n   <span>{{\"cns.volumes.container.provider.kubernetes\" | localized}}</span>\n   <div>\n      <button id=\"what-is-this-btn\" class=\"btn btn-sm btn-link no-spacing\" (click)=\"openWhatIsThisDialog()\">\n         {{\"vsan.common.learnMore\" | localized}}\n      </button>\n   </div>\n</h6>\n<vsan-validation id=\"load-volumes-validation\"\n                 *ngIf=\"errorMessages.length > 0\"\n                 [allowClose]=\"true\"\n                 [(alerts)]=\"errorMessages\"\n                 (onClosed)=\"errorMessages = []\">\n</vsan-validation>\n<div class=\"volume-actions\">\n   <cns-volume-actions [selectedVolumes]=\"selectedVolumes\"\n                       [storagePolicyName]=\"storagePolicyNameFromId(selectedVolumes[0]?.storagePolicyId)\"\n                       [isVolumeRelocationSupported]=\"isVolumeRelocationSupported\"\n                       [isCnsReconfigPolicySupported]=\"isCnsReconfigPolicySupported\"\n                       [loading]=\"loading\"\n                       [hasReadPolicyPermission]=\"hasReadPolicyPermission\"\n                       [hasUpdatePolicyPermission]=\"hasUpdatePolicyPermission\"\n                       [hasDatastoreFileManagementPermission]=\"hasDatastoreFileManagementPermission\"\n                       [hasHostStoragePermission]=\"hasHostStoragePermission\"\n                       (onError)=\"onError($event)\"\n                       (onSuccess)=\"refresh()\">\n   </cns-volume-actions>\n   <vsan-action-separator></vsan-action-separator>\n   <vsan-cross-column-filter *ngIf=\"!isFileVolumesSupported\"\n                             (changes)=\"filterChange($event);\"\n                             [filters]=\"filters\"\n                             [toggleFilter]=\"toggleFilterSubject\">\n      <vsan-cross-column-filter-group [name]=\"'cns.volumes.container.grid.details.tab.basics' | localized\">\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_NAME\"\n                                        [label]=\"'cns.volumes.container.grid.column.name' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_LABELS\"\n                                        [label]=\"'cns.volumes.container.grid.column.label' | localized\">\n            <cns-label-filter #vsanCustomFilter></cns-label-filter>\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_DATASTORE\"\n                                        [label]=\"'cns.volumes.container.grid.column.datastore' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_STORAGE_POLICY_NAME\"\n                                        [label]=\"'cns.volumes.container.grid.column.storagePolicy' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_COMPLIANCE_STATUS\"\n                                        [label]=\"'cns.volumes.container.grid.column.compliance' | localized\">\n            <vsan-list-filter #vsanCustomFilter>\n               <vsan-list-filter-item *ngFor=\"let status of enumToArray(StorageCompliance)\"\n                                      [key]=\"status\"\n                                      [label]=\"status | complianceStatusLabel\"\n                                      [iconShape]=\"status | complianceStatusIcon\"\n                                      [iconClass]=\"Icon.CLR_SOLID_ICON_CLASS + ' ' +\n                                                   Icon.clrIconShapeClassMap[status | complianceStatusIcon]\">\n               </vsan-list-filter-item>\n            </vsan-list-filter>\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_ID\"\n                                        [label]=\"'cns.volumes.container.grid.column.id' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_HEALTH_STATUS\"\n                                        [label]=\"'cns.volumes.container.grid.column.healthStatus' | localized\">\n            <vsan-list-filter #vsanCustomFilter>\n               <vsan-list-filter-item *ngFor=\"let status of enumToArray(CnsHealthStatus)\"\n                                      [key]=\"status\"\n                                      [label]=\"status | cnsHealthStatusLabel\"\n                                      [iconShape]=\"status | cnsHealthStatusIconShape\"\n                                      [iconClass]=\"Icon.CLR_SOLID_ICON_CLASS + ' ' +\n                                              Icon.clrIconShapeClassMap[status | cnsHealthStatusIconShape]\">\n               </vsan-list-filter-item>\n            </vsan-list-filter>\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_CONTAINER_CLUSTER_ID\"\n                                        [label]=\"'cns.volumes.container.grid.column.containerCluster' | localized\">\n         </vsan-cross-column-filter-item>\n      </vsan-cross-column-filter-group>\n   </vsan-cross-column-filter>\n   <vsan-cross-column-filter *ngIf=\"isFileVolumesSupported\"\n                             (changes)=\"filterChange($event);\"\n                             [filters]=\"filters\"\n                             [toggleFilter]=\"toggleFilterSubject\">\n      <vsan-cross-column-filter-group [name]=\"'cns.volumes.container.grid.details.tab.basics' | localized\">\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_NAME\"\n                                        [label]=\"'cns.volumes.container.grid.column.name' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_LABELS\"\n                                        [label]=\"'cns.volumes.container.grid.column.label' | localized\">\n            <cns-label-filter #vsanCustomFilter></cns-label-filter>\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_DATASTORE\"\n                                        [label]=\"'cns.volumes.container.grid.column.datastore' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_STORAGE_POLICY_NAME\"\n                                        [label]=\"'cns.volumes.container.grid.column.storagePolicy' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_COMPLIANCE_STATUS\"\n                                        [label]=\"'cns.volumes.container.grid.column.compliance' | localized\">\n            <vsan-list-filter #vsanCustomFilter>\n               <vsan-list-filter-item *ngFor=\"let status of enumToArray(StorageCompliance)\"\n                                      [key]=\"status\"\n                                      [label]=\"status | complianceStatusLabel\"\n                                      [iconShape]=\"status | complianceStatusIcon\"\n                                      [iconClass]=\"Icon.CLR_SOLID_ICON_CLASS + ' ' +\n                                                   Icon.clrIconShapeClassMap[status | complianceStatusIcon]\">\n               </vsan-list-filter-item>\n            </vsan-list-filter>\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_ID\"\n                                        [label]=\"'cns.volumes.container.grid.column.id' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_HEALTH_STATUS\"\n                                        [label]=\"'cns.volumes.container.grid.column.healthStatus' | localized\">\n            <vsan-list-filter #vsanCustomFilter>\n               <vsan-list-filter-item *ngFor=\"let status of enumToArray(CnsHealthStatus)\"\n                                      [key]=\"status\"\n                                      [label]=\"status | cnsHealthStatusLabel\"\n                                      [iconShape]=\"status | cnsHealthStatusIconShape\"\n                                      [iconClass]=\"Icon.CLR_SOLID_ICON_CLASS + ' ' +\n                                              Icon.clrIconShapeClassMap[status | cnsHealthStatusIconShape]\">\n               </vsan-list-filter-item>\n            </vsan-list-filter>\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_CONTAINER_CLUSTER_ID\"\n                                        [label]=\"'cns.volumes.container.grid.column.containerCluster' | localized\">\n         </vsan-cross-column-filter-item>\n      </vsan-cross-column-filter-group>\n      <vsan-cross-column-filter-group [name]=\"'cns.volumes.container.grid.details.tab.relatedObjects' | localized\">\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_NAMESPACE\"\n                                        [label]=\"'cns.volumes.container.grid.column.namespace' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_PV_NAME\"\n                                        [label]=\"'cns.volumes.container.grid.column.pvName' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_PVC_NAME\"\n                                        [label]=\"'cns.volumes.container.grid.column.pvcName' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_POD_NAME\"\n                                        [label]=\"'cns.volumes.container.grid.column.podName' | localized\">\n         </vsan-cross-column-filter-item>\n      </vsan-cross-column-filter-group>\n   </vsan-cross-column-filter>\n</div>\n\n<vsan-slide-panel [(activePane)]=\"activePane\" [detailsPaneSize]=\"75\">\n   <div leftPane class=\"master-view\">\n      <clr-datagrid #dataGrid\n                    (clrDgRefresh)=\"datagridRefresh($event)\"\n                    [clrDgLoading]=\"loading\"\n                    [(clrDgSelected)]=\"selectedVolumes\"\n                    [ngClass]=\"{'details-expanded': !isLeftVisible}\">\n         <clr-dg-column class=\"info-column\"></clr-dg-column>\n         <clr-dg-column class=\"name-column\">\n            <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n               {{\"cns.volumes.container.grid.column.name\" | localized}}\n            </ng-container>\n         </clr-dg-column>\n         <clr-dg-column class=\"name-column\">\n            <ng-container *clrDgHideableColumn=\"{hidden: true}\">\n               {{\"cns.volumes.container.grid.column.type\" | localized}}\n            </ng-container>\n         </clr-dg-column>\n         <clr-dg-column id=\"labelColumn\" class=\"name-column\">\n            <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n               {{\"cns.volumes.container.grid.column.label\" | localized}}\n            </ng-container>\n         </clr-dg-column>\n         <clr-dg-column *ngIf=\"!isDatastoreContext\" class=\"name-column\">\n            <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n               {{\"cns.volumes.container.grid.column.datastore\" | localized}}\n            </ng-container>\n         </clr-dg-column>\n         <clr-dg-column *ngIf=\"hasReadPolicyPermission\" class=\"name-column\">\n            <ng-container *clrDgHideableColumn=\"{hidden: true}\">\n               {{\"cns.volumes.container.grid.column.storagePolicy\" | localized}}\n            </ng-container>\n         </clr-dg-column>\n         <clr-dg-column>\n            <ng-container *clrDgHideableColumn=\"{hidden: false}\" class=\"name-column\">\n               {{\"cns.volumes.container.grid.column.compliance\" | localized}}\n            </ng-container>\n         </clr-dg-column>\n         <clr-dg-column>\n            <ng-container *clrDgHideableColumn=\"{hidden: true}\" class=\"name-column\">\n               {{\"cns.volumes.container.grid.column.id\" | localized}}\n            </ng-container>\n         </clr-dg-column>\n         <clr-dg-column>\n            <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n               {{\"cns.volumes.container.grid.column.healthStatus\" | localized}}\n            </ng-container>\n         </clr-dg-column>\n         <clr-dg-column>\n            <ng-container *clrDgHideableColumn=\"{hidden: true}\">\n               {{\"cns.volumes.container.grid.column.containerCluster\" | localized}}\n            </ng-container>\n         </clr-dg-column>\n         <clr-dg-column>\n            <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n               {{\"cns.volumes.container.grid.column.capacity\" | localized}}\n            </ng-container>\n         </clr-dg-column>\n\n         <clr-dg-placeholder>{{\"cns.volumes.container.grid.no.results\" | localized}}</clr-dg-placeholder>\n\n         <clr-dg-row class=\"signpost-row-height-fix\"\n                     *ngFor=\"let volume of volumes\" [clrDgItem]=\"volume\">\n            <clr-dg-cell class=\"pointer info-column\" (click)=\"toggle(volume)\">\n               <clr-icon [attr.shape]=\"Icon.DETAIL_VIEW\"\n                         [attr.title]=\"'vsan.common.details' | localized\"\n                         [ngClass]=\"{'is-solid': isSelected(volume)}\"\n                         size=\"20\">\n               </clr-icon>\n            </clr-dg-cell>\n            <clr-dg-cell>\n               <vsan-icon-item [label]=\"volume.name\"\n                               [shape]=\"volume.iconId\">\n               </vsan-icon-item>\n            </clr-dg-cell>\n            <clr-dg-cell class=\"column-type\">{{volume.type | cnsVolumeTypeLabel}}</clr-dg-cell>\n            <clr-dg-cell>\n               <label-cell [entityLabels]=\"volume?.labels\"\n                           [showSeeAllButton]=\"true\"\n                           [isClickable]=\"true\">\n               </label-cell>\n            </clr-dg-cell>\n            <clr-dg-cell *ngIf=\"!isDatastoreContext\">\n               <cns-datastore-cell [datastoreData]=\"volume?.datastoreData\"></cns-datastore-cell>\n            </clr-dg-cell>\n            <clr-dg-cell *ngIf=\"hasReadPolicyPermission\" vsan-show-title>\n               <storage-policy-cell [storagePolicyName]=\"storagePolicyNameFromId(volume.storagePolicyId)\"\n                                    [storagePolicyId]=\"volume.storagePolicyId\"></storage-policy-cell>\n            </clr-dg-cell>\n            <clr-dg-cell class=\"column-compliance\" vsan-show-title>\n               <cns-compliance-status-cell [volume]=\"volume\"></cns-compliance-status-cell>\n            </clr-dg-cell>\n            <clr-dg-cell vsan-show-title>{{volume.id}}</clr-dg-cell>\n            <clr-dg-cell vsan-show-title>\n               <cns-health-status-cell [volume]=\"volume\"></cns-health-status-cell>\n            </clr-dg-cell>\n            <clr-dg-cell>\n               <vsan-popup-list [signpostPosition]=\"'bottom-left'\">\n                  <ng-template vsan-popup-list-item *ngFor=\"let cluster of getVolumeClusters(volume)\">\n                     <cns-cluster-cell [cluster]=\"cluster\"\n                                       [volumeName]=\"volume?.name\">\n                     </cns-cluster-cell>\n                  </ng-template>\n               </vsan-popup-list>\n            </clr-dg-cell>\n            <clr-dg-cell>{{volume.capacity | fileSize}}</clr-dg-cell>\n         </clr-dg-row>\n         <clr-dg-footer>\n            <clr-dg-pagination #pagination\n                               [clrDgTotalItems]=\"total\"\n                               [hidden]=\"!total\"\n                               [clrDgPageSize]=\"DEFAULT_ITEMS_PER_PAGE\">\n               <div vsan-show-title>{{getPaginationLabel(pagination)}}</div>\n            </clr-dg-pagination>\n         </clr-dg-footer>\n      </clr-datagrid>\n   </div>\n   <span detailsTitle>\n      <ng-container *ngIf=\"selectedItem\">\n         <clr-icon [attr.shape]=\"selectedItem?.iconId\"></clr-icon>\n         <span id=\"details-title\">{{selectedItem?.name}}</span>\n      </ng-container>\n   </span>\n   <cns-volumes-view-details rightPane\n                             [volumeItem]=\"selectedItem\"\n                             [storagePolicyName]=\"storagePolicyNameFromId(selectedItem?.storagePolicyId)\"\n                             [resetPageData]=\"volumeDetailsResetData\"\n                             (onError)=\"onError($event)\">\n   </cns-volumes-view-details>\n</vsan-slide-panel>\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {IllustratedMessageComponent} from \"@component/illustrated-message/illustrated-message.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n   ],\n   declarations: [\n      IllustratedMessageComponent,\n   ],\n   exports: [\n      IllustratedMessageComponent,\n   ],\n})\nexport class IllustratedMessageModule {}","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {ClusterFlavor} from \"@generated/cluster-flavor\";\nimport {VolumeContainerCluster} from \"@generated/volume-container-cluster\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {ManagedObject} from \"@service/managed-object\";\n\n@Component({\n   templateUrl: \"cns-cluster-cell.html\",\n   styleUrls: [\"cns-cluster-cell.scss\"],\n   selector: \"cns-cluster-cell\",\n})\n\n/**\n * The component is used to represent volume's clusters. For a vanilla flavor only name is shown. For a WCP/Guest\n * flavor icon and name with link is shown if present, if not only name is shown.\n * If the component is used in details a badge is shown.\n * The component is used in the grid and grid details.\n */\nexport class CnsClusterCell {\n\n   @Input()\n   cluster: VolumeContainerCluster;\n\n   @Input()\n   volumeName: string;\n\n   @Input()\n   showBadge: boolean;\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   get isVanillaCluster(): boolean {\n      return this.isClusterFlavor(ClusterFlavor.VANILLA);\n   }\n\n   get isWCPCluster(): boolean {\n      return this.isClusterFlavor(ClusterFlavor.WORKLOAD);\n   }\n\n   get isGuestCluster(): boolean {\n      return this.isClusterFlavor(ClusterFlavor.GUEST);\n   }\n\n   private isClusterFlavor(clusterFlavor: ClusterFlavor): boolean {\n      return this.cluster && this.cluster.flavor && this.cluster.flavor === clusterFlavor;\n   }\n\n   navigateToSupervisorCluster(clusterRef: ManagedObject): void {\n      this.navigationService.navigateTo(PlatformExtension.CLUSTER_CNS_VOLUMES, clusterRef);\n   }\n\n   navigateToGuestCluster(resPoolRef: ManagedObject): void {\n      this.navigationService.navigateTo(PlatformExtension.LAST_VISITED_PAGE, resPoolRef);\n   }\n}","/* Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {CnsHealthStatus} from \"@generated/cns-health-status\";\n\n/**\n * This pipe returns the correct label for volume health statuses.\n */\n@Pipe({\n   name: \"cnsHealthStatusLabel\",\n})\nexport class HealthStatusLabelPipe implements PipeTransform {\n   transform(status: CnsHealthStatus): string {\n      if (!status) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n      switch (status) {\n         case CnsHealthStatus.green:\n            return VsanUiUtils.getString(\"cns.volumes.container.health.status.green\");\n         case CnsHealthStatus.red:\n            return VsanUiUtils.getString(\"cns.volumes.container.health.status.red\");\n         case CnsHealthStatus.yellow:\n            return VsanUiUtils.getString(\"cns.volumes.container.health.status.yellow\");\n         case CnsHealthStatus.unknown:\n            return VsanUiUtils.getString(\"cns.volumes.container.health.status.unknown\");\n      }\n   }\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {Icon} from \"@util/icon\";\nimport {Volume} from \"@generated/volume\";\nimport {CnsHealthStatus} from \"@generated/cns-health-status\";\nimport {CnsVolumeType} from \"@generated/cns-volume-type\";\nimport {VolumesUtil} from \"@util/volumes-util\";\n\n@Component({\n   templateUrl: \"cns-health-status-cell.html\",\n   styleUrls: [\"cns-health-status-cell.scss\"],\n   selector: \"cns-health-status-cell\",\n})\n\n/**\n * The component is used to show the health status of a CNS volume:\n * red- unhealthy/not accessible\n * green - healthy/accessible\n * yellow - repairing/partially accessible\n * unknown\n * The component is used in the grid and grid details.\n */\nexport class CnsHealthStatusCell {\n\n   @Input()\n   volume: Volume;\n\n   Icon = Icon;\n   private static ACCESSIBILITY_DIALOG_WIDTH: number = 740;\n   private static ACCESSIBILITY_DIALOG_HEIGHT: number = 360;\n\n   /**\n    * The label for accessibility status must become a link when accessibility status is\n    * notAccessible or partiallyAccessible in the other cases when it is null or accessible, or for file volumes\n    * the label must not be a link.\n    * File volumes are located on vsan datastore and are always accessible, so volume accessibility\n    * doesn't make sense for them\n    * @param volume - cns volume.\n    */\n   isLink = (volume: Volume): boolean => {\n      if (VolumesUtil.isFileVolume(volume)) {\n         return false;\n      }\n\n      switch (volume.healthStatus) {\n         case CnsHealthStatus.red:\n         case CnsHealthStatus.yellow:\n            return true;\n         case CnsHealthStatus.green:\n         case CnsHealthStatus.unknown:\n         default:\n            return false;\n      }\n   };\n\n   openAccessibilityDialog(volume: Volume) {\n      new ModalBuilder(\"cnsVolumes/accessibility\")\n            .setDimensions([\n                  CnsHealthStatusCell.ACCESSIBILITY_DIALOG_WIDTH, CnsHealthStatusCell.ACCESSIBILITY_DIALOG_HEIGHT,\n            ])\n            .open({volume: volume});\n   }\n}","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {CnsService} from \"@generated/cns-service\";\nimport {VolumeComplianceFailure} from \"@generated/volume-compliance-failure\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   selector: \"cns-compliance-failures-dialog\",\n   templateUrl: \"compliance-failures-dialog.html\",\n})\nexport class ComplianceFailuresDialogComponent implements OnInit {\n   volumeName: string;\n   failures: VolumeComplianceFailure[] = [];\n   @LoadingIndicator()\n   busy: boolean;\n   @ErrorMessage()\n   alertMessage: string;\n\n   constructor(private cnsService: CnsService) {\n   }\n\n   @Loader()\n   async ngOnInit(): Promise<void> {\n      const modalContext: any = VsanUiUtils.getModalContext();\n      this.volumeName = modalContext.volume.name;\n      this.failures = await this.cnsService.loadComplianceFailures(ManagedObject.contextObject, modalContext.volume);\n   }\n}","<!--Copyright 2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-default-prompt\n      [title]=\"'cns.volumes.container.volume.reapplyPolicy.dialog.title' | localized\"\n      [(alertMessages)]=\"errors\"\n      [allowAlertClose]=\"false\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"loading\"\n      [confirmText]=\"'cns.volumes.container.reapply.label' | localized\"\n      (onConfirm)=\"confirm()\">\n   <div class=\"content-wrapper\">\n      <div>\n         {{description1}}\n      </div>\n      <div>\n         {{description2}}\n      </div>\n   </div>\n</vsan-default-prompt>\n","<!--Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n\n<clr-icon *ngIf=\"volume.healthStatus\"\n          aria-hidden=\"true\"\n          [attr.shape]=\"volume.healthStatus | cnsHealthStatusIconShape\"\n          [ngClass]=\"Icon.CLR_SOLID_ICON_CLASS + ' ' + Icon.clrIconShapeClassMap[volume.healthStatus | cnsHealthStatusIconShape]\">\n</clr-icon>\n<a href=\"javascript://\"\n   *ngIf=\"isLink(volume)\"\n   [title]=\"'vsan.common.dialogOpen.title' | localized :\n      ('cns.volumes.container.volume.accessibility.dialog.title' | localized)\"\n   (click)=\"openAccessibilityDialog(volume)\">\n   {{volume.healthStatus | cnsHealthStatusLabel}}\n</a>\n<ng-container *ngIf=\"!isLink(volume)\">\n   {{volume.healthStatus | cnsHealthStatusLabel}}\n</ng-container>\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VolumeContainerCluster} from \"@generated/volume-container-cluster\";\nimport {ClusterFlavor} from \"@generated/cluster-flavor\";\nimport {BasicVmData} from \"@generated/basic-vm-data\";\nimport {WcpPvcsContext} from \"@navigation/context/wcp-pvcs-context\";\n\n@Component({\n   templateUrl: \"volumes-view-details-cluster.html\",\n   styleUrls: [\"volumes-view-details-cluster.scss\"],\n   selector: \"cns-volumes-view-details-cluster\",\n})\n\n/**\n * The component is used to show cluster details of a CNS volume(e.g., metadata for persistent volumes,\n * persistent volume claims and pods)\n */\n\nexport class VolumesViewDetailsCluster {\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   @Input()\n   cluster: VolumeContainerCluster;\n\n   @Input()\n   volumeName: string;\n\n   @Input()\n   vmData: BasicVmData[];\n\n   @Input()\n   vmDataLoading: boolean;\n\n   isWCPCluster(): boolean {\n      return (this.cluster.flavor === ClusterFlavor.WORKLOAD);\n   }\n\n   isGuestCluster(): boolean {\n      return (this.cluster.flavor === ClusterFlavor.GUEST);\n   }\n\n   navigateToWCPNamespace(namespace: string) {\n      this.navigationService.navigateTo(PlatformExtension.LAST_VISITED_PAGE, this.getWCPObjectId(namespace));\n   }\n\n   navigateToWCPPvc(namespace: string, pvcName: string) {\n      const context: WcpPvcsContext = {\n         pvcName: pvcName,\n      };\n      this.navigationService.navigateTo(\n            PlatformExtension.NAMESPACE_STORAGE_PVCS, this.getWCPObjectId(namespace), context);\n   }\n\n   private getWCPObjectId(namespace: string): string {\n      return `urn:vapi:com.vmware.wcp.WorkloadModel:${namespace}:${ManagedObject.contextObject.serverGuid}`;\n   }\n}","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild} from \"@angular/core\";\nimport {ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface} from \"@clr/angular\";\nimport {LabelCellService} from \"@component/cell/label-cell.service\";\nimport {FilterItem} from \"@component/cross-column-filter/filter-item\";\nimport {PaneType} from \"@component/master-detail/slide-panel.component\";\nimport {CnsHealthStatus} from \"@generated/cns-health-status\";\nimport {CnsService} from \"@generated/cns-service\";\nimport {PbmDataProvider} from \"@generated/pbm-data-provider\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {StorageCompliance} from \"@generated/storage-compliance\";\nimport {Volume} from \"@generated/volume\";\nimport {VolumeContainerCluster} from \"@generated/volume-container-cluster\";\nimport {VolumeFilterSpec} from \"@generated/volume-filter-spec\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {VolumesContext} from \"@navigation/context/volumes-context\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject, ManagedObjectUtils} from \"@service/managed-object\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\nimport {Icon} from \"@util/icon\";\nimport {Logger} from \"@util/logger\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {Subject, Subscription} from \"rxjs\";\n\n@Component({\n   templateUrl: \"volumes.html\",\n   styleUrls: [\"volumes.scss\"],\n   selector: \"cns-volumes\",\n   providers: [LabelCellService],\n})\nexport class CnsVolumesComponent implements OnInit, OnDestroy {\n   readonly CnsVolumeField: typeof CnsVolumeField = CnsVolumeField;\n   readonly DEFAULT_ITEMS_PER_PAGE: number = 20;\n   private static readonly DEFAULT_START_INDEX: number = 0;\n   private static readonly NO_STORAGE_POLICY_VALUE: string = \"\";\n   private static readonly FIRST_PAGE_CLASS: string = \".pagination-first\";\n\n   Icon: typeof Icon = Icon;\n   StorageCompliance: typeof StorageCompliance = StorageCompliance;\n   CnsHealthStatus: typeof CnsHealthStatus = CnsHealthStatus;\n   enumToArray: (data: any) => any[] = VsanUiUtils.enumToArray;\n   VsanUiUtils: typeof VsanUiUtils = VsanUiUtils;\n   // Pagination & items data\n   volumes: Volume[];\n   total: number;\n   loading: boolean = true;\n   errorMessages: string[] = [];\n   // Filters\n   filters: FilterItem[];\n\n   hasReadPolicyPermission: boolean = false;\n   hasUpdatePolicyPermission: boolean = false;\n   hasDatastoreFileManagementPermission: boolean = false;\n   hasHostStoragePermission: boolean = false;\n   isDatastoreContext: boolean;\n   storagePolicies: any;\n   selectedVolumes: Volume[] = [];\n   isFileVolumesSupported: boolean = false;\n   isVolumeRelocationSupported: boolean = false;\n   isCnsReconfigPolicySupported: boolean = false;\n   volumeDetailsResetData: any = {};\n\n   // Others\n   toggleFilterSubject: Subject<FilterItem> = new Subject<FilterItem>();\n   refreshSubject: Subject<ClrDatagridStateInterface> = new Subject<ClrDatagridStateInterface>();\n   private refreshSubscription: Subscription;\n   private labelClickSubscription: Subscription;\n   private state: ClrDatagridStateInterface = {};\n   private gridFirstRefresh: boolean = true;\n\n   @ViewChild(\"dataGrid\", {static: true})\n   dataGrid: ClrDatagrid;\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   constructor(private cnsService: CnsService,\n         private pbmProvider: PbmDataProvider,\n         private permissionService: PermissionService,\n         private changeDetector: ChangeDetectorRef,\n         private capabilityProvider: VsanCapabilityProvider,\n         private labelCellService: LabelCellService,\n   ) {\n   }\n\n   ngOnInit(): void {\n      this.preselectFilter();\n      this.refreshSubscription = this.refreshSubject\n            .subscribe(async (state: ClrDatagridStateInterface) => {\n               this.loading = true;\n               this.errorMessages = [];\n               await this.dispatchFilterRequestPromise(state);\n               this.ensureGridSelectionCheckboxes();\n               this.loading = false;\n            });\n      this.labelClickSubscription = this.labelCellService.onLabelClicked.subscribe((label) => {\n         this.toggleFilterSubject.next(new FilterItem(CnsVolumeField.COLUMN_LABELS, [label]));\n      });\n      this.isDatastoreContext = ManagedObjectUtils.isDatastore(ManagedObject.contextObjectUid);\n   }\n\n   // Handle navigation from Virtual Objects and WCP by preselecting the passed filter.\n   // The filter key comprises of the \"volume\" prefix attached to the grid field (i.e., CnsVolumeField enum)\n   // in Pascal case (e.g., volume + PvName = volumePvName).\n   private preselectFilter(): void {\n      const context: VolumesContext = VsanUiUtils.getNavigationData();\n      if (!context) {\n         return;\n      }\n      const filters: FilterItem[] = [];\n      Object.values(CnsVolumeField).forEach((gridFieldName: string) => {\n         const contextFieldValue: any = context[this.buildVolumeKey(gridFieldName)];\n         if (contextFieldValue) {\n            filters.push(new FilterItem(gridFieldName, contextFieldValue));\n         }\n      });\n      if (!VsanUiUtils.isEmpty(filters)) {\n         this.filters = filters;\n      }\n   }\n\n   private buildVolumeKey(gridFieldName: string): string {\n      const volumeContextFieldPrefix: string = \"volume\";\n      return volumeContextFieldPrefix + gridFieldName.charAt(0).toUpperCase() + gridFieldName.slice(1);\n   }\n\n   ngOnDestroy(): void {\n      this.refreshSubscription.unsubscribe();\n      this.labelClickSubscription.unsubscribe();\n   }\n\n   filterChange(filters: FilterItem[]): void {\n      this.filters = filters;\n      // If total is changed to a smaller value when the current page is > 1, the clrDgRefresh event is fired which\n      // leads to an additional request.\n      // The following code solves that and ensures the current page is 1 when applying filter.\n      if (this.state && this.state.page && this.state.page.from &&\n            this.state.page.from > CnsVolumesComponent.DEFAULT_START_INDEX) {\n         $(CnsVolumesComponent.FIRST_PAGE_CLASS).click();\n      } else {\n         this.refreshSubject.next(this.state);\n      }\n   }\n\n   @RefreshHandler\n   refresh(): void {\n      this.loading = true;\n      this.errorMessages = [];\n      // Fetch storage policies on initial page load and refresh button click only.\n      const storagePoliciesPromises: Promise<any>[] = this.loadStoragePolicies();\n      const capabilityPromises: Promise<boolean | void>[] = this.loadCapabilities();\n      const volumesPromise: Promise<void> = this.dispatchFilterRequestPromise(this.state);\n      Promise.all([...storagePoliciesPromises, volumesPromise, ...capabilityPromises]).then(() => {\n         this.loading = false;\n         this.ensureGridSelectionCheckboxes();\n         // Make sure the labels are correctly expanded, because for some reason they are not validated\n         // after the label column is resized on init, which causes the labels to be not correctly expanded.\n         setTimeout(() => this.changeDetector.detectChanges());\n         this.srOnlyMessage = VsanUiUtils.getString(\"vsan.screenReader.message.page.loaded\",\n               VsanUiUtils.getString(\"cns.monitor.volumes\"));\n      });\n   }\n\n   private ensureGridSelectionCheckboxes(): void {\n      // Remove datagrid selection checkboxes when the user has no permissions\n      if (!this.hasReadUpdatePolicyPermission() &&\n            !this.hasHostStoragePermission &&\n            !this.hasDatastoreFileManagementPermission) {\n         // this.selectedVolumes = null; - this takes effect as well\n         this.dataGrid.selection.selectionType = this.dataGrid.SELECTION_TYPE.None;\n      }\n   }\n\n   hasReadUpdatePolicyPermission(): boolean {\n      return this.hasReadPolicyPermission && this.hasUpdatePolicyPermission;\n   }\n\n   private loadStoragePolicies(): Promise<any>[] {\n      const promises: Promise<any>[] = [];\n      promises.push(this.permissionService.hasVcPermissions(ManagedObject.contextObject, [Privileges.READ_POLICIES()])\n            .then(hasReadPolicyPermission => this.hasReadPolicyPermission = hasReadPolicyPermission)\n            .catch(e => this.onError(e)));\n      promises.push(this.permissionService.hasVcPermissions(ManagedObject.contextObject, [Privileges.UPDATE_POLICIES()])\n            .then(hasUpdatePolicyPermission => this.hasUpdatePolicyPermission = hasUpdatePolicyPermission)\n            .catch(e => this.onError(e)));\n      promises.push(this.permissionService.queryPermissions(ManagedObject.contextObject,\n            [Privileges.CONFIG_STORAGE(), Privileges.DATASTORE_FILE_MANAGEMENT()])\n            .then(result => {\n               this.hasHostStoragePermission = result[Privileges.CONFIG_STORAGE()];\n               this.hasDatastoreFileManagementPermission = result[Privileges.DATASTORE_FILE_MANAGEMENT()];\n            })\n            .catch(e => this.onError(e)));\n      promises.push(this.pbmProvider.getStoragePolicyIdNameMap(ManagedObject.contextObject)\n            .then(storagePolicies => this.storagePolicies = storagePolicies)\n            .catch(e => this.onError(e)));\n      return promises;\n   }\n\n   private loadCapabilities(): Promise<boolean | void>[] {\n      const promises: Promise<any>[] = [];\n      // TODO: (tnojarova) confirm whether host capability should be checked as well\n      promises.push(this.capabilityProvider.getIsVolumeRelocationSupportedOnVc(ManagedObject.contextObject)\n            .then(isVolumeRelocationSupported => {\n               this.isVolumeRelocationSupported = isVolumeRelocationSupported;\n            })\n            .catch(e => Logger.error(e)));\n      // TODO: (vasilevd) Move the check to host level\n      promises.push(this.capabilityProvider.getIsCnsReconfigPolicySupportedOnVc(ManagedObject.contextObject)\n            .then(isCnsReconfigPolicySupported => {\n               this.isCnsReconfigPolicySupported = isCnsReconfigPolicySupported;\n            })\n            .catch(e => Logger.error(e)));\n      promises.push(this.capabilityProvider.getIsFileVolumesSupportedOnVc(ManagedObject.contextObject)\n            .then(isFileVolumesSupported => {\n               this.isFileVolumesSupported = isFileVolumesSupported;\n               this.changeDetector.detectChanges();\n            })\n            .catch(e => {\n               this.isFileVolumesSupported = false;\n               Logger.error(e);\n            }));\n\n      return promises;\n   }\n\n   datagridRefresh(state: ClrDatagridStateInterface): void {\n      // Remember the last state to use it again when the global refresh button is clicked\n      this.state = state;\n      // clrDgRefresh event is fired on initial load and each filtering/paging operation.\n      // It's not needed to fetch data on initial grid load because this is done when global refresh handler is attached\n      if (this.gridFirstRefresh) {\n         this.gridFirstRefresh = false;\n         this.refresh();\n      } else {\n         this.loading = true;\n         this.refreshSubject.next(state);\n      }\n   }\n\n   dispatchFilterRequestPromise = (state: ClrDatagridStateInterface): Promise<void> => {\n      this.selectedVolumes = [];\n      this.volumeDetailsResetData = {};\n      const requestFilters: VolumeFilterSpec = this.createRequestFilters(state);\n      if (requestFilters) {\n         return this.loadVolumes(requestFilters);\n      } else {\n         this.volumes = [];\n         this.total = 0;\n         return null;\n      }\n   };\n\n   private loadVolumes(requestFilters: VolumeFilterSpec): Promise<void> {\n      return this.cnsService.getVolumes(ManagedObject.contextObject, requestFilters).then(volumesResult => {\n         this.volumes = volumesResult.volumes;\n         this.total = volumesResult.total;\n      }).catch(e => this.onError(e));\n   }\n\n   onError(e: string): void {\n      Logger.error(e);\n      this.loading = false;\n      this.errorMessages.push(e);\n   }\n\n   private createRequestFilters(state: ClrDatagridStateInterface): VolumeFilterSpec {\n      let fetchVolumes: boolean = true;\n      const requestFilters: VolumeFilterSpec = {} as VolumeFilterSpec;\n\n      if (this.filters) {\n         for (const filter of this.filters) {\n            if (filter.field === CnsVolumeField.COLUMN_STORAGE_POLICY_NAME) {\n               if (filter.value === VsanUiUtils.getString(\"vsan.na.label\")) {\n                  requestFilters[filter.field] = CnsVolumesComponent.NO_STORAGE_POLICY_VALUE;\n               } else {\n                  const storagePolicyIdsFilter: string[] = Object.keys(this.storagePolicies).filter(\n                        policyId => this.storagePolicies[policyId].toLowerCase()\n                              .indexOf(filter.value.toString().toLowerCase()) > -1);\n                  // Backend filtration works for a single policy ID.\n                  // If no policy ID is found or there are multiple policy IDs update filter labels\n                  // and do not return any result.\n                  // TODO: change that behavior once backend starts to support filtration by multiple policy IDs\n                  if (!VsanUiUtils.isEmpty(storagePolicyIdsFilter) && storagePolicyIdsFilter.length === 1) {\n                     requestFilters[filter.field] = storagePolicyIdsFilter[0];\n                  } else {\n                     fetchVolumes = false;\n                  }\n               }\n            } else {\n               requestFilters[filter.field] = filter.value;\n            }\n         }\n         if (!fetchVolumes) {\n            return null;\n         }\n      }\n      if (state.page) {\n         requestFilters.offset = state.page.from;\n         requestFilters.limit = state.page.size;\n      } else {\n         requestFilters.offset = CnsVolumesComponent.DEFAULT_START_INDEX;\n         requestFilters.limit = this.DEFAULT_ITEMS_PER_PAGE;\n      }\n      return requestFilters;\n   }\n\n   storagePolicyNameFromId(policyId: string): string {\n      if (policyId) {\n         // If a volume has a policy that has been deleted return the policy ID as a name.\n         return (this.storagePolicies && this.storagePolicies[policyId])\n               ? this.storagePolicies[policyId]\n               : policyId;\n      } else {\n         return null;\n      }\n   }\n\n   /**\n    * Returns all volume clusters including TKCs.\n    * @param volume\n    */\n   getVolumeClusters(volume: Volume): VolumeContainerCluster[] {\n      if (!volume || VsanUiUtils.isEmpty(volume.containerClusters)) {\n         return [];\n      }\n      return [].concat(volume.guestClusters, volume.containerClusters);\n   }\n\n   openWhatIsThisDialog(): void {\n      new ModalBuilder(\"cnsVolumes/whatIsThis\")\n            .setDimensions(ModalBuilder.WIZARD_XL)\n            .open();\n   }\n\n   // SlidePanelComponent specifics:\n   isLeftVisible: boolean = true;\n   selectedItem: Volume;\n\n   get activePane(): PaneType {\n      return this.isLeftVisible\n            ? PaneType.LEFT\n            : PaneType.RIGHT;\n   }\n\n   set activePane(pane: PaneType) {\n      this.isLeftVisible = pane === PaneType.LEFT;\n   }\n\n   selectTarget(item: Volume): void {\n      this.selectedItem = item;\n   }\n\n   isSelected(item: Volume): boolean {\n      return this.selectedItem === item && !this.isLeftVisible;\n   }\n\n   toggle(item: any): void {\n      if (this.selectedItem === item) {\n         this.isLeftVisible = !this.isLeftVisible;\n      } else {\n         this.selectTarget(item);\n         if (this.isLeftVisible) {\n            this.isLeftVisible = !this.isLeftVisible;\n         }\n      }\n   }\n\n   getPaginationLabel(pagination: ClrDatagridPagination): string {\n      return VsanUiUtils.getDatagridPaginatedFooterLabel(pagination.totalItems, pagination.firstItem,\n            pagination.lastItem, this.DEFAULT_ITEMS_PER_PAGE,\n            \"cns.volumes.container.grid.volume\",\n            \"cns.volumes.container.grid.volumes\",\n            \"cns.volumes.container.grid.page\");\n   }\n}\n\nexport enum CnsVolumeField {\n   COLUMN_ID = \"id\",\n   COLUMN_NAME = \"name\",\n   COLUMN_LABELS = \"labels\",\n   COLUMN_DATASTORE = \"datastore\",\n   COLUMN_CONTAINER_CLUSTER_ID = \"containerCluster\",\n   COLUMN_STORAGE_POLICY_NAME = \"storagePolicy\",\n   COLUMN_HEALTH_STATUS = \"healthStatus\",\n   COLUMN_COMPLIANCE_STATUS = \"complianceStatus\",\n   COLUMN_NAMESPACE = \"namespace\",\n   COLUMN_PV_NAME = \"pvName\",\n   COLUMN_PVC_NAME = \"pvcName\",\n   COLUMN_POD_NAME = \"podName\",\n}\n","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule} from \"@angular/forms\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CrossColumnFilterModule} from \"@component/cross-column-filter/cross-column-filter.module\";\nimport {FileSharePerfModule} from \"@component/file-share-perf/file-share-perf.module\";\nimport {MasterDetailModule} from \"@component/master-detail/master-detail.module\";\nimport {PlacementDetailsModule} from \"@component/placement-details/placement-details.module\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\nimport {VsanCommonModule} from \"../common/vsan-common.module\";\nimport {HealthStatusIconShapePipe} from \"./pipe/health-status-icon-shape.pipe\";\nimport {HealthStatusLabelPipe} from \"./pipe/health-status-label.pipe\";\nimport {VolumeTypeLabelPipe} from \"./pipe/volume-type-label.pipe\";\nimport {DeleteVolumeComponent} from \"./volumes/action/delete-volume/delete-volume.component\";\nimport {MigrateVolumeComponent} from \"./volumes/action/migrate-volume/migrate-volume.component\";\nimport {MigrateVolumeService} from \"./volumes/action/migrate-volume/migrate-volume.service\";\nimport {ReapplyPolicyVolumeComponent} from \"./volumes/action/reapply-policy-volume/reapply-policy-volume.component\";\nimport {VolumeActionAvailabilityService} from \"./volumes/action/volume-action-availability.service\";\nimport {CnsVolumeActionsComponent} from \"./volumes/action/volume-actions.component\";\nimport {CnsClusterCell} from \"./volumes/cell/cns-cluster-cell.component\";\nimport {CnsComplianceStatusCell} from \"./volumes/cell/cns-compliance-status-cell.component\";\nimport {CnsDatastoreCell} from \"./volumes/cell/cns-datastore-cell.component\";\nimport {CnsHealthStatusCell} from \"./volumes/cell/cns-health-status-cell.component\";\nimport {CnsVmCell} from \"./volumes/cell/cns-vm-cell.component\";\nimport {VolumesViewDetailsBasics} from \"./volumes/details/volumes-view-details-basics.component\";\nimport {VolumesViewDetailsCluster} from \"./volumes/details/volumes-view-details-cluster.component\";\nimport {VolumesViewDetailsPodRowComponent} from \"./volumes/details/volumes-view-details-pod-row.component\";\nimport {VolumesViewDetailsRow} from \"./volumes/details/volumes-view-details-row.component\";\nimport {VolumesViewDetails} from \"./volumes/details/volumes-view-details.component\";\nimport {ComplianceFailuresDialogComponent} from \"./volumes/dialog/compliance-failures-dialog.component\";\nimport {VolumeAccessibilityDialogComponent} from \"./volumes/dialog/volume-accessibility-dialog.component\";\nimport {LabelFilterComponent} from \"./volumes/filter/label-filter.component\";\nimport {VolumesVmService} from \"./volumes/volumes-vm-service\";\nimport {CnsVolumesComponent} from \"./volumes/volumes.component\";\nimport {WhatIsThisDialogComponent} from \"./volumes/what-is-this-dialog/what-is-this-dialog.component\";\n\nconst routes: Routes = [\n   {\n      path: \"\",\n      component: CnsVolumesComponent,\n   },\n   {\n      path: \"whatIsThis\",\n      component: WhatIsThisDialogComponent,\n   },\n   {\n      path: \"accessibility\",\n      component: VolumeAccessibilityDialogComponent,\n   },\n   {\n      path: \"complianceFailures\",\n      component: ComplianceFailuresDialogComponent,\n   },\n   {\n      path: \"deleteVolume\",\n      component: DeleteVolumeComponent,\n   },\n   {\n      path: \"migrateVolume\",\n      component: MigrateVolumeComponent,\n   },\n   {\n      path: \"reapplyPolicyVolume\",\n      component: ReapplyPolicyVolumeComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      VsanCommonModule,\n      MasterDetailModule,\n      CrossColumnFilterModule,\n      PlacementDetailsModule,\n      FileSharePerfModule,\n      RouterModule.forChild(routes),\n      UnavailableViewModule,\n   ],\n   declarations: [\n      CnsVolumesComponent,\n      VolumesViewDetails,\n      VolumesViewDetailsCluster,\n      VolumesViewDetailsBasics,\n      VolumesViewDetailsPodRowComponent,\n      VolumesViewDetailsRow,\n      LabelFilterComponent,\n      HealthStatusIconShapePipe,\n      HealthStatusLabelPipe,\n      VolumeTypeLabelPipe,\n      CnsHealthStatusCell,\n      CnsComplianceStatusCell,\n      CnsDatastoreCell,\n      CnsVmCell,\n      CnsClusterCell,\n      WhatIsThisDialogComponent,\n      ComplianceFailuresDialogComponent,\n      VolumeAccessibilityDialogComponent,\n      DeleteVolumeComponent,\n      MigrateVolumeComponent,\n      ReapplyPolicyVolumeComponent,\n      CnsVolumeActionsComponent,\n   ],\n   providers: [VolumesVmService, MigrateVolumeService, VolumeActionAvailabilityService],\n})\nexport class CnsVolumesModule {\n}\n","/* Copyright 2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {CnsService} from \"@generated/cns-service\";\nimport {Volume} from \"@generated/volume\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VolumeActionAvailabilityService} from \"../volume-action-availability.service\";\nimport {ReapplyPolicyVolumeModalContextData} from \"./reapply-policy-volume-modal-context.data\";\n\n@Component({\n   templateUrl: \"reapply-policy-volume.html\",\n   selector: \"vsan-reapply-policy-volume\",\n   styleUrls: [\"reapply-policy-volume.scss\"],\n})\nexport class ReapplyPolicyVolumeComponent implements OnInit {\n   volumes: Volume[] = [];\n   eligibleVolumes: Volume[] = [];\n   isCnsReconfigPolicySupported: boolean;\n   description1: string = \"\";\n   description2: string = \"\";\n   errors: string[];\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   constructor(private cnsService: CnsService,\n         private volumeActionAvailabilityService: VolumeActionAvailabilityService) {\n   }\n\n   ngOnInit(): void {\n      const context: ReapplyPolicyVolumeModalContextData = VsanUiUtils.getModalContext();\n      this.volumes = context.volumes;\n      this.isCnsReconfigPolicySupported = context.isCnsReconfigPolicySupported;\n      this.eligibleVolumes = this.volumeActionAvailabilityService.getReapplyPolicyEligibleVolumes(\n            this.isCnsReconfigPolicySupported, this.volumes);\n      this.setReapplyStorageDescriptions();\n   }\n\n   private setReapplyStorageDescriptions(): void {\n      const key: string = this.isCnsReconfigPolicySupported\n            ? \"cns.volumes.container.volume.reapplyPolicy.dialog.text1.new\"\n            : \"cns.volumes.container.volume.reapplyPolicy.dialog.text1\";\n      this.description1 = VsanUiUtils.getString(key);\n      this.description2 = VsanUiUtils.getString(\"cns.volumes.container.volume.reapplyPolicy.dialog.text2\",\n            this.eligibleVolumes.length, this.volumes.length);\n   }\n\n   @Loader()\n   async confirm(): Promise<void> {\n      this.errors = null;\n      const result: ManagedObject[] = await this.cnsService.reapplyStoragePolicy(\n            ManagedObject.contextObject, this.eligibleVolumes, this.isCnsReconfigPolicySupported);\n      VsanUiUtils.closeModalDialog(result);\n   }\n\n   @ErrorHandler()\n   private onError(): void {\n      this.errors = [VsanUiUtils.getString(\"cns.volumes.container.reapply.error\")];\n   }\n}","/* Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {GlobalRefreshService} from \"@service/global-refresh.service\";\nimport {IdGenerator} from \"@util/id-generator\";\nimport {PromiseBaton} from \"@util/promise/promise-baton\";\n\n/**\n * This decorator solve the race condition problem.\n * - Problem - Call single async method multiple times and we can't be sure which result will come last.\n * - Solution - It will resolve/reject only the last promise. On global refresh we cancel the ongoing promise.\n */\nexport function RaceConditionSafe(): MethodDecorator {\n   return function (targetClass: any, functionName: string, descriptor: PropertyDescriptor): void {\n      // Prototype level\n      const id: string = IdGenerator.getUniqueId();\n      const func: (...args: any[]) => Promise<any> = descriptor.value;\n      const promiseBaton: PromiseBaton<any> = new PromiseBaton();\n\n      // Instance level\n      descriptor.value = function (...args: any[]): Promise<any> {\n         addEventListeners(id, promiseBaton);\n         return promiseBaton.resolveOnly.call(promiseBaton, func.apply(this, args));\n      };\n   };\n\n   function addEventListeners(id: string, promiseBaton: PromiseBaton<any>): void {\n      GlobalRefreshService.Instance.registerRefreshHandler(id, () => promiseBaton.cancelLastOne(), null, false);\n   }\n}\n","/* Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter} from \"@angular/core\";\nimport {Subject} from \"rxjs\";\nimport {auditTime} from \"rxjs/operators\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Logger} from \"@util/logger\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {CnsService} from \"@generated/cns-service\";\nimport {LabelData} from \"@generated/label-data\";\nimport {CustomFilter} from \"@component/cross-column-filter/custom-filter\";\n\n/**\n * This class is used to search for labels in CNS view by key:value pair.\n */\n@Component({\n   templateUrl: \"label-filter.html\",\n   styleUrls: [\"label-filter.scss\"],\n   selector: \"cns-label-filter\",\n})\nexport class LabelFilterComponent implements CustomFilter {\n   private static REFRESH_WAIT_MS: number = 2000; // 2 sec between query requests.\n   loading: boolean = false;\n   alertMessage: string;\n   selectedLabels: LabelData[] = [];\n   queryFilterResults: any[];\n   labelSearchValue: string = null;\n   hasMore: boolean;\n   refresh: Subject<string> = new Subject<string>();\n   onFilterSet = new EventEmitter<LabelData[]>();\n\n   constructor(private cnsService: CnsService) {\n      // Make sure we do not do requests on each keyup.\n      this.refresh.pipe(auditTime(LabelFilterComponent.REFRESH_WAIT_MS)).subscribe(this.dispatchQueryVolumesRequest);\n\n      // TODO: Update CustomFilter with onFilterCleared method:\n      // this.filterService.onFilterCleared.subscribe(() => {\n      //    this.labelSearchValue = null;\n      //    this.clearFilterResults();\n      // });\n   }\n\n   setFilterToComponent(filterValue: Array<{key: string, value: string}>) {\n      this.selectedLabels = !VsanUiUtils.isEmpty(filterValue) ? filterValue : [];\n   }\n\n   onSearchChange(value: string) {\n      this.refresh.next(value);\n   }\n\n   isLabelSelected(label: LabelData): boolean {\n      return this.findLabelIndex(label) > -1;\n   }\n\n   private findLabelIndex(label: LabelData): number {\n      return this.selectedLabels.findIndex((item) => item.key === label.key && item.value === label.value);\n   }\n\n   selectLabel(label: LabelData) {\n      const selectedLabelIndex: number = this.findLabelIndex(label);\n      if (selectedLabelIndex === -1) {\n         this.selectedLabels.push(label);\n      } else {\n         this.selectedLabels.splice(selectedLabelIndex, 1);\n      }\n      // TODO: Change the type of the filter state\n      this.onFilterSet.emit(this.selectedLabels);\n   }\n\n   dispatchQueryVolumesRequest = async (searchString: string) => {\n      this.loading = true;\n      this.alertMessage = null;\n      const components: string[] = searchString.split(\":\", 2);\n      const key: string = components[0];\n      const value: string = components[1];\n      if (key) {\n         try {\n            const result = await this.cnsService.queryLabels(ManagedObject.contextObject, key, value);\n            this.queryFilterResults = result.labels;\n            this.hasMore = result.hasMore;\n         } catch (e) {\n            Logger.error(e);\n            this.alertMessage = e;\n            this.clearFilterResults();\n         }\n      } else {\n         this.clearFilterResults();\n      }\n      this.loading = false;\n   };\n\n   private clearFilterResults() {\n      this.queryFilterResults = [];\n      this.hasMore = false; // Reset has more, as we do not know if there are any results at all.\n   }\n}","<!--Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-prompt [title]=\"'cns.volumes.container.migrate.description' | localized\"\n             [subtitle]=\"volume.name\"\n             [(alertMessage)]=\"errorMessage\"\n             [confirmText]=\"'cns.volumes.container.migrate.label' | localized\"\n             [cancelText]=\"'vsan.common.cancel' | localized\"\n             (onConfirm)=\"confirm()\"\n             [blockContent]=\"loading\"\n             [blockButton]=\"!canMigrate\">\n   <div class=\"dialog-container\" *ngIf=\"!errorMessage && !loading\">\n      <clr-alert id=\"vsan-migrate-volume-alert-message\"\n                 *ngIf=\"warning\"\n                 [clrAlertType]=\"'warning'\"\n                 [clrAlertClosable]=\"false\">\n         <clr-alert-item>\n            <div>\n               <span id=\"vsan-migrate-volume-message-text\">{{warning}}</span>\n               <a id=\"migrate-volume-learn-more-link\"\n                  *ngIf=\"showKBLink\"\n                  [external-link]\n                  [url]=\"documentationUrl\">\n               </a>\n            </div>\n         </clr-alert-item>\n      </clr-alert>\n\n      <div class=\"clr-row\">\n         <label class=\"clr-col-3 clr-control-label\">\n            {{\"cns.volumes.container.volume.migrate.dialog.volumePolicy\" | localized}}\n         </label>\n         <div id=\"migrate-volume-storage-policy-name\" class=\"clr-col-9\">{{storagePolicyName | notEmpty}}</div>\n      </div>\n\n      <div class=\"clr-row\">\n         <label class=\"clr-col-3 clr-control-label\">\n            {{\"cns.volumes.container.volume.migrate.dialog.volumeSize\" | localized}}\n         </label>\n         <div id=\"migrate-volume-file-size\" class=\"clr-col-9\">{{migrateVolume.fileSizeInBytes | fileSize}}</div>\n      </div>\n\n      <span id=\"migrate-volume-select-datastore-description\">\n         {{\"cns.volumes.container.volume.migrate.dialog.description\" | localized}}\n      </span>\n\n      <clr-datagrid [(clrDgSingleSelected)]=\"selectedDatastore\"\n                    (clrDgSingleSelectedChange)=\"selectionChanged($event)\"\n                    id=\"migrate-volume-destination-datastores-grid\">\n         <!-- Datagrid Header -->\n         <clr-dg-column [clrDgField]=\"'name'\">\n            {{'cns.volumes.container.volume.migrate.dialog.table.column.datastoreName' | localized}}\n         </clr-dg-column>\n         <clr-dg-column>\n            {{'cns.volumes.container.volume.migrate.dialog.table.column.compatibility' | localized}}\n         </clr-dg-column>\n         <clr-dg-column>\n            {{'cns.volumes.container.volume.migrate.dialog.table.column.type' | localized}}\n         </clr-dg-column>\n         <clr-dg-column>\n            {{'cns.volumes.container.volume.migrate.dialog.table.column.freeCapacity' | localized}}\n         </clr-dg-column>\n         <clr-dg-column>\n            {{'cns.volumes.container.volume.migrate.dialog.table.column.totalCapacity' | localized}}\n         </clr-dg-column>\n         <!-- Datagrid Content -->\n         <clr-dg-row *clrDgItems=\"let datastore of migrateVolume.destinationDatastores\"\n                     [clrDgItem]=\"datastore\">\n            <clr-dg-cell vsan-show-title>{{datastore.name}}</clr-dg-cell>\n            <clr-dg-cell>\n               <vsan-icon-item [label]=\"getCompatibilityLabel(datastore.policyCompliant)\"\n                               [iconClass]=\"getCompatibilityIconClass(datastore.policyCompliant)\"\n                               [shape]=\"getCompatibilityIconShape(datastore.policyCompliant)\">\n               </vsan-icon-item>\n            </clr-dg-cell>\n            <clr-dg-cell>{{getDatastoreTypeLabel(datastore.type)}}</clr-dg-cell>\n            <clr-dg-cell class=\"right-align-cell\">\n               {{datastore.freeCapacity | fileSize}}\n            </clr-dg-cell>\n            <clr-dg-cell class=\"right-align-cell\">\n               {{datastore.totalCapacity | fileSize}}\n            </clr-dg-cell>\n         </clr-dg-row>\n         <!-- Datagrid Footer -->\n         <clr-dg-footer>\n            <clr-dg-pagination #pagination\n                               [clrDgPageSize]=\"DEFAULT_ITEMS_PER_PAGE\"\n                               [hidden]=\"!migrateVolume.destinationDatastores?.length\"\n                               [clrDgTotalItems]=\"migrateVolume.destinationDatastores?.length\">\n               {{getPaginationLabel(pagination)}}\n            </clr-dg-pagination>\n         </clr-dg-footer>\n      </clr-datagrid>\n   </div>\n</vsan-prompt>\n","/* Copyright (c) 2020-2021 VMware, Inc. All rights reserved. VMware Confidential */\nimport {\n   AfterViewInit,\n   ChangeDetectorRef,\n   ComponentFactory,\n   ComponentFactoryResolver,\n   ComponentRef,\n   Directive,\n   HostListener,\n   Input, Renderer2, ViewContainerRef,\n} from \"@angular/core\";\nimport {ClipboardIcon} from \"./clipboard-icon.component\";\n\n/**\n * This directive does visually the same thing as vsan-show-title but handles a scenario when the parent's content\n * must be wrapped and at the same time some of it's children overflow parent's max width.\n * vsan-show-title directive cannot be used because the parent's element cannot be set with white-space: nowrap style\n * and if that style is applied to the element itself it make no sense as it's content is overflowed by the parent\n * element. To handle that the new directive positions absolutely an element that represents the ellipsis as well as\n * the copyToClipboard icon.\n */\n@Directive({\n   selector: \"[vsan-show-title-multi-line]\",\n})\nexport class ShowTitleMultiLineDirective implements AfterViewInit {\n\n   @Input()\n   copyToClipboard: boolean;\n\n   private static readonly ELLIPSIS_STRING: string = \"...\";\n   private static readonly ELLIPSIS_CLASS_NAME: string = \"custom-ellipsis\";\n   private static readonly CLIPBOARDICON_SPACING: string = \"0.6rem\";\n   private static readonly ELLIPSIS_SPACING: string = \"0rem\";\n\n   private clipboardIcon: ComponentRef<ClipboardIcon>;\n   private originalParentPosition: string;\n   private ellipsisSpan: HTMLSpanElement;\n\n   constructor(\n         private viewContainerRef: ViewContainerRef,\n         private resolver: ComponentFactoryResolver,\n         private renderer: Renderer2,\n         private cdr: ChangeDetectorRef) {\n   }\n\n   ngAfterViewInit() {\n      if (this.isTextEllipsisActive()) {\n         this.originalParentPosition = this.element.parentElement.style.position;\n         this.element.parentElement.style.position = \"relative\";\n         this.addEllipsis();\n      }\n   }\n\n   ngOnDestroy(): void {\n      if (this.isElementCreated()) {\n         this.element.parentElement.style.position = this.originalParentPosition;\n      }\n   }\n\n   @HostListener(\"mouseenter\")\n   show(): void {\n      if (!this.isTextEllipsisActive()) {\n         return;\n      }\n      this.setTitle();\n      this.addClipboardIcon();\n   }\n\n   @HostListener(\"mouseleave\")\n   hide(): void {\n      if (!this.isElementCreated()) {\n         return;\n      }\n      this.removeClipboardIcon();\n      this.removeTitle();\n      this.cdr.detectChanges();\n   }\n\n   private get element(): HTMLElement {\n      return this.viewContainerRef.element.nativeElement;\n   }\n\n   private isElementCreated(): boolean {\n      return this.viewContainerRef && this.viewContainerRef.element && this.viewContainerRef.element.nativeElement;\n   }\n\n   private isTextEllipsisActive(): boolean {\n      return this.getElRect().right > this.getParentRect().right;\n   }\n\n   private getElRect(): ClientRect | DOMRect {\n      return this.element.getBoundingClientRect();\n   }\n\n   private getParentRect(): ClientRect | DOMRect {\n      return this.element.parentElement.getBoundingClientRect();\n   }\n\n   private setTitle(): void {\n      this.element.setAttribute(\"title\", this.innerTextStripped);\n   }\n\n   private removeTitle(): void {\n      this.element.removeAttribute(\"title\");\n   }\n\n   private addClipboardIcon(): void {\n      if (!this.copyToClipboard) {\n         return;\n      }\n      this.createClipboardIcon(this.innerTextStripped);\n      this.ellipsisSpan.style.right = ShowTitleMultiLineDirective.CLIPBOARDICON_SPACING;\n   }\n\n   private get innerTextStripped(): string {\n      const elementText: string = this.element.innerText;\n      const ellipsisIndex: number = elementText.lastIndexOf(ShowTitleMultiLineDirective.ELLIPSIS_STRING);\n      return elementText.substring(0, ellipsisIndex);\n   }\n\n   private createClipboardIcon(copyContent): void {\n      const factory: ComponentFactory<ClipboardIcon> = this.resolver.resolveComponentFactory(ClipboardIcon);\n      this.clipboardIcon = this.viewContainerRef.createComponent(factory);\n      const clipboardIconEl: HTMLElement = this.clipboardIcon.injector.get(ClipboardIcon).element.nativeElement;\n      this.setClipBoardIconTop(clipboardIconEl);\n      this.renderer.appendChild(this.viewContainerRef.element.nativeElement, clipboardIconEl);\n      this.clipboardIcon.instance.content = copyContent;\n   }\n\n   private addEllipsis() {\n      this.ellipsisSpan = document.createElement(\"span\");\n      this.ellipsisSpan.className += ShowTitleMultiLineDirective.ELLIPSIS_CLASS_NAME;\n      this.ellipsisSpan.innerText = ShowTitleMultiLineDirective.ELLIPSIS_STRING;\n      this.ellipsisSpan.style.top = this.topPostion;\n      this.setEllipsisInitialPadding();\n      this.renderer.appendChild(this.viewContainerRef.element.nativeElement, this.ellipsisSpan);\n   }\n\n   private setClipBoardIconTop(clipboardIconEl: HTMLElement) {\n      clipboardIconEl.style.top = this.topPostion;\n   }\n\n   private get topPostion(): string {\n      const top: number = (this.getElRect().top - this.getParentRect().top);\n      return `${top}px`;\n   }\n\n   private removeClipboardIcon(): void {\n      if (!this.clipboardIcon) {\n         return;\n      }\n      this.setEllipsisInitialPadding();\n      this.clipboardIcon.destroy();\n   }\n\n   private setEllipsisInitialPadding(): void {\n      this.ellipsisSpan.style.right = ShowTitleMultiLineDirective.ELLIPSIS_SPACING;\n   }\n}","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {BasicVmData} from \"@generated/basic-vm-data\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"cns-vm-cell.html\",\n   styleUrls: [\"cns-vm-cell.scss\"],\n   selector: \"cns-vm-cell\",\n})\n\n/**\n * The component is used to show VMs, the volume is attached to.\n * When the volume is attached to multiple VMs, a signpost with count is shown next to the\n * first vm (i.e., vm_1_name (+ n)).\n * The component is used in grid details.\n */\nexport class CnsVmCell {\n\n   @Input()\n   vmData: BasicVmData[];\n\n   @Input()\n   loading: boolean;\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   navigateToVm(vmRef: ManagedObject): void {\n      this.navigationService.navigateTo(PlatformExtension.VM_SUMMARY, vmRef);\n   }\n\n   getTooltipText(vmRef: ManagedObject): string {\n      return VsanUiUtils.getString(\"vsan.monitor.cluster.virtualObjects.noReadPermissions\", vmRef.value);\n   }\n}\n","<!--Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n\n<clr-icon *ngIf=\"volume.compliance\"\n          aria-hidden=\"true\"\n          [attr.shape]=\"volume.compliance | complianceStatusIcon\"\n          [ngClass]=\"Icon.CLR_SOLID_ICON_CLASS + ' ' + Icon.clrIconShapeClassMap[volume.compliance | complianceStatusIcon]\"\n          [class.pointer]=\"volume.compliance === StorageCompliance.nonCompliant\">\n</clr-icon>\n<a href=\"javascript://\"\n   [title]=\"'vsan.common.dialogOpen.title' | localized :\n         ('cns.volumes.container.compliance.failure.overview.dialog.title' | localized)\"\n   *ngIf=\"volume.compliance === StorageCompliance.nonCompliant\"\n   (click)=\"openComplianceFailureDialog(volume)\">\n   {{volume.compliance | complianceStatusLabel}}\n</a>\n<ng-container *ngIf=\"volume.compliance !== StorageCompliance.nonCompliant\">\n   {{volume.compliance | complianceStatusLabel}}\n</ng-container>\n","<!--Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-info-prompt [title]=\"title\"\n                  confirmText=\"cns.volumes.info.confirm\">\n   {{'cns.volumes.info.description' | localized}}\n   <div class=\"image\"></div>\n   <vsan-validation id=\"resync-description\"\n                    [alertType]=\"'info'\"\n                    [allowClose]=\"false\"\n                    [alert]=\"'cns.volumes.info.description.resync' | localized\">\n   </vsan-validation>\n</vsan-info-prompt>\n","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<cns-volumes-view-details-row itemLabel=\"cns.volumes.container.grid.details.tab.relatedObjects.column.pod\"\n                              [sectionRow]=\"true\">\n   <span *ngIf=\"vmDataLoading\"\n         class=\"spinner spinner-sm spinner-inline\">\n   </span>\n   <ng-container *ngIf=\"!vmDataLoading\">\n      <cns-vm-cell *ngIf=\"showPodVMCell()\"\n                   [vmData]=\"vmData\"\n                   [loading]=\"vmDataLoading\">\n      </cns-vm-cell>\n      <span *ngIf=\"!showPodVMCell()\">\n         {{podNames.join(POD_DELIMITER)}}\n      </span>\n   </ng-container>\n</cns-volumes-view-details-row>\n\n","export enum CnsHealthStatus {\n   red = \"red\",\n   yellow = \"yellow\",\n   green = \"green\",\n   unknown = \"unknown\",\n}\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {Icon} from \"@util/icon\";\nimport {Volume} from \"@generated/volume\";\nimport {StorageCompliance} from \"@generated/storage-compliance\";\n\n@Component({\n   templateUrl: \"cns-compliance-status-cell.html\",\n   styleUrls: [\"cns-compliance-status-cell.scss\"],\n   selector: \"cns-compliance-status-cell\",\n})\n/**\n * The component is used to show the compliance status of a CNS volume:\n * outOfDate\n * compliant\n * nonCompliant\n * notApplicable\n * unknown\n * The component is used in the grid and grid details.\n */\nexport class CnsComplianceStatusCell {\n\n   @Input()\n   volume: Volume;\n\n   Icon = Icon;\n   StorageCompliance = StorageCompliance;\n\n   private static COMPLIANCE_FAILURE_DIALOG_WIDTH: number = 800;\n   private static COMPLIANCE_FAILURE_DIALOG_HEIGHT: number = 364;\n\n   openComplianceFailureDialog(volume: Volume) {\n      new ModalBuilder(\"cnsVolumes/complianceFailures\")\n            .setDimensions([\n               CnsComplianceStatusCell.COMPLIANCE_FAILURE_DIALOG_WIDTH,\n               CnsComplianceStatusCell.COMPLIANCE_FAILURE_DIALOG_HEIGHT,\n            ])\n            .open({volume: volume});\n   }\n}\n","/* Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Injectable} from \"@angular/core\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {StorageCompliance} from \"@generated/storage-compliance\";\nimport {Volume} from \"@generated/volume\";\nimport {ActionAvailableStatus} from \"@util/validation/action-available-status\";\nimport {Validator} from \"@util/validation/validator\";\nimport {ValidatorsGroup} from \"@util/validation/validators-group\";\nimport {VolumesUtil} from \"@util/volumes-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VolumeActionContext} from \"./volume-action-context\";\n\n@Injectable()\nexport class VolumeActionAvailabilityService {\n   // Volume action IDs\n   static readonly VOLUME_DELETE_ID: string = \"delete-volume\";\n   static readonly VOLUME_MIGRATE_ID: string = \"migrate-volume\";\n   static readonly VOLUME_REAPPLY_POLICY_ID: string = \"reapply-policy-volume\";\n\n   getReapplyPolicyEligibleVolumes(isCnsReconfigPolicySupported: boolean, volumes: Volume[]): Volume[] {\n      return volumes.filter(v => v.storagePolicyId &&\n            (v.compliance === StorageCompliance.outOfDate ||\n                  this.isNonCompliantPolicyReapplyEligible(isCnsReconfigPolicySupported, v)));\n   }\n\n   private isNonCompliantPolicyReapplyEligible(isCnsReconfigPolicySupported: boolean, volume: Volume): boolean {\n      return isCnsReconfigPolicySupported\n            && (volume.compliance === StorageCompliance.nonCompliant)\n            && [DatastoreType.VSAN_DIRECT.toString(), DatastoreType.VMFS.toString()].includes(\n                  volume.datastoreType);\n   }\n\n   checkAvailability = (context: VolumeActionContext): ActionAvailableStatus => {\n      switch (context.actionId) {\n         case VolumeActionAvailabilityService.VOLUME_REAPPLY_POLICY_ID:\n            return this.validate(this.reapplyPolicyVolumeAvailability, context,\n                  \"cns.volumes.container.reapply.description\");\n         case VolumeActionAvailabilityService.VOLUME_DELETE_ID:\n            return this.validate(this.deleteVolumeAvailability, context,\n                  \"cns.volumes.container.delete.description\");\n         case VolumeActionAvailabilityService.VOLUME_MIGRATE_ID:\n            return this.validate(this.migrateVolumeAvailability, context,\n                  \"cns.volumes.container.migrate.description\");\n      }\n   };\n\n   private validate(validatorsGroup: ValidatorsGroup<VolumeActionContext>,\n         context: VolumeActionContext,\n         successMessageKey: string): ActionAvailableStatus {\n\n      const errorMessage: string = validatorsGroup.getFirstError(context);\n      const isActionAvailable: boolean = VsanUiUtils.isEmpty(errorMessage);\n      const statusMessage: string = isActionAvailable\n            ? VsanUiUtils.getString(successMessageKey)\n            : errorMessage;\n\n      return new ActionAvailableStatus(isActionAvailable, statusMessage);\n   }\n\n   private readonly hasSelectedVolumes: Validator<VolumeActionContext> = new Validator(\n         (context: VolumeActionContext): boolean =>\n               VsanUiUtils.isEmpty(context.selectedVolumes),\n         VsanUiUtils.getString(\"cns.volumes.container.action.disabled.noSelection\"));\n\n   private readonly singleVolumeSelection: Validator<VolumeActionContext> = new Validator(\n         (context: VolumeActionContext): boolean =>\n               context.selectedVolumes?.length > 1,\n         VsanUiUtils.getString(\"cns.volumes.container.action.disabled.multipleSelection\"));\n\n   private readonly isBlockVolume: Validator<VolumeActionContext> = new Validator(\n         (context: VolumeActionContext): boolean =>\n               !VolumesUtil.isBlockVolume(context.selectedVolumes[0]),\n         VsanUiUtils.getString(\"cns.volumes.container.action.disabled.fileVolumeSelection\"));\n\n   private readonly policiesAreUpToDate: Validator<VolumeActionContext> = new Validator(\n         (context: VolumeActionContext): boolean =>\n               VsanUiUtils.isEmpty(this.getReapplyPolicyEligibleVolumes(\n                     context.isCnsReconfigPolicySupported, context.selectedVolumes)),\n         (context: VolumeActionContext): string => this.getReapplyPolicyValidationMessage(\n               context.isCnsReconfigPolicySupported));\n\n   private getReapplyPolicyValidationMessage(isCnsReconfigPolicySupported: boolean): string {\n      const key: string = isCnsReconfigPolicySupported\n            ? \"cns.volumes.container.reapply.disabled.description.new\"\n            : \"cns.volumes.container.reapply.disabled.description\";\n      return VsanUiUtils.getString(key);\n   }\n\n   private readonly hasDeletePermissions: Validator<VolumeActionContext> = new Validator(\n         (context: VolumeActionContext): boolean =>\n               (VolumesUtil.isBlockVolume(context.selectedVolumes[0]) && !context.hasDatastoreFileManagementPermission)\n               || (VolumesUtil.isFileVolume(context.selectedVolumes[0]) && !context.hasHostStoragePermission),\n         VsanUiUtils.getString(\"vsan.common.nopermissions\"));\n\n   // TODO tnojarova: add a permission check if there is an attached VM - Resource.ColdMigrate\n   private readonly hasMigratePermissions: Validator<VolumeActionContext> = new Validator(\n         (context: VolumeActionContext): boolean =>\n               !context.hasReadPolicyPermission || !context.hasDatastoreFileManagementPermission,\n         VsanUiUtils.getString(\"vsan.common.nopermissions\"));\n\n   private readonly reapplyPolicyVolumeAvailability: ValidatorsGroup<VolumeActionContext> = new ValidatorsGroup([\n      this.hasSelectedVolumes,\n      this.policiesAreUpToDate,\n   ]);\n\n   private readonly deleteVolumeAvailability: ValidatorsGroup<VolumeActionContext> = new ValidatorsGroup([\n      this.hasSelectedVolumes,\n      this.singleVolumeSelection,\n      this.hasDeletePermissions,\n   ]);\n\n   private readonly migrateVolumeAvailability: ValidatorsGroup<VolumeActionContext> = new ValidatorsGroup([\n      this.hasSelectedVolumes,\n      this.singleVolumeSelection,\n      this.isBlockVolume,\n      this.hasMigratePermissions,\n   ]);\n}","<!--Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-tabs>\n   <clr-tab>\n      <button clrTabLink>\n         {{\"cns.volumes.container.grid.details.tab.basics\" | localized}}\n      </button>\n      <ng-template [(clrIfActive)]=\"basicsTabActive\">\n         <clr-tab-content>\n            <cns-volumes-view-details-basics [volumeItem]=\"volumeItem\"\n                                             [storagePolicyName]=\"storagePolicyName\"\n                                             [vmData]=\"volumeItem?.vmData\"\n                                             [vmDataLoading]=\"vmDataLoading\">\n            </cns-volumes-view-details-basics>\n         </clr-tab-content>\n      </ng-template>\n   </clr-tab>\n   <clr-tab>\n      <button clrTabLink>\n         {{\"cns.volumes.container.grid.details.tab.relatedObjects\" | localized}}\n      </button>\n      <ng-template [(clrIfActive)]=\"clusterDetailsTabActive\">\n         <clr-tab-content>\n            <form class=\"clr-form clr-form-compact\">\n               <cns-volumes-view-details-cluster *ngFor=\"let cluster of volumeItem?.containerClusters\"\n                                                 [volumeName]=\"volumeItem?.name\"\n                                                 [cluster]=\"cluster\"\n                                                 [vmData]=\"volumeItem?.vmData\"\n                                                 [vmDataLoading]=\"vmDataLoading\">\n               </cns-volumes-view-details-cluster>\n               <cns-volumes-view-details-pod-row *ngIf=\"volumeItem?.podNames.length\"\n                                                 [vmData]=\"volumeItem?.vmData\"\n                                                 [vmDataLoading]=\"vmDataLoading\"\n                                                 [podNames]=\"volumeItem?.podNames\">\n               </cns-volumes-view-details-pod-row>\n            </form>\n         </clr-tab-content>\n      </ng-template>\n   </clr-tab>\n   <clr-tab *ngIf=\"canGetVirtualObjectsFromDatastore(volumeItem)\">\n      <button clrTabLink>\n         {{\"cns.volumes.container.grid.details.tab.physicalPlacement\" | localized}}\n      </button>\n      <ng-template [(clrIfActive)]=\"placementDetailsTabActive\">\n         <clr-tab-content>\n            <virtual-objects-placement-details-flat\n                  [virtualObjects]=\"getVirtualObjects()\"\n                  [data]=\"volumeData?.placementData\"\n                  [reducedColumns]=\"true\">\n            </virtual-objects-placement-details-flat>\n            <div>\n               <button id=\"virtual-objects-navigation-btn\"\n                       class=\"btn btn-sm btn-link no-spacing\"\n                       (click)=\"navigateToVirtualObjects()\"\n                       [disabled]=\"!volumeData?.volumeDetails\">\n                  {{\"cns.volumes.container.grid.details.tab.physicalPlacement.navigateToVirtualObjects.label\" | localized}}\n               </button>\n            </div>\n         </clr-tab-content>\n      </ng-template>\n   </clr-tab>\n   <clr-tab>\n      <button clrTabLink>\n         {{\"cns.volumes.container.grid.details.tab.performance\" | localized}}\n      </button>\n      <ng-template [(clrIfActive)]=\"performanceTabActive\">\n         <clr-tab-content>\n            <file-share-perf-details *ngIf=\"isPerformanceApplicable(volumeItem)\"\n                                     [clusterRef]=\"volumeData?.volumeDetails?.cluster\"\n                                     [volumePerfData]=\"volumeData?.performanceData\"\n                                     (queryPerformanceData)=\"fetchDataAfterPerfEnabled(volumeItem, volumeData.volumeDetails)\">\n            </file-share-perf-details>\n            <vsan-unavailable-view *ngIf=\"!isPerformanceApplicable(volumeItem) && !vmDataLoading\"\n                                   [unavailableViewSpec]=\"unavailableViewSpec\">\n            </vsan-unavailable-view>\n         </clr-tab-content>\n      </ng-template>\n   </clr-tab>\n</clr-tabs>\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {ManagedObject} from \"@service/managed-object\";\nimport {NestedPerfEntity} from \"../../../performance/model/nested-perf-entity\";\n\n/**\n * Model for passing data from volume details to volume details performance tab.\n */\n\nexport class ContainerVolumePerfData {\n   constructor(public perfEntityData: NestedPerfEntity, public vmRef: ManagedObject) {\n   }\n}\n","<!-- Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<clr-tooltip *ngIf=\"hasReadUpdatePolicyPermission()\">\n   <span clrTooltipTrigger\n         [vsan-ignore-focus]=\"!actionDisabled(VolumeActionAvailabilityService.VOLUME_REAPPLY_POLICY_ID)\">\n      <button id=\"{{VolumeActionAvailabilityService.VOLUME_REAPPLY_POLICY_ID}}\"\n              class=\"btn btn-sm btn-link no-spacing\"\n              aria-describedby=\"reapply-policy-description\"\n              (click)=\"reapplyPolicy()\"\n              [disabled]=\"actionDisabled(VolumeActionAvailabilityService.VOLUME_REAPPLY_POLICY_ID)\">\n               {{\"cns.volumes.container.reapply.label\" | localized}}\n      </button>\n   </span>\n   <clr-tooltip-content id=\"reapply-policy-description\"\n                        clrPosition=\"top-right\"\n                        clrSize=\"lg\">\n      {{getActionButtonTitle(VolumeActionAvailabilityService.VOLUME_REAPPLY_POLICY_ID)}}\n   </clr-tooltip-content>\n</clr-tooltip>\n<clr-tooltip>\n   <span clrTooltipTrigger\n         [vsan-ignore-focus]=\"!actionDisabled(VolumeActionAvailabilityService.VOLUME_DELETE_ID)\">\n      <button id=\"{{VolumeActionAvailabilityService.VOLUME_DELETE_ID}}\"\n              class=\"btn btn-sm btn-link no-spacing\"\n              aria-describedby=\"delete-volume-description\"\n              (click)=\"deleteVolume()\"\n              [disabled]=\"actionDisabled(VolumeActionAvailabilityService.VOLUME_DELETE_ID)\">\n         {{\"cns.volumes.container.delete.label\" | localized}}\n      </button>\n   </span>\n   <clr-tooltip-content id=\"delete-volume-description\"\n                        clrPosition=\"top-right\"\n                        clrSize=\"lg\">\n      {{getActionButtonTitle(VolumeActionAvailabilityService.VOLUME_DELETE_ID)}}\n   </clr-tooltip-content>\n</clr-tooltip>\n<clr-tooltip *ngIf=\"isVolumeRelocationSupported\">\n   <span clrTooltipTrigger\n         [vsan-ignore-focus]=\"!actionDisabled(VolumeActionAvailabilityService.VOLUME_MIGRATE_ID)\">\n      <button id=\"{{VolumeActionAvailabilityService.VOLUME_MIGRATE_ID}}\"\n              class=\"btn btn-sm btn-link no-spacing\"\n              aria-describedby=\"migrate-volume-description\"\n              (click)=\"migrateVolume()\"\n              [disabled]=\"actionDisabled(VolumeActionAvailabilityService.VOLUME_MIGRATE_ID)\">\n         {{\"cns.volumes.container.migrate.label\" | localized}}\n      </button>\n   </span>\n   <clr-tooltip-content id=\"migrate-volume-description\"\n                        clrPosition=\"top-right\"\n                        clrSize=\"lg\">\n      {{getActionButtonTitle(VolumeActionAvailabilityService.VOLUME_MIGRATE_ID)}}\n   </clr-tooltip-content>\n</clr-tooltip>","<!--Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<span *ngIf=\"loading\" class=\"spinner spinner-sm spinner-inline\"></span>\n<vsan-popup-list *ngIf=\"!loading\">\n   <ng-template vsan-popup-list-item *ngFor=\"let vm of vmData\">\n      <div vsan-show-title>\n         <clr-icon [attr.shape]=\"vm.primaryIconId\" class=\"is-solid\"></clr-icon>\n         <a *ngIf=\"vm.hasReadPermissions; else noPermissions\"\n            href=\"javascript://\"\n            (click)=\"navigateToVm(vm.vmRef)\">{{vm.name}}</a>\n         <ng-template #noPermissions>\n            <clr-tooltip>\n               <span clrTooltipTrigger class=\"no-read-permissions\">{{vm.name}}</span>\n               <clr-tooltip-content clrPosition=\"top-left\"\n                                    clrSize=\"md\">\n                  {{getTooltipText(vm.vmRef)}}\n               </clr-tooltip-content>\n            </clr-tooltip>\n         </ng-template>\n      </div>\n   </ng-template>\n</vsan-popup-list>\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {Volume} from \"@generated/volume\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {CnsVolumeType} from \"@generated/cns-volume-type\";\n\nexport class VolumesUtil {\n   static isFileVolume(volumeItem: Volume): boolean {\n      return volumeItem && (volumeItem.type === CnsVolumeType.FILE);\n   }\n\n   static isBlockVolume(volumeItem: Volume): boolean {\n      return volumeItem && (volumeItem.type === CnsVolumeType.BLOCK);\n   }\n\n   static isAttachedContainerVolume(volumeItem: Volume): boolean {\n      return volumeItem && !VsanUiUtils.isEmpty(volumeItem.vmData);\n   }\n\n   static isAssociatedVmAccessible(volumeItem: Volume): boolean {\n      return VolumesUtil.isAttachedContainerVolume(volumeItem) && volumeItem.vmData[0].hasReadPermissions;\n   }\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {BasicVmData} from \"@generated/basic-vm-data\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"volumes-view-details-pod-row.html\",\n   styleUrls: [\"volumes-view-details-pod-row.scss\"],\n   selector: \"cns-volumes-view-details-pod-row\",\n})\n\n/**\n * Represents a single pod row (label and value) from grid details view\n */\n\nexport class VolumesViewDetailsPodRowComponent {\n\n   POD_DELIMITER: string = VsanUiUtils.getString(\"vsan.common.comma\");\n\n   @Input()\n   vmData: BasicVmData[];\n\n   @Input()\n   vmDataLoading: boolean;\n\n   @Input()\n   podNames: string[];\n\n   // TODO: (vasilevd) Works for block volumes only. Should be handled for file volumes as well.\n   showPodVMCell(): boolean {\n      return this.podNames && this.podNames.length === 1 &&\n            this.vmData && this.vmData.length === 1 &&\n            this.vmData[0].isPodVM &&\n            this.podNames[0] === this.vmData[0].name;\n   }\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {Icon} from \"@util/icon\";\nimport {VolumeDatastoreData} from \"@generated/volume-datastore-data\";\n\n@Component({\n   templateUrl: \"cns-datastore-cell.html\",\n   styleUrls: [\"cns-datastore-cell.scss\"],\n   selector: \"cns-datastore-cell\",\n})\n\n/**\n * The component is used to show the datastore, the volume is backed by. When NFS datastore is used and it is mounted\n * to multiple hosts within different DCs a signpost with count is shown next to the\n * first datastore (i.e., datastore_1_name (+ n))\n * The component is used in the grid and grid details.\n */\nexport class CnsDatastoreCell {\n\n   @Input()\n   datastoreData: VolumeDatastoreData[];\n\n   Icon = Icon;\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   navigateToDatastore(datastore: ManagedObject) {\n      this.navigationService.navigateTo(PlatformExtension.DATASTORE_CNS_VOLUMES, datastore);\n   }\n}\n","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n\n<!--Classes used by QEs: cluster-name-vanilla, cluster-flavor-vanilla, cluster-name-wcp-icon-name,\ncluster-name-wcp, cluster-flavor-wcp, cluster-name-guest -->\n\n<!-- Vanilla cluster: show name with badge -->\n<ng-container *ngIf=\"isVanillaCluster\">\n   <span class=\"cluster-name-vanilla\">\n      {{cluster.name}}\n   </span>\n   <span *ngIf=\"showBadge\" class=\"cluster-flavor-vanilla badge badge-info\">\n      {{\"cns.volumes.container.grid.details.tab.relatedObjects.column.cluster.value.vanilla\" | localized}}\n   </span>\n</ng-container>\n<!-- WCP cluster with data: show icon, link and badge\n     WCP cluster without data: show name and badge  -->\n\n<ng-container *ngIf=\"isWCPCluster\">\n   <div *ngIf=\"cluster.clusterData\" class=\"cluster-name-wcp-icon-name icon-name-container\">\n      <clr-icon [attr.shape]=\"cluster.clusterData.primaryIconId\"></clr-icon>\n      <a (click)=\"navigateToSupervisorCluster(cluster.clusterData.moRef)\" href=\"javascript://\">\n         {{cluster.clusterData.name}}\n      </a>\n   </div>\n   <span *ngIf=\"!cluster.clusterData\" class=\"cluster-name-wcp\">\n      {{cluster.name}}\n   </span>\n   <span *ngIf=\"showBadge\" class=\"cluster-flavor-wcp badge badge-blue\">\n      {{\"cns.volumes.container.grid.details.tab.relatedObjects.column.cluster.value.wcp\" | localized}}\n   </span>\n</ng-container>\n<!-- Guest cluster with data: show icon, link and badge\n     Guest cluster without data: show name and badge  -->\n<ng-container *ngIf=\"isGuestCluster\">\n   <div *ngIf=\"cluster.clusterData\" class=\"cluster-name-guest-icon-name icon-name-container\">\n      <clr-icon [attr.shape]=\"cluster.clusterData.primaryIconId\"></clr-icon>\n      <a (click)=\"navigateToGuestCluster(cluster.clusterData.moRef)\" href=\"javascript://\">\n         {{cluster.clusterData.name}}\n      </a>\n   </div>\n   <span *ngIf=\"!cluster.clusterData\" class=\"cluster-name-guest\">\n      {{cluster.name}}\n   </span>\n</ng-container>","<!--Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-popup-list>\n   <ng-template vsan-popup-list-item *ngFor=\"let datastore of datastoreData\">\n      <div vsan-show-title>\n         <clr-icon [attr.shape]=\"Icon.DATASTORE\" class=\"is-solid\" aria-hidden=\"true\"></clr-icon>\n         <a href=\"javascript://\" (click)=\"navigateToDatastore(datastore.reference)\">{{datastore.name}}</a>\n      </div>\n   </ng-template>\n</vsan-popup-list>\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {CnsVolumesDeleteVolumeModalContext} from \"./delete-volume-modal-context.data\";\nimport {CnsService} from \"@generated/cns-service\";\nimport {Volume} from \"@generated/volume\";\nimport {VolumesVmService} from \"../../volumes-vm-service\";\n\n@Component({\n   templateUrl: \"delete-volume.html\",\n   selector: \"vsan-volumes-delete-volume\",\n})\nexport class DeleteVolumeComponent implements OnInit {\n   objectRef: ManagedObject;\n   volume: Volume;\n   errors: string[];\n   loading: boolean;\n\n   constructor(private cnsService: CnsService,\n         private volumesVmService: VolumesVmService) {\n   }\n\n   ngOnInit(): void {\n      const context: CnsVolumesDeleteVolumeModalContext =\n            <CnsVolumesDeleteVolumeModalContext>VsanUiUtils.getModalContext();\n      this.objectRef = context.objectRef;\n      this.volume = context.volume;\n      this.loading = true;\n      this.volumesVmService.getVMData(this.volume).then(() => {\n         if (this.isVolumeAttached) {\n            this.errors = [VsanUiUtils.getString(\"cns.volumes.container.volume.delete.dialog.validation.vm.attached\",\n                           this.volume.vmData[0].name)];\n         }\n      }).catch(error => this.errors = [error])\n        .finally(() => this.loading = false);\n   }\n\n   async confirm() {\n      this.errors = null;\n      try {\n         this.loading = true;\n         const taskRef: ManagedObject = await this.cnsService.deleteVolume(this.objectRef, this.volume.id);\n         VsanUiUtils.closeModalDialog(taskRef);\n      } catch (error) {\n         this.errors = [error];\n      } finally {\n         this.loading = false;\n      }\n   }\n\n   get isVolumeAttached(): boolean {\n      return this.volume && !VsanUiUtils.isEmpty(this.volume.vmData);\n   }\n\n   get hasErrors(): boolean {\n      return !VsanUiUtils.isEmpty(this.errors);\n   }\n}","/* Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ClrDatagridPagination} from \"@clr/angular\";\nimport {CnsService} from \"@generated/cns-service\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {DestinationDatastore} from \"@generated/destination-datastore\";\nimport {Volume} from \"@generated/volume\";\nimport {VolumeMigrateData} from \"@generated/volume-migrate-data\";\nimport {NavigationService} from \"@navigation/navigation.service\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {CnsVolumesMigrateVolumeModalContext} from \"./migrate-volume-modal-context.data\";\nimport {MigrateVolumeService} from \"./migrate-volume.service\";\n\n@Component({\n   templateUrl: \"migrate-volume.html\",\n   selector: \"vsan-volumes-migrate-volume\",\n   styleUrls: [\"migrate-volume.scss\"],\n})\nexport class MigrateVolumeComponent implements OnInit {\n   readonly DEFAULT_ITEMS_PER_PAGE: number = 10;\n\n   volume: Volume;\n   storagePolicyName: string;\n   migrateVolume: VolumeMigrateData;\n\n   selectedDatastore: DestinationDatastore;\n\n   @ErrorMessage()\n   errorMessage: string;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   warning: string;\n   showKBLink: boolean;\n\n   documentationUrl: string;\n   // TODO: set a valid GUID\n   private readonly MIGRATE_VOLUME_DOCUMENTAION_GUID: string = \"\";\n\n   constructor(private cnsService: CnsService,\n         private migrationService: MigrateVolumeService,\n         private navigationService: NavigationService) {\n   }\n\n   async ngOnInit(): Promise<void> {\n      this.documentationUrl = this.navigationService.getVmwareHelpUrl(NavigationService.NETWORKING_URL,\n            this.MIGRATE_VOLUME_DOCUMENTAION_GUID);\n\n      const context: CnsVolumesMigrateVolumeModalContext = VsanUiUtils.getModalContext();\n      this.volume = context.volume;\n      this.storagePolicyName = context.storagePolicyName;\n      await this.getMigrateVolumeData(this.volume);\n   }\n\n   @Loader()\n   async getMigrateVolumeData(volume: Volume): Promise<void> {\n      this.migrateVolume = await this.cnsService.getMigrateVolumeData(volume);\n\n      if (!VsanUiUtils.isEmpty(this.migrateVolume.destinationDatastores)) {\n         this.setInitialSelection();\n      }\n   }\n\n   @Loader()\n   async confirm(): Promise<void> {\n      // TODO: integrate with backend\n      const taskRef: ManagedObject = new ManagedObject();\n      VsanUiUtils.closeModalDialog(taskRef);\n   }\n\n   get canMigrate(): boolean {\n      return !this.loading && !this.errorMessage\n            && this.migrateVolume && !VsanUiUtils.isEmpty(this.migrateVolume.destinationDatastores);\n   }\n\n   getPaginationLabel(pagination: ClrDatagridPagination): string {\n      return this.migrationService.getPaginationLabel(pagination, this.DEFAULT_ITEMS_PER_PAGE);\n   }\n\n   getDatastoreTypeLabel(type: DatastoreType): string {\n      return this.migrationService.getDatastoreTypeLabel(type);\n   }\n\n   private setInitialSelection(): void {\n      // Set a warning when the storage policy is not retrieved but there are accessible datastores\n      if (!this.storagePolicyName) {\n         this.warning = VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.warning.noStoragePolicy\");\n      }\n\n      this.selectionChanged(this.migrateVolume.destinationDatastores[0]);\n   }\n\n   selectionChanged = (target: DestinationDatastore): void => {\n      this.selectedDatastore = target;\n      if (!this.storagePolicyName) {\n         return;\n      }\n\n      this.showKBLink = target.policyCompliant === false;\n      this.warning = this.showKBLink\n            ? VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.warning.notCompliantDatastore\",\n                  this.storagePolicyName)\n            : \"\";\n   };\n\n   getCompatibilityIconClass(isCompatible: boolean): string {\n      return this.migrationService.getCompatibilityIconClass(isCompatible);\n   }\n\n   getCompatibilityIconShape(isCompatible: boolean): string {\n      return this.migrationService.getCompatibilityIconShape(isCompatible);\n   }\n\n   getCompatibilityLabel(isCompatible: boolean): string {\n      return this.migrationService.getCompatibilityLabel(isCompatible);\n   }\n}","/* Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"what-is-this-dialog.html\",\n   selector: \"cns-what-is-this-dialog\",\n   styleUrls: [\"what-is-this-dialog.scss\"],\n})\nexport class WhatIsThisDialogComponent {\n   readonly title: string = VsanUiUtils.getString(\"cns.volumes.info.title\");\n   readonly infoImage: string = VsanUiUtils.getString(\"cns.volumes.info.image\");\n}","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\n\n@Component({\n   templateUrl: \"volumes-view-details-row.html\",\n   styleUrls: [\"volumes-view-details-row.scss\"],\n   selector: \"cns-volumes-view-details-row\",\n})\n\n/**\n * Represents a single row (label and value) from grid details view\n */\n\nexport class VolumesViewDetailsRow {\n   @Input()\n   itemLabel: string;\n\n   @Input()\n   sectionRow: boolean;\n}\n","<!--Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-info-prompt\n      [title]=\"'cns.volumes.container.compliance.failure.overview.dialog.title' | localized\"\n      [subtitle]=\"volumeName\"\n      [(alertMessage)]=\"alertMessage\">\n   <clr-datagrid class=\"datagrid-compact\" [clrDgLoading]=\"busy\">\n      <clr-dg-column>\n         {{'cns.volumes.container.compliance.failure.overview.dialog.grid.column.propertyName' | localized}}\n      </clr-dg-column>\n      <clr-dg-column>\n         {{'cns.volumes.container.compliance.failure.overview.dialog.grid.column.expectedValue' | localized}}\n      </clr-dg-column>\n      <clr-dg-column>\n         {{'cns.volumes.container.complaince.failure.overview.dialog.grid.column.currentValue' | localized}}\n      </clr-dg-column>\n\n      <clr-dg-row *ngFor=\"let failure of failures\">\n         <clr-dg-cell>{{failure.propertyName}}</clr-dg-cell>\n         <clr-dg-cell>{{failure.expectedValue}}</clr-dg-cell>\n         <clr-dg-cell>{{failure.currentValue}}</clr-dg-cell>\n      </clr-dg-row>\n   </clr-datagrid>\n</vsan-info-prompt>\n","/* Copyright 2017-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {PipeTransform, Pipe} from \"@angular/core\";\nimport {Logger} from \"@util/logger\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {PerfStatsObjectInfo} from \"@generated/perf-stats-object-info\";\nimport {VsanIscsiTargetConfig} from \"@generated/vsan-iscsi-target-config\";\nimport {StorageCompliance} from \"@generated/storage-compliance\";\n\n@Pipe({\n   name: 'complianceStatusLabel'\n})\nexport class ComplianceStatusLabelPipe implements PipeTransform {\n\n   public transform(details: any | PerfStatsObjectInfo | VsanIscsiTargetConfig | StorageCompliance): any {\n      if (!details) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n\n      let status: StorageCompliance = null;\n      if ((<any> Object).values(StorageCompliance).includes(details)) {\n         status = details;\n      } else if (details.spbmComplianceResult) {\n         status = details.spbmComplianceResult.complianceStatus;\n      } else if (details.homeObjectStorageCompliance) {\n         status = details.homeObjectStorageCompliance\n      }\n\n      if (!status) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n\n      switch (status) {\n         case StorageCompliance.compliant:\n            return VsanUiUtils.getString(\"vsan.pbm.complianceStatus.compliant\");\n         case StorageCompliance.nonCompliant:\n            return VsanUiUtils.getString(\"vsan.pbm.complianceStatus.nonCompliant\");\n         case StorageCompliance.notApplicable:\n            return VsanUiUtils.getString(\"vsan.pbm.complianceStatus.notApplicable\");\n         case StorageCompliance.outOfDate:\n            return VsanUiUtils.getString(\"vsan.pbm.complianceStatus.outOfDate\");\n         case StorageCompliance.unknown:\n            return VsanUiUtils.getString(\"vsan.pbm.complianceStatus.unknown\");\n         default:\n            Logger.warn(\"Unrecognized compliance status:\", status);\n            return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n\n   }\n}\n","/* Copyright (c) 2021-2022 VMware, Inc. All rights reserved. VMware Confidential */\nimport {Injectable} from \"@angular/core\";\nimport {ClrDatagridPagination} from \"@clr/angular\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {Icon} from \"@util/icon\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * Helper service for Migrate volume dialog\n */\n@Injectable()\nexport class MigrateVolumeService {\n   getCompatibilityIconClass(isCompatible: boolean): string {\n      if (VsanUiUtils.isUnset(isCompatible)) {\n         return \"\";\n      }\n\n      return isCompatible\n            ? Icon.CLR_SUCCESS_ICON_CLASS\n            : Icon.CLR_WARN_ICON_CLASS;\n   }\n\n   getCompatibilityIconShape(isCompatible: boolean): string {\n      if (VsanUiUtils.isUnset(isCompatible)) {\n         return \"\";\n      }\n\n      return isCompatible\n            ? Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE\n            : Icon.CLR_WARN_STANDARD_ICON_SHAPE;\n   }\n\n   getCompatibilityLabel(isCompatible: boolean): string {\n      if (VsanUiUtils.isUnset(isCompatible)) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n\n      return isCompatible\n            ? VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.column.compatibility.compatible\")\n            : VsanUiUtils.getString(\n                  \"cns.volumes.container.volume.migrate.dialog.table.column.compatibility.incompatible\");\n   }\n\n   getPaginationLabel(pagination: ClrDatagridPagination, itemsPerPage: number): string {\n      return VsanUiUtils.getDatagridPaginatedFooterLabel(pagination.totalItems, pagination.firstItem,\n            pagination.lastItem, itemsPerPage,\n            VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.datastore\"),\n            VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.datastores\"),\n            VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.page\"));\n   }\n\n   getDatastoreTypeLabel(type: DatastoreType): string {\n      switch (type) {\n         case DatastoreType.VSAN:\n            return VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.column.type.vsan\");\n         case DatastoreType.VSAN_DIRECT:\n            return VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.column.type.vsand\");\n         case DatastoreType.PMEM:\n            return VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.column.type.pmem\");\n         case DatastoreType.VMFS:\n            return VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.column.type.vmfs\");\n         case DatastoreType.NFS:\n            return VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.column.type.nfs3\");\n         case DatastoreType.NFS41:\n            return VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.column.type.nfs41\");\n         case DatastoreType.VVOL:\n            return VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.column.type.vvol\");\n         default:\n            return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n   }\n}","<!--Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-delete-prompt\n      [title]=\"'cns.volumes.container.volume.delete.dialog.title' | localized\"\n      [(alertMessages)]=\"errors\"\n      [allowAlertClose]=\"false\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"loading || hasErrors\"\n      (onConfirm)=\"confirm()\">\n   <ng-container *ngIf=\"!hasErrors && !loading\">\n      <span>\n         {{\"cns.volumes.container.volume.delete.dialog.text\" | localized : volume.name}}\n      </span>\n      <span>\n         {{\"vsan.common.confirm.question\" | localized}}\n      </span>\n   </ng-container>\n</vsan-delete-prompt>\n","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {ContainerVolumePerfData} from \"@component/file-share-perf/container-volume-perf-data\";\nimport {FileSharePerfData} from \"@component/file-share-perf/file-share-perf-data\";\nimport {VolumePerfData} from \"@component/file-share-perf/volume-perf-data\";\nimport {UnavailableViewSpec} from \"@component/unavailable-view/unavailable-view-spec\";\nimport {VirtualObjectsTypeUtil} from \"@component/virtual-objects-table/virtual-objects-type.util\";\nimport {CnsService} from \"@generated/cns-service\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {DisplayObjectType} from \"@generated/display-object-type\";\nimport {LabelData} from \"@generated/label-data\";\nimport {PerfMonitorCommonPropsData} from \"@generated/perf-monitor-common-props-data\";\nimport {PerfVirtualMachineDiskData} from \"@generated/perf-virtual-machine-disk-data\";\nimport {PhysicalPlacementService} from \"@generated/physical-placement-service\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {VirtualObjectPlacementModel} from \"@generated/virtual-object-placement-model\";\nimport {Volume} from \"@generated/volume\";\nimport {VolumeDetails} from \"@generated/volume-details\";\nimport {VsanFileServiceShare} from \"@generated/vsan-file-service-share\";\nimport {VsanPerfPropertyProvider} from \"@generated/vsan-perf-property-provider\";\nimport {VirtualObjectsContext} from \"@navigation/context/virtual-objects-context\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {MapUtil} from \"@util/map-util\";\nimport {RaceConditionSafe} from \"@util/promise/race-condition-safe.decorator\";\nimport {VolumesUtil} from \"@util/volumes-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {NestedPerfEntity} from \"../../../performance/model/nested-perf-entity\";\nimport {PerfMultiEntitesDataQueryService} from \"../../../performance/util/perf-multi-entities-data-query.service\";\nimport {VolumesVmService} from \"../volumes-vm-service\";\n\n@Component({\n   templateUrl: \"volumes-view-details.html\",\n   styleUrls: [\"volumes-view-details.scss\"],\n   selector: \"cns-volumes-view-details\",\n})\n\n/**\n * The component is used to show details of a CNS volume(e.g., basic properties, attached VMs as well as metadata for\n * persistent volumes, persistent volume claims and pods) and for File volume\n */\n\nexport class VolumesViewDetails {\n\n   private static readonly EXTENSION_ID: string = \"appplatform.vmware.com/extension-id\";\n\n   private _volumeItem: Volume;\n   volumeData: VolumeData;\n\n   @Input()\n   set volumeItem(value: Volume) {\n      this._volumeItem = value;\n      this.resetVolumeData();\n      if (!this.volumeItem || VsanUiUtils.isEmpty(this.volumeItem.datastoreData)) {\n         return;\n      }\n      this.refresh();\n   }\n\n   get volumeItem(): Volume {\n      return this._volumeItem;\n   }\n\n   @Input()\n   storagePolicyName: string;\n\n   // Reset data for the current page (i.e., on reload, page change, filter change)\n   @Input()\n   set resetPageData(value: any) {\n      this.volumeIdToVolumeDetails = new Map();\n      this.volumeIdToPhysicalPlacement = new Map();\n   }\n\n   @Output()\n   onError: EventEmitter<string> = new EventEmitter<string>();\n\n   get unavailableViewSpec(): UnavailableViewSpec {\n      if (!VolumesUtil.isAttachedContainerVolume(this.volumeItem)) {\n         return UnavailableViewSpec.PERF_NOT_ATTACHED_BLOCK_VOLUME;\n      } else if (!VolumesUtil.isAssociatedVmAccessible(this.volumeItem)) {\n         return UnavailableViewSpec.PERF_NOT_VM_READ_PERMISSIONS;\n      }\n   }\n\n   @LoadingIndicator({\"name\": \"vm-data-loader\"})\n   vmDataLoading: boolean;\n\n   placementDetailsTabActive: boolean;\n   performanceTabActive: boolean;\n   clusterDetailsTabActive: boolean = true;\n   basicsTabActive: boolean;\n\n   private extensionId: string;\n   private volumeIdToVolumeDetails: Map<string, VolumeDetails> = new Map();\n   private volumeIdToPhysicalPlacement: Map<string, Map<string, VirtualObjectPlacementModel[]>> = new Map();\n\n   constructor(private navigationService: NavigationService,\n         private cnsService: CnsService,\n         private volumesVmService: VolumesVmService,\n         private physicalPlacementService: PhysicalPlacementService,\n         private perfProvider: VsanPerfPropertyProvider,\n         private perfMultiEntitiesDataQuery: PerfMultiEntitesDataQueryService) {\n      this.volumeData = new VolumeData();\n   }\n\n   @RefreshHandler\n   @Loader()\n   async refresh(): Promise<void> {\n      this.volumeData = await this.queryAllData(this.volumeItem);\n   }\n\n   // Reset data on volume selection change.\n   private resetVolumeData(): void {\n      this.volumeData.reset();\n   }\n\n   isPerformanceApplicable(volumeItem: Volume): boolean {\n      return VolumesUtil.isFileVolume(volumeItem) || VolumesUtil.isAssociatedVmAccessible(volumeItem);\n   }\n\n   getVirtualObjects(): VirtualObjectModel[] {\n      const virtualObjects: any[] = [];\n      if (!this.volumeItem || !this.volumeData?.placementData) {\n         return virtualObjects;\n      }\n      // VM Ref is not set as we don't want to show VM path\n      this.volumeData.placementData.forEach((placementData, uuid) => {\n         virtualObjects.push({\n            uid: uuid,\n            name: this.volumeItem.name,\n            iconId: this.volumeItem.iconId,\n            diskUuid: this.isVolumeOnVsanDirectDatastore(this.volumeItem)\n                  ? placementData[0].capacityDisk.nodeUuid\n                  : null,\n         });\n      });\n      return virtualObjects;\n   }\n\n   navigateToVirtualObjects(): void {\n      // if there is name, filter by it. Otherwise filter by calculated filter\n      const virtualObjectsContext: VirtualObjectsContext = {\n         presentVirtualObjectUuids: this.volumeData.volumeDetails.virtualObject.uuids,\n         filterTypes: this.getExtensionId()\n               ? [\n                  VirtualObjectsTypeUtil.getVirtualObjectTypeFilter(DisplayObjectType.EXTENSION_APP,\n                        this.getExtensionId()),\n               ]\n               : [\n                  VirtualObjectsTypeUtil.getVirtualObjectTypeFilter(this.volumeData.volumeDetails.virtualObject.filter),\n               ],\n      };\n      this.navigationService.navigateTo(\n            PlatformExtension.VIRTUAL_OBJECTS,\n            this.volumeData.volumeDetails.cluster,\n            virtualObjectsContext);\n   }\n\n   async queryVolumeDetails(volume: Volume): Promise<VolumeDetails> {\n      if (!this.canGetVirtualObjectsFromDatastore(volume)) {\n         return null;\n      }\n      this.extensionId = this.getExtensionId();\n\n      let volumeDetails: VolumeDetails = this.getVolumeDetails(volume);\n      if (volumeDetails) {\n         return volumeDetails;\n      }\n\n      // Generally, Volume.datastoreData field is an array because:\n      // 1) a single NFS folder can be added as a storage to hosts residing in different datacenters.\n      // 2) a volume backed by such NFS folder will refer to all such datastores on a VC level.\n      // Navigation to virtual objects, however, is available only for a vSAN datastores.\n      // Since a volume can be backed by a single vSAN datastore we pass only the first available item.\n      volumeDetails = await this.cnsService.getVolumeDetails(\n            volume.datastoreData[0].reference,\n            volume.id,\n            volume.fileshareName,\n            !!this.extensionId);\n      this.volumeIdToVolumeDetails.set(volume.id, volumeDetails);\n      return volumeDetails;\n\n   }\n\n   private getExtensionId(): string {\n      return this.getLabelByKey(VolumesViewDetails.EXTENSION_ID);\n   }\n\n   private getLabelByKey(labelKey: string): string {\n      let labels: LabelData[] = [];\n      if (!VsanUiUtils.isEmpty(this.volumeItem.labels)) {\n         labels = this.volumeItem.labels.filter(label => label.key === labelKey);\n      }\n      return (labels.length && labels[0].value)\n            ? labels[0].value\n            : null;\n   }\n\n   @RaceConditionSafe()\n   async queryAllData(volume: Volume): Promise<VolumeData> {\n      const volumeData: VolumeData = new VolumeData();\n      await this.queryVMData(volume);\n      volumeData.volumeDetails = await this.queryVolumeDetails(volume);\n      [volumeData.placementData, volumeData.performanceData] = await Promise.all([\n         this.queryPlacementData(volume, volumeData.volumeDetails),\n         this.queryPerformanceData(volume, volumeData.volumeDetails),\n      ]);\n      return volumeData;\n   }\n\n   @Loader({name: \"vm-data-loader\"})\n   private async queryVMData(volume: Volume): Promise<void> {\n      try {\n         await this.volumesVmService.getVMData(volume);\n      } catch (e) {\n         this.handleError(e);\n      }\n   }\n\n   @ErrorHandler()\n   private handleError(error: string): void {\n      this.onError.emit(error);\n   }\n\n   private async queryPlacementData(volumeItem: Volume,\n         volumeDetails: VolumeDetails): Promise<Map<string, VirtualObjectPlacementModel[]>> {\n      if (!this.canGetVirtualObjectsFromDatastore(volumeItem)) {\n         return null;\n      }\n\n      // Keep this as any type due to non-REPA code.\n      let physicalPlacement: any = this.getPhysicalPlacementData(volumeItem);\n      if (physicalPlacement) {\n         return physicalPlacement;\n      }\n      if (this.isVolumeOnVsanDatastore(volumeItem)) {\n         physicalPlacement = await this.physicalPlacementService.getVsanPhysicalPlacement(\n               volumeDetails.cluster, volumeDetails.virtualObject.uuids);\n      } else {\n         physicalPlacement = await this.physicalPlacementService.getVsanDirectPhysicalPlacement(\n               volumeDetails.cluster, [volumeItem.id]);\n      }\n      const volumePhysicalPlacement: Map<string, VirtualObjectPlacementModel[]> =\n            MapUtil.toMap<string, VirtualObjectPlacementModel[]>(physicalPlacement);\n      this.volumeIdToPhysicalPlacement.set(volumeItem.id, volumePhysicalPlacement);\n      return volumePhysicalPlacement;\n   }\n\n   async fetchDataAfterPerfEnabled(volumeItem: Volume, volumeDetails: VolumeDetails): Promise<void> {\n      if (this.volumeData) {\n         this.volumeData.performanceData = await this.queryPerformanceData(volumeItem, volumeDetails);\n      }\n   }\n\n   private async queryPerformanceData(volumeItem: Volume, volumeDetails: VolumeDetails): Promise<VolumePerfData> {\n      if (!this.isVolumeOnVsanDatastore(volumeItem) || !this.isPerformanceApplicable(volumeItem)) {\n         return null;\n      }\n      const commonPerfData: PerfMonitorCommonPropsData =\n            await this.queryCommonPerfData(volumeDetails.cluster);\n      return await this.getVolumePerfData(volumeItem, volumeDetails, commonPerfData);\n   }\n\n   private async getVolumePerfData(volumeItem: Volume, volumeDetails: VolumeDetails,\n         commonPerfData: PerfMonitorCommonPropsData): Promise<VolumePerfData> {\n      if (VolumesUtil.isFileVolume(volumeItem)) {\n         return this.getFileVolumePerfData(volumeItem, volumeDetails, commonPerfData);\n      } else if (VolumesUtil.isAttachedContainerVolume(volumeItem)) {\n         return await this.getBlockVolumePerfData(volumeItem, commonPerfData);\n      } else {\n         return null;\n      }\n   }\n\n   private async getBlockVolumePerfData(volumeItem: Volume, commonPerfData: PerfMonitorCommonPropsData):\n         Promise<VolumePerfData> {\n      const diskData: PerfVirtualMachineDiskData =\n            await this.getVirtualMachineDiskData(volumeItem.vmData[0].vmRef);\n      const disks: NestedPerfEntity[] = this.perfMultiEntitiesDataQuery.parseVirtualDisk(diskData, false);\n      const disk: NestedPerfEntity = disks.find(diskItem => diskItem.entityName.includes(volumeItem.name));\n      const containerVolumePerfData: ContainerVolumePerfData = new ContainerVolumePerfData(disk,\n            volumeItem.vmData[0].vmRef);\n      return new VolumePerfData(commonPerfData, null, containerVolumePerfData);\n   }\n\n   private async getVirtualMachineDiskData(vmRef: ManagedObject): Promise<PerfVirtualMachineDiskData> {\n      return await this.perfProvider.getVirtualMachineDiskData(vmRef, true);\n   }\n\n   private getFileVolumePerfData(volumeItem: Volume, volumeDetails: VolumeDetails,\n         commonPerfData: PerfMonitorCommonPropsData): VolumePerfData {\n      const fileShare: VsanFileServiceShare = {\n         config: {\n            name: volumeItem.fileshareName,\n            domainName: volumeDetails.fileShare.domainName,\n            protocol: volumeDetails.fileShare.protocol,\n         },\n      } as VsanFileServiceShare;\n      // Currently, only NFS file shares provisioned by vSAN file service will be supported.\n      // CNS may support non NFS, non vSAN file service based file shares in future.\n      const isSmbProtocolSupported: boolean = false;\n      const fileSharePerfData: FileSharePerfData = new FileSharePerfData(fileShare, isSmbProtocolSupported);\n      return new VolumePerfData(commonPerfData, fileSharePerfData);\n   }\n\n   private queryCommonPerfData(cluster: ManagedObject): Promise<PerfMonitorCommonPropsData> {\n      return this.perfProvider.getPerfMonitorCommonPropsData(cluster);\n   }\n\n   canGetVirtualObjectsFromDatastore(volume: Volume): boolean {\n      return this.isVolumeOnVsanDatastore(volume) || this.isVolumeOnVsanDirectDatastore(volume);\n   }\n\n   isVolumeOnVsanDatastore(volumeItem: Volume): boolean {\n      return volumeItem && volumeItem.datastoreType === DatastoreType.VSAN;\n   }\n\n   isVolumeOnVsanDirectDatastore(volumeItem: Volume): boolean {\n      return volumeItem && volumeItem.datastoreType === DatastoreType.VSAN_DIRECT;\n   }\n\n   private getVolumeDetails(volumeItem: Volume): VolumeDetails {\n      return this.volumeIdToVolumeDetails.get(volumeItem.id);\n   }\n\n   private getPhysicalPlacementData(volumeItem: Volume): Map<string, VirtualObjectPlacementModel[]> {\n      return this.volumeIdToPhysicalPlacement.get(volumeItem.id);\n   }\n}\n\nclass VolumeData {\n   volumeDetails: VolumeDetails;\n   placementData: Map<string, VirtualObjectPlacementModel[]>;\n   performanceData: VolumePerfData;\n\n   reset(): void {\n      this.volumeDetails = null;\n      this.placementData = null;\n      this.performanceData = null;\n   }\n}\n"]}