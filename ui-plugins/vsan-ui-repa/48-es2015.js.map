{"version":3,"sources":["./src/app/vsan/performance/model/expandable-perf-entity.ts","./src/app/vsan/performance/model/vm-disks-perf-entity.ts","./src/app/vsan/performance/export/perf-chart-export-options-dialog.component.ts","./src/app/vsan/performance/export/perf-chart-export-options-dialog.html","./src/app/vsan/performance/model/host-disk-entity.ts","./src/app/vsan/performance/util/perf-multi-entities-data-query.service.ts","./src/app/vsan/performance/performance-common.module.ts"],"names":[],"mappings":"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","file":"48-es2015.js","sourcesContent":["/* Copyright 2017 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {BasePerfEntity} from \"./base-perf-entity\";\n\nexport class ExpandablePerfEntity extends BasePerfEntity {\n   /**\n    * an iSCSI target object has several iSCSI luns as children\n    */\n   public children: BasePerfEntity[];\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {BasePerfEntity} from \"./base-perf-entity\";\nimport {NestedPerfEntity} from \"./nested-perf-entity\";\n\nexport class VmDisksPerfEntity extends BasePerfEntity {\n   nestedPerfEntity: BasePerfEntity[];\n   icon: string;\n}","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {PerfChartExportContextData} from \"./perf-chart-export-context.data\";\nimport {PerfChartExportOptions} from \"./perf-chart-export-options\";\nimport {FileUtils} from \"@component/export/files/file-utils\";\n\n@Component({\n   templateUrl: \"perf-chart-export-options-dialog.html\",\n   selector: \"vsan-perf-chart-export-options-dialog\",\n   styleUrls: [\"perf-chart-export-options-dialog.scss\"],\n})\nexport class PerfChartExportOptionsDialogComponent implements OnInit {\n   private static readonly BIG_HEIGHT: number = 400;\n\n   VsanUiUtils: typeof VsanUiUtils = VsanUiUtils;\n\n   subEntities: Map<string, boolean> = new Map<string, boolean>();\n   graphs: Map<string, boolean> = new Map<string, boolean>();\n   showSubEntities: boolean = false;\n   entityNames: Set<string> = new Set<string>();\n   graphNames: Set<string> = new Set<string>();\n\n   ngOnInit(): void {\n      const context: PerfChartExportContextData = VsanUiUtils.getModalContext() as PerfChartExportContextData;\n      context.exportData.forEach(data => {\n         if (data.subEntityName) {\n            this.entityNames.add(data.subEntityName);\n            this.subEntities.set(data.subEntityName, true);\n         }\n         this.graphs.set(data.graphName, true);\n         this.graphNames.add(data.graphName);\n      });\n      this.showSubEntities = context.showSubEntities;\n      if (this.showSubEntities) {\n         VsanUiUtils.setModalDialogHeight(PerfChartExportOptionsDialogComponent.BIG_HEIGHT);\n      }\n   }\n\n   onConfirm(): void {\n      const selectedSubEntities: Set<string> = new Set<string>();\n      this.subEntities.forEach(\n            (value: boolean, key: string) => {\n               if (value) {\n                  selectedSubEntities.add(key);\n               }\n            });\n\n      const selectedGraphs: Set<string> = new Set<string>();\n      this.graphs.forEach(\n            (value: boolean, key: string) => {\n               if (value) {\n                  selectedGraphs.add(key);\n               }\n            });\n\n      const result: PerfChartExportOptions = {\n         selectedSubEntities: Array.from(selectedSubEntities),\n         selectedGraphs: Array.from(selectedGraphs),\n      };\n      VsanUiUtils.closeModalDialog(result);\n   }\n\n   escapeName(name: string): string {\n      return FileUtils.escape(name);\n   }\n}\n","<!--Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-edit-prompt\n      [title]=\"'vsan.perf.chart.exportOptions.title' | localized\"\n      [confirmText]=\"'vsan.perf.chart.exportOptions.confirm.button' | localized\"\n      (onConfirm)=\"onConfirm()\">\n   <div class=\"dialog-container\">\n      <div>{{\"vsan.perf.chart.exportOptions.info\" | localized}}</div>\n      <div *ngIf=\"subEntities.size > 0 && showSubEntities\"\n           class=\"sub-entities-container\">\n         <div>{{\"vsan.perf.chart.exportOptions.selectVMDKs\" | localized}}</div>\n         <div class=\"checkbox-container\">\n            <clr-checkbox-container *ngFor=\"let subEntity of entityNames\">\n               <clr-checkbox-wrapper>\n                  <input type=\"checkbox\"\n                         clrCheckbox\n                         id=\"{{escapeName(subEntity)}}\"\n                         name=\"{{escapeName(subEntity)}}\"\n                         [ngModel]=\"subEntities.get(subEntity)\"\n                         (ngModelChange)=\"subEntities.set(subEntity, $event)\"/>\n                  <label>{{subEntity}}</label>\n               </clr-checkbox-wrapper>\n            </clr-checkbox-container>\n         </div>\n      </div>\n      <div>{{\"vsan.perf.chart.exportOptions.selectMetrics\" | localized}}</div>\n      <div class=\"checkbox-container\">\n         <clr-checkbox-container *ngFor=\"let graph of graphNames\">\n            <clr-checkbox-wrapper>\n               <input type=\"checkbox\"\n                      clrCheckbox\n                      id=\"{{escapeName(graph)}}\"\n                      name=\"{{escapeName(graph)}}\"\n                      [ngModel]=\"graphs.get(graph)\"\n                      (ngModelChange)=\"graphs.set(graph, $event)\"/>\n               <label>{{graph}}</label>\n            </clr-checkbox-wrapper>\n         </clr-checkbox-container>\n      </div>\n   </div>\n</vsan-edit-prompt>\n","/* Copyright 2017 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {BasePerfEntity} from \"./base-perf-entity\";\n\nexport class HostDiskPerfEntity extends BasePerfEntity {\n   public diskType: DiskType;\n   public diskGroup: string;\n}\n\nexport enum DiskType {\n   CACHE_DISK,\n   CAPACITY_DISK\n}","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Injectable} from \"@angular/core\";\nimport {VsanPerfPropertyProvider} from \"@generated/vsan-perf-property-provider\";\nimport {VsanIscsiTargetPropertyProvider} from \"@generated/vsan-iscsi-target-property-provider\";\nimport {IscsiTarget} from \"@generated/iscsi-target\";\nimport {IscsiLun} from \"@generated/iscsi-lun\";\nimport {BasePerfEntity} from \"../model/base-perf-entity\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {DiskGroup} from \"@generated/disk-group\";\nimport {DiskInfo} from \"@generated/disk-info\";\nimport {PerfVscsiEntity} from \"@generated/perf-vscsi-entity\";\nimport {PerfVirtualDiskEntity} from \"@generated/perf-virtual-disk-entity\";\nimport {PerfVirtualMachineDiskData} from \"@generated/perf-virtual-machine-disk-data\";\nimport {PerfPhysicalAdapterEntity} from \"@generated/perf-physical-adapter-entity\";\nimport {PerfVnicEntity} from \"@generated/perf-vnic-entity\";\nimport {DiskType, HostDiskPerfEntity} from \"../model/host-disk-entity\";\nimport {ExpandablePerfEntity} from \"../model/expandable-perf-entity\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {NestedPerfEntity} from \"../model/nested-perf-entity\";\nimport {PerfChartDataConstants} from \"@component/chart/performance/perf-chart-util\";\nimport {PerfMonitorViewType} from \"../model/perf-monitor-view-type.model\";\nimport {VmDisksPerfEntity} from \"../model/vm-disks-perf-entity\";\nimport {IoInsightInstance} from \"@generated/io-insight-instance\";\nimport {IoInsightService} from \"@generated/io-insight-service\";\nimport {DiskManagementService} from \"@generated/disk-management-service\";\nimport {Logger} from \"@util/logger\";\n\n/**\n * The wrapper object of VsanPerfPropertyProvider,\n * use this object to transform each response object of the perf multi-entities requests to BasePerfEntity[]\n */\n@Injectable()\nexport class PerfMultiEntitesDataQueryService {\n   constructor(private perfProvider: VsanPerfPropertyProvider,\n         private iscsiTargetProvider: VsanIscsiTargetPropertyProvider,\n         private ioInsightService: IoInsightService,\n         private diskManagementService: DiskManagementService) {\n   }\n\n   async queryEntitiesData(view: PerfMonitorViewType, instance: IoInsightInstance, requestIoInsightData: boolean,\n         isRdtChecksumSupported: boolean, isVsanMaxEnabled: boolean)\n         : Promise<BasePerfEntity[]> {\n      try {\n         let response: any = null;\n         switch (view) {\n            case PerfMonitorViewType.CLUSTER_ISCSI:\n               response = await this.iscsiTargetProvider.getIscsiTargets(ManagedObject.contextObject);\n               return this.parseIscsiTargets(response);\n            case PerfMonitorViewType.HOST_DISK:\n               return await this.getDiskMappings(isVsanMaxEnabled);\n            case PerfMonitorViewType.HOST_PHYSICAL_ADAPTER:\n               response = await this.perfProvider.getHostPhysicalAdapters(\n                     ManagedObject.contextObject);\n               return this.parsePhysicalAdapters(response);\n            case PerfMonitorViewType.HOST_VIRTUAL_ADAPTER:\n               response = await this.perfProvider.getHostVirtualAdapters(\n                     ManagedObject.contextObject);\n               return this.parseVnics(response, isRdtChecksumSupported);\n            case PerfMonitorViewType.VM_VIRTUAL_DISK:\n               response = await this.perfProvider.getVirtualMachineDiskData(\n                     ManagedObject.contextObject, true);\n               return this.parseVirtualDisk(response, requestIoInsightData);\n            case PerfMonitorViewType.CLUSTER_IO_INSIGHT:\n            case PerfMonitorViewType.HOST_IO_INSIGHT:\n               response = await this.ioInsightService.getVirtualMachinesDiskData(\n                     instance, ManagedObject.contextObject);\n               return this.parseVirtualMachinesDiskData(response);\n            default:\n               throw new Error(\"Unsupported multi-entities view detect in method queryEntitiesData(): \" + view);\n         }\n      } catch (e) {\n         Logger.error(\"Unable to fetch perf entities.\", e);\n      }\n   }\n\n   private parseIscsiTargets = (iscsiTargets: IscsiTarget[]): BasePerfEntity[] => {\n      if (iscsiTargets === null || iscsiTargets.length === 0) {\n         return [];\n      }\n      return iscsiTargets\n            .filter(item => !VsanUiUtils.isEmpty(item.luns))\n            .map((item: IscsiTarget): BasePerfEntity => {\n         const target: ExpandablePerfEntity = new ExpandablePerfEntity();\n         target.entityId = PerfChartDataConstants.CLUSTER_ISCSI_TARGET_ENTITY;\n         target.entityName = item.alias;\n         target.entityUuid = item.alias;\n         if (item.luns) {\n            target.children = item.luns.map(this.parseIscsiLun);\n         }\n         return target;\n      });\n   };\n\n   private parseIscsiLun = (lunItem: IscsiLun): BasePerfEntity => {\n      const lun: BasePerfEntity = new BasePerfEntity();\n      lun.entityId = PerfChartDataConstants.CLUSTER_ISCSI_LUN_ENTITY;\n      lun.entityName = lunItem.alias ?\n            lunItem.alias : VsanUiUtils.getString(\n                  \"vsan.monitor.iscsi.performance.lun.name\", lunItem.lunId);\n      lun.entityUuid = lunItem.targetAlias + \"|\" + lunItem.lunId;\n      return lun;\n   };\n\n   private parseVirtualMachinesDiskData = (vmDisksData: PerfVirtualMachineDiskData[]): BasePerfEntity[] => {\n      const result: BasePerfEntity[] = [];\n\n      vmDisksData.forEach(diskData => {\n         const vmDisksPerfEntity: VmDisksPerfEntity = new VmDisksPerfEntity();\n         vmDisksPerfEntity.entityName = diskData.entityLabelName;\n         const vSCSIcontrollers: Map<string, BasePerfEntity> = this.parseSCSIDiskData(diskData);\n         vmDisksPerfEntity.entityUuid = diskData.vmUuid + diskData.entityLabelName;\n         vmDisksPerfEntity.nestedPerfEntity = Array.from(vSCSIcontrollers.values());\n\n         vmDisksPerfEntity.nestedPerfEntity.forEach(perfEntity => {\n            perfEntity.entityId = PerfChartDataConstants.IO_INSIGHT_ENTITY;\n         });\n         result.push(vmDisksPerfEntity);\n      });\n      return result;\n   };\n\n   parseVirtualDisk = (vmDisksData: PerfVirtualMachineDiskData, isIoInsightSupported: boolean)\n         : NestedPerfEntity[] => {\n      if (!vmDisksData.virtualDisks) {\n         return [];\n      }\n\n      const vSCSIcontrollers: Map<string, BasePerfEntity> = this.parseSCSIDiskData(vmDisksData);\n\n      return vmDisksData.virtualDisks.map((disk: PerfVirtualDiskEntity): NestedPerfEntity => {\n         const virtualDisk: NestedPerfEntity = this.createVirtualDiskEntity(disk);\n         const controllerKey: string = \"[\" + disk.datastoreName + \"] \" + disk.vmdkPath;\n         virtualDisk.combinedEntity = vSCSIcontrollers.get(controllerKey);\n         // request IOInsight metrics if the feature is supported\n         if (isIoInsightSupported) {\n            virtualDisk.additionalConfigSpecId = PerfChartDataConstants.IO_INSIGHT_ENTITY;\n         }\n         return virtualDisk;\n      });\n   };\n\n   private parseSCSIDiskData(vmDisksData: PerfVirtualMachineDiskData): Map<string, BasePerfEntity> {\n      const vSCSIcontrollers: Map<string, BasePerfEntity> = new Map<string, BasePerfEntity>();\n\n      if (!vmDisksData.vscsiEntities) {\n         return vSCSIcontrollers;\n      }\n\n      const vmUuid: string = vmDisksData.vmUuid;\n      vmDisksData.vscsiEntities.forEach((entity: PerfVscsiEntity): void => {\n         const vscsi: BasePerfEntity = new BasePerfEntity();\n         vscsi.entityId = PerfChartDataConstants.VM_VIRTUAL_SCSI_ENTITY;\n         vscsi.entityName = VsanUiUtils.getString(\n               \"vsan.monitor.vm.performance.virtualdisk.name\",\n               entity.busId,\n               entity.position);\n         vscsi.entityLabelName = entity.deviceName + \" (\" + vscsi.entityName + \")\";\n         vscsi.entityUuid = vmUuid + \"|\" + vscsi.entityName;\n\n         vSCSIcontrollers.set(entity.vmdkName, vscsi);\n      });\n      return vSCSIcontrollers;\n   }\n\n   private createVirtualDiskEntity = (disk: PerfVirtualDiskEntity): NestedPerfEntity => {\n      const virtualDisk: NestedPerfEntity = new NestedPerfEntity();\n      virtualDisk.entityId = PerfChartDataConstants.VM_VIRTUAL_DISK_ENTITY;\n      virtualDisk.vmdk = disk.vmdkPath;\n      virtualDisk.entityUuid = disk.datastorePath + disk.vmdkPath;\n      virtualDisk.entityName = disk.diskName;\n      virtualDisk.icon = disk.icon;\n      return virtualDisk;\n   };\n\n   private parsePhysicalAdapters = (adapters: PerfPhysicalAdapterEntity[]): BasePerfEntity[] => {\n      if (adapters === null || adapters.length === 0) {\n         return [];\n      }\n      return adapters.map((item: PerfPhysicalAdapterEntity): BasePerfEntity => {\n         const adapter: BasePerfEntity = new BasePerfEntity();\n         adapter.entityId = PerfChartDataConstants.HOST_PHYSICAL_ADAPTER_ENTITY;\n         adapter.entityName = item.deviceName;\n         adapter.entityUuid = [\n            item.hostUuid,\n            item.deviceName].join(\"|\");\n         return adapter;\n      });\n   };\n\n   private parseVnics = (adapters: PerfVnicEntity[], isRdtChecksumSupported: boolean): BasePerfEntity[] => {\n      if (adapters === null || adapters.length === 0) {\n         return [];\n      }\n\n      let vnicAggregationEntity;\n      if (isRdtChecksumSupported) {\n         vnicAggregationEntity = new NestedPerfEntity();\n         vnicAggregationEntity.entityId = PerfChartDataConstants.HOST_NETWORK_ENTITY;\n         vnicAggregationEntity.entityName = VsanUiUtils.getString(\"vsan.monitor.host.performance.virtualAdapter.title\");\n         // the adapters belong to the same host, simply use the hostUuid from the first element.\n         vnicAggregationEntity.entityUuid = adapters[0].hostUuid;\n         vnicAggregationEntity.combinedEntity = new BasePerfEntity();\n         vnicAggregationEntity.combinedEntity.entityId = PerfChartDataConstants.HOST_RDT_NET_ENTITY;\n         vnicAggregationEntity.combinedEntity.entityUuid = adapters[0].hostUuid;\n         vnicAggregationEntity.combinedEntity.entityName = VsanUiUtils.getString(\"vsan.monitor.host.performance.virtualAdapter.title\");\n      } else {\n         vnicAggregationEntity = new BasePerfEntity();\n         vnicAggregationEntity.entityId = PerfChartDataConstants.HOST_NETWORK_ENTITY;\n         vnicAggregationEntity.entityName = VsanUiUtils.getString(\"vsan.monitor.host.performance.virtualAdapter.title\");\n         // the adapters belong to the same host, simply use the hostUuid from the first element.\n         vnicAggregationEntity.entityUuid = adapters[0].hostUuid;\n      }\n\n      const vmks: BasePerfEntity[] = adapters.map((item: PerfVnicEntity): BasePerfEntity => {\n         const adapter: BasePerfEntity = new BasePerfEntity();\n         adapter.entityId = PerfChartDataConstants.HOST_VIRTUAL_ADAPTER_ENTITY;\n         adapter.entityName = item.deviceName;\n         adapter.entityUuid = [\n            item.hostUuid,\n            item.netStackInstanceKey,\n            item.deviceName].join(\"|\");\n         return adapter;\n      });\n\n      // put the aggregation at the top of the vmk adapters\n      vmks.unshift(vnicAggregationEntity);\n      return vmks;\n   };\n\n   private async getDiskMappings(isVsanMaxEnabled: boolean): Promise<BasePerfEntity[]> {\n      if (isVsanMaxEnabled) {\n         return this.parseSingleTierDisks(\n               await this.diskManagementService.getSingleTierDisks(ManagedObject.contextObject));\n      }\n\n      return this.parseDiskGroups(await this.diskManagementService.getDiskMappings(ManagedObject.contextObject));\n   }\n\n   private parseSingleTierDisks(disks: DiskInfo[]): BasePerfEntity[] {\n      if (VsanUiUtils.isEmpty(disks)) {\n         return [];\n      }\n\n      return disks.map((item: DiskInfo): BasePerfEntity => {\n         const entity: NestedPerfEntity = new NestedPerfEntity();\n         entity.entityId = PerfChartDataConstants.VSAN_MAX_DISK_LSOM;\n         entity.entityUuid = item.diskUuid;\n         entity.entityName = item.diskName;\n         entity.combinedEntity = new BasePerfEntity();\n         entity.combinedEntity.entityId = PerfChartDataConstants.VSAN_MAX_DISK_SCSIFW;\n         entity.combinedEntity.entityUuid = item.diskUuid;\n         entity.combinedEntity.entityName = item.diskName;\n         return entity;\n      });\n   }\n\n   private parseDiskGroups = (diskGroups: DiskGroup[]): BasePerfEntity[] => {\n      if (diskGroups === null || diskGroups.length === 0) {\n         return [];\n      }\n      return diskGroups.map((item: DiskGroup): BasePerfEntity => {\n         const group: ExpandablePerfEntity = new ExpandablePerfEntity();\n         group.entityId = PerfChartDataConstants.HOST_DISK_GROUP_ENTITY;\n         group.entityName = item.diskGroupName;\n         group.entityUuid = item.diskGroupUuid;\n         group.children = this.getDisksFromDiskGroup(item);\n         return group;\n      });\n   };\n\n   private getDisksFromDiskGroup = (diskGroup: DiskGroup): BasePerfEntity[] => {\n      const disks: HostDiskPerfEntity[] = [];\n      if (!diskGroup) {\n         return disks;\n      }\n\n      /**\n       * every disk group has only one cache disk\n       */\n      if (diskGroup.cacheDisk) {\n         const cacheDisk: HostDiskPerfEntity = new HostDiskPerfEntity();\n         cacheDisk.entityId = PerfChartDataConstants.HOST_CACHE_DISK_ENTITY;\n         cacheDisk.entityUuid = diskGroup.cacheDisk.diskUuid;\n         cacheDisk.entityName = diskGroup.cacheDisk.diskName;\n         cacheDisk.diskType = DiskType.CACHE_DISK;\n         disks.push(cacheDisk);\n      }\n      /**\n       * disk group has several capacity disks\n       */\n      if (diskGroup.capacityDisks && diskGroup.capacityDisks.length) {\n         diskGroup.capacityDisks.forEach((capacityDisk: DiskInfo) => {\n            const disk: HostDiskPerfEntity = new HostDiskPerfEntity();\n            disk.entityId = PerfChartDataConstants.HOST_CAPACITY_DISK_ENTITY;\n            disk.entityUuid = capacityDisk.diskUuid;\n            disk.entityName = capacityDisk.diskName;\n            disk.diskType = DiskType.CAPACITY_DISK;\n            disks.push(disk);\n         });\n      }\n\n      return disks;\n   };\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {PerfDetailChartsComponent} from \"./view/perf-detail-charts.component\";\nimport {SingleEntityDataPerfComponent} from \"./view/single-entity-data-perf.component\";\nimport {MultiEntitiesDataPerfComponent} from \"./view/multi-entities-data-perf.component\";\nimport {PerfMultiEntitiesMetricsComponent} from \"./view/perf-multi-entities-metrics.component\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {VsanChartModule} from \"@component/chart/chart.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {PerfMultiEntitesDataQueryService} from \"./util/perf-multi-entities-data-query.service\";\nimport {PerfOrchestratorService} from \"@util/performance/perf-orchestrator-service\";\nimport {IllustratedMessageModule} from \"@component/illustrated-message/illustrated-message.module\";\nimport {PerfChartExportComponent} from \"./export/perf-chart-export.component\";\nimport {PerfChartExportOptionsDialogComponent} from \"./export/perf-chart-export-options-dialog.component\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\n\nconst performanceRoutes: Routes = [\n   {\n      path: \"exportOptions\",\n      component: PerfChartExportOptionsDialogComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      FormsModule,\n      CommonModule,\n      ClarityModule,\n      IllustratedMessageModule,\n      UnavailableViewModule,\n      ValidationModule,\n      VsanChartModule,\n      PromptModule,\n      CommonPipeModule,\n      SearchModule,\n      RouterModule.forChild(performanceRoutes),\n      CommonDirectiveModule,\n   ],\n   declarations: [\n      PerfDetailChartsComponent,\n      SingleEntityDataPerfComponent,\n      MultiEntitiesDataPerfComponent,\n      PerfMultiEntitiesMetricsComponent,\n      PerfChartExportComponent,\n      PerfChartExportOptionsDialogComponent,\n   ],\n   exports: [\n      SingleEntityDataPerfComponent,\n      MultiEntitiesDataPerfComponent,\n      PerfChartExportOptionsDialogComponent,\n      PerfDetailChartsComponent,\n   ],\n   providers: [\n      PerfMultiEntitesDataQueryService,\n      PerfOrchestratorService,\n   ],\n})\nexport class PerformanceCommonModule {\n}\n"],"sourceRoot":"webpack:///"}