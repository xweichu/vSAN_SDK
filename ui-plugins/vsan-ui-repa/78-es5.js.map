{"version":3,"sources":["webpack:///src/app/vsan/common/component/file-share-perf/file-share-perf-data.ts","webpack:///src/app/vsan/common/component/cell/label-cell.service.ts","webpack:///src/app/vsan/common/component/cell/storage-policy-cell.component.ts","webpack:///src/app/vsan/common/component/file-share-perf/file-share-perf-details.html","webpack:///src/app/vsan/common/component/cell/storage-policy-cell.html","webpack:///src/app/vsan/common/component/file-share-perf/file-share-perf-details.component.ts","webpack:///src/app/vsan/common/component/cell/label-cell.component.ts","webpack:///src/app/vsan/common/component/file-share-perf/file-share-perf.module.ts","webpack:///src/app/vsan/common/component/file-share-perf/volume-perf-data.ts","webpack:///src/app/vsan/common/component/cell/label-cell.html"],"names":["FileSharePerfData","fileShare","isSmbProtocolSupported","isSmbProtocolLayerPerformanceSupported","LabelCellService","_labelClicked","onLabelClicked","asObservable","labelData","next","StoragePolicyCell","navigationService","Icon","onPolicyClicked","navigateToVmStoragePoliciesView","storagePolicyId","FileSharePerfDetails","queryPerformanceData","hasEditPrivilege","isPerfEnabled","_volumePerfData","value","resetProps","validate","commonPerfData","errorMsg","setEntityPerfView","currentTimeRange","createTimeRange","TIME_RANGE_PICKER_STATE","HOUR_INTERVAL","createNoSecondsDate","volumePerfData","fileSharePerfData","setFileServicePerfView","setVmPerfView","currentView","VM_VIRTUAL_DISK","currentEntity","containerVolumePerfData","perfEntityData","initialEntityId","entityUuid","CLUSTER_FILE_SERVICE","fileShareEntity","getFileShareEntity","protocolEntity","isPerformanceServiceEnabled","perfDisabledSpec","PERF_DISABLED","masterNodeTimeDiffMessage","validateMasterNodeTime","currentTimeOnMasterNode","alertType","WARNING","emit","navigateToFileSharesPerfView","navigateToVmPerfView","performanceContext","viewType","getFileShareEntityUuid","navigateTo","CLUSTER_PERFORMANCE","clusterRef","selectedEntityName","entityName","VM_PERFORMANCE","vmRef","LAST_X_HOURS","LabelCell","labelCellService","columnWidth","$","outerWidth","seeMoreWidth","getTextWidth","getString","i","currentWidth","labelsToShow","entityLabels","length","label","width","key","push","text","textStyles","family","FONT_FAMILY","size","FONT_SIZE","SPACE_BETWEEN_ITEMS","emitClick","FileSharePerfModule","VolumePerfData"],"mappings":"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","file":"78-es5.js","sourcesContent":["/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {VsanFileServiceShare} from \"@generated/vsan-file-service-share\";\n\n/**\n * Model for passing data from volume details to volume details performance tab.\n */\n\nexport class FileSharePerfData {\n   constructor(\n         public fileShare: VsanFileServiceShare,\n         public isSmbProtocolSupported: boolean,\n         public isSmbProtocolLayerPerformanceSupported: boolean = false) {\n   }\n}\n","/* Copyright (c) 2020 VMware, Inc. All rights reserved. VMware Confidential */\nimport {Injectable} from \"@angular/core\";\nimport {Observable, Subject} from \"rxjs\";\nimport {LabelData} from \"@generated/label-data\";\n\n/**\n * This service is used in conjunction with the LabelCell component.\n * It facilitates label click emit and subscription.\n */\n@Injectable()\nexport class LabelCellService {\n   private _labelClicked: Subject<LabelData> = new Subject<LabelData>();\n   onLabelClicked: Observable<LabelData> = this._labelClicked.asObservable();\n\n   emitClick(labelData: LabelData) {\n      this._labelClicked.next(labelData);\n   }\n}","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {Icon} from \"@util/icon\";\nimport {NavigationService} from \"@navigation/navigation.service\";\n\n@Component({\n   templateUrl: \"storage-policy-cell.html\",\n   selector: \"storage-policy-cell\",\n   styleUrls: [\"storage-policy-cell.scss\"]\n})\nexport class StoragePolicyCell {\n\n   // Enable Enums for direct use in html template.\n   Icon = Icon;\n\n   @Input()\n   storagePolicyName: string;\n\n   @Input()\n   storagePolicyId: string;\n\n   constructor(private navigationService: NavigationService) {}\n\n   onPolicyClicked = () => {\n      this.navigationService.navigateToVmStoragePoliciesView(this.storagePolicyId);\n   };\n}","<!--Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<span class=\"spinner central-spinner spinner-lg\" *ngIf=\"!volumePerfData\"></span>\n<vsan-validation id=\"file-share-perf-validation\"\n                 *ngIf=\"errorMsg\"\n                 [alert]=\"errorMsg\"\n                 (onClosed)=\"errorMsg = null\">\n</vsan-validation>\n<vsan-unavailable-view *ngIf=\"!isPerfEnabled && commonPerfData\"\n                       [clusterRef]=\"clusterRef\"\n                       [unavailableViewSpec]=\"perfDisabledSpec\"\n                       [hasEditPrivilege]=\"hasEditPrivilege\"\n                       [refreshAfterCompletion]=\"false\"\n                       (configureComplete)=\"fetch()\">\n</vsan-unavailable-view>\n<ng-container *ngIf=\"isPerfEnabled && volumePerfData\">\n   <vsan-single-entity-data-perf [commonPerfData]=\"commonPerfData\"\n                                 [currentTimeRange]=\"currentTimeRange\"\n                                 [showExportAllButton]=\"false\"\n                                 [currentEntity]=\"currentEntity\"\n                                 [entityTypeId]=\"currentEntity.entityId\">\n   </vsan-single-entity-data-perf>\n   <div>\n      <button id=\"performance-navigation-btn\"\n              class=\"btn btn-sm btn-link no-spacing\"\n              (click)=\"navigateToPerformance()\">\n         {{\"cns.volumes.container.grid.details.tab.performance.navigateToPerformance.label\" | localized}}\n      </button>\n   </div>\n</ng-container>\n","<a *ngIf=\"storagePolicyName && storagePolicyName !== storagePolicyId\"\n   href=\"javascript://\"\n   (click)=\"onPolicyClicked()\">\n   <clr-icon [attr.shape]=\"Icon.VM_STORAGE_PROFILE_IMAGE\" aria-hidden=\"true\"></clr-icon>\n   <span>{{storagePolicyName}}</span>\n</a>\n<div *ngIf=\"storagePolicyName && storagePolicyName === storagePolicyId\">\n   <span>{{storagePolicyId}}</span>\n</div>\n<div *ngIf=\"!storagePolicyName\">\n   <span>{{'vsan.na.label' | localized}}</span>\n</div>\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {PerfTimeRangeData} from \"@generated/perf-time-range-data\";\nimport {PerfMonitorViewType} from \"../../../performance/model/perf-monitor-view-type.model\";\nimport {PerfMonitorCommonPropsData} from \"@generated/perf-monitor-common-props-data\";\nimport {BasePerfEntity} from \"../../../performance/model/base-perf-entity\";\nimport {RangePickerState} from \"@component/datetime-picker/time-range-picker/range-picker-state\";\nimport {PerformanceUtils} from \"../../../performance/util/perf-utils\";\nimport {AlertType} from \"@component/validation/alert-type\";\nimport {PerformanceContext} from \"@navigation/context/performance-context\";\nimport {UnavailableViewSpec} from \"@component/unavailable-view/unavailable-view-spec\";\nimport {VsanFileShareUtils} from \"../../../file-services/shares/file-share-util\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\nimport {FileShareEntity} from \"../../../performance/model/file-share-entity\";\nimport {VolumePerfData} from \"@component/file-share-perf/volume-perf-data\";\nimport {ManagedObject} from \"@service/managed-object\";\n\n/**\n * This component is used to show performance details of a CNS file volume / file share for the last 1 hour.\n */\n@Component({\n   templateUrl: \"file-share-perf-details.html\",\n   styleUrls: [\"file-share-perf-details.scss\"],\n   selector: \"file-share-perf-details\",\n})\nexport class FileSharePerfDetails {\n\n   private static readonly HOUR_INTERVAL: number = 1;\n   private static readonly TIME_RANGE_PICKER_STATE: RangePickerState = RangePickerState.LAST_X_HOURS;\n\n   private _volumePerfData: VolumePerfData;\n\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Input()\n   set volumePerfData(value: VolumePerfData) {\n      this.resetProps();\n      this._volumePerfData = value;\n      if (!value) {\n         return;\n      }\n      this.validate(value.commonPerfData);\n      if (this.errorMsg) {\n         return;\n      }\n      this.setEntityPerfView();\n   }\n\n   get volumePerfData(): VolumePerfData {\n      return this._volumePerfData;\n   }\n\n   @Output()\n   queryPerformanceData: EventEmitter<any> = new EventEmitter();\n\n   perfDisabledSpec: UnavailableViewSpec;\n   hasEditPrivilege: boolean = false;\n   isPerfEnabled: boolean = false;\n\n   errorMsg: string;\n   alertType: string;\n\n   commonPerfData: PerfMonitorCommonPropsData;\n   currentTimeRange: PerfTimeRangeData;\n   currentView: PerfMonitorViewType;\n   currentEntity: BasePerfEntity;\n   initialEntityId: string;\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   setEntityPerfView(): void {\n      this.commonPerfData = this._volumePerfData.commonPerfData;\n      this.currentTimeRange = VsanDateTimeUtils.createTimeRange(FileSharePerfDetails.TIME_RANGE_PICKER_STATE,\n            FileSharePerfDetails.HOUR_INTERVAL,\n            VsanDateTimeUtils.createNoSecondsDate(FileSharePerfDetails.HOUR_INTERVAL));\n      if (this.volumePerfData.fileSharePerfData) {\n         this.setFileServicePerfView();\n      } else {\n         this.setVmPerfView();\n      }\n   }\n\n   private setVmPerfView(): void {\n      this.currentView = PerfMonitorViewType.VM_VIRTUAL_DISK;\n      this.currentEntity = this._volumePerfData.containerVolumePerfData.perfEntityData;\n      this.initialEntityId = this.currentEntity.entityUuid;\n   }\n\n   private setFileServicePerfView(): void {\n      this.currentView = PerfMonitorViewType.CLUSTER_FILE_SERVICE;\n      const fileShareEntity: FileShareEntity = VsanFileShareUtils.getFileShareEntity(\n            this.volumePerfData.fileSharePerfData.fileShare,\n            this.volumePerfData.fileSharePerfData.isSmbProtocolSupported,\n            this.volumePerfData.fileSharePerfData.isSmbProtocolLayerPerformanceSupported);\n      this.currentEntity = fileShareEntity.protocolEntity || fileShareEntity;\n      this.initialEntityId = this.currentEntity.entityUuid;\n   }\n\n   private validate(commonPerfData: PerfMonitorCommonPropsData): void {\n      if (!commonPerfData) {\n         return;\n      }\n      this.hasEditPrivilege = commonPerfData.hasEditPrivilege;\n      this.isPerfEnabled = commonPerfData.isPerformanceServiceEnabled;\n      if (this.isPerfEnabled) {\n         this.perfDisabledSpec = null;\n      } else {\n         this.perfDisabledSpec = UnavailableViewSpec.PERF_DISABLED;\n         return;\n      }\n\n      /*\n       * Display a warning message on the UI when the difference between\n       * client browser time and Master Node host time is more than 1 hour\n       */\n      const masterNodeTimeDiffMessage: string = PerformanceUtils.validateMasterNodeTime(\n            commonPerfData.currentTimeOnMasterNode);\n      if (masterNodeTimeDiffMessage) {\n         this.errorMsg = masterNodeTimeDiffMessage;\n         this.alertType = AlertType.WARNING;\n      }\n   }\n\n   fetch(): void {\n      // Emit perf data in volume details as the cache is stored there.\n      this.queryPerformanceData.emit();\n   }\n\n   private resetProps(): void {\n      this.perfDisabledSpec = null;\n      this.hasEditPrivilege = false;\n      this.isPerfEnabled = false;\n\n      this.errorMsg = null;\n      this.alertType = null;\n\n      this._volumePerfData = null;\n   }\n\n   // Currently only viewType and entityUuid properties are used.\n   navigateToPerformance(): void {\n      if (this.volumePerfData.fileSharePerfData) {\n         this.navigateToFileSharesPerfView();\n      } else {\n         this.navigateToVmPerfView();\n      }\n   }\n\n   private navigateToFileSharesPerfView():void {\n      const performanceContext: PerformanceContext = {\n         viewType: PerfMonitorViewType[this.currentView],\n         entityUuid: VsanFileShareUtils.getFileShareEntityUuid(this.volumePerfData.fileSharePerfData.fileShare),\n      };\n\n      this.navigationService.navigateTo(\n            PlatformExtension.CLUSTER_PERFORMANCE, this.commonPerfData.clusterRef, performanceContext);\n   }\n\n   private navigateToVmPerfView(): void {\n      const performanceContext: PerformanceContext = {\n         viewType: PerfMonitorViewType[PerfMonitorViewType.VM_VIRTUAL_DISK],\n         selectedEntityName: this._volumePerfData.containerVolumePerfData.perfEntityData.entityName,\n      };\n      this.navigationService.navigateTo(PlatformExtension.VM_PERFORMANCE,\n            this._volumePerfData.containerVolumePerfData.vmRef, performanceContext);\n   }\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {LabelData} from \"@generated/label-data\";\nimport {LabelCellService} from \"@component/cell/label-cell.service\";\nimport {TextStyles, StringUtil} from \"@util/string-util\";\n\n@Component({\n   templateUrl: \"label-cell.html\",\n   styleUrls: [\"label-cell.scss\"],\n   selector: \"label-cell\",\n})\n\n/**\n * The component shows the associated labels of a CNS volume or a file share object. When the label column of the grid\n * is shrunk \"SEE ALL\" button is shown. When the column is expanded labels are shown.\n * The component is used in the grid and grid details.\n */\n\nexport class LabelCell {\n\n   @Input()\n   entityLabels: LabelData[];\n\n   @Input()\n   showSeeAllButton: boolean;\n\n   @Input()\n   isClickable: boolean;\n\n   // Margin between labels and padding between labels' key-value pairs.\n   private static SPACE_BETWEEN_ITEMS: number = 46;\n\n   private static FONT_FAMILY: string = StringUtil.FONT_FAMILY;\n   private static FONT_SIZE: number = 11;\n\n   constructor(private labelCellService: LabelCellService) {}\n\n   labelsToShowInline(): any[] {\n      const columnWidth: number = $(\"#labelColumn\").outerWidth();\n      const seeMoreWidth: number = this.getTextWidth(VsanUiUtils.getString((\"cns.volumes.container.grid.see.all\")));\n      let i: number = 0;\n      let currentWidth: number = 0;\n      const labelsToShow: any[] = [];\n      if (!this.entityLabels || !this.entityLabels.length) {\n         return labelsToShow;\n      }\n      for (const label of this.entityLabels) {\n         const width: number = this.getTextWidth(label.key + label.value);\n         if (currentWidth + width < columnWidth) {\n            // Label is smaller than column, now check how it will act with see more button.\n            if (currentWidth + width < columnWidth - seeMoreWidth) {\n               // smaller than column + see more button, best case, draw the label.\n               labelsToShow.push(label);\n            } else if (i === this.entityLabels.length - 1) {\n               // smaller than column, larger than column + see more, but since this is the last label and there will be\n               // no See more button, we are fine to draw this label.\n               labelsToShow.push(label);\n            } else {\n               break;\n            }\n         } else {\n            break;\n         }\n         currentWidth += width;\n         i++;\n      }\n      return labelsToShow;\n   }\n\n   private getTextWidth(text: string): number {\n      const textStyles: TextStyles = {family: LabelCell.FONT_FAMILY, size: LabelCell.FONT_SIZE};\n      return StringUtil.getTextWidth(text, textStyles) + LabelCell.SPACE_BETWEEN_ITEMS;\n   }\n\n   onLabelClick(label: LabelData): void {\n      this.labelCellService.emitClick(label);\n   }\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {VsanCommonModule} from \"../../vsan-common.module\";\nimport {VsanChartModule} from \"@component/chart/chart.module\";\nimport {FileSharePerfDetails} from \"@component/file-share-perf/file-share-perf-details.component\";\nimport {PerformanceCommonModule} from \"../../../performance/performance-common.module\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      CommonPipeModule,\n      UnavailableViewModule,\n      VsanCommonModule,\n      PerformanceCommonModule,\n      VsanChartModule,\n   ],\n   declarations: [\n      FileSharePerfDetails\n   ],\n   exports: [\n      FileSharePerfDetails\n   ]\n})\nexport class FileSharePerfModule {\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {PerfMonitorCommonPropsData} from \"@generated/perf-monitor-common-props-data\";\nimport {FileSharePerfData} from \"@component/file-share-perf/file-share-perf-data\";\nimport {ContainerVolumePerfData} from \"@component/file-share-perf/container-volume-perf-data\";\n\n/**\n * Model for passing data from volume details to volume details performance tab.\n */\n\nexport class VolumePerfData {\n   constructor(\n         public commonPerfData: PerfMonitorCommonPropsData,\n         public fileSharePerfData?: FileSharePerfData,\n         public containerVolumePerfData?: ContainerVolumePerfData) {\n   }\n}\n","<!--Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n\n<ng-container *ngIf=\"showSeeAllButton && entityLabels?.length\">\n   <ng-container *ngIf=\"labelsToShowInline(); let labelsToShow\">\n      <ng-container *ngTemplateOutlet=\"labels; context: {labels: labelsToShow}\"></ng-container>\n      <clr-signpost *ngIf=\"entityLabels.length > labelsToShow.length\">\n         <button class=\"btn btn-sm btn-link no-spacing\" clrSignpostTrigger>\n            {{'cns.volumes.container.grid.see.all' | localized}}\n         </button>\n         <clr-signpost-content clrPosition=\"right-bottom\" *clrIfOpen>\n            <ng-container *ngTemplateOutlet=\"labels; context: {labels: entityLabels}\"></ng-container>\n         </clr-signpost-content>\n      </clr-signpost>\n   </ng-container>\n</ng-container>\n<ng-container *ngIf=\"!entityLabels?.length\">\n   {{'vsan.na.label' | localized }}\n</ng-container>\n<ng-container *ngIf=\"!showSeeAllButton && entityLabels?.length\">\n   <ng-container *ngTemplateOutlet=\"labels; context: {labels: entityLabels}\"></ng-container>\n</ng-container>\n\n<ng-template #labels let-labels=\"labels\">\n   <div *ngFor=\"let label of labels\"\n        [ngClass]=\"{'clickable': isClickable}\"\n        class=\"label label-light-blue\"\n        (click)=\"onLabelClick(label)\">\n      {{ label.key }}\n      <span class=\"badge\">{{ label.value }}</span>\n   </div>\n</ng-template>"]}