{"version":3,"sources":["./src/app/vsan/update/hcl-database.component.ts","./src/app/vsan/common/directive/signpost-title/signpost-title.directive.ts","./src/app/vsan/update/update.html","./src/app/vsan/common/component/datagrid/tree-datagrid.module.ts","./src/app/vsan/common/service/flow/error-handler.decorator.ts","./src/app/vsan/update/release-catalog.component.ts","./src/app/vsan/update/update.module.ts","./src/app/vsan/common/component/popup-list/popup-list.module.ts","./src/app/vsan/common/component/navigation/vsan-breadcrumb.module.ts","./src/app/vsan/update/duplicate-pci-id-update-dialog.html","./src/app/vsan/common/component/cell/common-cells.module.ts","./src/app/vsan/common/component/inventory/inventory-browser.module.ts","./src/app/vsan/update/duplicate-pci-id-update-dialog.component.ts","./src/app/vsan/update/hcl-database.html","./src/app/vsan/update/release-catalog.html","./src/app/vsan/update/update.component.ts","./src/app/vsan/common/vsan-common.module.ts","./src/app/vsan/common/component/search/search.module.ts","./src/app/vsan/common/component/action-button/action-button.module.ts"],"names":[],"mappings":"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","file":"115-es2015.js","sourcesContent":["/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {UpdateDbService} from \"@generated/update-db-service\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"hcl-database.html\",\n   selector: \"vsan-hcl-database\",\n})\nexport class HclDatabaseComponent implements OnInit {\n\n   private static readonly MILLISECONDS_PER_DAY: number = 86400000;\n\n   /**\n    * Whether the upload action is allowed\n    */\n   @Input()\n   hasEditPermissions: boolean = false;\n\n   /**\n    * Pass any errors to the parent container\n    */\n   @Output()\n   onError: EventEmitter<string> = new EventEmitter<string>();\n\n   clusterRef: ManagedObject;\n   lastUpdated: string;\n\n   @LoadingIndicator()\n   updatingIndicatorVisible: boolean;\n\n   constructor(private updateDbService: UpdateDbService) {\n   }\n\n   ngOnInit(): void {\n      this.load();\n   }\n\n   @RefreshHandler\n   @Loader({srMessage: \"vsan.vc.configure.hclDatabase.title\"})\n   async load(): Promise<void> {\n      this.lastUpdated = undefined;\n      const timestamp: number = await this.updateDbService.getHclLastUpdatedDate(ManagedObject.contextObject);\n      this.handleLastUpdateResult(timestamp);\n   }\n\n   private handleLastUpdateResult = (timestamp: number) => {\n      if (timestamp) {\n         const now: Date = new Date();\n         const date: Date = new Date(timestamp);\n         const days: number = (now.getTime() - date.getTime()) / HclDatabaseComponent.MILLISECONDS_PER_DAY;\n         this.lastUpdated = VsanUiUtils.getString(\"vsan.vc.configure.hclDatabase.value.lastUpdated\",\n               days.toFixed(0), date.toLocaleDateString());\n      } else {\n         this.lastUpdated = VsanUiUtils.getString(\"vsan.vc.configure.releaseCatalog.value.lastUpdated.unknown\");\n      }\n   };\n\n   @ErrorHandler()\n   handleError(error: string): void {\n      this.updateError(VsanUiUtils.getString(\"vsan.vc.configure.hclDatabase.error.noVersionInfo\"));\n   }\n\n   updateError(error: string): void {\n      this.onError.emit(error);\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterViewInit, Directive, ElementRef, Input, Renderer2} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * Attribute directive for setting a custom title to the clr-icon inside a clr-signpost.\n * It also adds aria-label with the same value and aria-expanded=\"false\" to the button, holding the icon.\n * Used for changing the title when a clr-icon is not explicitly added inside a clr-signpost.\n */\n@Directive({\n   selector: \"clr-signpost\",\n})\nexport class SignpostTitleDirective implements AfterViewInit {\n   private readonly BUTTON_TAG_NAME: string = \"button\";\n   private readonly CLR_ICON_TAG_NAME: string = \"clr-icon\";\n\n   private readonly TITLE_ATTRIBUTE: string = \"title\";\n   private readonly ARIA_EXPANDED_ATTRIBUTE: string = \"aria-expanded\";\n   private readonly ARIA_LABEL_ATTRIBUTE: string = \"aria-label\";\n\n   @Input(\"vsan-signpost-title\")\n   signpostTitle: string;\n\n   constructor(private el: ElementRef<HTMLElement>,\n         private renderer: Renderer2) {\n   }\n\n   ngAfterViewInit(): void {\n      if (!this.signpostTitle) {\n         return;\n      }\n\n      const signpostIcon: Element = this.el.nativeElement.getElementsByTagName(this.CLR_ICON_TAG_NAME).item(0);\n      if (signpostIcon) {\n         this.renderer.setAttribute(signpostIcon, this.TITLE_ATTRIBUTE, VsanUiUtils.getString(this.signpostTitle));\n      }\n      const button: Element = this.el.nativeElement.getElementsByTagName(this.BUTTON_TAG_NAME).item(0);\n      if (button) {\n         this.renderer.setAttribute(button, this.ARIA_EXPANDED_ATTRIBUTE, \"false\");\n         this.renderer.setAttribute(button, this.ARIA_LABEL_ATTRIBUTE, VsanUiUtils.getString(this.signpostTitle));\n      }\n   }\n}\n","<!--Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<h5>\n   {{\"vsan.vc.configure.update.title\" | localized}}\n</h5>\n<vsan-validation *ngIf=\"alertMessage\"\n                 (onClosed)=\"alertMessage = null\"\n                 [alert]=\"alertMessage\">\n</vsan-validation>\n\n<vsan-hcl-database [hasEditPermissions]=\"hasEditPermissions\"\n                   (onError)=\"setErrorMessage($event)\">\n</vsan-hcl-database>\n\n<vsan-release-catalog *ngIf=\"isUpdateVumReleaseCatalogOfflineSupported\"\n                      [hasEditPermissions]=\"hasEditPermissions\"\n                      (onError)=\"setErrorMessage($event)\">\n</vsan-release-catalog>","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {TreeExpanderComponent} from \"@component/datagrid/tree-expander.component\";\nimport {TreeColumnComponent} from \"@component/datagrid/tree-column.component\";\nimport {EnumeratedFilterComponent} from \"./filter/enumerated-filter.component\";\nimport {EnumeratedFilterItemComponent} from \"./filter/enumerated-filter-item.component\";\nimport {EnumFilterComponent} from \"@component/datagrid/filter/enum-filter.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n   ],\n   declarations: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumeratedFilterComponent,\n      EnumFilterComponent,\n   ],\n   exports: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumFilterComponent,\n   ],\n})\nexport class TreeDatagridModule {\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {LoadingFlowWrapper} from \"@service/flow/loading-flow-wrapper.data\";\n\n/**\n * This property decorator is supposed to be used along with the @Loader decorator.\n * If an exception is thrown during the execution of the method decorated with @Loader\n * the ErrorHandler method will be invoked. You can define as many ErrorHandlers as you want,\n * but they must be with different names. The name can be provided as input to the decorator.\n * If a name is set to the ErrorHandler it will handle only the errors thrown by Loader functions\n * with the same name. If no name is passed to the ErrorHandler, it will handle only the errors\n * from Loader functions with no name.\n *\n * <pre>\n * // Example 1:\n * @Loader()\n * loadSyncData(): any {\n *    throw new Error(\"Failed to load sync data\");\n * }\n *\n * @ErrorHandler()\n * handleError(err: any) {\n *    // handle the error.\n * }\n *...\n *\n * // Example 2\n *\n * @Loader({name: \"data-loading-flow})\n * async loadAsyncData(): Promise<any> {\n *    return Promise.reject(\"Failed to load async data\");\n * }\n *\n * @ErrorHandler({name: \"data-loading-flow})\n * handleError(err: any) {\n *    // handle the error.\n * }\n * ...\n * </pre>\n */\nexport function ErrorHandler(props?: ErrorHandlerProperties): MethodDecorator {\n   props = props || {};\n   return (targetClass: any, functionName: string, descriptor: PropertyDescriptor): void => {\n      (new LoadingFlowWrapper(targetClass, props.name)).errorHandler = descriptor.value;\n   };\n}\n\n/**\n * Properties of the ErrorHandler decorator.\n */\nexport interface ErrorHandlerProperties {\n\n   /**\n    * Indicates which @Loder should be handled by this @ErrorHandler\n    */\n   name?: string;\n}\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {UpdateDbService} from \"@generated/update-db-service\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"release-catalog.html\",\n   selector: \"vsan-release-catalog\",\n   styleUrls: [\"release-catalog.scss\"],\n})\nexport class ReleaseCatalogComponent implements OnInit {\n\n   /**\n    * Whether the upload action is allowed\n    */\n   @Input()\n   hasEditPermissions: boolean = false;\n\n   /**\n    * Pass any errors to the parent container\n    */\n   @Output()\n   onError: EventEmitter<string> = new EventEmitter<string>();\n\n   lastUpdated: string;\n\n   @LoadingIndicator()\n   updating: boolean;\n\n   private static readonly MILLISECONDS_PER_DAY: number = 86400000;\n\n   constructor(private updateDbService: UpdateDbService) {\n   }\n\n   ngOnInit(): void {\n      this.fetchData();\n   }\n\n   @RefreshHandler\n   @Loader({srMessage: \"vsan.vc.configure.releaseCatalog.title\"})\n   async fetchData(): Promise<void> {\n      const timestamp: number = await this.updateDbService.getReleaseCatalogLastUpdatedDate(ManagedObject.contextObject);\n      this.handleLastUpdateResult(timestamp);\n   }\n\n   private handleLastUpdateResult = (timestamp: number) => {\n      if (!timestamp) {\n         this.lastUpdated = null;\n         return;\n      }\n      const now: Date = new Date();\n      const date: Date = new Date(timestamp);\n\n      const days: number = (now.getTime() - date.getTime()) / ReleaseCatalogComponent.MILLISECONDS_PER_DAY;\n\n      this.lastUpdated = VsanUiUtils.getString(\"vsan.vc.configure.releaseCatalog.value.lastUpdated\",\n            days.toFixed(0), date.toLocaleDateString());\n   };\n\n   @ErrorHandler()\n   handleError(e: string): void {\n      this.onError.emit(e);\n   }\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {UpdateComponent} from \"./update.component\";\nimport {Routes, RouterModule} from \"@angular/router\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {HclDatabaseComponent} from \"./hcl-database.component\";\nimport {UpdateActionsModule} from \"./action/update-actions.module\";\nimport {ReleaseCatalogComponent} from \"./release-catalog.component\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {DuplicatePciIdUpdateDialogComponent} from \"./duplicate-pci-id-update-dialog.component\";\nimport {VsanCommonModule} from \"../common/vsan-common.module\";\nimport {FormsModule} from \"@angular/forms\";\n\nconst updateRoutes: Routes = [\n   {\n      path: \"\",\n      component: UpdateComponent,\n   },\n   {\n      path: \"updateDuplicatePciIdDevices\",\n      component: DuplicatePciIdUpdateDialogComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n      UpdateActionsModule,\n      CommonDirectiveModule,\n      VsanCommonModule,\n      FormsModule,\n      RouterModule.forChild(updateRoutes),\n   ],\n   declarations: [\n      UpdateComponent,\n      HclDatabaseComponent,\n      ReleaseCatalogComponent,\n      DuplicatePciIdUpdateDialogComponent,\n   ],\n})\nexport class UpdateModule {\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {PopupListComponent} from \"@component/popup-list/popup-list.component\";\nimport {PopupListItemDirective} from \"@component/popup-list/popup-list-item.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      CommonPipeModule\n   ],\n   declarations: [\n      PopupListComponent,\n      PopupListItemDirective\n   ],\n   exports: [\n      PopupListComponent,\n      PopupListItemDirective\n   ]\n})\nexport class PopupListModule {\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {VsanBreadcrumbNavComponent} from \"./vsan-breadcrumb-nav.component\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\n\n@NgModule({\n   imports: [CommonModule, ClarityModule, CommonDirectiveModule, CommonPipeModule],\n   declarations: [VsanBreadcrumbNavComponent],\n   exports: [\n      VsanBreadcrumbNavComponent,\n   ],\n})\nexport class VsanBreadcrumbModule {}\n","<!-- Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-edit-prompt\n      [title]=\"'vsan.cluster.duplicatePciIdDevices.dialog.title' | localized\"\n      [subtitle]=\"clusterName\"\n      [blockButton]=\"loading\"\n      [(alertMessage)]=\"errorMessage\"\n      (onConfirm)=\"ok()\">\n   <div class=\"dialog-content\">\n      <vsan-validation *ngIf=\"isOpenedFromHealthCheck\"\n                       [alertType]=\"'info'\"\n                       [alert]=\"'vsan.cluster.duplicatePciIdDevices.dialog.model.change.info' | localized\"\n                       [allowClose]=\"false\"\n                       [isSmall]=\"true\">\n      </vsan-validation>\n      <clr-datagrid id=\"model-selections-grid\"\n                    class=\"datagrid-compact\"\n                    [clrDgLoading]=\"loading\">\n         <!-- Datagrid Header -->\n         <clr-dg-column class=\"pci-id-column\">\n            {{\"vsan.cluster.duplicatePciIdDevices.dialog.pciId.label\" | localized}}\n         </clr-dg-column>\n\n         <clr-dg-column class=\"model-name-column\">\n            <span>{{\"vsan.cluster.duplicatePciIdDevices.dialog.model.label\" | localized}}</span>\n            <clr-signpost id=\"model-selection-signpost\">\n               <clr-signpost-content *clrIfOpen clrPosition=\"bottom-middle\">\n                  {{\"vsan.cluster.duplicatePciIdDevices.dialog.model.description\" | localized}}\n               </clr-signpost-content>\n            </clr-signpost>\n         </clr-dg-column>\n\n         <clr-dg-column class=\"product-id-column\">\n            {{\"vsan.cluster.duplicatePciIdDevices.dialog.productId.label\" | localized}}\n         </clr-dg-column>\n\n         <clr-dg-column class=\"capacity-column\">\n            {{\"vsan.cluster.duplicatePciIdDevices.dialog.capacity.label\" | localized}}\n         </clr-dg-column>\n\n         <clr-dg-column class=\"identifier-column\">\n            {{\"vsan.cluster.duplicatePciIdDevices.dialog.identifier.label\" | localized}}\n         </clr-dg-column>\n\n         <!-- Datagrid content -->\n         <clr-dg-row *clrDgItems=\"let clusterSelection of clusterSelections\"\n                     [clrDgItem]=\"clusterSelection\">\n\n            <!-- Top level cells -->\n            <clr-dg-cell vsan-show-title class=\"pci-id-cell datagrid-cell\">\n               {{VsanUiUtils.getPciIdLabel(clusterSelection?.sharedSelection?.deviceId?.pciId)}}\n            </clr-dg-cell>\n\n            <clr-dg-cell class=\"model-name-cell dropdown-cell\">\n               <select clrSelect\n                       [ngModel]=\"clusterSelection.sharedSelection.selectedModel?.vcgId\"\n                       (change)=\"onClusterModelChange(clusterSelection, $event.target.value)\">\n                  <option [ngValue]=\"null\" [disabled]=\"true\">\n                     {{\"vsan.cluster.duplicatePciIdDevices.dialog.model.placeholder\" | localized}}\n                  </option>\n                  <option *ngFor=\"let model of clusterSelection?.sharedSelection?.models\"\n                          [value]=\"model.vcgId\"\n                          [selected]=\"clusterSelection?.sharedSelection?.selectedModel?.vcgId == model?.vcgId\">\n                     {{model.vcgModelName}}\n                  </option>\n               </select>\n            </clr-dg-cell>\n\n            <clr-dg-cell vsan-show-title class=\"product-id-cell\">\n               {{clusterSelection?.sharedSelection?.deviceId?.productId}}\n            </clr-dg-cell>\n\n            <clr-dg-cell vsan-show-title class=\"capacity-cell right-align-cell\">\n               {{clusterSelection?.sharedSelection?.deviceId?.diskCapacity | fileSize: 0: CapacityUnit.BYTE: StorageSizeBaseUnit.VENDOR}}\n            </clr-dg-cell>\n\n            <clr-dg-cell vsan-show-title class=\"identifier-cell\"></clr-dg-cell>\n\n            <ng-container ngProjectAs=\"clr-dg-row-detail\"\n                          *ngFor=\"let hostSelection of clusterSelection?.hostSelections || []\">\n               <!--Inner cells-->\n               <clr-dg-row-detail *clrIfExpanded>\n                  <clr-dg-cell vsan-show-title class=\"pci-id-cell\">\n                     <div class=\"indent\">\n                        <clr-icon [attr.shape]=\"Icon.HOST\"></clr-icon>\n                        <span>{{hostSelection?.hostName}}</span>\n                     </div>\n                  </clr-dg-cell>\n\n                  <clr-dg-cell class=\"model-name-cell dropdown-cell\"></clr-dg-cell>\n                  <clr-dg-cell vsan-show-title class=\"product-id-cell\"></clr-dg-cell>\n                  <clr-dg-cell vsan-show-title class=\"capacity-cell\"></clr-dg-cell>\n\n                  <clr-dg-cell vsan-show-title class=\"identifier-cell\">\n                     {{clusterSelection?.sharedSelection?.identifierExtraInfo}}\n                  </clr-dg-cell>\n               </clr-dg-row-detail>\n            </ng-container>\n         </clr-dg-row>\n      </clr-datagrid>\n   </div>\n</vsan-edit-prompt>\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {HealthStatusCell} from \"@component/cell/health-status-cell.component\";\nimport {LabelCell} from \"@component/cell/label-cell.component\";\nimport {StoragePolicyCell} from \"@component/cell/storage-policy-cell.component\";\nimport {MorCell} from \"@component/cell/mor-cell.component\";\nimport {IconItemComponent} from \"@component/cell/icon-item.component\";\nimport {HealthStateItemComponent} from \"@component/cell/health-state-item.component\";\nimport {ListCell} from \"@component/cell/list-cell.component\";\nimport {PspHealthStateItemComponent} from \"@component/cell/psp-health-state-item.component\";\nimport {HealthTestValueComponent} from \"@component/cell/health-test-value.component\";\nimport {HealthLinkCellComponent} from \"@component/cell/health-link-cell.component\";\nimport {HealthMorCellComponent} from \"@component/cell/health-mor-cell.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n      CommonDirectiveModule,\n   ],\n   // TODO: (vasilevd) Move health specific components to a separate common health module\n   declarations: [\n      HealthStatusCell,\n      HealthTestValueComponent,\n      LabelCell,\n      StoragePolicyCell,\n      MorCell,\n      HealthMorCellComponent,\n      ListCell,\n      IconItemComponent,\n      HealthStateItemComponent,\n      PspHealthStateItemComponent,\n      HealthLinkCellComponent,\n   ],\n   exports: [\n      HealthStatusCell,\n      HealthTestValueComponent,\n      LabelCell,\n      StoragePolicyCell,\n      MorCell,\n      HealthMorCellComponent,\n      ListCell,\n      IconItemComponent,\n      HealthStateItemComponent,\n      PspHealthStateItemComponent,\n      HealthLinkCellComponent,\n   ],\n})\nexport class CommonCellsModule {\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {InventoryBrowserComponent} from \"@component/inventory/inventory-browser.component\";\nimport {InventoryNodeComponent} from \"@component/inventory/inventory-node.component\";\nimport {WitnessCandidateInventoryService} from \"@generated/witness-candidate-inventory-service\";\nimport {DatacenterInventoryService} from \"@generated/datacenter-inventory-service\";\nimport {NetworkInventoryService} from \"@generated/network-inventory-service\";\nimport {ComputeInventoryService} from \"@generated/compute-inventory-service\";\nimport {IoInsightInventoryService} from \"@generated/io-insight-inventory-service\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {TreeNodeComponent} from \"@component/inventory/tree-view/tree-node.component\";\nimport {TreeViewComponent} from \"@component/inventory/tree-view/tree-view.component\";\nimport {DropdownObjectSelectorComponent} from \"@component/inventory/dropdown-object-selector/dropdown-object-selector.component\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {InventoryNodesComponent} from \"@component/inventory/inventory-nodes.component\";\nimport {TreeNodesComponent} from \"@component/inventory/tree-view/tree-nodes.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule,\n      SearchModule,\n      CommonDirectiveModule,\n   ],\n   declarations: [\n      InventoryBrowserComponent,\n      InventoryNodesComponent,\n      InventoryNodeComponent,\n      TreeNodeComponent,\n      TreeNodesComponent,\n      TreeViewComponent,\n      DropdownObjectSelectorComponent,\n   ],\n   exports: [\n      InventoryBrowserComponent,\n      DropdownObjectSelectorComponent,\n      TreeViewComponent,\n   ],\n   providers: [\n      WitnessCandidateInventoryService,\n      DatacenterInventoryService,\n      NetworkInventoryService,\n      ComputeInventoryService,\n      IoInsightInventoryService,\n   ],\n})\nexport class InventoryBrowserModule {\n}","/* Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectorRef, Component, OnInit} from \"@angular/core\";\nimport {ClusterVcgDevicesSelection} from \"@generated/cluster-vcg-devices-selection\";\nimport {DeviceVcgEntry} from \"@generated/device-vcg-entry\";\nimport {UpdateDuplicatePciIdDevicesService} from \"@generated/update-duplicate-pci-id-devices-service\";\nimport {DuplicatePciIdUpdateDialogContext} from \"@navigation/context/duplicate-pci-id-update-context\";\nimport {ClusterComputeResource} from \"@service/client/dataservice/data-service-property\";\nimport {DataServiceClient} from \"@service/client/dataservice/data-service.service\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Icon} from \"@util/icon\";\nimport {CapacityUnit, StorageSizeBaseUnit, VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"duplicate-pci-id-update-dialog.html\",\n   styleUrls: [\"duplicate-pci-id-update-dialog.scss\"],\n   selector: \"vsan-duplicate-pci-id-update-dialog\",\n})\nexport class DuplicatePciIdUpdateDialogComponent implements OnInit {\n   Icon: typeof Icon = Icon;\n   CapacityUnit: typeof CapacityUnit = CapacityUnit;\n   StorageSizeBaseUnit: typeof StorageSizeBaseUnit = StorageSizeBaseUnit;\n   VsanUiUtils: typeof VsanUiUtils = VsanUiUtils;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   @ErrorMessage()\n   errorMessage: string;\n\n   clusterName: string;\n   clusterSelections: ClusterVcgDevicesSelection[];\n   originalSelections: ClusterVcgDevicesSelection[];\n   clusterRef: ManagedObject;\n   isOpenedFromHealthCheck: boolean;\n\n   constructor(private updateService: UpdateDuplicatePciIdDevicesService,\n         private dataService: DataServiceClient,\n         private cdRef: ChangeDetectorRef) {\n   }\n\n   @Loader({srMessage: \"vsan.cluster.duplicatePciIdDevices.dialog.title\"})\n   async ngOnInit(): Promise<void> {\n      const context: DuplicatePciIdUpdateDialogContext = VsanUiUtils.getModalContext();\n      this.clusterRef = context ? context.clusterRef : ManagedObject.contextObject;\n      this.clusterName = context?.clusterName;\n      this.isOpenedFromHealthCheck = !!context?.isOpenedFromHealthCheck;\n\n      if (!this.clusterName) {\n         this.clusterName =\n               await this.dataService.getProperty(ClusterComputeResource.name, ManagedObject.contextObject);\n      }\n\n      await this.fetch();\n   }\n\n   private async fetch(): Promise<void> {\n      this.clusterSelections = await this.updateService.getDuplicateDevices(this.clusterRef);\n      this.originalSelections = VsanUiUtils.deepClone(this.clusterSelections);\n   }\n\n   @Loader({srMessage: \"vsan.common.select\"})\n   async ok(): Promise<void> {\n      const isConfigurationChanged: boolean = this.isConfigurationChanged();\n      if (isConfigurationChanged) {\n         await this.updateService.setDuplicateDevices(this.clusterRef, this.clusterSelections);\n      }\n      VsanUiUtils.closeModalDialog(isConfigurationChanged);\n   }\n\n   private isConfigurationChanged(): boolean {\n      return this.clusterSelections.some((s, index) => {\n         const currentSelection: DeviceVcgEntry = s.sharedSelection.selectedModel;\n         const originalSelection: DeviceVcgEntry = this.originalSelections[index].sharedSelection.selectedModel;\n         return (currentSelection && !originalSelection)\n               || (currentSelection && currentSelection.vcgId !== originalSelection.vcgId);\n      });\n   }\n\n   onClusterModelChange(clusterSelection: ClusterVcgDevicesSelection, value: string): void {\n      const selectedVcgId: number = VsanUiUtils.toNumber(value);\n      clusterSelection.sharedSelection.selectedModel =\n            clusterSelection.sharedSelection.models.find(m => m.vcgId === selectedVcgId);\n      this.onClusterDeviceSelection(clusterSelection);\n   }\n\n   private onClusterDeviceSelection(selection: ClusterVcgDevicesSelection): void {\n      const selectedModel: DeviceVcgEntry = selection.sharedSelection.selectedModel;\n      // Set the cluster level selection to all of the hosts.\n      selection.hostSelections.forEach(s => {\n         s.sharedSelection.selectedModel = selectedModel;\n      });\n      this.cdRef.detectChanges();\n   }\n}\n","<!--Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-stack-view id=\"vsan-hcl-database\">\n   <clr-stack-header>\n      <span vsan-auto-focus>\n         {{\"vsan.vc.configure.hclDatabase.title\" | localized}}\n      </span>\n      <vsan-hcl-database-update-action\n            class=\"stack-action\"\n            [btnClasses]=\"'btn btn-link btn-sm'\"\n            [isDisabled]=\"!hasEditPermissions\"\n            (error)=\"updateError($event)\"\n            (updateComplete)=\"load()\">\n      </vsan-hcl-database-update-action>\n   </clr-stack-header>\n\n   <clr-stack-block id=\"last-updated-date-label\">\n      <clr-stack-label>{{\"vsan.vc.configure.hclDatabase.label.lastUpdated\" | localized}}</clr-stack-label>\n      <clr-stack-content>\n         <span id=\"hcl-last-updated-date\" *ngIf=\"!updatingIndicatorVisible\">\n            {{lastUpdated ? lastUpdated : \"vsan.na.label\" | localized}}\n         </span>\n         <span id=\"hcl-loading-indicator\" *ngIf=\"updatingIndicatorVisible\">\n            {{ \"vsan.loading\" | localized }}\n         </span>\n      </clr-stack-content>\n   </clr-stack-block>\n\n</clr-stack-view>","<!--Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-stack-view id=\"vsan-release-catalog\">\n   <clr-stack-header>\n      <span vsan-auto-focus>\n         {{\"vsan.vc.configure.releaseCatalog.title\" | localized}}\n      </span>\n      <vsan-release-catalog-update-action\n            class=\"stack-action\"\n            [btnClasses]=\"'btn btn-link btn-sm'\"\n            [hasEditPermissions]=\"hasEditPermissions\"\n            (updateComplete)=\"fetchData()\"\n            (error)=\"handleError($event)\">\n      </vsan-release-catalog-update-action>\n   </clr-stack-header>\n\n   <clr-stack-block id=\"last-updated-date-label\">\n      <clr-stack-label>{{\"vsan.vc.configure.releaseCatalog.label.date\" | localized}}</clr-stack-label>\n      <clr-stack-content>\n         <span id=\"loading-indicator\" *ngIf=\"updating\">{{ 'vsan.loading' | localized }}</span>\n         <span id=\"last-updated-date\" *ngIf=\"!updating\">{{lastUpdated ? lastUpdated : \"vsan.na.label\" | localized}}</span>\n      </clr-stack-content>\n   </clr-stack-block>\n\n</clr-stack-view>","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\n\n@Component({\n   templateUrl: \"update.html\",\n   selector: \"vsan-update\",\n   styleUrls: [\"update.scss\"],\n})\nexport class UpdateComponent implements OnInit {\n\n   alertMessage: string;\n   hasEditPermissions: boolean = false;\n   isUpdateVumReleaseCatalogOfflineSupported: boolean = false;\n\n   constructor(private permissionService: PermissionService,\n         private capabilityService: VsanCapabilityProvider) {\n   }\n\n   ngOnInit(): void {\n      this.loadData();\n   }\n\n   @Loader()\n   async loadData(): Promise<void> {\n      this.hasEditPermissions = await this.permissionService\n            .hasVcPermissions(ManagedObject.contextObject, [Privileges.GLOBAL_SETTINGS()]);\n      this.isUpdateVumReleaseCatalogOfflineSupported = await this.capabilityService\n            .getIsUpdateVumReleaseCatalogOfflineSupported(ManagedObject.contextObject);\n   }\n\n   @ErrorHandler()\n   setErrorMessage(error: string): void {\n      this.alertMessage = error;\n   }\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {ActionButtonModule} from \"@component/action-button/action-button.module\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {CommonCellsModule} from \"@component/cell/common-cells.module\";\nimport {InventoryBrowserModule} from \"@component/inventory/inventory-browser.module\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {TreeDatagridModule} from \"@component/datagrid/tree-datagrid.module\";\nimport {DatetimePickerModule} from \"@component/datetime-picker/datetime-picker.module\";\nimport {PopupListModule} from \"@component/popup-list/popup-list.module\";\nimport {VsanBreadcrumbModule} from \"@component/navigation/vsan-breadcrumb.module\";\n\n@NgModule({\n   imports: [\n         CommonDirectiveModule,\n         CommonPipeModule,\n         ValidationModule,\n         ActionButtonModule,\n         PromptModule,\n         CommonCellsModule,\n         InventoryBrowserModule,\n         SearchModule,\n         TreeDatagridModule,\n         DatetimePickerModule,\n         PopupListModule,\n         VsanBreadcrumbModule,\n   ],\n   exports: [\n      CommonDirectiveModule,\n      CommonPipeModule,\n      ValidationModule,\n      ActionButtonModule,\n      PromptModule,\n      CommonCellsModule,\n      InventoryBrowserModule,\n      SearchModule,\n      TreeDatagridModule,\n      DatetimePickerModule,\n      PopupListModule,\n      VsanBreadcrumbModule,\n   ],\n})\nexport class VsanCommonModule { }","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {SearchComponent} from \"@component/search/search.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule\n   ],\n   declarations: [\n      SearchComponent\n   ],\n   exports: [\n      SearchComponent\n   ],\n})\nexport class SearchModule {\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ActionButtonSeparatorComponent} from \"@component/action-button/action-button-separator.component\";\nimport {ButtonTitleDirective} from \"@component/action-button/button-title.directive\";\nimport {ButtonGroupDirective} from \"@component/action-button/button-group.directive\";\nimport {ButtonGroupWrapDirective} from \"@component/action-button/button-group-wrap.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n   ],\n   declarations: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ],\n   exports: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ]\n})\nexport class ActionButtonModule {\n}\n"],"sourceRoot":"webpack:///"}