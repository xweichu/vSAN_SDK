{"version":3,"sources":["./src/app/vsan/common/directive/clr-button-group/clr-button-base.directive.ts","./src/app/vsan/common/service/performance-persistence.service.ts","./src/app/vsan/vm/io-diagnostics/dialog/io-vm-metrics-dialog.component.ts","./src/app/vsan/vm/io-diagnostics/dialog/io-vm-metrics-dialog.html","./src/app/vsan/common/util/vsan-dialog-util.ts","./src/app/vsan/common/directive/external-link/external-link.directive.ts","./src/app/vsan/vm/io-diagnostics/dialog/io-vm-metrics-dialog.module.ts","./src/app/vsan/support/model/perf-dashboard-vsan2-disk-scsifw.data.ts"],"names":[],"mappings":"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","file":"135-es2015.js","sourcesContent":["/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ClrButton} from \"@clr/angular\";\n\n/**\n * Use this class as base class for directive, which handles clr-button. It will help to link the rendered button with\n * the clr-button on which the directive is applied.\n */\nexport abstract class ClrButtonBaseDirective {\n\n   constructor(private clrButton: ClrButton) {\n      if (!clrButton) {\n         return;\n      }\n      // name should be set, if not provided in template - generate one. ClrButtom#name is used to generate the name\n      // attribute of the markup button. Later the name is used to match the generated markup with the directive.\n      if (!clrButton.name) {\n         clrButton.name = Math.random().toString();\n      }\n\n      const directiveHolder: DirectiveHolder = (clrButton as DirectiveHolder);\n      directiveHolder.directives = directiveHolder.directives || [];\n      directiveHolder.directives.push(this);\n   }\n\n   /**\n    * This method will be called when the actual html button is rendered.\n    */\n   abstract resolveButton(clrButton: ClrButton, button: HTMLButtonElement, index: number);\n}\n\nexport interface DirectiveHolder extends ClrButton {\n   directives: ClrButtonBaseDirective[];\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {PerfTimeRangeData} from \"@generated/perf-time-range-data\";\nimport {Injectable} from \"@angular/core\";\nimport {FullTimeRangeSelectionData} from \"@model/full-time-range-selection.data\";\nimport {PersistentStorageService} from \"@service/browser-storage.service\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\nimport {RangePickerState} from \"@component/datetime-picker/time-range-picker/range-picker-state\";\n\nexport class PersistedSelection {\n   fullTimeRangeSelection: FullTimeRangeSelectionData;\n   expiresIn: number;\n}\n\n/**\n * Persist data which is needed between multiple performance views.\n */\n@Injectable()\nexport class PerformancePersistenceService {\n   /**\n    * Cached time range selection is kept for 1 hour.\n    */\n   private readonly CACHE_DURATION_IN_MS: number = VsanDateTimeUtils.HOUR_IN_MILLISECONDS;\n   private readonly CACHE_KEY: string = \"performance-timerange-selection\";\n\n   constructor(private storageService: PersistentStorageService) {\n   }\n\n   saveSelection(timeRange: PerfTimeRangeData, state: RangePickerState) {\n      const expiresIn: number =\n            new Date().getTime() + this.CACHE_DURATION_IN_MS;\n      const fullTimeRangeData: FullTimeRangeSelectionData = {\n         timeRange: timeRange,\n         state: state,\n      };\n      const savedObject: PersistedSelection = {\n         fullTimeRangeSelection: fullTimeRangeData,\n         expiresIn: expiresIn,\n      };\n      this.storageService.set(this.CACHE_KEY, savedObject);\n   }\n\n   getPersistedSelection(): FullTimeRangeSelectionData {\n      const persistedSelection: PersistedSelection =\n            this.storageService.get<PersistedSelection>(this.CACHE_KEY);\n\n      if (persistedSelection == null || persistedSelection.fullTimeRangeSelection == null) {\n         return null;\n      }\n\n      const isCacheExpired: boolean =\n            this.clearCacheIfExpired(persistedSelection);\n      if (isCacheExpired) {\n         return null;\n      }\n\n      return persistedSelection.fullTimeRangeSelection;\n   }\n\n   /**\n    * Check if deleted timeRange is persisted in the browser storage, if so then it should be removed as well.\n    */\n   onTimeRangeDeletion(timeRange: PerfTimeRangeData) {\n      const persistedTimeRange = this.getPersistedSelection();\n      if (persistedTimeRange != null && timeRange.name === persistedTimeRange.timeRange.name) {\n         this.storageService.remove(this.CACHE_KEY);\n      }\n   }\n\n   private clearCacheIfExpired(persistedSelection: PersistedSelection): boolean {\n      const nowTimestamp = new Date().getTime();\n      // If more then 1 hour has passed, then delete persisted selection\n      if (persistedSelection.expiresIn < nowTimestamp) {\n         this.storageService.remove(this.CACHE_KEY);\n         return true;\n      }\n\n      return false;\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {PerfQuerySpec} from \"@generated/perf-query-spec\";\nimport {VsanPerfPropertyProvider} from \"@generated/vsan-perf-property-provider\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {PerfEntityStateData} from \"@generated/perf-entity-state-data\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {PerfDashboardView} from \"../../../support/model/perf-dashboard-view.data\";\nimport {VsanPerfDashboardCategory, VsanPerfDashboardView} from \"../../../support/model/perf-dashboard.data\";\nimport {PerfGraph} from \"@component/chart/performance/perf-graph\";\nimport {HostSubEntitiesData} from \"../../../support/util/perf-dashboard-sub-entities-data-query.service\";\nimport {DisplayEntityInfoType} from \"../../../support/view/advanced-perf-sub-entity-dashboard.component\";\nimport {GraphNodeType} from \"../graph-view/model/graph-node-details\";\nimport {EntityRefType} from \"@generated/entity-ref-type\";\nimport {PerfSelectionData, SupportNavData, SupportView} from \"../../../support/model/navigation/support-nav.data\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {StorageGroupIdentifier} from \"@component/diskmgmt/model/storage-group-identifier\";\nimport {DiskManagementNavigationContext} from \"@navigation/context/disk-management-navigation-context\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {UnavailableViewSpec} from \"@component/unavailable-view/unavailable-view-spec\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\nimport {PerformancePersistenceService} from \"@service/performance-persistence.service\";\nimport {PerfTimeRangeData} from \"@generated/perf-time-range-data\";\nimport {RangePickerState} from \"@component/datetime-picker/time-range-picker/range-picker-state\";\nimport {GraphMetric} from \"@component/chart/performance/graph-metrics.data\";\nimport {PerfForSupportUtil} from \"../../../support/util/perf-for-support-util\";\nimport {PerfDashboardVsan2DiskScsifwData} from \"../../../support/model/perf-dashboard-vsan2-disk-scsifw.data\";\n\n@Component({\n   templateUrl: \"io-vm-metrics-dialog.html\",\n   selector: \"vsan-io-vm-metrics-dialog\",\n})\nexport class IoVmMetricsDialogComponent implements OnInit {\n   PerfForSupportUtil: typeof PerfForSupportUtil = PerfForSupportUtil;\n   private DISK_GROUP_GRAPHS_IDS: string[] = [\n      \"com.vmware.vsan.perf.graph.disk-group.iopsOverhead\",\n      \"com.vmware.vsan.perf.graph.disk-group.latencyOverhead\",\n   ];\n\n   private PNIC_NETWORK_GRAPHS_IDS: string[] = [\n      \"com.vmware.vsan.perf.graph.network.pnic.throughput\",\n      \"com.vmware.vsan.perf.graph.network.pnic.loss.rate\",\n   ];\n\n   private VSAN2_DISK_SCSIFW_GRAPHS_IDS: string[] = [\n      \"com.vmware.vsan.perf.graph.vsan2-disk-scsifw.iopsDev\",\n      \"com.vmware.vsan.perf.graph.vsan2-disk-scsifw.throughputDev\",\n      \"com.vmware.vsan.perf.graph.vsan2-disk-scsifw.latencyDev\",\n   ];\n\n   @LoadingIndicator()\n   isLoading: boolean;\n\n   @ErrorMessage()\n   errorMessage: string;\n\n   title: string;\n   entityName: string;\n   additionalActionLabel: string;\n   additionalActionCallback: () => void;\n   primaryActionLabel: string;\n   primaryActionCallback: () => void;\n\n   clusterRef: ManagedObject;\n   private hostName: string;\n   private hostUuid: string;\n   private entityType: string;\n   private startDate: number;\n   private endDate: number;\n   dashboardView: PerfDashboardView;\n   filteredEntities: HostSubEntitiesData[];\n   graphs: PerfGraph[];\n   entitiesStateData: PerfEntityStateData[];\n   displayEntityInfo: DisplayEntityInfoType = DisplayEntityInfoType.ALL;\n   unavailableViewSpec: UnavailableViewSpec = UnavailableViewSpec.PERF_VIEW_NO_DATA;\n   isHistoricalMode: boolean;\n   hasMetrics: boolean;\n\n   private _historicalGraphMetricsByRefId: Map<string, GraphMetric>;\n   get historicalGraphMetricsByRefId(): {[key: string]: GraphMetric } {\n      return this._historicalGraphMetricsByRefId as unknown as {[key: string]: GraphMetric};\n   }\n\n   constructor(private perfDataProvider: VsanPerfPropertyProvider,\n         private navigationService: NavigationService,\n         private perfPersistenceService: PerformancePersistenceService) {}\n\n   @Loader()\n   async ngOnInit(): Promise<void> {\n      const context: IoVmMetricsDialogContext = VsanUiUtils.getModalContext();\n      this.entityName = context.entityName;\n      this.hostName = context.hostName;\n      this.hostUuid = context.hostUuid;\n      this.isHistoricalMode = context.isHistorical;\n      this.startDate = context.startDate;\n      this.endDate = context.endDate;\n      this.clusterRef = context.clusterRef;\n\n      switch (context.type) {\n         case GraphNodeType.NIC:\n            await this.initializeNicPerformance();\n            break;\n         case GraphNodeType.DISK_GROUP:\n            await this.initializeDiskGroupPerformance();\n            break;\n         case GraphNodeType.DISK:\n            await this.initializeDiskPerformance();\n            break;\n      }\n   }\n\n   getPerfEntityName(entityRefId: string): string {\n      return entityRefId?.split(\"|\")[1];\n   }\n\n   @Loader()\n   private async initializeNicPerformance(): Promise<void> {\n      this.title = VsanUiUtils.getString(\"vsan.monitor.vm.iodiagnostics.metrics.pNicNetwork.label\");\n      this.primaryActionLabel =\n            VsanUiUtils.getString(\"vsan.monitor.vm.iodiagnostics.metrics.pNicNetwork.perfDetails\");\n      this.primaryActionCallback = this.navigateToPerformance;\n\n      this.dashboardView = PerfDashboardView.PNIC;\n      this.graphs = this.getGraphs(this.PNIC_NETWORK_GRAPHS_IDS);\n\n      this.entityType = EntityRefType.VSAN_PNIC_NET();\n      this.entitiesStateData =\n            await this.perfDataProvider.getEntityPerfStateForWildcards(this.clusterRef, [this.preparePerfSpec()]);\n      this.hasMetrics = !!this.graphs?.length && !!this.entitiesStateData?.length &&\n            !!this.entitiesStateData.find(data =>\n                  data?.entityRefId?.includes(this.hostUuid))?.metricsSeries?.length;\n      this.setNicPerformanceMode();\n   }\n\n   private setNicPerformanceMode(): void {\n      if (!this.isHistoricalMode) {\n         this.displayEntityInfo = DisplayEntityInfoType.ONLY_SUB_ENTITIES;\n         this.filteredEntities = [new HostSubEntitiesData(this.hostName, null)];\n      } else {\n         this.setHistoricalData(this.hostUuid);\n      }\n   }\n\n   @Loader()\n   private async initializeDiskPerformance(): Promise<void> {\n      this.title = VsanUiUtils.getString(\"vsan.monitor.vm.iodiagnostics.metrics.disk.label\");\n      this.primaryActionLabel =\n            VsanUiUtils.getString(\"vsan.monitor.vm.iodiagnostics.metrics.diskGroup.diagnostics\");\n      // TODO: (REPA) (vasilevd) Test navigation once graph is implemented in perf view\n      this.primaryActionCallback = this.navigateToPerformance;\n      this.additionalActionLabel = VsanUiUtils.getString(\"vsan.monitor.vm.iodiagnostics.metrics.diskGroup.view\");\n      this.additionalActionCallback = this.navigateToDiskManagement;\n\n      this.dashboardView = PerfDashboardView.DISK;\n      this.graphs = PerfDashboardVsan2DiskScsifwData.VSAN2_DISK_SCSIFW_CHARTS.filter(chart =>\n            this.VSAN2_DISK_SCSIFW_GRAPHS_IDS.includes(chart.id));\n\n      this.entityType = EntityRefType.VSAN2_DISK_SCSIFW();\n      this.entitiesStateData =\n            await this.perfDataProvider.getEntityPerfStateForWildcards(this.clusterRef, [this.preparePerfSpec()]);\n      this.hasMetrics = !!this.graphs?.length && !!this.entitiesStateData\n                  .find(data => data?.entityRefId?.includes(this.entityName))?.metricsSeries?.length;\n      this.setDiskGroupPerformanceMode();\n   }\n\n   @Loader()\n   private async initializeDiskGroupPerformance(): Promise<void> {\n      this.title = VsanUiUtils.getString(\"vsan.monitor.vm.iodiagnostics.metrics.diskGroup.label\");\n      this.primaryActionLabel =\n            VsanUiUtils.getString(\"vsan.monitor.vm.iodiagnostics.metrics.diskGroup.diagnostics\");\n      this.primaryActionCallback = this.navigateToPerformance;\n      this.additionalActionLabel = VsanUiUtils.getString(\"vsan.monitor.vm.iodiagnostics.metrics.diskGroup.view\");\n      this.additionalActionCallback = this.navigateToDiskManagement;\n\n      this.dashboardView = PerfDashboardView.DISKGROUP;\n      this.graphs = this.getGraphs(this.DISK_GROUP_GRAPHS_IDS);\n\n      this.entityType = EntityRefType.DISK_GROUP();\n      this.entitiesStateData =\n            await this.perfDataProvider.getEntityPerfStateForWildcards(this.clusterRef, [this.preparePerfSpec()]);\n      this.hasMetrics = !!this.graphs?.length && !!this.entitiesStateData?.length &&\n            !!this.entitiesStateData\n                  .find(data => data?.entityRefId?.includes(this.entityName))?.metricsSeries?.length;\n      this.setDiskGroupPerformanceMode();\n   }\n\n   private setDiskGroupPerformanceMode(): void {\n      if (!this.isHistoricalMode) {\n         this.displayEntityInfo = DisplayEntityInfoType.NONE;\n         this.filteredEntities = [new HostSubEntitiesData(this.hostName, [{\n            name: this.entityName,\n            uuid: this.entityName,\n         }])];\n      } else {\n         this.setHistoricalData(this.entityName);\n      }\n   }\n\n   private setHistoricalData(objectUuid: string = null): void {\n      this._historicalGraphMetricsByRefId = new Map<string, GraphMetric>();\n      this.entitiesStateData\n            .filter(data => !objectUuid || data.entityRefId.includes(objectUuid))\n            .forEach(data => {\n               this._historicalGraphMetricsByRefId.set(data?.entityRefId, new GraphMetric(data, this.graphs));\n            });\n   }\n\n   private getGraphs(displayGraphs: string[] = null): PerfGraph[] {\n      const pivotalDashboard: VsanPerfDashboardView = VsanPerfDashboardCategory.PIVOTAL_DASHBOARDS\n            .find(dashboard => dashboard.view === this.dashboardView);\n      if (pivotalDashboard) {\n         return pivotalDashboard.children.filter(c => c.isPivotalGraph &&\n               (VsanUiUtils.isEmpty(displayGraphs) || displayGraphs.some(g => g === c.id)));\n      }\n\n      const dashboardCategory: VsanPerfDashboardCategory = VsanPerfDashboardCategory.CATEGORIED_DASHBOARDS\n            .find(category => category.children.some(d => d.view === this.dashboardView));\n      if (dashboardCategory) {\n         return dashboardCategory.children.find(d => d.view === this.dashboardView)\n               .children.filter(c => c.isPivotalGraph &&\n                     (VsanUiUtils.isEmpty(displayGraphs) || displayGraphs.some(g => g === c.id)));\n      }\n\n      return null;\n   }\n\n   private preparePerfSpec(): PerfQuerySpec {\n      return PerfQuerySpec.Factory.create(\n            this.entityType,\n            \"*\", // wild card query, * to match all the entityIds\n            null, /* group:string, not used*/\n            this.startDate,\n            this.endDate,\n            null, /* interval:number , not used*/\n            null /* labels:string[], not used*/);\n   }\n\n   private navigateToPerformance(): void {\n      const perfTimeRange: PerfTimeRangeData =\n            PerfTimeRangeData.Factory.create(\n                  null,\n                  this.startDate,\n                  VsanDateTimeUtils.roundToMinuteStart(this.endDate),\n                  this.clusterRef);\n\n      this.perfPersistenceService.saveSelection(perfTimeRange, RangePickerState.CUSTOM_RANGE);\n\n      const navData: SupportNavData = new SupportNavData(SupportView.ADVANCED_PERFORMANCE,\n            new PerfSelectionData(this.dashboardView));\n      if (!this.isHistoricalMode && this.entityName) {\n         navData.perfSelection.objectIdentifier = this.entityName;\n      }\n\n      this.navigationService.navigateToAndCloseModal(PlatformExtension.CLUSTER_SUPPORT, this.clusterRef, navData);\n   }\n\n   private navigateToDiskManagement(): void {\n      const groupIdentifier: StorageGroupIdentifier = StorageGroupIdentifier.fromDiskGroupName(this.entityName);\n      const context: DiskManagementNavigationContext = {\n         hostRef: null,\n         hostName: !this.isHistoricalMode ? this.hostName : null,\n         diskGroup: !this.isHistoricalMode ? groupIdentifier : null,\n         isHostDetailsLevel: !this.isHistoricalMode,\n      };\n      this.navigationService.navigateToAndCloseModal(PlatformExtension.DISK_MANAGEMENT, this.clusterRef, context);\n   }\n}\n\nexport interface IoVmMetricsDialogContext {\n   clusterRef: ManagedObject;\n   entityName: string;\n   hostName: string;\n   hostUuid: string;\n   /**\n    * If the host is removed from the cluster, then only the hostUuid is going to be presented.\n    * Hence the handling the performance fetch for such historical entities would be different.\n    */\n   isHistorical: boolean;\n   type: GraphNodeType;\n   startDate: number;\n   endDate: number;\n}","<!-- Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-edit-prompt [title]=\"title\"\n                  [subtitle]=\"entityName\"\n                  [blockContent]=\"isLoading\"\n                  [blockButton]=\"isLoading || !hasMetrics\"\n                  [blockAdditionalButton]=\"isLoading || !hasMetrics\"\n                  [(alertMessage)]=\"errorMessage\"\n                  [confirmText]=\"primaryActionLabel\"\n                  (onConfirm)=\"primaryActionCallback()\"\n                  [additionalButtonText]=\"additionalActionLabel ? additionalActionLabel : null\"\n                  (onAdditionalAction)=\"additionalActionCallback()\">\n   <vsan-unavailable-view *ngIf=\"!isLoading && !hasMetrics\"\n                          [unavailableViewSpec]=\"unavailableViewSpec\">\n   </vsan-unavailable-view>\n   <ng-container *ngIf=\"hasMetrics\">\n      <vsan-advanced-perf-sub-entity-dashboard *ngIf=\"!isHistoricalMode\"\n                                               [clusterRef]=\"clusterRef\"\n                                               [showAllSupported]=\"false\"\n                                               [isNested]=\"false\"\n                                               [displayEntityInfo]=\"displayEntityInfo\"\n                                               [filterObjects]=\"filteredEntities\"\n                                               [displayedGraphs]=\"graphs\"\n                                               [perfEntitiesStateData]=\"entitiesStateData\"\n                                               [view]=\"dashboardView\"\n                                               [compactMode]=\"false\">\n      </vsan-advanced-perf-sub-entity-dashboard>\n      <ng-container *ngIf=\"isHistoricalMode\">\n         <ng-container *ngFor=\"let entity of historicalGraphMetricsByRefId | keyvalue\">\n            <div *ngIf=\"getPerfEntityName(entity?.key)\" class=\"sub-entity-info\">\n               <clr-icon [attr.shape]=\"PerfForSupportUtil.getEntityIcon(dashboardView)\" class=\"is-info\"></clr-icon>\n               <span class=\"entity-name\">{{getPerfEntityName(entity?.key)}}</span>\n            </div>\n            <vsan-perf-charts-container [data]=\"[entity?.value]\"\n                                        [isShowGraphDescription]=\"false\"\n                                        [isEmptyChartsVisible]=\"false\">\n            </vsan-perf-charts-container>\n         </ng-container>\n      </ng-container>\n   </ng-container>\n</vsan-edit-prompt>\n","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nexport class VsanDialogUtil {\n   static readonly CAPACITY_MANAGEMENT_DIALOG: VsanDialogProperties = {\n      width: 800,\n      height: 700,\n   };\n\n   static readonly DELETE_VOLUME_DIALOG: VsanDialogProperties = {\n      width: 500,\n      height: 250,\n   };\n\n   static readonly MIGRATE_VOLUME_DIALOG: VsanDialogProperties = {\n      width: 1030,\n      height: 710,\n   };\n\n   static readonly REAPPLY_VOLUME_POLICY_DIALOG: VsanDialogProperties = {\n      width: 700,\n      height: 250,\n   };\n\n   static readonly DUPLICATE_PCI_ID_MODEL_SELECTION_DIALOG: VsanDialogProperties = {\n      width: 800,\n      height: 500,\n   };\n\n   static readonly HEALTH_RESTORE_ACTION_DIALOG: VsanDialogProperties = {\n      width: 550,\n      height: 250,\n   };\n\n   // Keep in sync with plugin.xml extension point\n   static readonly CLUSTER_POWER_ON_DIALOG: VsanDialogProperties = {\n      width: 600,\n      height: 230,\n   };\n\n   static readonly VM_IO_DIAGNOSTICS_METRICS_DIALOG: VsanDialogProperties = {\n      width: 900,\n      height: 700,\n   };\n\n   static readonly VM_IO_DIAGNOSTICS_LATENCY_DIALOG: VsanDialogProperties = {\n      width: 1000,\n      height: 500,\n   };\n\n   static readonly VM_IO_DIAGNOSTICS_DOM_OWNER_LATENCY_DIALOG: VsanDialogProperties = {\n      width: 1000,\n      height: 400,\n   };\n\n   static readonly PERF_SVC_EDIT_ACTION_DIALOG: VsanDialogProperties = {\n      width: 800,\n      height: 450,\n   };\n\n   static readonly PERF_SVC_ENABLE_ACTION_DIALOG: VsanDialogProperties = {\n      width: 800,\n      height: 250,\n   };\n\n   static readonly CLAIM_DISKS_ACTION_DIALOG: VsanDialogProperties = {\n      width: 1200,\n      height: 650,\n   };\n\n   static readonly VSAN_DISK_CLAIM_ACTION_DIALOG: VsanDialogProperties = {\n      width: 670,\n      height: 300,\n   };\n}\n\nexport class VsanDialogProperties {\n   width: number;\n   height: number;\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {\n   AfterViewInit,\n   ComponentFactoryResolver,\n   Directive,\n   ElementRef,\n   Host,\n   Input,\n   Optional,\n   Renderer2,\n   Self,\n} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {NavigationService} from \"@navigation/navigation.service\";\nimport {ClrButtonBaseDirective} from \"@directive/clr-button-group/clr-button-base.directive\";\nimport {ClrButton} from \"@clr/angular\";\n\n/**\n * Decorates a button or an anchor as external link. Requires one of the optional parameters articleId, helpId or url.\n *\n * @param external-link: Optional. Localization key of the text label of the external link. If omitted default label\n * will be used - \"Learn more\" for anchors or \"Ask VMWare\" for buttons.\n * @param articleId - Optional. Id of article in knowledge base.\n * @param helpId - Optional. Help id which will redirect to Knowledge Base.\n * @param url - Optional. External URL.\n */\n@Directive({\n   selector: \"a[external-link], button[external-link], clr-button[external-link]\",\n})\nexport class ExternalLinkDirective extends ClrButtonBaseDirective implements AfterViewInit {\n   private readonly ASK_VMWARE_DEFAULT_TEXT_KEY: string = \"vsan.common.askVMware\";\n   private readonly LEARN_MORE_DEFAULT_TEXT_KEY: string = \"vsan.common.learnMore\";\n\n   private readonly CONTAINER_CLASS: string = \"icon-name-container\";\n   private readonly NAVIGATION_EVENT_TYPE: string = \"click\";\n   private readonly LEAD_TO_NOWHERE_URL: string = \"javascript://\";\n   private readonly HTML_ELEMENT_SPAN_NAME: string = \"span\";\n   private readonly HTML_ELEMENT_ICON_NAME: string = \"clr-icon\";\n   private readonly HTML_ELEMENT_ROLE_ATTR_NAME: string = \"role\";\n   private readonly HTML_ELEMENT_ROLE_ATTR_VALUE: string = \"link\";\n   private readonly ICON_SHAPE_ATTR_NAME: string = \"shape\";\n   private readonly ICON_SHAPE_ATTR_VALUE: string = \"pop-out\";\n   private readonly ICON_SIZE_ATTR_NAME: string = \"size\";\n   private readonly ICON_SIZE_ATTR_VALUE: string = \"16\";\n   private readonly ICON_CLASS_ATTR_NAME: string = \"class\";\n   private readonly ICON_CLASS_ATTR_VALUE: string = \"link\";\n   private readonly ICON_TITLE_ATTR_NAME: string = \"title\";\n\n   private readonly KB_URL: string = \"http://kb.vmware.com/kb/\";\n\n   @Input(\"external-link\")\n   anchorText: string;\n\n   @Input()\n   articleId: string;\n\n   @Input()\n   helpId: string;\n\n   @Input()\n   url: string;\n\n   constructor(private el: ElementRef<HTMLElement>,\n         private resolver: ComponentFactoryResolver,\n         private renderer: Renderer2,\n         private navigationService: NavigationService,\n         // this variable will be initialized only if the host is clr-button\n         @Host() @Self() @Optional() clrButton: ClrButton) {\n      super(clrButton);\n   }\n\n   ngAfterViewInit(): void {\n      const element: HTMLElement = this.el.nativeElement;\n      // continue only if element is HTML link or button\n      if (!this.isLink(element) && !this.isButton(element)) {\n         // element is clr-button, wait until html button for it is resolved - handled by resloveButton\n         return;\n      }\n      this.prepareExternalLink(element);\n   }\n\n   resolveButton(clrButton: ClrButton, button: HTMLButtonElement, index: number): void {\n      // only if element is clr-button. At this point the html button is already resolved. Apply on it.\n      this.prepareExternalLink(button);\n   }\n\n   private prepareExternalLink(element: HTMLElement): void {\n      this.renderer.addClass(element, this.CONTAINER_CLASS);\n\n      this.setText(element);\n      if (this.isLink(element)) {\n         this.decorateLink(element);\n      } else {\n         this.addLinkRole(element);\n      }\n\n      this.initializeNavigationHandler(element);\n   }\n\n   private isButton(element: HTMLElement): boolean {\n      return element instanceof HTMLButtonElement;\n   }\n\n   private isLink(element: HTMLElement): boolean {\n      return element instanceof HTMLAnchorElement;\n   }\n\n   private setText(element: HTMLElement): void {\n      const span: HTMLSpanElement = this.renderer.createElement(this.HTML_ELEMENT_SPAN_NAME);\n      span.innerText = this.getText(element);\n      this.renderer.appendChild(element, span);\n\n      const icon: HTMLSpanElement = this.renderer.createElement(this.HTML_ELEMENT_ICON_NAME);\n      icon.setAttribute(this.ICON_SHAPE_ATTR_NAME, this.ICON_SHAPE_ATTR_VALUE);\n      icon.setAttribute(this.ICON_SIZE_ATTR_NAME, this.ICON_SIZE_ATTR_VALUE);\n      icon.setAttribute(this.ICON_CLASS_ATTR_NAME, this.ICON_CLASS_ATTR_VALUE);\n      // Set title of the icon for screen readers clarity\n      icon.setAttribute(this.ICON_TITLE_ATTR_NAME, VsanUiUtils.getString(\"vsan.screenReader.label.externalLink.icon\"));\n      this.renderer.appendChild(element, icon);\n   }\n\n   private getText(element: HTMLElement): string {\n      if (this.anchorText) {\n         return this.anchorText;\n      }\n      const key: string = this.isButton(element) ? this.ASK_VMWARE_DEFAULT_TEXT_KEY : this.LEARN_MORE_DEFAULT_TEXT_KEY;\n      return VsanUiUtils.getString(key);\n   }\n\n   private decorateLink(element: HTMLElement): void {\n      const linkElement: HTMLLinkElement = element as HTMLLinkElement;\n      // don't use href attribute. If omitted, the link will be not visualized properly.\n      linkElement.href = this.LEAD_TO_NOWHERE_URL;\n      // display link on same line\n      linkElement.style.display = \"inline-flex\";\n   }\n\n   private initializeNavigationHandler(element: HTMLElement): void {\n      element.addEventListener(this.NAVIGATION_EVENT_TYPE, () => {\n         if (this.helpId) {\n            this.navigationService.askVMware(this.helpId);\n            return;\n         }\n         if (this.articleId) {\n            this.navigationService.navigateToAddress(`${this.KB_URL}${this.articleId}`);\n            return;\n         }\n         if (this.url) {\n            this.navigationService.navigateToAddress(this.url);\n         }\n      });\n   }\n\n   // Indicate external navigation by assigning \"link\" role\n   private addLinkRole(element: HTMLElement): void {\n      this.renderer.setAttribute(element, this.HTML_ELEMENT_ROLE_ATTR_NAME, this.HTML_ELEMENT_ROLE_ATTR_VALUE);\n   }\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\nimport {IoVmMetricsDialogComponent} from \"./io-vm-metrics-dialog.component\";\nimport {SupportPerfModule} from \"../../../support/support-perf.module\";\nimport {VsanChartModule} from \"@component/chart/chart.module\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\n\nconst routes: Routes = [\n   {\n      path: \"\",\n      component: IoVmMetricsDialogComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      PromptModule,\n      UnavailableViewModule,\n      RouterModule.forChild(routes),\n      VsanChartModule,\n      SupportPerfModule,\n   ],\n   declarations: [\n      IoVmMetricsDialogComponent,\n   ],\n})\nexport class IoVmMetricsDialogModule {\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardVsan2DiskScsifwData {\n   static readonly VSAN2_DISK_SCSIFW_CHARTS: PerfGraph[] = [\n      // Device IOPS\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.vsan2-disk-scsifw.iopsDev\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.deviceIOPS.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsDevRead\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.deviceIOPS.iopsDevRead.label\")),\n               new PerfGraphMetrics(\"iopsDevWrite\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.deviceIOPS.iopsDevWrite.label\")),\n            ]),\n      // Device Throughput\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.vsan2-disk-scsifw.throughputDev\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devThroughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"throughputDevRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devThroughput.throughputDevRead.label\")),\n               new PerfGraphMetrics(\"throughputDevWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devThroughput.throughputDevWrite.label\")),\n            ]),\n      // Device Latency\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.vsan2-disk-scsifw.latencyDev\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyDevRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevRead.label\")),\n               new PerfGraphMetrics(\"latencyDevWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevWrite.label\")),\n               new PerfGraphMetrics(\"latencyDevGAvg\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevGAvg.label\")),\n               new PerfGraphMetrics(\"latencyDevDAvg\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevDAvg.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper)),\n   ];\n}"],"sourceRoot":"webpack:///"}