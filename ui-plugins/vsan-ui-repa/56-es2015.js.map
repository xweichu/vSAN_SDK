{"version":3,"sources":["./src/app/vsan/common/service/flow/loading-indicator.decorator.ts","./src/app/vsan/common/service/flow/loader.decorator.ts","./src/app/vsan/file-services/shared/file-services-common.module.ts","./src/app/vsan/file-services/shared/file-services-ovf-settings.data.ts","./src/app/vsan/file-services/shared/file-services-ovf-settings.html","./src/app/vsan/common/service/flow/loading-flow-wrapper.data.ts","./src/app/vsan/file-services/shared/file-services-ovf-settings.component.ts","./src/app/vsan/common/util/version.ts"],"names":[],"mappings":"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","file":"56-es2015.js","sourcesContent":["/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\n\n\nimport {LoadingFlowWrapper} from \"@service/flow/loading-flow-wrapper.data\";\n\n/**\n * This property decorator is supposed to be used along with the @Loader decorator.\n * As the @Loader decorator keeps track of all the active loading operations,\n * we can easily know if all the loading is completed. If there are any ongoing loading\n * operations, the property decorated with @LoadingIndicator will be set to \"true\", otherwise - it will be \"false\".\n * You can have as many properties decorated with @LoadingIndicator as you want, but they need to have different names.\n * The LoadingIndicator will show the loading state of the Loader methods with the same name.\n *\n * <pre>\n * @Loader()\n * loadDataSync(): any {\n *    // Load some data\n * }\n *\n * @Loader()\n * loadDataAsync(): Promise<any> {\n *    // Load some data\n * }\n *\n * @LoadingIndicator\n * isLoading: boolean; // The field will be set to \"false\" when the both the methods are complete and the Promise is resolved.\n * </pre>\n */\nexport function LoadingIndicator(props?: LoadingIndicatorProperties): PropertyDecorator {\n   props = props || {};\n   return (targetClass: any, propertyKey: string): void => {\n      Object.defineProperty(targetClass, propertyKey, {\n         get: function (): boolean {\n            if (Array.isArray(props.name)) {\n               return props.name.some((loaderName: string) => (new LoadingFlowWrapper(this, loaderName)).isLoading);\n            }\n\n            return (new LoadingFlowWrapper(this, props.name)).isLoading;\n         },\n      });\n   };\n}\n\nexport interface LoadingIndicatorProperties {\n   name?: string | string[];\n}\n","/* Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ErrorContext, FunctionWrapper} from \"@service/flow/function-wrapper\";\nimport {LoadingFlowWrapper} from \"@service/flow/loading-flow-wrapper.data\";\nimport {ScreenReaderAnnouncerService, SrEvent, SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {Reflection} from \"@util/reflection\";\nimport {GlobalLogger} from \"../../../../vsan-app.module\";\n\n/**\n * Method decorator that does the following:\n *  - watches for errors and if such appear:\n *       - the error is logged in the browser's console\n *       - the error is logged in the H5C server log\n *       - the related @ErrorMessage fields are populated\n *       - the related @ErrorHandler methods are invoked\n *  - Updates the @LoadingIndicator decorated fields\n *  - Invokes the screen reader service once the loading operation completes successfully\n */\nexport function Loader(params?: LoaderParams): MethodDecorator {\n   // If no params are passed, initialize the variable in order to avoid multiple null-checks\n   params = params || {};\n   return (targetClass: any, functionName: string, descriptor: PropertyDescriptor): void => {\n      // Use the component name as tag in order easily find where the error was thrown.\n      const tag: string = Reflection.getClassName(targetClass);\n      const loaderName: string = params.name;\n      const originalFn: any = descriptor.value;\n\n      descriptor.value = function (): any {\n         const loadingFlowWrapper: LoadingFlowWrapper = new LoadingFlowWrapper(this, loaderName);\n         return (new FunctionWrapper(originalFn))\n               .preExecute(() => {\n                  loadingFlowWrapper.error = undefined;\n                  loadingFlowWrapper.incrementLoads();\n                  ScreenReaderAnnouncerService.invoke(\n                        params.preLoadSrMessage || params.srMessage,\n                        params.srMessageType, SrEvent.LOADING);\n               })\n               .postExecute(() => {\n                  ScreenReaderAnnouncerService.invoke(params.srMessage, params.srMessageType, SrEvent.LOADED);\n               })\n               .onError((ex: any) => {\n                  processError(loadingFlowWrapper, tag, ex);\n                  const rethrow: boolean = shouldRethrow(loadingFlowWrapper, params);\n                  if (!rethrow) {\n                     ex = invokeErrorHandler(loadingFlowWrapper, ex);\n                  }\n                  return new ErrorContext(rethrow, ex);\n               })\n               .finally(() => {\n                  loadingFlowWrapper.decrementLoads();\n               })\n               .invoke(loadingFlowWrapper.backingObject, arguments);\n      };\n   };\n}\n\n/**\n * Parameters for the @Loader decorator\n */\nexport interface LoaderParams {\n\n   /**\n    * The name of the loader by which will be resolved te @LoadingIndicator, @ErrorHandler and @ErrorMessage\n    */\n   name?: string;\n\n   /**\n    * Indicates if the error should be rethrown after being processed by the @ErrorHandlers\n    */\n   rethrow?: boolean;\n\n   /**\n    * Used along with srMessageType to create the screen reader message to be announced after the loading\n    * operation completes successfully.\n    * If preLoadSrMessage is not set, srMessage will also be announced when the loading operation starts.\n    */\n   srMessage?: string;\n\n   /**\n    * Used when the message in preExecute() should be different than the one in postExecute().\n    * If not set, srMessage will be used in both places.\n    * Should be given a value when the srMessageType is set to CUSTOM,\n    * because otherwise the exact same message will be announced in preExecute() and postExecute().\n    */\n   preLoadSrMessage?: string;\n\n   /**\n    * The screen reader message type. Used for creating an appropriate message.\n    */\n   srMessageType?: SrMessageType;\n}\n\n/**\n * Handles the given error by:\n *  - logging the error in the browsers console\n *  - logging the error in the H5C backend log\n *  - updates all @ErrorMessage fields\n */\nfunction processError(wrapper: LoadingFlowWrapper, tag: string, ex: any): void {\n   // Log the error to the backend\n   GlobalLogger.error(tag, ex);\n\n   // Cache the error so it can be retrieved by @ErrorMessage decorated fields\n   wrapper.error = ex;\n}\n\n/**\n * Invokes the error handler (if defined)\n */\nfunction invokeErrorHandler(wrapper: LoadingFlowWrapper, ex: any): any {\n   const handler: any = wrapper.errorHandler;\n   return !!handler\n         ? handler.call(wrapper.backingObject, ex)\n         : null;\n}\n\n/**\n * Reject the promise only if:\n * 1. there are no handlers declared\n * 2. the components has explicitly requested the error to be rethrown\n */\nfunction shouldRethrow(wrapper: LoadingFlowWrapper, params: LoaderParams): boolean {\n   return !wrapper.errorHandler && !wrapper.errorMessageGetter\n         || !!params.rethrow;\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {FileServicesOvfSettings} from \"./file-services-ovf-settings.component\";\nimport {ShareNetPermissionComponent} from \"./share-net-permission.component\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {EditFileAnalyticsComponent} from \"./edit-file-analytics.component\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {EditShareFileAnalyticsComponent} from \"./edit-share-file-analytics.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      CommonPipeModule,\n      FormsModule,\n      ValidationModule,\n   ],\n   declarations: [\n      FileServicesOvfSettings,\n      ShareNetPermissionComponent,\n      EditFileAnalyticsComponent,\n      EditShareFileAnalyticsComponent,\n   ],\n   exports: [\n      FileServicesOvfSettings,\n      ShareNetPermissionComponent,\n      EditFileAnalyticsComponent,\n      EditShareFileAnalyticsComponent\n   ],\n})\nexport class FileServicesCommonModule {\n}","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanFileServiceOvfProps} from \"@generated/vsan-file-service-ovf-props\";\n\nexport class OvfSettings {\n   ovfUrlSecured: boolean; // use this to indicate if the OVF download url is https\n   isUrlTrusted: boolean;\n\n   constructor(public ovfOption: OvfOption,\n         public props: VsanFileServiceOvfProps,\n         public localFiles: any[] = []) {\n      this.ovfUrlSecured = props && props.url && props.url.startsWith(\"https://\");\n   }\n\n   get isManualDownload(): boolean {\n      return this.ovfOption === OvfOption.MANUAL;\n   }\n\n   get isUseExisting(): boolean {\n      return this.ovfOption === OvfOption.EXISTING;\n   }\n\n   get isSecureUrlNotTrusted(): boolean {\n      return this.ovfUrlSecured && !this.isUrlTrusted;\n   }\n}\n\nexport enum OvfOption {\n   DOWNLOAD,\n   MANUAL,\n   EXISTING,\n}\n","<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-validation id=\"existing-is-latest-message\"\n                 *ngIf=\"hasLatestOvf\"\n                 alertType=\"info\"\n                 allowClose=\"false\"\n                 [alert]=\"'vsan.services.fileservices.wizard.ovf.hasLatest.info' | localized : existingOvfVersion\">\n</vsan-validation>\n<ng-container *ngIf=\"!hasLatestOvf\">\n   <clr-radio-wrapper *ngIf=\"displayUseExistingOption\">\n      <input id=\"option-existing\"\n             type=\"radio\"\n             clrRadio\n             [value]=\"OvfOption.EXISTING\"\n             [(ngModel)]=\"ovfSettings.ovfOption\"\n             (change)=\"changeDownloadApproach($event)\"\n             name=\"ovf-option\">\n      <label for=\"option-existing\">\n         {{\"vsan.services.fileservices.wizard.ovf.option.existing\" | localized : existingOvfVersion}}\n      </label>\n   </clr-radio-wrapper>\n   <clr-radio-wrapper>\n      <input id=\"option-automatic\"\n             type=\"radio\"\n             clrRadio\n             [disabled]=\"!isAutoDownloadEnabled\"\n             [value]=\"OvfOption.DOWNLOAD\"\n             [(ngModel)]=\"ovfSettings.ovfOption\"\n             (change)=\"changeDownloadApproach($event)\"\n             name=\"ovf-option\">\n      <label for=\"option-automatic\"\n             [class.disable-action]=\"!isAutoDownloadEnabled\">\n         {{\"vsan.services.fileservices.wizard.ovf.option.automatic.title\" | localized}}\n      </label>\n   </clr-radio-wrapper>\n   <div class=\"radio-option-content\"\n        [class.disable-action]=\"ovfSettings.isManualDownload || ovfSettings.isUseExisting\">\n      <ng-container *ngIf=\"isAutoDownloadEnabled\">\n         <div>\n            <span>{{\"vsan.services.fileservices.wizard.ovf.option.automatic.url\" | localized}}</span>\n            <a id=\"auto-url\" [href]=\"publicOvfProps?.url\" target=\"_blank\">\n               {{publicOvfProps?.url}}\n            </a>\n         </div>\n         <ng-container *ngIf=\"ovfSettings?.ovfUrlSecured\">\n            {{\"vsan.services.fileservices.wizard.ovf.ssl.thumbprint\" | localized}}\n            <div>{{thumbprint}}</div>\n            <div class=\"clr-checkbox-wrapper\">\n               <input id=\"trust-url-thumbprint\"\n                      name=\"trust-url-thumbprint\"\n                      class=\"clr-checkbox\"\n                      [(ngModel)]=\"ovfSettings.isUrlTrusted\"\n                      type=\"checkbox\">\n               <label for=\"trust-url-thumbprint\" class=\"clr-control-label\">\n                  {{\"vsan.services.fileservices.wizard.ovf.ssl.thumbprint.trust.label\" | localized}}\n               </label>\n            </div>\n         </ng-container>\n         <vsan-validation id=\"automatic-download-status\"\n                          [alertType]=\"downloadAlertType\"\n                          [alert]=\"downloadAlertMessage\"\n                          [allowClose]=\"false\"\n                          [isSmall]=\"true\">\n         </vsan-validation>\n         <div class=\"progress labeled\" *ngIf=\"downloadTask\">\n            <progress max=\"100\" value=\"{{taskInfo?.progress}}\"></progress>\n            <span>{{taskInfo?.progress}}%</span>\n         </div>\n      </ng-container>\n      <ng-container *ngIf=\"!isAutoDownloadEnabled\">\n         <vsan-validation id=\"no-internet-access-warning\"\n                          alertType=\"warning\"\n                          [allowClose]=\"false\"\n                          [alert]=\"'vsan.services.fileservices.wizard.ovf.noInternet' | localized\"\n                          [isSmall]=\"true\">\n         </vsan-validation>\n      </ng-container>\n   </div>\n\n   <clr-radio-wrapper>\n      <input id=\"option-manual\"\n             type=\"radio\"\n             clrRadio\n             [value]=\"OvfOption.MANUAL\"\n             [(ngModel)]=\"ovfSettings.ovfOption\"\n             (change)=\"changeDownloadApproach($event)\"\n             name=\"ovf-option\">\n      <label for=\"option-manual\">\n         {{\"vsan.services.fileservices.wizard.ovf.option.manual.title\" | localized}}\n      </label>\n   </clr-radio-wrapper>\n   <div class=\"radio-option-content manual-upload-container\"\n        [class.disable-action]=\"!ovfSettings?.isManualDownload\">\n      <label for=\"upload\">\n         {{\"vsan.services.fileservices.wizard.ovf.option.manual.url\" | localized}}\n      </label>\n      <button id=\"upload\"\n              class=\"btn btn-sm btn-link\"\n              (click)=\"ovfFilesInput?.nativeElement.click()\"\n              [disabled]=\"!ovfSettings?.isManualDownload\">\n         {{\"vsan.services.fileservices.wizard.ovf.option.manual.browse\" | localized}}\n      </button>\n      <input id=\"ovf-files\"\n             #ovfFiles\n             type=\"file\"\n             class=\"hidden\"\n             multiple=\"multiple\"\n             (change)=\"onOvfFileChange($event)\">\n      <span id=\"selected-files-number\"\n            *ngIf=\"selectedFiles?.length\">\n         {{\"vsan.services.fileservices.wizard.ovf.option.manual.selectedFiles\" | localized: selectedFiles?.length}}\n      </span>\n   </div>\n</ng-container>\n<div class=\"clr-row progress-container\">\n   <div id=\"upload-progress\"\n        *ngIf=\"uploadProgress > 0\"\n        [class.clr-col-11]=\"uploadProgress < 100\"\n        [class.clr-col-10]=\"uploadProgress === 100 && !remoteValidatingCompleted\"\n        [class.clr-col-12]=\"uploadProgress === 100 && remoteValidatingCompleted\">\n      <div class=\"progress labeled\">\n         <progress max=\"100\" value=\"0\" data-value=\"{{uploadProgress}}\"></progress>\n         <span>{{\"vsan.common.percentage\" | localized : uploadProgress}}</span>\n      </div>\n   </div>\n   <button id=\"cancel-upload\"\n           class=\"btn btn-sm btn-link btn-icon\"\n           *ngIf=\"uploadSubscription && uploadProgress < 100\"\n           [attr.title]=\"'vsan.services.fileservices.wizard.ovf.option.manual.upload.cancel' | localized\"\n           (click)=\"stopUpload()\">\n      <clr-icon shape=\"times-circle\"\n                [attr.alt]=\"'vsan.services.fileservices.wizard.ovf.option.manual.upload.cancel' | localized\">\n      </clr-icon>\n   </button>\n   <div id=\"remote-validate-spinner\"\n        *ngIf=\"uploadProgress === 100 && !remoteValidatingCompleted\">\n      <span class=\"spinner spinner-inline\"></span>\n      <span>{{\"vsan.common.validating\" | localized}}</span>\n   </div>\n</div>\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\n/**\n * This class is used internally by the @Loader decorator and the decorators related to it.\n * It encapsulates the logic for accessing internal properties needed for the decorators to work.\n * The state of this class is kept in the \"backingObject\" passed to the constructor. This allows\n * the wrapper class to be easily recreated wherever it is needed without worrying about keeping its reference.\n *\n * <pre>\n * const obj: any = {};\n *\n * // Create a new LoadingFlowWrapper over obj\n * const wrapper1: LoadingFlowWrapper = new LoadingFlowWrapper(obj);\n * // Set the error field to \"alabala\" string\n * wrapper1.error = \"alabala\";\n *\n * // Create a new LoadingFlowWrapper over obj\n * const wrapper2: LoadingFlowWrapper = new LoadingFlowWrapper(obj);\n * console.log(wrapper2.error); // Prints \"alabala\" because the backing object is the same\n * </pre>\n */\nexport class LoadingFlowWrapper {\n\n   private static readonly ERROR_HOLDER: string = \"__ex__\";\n   private static readonly ERROR_HANDLERS_REF_HOLDER: string = \"__errorHandlers__\";\n   private static readonly ERROR_MESSAGE_GETTERS_REF_HOLDER: string = \"__errorMessageGetters__\";\n   private static readonly LOADS_COUNT_HOLDER: string = \"__loadsCount__\";\n\n   private static readonly DEFAULT_NAME: string = \"default-loader\";\n\n   constructor(private _backingObject: any,\n         private loaderName: string) {\n      this.loaderName = loaderName || LoadingFlowWrapper.DEFAULT_NAME;\n\n      // Init all collections\n      this.initCollection(LoadingFlowWrapper.ERROR_HOLDER);\n      this.initCollection(LoadingFlowWrapper.ERROR_HANDLERS_REF_HOLDER);\n      this.initCollection(LoadingFlowWrapper.ERROR_MESSAGE_GETTERS_REF_HOLDER);\n      this.initCollection(LoadingFlowWrapper.LOADS_COUNT_HOLDER);\n   }\n\n   private initCollection(collectionName: string): void {\n      // Check first if the collection hasn't been initialized by another wrapper.\n      // If so, do nothing as we don't want to override the data already set.\n      if (!this.backingObject[collectionName]) {\n         this.backingObject[collectionName] = [];\n      }\n   }\n\n   /**\n    * The original object which methods/properties were decorated\n    */\n   get backingObject(): any {\n      return this._backingObject;\n   }\n\n   /**\n    * Returns the thrown error\n    */\n   get error(): any {\n      return this.backingObject[LoadingFlowWrapper.ERROR_HOLDER][this.loaderName];\n   }\n\n   /**\n    * Sets the thrown error\n    */\n   set error(val: any) {\n      this.backingObject[LoadingFlowWrapper.ERROR_HOLDER][this.loaderName] = val;\n   }\n\n   /**\n    * Returns the number of active loading operations\n    */\n   private get loadsCount(): number {\n      return this.backingObject[LoadingFlowWrapper.LOADS_COUNT_HOLDER][this.loaderName];\n   }\n\n   /**\n    * Returns true if there are running loader methods or promises.\n    */\n   get isLoading(): boolean {\n      return !!this.loadsCount;\n   }\n\n   /**\n    * Increase the number of active loading operations by one\n    */\n   incrementLoads(): void {\n      // Initialize the counter if it hasn't been initialized yet\n      if (!this.loadsCount) {\n         this.backingObject[LoadingFlowWrapper.LOADS_COUNT_HOLDER][this.loaderName] = 0;\n      }\n      this.backingObject[LoadingFlowWrapper.LOADS_COUNT_HOLDER][this.loaderName] += 1;\n   }\n\n   /**\n    * Decreases the number of active loading operations by one\n    */\n   decrementLoads(): void {\n      this.backingObject[LoadingFlowWrapper.LOADS_COUNT_HOLDER][this.loaderName] -= 1;\n   }\n\n   get errorHandler(): any {\n      return this.backingObject[LoadingFlowWrapper.ERROR_HANDLERS_REF_HOLDER][this.loaderName];\n   }\n\n   /**\n    * Registers a new error handler.\n    */\n   set errorHandler(errorHandler: any) {\n      if (!!this.errorHandler) {\n         throw new Error(`ErrorHandler for loader \"${this.loaderName}\" already registered!`);\n      }\n      this.backingObject[LoadingFlowWrapper.ERROR_HANDLERS_REF_HOLDER][this.loaderName] = errorHandler;\n   }\n\n   get errorMessageGetter(): any {\n      return this.backingObject[LoadingFlowWrapper.ERROR_MESSAGE_GETTERS_REF_HOLDER][this.loaderName];\n   }\n\n   set errorMessageGetter(getter: any) {\n      if (!!this.errorMessageGetter) {\n         throw new Error(`ErrorMessage for loader \"${this.loaderName}\" already registered!`);\n      }\n      this.backingObject[LoadingFlowWrapper.ERROR_MESSAGE_GETTERS_REF_HOLDER][this.loaderName] = getter;\n   }\n}\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnInit, Output, ViewChild} from \"@angular/core\";\nimport {VsanFileServiceOvfProps} from \"@generated/vsan-file-service-ovf-props\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {OvfOption, OvfSettings} from \"./file-services-ovf-settings.data\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {TaskService} from \"@generated/task-service\";\nimport {TaskStatus} from \"@service/task-monitor-service\";\nimport {TaskInfoData} from \"@generated/task-info-data\";\nimport {Logger} from \"@util/logger\";\nimport {AlertType} from \"@component/validation/alert-type\";\nimport {SslThumbprintService} from \"@generated/ssl-thumbprint-service\";\nimport {HttpErrorResponse, HttpEvent, HttpEventType} from \"@angular/common/http\";\nimport {catchError} from \"rxjs/operators\";\nimport {Observable, Subject, Subscription, throwError} from \"rxjs\";\nimport {VsanFileServiceConfigService} from \"@generated/vsan-file-service-config-service\";\nimport {Version} from \"@util/version\";\n\n@Component({\n   templateUrl: \"file-services-ovf-settings.html\",\n   styleUrls: [\"file-services-ovf-settings.scss\"],\n   selector: \"vsan-file-services-ovf-settings\",\n})\nexport class FileServicesOvfSettings implements OnInit {\n   private static readonly DIALOG_WITH_THUMBPRINTS_HEIGHT: number = 650;\n\n   // Use this to cancel the upload http call\n   private pendingHTTPRequests: Subject<void> = new Subject<void>();\n\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Input()\n   publicOvfProps: VsanFileServiceOvfProps;\n\n   @Input()\n   isInternetAccessEnabled: boolean;\n\n   @Input()\n   ovfSettings: OvfSettings;\n\n   @Input()\n   set downloadTask(val: ManagedObject) {\n      this._downloadTask = val;\n      this.updateDownloadTaskStatus();\n   }\n\n   get downloadTask(): ManagedObject {\n      return this._downloadTask;\n   }\n\n   @Input()\n   set startUpload(val: boolean) {\n      this._startUpload = val;\n      if (val) {\n         this.uploadOvf();\n      }\n   }\n\n   get startUpload(): boolean {\n      return this._startUpload;\n   }\n\n   @Input()\n   displayUseExistingOption: boolean = false;\n\n   @Input()\n   existingOvfVersion: Version;\n\n   @Input()\n   hostVersion: Version;\n\n   @Input()\n   fsvmVersion: Version;\n\n   @Output()\n   ovfSettingsChange: EventEmitter<OvfSettings> = new EventEmitter<OvfSettings>();\n\n   @Output()\n   onError: EventEmitter<string[]> = new EventEmitter<string[]>();\n\n   @Output()\n   onCancel: EventEmitter<void> = new EventEmitter<void>();\n\n   @Output()\n   uploadComplete: EventEmitter<void> = new EventEmitter<void>();\n\n   @ViewChild(\"ovfFiles\")\n   ovfFilesInput: any;\n\n   selectedFiles: File[] = [];\n\n   taskInfo: TaskInfoData;\n   downloadAlertType: string = AlertType.INFO;\n   downloadAlertMessage: string = VsanUiUtils.getString(\"vsan.services.fileservices.wizard.ovf.option.automatic.info\");\n\n   thumbprint: string;\n   uploadSubscription: Subscription = null;\n   uploadProgress: number = 0;\n   remoteValidatingCompleted: boolean = false;\n   hasLatestOvf: boolean;\n   OvfOption: typeof OvfOption = OvfOption;\n\n   private _downloadTask: ManagedObject;\n   private _startUpload: boolean = false;\n   private uploadObservable: Observable<any> = null;\n\n   constructor(private thumbprintService: SslThumbprintService,\n         private fileService: VsanFileServiceConfigService,\n         private taskService: TaskService) {\n   }\n\n   ngOnInit(): void {\n      if (this.ovfSettings && this.ovfSettings.ovfUrlSecured) {\n         VsanUiUtils.setModalDialogHeight(FileServicesOvfSettings.DIALOG_WITH_THUMBPRINTS_HEIGHT);\n         this.thumbprintService.getThumbprint(this.publicOvfProps.url)\n               .then(result => this.thumbprint = result)\n               .catch(err => this.onError.emit([err]));\n      }\n\n      if (this.displayUseExistingOption) {\n         this.ovfSettings.ovfOption = OvfOption.EXISTING;\n         // If the latest ovf is the same as existing, disabled the auto download option\n         if (this.ovfUrl.includes(this.existingOvfVersion.toString())) {\n            this.hasLatestOvf = true;\n         }\n      } else {\n         this.ovfSettings.ovfOption = this.isAutoDownloadEnabled ? OvfOption.DOWNLOAD : OvfOption.MANUAL;\n      }\n   }\n\n   private get ovfUrl(): string {\n      if (this.publicOvfProps && this.publicOvfProps.url) {\n         return this.publicOvfProps.url;\n      }\n      return \"\";\n   }\n\n   changeDownloadApproach(event: any): void {\n      if (!this.ovfSettings.isManualDownload) {\n         this.ovfSettings.props = this.publicOvfProps;\n      }\n\n      this.ovfSettingsChange.emit(this.ovfSettings);\n   }\n\n   get isAutoDownloadEnabled(): boolean {\n      const downloadUrl: string = this.publicOvfProps && this.publicOvfProps.url;\n      return this.isInternetAccessEnabled && !VsanUiUtils.isEmpty(downloadUrl);\n   }\n\n   onOvfFileChange(event: any): void {\n      if (event.target.files) {\n         this.ovfSettings.localFiles = event.target.files;\n         this.selectedFiles = [];\n         const files: FileList = event.target.files;\n         for (let i: number = 0; i < files.length; i++) {\n            this.selectedFiles.push(files.item(i));\n         }\n      }\n   }\n\n   validate = (): string[] | Promise<string[]> => {\n      return this.validateOvfSelection(this.selectedFiles) || this.validateRequiredFiles();\n   };\n\n   private async validateRequiredFiles(): Promise<string[]> {\n      const requiredFiles: string[] = await this.getRequiredFilesFromOvf();\n      // find missed files\n      const missedFiles: string[] = requiredFiles.filter(fileName => {\n         // Match the file name from the files user selected\n         // If no match found, we know this required file is missing\n         const matchedFile: File = this.selectedFiles.find(file => {\n            return file.name === fileName;\n         });\n         return !matchedFile;\n      });\n      if (missedFiles.length > 0) {\n         return [VsanUiUtils\n               .getString(\"vsan.services.fileservices.wizard.ovf.uploading.ovf.other.missing\")]\n               .concat(missedFiles);\n      }\n\n      const ovfFile: File = this.getOvfFile(this.selectedFiles);\n      // find the files which are not required\n      const unrelevantFiles: string[] = this.selectedFiles.filter(file => {\n         return file !== ovfFile && !requiredFiles.some(fileName => fileName === file.name);\n      }).map(file => file.name);\n      if (unrelevantFiles.length > 0) {\n         return [VsanUiUtils\n               .getString(\"vsan.services.fileservices.wizard.ovf.uploading.ovf.other.unrelevant\")]\n               .concat(unrelevantFiles);\n      }\n      return null;\n   }\n\n   private getRequiredFilesFromOvf(): Promise<string[]> {\n      return new Promise<string[]>((resolve) => {\n         const ovfFile: File = this.getOvfFile(this.selectedFiles);\n         const fileReader: FileReader = new FileReader();\n         const requiredFiles: string[] = [];\n\n         // Bug 2404445: Add manifest file and signature file in UI OVF uploading manually workflow\n         // To fix it, UI needs to verify 2 additional files(signature and manifest),\n         // they share the same file name w/ the ovf file\n         const fileNameWithoutExtension: string = ovfFile.name.substr(0, ovfFile.name.lastIndexOf(\".ovf\"));\n         requiredFiles.push(...[\".mf\", \".cert\"].map(extension => fileNameWithoutExtension + extension));\n\n         fileReader.onloadend = () => {\n            const parser: DOMParser = new DOMParser();\n            const ovfXml: Document = parser.parseFromString(fileReader.result as string, \"text/xml\");\n            const referenceNodes: any = ovfXml.getElementsByTagName(\"References\");\n            for (let i: number = 0; i < referenceNodes.length; i++) {\n               const files: any = referenceNodes.item(i).getElementsByTagName(\"File\");\n               for (let j: number = 0; j < files.length; j++) {\n                  requiredFiles.push(files.item(j).getAttribute(\"ovf:href\"));\n               }\n            }\n            resolve(requiredFiles);\n         };\n         fileReader.readAsText(ovfFile);\n      });\n   }\n\n   /**\n    * Validates if an OVF file is selected\n    */\n   private validateOvfSelection(files: any[]): string[] {\n      const ovfFile: File = this.getOvfFile(this.selectedFiles);\n      if (!ovfFile) {\n         return [VsanUiUtils.getString(\"vsan.services.fileservices.wizard.ovf.uploading.ovf.missing\")];\n      }\n      const selectedOvfVersion: Version = Version.fromFilePathOrName(ovfFile.name);\n      if (Version.isSame(selectedOvfVersion, this.fsvmVersion)) {\n         return [VsanUiUtils.getString(\"vsan.services.fileservices.upgrade.ovf.version.same\")];\n      }\n      if (Version.isLarger(this.fsvmVersion, selectedOvfVersion)) {\n         return [VsanUiUtils.getString(\"vsan.services.fileservices.upgrade.ovf.version.old\")];\n      }\n      if (Version.isSame(selectedOvfVersion, this.existingOvfVersion)) {\n         return [VsanUiUtils.getString(\"vsan.services.fileservices.upgrade.ovf.version.existing.same\")];\n      }\n      if (Version.isLarger(this.existingOvfVersion, selectedOvfVersion)) {\n         return [VsanUiUtils.getString(\"vsan.services.fileservices.upgrade.ovf.version.existing.old\")];\n      }\n      if (Version.isNewMajorRelease(selectedOvfVersion, this.hostVersion)) {\n         return [VsanUiUtils.getString(\"vsan.services.fileservices.upgrade.ovf.version.notMatch\")];\n      }\n      return null;\n   }\n\n   private getOvfFile(files: any[]): File {\n      // the file name must end with \".ovf\"\n      return files.find(file => file.name.endsWith(\".ovf\"));\n   }\n\n   private updateDownloadTaskStatus = () => {\n      if (!this.downloadTask) {\n         return;\n      }\n      this.taskService.getInfo(this.downloadTask).then((taskInfoData: TaskInfoData) => {\n         this.taskInfo = taskInfoData;\n\n         switch (taskInfoData.status) {\n            case TaskStatus.RUNNING:\n               setTimeout(this.updateDownloadTaskStatus, 1000);\n               break;\n            case TaskStatus.PENDING:\n               this.downloadAlertType = AlertType.INFO;\n               this.downloadAlertMessage = VsanUiUtils.getString(\"vsan.services.fileservices.rtc.download.pending\");\n               break;\n            case TaskStatus.RUNNING:\n               this.downloadAlertType = AlertType.INFO;\n               this.downloadAlertMessage = VsanUiUtils.getString(\"vsan.services.fileservices.rtc.download.running\");\n               break;\n            case TaskStatus.SUCCESS:\n               this.downloadAlertType = AlertType.SUCCESS;\n               this.downloadAlertMessage = VsanUiUtils.getString(\"vsan.services.fileservices.rtc.download.succeeded\");\n               break;\n            case TaskStatus.ERROR:\n               this.downloadAlertType = AlertType.DANGER;\n               this.downloadAlertMessage = VsanUiUtils.getString(\"vsan.services.fileservices.rtc.download.failed\");\n               break;\n            default: {\n               Logger.warn(\"Unknown status: \" + taskInfoData.status);\n               this.downloadAlertType = AlertType.WARNING;\n               this.downloadAlertMessage = VsanUiUtils.getString(\"vsan.services.fileservices.rtc.download.unknown\");\n            }\n         }\n      }).catch(err => {\n         Logger.error(\"Cannot get task status: \" + err);\n         this.downloadAlertType = AlertType.WARNING;\n         this.downloadAlertMessage = VsanUiUtils.getString(\"vsan.services.fileservices.rtc.download.unknown\");\n      });\n   };\n\n   uploadOvf(): Observable<any> {\n      this.uploadProgress = 0;\n      this.remoteValidatingCompleted = false;\n      this.uploadObservable = this.fileService.uploadLocalOvf(ManagedObject.contextObject, this.ovfSettings.localFiles)\n            .pipe(catchError(this.handleUploadError));\n      this.uploadSubscription = this.uploadObservable.subscribe(this.handleUploadProgress);\n      return this.uploadObservable;\n   }\n\n   stopUpload(): void {\n      this.uploadSubscription.unsubscribe();\n      this.uploadSubscription = null;\n      this.uploadProgress = 0;\n\n      this.pendingHTTPRequests.next();\n      this.onCancel.emit();\n   }\n\n   private handleUploadError = (error: HttpErrorResponse) => {\n      let errorMessage: string = \"\";\n      if (error.error instanceof ErrorEvent) {\n         errorMessage = error.error.message;\n      } else {\n         errorMessage = error.error.error;\n      }\n      this.onError.emit([errorMessage]);\n      this.remoteValidatingCompleted = true;\n      return throwError(errorMessage);\n   };\n\n   private handleUploadProgress = (event: HttpEvent<any>) => {\n      switch (event.type) {\n         case HttpEventType.UploadProgress:\n            this.uploadProgress = Math.round(event.loaded / event.total * 100);\n            break;\n         case HttpEventType.Response:\n            this.remoteValidatingCompleted = true;\n            if (event.body && event.body.error) {\n               this.onError.emit([event.body.error]);\n            } else {\n               this.uploadComplete.emit();\n            }\n            break;\n      }\n   };\n}\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * Parse version string to a comparable object\n * '7.0.1.1000-39027875' => 'major.minor.revision.patchLevel-build'\n */\nexport class Version {\n   static readonly OVF_VERSION_PATTERN: RegExp = /.+(\\d+\\.\\d+\\.\\d+\\.\\d+-\\d+)_.+\\.ovf/;\n\n   major: number;\n   minor: number;\n   revision: number;\n   patchLevel: number;\n   build: number;\n\n   constructor(version: string) {\n      if (VsanUiUtils.isEmpty(version)) {\n         return;\n      }\n      let parts: string[] = version.split(\"-\");\n      if (parts.length > 1) {\n         this.build = parseInt(parts[1], 0);\n      }\n      parts = parts[0].split(\".\");\n      this.major = parseInt(parts[0], 0);\n      if (parts.length > 1) {\n         this.minor = parseInt(parts[1], 0);\n         if (parts.length > 2) {\n            this.revision = parseInt(parts[2], 0);\n         }\n         if (parts.length > 3) {\n            this.patchLevel = parseInt(parts[3], 0);\n         }\n      }\n   }\n\n   static isLarger(v1: Version, v2: Version): boolean {\n      return !!v1 && v1.compare(v2) > 0;\n   }\n\n   static isSame(v1: Version, v2: Version): boolean {\n      return (!v1 && !v2) || (!!v1 && v1.compare(v2) === 0);\n   }\n\n   /**\n    * Check if the v1 version is newer major version than the v2 version.\n    * We don't compare the build number here because for major version it doesn't have build info.\n    */\n   static isNewMajorRelease(v1: Version, v2: Version): boolean {\n      return v1.major > v2.major || v1.minor > v2.minor || v1.revision > v2.revision;\n   }\n\n   /**\n    * Method to get the ovf file version from the file name or path\n    */\n   static fromFilePathOrName(ovfFilePathOrName: string): Version {\n      return new Version(this.OVF_VERSION_PATTERN.exec(ovfFilePathOrName)[1]);\n   }\n\n   compare(that: Version): number {\n      const orderedFields: string[] = [\"major\", \"minor\", \"revision\", \"patchLevel\", \"build\"];\n      for (let i: number = 0; i <= orderedFields.length; i++) {\n         const fieldName: string = orderedFields[i];\n         if (this[fieldName] !== that[fieldName]) {\n            return this[fieldName] > that[fieldName] ? 1 : -1;\n         }\n      }\n      return 0;\n   }\n\n   toString(): string {\n      let versionStr: string = `${this.major}.${this.minor}.${this.revision}`;\n      if (this.patchLevel) {\n         versionStr += `.${this.patchLevel}`;\n      }\n      if (this.build) {\n         versionStr += `-${this.build}`;\n      }\n      return versionStr;\n   }\n}\n"],"sourceRoot":"webpack:///"}