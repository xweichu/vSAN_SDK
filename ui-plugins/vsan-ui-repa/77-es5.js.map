{"version":3,"sources":["webpack:///src/app/vsan/resync/view/resync-monitor.component.ts","webpack:///src/app/vsan/resync/action/edit-resync-throttling.html","webpack:///src/app/generated/resync-throttling-spec.ts","webpack:///src/app/vsan/common/directive/clr-button-group/clr-button-group-common.directive.ts","webpack:///src/app/vsan/resync/view/resync-monitor.html","webpack:///src/app/vsan/resync/view/resync-monitor-list.html","webpack:///src/app/vsan/resync/view/resync-monitor-list.component.ts","webpack:///src/app/vsan/resync/resync-monitor.module.ts","webpack:///src/app/vsan/resync/action/edit-resync-throttling.component.ts"],"names":["ResyncReasonCode","ResyncStatusCode","ResyncMonitorComponent","vsanResyncProvider","taskService","configService","permissionService","healthMutationProvider","capabilityProvider","storageService","navigationService","VsanUiUtils","ResyncMonitorListComponent","HEALTH_STATES_WITH_DELAY","REDUCED_AVAILABILITY_WITH_NO_REBUILD_DELAY_TIMER","REDUCED_AVAILABILITY_WITH_DURABILITY","REDUCED_AVAILABILITY_WITHOUT_DURABILITY","SCHEDULED","HEALTH_STATES_WITHOUT_DELAY","REDUCED_AVAILABILITY_WITH_NO_REBUILD","NONE","limitOptions","isResyncETAImprovementSupported","selectedIntent","ALL_INTENT","intentList","evacuate","dying_evacuate","rebalance","reconfigure","stale","merge_concat","object_format_change","VsanSyncReason_Unknown","selectedStatus","active","statusList","queued","suspended","loadingResyncingObjects","allowReload","activeComponentsToResync","getString","queuedComponentsToResync","suspendedComponentsToResync","activeBytesToResync","queuedBytesToResync","suspendedBytesToResync","totalETAToResync","activeETAToResync","queuedETAToResync","suspendedETAToResync","scheduledObjectsToResync","pendingObjectsToResync","_limitResults","updatePage","resyncData","resyncingObjectsData","getResyncingData","clusterRef","limitResults","then","result","handleResyncData","error","alertMessages","Factory","create","call","Array","fill","vsanResyncData","showPartitionWarning","isVsanClusterPartitioned","isResyncThrottlingSupported","isThrottlingButtonHidden","isResyncFilterSupported","isResyncFilterApiSupported","delayTimerData","errorMessage","push","updateComponentsToResyncLabels","updateBytesToResyncLabels","updateETAResyncLabels","updateScheduledResyncLabels","srOnlyMessage","updateSummaryData","getResyncingDataForAutoRefresh","clearTimeout","timer","setTimeout","REFRESH_SUMMARY_TIMEOUT_MS","refresh","updateResyncingObjects","getVsanDatastoreResyncingData","getResyncTypes","toString","bytesToResync","componentsToSync","components","createQueuedComponent","repair","bytes","name","getStatusLabel","status","Error","getSummaryResyncEtaLabel","noETADefaultValue","etaValue","etaToResync","TIME_FORMATTER","transform","getReasonLabel","navigateToHealthPage","context","selectedSubTestId","DISK_CAPACITY_TEST_ID","navigateTo","CLUSTER_HEALTH","navigateToVirtualObjects","hasDelayTimer","filterHealthStates","VIRTUAL_OBJECTS","awaitTask","task","getAwaitResult","getResyncIopsLimit","value","resyncThrottlingValue","handleResyncThrottlingValueError","handleTaskStatusError","isUnset","formatFileSize","activeETA","queuedETA","suspendedETA","hasActiveResyncObjects","hasQueuedResyncObjects","hasTotalResyncObjects","hasSuspendedResyncObjects","getResyncEtaLabel","hasPendingObjectsToResync","repairTimerData","getFormattedScheduledResync","objectsCountWithRepairTimer","minTimer","maxTimer","objectsCountPending","Number","getClusterRefFromLocalStorage","contextObject","retrieveData","clusterCapabilityData","fetch","pop","RESYNCING_OBJECTS_CONTEXT_KEY","Promise","all","getClusterCapabilityData","hasPermissions","EDIT_CLUSTER","hasEditPermission","isAdaptiveResyncOnlySupported","isSupported","delayTimer","getScheduledResync","objectsCount","repairClusterObjectsImmediate","r","err","setSize","open","resyncThresholdValue","taskRef","hasResyncingObjects","length","resyncEta","ResyncThrottlingSpec","iopsLimit","ClrButtonGroupCommonDirective","elRef","allButtons","nativeElement","querySelectorAll","clrButtons","filter","clrButton","directives","forEach","index","buttonFound","findButtonByName","directive","resolveButton","buttons","i","item","loading","policyNameFilter","data","getName","storageProfile","hostNameFilter","hostName","bytesFilter","etaFilter","intentFilter","reason","initData","presentVirtualObjectUuids","uuid","warn","resyncMonitorRoutes","path","component","ResyncMonitorModule","EditResyncThrottlingComponent","configureClusterMutationProvider","resyncDataLoading","alertMessage","handleHostResyncData","hostsResyncData","handleError","inovokeResyncThrottling","resyncSpec","resyncThrottling","closeModalDialog","getModalContext","hasOwnProperty","resyncThrottlingEnabled","originalThresholdValue","undefined","originalResyncThrottlingEnabled","setModalDialogHeight","showHostResyncTraffic","getHostsResyncTraffic","log2","getDatagridFooterLabel","Math","floor","log","LN2"],"mappings":"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","file":"77-es5.js","sourcesContent":["/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {DelayTimerData} from \"@generated/delay-timer-data\";\nimport {ObjectHealthIncomplianceReason} from \"@generated/object-health-incompliance-reason\";\nimport {ObjectHealthRebuildState} from \"@generated/object-health-rebuild-state\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {ResyncComponent} from \"@generated/resync-component\";\nimport {ResyncMonitorData} from \"@generated/resync-monitor-data\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {VsanConfigService} from \"@generated/vsan-config-service\";\nimport {VsanHealthMutationProvider} from \"@generated/vsan-health-mutation-provider\";\nimport {VsanObjectHealthState} from \"@generated/vsan-object-health-state\";\nimport {VsanResyncingComponentsProvider} from \"@generated/vsan-resyncing-components-provider\";\nimport {InlineViewContextKey} from \"@model/inline-view-context-key.data\";\nimport {TimePipe} from \"@pipe/TimePipe\";\nimport {PersistentStorageService} from \"@service/browser-storage.service\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {HealthContext} from \"@service/navigation/context/health-context\";\nimport {VirtualObjectsContext} from \"@service/navigation/context/virtual-objects-context\";\nimport {NavigationService, PlatformExtension} from \"@service/navigation/navigation.service\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {Logger} from \"@util/logger\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {BaseHealthState} from \"@util/vsan-health-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ResyncObjectsUtil} from \"../resync-objects-util\";\nimport {ResyncMonitorListComponent} from \"./resync-monitor-list.component\";\nimport ResyncReasonCode = ResyncComponent.ResyncReasonCode;\nimport ResyncStatusCode = ResyncComponent.ResyncStatusCode;\n\n@Component({\n   templateUrl: \"resync-monitor.html\",\n   styleUrls: [\"resync-monitor.scss\"],\n   selector: \"vsan-resync-monitor\",\n})\nexport class ResyncMonitorComponent implements OnInit {\n   VsanUiUtils: typeof VsanUiUtils = VsanUiUtils;\n   ResyncMonitorComponent: typeof ResyncMonitorComponent = ResyncMonitorComponent;\n   ResyncMonitorListComponent: typeof ResyncMonitorListComponent = ResyncMonitorListComponent;\n\n   private readonly HEALTH_STATES_WITH_DELAY: BaseHealthState[] = [\n      VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_NO_REBUILD_DELAY_TIMER,\n      ObjectHealthIncomplianceReason.REDUCED_AVAILABILITY_WITH_DURABILITY,\n      ObjectHealthIncomplianceReason.REDUCED_AVAILABILITY_WITHOUT_DURABILITY,\n      ObjectHealthRebuildState.SCHEDULED];\n\n   private readonly HEALTH_STATES_WITHOUT_DELAY: BaseHealthState[] = [\n      VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_NO_REBUILD,\n      ObjectHealthIncomplianceReason.REDUCED_AVAILABILITY_WITH_DURABILITY,\n      ObjectHealthIncomplianceReason.REDUCED_AVAILABILITY_WITHOUT_DURABILITY,\n      ObjectHealthRebuildState.NONE];\n\n   private static readonly REFRESH_SUMMARY_TIMEOUT_MS: number = 10 * 1000;\n   private static readonly TIME_FORMATTER: TimePipe = new TimePipe();\n   private static readonly DISK_CAPACITY_TEST_ID: string = \"com.vmware.vsan.health.test.physdiskcapacity\";\n\n   readonly limitOptions: number[] = [50, 100, 150, 200];\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   private timer: any;\n\n   private clusterCapabilityData: VsanCapabilityData;\n   isResyncETAImprovementSupported: boolean = false;\n\n   static readonly ALL_INTENT: string = \"all\";\n   selectedIntent: string | ResyncReasonCode = ResyncMonitorComponent.ALL_INTENT;\n   intentList: ResyncReasonCode[] = [\n      ResyncReasonCode.evacuate,\n      ResyncReasonCode.dying_evacuate,\n      ResyncReasonCode.rebalance,\n      // ResyncReasonCode.repair and ResyncReasonCode.reconfigure have the same label, just show one on UI.\n      ResyncReasonCode.reconfigure,\n      ResyncReasonCode.stale,\n      ResyncReasonCode.merge_concat,\n      ResyncReasonCode.object_format_change,\n      ResyncReasonCode.VsanSyncReason_Unknown,\n   ];\n\n   selectedStatus: ResyncStatusCode = ResyncStatusCode.active;\n   statusList: ResyncStatusCode[] = [\n      ResyncStatusCode.active,\n      ResyncStatusCode.queued,\n      ResyncStatusCode.suspended,\n   ];\n\n   resyncingObjectsData: ResyncMonitorData;\n   loadingResyncingObjects: boolean = false;\n\n   allowReload: boolean = false;\n   resyncData: ResyncMonitorData;\n   alertMessages: string[];\n   showPartitionWarning: boolean;\n   isResyncThrottlingSupported: boolean;\n   isResyncFilterSupported: boolean;\n   hasEditPermission: boolean;\n\n   activeComponentsToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n   queuedComponentsToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n   suspendedComponentsToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n\n   activeBytesToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n   queuedBytesToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n   suspendedBytesToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n\n   totalETAToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n   activeETAToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n   queuedETAToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n   suspendedETAToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n\n   scheduledObjectsToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n   pendingObjectsToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n   hasPendingObjectsToResync: boolean;\n\n   private _limitResults: number = 100;\n\n   get limitResults(): number {\n      return this._limitResults;\n   }\n\n   set limitResults(value: number) {\n      // The Number function call is needed because runtime the setter is invoked with a \"string\" value.\n      this._limitResults = Number(value);\n   }\n\n   private clusterRef: ManagedObject;\n\n   constructor(private vsanResyncProvider: VsanResyncingComponentsProvider,\n         private taskService: TaskMonitorService,\n         private configService: VsanConfigService,\n         private permissionService: PermissionService,\n         private healthMutationProvider: VsanHealthMutationProvider,\n         private capabilityProvider: VsanCapabilityProvider,\n         private storageService: PersistentStorageService,\n         private navigationService: NavigationService) {\n   }\n\n   ngOnInit(): void {\n      this.clusterRef = this.getClusterRefFromLocalStorage() || ManagedObject.contextObject;\n      this.retrieveData().then(() => {\n         this.isResyncETAImprovementSupported = this.clusterCapabilityData.isResyncETAImprovementSupported;\n         this.fetch();\n      }).catch(error => Logger.error(error));\n   }\n\n   private getClusterRefFromLocalStorage(): ManagedObject {\n      return this.storageService.pop(InlineViewContextKey.RESYNCING_OBJECTS_CONTEXT_KEY);\n   }\n\n   private async retrieveData(): Promise<void> {\n      [this.clusterCapabilityData, this.hasEditPermission] = await Promise.all([\n         this.capabilityProvider.getClusterCapabilityData(this.clusterRef),\n         this.permissionService.hasPermissions(this.clusterRef, [Privileges.EDIT_CLUSTER()])]);\n   }\n\n   @RefreshHandler\n   fetch(): void {\n      if (!this.isResyncETAImprovementSupported) {\n         this.updatePage();\n      } else {\n         this.updateSummaryData();\n         this.updateResyncingObjects();\n      }\n   }\n\n   /**\n    * Update all data on this page when resync ETA improvement is not supported.\n    */\n   private updatePage = () => {\n      this.resyncData = null;\n      this.loadingResyncingObjects = true;\n      this.resyncingObjectsData = null;\n\n      this.vsanResyncProvider.getResyncingData(this.clusterRef, this.limitResults)\n            .then((result: ResyncMonitorData) => {\n               this.loadingResyncingObjects = false;\n               this.resyncingObjectsData = result;\n               this.handleResyncData(result);\n            }, (error) => {\n               this.alertMessages = [VsanUiUtils.getString(\"vsan.monitor.resyncComponents.errorLoadingData\")];\n               this.loadingResyncingObjects = false;\n               this.allowReload = true;\n               // TODO (REPA) [mavrodievd] Replace with ResyncMonitorDataFactory.createEmpty() once we fully migrate to REPA.\n               this.resyncData = ResyncMonitorData.Factory.create.call(this, new Array(20).fill(null));\n            });\n   };\n\n   private get isThrottlingButtonHidden(): boolean {\n      return this.clusterCapabilityData.isAdaptiveResyncOnlySupported;\n   }\n\n   private handleResyncData = (vsanResyncData: ResyncMonitorData) => {\n      this.resyncData = vsanResyncData;\n      this.showPartitionWarning = vsanResyncData.isVsanClusterPartitioned;\n\n      this.isResyncThrottlingSupported = vsanResyncData.isResyncThrottlingSupported &&\n            !this.isThrottlingButtonHidden;\n\n      this.isResyncFilterSupported = vsanResyncData.isResyncFilterApiSupported;\n\n      this.alertMessages = [];\n      if (this.resyncData.delayTimerData && this.resyncData.delayTimerData.errorMessage) {\n         this.alertMessages.push(this.resyncData.delayTimerData.errorMessage);\n      }\n\n      if (this.isResyncETAImprovementSupported) {\n         this.updateComponentsToResyncLabels();\n         this.updateBytesToResyncLabels();\n         this.updateETAResyncLabels();\n         this.updateScheduledResyncLabels();\n      }\n      this.srOnlyMessage = VsanUiUtils.getString(\"vsan.monitor.resyncComponents.srMessage.resyncingData\");\n   };\n\n   /**\n    * Only refresh the summary data in the top pane when auto-refresh(resync ETA improvement is supported).\n    */\n   private updateSummaryData = () => {\n      this.vsanResyncProvider.getResyncingDataForAutoRefresh(this.clusterRef)\n            .then((result: ResyncMonitorData) => {\n               this.handleResyncData(result);\n               clearTimeout(this.timer);\n               // Auto refresh the top pane every 10 seconds.\n               this.timer = setTimeout(() => this.updateSummaryData(),\n                     ResyncMonitorComponent.REFRESH_SUMMARY_TIMEOUT_MS);\n            }, (error) => {\n               this.alertMessages = [VsanUiUtils.getString(\"vsan.monitor.resyncComponents.errorLoadingData\")];\n               this.allowReload = true;\n               // TODO (REPA) [mavrodievd] Replace with ResyncMonitorDataFactory.createEmpty() once we fully migrate to REPA.\n               this.resyncData = ResyncMonitorData.Factory.create.call(this, new Array(20).fill(null));\n               this.updateComponentsToResyncLabels();\n               this.updateBytesToResyncLabels();\n               this.updateETAResyncLabels();\n               this.updateScheduledResyncLabels();\n            });\n   };\n\n   refresh = () => {\n      if (!this.isResyncETAImprovementSupported) {\n         this.updatePage();\n      } else {\n         this.updateResyncingObjects();\n      }\n   };\n\n   /**\n    * Only update resyncing objects in the bottom pane after clicking Refresh button\n    * when supporting resync ETA improvement.\n    */\n   updateResyncingObjects = () => {\n      this.loadingResyncingObjects = true;\n      this.resyncingObjectsData = null;\n\n      this.vsanResyncProvider.getVsanDatastoreResyncingData(this.clusterRef, this.limitResults,\n            this.getResyncTypes(), this.selectedStatus.toString()).then(result => {\n         this.loadingResyncingObjects = false;\n         this.resyncingObjectsData = result;\n\n         if (this.selectedStatus === ResyncComponent.ResyncStatusCode.queued) {\n            if (!!this.resyncingObjectsData.bytesToResync || !!this.resyncingObjectsData.componentsToSync) {\n               this.resyncingObjectsData.components = [this.createQueuedComponent(\n                     this.resyncingObjectsData.bytesToResync, this.resyncingObjectsData.componentsToSync)];\n            }\n         }\n         this.srOnlyMessage = VsanUiUtils.getString(\"vsan.monitor.resyncComponents.srMessage.resyncingObjects\");\n      }).catch(error => {\n         this.loadingResyncingObjects = false;\n         this.alertMessages = [VsanUiUtils.getString(\"vsan.monitor.resyncComponents.list.error\")];\n         this.allowReload = true;\n         Logger.error(\"Unable to query resyncing objects. \" + error);\n      });\n   };\n\n   private getResyncTypes = (): string[] => {\n      if (this.selectedIntent === ResyncMonitorComponent.ALL_INTENT) {\n         // Using \"null\" to query all resyncing objects.\n         return [null];\n      } else if (this.selectedIntent === ResyncReasonCode.reconfigure) {\n         // repair and reconfigure have the same label \"Compliance\",\n         // we need to query data for both of them when selecting \"Compliance\" on the UI.\n         return [ResyncReasonCode.repair.toString(), ResyncReasonCode.reconfigure.toString()];\n      } else {\n         return [this.selectedIntent.toString()];\n      }\n   };\n\n   private createQueuedComponent = (bytes: number, components: number): ResyncComponent => {\n      const name: string = components === 1 ?\n            VsanUiUtils.getString(\"vsan.monitor.resyncComponents.queued.object\") :\n            VsanUiUtils.getString(\"vsan.monitor.resyncComponents.queued.objects\", components);\n      return ResyncComponent.Factory.create(name, null, null, null, null, bytes, null, null, null, true, null, null);\n   };\n\n   getStatusLabel = (status: ResyncStatusCode) => {\n      if (!status) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n\n      switch (status) {\n         case ResyncStatusCode.active:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.status.active\");\n         case ResyncStatusCode.queued:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.status.queued\");\n         case ResyncStatusCode.suspended:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.status.suspended\");\n         default:\n            throw new Error(\"Invalid resync status received: \" + status);\n      }\n   };\n\n   getSummaryResyncEtaLabel = (resyncingObjectsData: ResyncMonitorData) => {\n      let noETADefaultValue: string = VsanUiUtils.getString(\"vsan.monitor.resyncSummary.calculatingEta\");\n      // for suspended objects no ETA can be provided\n      if (this.selectedStatus === ResyncStatusCode.suspended) {\n         noETADefaultValue = VsanUiUtils.getString(\"vsan.monitor.resyncSummary.resyncSuspended\");\n      }\n\n      const etaValue: string = !resyncingObjectsData.etaToResync && resyncingObjectsData.bytesToResync\n            ? noETADefaultValue : ResyncMonitorComponent.TIME_FORMATTER.transform(resyncingObjectsData.etaToResync);\n\n      return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.list.eta.label\",\n            ResyncMonitorListComponent.getReasonLabel(this.selectedIntent as ResyncReasonCode), etaValue);\n   };\n\n   get pageDescription(): string {\n      return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.header\",\n            this.isResyncETAImprovementSupported ? \"\" : VsanUiUtils.getString(\"vsan.monitor.resyncComponents.header2\"));\n   }\n\n   navigateToHealthPage = () => {\n      const context: HealthContext = {\n         selectedSubTestId: ResyncMonitorComponent.DISK_CAPACITY_TEST_ID,\n      };\n      this.navigationService.navigateTo(PlatformExtension.CLUSTER_HEALTH, null, context);\n   };\n\n   get delayTimer(): string {\n      if (!this.resyncData) {\n         return VsanUiUtils.getString(\"vsan.loading\");\n      } else if (!this.resyncData.delayTimerData) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      } else {\n         const delayTimerData: DelayTimerData = this.resyncData.delayTimerData;\n         if (!delayTimerData.isSupported) {\n            return VsanUiUtils.getString(\"vsan.monitor.resyncSummary.delayTimer.notSupported\");\n         } else {\n            if (delayTimerData.delayTimer === 1) {\n               return VsanUiUtils.getString(\"vsan.monitor.resyncSummary.delayTimer.minute\");\n            } else {\n               return VsanUiUtils.getString(\"vsan.monitor.resyncSummary.delayTimer.minutes\", delayTimerData.delayTimer);\n            }\n         }\n      }\n   }\n\n   get componentsCount(): string {\n      if (!this.resyncData) {\n         return VsanUiUtils.getString(\"vsan.loading\");\n      } else if (VsanUiUtils.isUnset(this.resyncData.componentsToSync)) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      } else {\n         return this.resyncData.componentsToSync + \"\";\n      }\n   }\n\n   get bytesLeftToResync(): string {\n      if (!this.resyncData) {\n         return VsanUiUtils.getString(\"vsan.loading\");\n      } else if (VsanUiUtils.isUnset(this.resyncData.bytesToResync)) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      } else {\n         return VsanUiUtils.formatFileSize(this.resyncData.bytesToResync);\n      }\n   }\n\n   get etaToCompliance(): string | number {\n      if (!this.resyncData) {\n         return VsanUiUtils.getString(\"vsan.loading\");\n      } else if (VsanUiUtils.isUnset(this.resyncData.etaToResync)) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      } else if (this.resyncData.etaToResync <= 0) {\n         return VsanUiUtils.getString(\"vsan.monitor.resyncSummary.eta.unknown\");\n      } else {\n         return this.resyncData.etaToResync;\n      }\n   }\n\n   get scheduledResync(): string {\n      return ResyncObjectsUtil.getScheduledResync(this.resyncData, this.isResyncETAImprovementSupported);\n   }\n\n   navigateToVirtualObjects = (hasDelayTimer: boolean) => {\n      const context: VirtualObjectsContext = {};\n      context.filterHealthStates = hasDelayTimer ? this.HEALTH_STATES_WITH_DELAY : this.HEALTH_STATES_WITHOUT_DELAY;\n\n      this.navigationService.navigateTo(PlatformExtension.VIRTUAL_OBJECTS, null, context);\n   };\n\n\n   get isResyncNowEnabled(): boolean {\n      if (!this.resyncData || !this.resyncData.repairTimerData || !this.resyncData.repairTimerData.isSupported) {\n         return false;\n      }\n\n      return this.isResyncETAImprovementSupported\n            ? this.resyncData.repairTimerData.objectsCountWithRepairTimer > 0\n            : this.resyncData.repairTimerData.objectsCount > 0;\n   }\n\n   onResyncNowClicked(): void {\n      this.healthMutationProvider.repairClusterObjectsImmediate(this.clusterRef)\n            .then(r => this.fetch())\n            .catch((err) => {\n               Logger.error(err);\n               this.alertMessages = [VsanUiUtils.getString(\"vsan.monitor.cluster.repair.error\")];\n               this.allowReload = false;\n            });\n   }\n\n   onResyncThrottling(): void {\n      new ModalBuilder(\"resyncingComponents/editThrottling\")\n            .setSize(700, 510)\n            .open({\n               resyncThresholdValue: this.resyncData.resyncThrottlingValue,\n            })\n            .then((taskRef: ManagedObject) => this.awaitTask(taskRef));\n   }\n\n   awaitTask = (task: ManagedObject): void => {\n      // Await task completion and notify parent view so it gets refreshed\n      this.taskService.getAwaitResult(task)\n            .then(() => {\n               this.configService.getResyncIopsLimit(this.clusterRef)\n                     .then(value => this.resyncData.resyncThrottlingValue = value)\n                     .catch(this.handleResyncThrottlingValueError);\n            }).catch(this.handleTaskStatusError);\n   };\n\n   private handleResyncThrottlingValueError = (error: any): void => {\n      Logger.error(\"Unable to get RESYNC_THROTTLING_PROPERTY result. Check vpshere client logs for errors.\", error);\n   };\n\n   private handleTaskStatusError = (error: any): void => {\n      Logger.error(\"Unable to get task status result. Check vpshere client logs for errors.\", error);\n   };\n\n   get resyncingObjectsSummaryVisible(): boolean {\n      return !this.loadingResyncingObjects && this.hasResyncingObjects &&\n            this.selectedIntent.toString() !== ResyncMonitorComponent.ALL_INTENT;\n   }\n\n   get hasResyncingObjects(): boolean {\n      return !!this.resyncingObjectsData && !!this.resyncingObjectsData.components &&\n            this.resyncingObjectsData.components.length > 0;\n   }\n\n   private updateComponentsToResyncLabels = () => {\n      if (!this.resyncData) {\n         this.activeComponentsToResync = VsanUiUtils.getString(\"vsan.loading\");\n         this.queuedComponentsToResync = VsanUiUtils.getString(\"vsan.loading\");\n         this.suspendedComponentsToResync = VsanUiUtils.getString(\"vsan.loading\");\n      } else if (VsanUiUtils.isUnset(this.resyncData.activeComponentsToResync) &&\n            VsanUiUtils.isUnset(this.resyncData.queuedComponentsToResync) &&\n            VsanUiUtils.isUnset(this.resyncData.suspendedComponentsToResync)) {\n         this.activeComponentsToResync = VsanUiUtils.getString(\"vsan.na.label\");\n         this.queuedComponentsToResync = VsanUiUtils.getString(\"vsan.na.label\");\n         this.suspendedComponentsToResync = VsanUiUtils.getString(\"vsan.na.label\");\n      } else {\n         this.activeComponentsToResync = this.resyncData.activeComponentsToResync + \"\";\n         this.queuedComponentsToResync = this.resyncData.queuedComponentsToResync + \"\";\n         this.suspendedComponentsToResync = this.resyncData.suspendedComponentsToResync + \"\";\n      }\n   };\n\n   private updateBytesToResyncLabels = () => {\n      if (!this.resyncData) {\n         this.activeBytesToResync = VsanUiUtils.getString(\"vsan.loading\");\n         this.queuedBytesToResync = VsanUiUtils.getString(\"vsan.loading\");\n         this.suspendedBytesToResync = VsanUiUtils.getString(\"vsan.loading\");\n      } else {\n         this.activeBytesToResync = VsanUiUtils.formatFileSize(this.resyncData.activeBytesToResync);\n         this.queuedBytesToResync = VsanUiUtils.formatFileSize(this.resyncData.queuedBytesToResync);\n         this.suspendedBytesToResync = VsanUiUtils.formatFileSize(this.resyncData.suspendedBytesToResync);\n      }\n   };\n\n   private updateETAResyncLabels = () => {\n      if (!this.resyncData) {\n         this.totalETAToResync = VsanUiUtils.getString(\"vsan.loading\");\n         this.activeETAToResync = VsanUiUtils.getString(\"vsan.loading\");\n         this.queuedETAToResync = VsanUiUtils.getString(\"vsan.loading\");\n         this.suspendedETAToResync = VsanUiUtils.getString(\"vsan.loading\");\n         return;\n      } else if (VsanUiUtils.isUnset(this.resyncData.bytesToResync) &&\n            VsanUiUtils.isUnset(this.resyncData.activeETA) &&\n            VsanUiUtils.isUnset(this.resyncData.queuedETA) &&\n            VsanUiUtils.isUnset(this.resyncData.suspendedETA)) {\n         this.totalETAToResync = VsanUiUtils.getString(\"vsan.na.label\");\n         this.activeETAToResync = VsanUiUtils.getString(\"vsan.na.label\");\n         this.queuedETAToResync = VsanUiUtils.getString(\"vsan.na.label\");\n         this.suspendedETAToResync = VsanUiUtils.getString(\"vsan.na.label\");\n         return;\n      }\n\n      // Show ETA label based on it's corresponding resyncing objects\n      const hasActiveResyncObjects: boolean = !!this.resyncData.activeBytesToResync;\n      const hasQueuedResyncObjects: boolean = !!this.resyncData.queuedBytesToResync;\n      // for total ETA consider total bytes to resync to resync, only if they include active or queued bytes to resync\n      const hasTotalResyncObjects: boolean = !!this.resyncData.bytesToResync\n            && (!!this.resyncData.activeBytesToResync || !!this.resyncData.queuedBytesToResync);\n      // for Suspended ETA consider suspended bytes to resync, only if active bytes are also present\n      const hasSuspendedResyncObjects: boolean =\n            !!this.resyncData.suspendedBytesToResync && !!this.resyncData.activeBytesToResync;\n\n      this.activeETAToResync = this.getResyncEtaLabel(this.resyncData.activeETA, hasActiveResyncObjects);\n      this.queuedETAToResync = this.getResyncEtaLabel(this.resyncData.queuedETA, hasQueuedResyncObjects);\n\n      // show suspended resync status label if there are suspended bytes to resync, suspended ETA is not provided and\n      // there are no active bytes to resync as well (if there are ETA is supposed to be calculated)\n      if (!!this.resyncData.suspendedBytesToResync && !this.resyncData.suspendedETA\n            && !this.resyncData.activeBytesToResync) {\n         this.suspendedETAToResync = VsanUiUtils.getString(\"vsan.monitor.resyncSummary.resyncSuspended\");\n      } else {\n         this.suspendedETAToResync = this.getResyncEtaLabel(this.resyncData.suspendedETA, hasSuspendedResyncObjects);\n      }\n\n      // show suspended resync status label if there are only suspended bytes to resync and the returned ETA is 0\n      if (!!this.resyncData.suspendedBytesToResync && !this.resyncData.suspendedETA\n            && !this.resyncData.activeBytesToResync && !this.resyncData.queuedBytesToResync) {\n         this.totalETAToResync = VsanUiUtils.getString(\"vsan.monitor.resyncSummary.resyncSuspended\");\n      } else {\n         this.totalETAToResync = this.getResyncEtaLabel(this.resyncData.etaToResync, hasTotalResyncObjects);\n      }\n   };\n\n   private getResyncEtaLabel(resyncEta: number, hasResyncingObjects: boolean): string {\n      if (!hasResyncingObjects) {\n         return ResyncMonitorComponent.TIME_FORMATTER.transform(0);\n      }\n\n      return !!resyncEta ? ResyncMonitorComponent.TIME_FORMATTER.transform(resyncEta)\n            : VsanUiUtils.getString(\"vsan.monitor.resyncSummary.calculatingEta\");\n   }\n\n   private updateScheduledResyncLabels = () => {\n      this.hasPendingObjectsToResync = false;\n\n      if (!this.resyncData) {\n         this.scheduledObjectsToResync = VsanUiUtils.getString(\"vsan.loading\");\n         this.pendingObjectsToResync = VsanUiUtils.getString(\"vsan.loading\");\n      } else if (!this.resyncData.repairTimerData) {\n         this.scheduledObjectsToResync = VsanUiUtils.getString(\"vsan.na.label\");\n         this.pendingObjectsToResync = VsanUiUtils.getString(\"vsan.na.label\");\n      } else {\n         this.scheduledObjectsToResync = ResyncObjectsUtil.getFormattedScheduledResync(\n               this.resyncData.repairTimerData.objectsCountWithRepairTimer,\n               this.resyncData.repairTimerData.minTimer,\n               this.resyncData.repairTimerData.maxTimer);\n\n         if (this.resyncData.repairTimerData.objectsCountPending) {\n            this.pendingObjectsToResync = this.resyncData.repairTimerData.objectsCountPending === 1\n                  ? VsanUiUtils.getString(\"vsan.monitor.resyncSummary.pendingResync.message.pending.one.object\")\n                  : VsanUiUtils.getString(\"vsan.monitor.resyncSummary.pendingResync.message.pending.many.objects\",\n                        this.resyncData.repairTimerData.objectsCountPending);\n            this.hasPendingObjectsToResync = true;\n         } else {\n            this.pendingObjectsToResync = VsanUiUtils.getString(\n                  \"vsan.monitor.resyncSummary.scheduledResync.message.none\");\n         }\n      }\n   };\n}\n","<!--Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-edit-prompt\n      [title]=\"'vsan.monitor.resyncComponents.resync.throttling.action.title' | localized\"\n      [(alertMessage)]=\"alertMessage\"\n      (onConfirm)=\"onOkClicked()\">\n   <div id=\"dialog-container\" class=\"dialog-container\">\n      <span id=\"edit-resync-info\">\n         {{\"vsan.monitor.resyncComponents.resync.throttling.action.info\" | localized}}\n      </span>\n      <vsan-validation\n            id=\"edit-resync-warning\"\n            [alert]=\"'vsan.monitor.resyncComponents.resync.throttling.action.warning' | localized\"\n            alertType=\"warning\"\n            [allowClose]=\"false\">\n      </vsan-validation>\n      <clr-checkbox-wrapper>\n         <input type=\"checkbox\"\n                clrCheckbox\n                id=\"enable-resync-throttling-checkbox\"\n                name=\"enableResyncThrottlingCheckbox\"\n                [(ngModel)]=\"resyncThrottlingEnabled\"/>\n         <label>{{\"vsan.monitor.resyncComponents.resync.throttling.action.enable.label\" | localized}}</label>\n      </clr-checkbox-wrapper>\n      <div class=\"nested\" [class.disable-action]=\"!resyncThrottlingEnabled\">\n         <div>\n            {{\"vsan.monitor.resyncComponents.resync.throttling.action.slider.text\" | localized}}\n         </div>\n         <div id=\"throttling-limit\">\n            <span>{{\"vsan.monitor.resyncComponents.resync.throttling.limit\" | localized : 1}}</span>\n            <input name=\"throttling-limit\"\n                   type=\"range\"\n                   [class.disable-action]=\"!resyncThrottlingEnabled\"\n                   [disabled]=\"!resyncThrottlingEnabled\"\n                   [(ngModel)]=\"resyncThresholdSliderValue\"\n                   min=0 max=9 step=1\n                   title=\"{{resyncThresholdValue}}\"/>\n            <span>{{\"vsan.monitor.resyncComponents.resync.throttling.limit\" | localized : 512}}</span>\n         </div>\n         <div id=\"resync-throttling-value\">\n            {{\"vsan.monitor.resyncComponents.resync.throttling.selected.limit\" | localized : resyncThresholdValue}}\n         </div>\n      </div>\n      <a href=\"javascript://\"\n         *ngIf=\"!showHostResyncTraffic\"\n         id=\"show-host-traffic-link\"\n         (click)=\"showHostResyncData()\">\n         {{\"vsan.monitor.resyncComponents.resync.throttling.showHostsLinkText\" | localized}}\n      </a>\n      <ng-container *ngIf=\"showHostResyncTraffic\">\n         <clr-button-group class=\"btn-link\">\n            <clr-button id=\"refresh\"\n                        name=\"refresh\"\n                        (click)=\"fetch()\"\n                        class=\"btn btn-sm\">\n               {{\"vsan.common.refresh\" | localized}}\n            </clr-button>\n         </clr-button-group>\n         <clr-datagrid id=\"resync-host-traffic-grid\"\n                       [clrDgLoading]=\"resyncDataLoading\">\n            <clr-dg-column [clrDgField]=\"'name'\">\n               {{\"vsan.monitor.resyncComponents.resync.throttling.host\" | localized}}\n            </clr-dg-column>\n            <clr-dg-column [clrDgField]=\"'resyncTraffic'\">\n               {{\"vsan.monitor.resyncComponents.resync.throttling.currentResyncTraffic\" | localized}}\n            </clr-dg-column>\n            <clr-dg-row\n                  *clrDgItems=\"let host of hostsResyncData\"\n                  [clrDgItem]=\"host\">\n               <clr-dg-cell>\n                  <clr-icon [attr.shape]=\"host.primaryIconId\"></clr-icon>\n                  <span title=\"{{host.name}}\">{{host.name}}</span>\n               </clr-dg-cell>\n               <clr-dg-cell>{{host.resyncTraffic}}</clr-dg-cell>\n            </clr-dg-row>\n            <!-- Datagrid Footer -->\n            <clr-dg-footer> {{getDatagridFooterLabel()}}</clr-dg-footer>\n         </clr-datagrid>\n      </ng-container>\n   </div>\n</vsan-edit-prompt>\n","\nexport interface ResyncThrottlingSpec {\n\n   iopsLimit: number;\n} //class ResyncThrottlingSpec\n\nexport module ResyncThrottlingSpec{\nexport class Factory {\n\n   static create = (iopsLimit: number): ResyncThrottlingSpec => {\n      return { iopsLimit: iopsLimit, };\n   }\n\n\n} //class Factory\n\n} //module ResyncThrottlingSpec\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterContentInit, ContentChildren, Directive, ElementRef} from \"@angular/core\";\nimport {ClrButton} from \"@clr/angular\";\nimport {ClrButtonBaseDirective, DirectiveHolder} from \"@directive/clr-button-group/clr-button-base.directive\";\n\n/**\n * Applies on every clr-button-group and help to link the clr-button with directive applieds on it,  which extends\n * {@link ClrButtonBaseDirective}, to the actual rendered html button.\n */\n@Directive({\n   selector: \"clr-button-group\",\n})\nexport class ClrButtonGroupCommonDirective implements AfterContentInit {\n\n   @ContentChildren(ClrButton, {descendants: true})\n   clrButtons: ClrButton[];\n\n   constructor(private elRef: ElementRef) {}\n\n   ngAfterContentInit(): void {\n      setTimeout(() => {\n         const allButtons: NodeListOf<HTMLButtonElement> = this.elRef.nativeElement.querySelectorAll(\"button\");\n         // match button with clrButton and notify directives\n         this.clrButtons.filter(clrButton => !!(clrButton as DirectiveHolder).directives)\n               .forEach((clrButton, index) => {\n                  const buttonFound: HTMLButtonElement = this.findButtonByName(clrButton.name, allButtons);\n                  if (buttonFound) {\n                     (clrButton as DirectiveHolder).directives.forEach(directive => {\n                        directive.resolveButton(clrButton, buttonFound, index);\n                     });\n                  }\n               });\n      });\n   }\n\n   private findButtonByName(name: string, buttons: NodeListOf<HTMLButtonElement>): HTMLButtonElement {\n      for (let i: number = 0; i < buttons.length; i++) {\n         if (buttons.item(i).name === name) {\n            return buttons.item(i);\n         }\n      }\n      return null;\n   }\n\n}","<!--Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<h5 vsan-auto-focus>\n   {{\"vsan.monitor.resyncingComponents\" | localized}}\n</h5>\n<vsan-validation id=\"validation-message\"\n                 *ngIf=\"alertMessages?.length > 0\"\n                 [(alerts)]=\"alertMessages\"\n                 [allowReload]=\"allowReload\"\n                 (onReload)=\"fetch()\"\n                 (onClosed)=\"alertMessages = null\">\n</vsan-validation>\n<span>{{pageDescription}}</span>\n<!--- TODO: Add support for \"See more\" link to the validation component -->\n<vsan-validation id=\"networkPartitionWarning\"\n                 *ngIf=\"showPartitionWarning\"\n                 alert=\"{{'vsan.monitor.virtualDisks.networkPartitionLabel' | localized}}\"\n                 [alertType]=\"'warning'\"\n                 [allowClose]=\"false\">\n</vsan-validation>\n<vsan-validation id=\"resyncThrottlingWarning\"\n                 *ngIf=\"resyncData?.resyncThrottlingValue > 0\"\n                 alert=\"{{'vsan.monitor.resyncSummary.resyncThrottlingSetWarning' | localized}}\"\n                 [alertType]=\"'warning'\"\n                 [allowClose]=\"false\">\n</vsan-validation>\n<vsan-validation id=\"resync-suspended-warning\"\n                 *ngIf=\"!!resyncData?.suspendedBytesToResync\"\n                 alert=\"{{'vsan.monitor.resyncComponents.suspended.warning' | localized}}\"\n                 [alertType]=\"'warning'\"\n                 [allowClose]=\"false\"\n                 [allowReload]=\"true\"\n                 actionLabel=\"{{'vsan.common.details' | localized}}\"\n                 (onReload)=\"navigateToHealthPage()\">\n</vsan-validation>\n\n<clr-stack-view>\n   <clr-stack-header>\n      <div class=\"section-info\">\n         <span id=\"object-repair-timer\">{{\"vsan.monitor.resyncSummary.delayTimer\"|localized}}</span>\n         <span id=\"delay-timer\">{{delayTimer}}</span>\n         <clr-signpost [vsan-signpost-title]=\"'vsan.monitor.resyncSummary.delayTimer.signpost.label' | localized\">\n            <clr-signpost-content *clrIfOpen clrPosition=\"right-bottom\">\n               <h3 id=\"object-repair-timer-title\">{{\"vsan.monitor.resyncSummary.delayTimer.title\"|localized}}</h3>\n               <span>{{\"vsan.services.advancedOptions.objectRepairTimer.signpost\"|localized}}</span>\n            </clr-signpost-content>\n         </clr-signpost>\n      </div>\n      <div *ngIf=\"isResyncETAImprovementSupported\" class=\"section-info\">\n         {{\"vsan.monitor.resyncComponents.resync.autoRefresh.hint\" | localized}}\n      </div>\n      <button id=\"resyncThrottlingButton\"\n              *ngIf=\"isResyncThrottlingSupported\"\n              class=\"btn btn-sm btn-outline stack-action\"\n              type=\"button\"\n              [class.disable-action]=\"!hasEditPermission\"\n              (click)=\"onResyncThrottling()\">\n         {{\"vsan.monitor.resyncComponents.resync.throttling.action.label\" | localized}}\n      </button>\n   </clr-stack-header>\n   <clr-stack-block>\n      <clr-stack-label id=\"componentsCountLabel\">{{\"vsan.monitor.resyncSummary.resyncingComponents\" | localized}}\n      </clr-stack-label>\n      <clr-stack-content id=\"componentsCount\">\n         {{componentsCount}}\n         <clr-signpost *ngIf=\"isResyncETAImprovementSupported && resyncData?.componentsToSync\"\n                       [vsan-signpost-title]=\"'vsan.monitor.resyncSummary.resyncingObjects.totalObjects.signpost.label' | localized\">\n            <clr-signpost-content id=\"total-objects-resync-info-label\" *clrIfOpen>\n               {{\"vsan.monitor.resyncSummary.resyncingObjects.totalObjects.description\"|localized}}\n            </clr-signpost-content>\n         </clr-signpost>\n      </clr-stack-content>\n      <!--Show detailed view when isResyncETAImprovementSupported is supported-->\n      <ng-container ngProjectAs=\"clr-stack-block\" *ngIf=\"isResyncETAImprovementSupported\">\n         <clr-stack-block id=\"active-components-to-resync-block\">\n            <clr-stack-label>{{\"vsan.monitor.resyncSummary.resyncingObjects.active\" | localized}}</clr-stack-label>\n            <clr-stack-content>{{activeComponentsToResync}}</clr-stack-content>\n         </clr-stack-block>\n         <clr-stack-block id=\"queued-components-to-resync-block\">\n            <clr-stack-label>{{\"vsan.monitor.resyncSummary.resyncingObjects.queued\" | localized}}</clr-stack-label>\n            <clr-stack-content>{{queuedComponentsToResync}}</clr-stack-content>\n         </clr-stack-block>\n         <clr-stack-block id=\"suspended-components-to-resync-block\">\n            <clr-stack-label>{{\"vsan.monitor.resyncSummary.resyncingObjects.suspended\" | localized}}</clr-stack-label>\n            <clr-stack-content>{{suspendedComponentsToResync}}</clr-stack-content>\n         </clr-stack-block>\n      </ng-container>\n   </clr-stack-block>\n   <clr-stack-block>\n      <clr-stack-label id=\"bytesLeftLabel\">\n         {{\"vsan.monitor.resyncSummary.bytesToResync\" | localized}}\n      </clr-stack-label>\n      <clr-stack-content id=\"bytesLeft\">{{bytesLeftToResync}}</clr-stack-content>\n      <!--Show detailed view when isResyncETAImprovementSupported is supported-->\n      <ng-container ngProjectAs=\"clr-stack-block\" *ngIf=\"isResyncETAImprovementSupported\">\n         <clr-stack-block id=\"active-bytes-to-resync-block\">\n            <clr-stack-label>\n               {{\"vsan.monitor.resyncSummary.resyncingObjects.active\" | localized}}\n            </clr-stack-label>\n            <clr-stack-content>{{activeBytesToResync}}</clr-stack-content>\n         </clr-stack-block>\n         <clr-stack-block id=\"queued-bytes-to-resync-block\">\n            <clr-stack-label>\n               {{\"vsan.monitor.resyncSummary.resyncingObjects.queued\" | localized}}\n            </clr-stack-label>\n            <clr-stack-content>{{queuedBytesToResync}}</clr-stack-content>\n         </clr-stack-block>\n         <clr-stack-block id=\"suspended-bytes-to-resync-block\">\n            <clr-stack-label>\n               {{\"vsan.monitor.resyncSummary.resyncingObjects.suspended\" | localized}}\n            </clr-stack-label>\n            <clr-stack-content>{{suspendedBytesToResync}}</clr-stack-content>\n         </clr-stack-block>\n      </ng-container>\n   </clr-stack-block>\n   <clr-stack-block *ngIf=\"!isResyncETAImprovementSupported\">\n      <clr-stack-label id=\"etaToComplianceLabel\">\n         {{\"vsan.monitor.resyncSummary.eta\" | localized}}\n      </clr-stack-label>\n      <clr-stack-content id=\"etaToCompliance\">\n         {{etaToCompliance | timeSpan}}\n      </clr-stack-content>\n   </clr-stack-block>\n   <!--Show detailed view when isResyncETAImprovementSupported is supported-->\n   <clr-stack-block *ngIf=\"isResyncETAImprovementSupported\">\n      <clr-stack-label id=\"resyncing-eta-label\">\n         {{\"vsan.monitor.resyncSummary.totalResyncingEta\" | localized}}\n      </clr-stack-label>\n      <clr-stack-content id=\"resyncing-eta\">{{totalETAToResync}}</clr-stack-content>\n      <ng-container ngProjectAs=\"clr-stack-block\">\n         <clr-stack-block id=\"active-eta-to-resync-block\">\n            <clr-stack-label>\n               {{\"vsan.monitor.resyncSummary.resyncingObjects.active\" | localized}}\n            </clr-stack-label>\n            <clr-stack-content>{{activeETAToResync}}</clr-stack-content>\n         </clr-stack-block>\n         <clr-stack-block id=\"queued-eta-to-resync-block\">\n            <clr-stack-label>\n               {{\"vsan.monitor.resyncSummary.resyncingObjects.queued\" | localized}}\n            </clr-stack-label>\n            <clr-stack-content>{{queuedETAToResync}}</clr-stack-content>\n         </clr-stack-block>\n         <clr-stack-block id=\"suspended-eta-to-resync-block\">\n            <clr-stack-label>\n               {{\"vsan.monitor.resyncSummary.resyncingObjects.suspended\" | localized}}\n            </clr-stack-label>\n            <clr-stack-content>{{suspendedETAToResync}}</clr-stack-content>\n         </clr-stack-block>\n      </ng-container>\n   </clr-stack-block>\n   <clr-stack-block>\n      <clr-stack-label id=\"scheduled-resync-stack-label\">\n         {{'vsan.monitor.resyncSummary.scheduledResync.label' | localized}}\n         <ng-container *ngIf=\"!isResyncETAImprovementSupported\">\n            <ng-container *ngTemplateOutlet=\"scheduledResyncSignpostInfo\"></ng-container>\n         </ng-container>\n      </clr-stack-label>\n      <clr-stack-content id=\"scheduled-resync\">\n         <span id=\"scheduled-resync-text\">\n            {{scheduledResync}}\n         </span>\n         <ng-container *ngIf=\"!isResyncETAImprovementSupported\">\n            <ng-container *ngTemplateOutlet=\"scheduledResyncNavigationControls\"></ng-container>\n         </ng-container>\n      </clr-stack-content>\n      <!--Show detailed view when isResyncETAImprovementSupported is supported-->\n      <ng-container ngProjectAs=\"clr-stack-block\" *ngIf=\"isResyncETAImprovementSupported\">\n         <clr-stack-block id=\"scheduled-to-resync-objects-block\">\n            <clr-stack-label>\n               {{\"vsan.monitor.resyncSummary.scheduledObjectsResync.label\" | localized}}\n               <ng-container *ngTemplateOutlet=\"scheduledResyncSignpostInfo\"></ng-container>\n            </clr-stack-label>\n            <clr-stack-content>\n               <span id=\"scheduled-objects-to-resync\">{{scheduledObjectsToResync}}</span>\n               <ng-container *ngTemplateOutlet=\"scheduledResyncNavigationControls\"></ng-container>\n            </clr-stack-content>\n         </clr-stack-block>\n         <clr-stack-block id=\"pending-resync-block\">\n            <clr-stack-label>\n               {{\"vsan.monitor.resyncSummary.pendingResync.label\" | localized}}\n               <clr-signpost [vsan-signpost-title]=\"'vsan.monitor.resyncSummary.pendingResync.signpost.label' | localized\">\n                  <clr-signpost-content id=\"pending-resync-info-label\" *clrIfOpen>\n                     {{\"vsan.monitor.resyncSummary.pendingResync.description\"|localized}}\n                     <ul class=\"list\">\n                        <li>{{\"vsan.monitor.resyncSummary.pendingResync.description.lackOfSpaceReason\"|localized}}</li>\n                        <li>{{\"vsan.monitor.resyncSummary.pendingResync.description.lackOfFaultDomains\"|localized}}</li>\n                        <li>{{\"vsan.monitor.resyncSummary.pendingResync.description.componentLimitReached\"|localized}}</li>\n                     </ul>\n                  </clr-signpost-content>\n               </clr-signpost>\n            </clr-stack-label>\n            <clr-stack-content>\n               <span id=\"pending-objects-to-resync\">{{pendingObjectsToResync}}</span>\n               <button id=\"pending-objects-view-details\"\n                       [disabled]=\"!hasPendingObjectsToResync\"\n                       (click)=\"navigateToVirtualObjects(false)\"\n                       class=\"btn btn-sm btn-link\">\n                  {{\"vsan.monitor.resyncSummary.pendingResync.viewDetails\" | localized}}\n               </button>\n            </clr-stack-content>\n         </clr-stack-block>\n      </ng-container>\n   </clr-stack-block>\n   <!--Template with signpost information for scheduled resync objects-->\n   <ng-template #scheduledResyncSignpostInfo>\n      <clr-signpost [vsan-signpost-title]=\"'vsan.monitor.resyncSummary.scheduledResync.signpost.label' | localized\">\n         <clr-signpost-content id=\"scheduled-resync-info-label\" *clrIfOpen>\n            {{\"vsan.monitor.resyncSummary.scheduledResync.description\"|localized}}\n         </clr-signpost-content>\n      </clr-signpost>\n   </ng-template>\n   <!--Template with navigation options for resync objects with valid delay timer-->\n   <ng-template #scheduledResyncNavigationControls>\n      <button id=\"navigate-virtual-objects\"\n              [disabled]=\"!isResyncNowEnabled\"\n              (click)=\"navigateToVirtualObjects(true)\"\n              class=\"btn btn-sm btn-link\">\n         {{\"vsan.monitor.resyncSummary.pendingResync.viewDetails\"|localized}}\n      </button>\n      <button id=\"resync-now\"\n              [disabled]=\"!isResyncNowEnabled\"\n              (click)=\"onResyncNowClicked()\"\n              class=\"btn btn-sm btn-link\">\n         {{\"vsan.monitor.resyncSummary.scheduledResync.resyncNow\" | localized}}\n      </button>\n   </ng-template>\n</clr-stack-view>\n<h6 id=\"resync-summary-object-list-header\">{{\"vsan.monitor.resyncSummary.overview.objectListSection\"|localized}}</h6>\n\n<div id=\"limit-results-container\"\n     class=\"limit-results-container\"\n     role=\"group\"\n     aria-labelledby=\"resync-summary-object-list-header\">\n   <ng-container *ngIf=\"isResyncETAImprovementSupported\">\n      <div class=\"filter-input\">\n         <label id=\"intent-label\"\n                for=\"intent-list\">\n            {{\"vsan.monitor.resyncComponents.intent.label\" | localized}}\n         </label>\n         <clr-select-container>\n            <select id=\"intent-list\"\n                    clrSelect\n                    name=\"selectedIntent\"\n                    [(ngModel)]=\"selectedIntent\"\n                    (change)=\"updateResyncingObjects()\">\n               <option selected [ngValue]=\"ResyncMonitorComponent.ALL_INTENT\">\n                  {{\"vsan.monitor.resyncComponents.intent.all\" | localized}}\n               </option>\n               <option *ngFor=\"let intent of intentList\"\n                       [ngValue]=\"intent\">\n                  {{ResyncMonitorListComponent.getReasonLabel(intent)}}\n               </option>\n            </select>\n         </clr-select-container>\n         <clr-signpost [vsan-signpost-title]=\"'vsan.monitor.resyncComponents.intent.signpost.label' | localized\">\n            <clr-signpost-content class=\"large-signpost-content\" clrPosition=\"bottom-right\" *clrIfOpen>\n               <ul id=\"intent-list-signpost\" class=\"list\">\n                  <li>{{'vsan.monitor.resyncComponents.intent.decommission.detailed' | localized}}</li>\n                  <li>{{'vsan.monitor.resyncComponents.intent.compliance.detailed' | localized}}</li>\n                  <li>{{'vsan.monitor.resyncComponents.intent.ddh.detailed' | localized}}</li>\n                  <li>{{'vsan.monitor.resyncComponents.intent.rebalance.detailed' | localized}}</li>\n                  <li>{{'vsan.monitor.resyncComponents.intent.stale.detailed' | localized}}</li>\n                  <li>{{'vsan.monitor.resyncComponents.intent.mergeConcat.detailed' | localized}}</li>\n                  <li>{{'vsan.monitor.resyncComponents.intent.formatChange.detailed' | localized}}</li>\n                  <li>{{'vsan.monitor.resyncComponents.intent.unknown.detailed' | localized}}</li>\n               </ul>\n            </clr-signpost-content>\n         </clr-signpost>\n      </div>\n      <div class=\"filter-input\">\n         <label id=\"status-label\"\n                for=\"status-list\">\n            {{'vsan.monitor.resyncComponents.status.label' | localized}}\n         </label>\n         <clr-select-container>\n            <select id=\"status-list\"\n                    clrSelect\n                    name=\"selectedStatus\"\n                    [(ngModel)]=\"selectedStatus\"\n                    (change)=\"updateResyncingObjects()\">\n               <option *ngFor=\"let status of statusList\"\n                       [ngValue]=\"status\">\n                  {{getStatusLabel(status)}}\n               </option>\n            </select>\n         </clr-select-container>\n         <clr-signpost [vsan-signpost-title]=\"'vsan.monitor.resyncComponents.status.signpost.label' | localized\">\n            <clr-signpost-content clrPosition=\"bottom-right\" *clrIfOpen>\n               <ul id=\"status-list-signpost\" class=\"list\">\n                  <li>{{'vsan.monitor.resyncComponents.status.active.detailed' | localized}}</li>\n                  <li>{{'vsan.monitor.resyncComponents.status.queued.detailed' | localized}}</li>\n                  <li>{{'vsan.monitor.resyncComponents.status.suspended.detailed' | localized}}</li>\n               </ul>\n            </clr-signpost-content>\n         </clr-signpost>\n      </div>\n      <div class=\"filter-input\">\n         <label id=\"limit-label\"\n                for=\"limitResults\">\n            {{\"vsan.monitor.resyncComponents.list.filter.label\" | localized}}\n         </label>\n         <select id=\"limitResults\"\n                 clrSelect\n                 name=\"limitResults\"\n                 [(ngModel)]=\"limitResults\">\n            <option *ngFor=\"let option of limitOptions\" [ngValue]=\"option\">\n               {{option}}\n            </option>\n         </select>\n      </div>\n   </ng-container>\n   <!-- Keep refresh button visible even if Resync ETA Improvement is NOT supported -->\n   <div class=\"filter-input\">\n      <button type=\"button\"\n              class=\"btn btn-sm btn-link\"\n              id=\"filter-list-button\"\n              title=\"{{'vsan.monitor.resyncComponents.list.refresh.label' | localized}}\"\n              (click)=\"refresh()\">\n         {{'vsan.common.refresh' | localized}}\n      </button>\n   </div>\n</div>\n\n<div id=\"resyncing-objects-summary\" *ngIf=\"isResyncETAImprovementSupported\">\n   <ng-container *ngIf=\"resyncingObjectsSummaryVisible\">\n      <div id=\"number-of-components-to-resync\">\n         {{\"vsan.monitor.resyncComponents.list.components.label\" | localized: resyncingObjectsData.componentsToSync}}\n      </div>\n      <div id=\"bytes-to-resync\">{{\"vsan.monitor.resyncComponents.list.bytes.label\" | localized:\n            VsanUiUtils.formatFileSize(resyncingObjectsData.bytesToResync)}}</div>\n      <div id=\"eta-for-intent\">{{getSummaryResyncEtaLabel(resyncingObjectsData)}}</div>\n      <vsan-validation class=\"resync-eta-info-container\"\n                       [alertType]=\"'info'\"\n                       [allowClose]=\"false\"\n                       [alert]=\"'vsan.monitor.resyncComponents.list.eta.description' | localized\">\n      </vsan-validation>\n   </ng-container>\n</div>\n\n<vsan-resync-monitor-list id=\"resyncComponentsList\"\n                          [data]=\"resyncingObjectsData?.components\"\n                          [loading]=\"loadingResyncingObjects\"\n                          [isResyncETAImprovementSupported]=\"isResyncETAImprovementSupported\">\n</vsan-resync-monitor-list>\n","<clr-datagrid id=\"resync-components\" [clrDgLoading]=\"loading\">\n   <clr-dg-placeholder>{{\"vsan.monitor.resyncComponents.list.no.data\" | localized}}</clr-dg-placeholder>\n   <!-- Header columns -->\n   <clr-dg-column class=\"name-column\">\n      <vsan-tree-column id=\"resync-name-column\"\n                        [dataField]=\"'name'\"\n                        [dataProvider]=\"datagrid\"\n                        [title]=\"'vsan.monitor.resyncComponents.list.name' | localized\">\n      </vsan-tree-column>\n   </clr-dg-column>\n   <clr-dg-column>\n      <vsan-tree-column id=\"resync-policy-column\"\n                        [dataField]=\"'storageProfile'\"\n                        [dataProvider]=\"datagrid\"\n                        [filterObject]=\"policyNameFilter\"\n                        [title]=\"'vsan.monitor.resyncComponents.list.vmStorageProfile' | localized\">\n      </vsan-tree-column>\n   </clr-dg-column>\n   <clr-dg-column>\n      <vsan-tree-column id=\"resync-host-column\"\n                        [dataField]=\"'hostName'\"\n                        [dataProvider]=\"datagrid\"\n                        [filterObject]=\"hostNameFilter\"\n                        [title]=\"'vsan.monitor.resyncComponents.list.host' | localized\">\n      </vsan-tree-column>\n   </clr-dg-column>\n   <clr-dg-column>\n      <vsan-tree-column id=\"resync-bytes-column\"\n                        [dataField]=\"'bytesToResync'\"\n                        [dataProvider]=\"datagrid\"\n                        [filterObject]=\"bytesFilter\"\n                        [title]=\"'vsan.monitor.resyncComponents.list.bytesToResync' | localized\">\n      </vsan-tree-column>\n   </clr-dg-column>\n   <clr-dg-column *ngIf=\"!isResyncETAImprovementSupported\">\n      <vsan-tree-column id=\"resync-eta-column\"\n                        [dataField]=\"'etaToResync'\"\n                        [dataProvider]=\"datagrid\"\n                        [filterObject]=\"etaFilter\"\n                        [title]=\"'vsan.monitor.resyncComponents.list.eta' | localized\">\n      </vsan-tree-column>\n   </clr-dg-column>\n   <clr-dg-column>\n      <vsan-tree-column id=\"resync-intent-column\"\n                        [dataField]=\"'reason'\"\n                        [dataProvider]=\"datagrid\"\n                        [filterObject]=\"intentFilter\"\n                        [title]=\"'vsan.monitor.resyncComponents.list.intent' | localized\">\n      </vsan-tree-column>\n   </clr-dg-column>\n\n   <!-- Datagrid Content -->\n   <clr-dg-row\n         *clrDgItems=\"let row of datagrid.rows\"\n         (click)=\"selectTarget(row, $event)\"\n         [class.datagrid-selected]=\"isRowSelected(row)\">\n      <clr-dg-cell id=\"resync-name-cell\">\n         <span *ngIf=\"row.data.isQueued\">{{row.data.name}}</span>\n         <ng-container *ngIf=\"!row.data.isQueued\">\n            <vsan-expand [row]=\"row\"></vsan-expand>\n            <!--Only \"real\" objects have UUIDs. The grouping items like VMs and \"Other\" sections should not be links-->\n            <a *ngIf=\"row.data.uuid\"\n               href=\"javascript://\"\n               (click)=\"openVirtualObjects(row.data)\">\n               <clr-icon *ngIf=\"row.data.iconId\" [attr.shape]=\"row.data.iconId\"></clr-icon>\n               <span>{{row.data.name}}</span>\n            </a>\n            <span *ngIf=\"!row.data.uuid\">\n               <clr-icon *ngIf=\"row.data.iconId\" [attr.shape]=\"row.data.iconId\"></clr-icon>\n               <span>{{row.data.name}}</span>\n            </span>\n         </ng-container>\n      </clr-dg-cell>\n      <clr-dg-cell id=\"resync-policy-cell\">{{getName(row.data.storageProfile)}}</clr-dg-cell>\n      <clr-dg-cell id=\"resync-host-cell\">{{getName(row.data.hostName)}}</clr-dg-cell>\n      <clr-dg-cell id=\"resync-bytes-cell\">{{row.data.bytesToResync | fileSize}}</clr-dg-cell>\n      <clr-dg-cell id=\"resync-eta-cell\"\n                   *ngIf=\"!isResyncETAImprovementSupported\">\n         {{row.data.etaToResync | timeSpan}}\n      </clr-dg-cell>\n      <clr-dg-cell id=\"resync-intent-cell\">{{ResyncMonitorListComponent.getReasonLabel(row.data.reason)}}</clr-dg-cell>\n   </clr-dg-row>\n\n   <!-- Datagrid Footer -->\n   <clr-dg-footer id=\"resync-grid-footer\">\n      <clr-dg-pagination [clrDgPageSize]=\"20\">{{datagridFooterLabel}}</clr-dg-pagination>\n   </clr-dg-footer>\n</clr-datagrid>\n","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {TreeDatagridView} from \"@component/datagrid/tree-datagrid-view\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ResyncComponent} from \"@generated/resync-component\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {TimePipe} from \"@pipe/TimePipe\";\nimport {FunctionFilter} from \"@component/datagrid/filter/function-filter\";\nimport {NavigationService, PlatformExtension} from \"@service/navigation/navigation.service\";\nimport ResyncReasonCode = ResyncComponent.ResyncReasonCode;\nimport {Logger} from \"@util/logger\";\n\n@Component({\n   templateUrl: \"resync-monitor-list.html\",\n   selector: \"vsan-resync-monitor-list\",\n   styleUrls: [\"resync-monitor-list.scss\"],\n})\nexport class ResyncMonitorListComponent extends TreeDatagridView {\n   ResyncMonitorListComponent = ResyncMonitorListComponent;\n   private static readonly TIME_FORMATTER: TimePipe = new TimePipe();\n\n   @Input()\n   set data(data: ResyncComponent[]) {\n      this.initData(data);\n   }\n\n   @Input()\n   loading: boolean = true;\n\n   @Input()\n   isResyncETAImprovementSupported: boolean = false;\n\n   constructor(private navigationService: NavigationService) {\n      super(\"children\");\n   }\n\n   policyNameFilter: FunctionFilter<ResyncComponent> = new FunctionFilter((data: ResyncComponent) => {\n      return this.getName(data.storageProfile);\n   });\n\n   hostNameFilter: FunctionFilter<ResyncComponent> = new FunctionFilter((data: ResyncComponent) => {\n      return this.getName(data.hostName);\n   });\n\n   bytesFilter: FunctionFilter<ResyncComponent> = new FunctionFilter((data: ResyncComponent) => {\n      return VsanUiUtils.formatFileSize(data.bytesToResync);\n   });\n\n   etaFilter: FunctionFilter<ResyncComponent> = new FunctionFilter((data: ResyncComponent) => {\n      return ResyncMonitorListComponent.TIME_FORMATTER.transform(data.etaToResync);\n   });\n\n   intentFilter: FunctionFilter<ResyncComponent> = new FunctionFilter((data: ResyncComponent) => {\n      return ResyncMonitorListComponent.getReasonLabel(data.reason);\n   });\n\n   /**\n    * This method is used to format the policy and hostname columns.\n    */\n   getName = (name: string): string => {\n      if (!name) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n      return name;\n   };\n\n   static getReasonLabel(reason: ResyncReasonCode): string {\n      if (reason == null) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n\n      switch (reason) {\n         case ResyncReasonCode.dying_evacuate:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.intent.ddh\");\n         case ResyncReasonCode.repair:\n         case ResyncReasonCode.reconfigure:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.intent.compliance\");\n         case ResyncReasonCode.evacuate:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.intent.decommission\");\n         case ResyncReasonCode.rebalance:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.intent.rebalance\");\n         case ResyncReasonCode.stale:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.intent.stale\");\n         case ResyncReasonCode.merge_concat:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.intent.mergeConcat\");\n         case ResyncReasonCode.object_format_change:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.intent.formatChange\");\n         case ResyncReasonCode.VsanSyncReason_Unknown:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.intent.unknown\");\n         default:\n            Logger.warn(\"Invalid component state received: \" + reason);\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.intent.unknown\");\n      }\n   }\n\n   openVirtualObjects(item: ResyncComponent) {\n      const context = {\n         presentVirtualObjectUuids: [item.uuid],\n      };\n      this.navigationService.navigateTo(PlatformExtension.VIRTUAL_OBJECTS,\n            ManagedObject.contextObject, context);\n   }\n\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {VsanCommonModule} from \"../common/vsan-common.module\";\nimport {ResyncMonitorComponent} from \"./view/resync-monitor.component\";\nimport {ResyncMonitorListComponent} from \"./view/resync-monitor-list.component\";\nimport {EditResyncThrottlingComponent} from \"./action/edit-resync-throttling.component\";\nimport {PersistentStorageService} from \"@service/browser-storage.service\";\n\nconst resyncMonitorRoutes: Routes = [\n   {\n      path: \"\",\n      component: ResyncMonitorComponent,\n   },\n   {\n      path: \"editThrottling\",\n      component: EditResyncThrottlingComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      FormsModule,\n      CommonModule,\n      ClarityModule,\n      VsanCommonModule,\n      RouterModule.forChild(resyncMonitorRoutes),\n   ],\n   declarations: [\n      ResyncMonitorComponent,\n      ResyncMonitorListComponent,\n      EditResyncThrottlingComponent,\n   ],\n   providers: [\n      PersistentStorageService,\n   ],\n})\nexport class ResyncMonitorModule {\n}\n","/* Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ConfigureVsanClusterMutationProvider} from \"@generated/configure-vsan-cluster-mutation-provider\";\nimport {HostResyncTrafficData} from \"@generated/host-resync-traffic-data\";\nimport {ResyncThrottlingSpec} from \"@generated/resync-throttling-spec\";\nimport {VsanResyncingComponentsProvider} from \"@generated/vsan-resyncing-components-provider\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   selector: \"vsan-edit-resync-throttling\",\n   templateUrl: \"edit-resync-throttling.html\",\n   styleUrls: [\"edit-resync-throttling.scss\"],\n})\nexport class EditResyncThrottlingComponent implements OnInit {\n\n   resyncThresholdValue: number;\n   originalThresholdValue: number;\n\n   resyncThrottlingEnabled: boolean;\n   originalResyncThrottlingEnabled: boolean;\n\n   showHostResyncTraffic: boolean;\n   hostsResyncData: HostResyncTrafficData[];\n   resyncDataLoading: boolean = true;\n   alertMessage: string = null;\n\n   constructor(\n         private vsanResyncProvider: VsanResyncingComponentsProvider,\n         private configureClusterMutationProvider: ConfigureVsanClusterMutationProvider) {\n   }\n\n   ngOnInit(): void {\n      const context: any = VsanUiUtils.getModalContext();\n      if (context && context.hasOwnProperty(\"resyncThresholdValue\")) {\n         this.resyncThresholdValue = context.resyncThresholdValue;\n      } else {\n         this.resyncThresholdValue = 0;\n      }\n      this.resyncThrottlingEnabled = this.resyncThresholdValue > 0;\n\n      // If not enabled, overide resyncThresholdValue to 1, as it is the min allowed value\n      if (!this.resyncThrottlingEnabled) {\n         this.resyncThresholdValue = 1;\n      }\n\n      if (this.originalThresholdValue === undefined) {\n         this.originalThresholdValue = this.resyncThresholdValue;\n         this.originalResyncThrottlingEnabled = this.resyncThrottlingEnabled;\n      }\n   }\n\n   showHostResyncData(): void {\n      VsanUiUtils.setModalDialogHeight(750);\n      this.showHostResyncTraffic = true;\n      this.fetch();\n   }\n\n   fetch(): void {\n      this.resyncDataLoading = true;\n      this.vsanResyncProvider.getHostsResyncTraffic(ManagedObject.contextObject)\n            .then(this.handleHostResyncData, this.handleError);\n   }\n\n   private handleHostResyncData = (resyncData: HostResyncTrafficData[]) => {\n      this.hostsResyncData = resyncData;\n      this.resyncDataLoading = false;\n   };\n\n   private handleError = (error: any) => {\n      this.alertMessage = VsanUiUtils.getString(\"vsan.monitor.resyncComponents.resync.throttling.loadingHostsError\");\n      this.resyncDataLoading = false;\n   };\n\n   onOkClicked(): void {\n      if (!this.resyncThrottlingEnabled && this.originalResyncThrottlingEnabled) {\n         // Trying to disable throttling\n         this.inovokeResyncThrottling(0);\n      } else if ((this.originalThresholdValue === this.resyncThresholdValue // The checkbox is not changed and the slider is not changed\n                  && this.originalResyncThrottlingEnabled === this.resyncThrottlingEnabled)\n            || (this.originalResyncThrottlingEnabled === this.resyncThrottlingEnabled // The checkbox is not changed and the throttling is disabled\n                  && this.resyncThrottlingEnabled === false)) {\n         // Nothing has changed, just close the dialog.\n         VsanUiUtils.closeModalDialog();\n      } else {\n         this.inovokeResyncThrottling(this.resyncThresholdValue);\n      }\n   }\n\n   private inovokeResyncThrottling = (value: number): void => {\n      // Invoke mutation operation on server\n      const resyncSpec: ResyncThrottlingSpec = ResyncThrottlingSpec.Factory.create(value);\n      this.configureClusterMutationProvider.resyncThrottling(ManagedObject.contextObject, resyncSpec)\n            .then((result: ManagedObject) => {\n               VsanUiUtils.closeModalDialog(result);\n            });\n   };\n\n   onCancelClicked(): void {\n      VsanUiUtils.closeModalDialog();\n   }\n\n   get resyncThresholdSliderValue(): number {\n      return EditResyncThrottlingComponent.log2(this.resyncThresholdValue);\n   }\n\n   set resyncThresholdSliderValue(value: number) {\n      this.resyncThresholdValue = 2 ** value;\n   }\n\n   /**\n    * Calculates the logarithm with base 2 of the given value. If the result is not an integer, then returns\n    * the part before the decimal sign.\n    */\n   private static log2(value: number): number {\n      return Math.floor(Math.log(value) / Math.LN2);\n   }\n\n   getDatagridFooterLabel(): string {\n      return VsanUiUtils.getDatagridFooterLabel(this.hostsResyncData);\n   }\n}\n"]}