{"version":3,"sources":["webpack:///src/app/vsan/common/component/placement-details/pipe/component-state-icon-class.pipe.ts","webpack:///src/app/vsan/common/component/placement-details/placement-details-path.component.ts","webpack:///src/app/vsan/common/component/placement-details/model/object-placement.ts","webpack:///src/app/vsan/common/component/placement-details/physical-placement-property-box.component.ts","webpack:///src/app/vsan/common/component/placement-details/placement-details-path.html","webpack:///src/app/vsan/common/component/placement-details/placement-details-util.ts","webpack:///src/app/vsan/common/component/placement-details/placement-details-flat.html","webpack:///src/app/vsan/common/component/placement-details/pipe/component-state-icon-shape.pipe.ts","webpack:///src/app/vsan/common/component/placement-details/physical-placement-property-box.html","webpack:///src/app/vsan/common/component/placement-details/model/managed-storage-object-placement.ts","webpack:///src/app/vsan/common/component/placement-details/model/vsan-object-placement.ts","webpack:///src/app/vsan/common/component/placement-details/placement-details-flat.component.ts","webpack:///src/app/vsan/common/component/placement-details/placement-details.module.ts"],"names":["ComponentStateIconClassPipe","state","ACTIVE","CLR_SUCCESS_ICON_CLASS","ACTIVE_STALE","ABSENT","ABSENT_RESYNC","RECONFIG","CLR_WARN_ICON_CLASS","DEGRADED","CLR_ERROR_ICON_CLASS","CLR_HIGHLIGHT_ICON_CLASS","PlacementDetailsPathComponent","isTooltipVisible","item","vmRef","type","displayType","VM","hasVmReadPermissions","ObjectPlacement","datastoreType","placement","isEmpty","children","levelComponents","forEach","child","push","getNextLevelComponents","PhysicalPlacementPropertyBoxComponent","navigationService","allowNavigation","hostRef","navigateTo","HOST_SUMMARY","PlacementDetailsUtil","uuid","components","virtualObjects","getPath","getPlacementsDatastoreType","VSAN","raidConfig","mergeSingleRaidConfig","VSAN_DIRECT","iconId","getVirtualObjectByUid","label","PMEM","isVsanMaxEnabled","host","nodeUuid","toString","capacityDisk","cacheDisk","placements","length","models","configType","raidIdx","i","splice","find","vo","uid","ComponentStateIconShapePipe","CLR_SUCCESS_STANDARD_ICON_SHAPE","CLR_WARN_STANDARD_ICON_SHAPE","CLR_ERROR_STANDARD_ICON_SHAPE","warn","CLR_INFO_STANDARD_ICON_SHAPE","ManagedStorageObjectPlacement","path","VsanObjectPlacement","vsanUuid","lastLevelComponents","PlacementDetailsFlatComponent","DatastoreType","detailsProvider","footerText","_data","data","rootItems","constructPlacements","getFooter","vsanPlacementsSummary","VirtualObjectPlacementsSummary","vsanDirectPlacementsSummary","pmemPlacementsSummary","count","filter","summary","hasData","map","join","keys","JSON","parse","stringify","get","getPlacement","id","findPath","model","Error","row","getString","labelKey","objects","uniqueHosts","object","incrementCounts","Object","objectCount","hostCount","PlacementDetailsModule"],"mappings":"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","file":"44-es5.js","sourcesContent":["/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {VsanComponentState} from \"@generated/vsan-component-state\";\nimport {Icon} from \"@util/icon\";\n\n@Pipe({\n   name: \"componentStateIconClass\"\n})\nexport class ComponentStateIconClassPipe implements PipeTransform {\n\n   public transform(state: VsanComponentState): string {\n      switch (state) {\n         case VsanComponentState.ACTIVE:\n            return Icon.CLR_SUCCESS_ICON_CLASS;\n         case VsanComponentState.ACTIVE_STALE:\n         case VsanComponentState.ABSENT:\n         case VsanComponentState.ABSENT_RESYNC:\n         case VsanComponentState.RECONFIG:\n            return Icon.CLR_WARN_ICON_CLASS;\n         case VsanComponentState.DEGRADED:\n            return Icon.CLR_ERROR_ICON_CLASS;\n         default:\n            return Icon.CLR_HIGHLIGHT_ICON_CLASS;\n      }\n   }\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {DisplayObjectType} from \"@generated/display-object-type\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\n\n@Component({\n   templateUrl: \"placement-details-path.html\",\n   selector: \"virtual-objects-placement-details-path\",\n   styleUrls: [\"placement-details-path.scss\"],\n})\nexport class PlacementDetailsPathComponent {\n\n   @Input()\n   path: VirtualObjectModel[];\n\n   @Input()\n   isTooltipVisible: boolean = true;\n\n   getIsNoPermissionsVm(item: VirtualObjectModel): boolean {\n      return item.vmRef !== null\n            && item.type.displayType === DisplayObjectType.VM\n            && !item.hasVmReadPermissions;\n   }\n\n}\n","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {VirtualObjectPlacementModel} from \"@generated/virtual-object-placement-model\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\nexport abstract class ObjectPlacement {\n\n   protected constructor(public datastoreType: DatastoreType) {\n   }\n\n   abstract get lastLevelComponents(): VirtualObjectPlacementModel[];\n\n   protected getNextLevelComponents(placement: VirtualObjectPlacementModel): VirtualObjectPlacementModel[] {\n      if (VsanUiUtils.isEmpty(placement.children)) {\n         return [placement];\n      }\n\n      const levelComponents: any[] = [];\n      placement.children.forEach(child => {\n         levelComponents.push(...this.getNextLevelComponents(child));\n      });\n      return levelComponents;\n   }\n}","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {VirtualObjectPlacementModel} from \"@generated/virtual-object-placement-model\";\nimport {VsanComponentState} from \"@generated/vsan-component-state\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\n\n@Component({\n   templateUrl: \"physical-placement-property-box.html\",\n   selector: \"physical-placement-property-box\",\n   styleUrls: [\"physical-placement-property-box.scss\"],\n})\nexport class PhysicalPlacementPropertyBoxComponent {\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   @Input()\n   model: VirtualObjectPlacementModel;\n\n   @Input()\n   allowNavigation: boolean = false;\n\n   navigateToHost(hostRef: ManagedObject) {\n      this.navigationService.navigateTo(PlatformExtension.HOST_SUMMARY, hostRef);\n   }\n\n   componentStateLabelKey(state: VsanComponentState): string {\n      switch (state) {\n         case VsanComponentState.ACTIVE:\n            return \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.state.active\";\n         case VsanComponentState.ACTIVE_STALE:\n            return \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.state.activeStale\";\n         case VsanComponentState.ABSENT:\n            return \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.state.absent\";\n         case VsanComponentState.ABSENT_RESYNC:\n            return \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.state.absentResync\";\n         case VsanComponentState.DEGRADED:\n            return \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.state.degraded\";\n         case VsanComponentState.RECONFIG:\n            return \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.state.reconfig\";\n         default:\n            return \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.state.unknown\";\n      }\n   }\n}","<div class=\"path\" *ngIf=\"path\">\n   <ng-container *ngFor=\"let item of path; let i = index\">\n      <vsan-vm-cell [item]=\"item\"\n                    [isTooltipVisible]=\"isTooltipVisible\"\n                    [isLink]=\"false\">\n      </vsan-vm-cell>\n      <clr-icon [attr.shape]=\"'caret right'\" *ngIf=\"i != path.length - 1\"></clr-icon>\n   </ng-container>\n</div>\n","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ManagedStorageObjectPlacement} from \"@component/placement-details/model/managed-storage-object-placement\";\nimport {ObjectPlacement} from \"@component/placement-details/model/object-placement\";\nimport {VsanObjectPlacement} from \"@component/placement-details/model/vsan-object-placement\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {VirtualObjectPlacementModel} from \"@generated/virtual-object-placement-model\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\nexport class PlacementDetailsUtil {\n   static getPlacement(\n         uuid: string,\n         components: VirtualObjectPlacementModel[],\n         virtualObjects: VirtualObjectModel[],\n         getPath: (uuid: string) => VirtualObjectModel[]): ObjectPlacement {\n      const datastoreType: DatastoreType = PlacementDetailsUtil.getPlacementsDatastoreType(components);\n\n      switch (datastoreType) {\n         case DatastoreType.VSAN:\n            const raidConfig: string = PlacementDetailsUtil.mergeSingleRaidConfig(components);\n            return new VsanObjectPlacement(uuid, getPath(uuid), raidConfig, components);\n         case DatastoreType.VSAN_DIRECT:\n            const iconId: string = PlacementDetailsUtil.getVirtualObjectByUid(components[0], virtualObjects).iconId;\n            const label: string = components[0].label;\n            return new ManagedStorageObjectPlacement(iconId, label, null, components[0], datastoreType);\n         case DatastoreType.PMEM:\n            return new ManagedStorageObjectPlacement(null, null, getPath(uuid), components[0], datastoreType);\n      }\n   }\n\n   static getGroupUuid(placement: VirtualObjectPlacementModel, isVsanMaxEnabled: boolean): string {\n      if (placement.datastoreType !== DatastoreType.VSAN) {\n         return placement.host.nodeUuid + \"_\" + placement.datastoreType.toString();\n      }\n\n      return isVsanMaxEnabled\n            ? placement.capacityDisk.nodeUuid\n            : placement.cacheDisk.nodeUuid;\n   }\n\n   private static getPlacementsDatastoreType(placements: VirtualObjectPlacementModel[]): DatastoreType {\n      if (placements.length > 1) {\n         return DatastoreType.VSAN;\n      }\n\n      if (!VsanUiUtils.isEmpty(placements[0].children)) {\n         return PlacementDetailsUtil.getPlacementsDatastoreType(placements[0].children);\n      }\n\n      return placements[0].datastoreType;\n   }\n\n   /**\n    * Looks through the placement model and if only a single RAID config is found,\n    * its children are flattened in the top level models to avoid unnecessary\n    * expanding the single item.\n    * Returns the raid config label if a single model is found or null in all other cases.\n    */\n   private static mergeSingleRaidConfig(models: VirtualObjectPlacementModel[]): string {\n      let configType: string;\n      let raidIdx: number = -1;\n      for (let i: number = 0; i < models.length; i++) {\n         if (models[i].children) {\n            if (raidIdx !== -1) {\n               // more than one RAID config, show as is\n               raidIdx = -1;\n               break;\n            } else {\n               raidIdx = i;\n            }\n         }\n      }\n\n      if (raidIdx !== -1) {\n         // Only 1 RAID config\n         configType = models[raidIdx].label;\n         models.splice(raidIdx, 1, ...models[raidIdx].children);\n      }\n\n      return configType;\n   }\n\n   private static getVirtualObjectByUid(\n         placement: VirtualObjectPlacementModel, virtualObjects: VirtualObjectModel[]): VirtualObjectModel {\n      return virtualObjects.find(vo => vo.uid === placement.nodeUuid);\n   }\n}","<!--Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<label id=\"header-label\">\n   {{\"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.virtualComponentsLabel\" | localized}}\n</label>\n\n<div *ngIf=\"!detailsProvider?.rootItems?.length\" class=\"spinner central-spinner\">{{\"vsan.loading\" | localized}}</div>\n\n<!-- ngIf is required to delay the initial rendering of the grid rows until all data is loaded. This grid has a couple\nof columns that are conditionally rendered and if Clarity allocates space for all columns, then we hide two of them, the\nalignment is messed up -->\n<clr-datagrid *ngIf=\"detailsProvider?.rootItems?.length\" id=\"details-grid\">\n   <clr-dg-column class=\"wide-column\">\n      <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n         {{\"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.type\" | localized}}\n      </ng-container>\n   </clr-dg-column>\n   <clr-dg-column class=\"medium-column\">\n      <ng-container *clrDgHideableColumn=\"{hidden: reducedColumns}\">\n         {{\"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.componentState\" | localized}}\n      </ng-container>\n   </clr-dg-column>\n   <clr-dg-column class=\"medium-column\">\n      <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n         {{\"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.host\" | localized}}\n      </ng-container>\n   </clr-dg-column>\n   <clr-dg-column class=\"medium-column\">\n      <ng-container *clrDgHideableColumn=\"{hidden: reducedColumns}\">\n         {{\"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.faultDomain\" | localized}}\n      </ng-container>\n   </clr-dg-column>\n   <clr-dg-column *ngIf=\"!isVsanMaxEnabled\"\n                  class=\"wide-column\">\n      <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n         {{\"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.cacheDisk\" | localized}}\n      </ng-container>\n   </clr-dg-column>\n   <clr-dg-column *ngIf=\"!isVsanMaxEnabled\"\n                  class=\"wide-column\">\n      <ng-container *clrDgHideableColumn=\"{hidden: reducedColumns}\">\n         {{\"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.cacheDiskUUID\" | localized}}\n      </ng-container>\n   </clr-dg-column>\n   <clr-dg-column class=\"wide-column\">\n      <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n         {{getDiskColumnLabel()}}\n      </ng-container>\n   </clr-dg-column>\n   <clr-dg-column class=\"wide-column\">\n      <ng-container *clrDgHideableColumn=\"{hidden: reducedColumns}\">\n         {{getDiskUUIDColumnLabel()}}\n      </ng-container>\n   </clr-dg-column>\n\n   <clr-dg-row *clrDgItems=\"let row of detailsProvider.rows\" [clrDgItem]=\"row.data\">\n      <clr-dg-cell vsan-show-title\n                   [copyToClipboard]=\"false\"\n                   class=\"wide-column\">\n         <div class=\"placement-type\"\n              [attr.title]=\"row.data.nodeUuid\">\n            <vsan-expand *ngIf=\"isExpandable(row)\"\n                         [row]=\"row\">\n            </vsan-expand>\n            <ng-container *ngIf=\"row.data.path\">\n               <virtual-objects-placement-details-path [path]=\"row.data.path\"></virtual-objects-placement-details-path>\n               <span *ngIf=\"row.data.raidConfig\"\n                     class=\"raid-label\">\n                  ({{row.data.raidConfig}})\n               </span>\n            </ng-container>\n            <ng-container *ngIf=\"!row.data.path\">\n               <clr-icon *ngIf=\"row.data.iconId\"\n                         [attr.shape]=\"row.data.iconId\">\n               </clr-icon>\n               <span>{{row.data.label}}</span>\n            </ng-container>\n         </div>\n      </clr-dg-cell>\n      <clr-dg-cell vsan-show-title class=\"medium-column\">\n         <ng-container *ngIf=\"row.data.state\">\n            <physical-placement-property-box [model]=\"row.data\"></physical-placement-property-box>\n         </ng-container>\n      </clr-dg-cell>\n      <clr-dg-cell vsan-show-title class=\"medium-column\">\n         <ng-container *ngIf=\"row.data.host\">\n            <physical-placement-property-box [model]=\"row.data.host\"></physical-placement-property-box>\n         </ng-container>\n      </clr-dg-cell>\n      <clr-dg-cell vsan-show-title class=\"medium-column\">\n         <ng-container *ngIf=\"row.data.host && row.data.host.faultDomain\">\n            {{row.data.host.faultDomain}}\n         </ng-container>\n      </clr-dg-cell>\n      <clr-dg-cell *ngIf=\"!isVsanMaxEnabled\" vsan-show-title class=\"wide-column\">\n         <ng-container *ngIf=\"row.data.cacheDisk\">\n            <physical-placement-property-box [model]=\"row.data.cacheDisk\"></physical-placement-property-box>\n         </ng-container>\n      </clr-dg-cell>\n      <clr-dg-cell *ngIf=\"!isVsanMaxEnabled\" vsan-show-title class=\"wide-column\">\n         <ng-container *ngIf=\"row.data.cacheDisk\">\n            {{row.data.cacheDisk.nodeUuid}}\n         </ng-container>\n      </clr-dg-cell>\n      <clr-dg-cell vsan-show-title class=\"wide-column\">\n         <ng-container *ngIf=\"row.data.capacityDisk\">\n            <physical-placement-property-box [model]=\"row.data.capacityDisk\"></physical-placement-property-box>\n         </ng-container>\n      </clr-dg-cell>\n      <clr-dg-cell vsan-show-title class=\"wide-column\">\n         <ng-container *ngIf=\"row.data.capacityDisk\">\n            {{row.data.capacityDisk.nodeUuid}}\n         </ng-container>\n      </clr-dg-cell>\n   </clr-dg-row>\n   <clr-dg-footer>\n      {{footerText}}\n      <clr-dg-pagination [clrDgPageSize]=\"20\"></clr-dg-pagination>\n   </clr-dg-footer>\n</clr-datagrid>\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {VsanComponentState} from \"@generated/vsan-component-state\";\nimport {Icon} from \"@util/icon\";\nimport {Logger} from \"@util/logger\";\n\n@Pipe({\n   name: \"componentStateIconShape\"\n})\nexport class ComponentStateIconShapePipe implements PipeTransform {\n\n   public transform(state: VsanComponentState): string {\n      switch (state) {\n         case VsanComponentState.ACTIVE:\n            return Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE;\n         case VsanComponentState.ACTIVE_STALE:\n         case VsanComponentState.ABSENT:\n         case VsanComponentState.ABSENT_RESYNC:\n         case VsanComponentState.RECONFIG:\n            return Icon.CLR_WARN_STANDARD_ICON_SHAPE;\n         case VsanComponentState.DEGRADED:\n            return Icon.CLR_ERROR_STANDARD_ICON_SHAPE;\n         default:\n            Logger.warn(\"Unknown VsanComponentState state: \" + state);\n            return Icon.CLR_INFO_STANDARD_ICON_SHAPE;\n      }\n   }\n}","<ng-container *ngIf=\"model\">\n   <ng-container *ngIf=\"model.state\">\n      <clr-icon [attr.shape]=\"model.state | componentStateIconShape\"\n                [ngClass]=\"model.state | componentStateIconClass\"\n                class=\"is-solid\">\n      </clr-icon>\n      <span class=\"state-label\">\n         {{componentStateLabelKey(model.state) | localized}}\n      </span>\n   </ng-container>\n\n   <ng-container *ngIf=\"!model.state\">\n      <clr-icon *ngIf=\"model.iconId\" [attr.shape]=\"model.iconId\"></clr-icon>\n      <span *ngIf=\"!model.navigationTarget || !allowNavigation\"\n            [title]=\"model.nodeUuid\"\n            [ngClass]=\"model.navigationTarget ? 'highlight-text' : ''\">\n         <ng-container *ngIf=\"!!model.label; else unknown_label\">{{model.label}}</ng-container>\n      </span>\n      <a href=\"javascript://\"\n         *ngIf=\"model.navigationTarget && allowNavigation\"\n         (click)=\"navigateToHost(model.navigationTarget)\">\n         <ng-container *ngIf=\"!!model.label; else unknown_label\">{{model.label}}</ng-container>\n      </a>\n   </ng-container>\n</ng-container>\n<ng-template #unknown_label>\n   {{\"vsan.common.unknown\" | localized}}\n</ng-template>","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ObjectPlacement} from \"@component/placement-details/model/object-placement\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {VirtualObjectPlacementModel} from \"@generated/virtual-object-placement-model\";\n\nexport class ManagedStorageObjectPlacement extends ObjectPlacement {\n   constructor(\n         public iconId: string,\n         public label: string,\n         public path: VirtualObjectModel[],\n         public child: VirtualObjectPlacementModel,\n         datastoreType: DatastoreType) {\n      super(datastoreType);\n   }\n\n   get lastLevelComponents(): VirtualObjectPlacementModel[] {\n      return this.getNextLevelComponents(this.child);\n   }\n\n   get host(): VirtualObjectPlacementModel {\n      return this.child.host;\n   }\n\n   get capacityDisk(): VirtualObjectPlacementModel {\n      return this.child.capacityDisk;\n   }\n}","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ObjectPlacement} from \"@component/placement-details/model/object-placement\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {VirtualObjectPlacementModel} from \"@generated/virtual-object-placement-model\";\n\nexport class VsanObjectPlacement extends ObjectPlacement {\n   constructor(\n         public vsanUuid: string,\n         public path: VirtualObjectModel[],\n         public raidConfig: string,\n         public children: VirtualObjectPlacementModel[]) {\n      super(DatastoreType.VSAN);\n   }\n\n   get lastLevelComponents(): VirtualObjectPlacementModel[] {\n      const lastLevelComponents: any[] = [];\n      this.children.forEach(child => {\n         lastLevelComponents.push(...this.getNextLevelComponents(child));\n      });\n      return lastLevelComponents;\n   }\n}","/* Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {TreeDatagrid} from \"@component/datagrid/tree-datagrid\";\nimport {ObjectPlacement} from \"@component/placement-details/model/object-placement\";\nimport {PlacementDetailsUtil} from \"@component/placement-details/placement-details-util\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {VirtualObjectPlacementModel} from \"@generated/virtual-object-placement-model\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"placement-details-flat.html\",\n   styleUrls: [\"placement-details-flat.scss\"],\n   selector: \"virtual-objects-placement-details-flat\",\n})\nexport class PlacementDetailsFlatComponent {\n\n   DatastoreType: typeof DatastoreType = DatastoreType;\n   detailsProvider: TreeDatagrid = new TreeDatagrid(item => item.children);\n   footerText: string = \"\";\n\n   @Input()\n   vmRef: ManagedObject;\n\n   @Input()\n   virtualObjects: VirtualObjectModel[];\n\n   private _data: Map<string, VirtualObjectPlacementModel[]>;\n\n   @Input()\n   set data(data: Map<string, VirtualObjectPlacementModel[]>) {\n      this._data = data;\n\n      if (!data) {\n         this.detailsProvider.rootItems = [];\n         this.footerText = \"\";\n         return;\n      }\n\n      const placements = this.constructPlacements(data);\n      this.detailsProvider.rootItems = placements;\n      this.footerText = this.getFooter(placements);\n   }\n\n   get data(): Map<string, VirtualObjectPlacementModel[]> {\n      return this._data;\n   }\n\n   @Input()\n   isVsanMaxEnabled: boolean;\n\n   /**\n    * Display only basic columns (e.g., when the component is used in a smaller view).\n    */\n   @Input()\n   reducedColumns: boolean;\n\n   private getFooter(placements: ObjectPlacement[]): string {\n      const vsanPlacementsSummary: VirtualObjectPlacementsSummary = new VirtualObjectPlacementsSummary(\n            \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.footer.vsan\");\n      const vsanDirectPlacementsSummary: VirtualObjectPlacementsSummary = new VirtualObjectPlacementsSummary(\n            \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.footer.vsanDirect\");\n      const pmemPlacementsSummary: VirtualObjectPlacementsSummary = new VirtualObjectPlacementsSummary(\n            \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.footer.pmem\");\n\n      placements.forEach(placement => {\n         switch (placement.datastoreType) {\n            case DatastoreType.VSAN:\n               vsanPlacementsSummary.count(placement.lastLevelComponents);\n               break;\n            case DatastoreType.VSAN_DIRECT:\n               vsanDirectPlacementsSummary.count(placement.lastLevelComponents);\n               break;\n            case DatastoreType.PMEM:\n               pmemPlacementsSummary.count(placement.lastLevelComponents);\n               break;\n         }\n      });\n\n      return [vsanPlacementsSummary, vsanDirectPlacementsSummary, pmemPlacementsSummary]\n            .filter(summary => summary.hasData)\n            .map(summary => summary.label)\n            .join(\", \");\n   }\n\n   private constructPlacements(data: Map<string, VirtualObjectPlacementModel[]>): any[] {\n      const placements: any[] = [];\n\n      for (const uuid of data.keys()) {\n         // deep clone the models, because the mergeSingleRaidConfig(invoked from getPlacement()) will move the\n         // raid config children to the upper level and\n         // we don't want to change the original data as well\n         const components: VirtualObjectPlacementModel[] = JSON.parse(JSON.stringify(data.get(uuid)));\n\n         placements.push(PlacementDetailsUtil.getPlacement(\n               uuid, components, this.virtualObjects, (id: string) => this.findPath(id)));\n      }\n\n      return placements;\n   }\n\n   /**\n    * Returns the path for the specified virtual objects.\n    * Sample result is [vmModel, diskModel]\n    */\n   private findPath(vsanUuid: string): VirtualObjectModel[] {\n      for (const model of this.virtualObjects) {\n         if (vsanUuid === model.uid) {\n            return [model];\n         }\n         if (model.children) {\n            for (const child of model.children) {\n               if (vsanUuid === child.uid) {\n                  if (this.vmRef) {\n                     return [child];\n                  } else {\n                     return [model, child];\n                  }\n               }\n            }\n         }\n      }\n      throw new Error(\"Virtual object not found: \" + vsanUuid);\n   }\n\n   /**\n    * vsan-expand renders depth padding, so it must always be placed except for\n    * non expandable items with depth 0 (e.g., vSAN Direct objects).\n    */\n   isExpandable(row: any): boolean {\n      return !row.data.datastoreType /* Nested rows (e.g., RAID config)*/ ||\n            row.data.datastoreType === DatastoreType.VSAN;\n   }\n\n   getDiskColumnLabel(): string {\n      return this.isVsanMaxEnabled\n            ? VsanUiUtils.getString(\n                  \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.vSANMaxDisk\")\n            : VsanUiUtils.getString(\n                  \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.capacityDisk\");\n   }\n\n   getDiskUUIDColumnLabel(): string {\n      return this.isVsanMaxEnabled\n            ? VsanUiUtils.getString(\n                  \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.vSANMaxDiskUUID\")\n            : VsanUiUtils.getString(\n                  \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.capacityDiskUUID\");\n   }\n}\n\n/**\n * This class is being used only in this component.\n * It contains summary information for displayed object:\n *  - (components for vSAN) because one object could be stored on multiple disks\n *  - (objects for vSAN Direct) because one object is always stored on one disk\n *  and unique host counts\n */\nclass VirtualObjectPlacementsSummary {\n   private objects: number = 0;\n   private uniqueHosts: any = {};\n\n   constructor(private labelKey: string) {\n   }\n\n   count(objects: VirtualObjectPlacementModel[]): void {\n      objects.forEach(object => {\n         this.incrementCounts(object);\n         if (object.children) {\n            this.count(object.children);\n         }\n      });\n   }\n\n   get objectCount(): number {\n      return this.objects;\n   }\n\n   get hostCount(): number {\n      return Object.keys(this.uniqueHosts).length;\n   }\n\n   get hasData(): boolean {\n      return this.objectCount > 0 && this.hostCount > 0;\n   }\n\n   get label(): string {\n      return VsanUiUtils.getString(this.labelKey, this.objectCount, this.hostCount);\n   }\n\n   private incrementCounts(object: VirtualObjectPlacementModel): void {\n      if (object.nodeUuid) {\n         this.objects++;\n      }\n      if (object.host) {\n         this.uniqueHosts[object.host.nodeUuid] = {};\n      }\n   }\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {PhysicalPlacementPropertyBoxComponent} from \"@component/placement-details/physical-placement-property-box.component\";\nimport {ComponentStateIconClassPipe} from \"@component/placement-details/pipe/component-state-icon-class.pipe\";\nimport {ComponentStateIconShapePipe} from \"@component/placement-details/pipe/component-state-icon-shape.pipe\";\nimport {PlacementDetailsFlatComponent} from \"@component/placement-details/placement-details-flat.component\";\nimport {PlacementDetailsGroupedComponent} from \"@component/placement-details/placement-details-grouped.component\";\nimport {PlacementDetailsPathComponent} from \"@component/placement-details/placement-details-path.component\";\nimport {PlacementDetailsComponent} from \"@component/placement-details/placement-details.component\";\nimport {VirtualObjectsTableModule} from \"@component/virtual-objects-table/virtual-objects-table.module\";\nimport {VsanCommonModule} from \"app/vsan/common/vsan-common.module\";\n\n@NgModule({\n   imports: [\n      FormsModule,\n      CommonModule,\n      ClarityModule,\n      VsanCommonModule,\n      VirtualObjectsTableModule,\n   ],\n   declarations: [\n      ComponentStateIconClassPipe,\n      ComponentStateIconShapePipe,\n      PlacementDetailsComponent,\n      PlacementDetailsFlatComponent,\n      PlacementDetailsPathComponent,\n      PlacementDetailsGroupedComponent,\n      PhysicalPlacementPropertyBoxComponent,\n   ],\n   exports: [\n      PlacementDetailsComponent,\n      PlacementDetailsFlatComponent\n   ]\n})\nexport class PlacementDetailsModule {\n}\n"]}