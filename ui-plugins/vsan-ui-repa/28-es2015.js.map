{"version":3,"sources":["./src/app/vsan/common/model/fault-domain.model.ts","./src/app/vsan/common/util/fault-domains-util.ts","./src/app/vsan/common/model/fault-domain-consumption-data.ts"],"names":[],"mappings":"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","file":"28-es2015.js","sourcesContent":["/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ClrSelectedState} from \"@clr/angular\";\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * Wraps a DomainOrHostData object.\n * Controls the behavior and look of a fault domain card.\n */\nexport class FaultDomainModel {\n\n   static readonly STANDALONE_PLACEHOLDER: string = \"__standalone_hosts_#_\";\n   static readonly CREATE_DOMAIN_PLACEHOLDER: string = \"__create_domain_#_\";\n\n   data: DomainOrHostData;\n   isLoading: boolean = false;\n   isDragging: boolean = false;\n\n   // for domains\n   title: string;\n   hosts: FaultDomainModel[] = [];\n   isPreferred: boolean = false;\n\n   // for hosts\n   domain: FaultDomainModel;\n   isSelected: ClrSelectedState = ClrSelectedState.UNSELECTED;\n   validTargets: string[] = [];\n   validTargetDomains: string[] = [];\n   dropScope: string;\n\n   protected constructor() {}\n\n   static createDomain(domain: DomainOrHostData, allDomains: DomainOrHostData[]): FaultDomainModel {\n      const result: FaultDomainModel = new FaultDomainModel();\n      result.data = domain;\n      result.dropScope = domain.uid;\n      result.title = domain.uid;\n      result.hosts = domain.children.map(host => FaultDomainModel.createHost(host, result, allDomains));\n      result.validTargets = result.hosts.length > 0 ? result.hosts[0].validTargets : [];\n      result.validTargetDomains = result.hosts.length > 0 ? result.hosts[0].validTargetDomains : [];\n      return result;\n   }\n\n   static createPreferredDomain(domain: DomainOrHostData, allDomains: DomainOrHostData[]): FaultDomainModel {\n      const result: FaultDomainModel = FaultDomainModel.createDomain(domain, allDomains);\n      result.title = VsanUiUtils.getString(\"vsan.faultDomains.card.preferred\", result.title);\n      result.isPreferred = true;\n      return result;\n   }\n\n   static createHost(host: DomainOrHostData,\n         domainModel: FaultDomainModel,\n         allDomains: DomainOrHostData[]): FaultDomainModel {\n      const result: FaultDomainModel = new FaultDomainModel();\n      result.data = host;\n      result.domain = domainModel;\n      result.validTargetDomains = allDomains.map(domain => domain.uid);\n      if (domainModel) {\n         result.validTargetDomains = result.validTargetDomains\n               .filter(uid => uid !== domainModel.data.uid);\n      }\n      result.validTargets = [\n            FaultDomainModel.CREATE_DOMAIN_PLACEHOLDER,\n            FaultDomainModel.STANDALONE_PLACEHOLDER,\n            ...result.validTargetDomains];\n      return result;\n   }\n\n   /**\n    * Returns true if all of the specified hosts belong to the same domain\n    * and there are no other hosts in it.\n    */\n   static allAffected(hosts: FaultDomainModel[]): boolean {\n      if (!hosts || hosts.length === 0 || !hosts[0].domain || !hosts[0].domain.data) {\n         return false;\n      }\n      if (hosts.find(item => item.domain !== hosts[0].domain)) {\n         return false;\n      }\n      return hosts.length === hosts[0].domain.hosts.length;\n   }\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {FaultDomainModel} from \"@model/fault-domain.model\";\nimport {WitnessHostData} from \"@generated/witness-host-data\";\nimport {FaultDomainConsumptionData} from \"@model/fault-domain-consumption-data\";\n\n/**\n * Provide utility methods for moving hosts or fault domains from a source to a target destination.\n */\nexport class FaultDomainsUtil {\n   static MAX_SUPPORTED_FAILERS: number = 3;\n\n\n   /**\n    * Move host or fault domain from source to destination list\n    * @param item - The fault domain or standalone host being moved.\n    * @param sourceItems - The list from which the item is being removed. E.g. preferred or secondary domain.\n    * @param targetItems - The list to which the item is being added E.g. preferred or secondary domain.\n    */\n   static move(item: DomainOrHostData, sourceItems: DomainOrHostData[], targetItems: DomainOrHostData[]): void {\n      if (!item) {\n         return;\n      }\n\n      if (item.isHost) {\n         this.moveHost(item, sourceItems, targetItems);\n      } else {\n         this.moveDomain(item, sourceItems, targetItems);\n      }\n   }\n\n   private static moveHost(host: DomainOrHostData,\n         sourceItems: DomainOrHostData[],\n         targetItems: DomainOrHostData[]): void {\n      const hostDomain: DomainOrHostData = this.removeHostFromSource(host, sourceItems);\n      this.addHostToTarget(host, hostDomain, targetItems);\n   }\n\n   private static removeHostFromSource(host: DomainOrHostData, sourceItems: DomainOrHostData[]): DomainOrHostData {\n      if (this.remove(host, sourceItems)) {\n         // Host is not part of any domain, nothing else to do\n         return null;\n      } else {\n         return this.removeHostFromContainingDomain(host, sourceItems);\n      }\n   }\n\n   private static removeHostFromContainingDomain(\n         host: DomainOrHostData,\n         sourceItems: DomainOrHostData[]): DomainOrHostData {\n      const hostDomain: DomainOrHostData = sourceItems.filter(item => !item.isHost && this.removeFromDomain(host, item))\n            .find(item => VsanUiUtils.isEmpty(item.children));\n      if (hostDomain) {\n         // The host was the only item under this domain, remove it from source side\n         this.remove(hostDomain, sourceItems);\n      }\n      return hostDomain;\n   }\n\n   private static removeFromDomain(host: DomainOrHostData, domain: DomainOrHostData): boolean {\n      return !VsanUiUtils.isEmpty(domain.children) && this.remove(host, domain.children);\n   }\n\n   private static addHostToTarget(\n         host: DomainOrHostData,\n         hostDomain: DomainOrHostData,\n         targetItems: DomainOrHostData[]): void {\n      if (hostDomain) {\n         const foundDomain: DomainOrHostData = this.findDomain(hostDomain.uid, targetItems);\n         if (foundDomain) {\n            foundDomain.children.push(host);\n         } else {\n            targetItems.push(this.cloneDomainAndMoveHost(host, hostDomain));\n         }\n      } else {\n         targetItems.push(host);\n      }\n   }\n\n   private static cloneDomainAndMoveHost(host: DomainOrHostData, hostDomain: DomainOrHostData): DomainOrHostData {\n      const copiedDomain: any = VsanUiUtils.deepmergeObjects({}, hostDomain);\n      // Host is no longer part of that domain object + there might be other hosts in that domain\n      copiedDomain.children = [host];\n      return copiedDomain;\n   }\n\n   private static moveDomain(domain: DomainOrHostData,\n         sourceItems: DomainOrHostData[],\n         targetItems: DomainOrHostData[]): void {\n      this.remove(domain, sourceItems);\n      this.addDomainToTarget(domain, targetItems);\n   }\n\n   private static addDomainToTarget(domain: DomainOrHostData, targetItems: DomainOrHostData[]): void {\n      const foundDomain: DomainOrHostData = this.findDomain(domain.uid, targetItems);\n      if (foundDomain) {\n         foundDomain.children = foundDomain.children.concat(domain.children);\n      } else {\n         targetItems.push(domain);\n      }\n   }\n\n   /**\n    * If the item is removed from the items array return TRUE. Otherwise return FALSE\n    */\n   private static remove(item: DomainOrHostData, items: DomainOrHostData[]): boolean {\n      const index: number = items.indexOf(item);\n      if (index > -1) {\n         items.splice(index, 1);\n         return true;\n      }\n      return false;\n   }\n\n   private static findDomain(domainUid: string, hostsAndDomains: DomainOrHostData[]): DomainOrHostData {\n      return hostsAndDomains.find(i => !i.isHost && i.uid === domainUid);\n   }\n\n   static calculateFailuresToTolerate(standaloneHostsCount: number,\n         domainsCount: number,\n         witnessHostsCount: number): number {\n      const standaloneHostsAndDomainsCount: number = standaloneHostsCount + domainsCount;\n      if (standaloneHostsAndDomainsCount < witnessHostsCount) {\n         // when there are more metadata nodes than data nodes, the formula is:\n         // tolerance = x-1, where x is the count of data nodes\n         return standaloneHostsAndDomainsCount > 0 ?\n               Math.min(FaultDomainsUtil.MAX_SUPPORTED_FAILERS, standaloneHostsAndDomainsCount - 1) : 0;\n      } else {\n         const allNodesCount: number = standaloneHostsAndDomainsCount + witnessHostsCount;\n         // else the formula is:\n         // (x+y-1)/2 where x is the count of data nodes, y is the count of metadata nodes\n         return allNodesCount > 0 ?\n               Math.min(FaultDomainsUtil.MAX_SUPPORTED_FAILERS, Math.floor((allNodesCount - 1) / 2)) : 0;\n      }\n   }\n\n   static getPreferredDomain(witnessInfos: WitnessHostData[]): string {\n      // Preferred domain name should be the same for all witness hosts, retrieve it from the first.\n      return !VsanUiUtils.isEmpty(witnessInfos)\n            ? witnessInfos[0].preferredFaultDomainName\n            : null;\n   }\n\n   static getStandaloneModels(availableDomains: DomainOrHostData[],\n         witnessInfos: WitnessHostData[]): FaultDomainModel[] {\n      const domains: DomainOrHostData[] = availableDomains.filter(item => !item.isHost);\n      const standaloneHosts: DomainOrHostData[] = availableDomains.filter(item => item.isHost);\n      if (!witnessInfos || !witnessInfos.length || standaloneHosts.length > 0) {\n         return standaloneHosts.map(hostData =>\n               FaultDomainModel.createHost(hostData, null, domains));\n      }\n      return [];\n   }\n\n   static getFaultDomainModels(availableDomains: DomainOrHostData[], preferredDomain: string): FaultDomainModel[] {\n      availableDomains.sort((item1, item2) => item1.label.localeCompare(item2.label));\n\n      const models: FaultDomainModel[] = [];\n      const domains: DomainOrHostData[] = availableDomains.filter(item => !item.isHost);\n      domains.forEach(domain => {\n         if (domain.uid === preferredDomain) {\n            // preferred domain, insert at index 0\n            models.splice(0, 0, FaultDomainModel.createPreferredDomain(domain, domains));\n         } else {\n            models.push(FaultDomainModel.createDomain(domain, domains));\n         }\n      });\n\n      models.sort((model1, model2) => model1.data.uid.localeCompare(model2.data.uid));\n      return models;\n   }\n\n   static getFaultToleranceInfo(availableDomains: DomainOrHostData[],\n         witnessInfos: WitnessHostData[],\n         standaloneModels: FaultDomainModel[],\n         faultDomainModels: FaultDomainModel[],\n         storageConsumption: any): string {\n      if (VsanUiUtils.isEmpty(availableDomains) ||\n            (VsanUiUtils.isEmpty(standaloneModels) && VsanUiUtils.isEmpty(faultDomainModels))) {\n         return VsanUiUtils.getString(\"vsan.faultDomains.stretchedCluster.numOfHostFailures\", 0);\n      }\n\n      const witnessHostsCount: number = witnessInfos && witnessInfos.length ?\n            witnessInfos.filter(witness => !witness.inMaintenanceMode).length : 0;\n      let standaloneHostsCount: number = 0;\n      let domainsCount: number = 0;\n      availableDomains.forEach(root => {\n         if (!this.notComputeOnlyNode(root, standaloneModels, faultDomainModels, storageConsumption)) {\n            return;\n         }\n         if (root.isHost && !root.inMaintenanceMode) {\n            // count standalone hosts which are not in mmode and not a compute-only node\n            standaloneHostsCount++;\n         } else if (!root.isHost) {\n            // count fault domain if at least one of its hosts is not in mmode and not a compute-only node\n            if (root.children.some(host => !host.inMaintenanceMode)) {\n               domainsCount++;\n            }\n         }\n      });\n\n      const key: string = availableDomains.find(item => !item.isHost)\n            ? \"vsan.faultDomains.stretchedCluster.numOfDomainFailures\"\n            : \"vsan.faultDomains.stretchedCluster.numOfHostFailures\";\n      return VsanUiUtils.getString(key,\n            FaultDomainsUtil.calculateFailuresToTolerate(standaloneHostsCount, domainsCount, witnessHostsCount));\n   }\n\n   private static notComputeOnlyNode(item: DomainOrHostData,\n         standaloneModels: FaultDomainModel[],\n         faultDomainModels: FaultDomainModel[],\n         storageConsumption: any): boolean {\n      let fdModel: FaultDomainModel;\n      if (item.isHost) {\n         fdModel = (standaloneModels.find(host => host.data.uid === item.uid));\n      } else {\n         fdModel = (faultDomainModels.find(faultDomain => faultDomain.data.uid === item.uid));\n      }\n      return this.getDomainConsumption(fdModel, storageConsumption).totalBytes > 0;\n   }\n\n   private static getDomainConsumption(model: FaultDomainModel, storageConsumption: any): FaultDomainConsumptionData {\n      return FaultDomainConsumptionData.getDomainConsumptionData(model, storageConsumption);\n   }\n}\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {HostStorageConsumptionData} from \"@generated/host-storage-consumption-data\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {FaultDomainModel} from \"@model/fault-domain.model\";\n\nexport class FaultDomainConsumptionData {\n   usedBytes: number = 0;\n   reservedBytes: number = 0;\n   totalBytes: number = 0;\n   freeBytes: number = 0;\n\n   constructor(hostData: HostStorageConsumptionData[]) {\n      for (const data of hostData) {\n         // Data will be missing if the host is disconnected.\n         if (data) {\n            this.usedBytes += data.userCapacity;\n            this.reservedBytes += data.reservedCapacity;\n            this.totalBytes += data.totalCapacity;\n            const freeCapacity: number = data.totalCapacity - data.userCapacity;\n            this.freeBytes += (freeCapacity > 0 ? freeCapacity : 0);\n         }\n      }\n   }\n\n   get consumptionInfo(): string {\n      if (this.totalBytes === 0) {\n         return \"\";\n      }\n      const percentageValue: number = (this.usedBytes / this.totalBytes) * 100;\n      return VsanUiUtils.getPercentage(percentageValue);\n   }\n\n   static getDomainConsumptionData(model: FaultDomainModel, storageConsumption: any): FaultDomainConsumptionData {\n      let hosts: FaultDomainModel[] = model.hosts;\n      if (!hosts || hosts.length === 0) {\n         hosts = [model];\n      }\n      const hostData: HostStorageConsumptionData[] = hosts\n            .map(host => storageConsumption[host.data.uid])\n            .filter(data => data !== null);\n      return new FaultDomainConsumptionData(hostData);\n   }\n}\n"],"sourceRoot":"webpack:///"}