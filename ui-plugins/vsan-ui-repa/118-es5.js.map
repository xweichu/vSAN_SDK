{"version":3,"sources":["webpack:///src/app/vsan/common/component/datagrid/tree-datagrid.module.ts","webpack:///src/app/vsan/common/service/navigation/model/knowledge-base-id.ts","webpack:///src/app/vsan/common/util/modal-builder.ts","webpack:///src/app/vsan/common/component/action-button/button-title.directive.ts","webpack:///src/app/vsan/common/component/popup-list/popup-list.module.ts","webpack:///src/app/vsan/common/directive/clr-button-group/clr-button-group-common.directive.ts","webpack:///src/app/vsan/csd/csd.module.ts","webpack:///src/app/vsan/common/component/navigation/vsan-breadcrumb.module.ts","webpack:///src/app/vsan/common/component/action-button/button-group.directive.ts","webpack:///src/app/vsan/common/component/unavailable-view/unavailable-view.module.ts","webpack:///src/app/vsan/csd/view/datastore-sharing.html","webpack:///src/app/vsan/common/component/cell/common-cells.module.ts","webpack:///src/app/vsan/csd/view/datastore-sharing.component.ts","webpack:///src/app/vsan/csd/modal/unmount/unmount-remote-datastore-modal.component.ts","webpack:///src/app/vsan/common/vsan-common.module.ts","webpack:///src/app/vsan/common/component/action-button/action-button.module.ts","webpack:///src/app/vsan/csd/modal/unmount/unmount-remote-datastore-modal.component.ts.UnmountRemoteDatastoreModalComponent.html"],"names":["TreeDatagridModule","KnowledgeBaseId","ModalBuilder","appId","size","DEFAULT_SIZE","title","accessibilityTitle","urlParams","dimensions","length","warn","setSize","WIDTH","HEIGHT","width","height","params","eventTarget","context","Promise","accept","pluginContext","targetElement","event","target","modalResultHandler","data","JSON","parse","stringify","focus","setTimeout","actionUrl","APP_URL","separator","param","openModalDialog","contextObjectUid","WIZARD_XL","repa","repaExtension","ButtonTitleDirective","host","titleChange","_title","value","next","asObservable","name","Math","random","toString","unsubscribe","PopupListModule","ClrButtonGroupCommonDirective","elRef","allButtons","nativeElement","querySelectorAll","clrButtons","filter","clrButton","directives","forEach","index","buttonFound","findButtonByName","directive","resolveButton","buttons","i","item","csdRoutes","path","component","CsdModule","VsanBreadcrumbModule","ButtonGroupDirective","_maximumInlineActions","_buttonTitleDirectives","updateButtonTitles","getVisibleButtons","concat","getInMenuButtons","titleDirective","button","getAttribute","titleChangeEvent","subscribe","subscribeToggleButtonClick","btns","_btns","updateInMenuButtons","groupWithMenu","btn","inMenu","toggleButton","getToggleButton","onclick","Array","from","VISIBLE_BUTTON_ELEMENTS_SELECTOR","ownerDocument","IN_MENU_BUTTON_ELEMENTS_SELECTOR","querySelector","TOGGLE_MENU_BUTTON_SELECTOR","UnavailableViewModule","CommonCellsModule","DatastoreSharingComponent","capabilityProvider","dataService","permissionService","csdService","navigationService","taskMonitorService","ManagedObject","isCsdSupportedOnCluster","unavailableView","hasEditClusterPermission","csdNotSupportedMessage","getString","datastores","selectedDatastore","isClusterLocal","clusterRef","areEqual","contextObject","checkCsdSupportedOnCluster","all","fetch","hasPermissions","EDIT_CLUSTER","CONFIG_STORAGE","then","res","checkNumberOfHosts","fetchMountedDatastores","previouslySelectedDatastore","getMountedDatastores","find","ds","shareableDatastore","datastore","moRef","getIsCsdSupported","getProperty","numberOfHosts","DATASTORE_SHARING_VIEW_NO_HOSTS","morRef","navigateTo","LAST_VISITED_PAGE","datastoreRef","DATASTORE_CAPACITY","isLocal","registeredVMCount","isUnmountEnabled","setDimensions","open","modalTask","handleTask","task","getAwaitResult","error","errorMessage","srMessage","UnmountRemoteDatastoreModalComponent","getModalContext","errors","blockButton","unmountRemoteDatastore","unmountTask","closeModalDialog","push","VsanCommonModule","ActionButtonModule"],"mappings":"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","file":"118-es5.js","sourcesContent":["/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {TreeExpanderComponent} from \"@component/datagrid/tree-expander.component\";\nimport {TreeColumnComponent} from \"@component/datagrid/tree-column.component\";\nimport {EnumeratedFilterComponent} from \"./filter/enumerated-filter.component\";\nimport {EnumeratedFilterItemComponent} from \"./filter/enumerated-filter-item.component\";\nimport {EnumFilterComponent} from \"@component/datagrid/filter/enum-filter.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n   ],\n   declarations: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumeratedFilterComponent,\n      EnumFilterComponent,\n   ],\n   exports: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumFilterComponent,\n   ],\n})\nexport class TreeDatagridModule {\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n/**\n * IDs used in external KB link navigation\n */\nexport enum KnowledgeBaseId {\n   PRECHECK_PCP = \"83954\",\n   VIRTUAL_OBJECTS = \"2108319\",\n   UPGRADE = \"2148493\",\n   PERFORMANCE_DIAGNOSTICS = \"2148770\",\n   SUPPORT_INSIGHT = \"60206\",\n}\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {environment} from \"@env/environment\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Logger} from \"./logger\";\nimport {WebPlatform} from \"./platform\";\nimport {VsanUiUtils} from \"./vsan-util\";\n\nexport class ModalBuilder {\n\n   static readonly WIDTH: number = 0;\n   static readonly HEIGHT: number = 1;\n\n   static readonly DEFAULT_SIZE: number[] = [1000, 530];\n   static readonly WIZARD_XL: number[] = [1200, 700];\n\n   static readonly APP_URL: string = (environment.repa && environment.repaExtension)\n         ? \"index.html\"\n         : \"/ui/h5-vsan-ui/\";\n\n   private size: number[] = ModalBuilder.DEFAULT_SIZE;\n\n   // When null, the modal dialog will be headless and the docked\n   // view is expected to provide a title bar.\n   private title: string = null;\n\n   private accessibilityTitle: string = null;\n\n   private urlParams: any = {};\n\n   private eventTarget: EventTarget;\n\n   constructor(private appId: string) {\n   }\n\n   setDimensions(dimensions: number[]): ModalBuilder {\n      if (!dimensions || dimensions.length !== 2) {\n         Logger.warn(\"invalid modal dimensions\", dimensions);\n         dimensions = ModalBuilder.DEFAULT_SIZE;\n      }\n      return this.setSize(dimensions[ModalBuilder.WIDTH], dimensions[ModalBuilder.HEIGHT]);\n   }\n\n   setSize(width: number, height: number): ModalBuilder {\n      this.size = [width, height];\n      return this;\n   }\n\n   setUrlParameters(params: any): ModalBuilder {\n      this.urlParams = params;\n      return this;\n   }\n\n   /**\n    * Set to null if the view provides its own title bar\n    */\n   setTitle(title: string): ModalBuilder {\n      this.title = title;\n      return this;\n   }\n\n   setAccessibilityTitle(accessibilityTitle: string): ModalBuilder {\n      this.accessibilityTitle = accessibilityTitle;\n      return this;\n   }\n\n   /**\n    * Set explicit event target if it is changed before opening the modal.\n    * For example when making a preceding request the event target is the XMLHttpRequest object.\n    */\n   setEventTarget(eventTarget: EventTarget): ModalBuilder {\n      this.eventTarget = eventTarget;\n      return this;\n   }\n\n   /**\n    * Opens a modal dialog and returns a promise to collect the result; On close the target element is focused.\n    * @param context - any JS data object, can be retrieved by WebPlatform.getModalContext()\n    * @returns {Promise<any>} - Invoked if the dialog invokes WebPlatform.closeModalDialog(arg)\n    *       with non-null arg. The promise is never rejected.\n    */\n   open(context?: any): Promise<any> {\n      return new Promise<any>((accept) => {\n         VsanUiUtils.pluginContext.targetElement = this.eventTarget ? this.eventTarget :\n               (event && event.target ? event.target : null);\n         VsanUiUtils.pluginContext.modalResultHandler = (data?: any) => {\n            if (typeof data !== \"undefined\") {\n               // Deep copy of the object was required to resolve an issue with object's prototype overriding when\n               // passing complex objects in IE11/Edge; Keep it for safety.\n               accept(JSON.parse(JSON.stringify(data)));\n            } else if (VsanUiUtils.pluginContext.targetElement && VsanUiUtils.pluginContext.targetElement.focus) {\n               // On cancel just focus the target element. Timeout is required as otherwise the focus may be\n               // consumed by the mouse click.\n               setTimeout(() => VsanUiUtils.pluginContext.targetElement.focus(), 100);\n            }\n         };\n\n         let actionUrl: string = `${ModalBuilder.APP_URL}?viewId=${this.appId}`;\n\n         let separator: string = \"?\";\n         for (const param in this.urlParams) {\n            actionUrl += separator + param + \"=\" + this.urlParams[param];\n            separator = \"&\";\n         }\n\n         WebPlatform.openModalDialog(this.title,\n               actionUrl,\n               ManagedObject.contextObjectUid,\n               this.size[0], this.size[1],\n               this.title != null,\n               VsanUiUtils.pluginContext.modalResultHandler /* onClose */,\n               context /* retrieve with Platform.getModalContext() */,\n               this.accessibilityTitle);\n      });\n   }\n\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Directive, Input, OnInit} from '@angular/core';\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {ClrButton} from \"@clr/angular\";\n\n/**\n * Attribute directive for detecting button title change and storing title.\n * Only used for clr-button in clr-button-group.\n * @title - The title of clr-button\n */\n@Directive({\n   selector: \"clr-button[vsan-button-title]\"\n})\nexport class ButtonTitleDirective implements OnInit {\n\n   constructor(public host: ClrButton) {}\n\n   private _title: string;\n\n   @Input(\"vsan-button-title\")\n   set title(value: string) {\n      if (this._title !== value) {\n         this.titleChange.next(value);\n      }\n      this._title = value;\n   }\n\n   get title(): string {\n      return this._title;\n   }\n\n   private titleChange: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n\n   get titleChangeEvent(): Observable<string> {\n      return this.titleChange.asObservable();\n   }\n\n   ngOnInit(): void {\n      // name should be set, if not provided in template - generate one. ClrButtom#name is used to generate the name\n      // attribute of the markup button. Later the name is used to match the generated markup with the directive.\n      if (!this.host.name) {\n         this.host.name = Math.random().toString();\n      }\n   }\n\n   ngOnDestroy() {\n      this.titleChange.unsubscribe();\n   }\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {PopupListComponent} from \"@component/popup-list/popup-list.component\";\nimport {PopupListItemDirective} from \"@component/popup-list/popup-list-item.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      CommonPipeModule\n   ],\n   declarations: [\n      PopupListComponent,\n      PopupListItemDirective\n   ],\n   exports: [\n      PopupListComponent,\n      PopupListItemDirective\n   ]\n})\nexport class PopupListModule {\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterContentInit, ContentChildren, Directive, ElementRef} from \"@angular/core\";\nimport {ClrButton} from \"@clr/angular\";\nimport {ClrButtonBaseDirective, DirectiveHolder} from \"@directive/clr-button-group/clr-button-base.directive\";\n\n/**\n * Applies on every clr-button-group and help to link the clr-button with directive applieds on it,  which extends\n * {@link ClrButtonBaseDirective}, to the actual rendered html button.\n */\n@Directive({\n   selector: \"clr-button-group\",\n})\nexport class ClrButtonGroupCommonDirective implements AfterContentInit {\n\n   @ContentChildren(ClrButton, {descendants: true})\n   clrButtons: ClrButton[];\n\n   constructor(private elRef: ElementRef) {}\n\n   ngAfterContentInit(): void {\n      setTimeout(() => {\n         const allButtons: NodeListOf<HTMLButtonElement> = this.elRef.nativeElement.querySelectorAll(\"button\");\n         // match button with clrButton and notify directives\n         this.clrButtons.filter(clrButton => !!(clrButton as DirectiveHolder).directives)\n               .forEach((clrButton, index) => {\n                  const buttonFound: HTMLButtonElement = this.findButtonByName(clrButton.name, allButtons);\n                  if (buttonFound) {\n                     (clrButton as DirectiveHolder).directives.forEach(directive => {\n                        directive.resolveButton(clrButton, buttonFound, index);\n                     });\n                  }\n               });\n      });\n   }\n\n   private findButtonByName(name: string, buttons: NodeListOf<HTMLButtonElement>): HTMLButtonElement {\n      for (let i: number = 0; i < buttons.length; i++) {\n         if (buttons.item(i).name === name) {\n            return buttons.item(i);\n         }\n      }\n      return null;\n   }\n\n}","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {DatastoreSharingComponent} from \"./view/datastore-sharing.component\";\nimport {PopupListModule} from \"@component/popup-list/popup-list.module\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {VsanCommonModule} from \"../common/vsan-common.module\";\nimport {UnmountRemoteDatastoreModalComponent} from \"./modal/unmount/unmount-remote-datastore-modal.component\";\nimport {InventoryBrowserModule} from \"@component/inventory/inventory-browser.module\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\n\nconst csdRoutes: Routes = [\n   {\n      path: \"\",\n      component: DatastoreSharingComponent,\n   },\n   {\n      path: \"unmountRemoteDatastore\",\n      component: UnmountRemoteDatastoreModalComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      VsanCommonModule,\n      CommonPipeModule,\n      ValidationModule,\n      PopupListModule,\n      UnavailableViewModule,\n      CommonDirectiveModule,\n      InventoryBrowserModule,\n      RouterModule.forChild(csdRoutes),\n   ],\n   declarations: [\n      DatastoreSharingComponent,\n      UnmountRemoteDatastoreModalComponent,\n   ],\n})\nexport class CsdModule {\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {VsanBreadcrumbNavComponent} from \"./vsan-breadcrumb-nav.component\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\n\n@NgModule({\n   imports: [CommonModule, ClarityModule, CommonDirectiveModule, CommonPipeModule],\n   declarations: [VsanBreadcrumbNavComponent],\n   exports: [\n      VsanBreadcrumbNavComponent,\n   ],\n})\nexport class VsanBreadcrumbModule {}\n","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ContentChildren, Directive, ElementRef, Input} from \"@angular/core\";\nimport {ClrButton} from \"@clr/angular\";\nimport {ButtonTitleDirective} from \"./button-title.directive\";\n\n/**\n * Attribute directive used to dynamically arrange child buttons, align some horizontally and\n * put the others into the drop-down list, this directive also add title attribute to the buttons.\n * It can only used on clr-button-group and there should be clr-button in the button group.\n * @maximumInlineActions - The maximum value of inline buttons.\n */\n@Directive({\n   selector: \"clr-button-group[vsan-button-group]\",\n})\nexport class ButtonGroupDirective {\n\n   private static readonly TOGGLE_MENU_BUTTON_SELECTOR: string = \"button.btn.dropdown-toggle\";\n   private static readonly VISIBLE_BUTTON_ELEMENTS_SELECTOR: string = \"button\";\n   private static readonly IN_MENU_BUTTON_ELEMENTS_SELECTOR: string = \"div.clr-button-group-menu > button\";\n\n   // Set the maximum value to 10 to display all buttons inline when there is enough space.\n   private _maximumInlineActions: number = 10;\n\n   @Input(\"vsan-button-group\")\n   set maximumInlineActions(value: number) {\n      if (!!value) {\n         this._maximumInlineActions = value;\n      }\n   }\n\n   private _buttonTitleDirectives: ButtonTitleDirective[] = [];\n\n   @ContentChildren(ButtonTitleDirective, {descendants: true})\n   set buttons(value: ButtonTitleDirective[]) {\n      this._buttonTitleDirectives = value;\n      this._buttonTitleDirectives.forEach(titleDirective => {\n         // Update button title when its title in directive changes.\n         titleDirective.titleChangeEvent.subscribe(() => {\n            setTimeout(this.updateButtonTitles);\n         });\n      });\n\n      // when action buttons with directive are changed (added / removed) some of them may go to the menu with\n      // additional actions. There is no other way found to handle toggle menu event, but click on the toggle button.\n      this.subscribeToggleButtonClick();\n   }\n\n   private _btns: ClrButton[];\n\n   @ContentChildren(ClrButton, {descendants: true})\n   set clrButtons(btns: ClrButton[]) {\n      this._btns = btns;\n      this.updateInMenuButtons();\n   }\n\n   constructor(private elRef: ElementRef) {\n   }\n\n   private updateInMenuButtons(): void {\n      const groupWithMenu: boolean = this._btns.length > this._maximumInlineActions;\n      this._btns.forEach((btn, index) => {\n         if (groupWithMenu) {\n            // When the number of buttons exceeds the maximum and the button overflows, place the button in the menu.\n            btn.inMenu = index >= this._maximumInlineActions - 1;\n         } else {\n            btn.inMenu = false;\n         }\n      });\n   }\n\n   private updateButtonTitles = (): void => {\n      const allButtons: HTMLButtonElement[] = this.getVisibleButtons().concat(this.getInMenuButtons());\n      if (!allButtons.length) {\n         return;\n      }\n\n      // if there is a rendered button for the directive - update its title.\n      this._buttonTitleDirectives.forEach(titleDirective => {\n         allButtons.forEach((button: HTMLElement) => {\n            if (button.getAttribute(\"name\") === titleDirective.host.name) {\n               button.title = titleDirective.title;\n            }\n         });\n      });\n   };\n\n   private subscribeToggleButtonClick(): void {\n      // If there is menu with additional buttons, find the toggle button and update button names on click.\n      setTimeout(() => {\n         const toggleButton: HTMLElement | null = this.getToggleButton();\n\n         // if there is a toggle button set function to handle the click event only once.\n         if (toggleButton && !toggleButton.onclick) {\n            toggleButton.onclick = this.updateButtonTitles;\n         }\n      });\n   }\n\n   // the buttons are visible buttons in button group, toggle menu button\n   private getVisibleButtons(): HTMLButtonElement[] {\n      return Array.from(this.elRef.nativeElement.querySelectorAll(\n            ButtonGroupDirective.VISIBLE_BUTTON_ELEMENTS_SELECTOR));\n   }\n\n   // inMenu buttons are rendered outside of the elRef, get them directly from the document\n   private getInMenuButtons(): HTMLButtonElement[] {\n      return Array.from(this.elRef.nativeElement.ownerDocument.querySelectorAll(\n            ButtonGroupDirective.IN_MENU_BUTTON_ELEMENTS_SELECTOR));\n   }\n\n   private getToggleButton(): HTMLElement | null {\n      return this.elRef.nativeElement.querySelector(ButtonGroupDirective.TOGGLE_MENU_BUTTON_SELECTOR);\n   }\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {UnavailableViewComponent} from \"@component/unavailable-view/unavailable-view.component\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      CommonPipeModule,\n      ValidationModule,\n      CommonDirectiveModule,\n   ],\n   declarations: [\n      UnavailableViewComponent,\n   ],\n   exports: [\n      UnavailableViewComponent,\n   ],\n})\nexport class UnavailableViewModule {\n}\n","<!--Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<h5 vsan-auto-focus>\n   {{\"vsan.csd.datastoreSharing.title\" | localized}}\n</h5>\n<span>{{\"vsan.csd.datastoreSharing.subtitle\" | localized}}</span>\n\n<div *ngIf=\"loading\" class=\"spinner central-spinner\">{{\"vsan.loading\" | localized}}</div>\n\n<ng-container *ngIf=\"!loading\">\n   <vsan-validation *ngIf=\"errorMessage\"\n                    [allowClose]=\"true\"\n                    [alert]=\"errorMessage\"\n                    (onClosed)=\"errorMessage = null\"\n                    id=\"data-loading-error\">\n   </vsan-validation>\n\n   <vsan-unavailable-view *ngIf=\"unavailableView\"\n                          [unavailableViewSpec]=\"unavailableView\"\n                          [clusterRef]=\"ManagedObject.contextObject\"\n                          [hasEditPrivilege]=\"hasEditClusterPermission\">\n   </vsan-unavailable-view>\n\n   <vsan-validation *ngIf=\"!isCsdSupportedOnCluster && !unavailableView\"\n                    alertType=\"info\"\n                    [allowClose]=\"false\"\n                    [alert]=\"csdNotSupportedMessage\">\n   </vsan-validation>\n\n   <ng-container *ngIf=\"isCsdSupportedOnCluster && !unavailableView\">\n      <clr-button-group class=\"btn-link\" vsan-button-group>\n         <clr-button class=\"btn btn-sm\"\n                     [vsan-button-title]=\"mountDatastoreTooltip\"\n                     [disabled]=\"!hasEditClusterPermission\"\n                     (click)=\"openMountWizard()\">\n            {{\"vsan.csd.datastoreSharing.actions.mount\" | localized}}\n         </clr-button>\n         <clr-button class=\"btn btn-sm\"\n                     [vsan-button-title]=\"unmountDatastoreTooltip\"\n                     [disabled]=\"!isUnmountEnabled()\"\n                     (click)=\"openUnmountDialog()\">\n            {{\"vsan.csd.datastoreSharing.actions.unmount\" | localized}}\n         </clr-button>\n      </clr-button-group>\n\n      <clr-datagrid [clrDgLoading]=\"loading\" [(clrDgSingleSelected)]=\"selectedDatastore\">\n         <clr-dg-column class=\"datastore-column\">\n            {{\"vsan.csd.datastoreSharing.grid.datastore\" | localized}}\n         </clr-dg-column>\n         <clr-dg-column class=\"server-cluster-column\">\n            {{\"vsan.csd.datastoreSharing.grid.serverCluster\" | localized}}\n         </clr-dg-column>\n         <clr-dg-column class=\"storage-size-column\">\n            {{\"vsan.csd.datastoreSharing.grid.capacity\" | localized}}\n         </clr-dg-column>\n         <clr-dg-column class=\"storage-size-column\">\n            {{\"vsan.csd.datastoreSharing.grid.freeSpace\" | localized}}\n         </clr-dg-column>\n         <clr-dg-column class=\"vm-count-column\">\n            {{\"vsan.csd.datastoreSharing.grid.vmCount\" | localized}}\n            <clr-icon\n                  shape=\"info-standard\"\n                  class=\"is-solid\"\n                  tabindex=\"0\"\n                  title=\"{{'vsan.csd.datastoreSharing.grid.vmCount.tooltip' | localized}}\"\n                  [attr.aria-label]=\"'vsan.csd.datastoreSharing.grid.vmCount.tooltip' | localized\">\n            </clr-icon>\n         </clr-dg-column>\n         <clr-dg-column>\n            {{\"vsan.csd.datastoreSharing.grid.clientClusters\" | localized}}\n         </clr-dg-column>\n\n         <clr-dg-row\n               *ngFor=\"let datastore of datastores\"\n               [clrDgItem]=\"datastore\"\n               class=\"signpost-row-height-fix\">\n            <clr-dg-cell class=\"icon-name-container\" vsan-show-title>\n               <clr-icon [attr.shape]=\"datastore.shareableDatastore.datastore.primaryIconId\"></clr-icon>\n               <span *ngIf=\"datastore.isLocal\">\n               {{\"vsan.csd.localTag\" | localized}} {{datastore.shareableDatastore.datastore.name}}\n            </span>\n               <a *ngIf=\"!datastore.isLocal\"\n                  href=\"javascript://\"\n                  (click)=\"navigateToMor(datastore.shareableDatastore.datastore.moRef)\">\n                  {{datastore.shareableDatastore.datastore.name}}\n               </a>\n            </clr-dg-cell>\n            <clr-dg-cell class=\"icon-name-container\" vsan-show-title>\n               <ng-container *ngIf=\"datastore.shareableDatastore.serverCluster\">\n                  <clr-icon [attr.shape]=\"datastore.shareableDatastore.serverCluster.primaryIconId\"></clr-icon>\n                  <span *ngIf=\"datastore.isLocal\">\n                     {{datastore.shareableDatastore.serverCluster.name}}\n                  </span>\n                  <a *ngIf=\"!datastore.isLocal\"\n                     href=\"javascript://\"\n                     (click)=\"navigateToMor(datastore.shareableDatastore.serverCluster.moRef)\">\n                     {{datastore.shareableDatastore.serverCluster.name}}\n                  </a>\n               </ng-container>\n               <!-- When vSAN is turned off the server cluster can't be fetched -->\n               <span *ngIf=\"!datastore.shareableDatastore.serverCluster\">{{\"vsan.na.label\" | localized }}</span>\n            </clr-dg-cell>\n            <clr-dg-cell>\n               <a href=\"javascript://\"\n                  (click)=\"navigateToDatastoreCapacity(datastore.shareableDatastore.datastore.moRef)\">\n                  {{datastore.shareableDatastore.capacityB | fileSize}}\n               </a>\n            </clr-dg-cell>\n            <clr-dg-cell>\n               {{datastore.shareableDatastore.freeSpaceB | fileSize}}\n            </clr-dg-cell>\n            <clr-dg-cell>\n               {{datastore.registeredVMCount}}\n            </clr-dg-cell>\n            <clr-dg-cell>\n               <vsan-popup-list [shownItemsCount]=\"2\" signpostPosition=\"left-bottom\">\n                  <ng-template vsan-popup-list-item\n                               *ngFor=\"let clientCluster of datastore.shareableDatastore.clientClusters\">\n                     <div class=\"icon-name-container\" vsan-show-title>\n                        <clr-icon [attr.shape]=\"clientCluster.primaryIconId\"></clr-icon>\n                        <span *ngIf=\"isClusterLocal(clientCluster.moRef)\">{{clientCluster.name}}</span>\n                        <a *ngIf=\"!isClusterLocal(clientCluster.moRef)\"\n                           href=\"javascript://\"\n                           (click)=\"navigateToMor(clientCluster.moRef)\">\n                           {{clientCluster.name}}\n                        </a>\n                     </div>\n                  </ng-template>\n               </vsan-popup-list>\n            </clr-dg-cell>\n         </clr-dg-row>\n         <clr-dg-footer>\n         </clr-dg-footer>\n      </clr-datagrid>\n   </ng-container>\n</ng-container>\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {HealthStatusCell} from \"@component/cell/health-status-cell.component\";\nimport {LabelCell} from \"@component/cell/label-cell.component\";\nimport {StoragePolicyCell} from \"@component/cell/storage-policy-cell.component\";\nimport {MorCell} from \"@component/cell/mor-cell.component\";\nimport {IconItemComponent} from \"@component/cell/icon-item.component\";\nimport {HealthStateItemComponent} from \"@component/cell/health-state-item.component\";\nimport {ListCell} from \"@component/cell/list-cell.component\";\nimport {PspHealthStateItemComponent} from \"@component/cell/psp-health-state-item.component\";\nimport {HealthTestValueComponent} from \"@component/cell/health-test-value.component\";\nimport {HealthLinkCellComponent} from \"@component/cell/health-link-cell.component\";\nimport {HealthMorCellComponent} from \"@component/cell/health-mor-cell.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n      CommonDirectiveModule,\n   ],\n   // TODO: (vasilevd) Move health specific components to a separate common health module\n   declarations: [\n      HealthStatusCell,\n      HealthTestValueComponent,\n      LabelCell,\n      StoragePolicyCell,\n      MorCell,\n      HealthMorCellComponent,\n      ListCell,\n      IconItemComponent,\n      HealthStateItemComponent,\n      PspHealthStateItemComponent,\n      HealthLinkCellComponent,\n   ],\n   exports: [\n      HealthStatusCell,\n      HealthTestValueComponent,\n      LabelCell,\n      StoragePolicyCell,\n      MorCell,\n      HealthMorCellComponent,\n      ListCell,\n      IconItemComponent,\n      HealthStateItemComponent,\n      PspHealthStateItemComponent,\n      HealthLinkCellComponent,\n   ],\n})\nexport class CommonCellsModule {\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {UnavailableViewSpec} from \"@component/unavailable-view/unavailable-view-spec\";\nimport {CsdService} from \"@generated/csd-service\";\nimport {MountedRemoteDatastore} from \"@generated/mounted-remote-datastore\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {ClusterComputeResource} from \"@service/client/dataservice/data-service-property\";\nimport {DataServiceClient} from \"@service/client/dataservice/data-service.service\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {Logger} from \"@util/logger\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"datastore-sharing.html\",\n   styleUrls: [\"datastore-sharing.scss\"],\n   selector: \"vsan-datastore-sharing\",\n})\nexport class DatastoreSharingComponent implements OnInit {\n   readonly ManagedObject: typeof ManagedObject = ManagedObject;\n\n   @LoadingIndicator()\n   loading: boolean;\n   @ErrorMessage()\n   errorMessage: string;\n   isCsdSupportedOnCluster: boolean = false;\n   unavailableView: UnavailableViewSpec = null;\n   hasEditClusterPermission: boolean = false;\n   csdNotSupportedMessage: string = VsanUiUtils.getString(\"vsan.csd.notSupportedOnCluster\");\n\n   datastores: MountedRemoteDatastore[] = [];\n   selectedDatastore: MountedRemoteDatastore = null;\n\n   constructor(\n         private capabilityProvider: VsanCapabilityProvider,\n         private dataService: DataServiceClient,\n         private permissionService: PermissionService,\n         private csdService: CsdService,\n         private navigationService: NavigationService,\n         private taskMonitorService: TaskMonitorService) {\n   }\n\n   async ngOnInit(): Promise<void> {\n      this.isCsdSupportedOnCluster = await this.checkCsdSupportedOnCluster();\n      await Promise.all([\n         this.fetch(),\n         this.permissionService.hasPermissions(ManagedObject.contextObject, [\n            Privileges.EDIT_CLUSTER(), Privileges.CONFIG_STORAGE(),\n         ]).then(res => this.hasEditClusterPermission = res),\n      ]);\n   }\n\n   @RefreshHandler\n   @Loader({srMessage: \"vsan.csd.datastoreSharing.title\"})\n   async fetch(): Promise<void> {\n      await this.checkNumberOfHosts();\n      if (this.isCsdSupportedOnCluster) {\n         await this.fetchMountedDatastores();\n      }\n   }\n\n   @Loader()\n   async fetchMountedDatastores(): Promise<void> {\n      const previouslySelectedDatastore: MountedRemoteDatastore = this.selectedDatastore;\n      this.datastores = await this.csdService.getMountedDatastores(ManagedObject.contextObject);\n      if (previouslySelectedDatastore) {\n         this.selectedDatastore = this.datastores.find(ds =>\n               ManagedObject.areEqual(ds.shareableDatastore.datastore.moRef,\n                     previouslySelectedDatastore.shareableDatastore.datastore.moRef));\n      }\n   }\n\n   @Loader()\n   private async checkCsdSupportedOnCluster(): Promise<boolean> {\n      return await this.capabilityProvider.getIsCsdSupported(ManagedObject.contextObject);\n   }\n\n   @Loader()\n   private async checkNumberOfHosts(): Promise<void> {\n      const numberOfHosts: number = await this.dataService\n            .getProperty(ClusterComputeResource.host.length, ManagedObject.contextObject);\n      if (!numberOfHosts) {\n         this.unavailableView = UnavailableViewSpec.DATASTORE_SHARING_VIEW_NO_HOSTS;\n      } else {\n         this.unavailableView = null;\n      }\n   }\n\n   navigateToMor(morRef: ManagedObject): void {\n      this.navigationService.navigateTo(PlatformExtension.LAST_VISITED_PAGE, morRef);\n   }\n\n   navigateToDatastoreCapacity(datastoreRef: ManagedObject): void {\n      this.navigationService.navigateTo(PlatformExtension.DATASTORE_CAPACITY, datastoreRef);\n   }\n\n   isUnmountEnabled(): boolean {\n      return this.hasEditClusterPermission &&\n            this.selectedDatastore &&\n            !this.selectedDatastore.isLocal &&\n            !this.selectedDatastore.registeredVMCount;\n   }\n\n   get mountDatastoreTooltip(): string {\n      return this.hasEditClusterPermission ? \"\" : VsanUiUtils.getString(\"vsan.common.nopermissions\");\n   }\n\n   get unmountDatastoreTooltip(): string {\n      if (!this.hasEditClusterPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      }\n      if (!this.isUnmountEnabled() && !!this.selectedDatastore) {\n         if (this.selectedDatastore.isLocal) {\n            return VsanUiUtils.getString(\"vsan.csd.datastoreSharing.actions.unmountLocalDatastoreImpossible\");\n         }\n         return VsanUiUtils.getString(\"vsan.csd.datastoreSharing.actions.vmBlocksUnmount\");\n      }\n      return \"\";\n   }\n\n   isClusterLocal = (clusterRef: ManagedObject): boolean =>\n         ManagedObject.areEqual(clusterRef, ManagedObject.contextObject);\n\n   async openUnmountDialog(): Promise<void> {\n      const modalTask: ManagedObject = await new ModalBuilder(\"datastoreSharing/unmountRemoteDatastore\")\n            .setDimensions([600, 250])\n            .open({\n               clusterRef: ManagedObject.contextObject,\n               datastore: this.selectedDatastore.shareableDatastore.datastore,\n            });\n      await this.handleTask(modalTask);\n      this.selectedDatastore = null;\n      this.fetchMountedDatastores();\n   }\n\n   async openMountWizard(): Promise<void> {\n      const modalTask: ManagedObject = await new ModalBuilder(\"mountRemoteDatastore\")\n            .setDimensions([1200, 605])\n            .open({\n               clusterRef: ManagedObject.contextObject,\n            });\n      await this.handleTask(modalTask);\n      this.fetchMountedDatastores();\n   }\n\n   private async handleTask(task: ManagedObject): Promise<any> {\n      try {\n         return await this.taskMonitorService.getAwaitResult(task);\n      } catch (err) {\n         Logger.error(err);\n         this.errorMessage = err;\n      }\n   }\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component} from \"@angular/core\";\nimport {CsdService} from \"@generated/csd-service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {UnmountRemoteDatastoreContext} from \"@navigation/context/unmount-remote-datastore-context\";\nimport {ManagedObject} from \"@service/managed-object\";\n\n@Component({\n   selector: \"vsan-mount-remote-datastore-wizard\",\n   template: `\n      <vsan-delete-prompt [title]=\"'vsan.csd.unmountDialog.title' | localized\"\n                          [subtitle]=\"context.datastore.name\"\n                          [confirmText]=\"'vsan.csd.unmountDialog.confirmButton' | localized\"\n                          (onConfirm)=\"unmount()\"\n                          [(alertMessages)]=\"errors\"\n                          [allowAlertClose]=\"false\"\n                          [blockButton]=\"blockButton\"\n                          [blockContent]=\"blockButton\">\n         <p>{{\"vsan.csd.unmountDialog.confirmText\" | localized : context.datastore.name}}</p>\n      </vsan-delete-prompt>\n   `\n})\nexport class UnmountRemoteDatastoreModalComponent {\n   context: UnmountRemoteDatastoreContext = VsanUiUtils.getModalContext();\n\n   errors: string[] = [];\n   blockButton: boolean = false;\n\n   constructor(private csdService: CsdService) {\n   }\n\n   async unmount() {\n      try {\n         this.blockButton = true;\n         const unmountTask: ManagedObject = await this.csdService.unmountRemoteDatastore(\n               this.context.clusterRef, this.context.datastore.moRef);\n         VsanUiUtils.closeModalDialog(unmountTask);\n      } catch (err) {\n         this.errors.push(err);\n      }\n   }\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {ActionButtonModule} from \"@component/action-button/action-button.module\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {CommonCellsModule} from \"@component/cell/common-cells.module\";\nimport {InventoryBrowserModule} from \"@component/inventory/inventory-browser.module\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {TreeDatagridModule} from \"@component/datagrid/tree-datagrid.module\";\nimport {DatetimePickerModule} from \"@component/datetime-picker/datetime-picker.module\";\nimport {PopupListModule} from \"@component/popup-list/popup-list.module\";\nimport {VsanBreadcrumbModule} from \"@component/navigation/vsan-breadcrumb.module\";\n\n@NgModule({\n   imports: [\n         CommonDirectiveModule,\n         CommonPipeModule,\n         ValidationModule,\n         ActionButtonModule,\n         PromptModule,\n         CommonCellsModule,\n         InventoryBrowserModule,\n         SearchModule,\n         TreeDatagridModule,\n         DatetimePickerModule,\n         PopupListModule,\n         VsanBreadcrumbModule,\n   ],\n   exports: [\n      CommonDirectiveModule,\n      CommonPipeModule,\n      ValidationModule,\n      ActionButtonModule,\n      PromptModule,\n      CommonCellsModule,\n      InventoryBrowserModule,\n      SearchModule,\n      TreeDatagridModule,\n      DatetimePickerModule,\n      PopupListModule,\n      VsanBreadcrumbModule,\n   ],\n})\nexport class VsanCommonModule { }","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ActionButtonSeparatorComponent} from \"@component/action-button/action-button-separator.component\";\nimport {ButtonTitleDirective} from \"@component/action-button/button-title.directive\";\nimport {ButtonGroupDirective} from \"@component/action-button/button-group.directive\";\nimport {ButtonGroupWrapDirective} from \"@component/action-button/button-group-wrap.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n   ],\n   declarations: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ],\n   exports: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ]\n})\nexport class ActionButtonModule {\n}\n","\n      <vsan-delete-prompt [title]=\"'vsan.csd.unmountDialog.title' | localized\"\n                          [subtitle]=\"context.datastore.name\"\n                          [confirmText]=\"'vsan.csd.unmountDialog.confirmButton' | localized\"\n                          (onConfirm)=\"unmount()\"\n                          [(alertMessages)]=\"errors\"\n                          [allowAlertClose]=\"false\"\n                          [blockButton]=\"blockButton\"\n                          [blockContent]=\"blockButton\">\n         <p>{{\"vsan.csd.unmountDialog.confirmText\" | localized : context.datastore.name}}</p>\n      </vsan-delete-prompt>\n   "]}