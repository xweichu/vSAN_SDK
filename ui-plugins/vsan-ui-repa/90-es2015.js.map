{"version":3,"sources":["./src/app/vsan/common/component/capacity/capacity-common.module.ts","./src/app/vsan/common/component/capacity/capacity-overview-chart.component.ts","./src/app/vsan/common/component/capacity/capacity-overview-chart.html"],"names":[],"mappings":"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","file":"90-es2015.js","sourcesContent":["/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {VsanCommonModule} from \"app/vsan/common/vsan-common.module\";\nimport {VsanCapacityService} from \"./capacity.service\";\nimport {CapacitySummaryComponent} from \"@component/capacity/capacity-summary.component\";\nimport {SystemCapacityBreakdownComponent} from \"@component/capacity/system-capacity-breakdown.component\";\nimport {UserCapacityBreakdownComponent} from \"@component/capacity/user-capacity-breakdown.component\";\nimport {VmCapacityBreakdownComponent} from \"@component/capacity/vm-capacity-breakdown.component\";\nimport {VsanChartModule} from \"@component/chart/chart.module\";\nimport {SpaceEfficiencyService} from \"@service/space-efficiency-service\";\nimport {CapacityUsageOverviewComponent} from \"@component/capacity/capacity-usage-overview.component\";\nimport {CapacityOverviewChartComponent} from \"@component/capacity/capacity-overview-chart.component\";\nimport {SnapshotCapacityBreakdownComponent} from \"@component/capacity/snapshot-capacity-breakdown.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      VsanCommonModule,\n      VsanChartModule,\n   ],\n   declarations: [\n      CapacitySummaryComponent,\n      CapacityUsageOverviewComponent,\n      SystemCapacityBreakdownComponent,\n      UserCapacityBreakdownComponent,\n      VmCapacityBreakdownComponent,\n      CapacityOverviewChartComponent,\n      SnapshotCapacityBreakdownComponent,\n   ],\n   exports: [\n      CapacitySummaryComponent,\n      SystemCapacityBreakdownComponent,\n      UserCapacityBreakdownComponent,\n      VmCapacityBreakdownComponent,\n      CapacityOverviewChartComponent,\n      SnapshotCapacityBreakdownComponent,\n   ],\n   providers: [\n      VsanCapacityService,\n      SpaceEfficiencyService,\n   ],\n})\nexport class CapacityCommonModule {\n}\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {Component, EventEmitter, Input, OnChanges, OnDestroy, Output, SimpleChange} from \"@angular/core\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {SpaceEfficiencyService} from \"@service/space-efficiency-service\";\nimport {HighchartsThemeService} from \"@component/chart/highcharts-theme.service\";\nimport {Subscription} from \"rxjs\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ChartSectionData, ChartSectionPlotLine} from \"@component/chart/model/chart-section.data\";\nimport {SpaceEfficiencyCapacityData} from \"@generated/space-efficiency-capacity-data\";\nimport {Icon} from \"@util/icon\";\n\n@Component({\n   templateUrl: \"capacity-overview-chart.html\",\n   styleUrls: [\"capacity-overview-chart.scss\"],\n   selector: \"vsan-capacity-overview-chart\",\n})\nexport class CapacityOverviewChartComponent implements OnChanges, OnDestroy {\n\n   @Input()\n   capacityData: CapacityData;\n\n   capacityOverviewData: ChartSectionData[] = [];\n   /*\n      We need separate entries for the legend as not all items are displayed in it,\n      e.g. the capacity reservations have their own legend.\n    */\n   capacityLegendData: ChartSectionData[] = [];\n\n   /*\n     We need to keep the capacity reservation chart data separately as it has its own legend.\n    */\n   reservationChartData: ChartSectionData[] = [];\n\n   capacityOverviewUsed: number = 0;\n   capacityOverviewTotal: number = 0;\n   capacityOverviewFree: number = 0;\n   spaceEfficiencyCapacity: SpaceEfficiencyCapacityData;\n   plotLines: ChartSectionPlotLine[] = [];\n   warningThreshold: number;\n   errorThreshold: number;\n\n   @Input()\n   showFreeSpaceOnDisk: boolean = true;\n\n   @Input()\n   isVsanMaxEnabled: boolean = false;\n\n   @Input()\n   hoveredSeries: any;\n\n   @Output()\n   hoveredSeriesChange: EventEmitter<any> = new EventEmitter<any>();\n\n   private readonly CAPACITY_DATA_PROPERTY: string = \"capacityData\";\n\n   private themeChangedSubscribtion: Subscription;\n\n   constructor(private capacityService: VsanCapacityService,\n         private spaceEfficiencyService: SpaceEfficiencyService,\n         private highchartsThemeService: HighchartsThemeService) {\n      this.themeChangedSubscribtion = this.highchartsThemeService.whenThemeChanged.subscribe(\n            theme => this.updateCapacityData());\n   }\n\n   ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n      if (changes[this.CAPACITY_DATA_PROPERTY]) {\n         this.updateCapacityData();\n      }\n   }\n\n   ngOnDestroy() {\n      this.themeChangedSubscribtion.unsubscribe();\n   }\n\n   private updateCapacityData() {\n      this.resetCapacityData();\n\n      this.capacityOverviewTotal = this.capacityData.totalSpace;\n      this.capacityOverviewUsed = this.capacityData.usedSpace;\n      this.capacityOverviewFree = this.capacityData.freeSpace;\n      this.spaceEfficiencyCapacity = this.capacityData.spaceEfficiencyCapacity;\n      this.capacityOverviewData = this.capacityService.parseCapacityOverviewDataSections(this.capacityData);\n      this.capacityLegendData.push(...this.capacityOverviewData);\n      if (this.capacityData.thresholds) {\n         this.warningThreshold = this.capacityData.thresholds.warningThreshold;\n         this.errorThreshold = this.capacityData.thresholds.errorThreshold;\n      }\n      this.parseSlackSpaceCapacity();\n   }\n\n   private resetCapacityData() {\n      this.capacityOverviewData = [];\n      this.capacityLegendData = [];\n      this.reservationChartData = [];\n      this.plotLines = [];\n   }\n\n   private parseSlackSpaceCapacity() {\n      this.reservationChartData = this.capacityService.parseCapacityReservationDataSections(this.capacityData);\n      if (!VsanUiUtils.isEmpty(this.reservationChartData)) {\n         this.capacityOverviewData.push(...this.reservationChartData);\n      }\n\n      // Add transientCapacity last to make sure it appears at the end of the bar chart\n      const transientCapacity: ChartSectionData = this.capacityService.parseTransientOverviewDataSections(\n            this.capacityData);\n      if (transientCapacity) {\n         this.capacityLegendData.push(transientCapacity);\n         this.capacityOverviewData.push(transientCapacity);\n      }\n\n      this.addPlotLines();\n   }\n\n   get usedOverallCapacityLabel(): string {\n      const capacityPercentage: number = VsanUiUtils.asPercentage(\n            this.capacityOverviewUsed, this.capacityOverviewTotal);\n      return VsanUiUtils.getString(\"vsan.monitor.capacity.overview.used.label\",\n            VsanUiUtils.formatFileSize(this.capacityOverviewUsed),\n            VsanUiUtils.formatFileSize(this.capacityOverviewTotal),\n            VsanUiUtils.localizeNumber(capacityPercentage));\n   }\n\n   get usedOverallCapacityIconShape(): string {\n      if (this.capacityService.isUsedCapacityExceedingThreshold(this.capacityData, this.errorThreshold)) {\n         return Icon.CLR_ERROR_STANDARD_ICON_SHAPE;\n      } else if (this.capacityService.isUsedCapacityExceedingThreshold(this.capacityData, this.warningThreshold)) {\n         return Icon.CLR_WARN_STANDARD_ICON_SHAPE;\n      } else {\n         return Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE;\n      }\n   }\n\n   get usedOverallCapacityIconClass(): string {\n      const capacityIconShape: string = this.usedOverallCapacityIconShape;\n      return Icon.clrIconShapeClassMap[capacityIconShape];\n   }\n\n   get capacityOverviewFreeLabel(): string {\n      return VsanUiUtils.getString(\"vsan.monitor.capacity.overview.free.label\",\n            VsanUiUtils.formatFileSize(this.capacityOverviewFree));\n   }\n\n   get spaceEfficiencyCapacityLabel(): string {\n      if (!this.spaceEfficiencyCapacity) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n\n      const spaceEfficiencyRatio: string = VsanUiUtils.localizeNumber((this.spaceEfficiencyCapacity.ratio).toFixed(2));\n      const spaceEfficiencySavings: string = VsanUiUtils.formatFileSize(this.spaceEfficiencyCapacity.savings);\n\n      return this.spaceEfficiencyService.capacitySavingsLabel(\n            this.spaceEfficiencyCapacity.spaceEfficiencyConfig,\n            spaceEfficiencySavings,\n            spaceEfficiencyRatio,\n            this.isVsanMaxEnabled);\n   }\n\n   onBarChartHover = (event: any) => {\n      this.hoveredSeries = event;\n      this.hoveredSeriesChange.emit(event);\n   };\n\n   private addPlotLines = () => {\n      this.plotLines = this.capacityService.getPlotLines(this.capacityData, true);\n   };\n}\n","<!--Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"used-capacity-overview\">\n   <div class=\"used-label\">\n      <clr-icon [attr.shape]=\"usedOverallCapacityIconShape\"\n                class=\"is-solid\"\n                size=\"18\"\n                [ngClass]=\"usedOverallCapacityIconClass\">\n      </clr-icon>\n      <span class=\"used-overall-label\">{{usedOverallCapacityLabel}}</span>\n   </div>\n   <div *ngIf=\"showFreeSpaceOnDisk\" class=\"free-label\">\n      <span>{{capacityOverviewFreeLabel}}</span>\n      <clr-signpost [vsan-signpost-title]=\"'vsan.monitor.capacity.overview.signpost.label' | localized\">\n         <clr-signpost-content *clrIfOpen clrPosition=\"bottom-left\">\n            {{'vsan.monitor.capacity.overview.tooltip' | localized}}\n         </clr-signpost-content>\n      </clr-signpost>\n   </div>\n</div>\n<vsan-capacity-bar-chart class=\"capacity-overview-bar-chart\"\n                         [sections]=\"capacityOverviewData\"\n                         [total]=\"capacityOverviewTotal\"\n                         [plotLines]=\"plotLines\"\n                         (hoverBarChart)=\"onBarChartHover($event)\"\n                         [warningThreshold]=\"warningThreshold\"\n                         [errorThreshold]=\"errorThreshold\">\n</vsan-capacity-bar-chart>\n<vsan-capacity-legend class=\"capacity-legend\"\n                      [chartSectionData]=\"capacityLegendData\"\n                      [used]=\"capacityOverviewUsed\"\n                      [total]=\"capacityOverviewTotal\"\n                      [warningThreshold]=\"warningThreshold\"\n                      [errorThreshold]=\"errorThreshold\"\n                      [hoveredSeries]=\"hoveredSeries\">\n</vsan-capacity-legend>\n<span *ngIf=\"spaceEfficiencyCapacity\"\n      class=\"space-efficiency-capacity-label\">\n      {{spaceEfficiencyCapacityLabel}}\n</span>\n<!-- TODO (tnojarova): clarify with UX if signpost is needed to explain vSAN Max space efficiency -->"],"sourceRoot":"webpack:///"}