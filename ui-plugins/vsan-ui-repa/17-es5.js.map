{"version":3,"sources":["webpack:///src/app/vsan/common/component/wizard/flow-wizard-footer.html","webpack:///src/app/vsan/common/component/wizard/page-item.ts","webpack:///src/app/vsan/common/component/wizard/flow-wizard-body.component.ts","webpack:///src/app/vsan/common/component/wizard/flow-wizard-footer.component.ts","webpack:///src/app/vsan/common/component/wizard/flow-wizard-nav.component.ts","webpack:///src/app/vsan/common/component/wizard/flow-wizard.html","webpack:///src/app/vsan/common/component/wizard/page-host.directive.ts","webpack:///src/app/vsan/common/component/wizard/flow-wizard.component.ts","webpack:///src/app/vsan/common/component/wizard/flow-metadata.ts","webpack:///src/app/vsan/common/component/wizard/page-container.component.ts","webpack:///src/app/vsan/common/component/wizard/flow-wizard-nav.html","webpack:///src/app/vsan/common/component/wizard/flow-wizard-body.html","webpack:///src/app/vsan/common/component/wizard/flow-wizard.module.ts","webpack:///src/app/vsan/common/component/wizard/page-container.html"],"names":["PageItem","index","pageComponent","onWire","errors","busyMessages","view","pageInput","setBusyState","message","getString","push","clearBusyState","pop","addValidationErrors","messages","setValidationErrors","clearValidationErrors","metadata","get","name","value","input","forEach","i","hasOwnProperty","viewInstance","selector","fetch","pageControls","isRequired","error","pageTypeName","emit","length","component","FlowWizardBodyComponent","FlowWizardNavComponent","FlowWizardFooterComponent","onCancel","onBack","onNext","onFinish","onCancelClick","onBackClick","onNextClick","onFinishClick","visiblePage","pages","busyMessage","nextButtonIsDisabled","onPage","pageIndex","activePage","buttonId","NAV_BUTTON_ID_SUFFIX","document","getElementById","focus","item","stepNumber","state","title","PageHostDirective","viewContainerRef","FlowWizardComponent","injector","el","focusTrap","startingTaskProperty","DEFAULT_STARTING_TASK_PROPERTY","finishButtonText","finishButtonStyle","services","placeholderPage","isOpen","pageSnapshot","output","preparePlaceholderPage","propertiesToCollect","map","servicesToLookup","concat","collect","then","pInput","wire","prepareToLeavePage","e","page","doLocalValidate","proceed","startFinishTask","proceedToNextPage","validate","errorMessages","doRemoteValidate","remoteSucceeded","exceptionMessage","currentPage","nextPage","lastPage","resultMap","startedTask","observers","closeModalDialog","rebuildToc","fromPageIndex","propertyMap","pageSets","set","getParamNames","condition","param","Object","keys","propValues","result","invokeCondition","pageComponents","setSliceIndex","slice","splice","pageComp","pageItem","collectCallback","collectLocal","props","startPage","prop","potentialOutputMatch","outputByName","contextProperties","Error","Promise","accept","reject","resolve","svc","data","getSelector","proxy","invoker","argNames","getArgNames","apply","filter","key","isPromise","pending","promise","create","nativeElement","focusInitialElement","context","sets","setAccessibilityTitle","listenOnPageOutput","close","call","o","validator","inlineValidate","validators","out","remoteValidatorProperty","accepted","ERROR_COLLECTING_PROPERTY","property","iterateServices","reason","setTimeout","is","debug","PAGE_OUTPUT_SCAN_DELAY","params","paramNames","warn","PageSet","InputProperty","InputPropertyData","decorators","d","named","target","className","constructor","PageData","builder","required","OutputProperty","OutputPropertyData","validatorProperty","validateRemote","ifNull","nullMessage","validateNotNull","ifEmpty","emptyMessage","validateNotEmpty","WizardPage","description","pageClass","anyVal","propertyName","findIndex","content","PageContainer","factoryResolver","detector","log","componentFactory","resolveComponentFactory","pageContentHost","remove","pageRef","createComponent","instance","func","collectParams","subscribe","detectChanges","names","FlowWizardModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uEAOG;AAAA;AAAA,sBAGgC,UAHhC;;AAGQ;;;;;AAHR;AAAA,sB,IAGgC,0F,GAAA,wD,GAAA,I,EAAA;AAAA;;AAAA;AAEhC,S;AAAA;;;uEACA;AAAA;AAAA,sBAIkC,UAJlC;;AAGQ;;;;;AAHR;AAAA,sB,IAIkC,0F,GAAA,wD,GAElC,I,EAAA;AAAA;AAFQ,6BAAyB,aAAzB;;AAJR,wBAIQ,SAJR;;AAIkC;;AAAA;AAElC,S;AAAA;;;uEACA;AAAA;AAAA,sBAKkC,UALlC;;AAIQ;;;;;AAJR;AAAA,sB,GAAA;AAAA;AAAA;AAAA,gB,GAKkC,0F,IAElC;AAAA;AANQ;AACA,6BAA6B,kBAA7B;;AAFR,wBACQ,SADR,EAEQ,SAFR;AAEqC,S,EAAA;AAAA;AAG7B,6BAAyB,aAAzB;;AALR,wBAKQ,SALR;;AAKkC;;AAAA;AAElC,S;AAAA;;;2MA3B0E,4E,IAC7E,gK,IAAwC,+E,IACrC;AAAA;AAAA,sBAEkC,UAFlC;;AAEQ;;;;;AAFR;AAAA,sB,IAEkC,0F,GAAA,wD,GAEzB,+E,IACT,2H,GAAA;AAAA;AAAA,gB,GAKS,+E,IACT,2H,GAAA;AAAA;AAAA,gB,GAMS,+E,IACT,2H,GAAA;AAAA;AAAA,gB,GAOS,4E,IACZ;AAAA;AAnBW,6BAAgB,SAAhB;;AAFR,wBAEQ,SAFR;;AAQQ,6BAAgB,SAAhB;;AAFR,yBAEQ,SAFR;;AAUQ,6BAAkB,WAAlB;;AAHR,yBAGQ,SAHR;AAG0B,S,EAAA;AAnBQ;;AAAA;AAElC,S;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAOA;;;;;;;;UAMaA,Q;AA4BV;;;;AAIA,0BAAYC,KAAZ,EAA2BC,aAA3B,EAA+C;AAAA;;AAAA;;AAxB/C,eAAAC,MAAA,GAA4B,IAAI,0DAAJ,EAA5B,CAwB+C,CAtB/C;;AACA,eAAAC,MAAA,GAAmB,EAAnB,CAqB+C,CAnB/C;;AACA,eAAAC,YAAA,GAAyB,EAAzB;AAIA;;;;AAGQ,eAAAC,IAAA,GAAY,EAAZ;AAER;;;;AAGA,eAAAC,SAAA,GAAiB,EAAjB;;AA0DA,eAAAC,YAAA,GAAe;AAAA,gBAACC,OAAD,uEAAmB,4DAAYC,SAAZ,CAAsB,cAAtB,CAAnB;AAAA,mBAA6D,KAAI,CAACL,YAAL,CAAkBM,IAAlB,CAAuBF,OAAvB,CAA7D;AAAA,WAAf;;AACA,eAAAG,cAAA,GAAiB;AAAA,mBAAM,KAAI,CAACP,YAAL,CAAkBQ,GAAlB,EAAN;AAAA,WAAjB;;AACA,eAAAC,mBAAA,GAAsB,UAACC,QAAD;AAAA;;AAAA,mBAAwB,qBAAI,CAACX,MAAL,EAAYO,IAAZ,wCAAoBI,QAApB,EAAxB;AAAA,WAAtB;;AACA,eAAAC,mBAAA,GAAsB,UAACD,QAAD;AAAA,mBAAwB,KAAI,CAACX,MAAL,GAAcW,QAAtC;AAAA,WAAtB;;AACA,eAAAE,qBAAA,GAAwB;AAAA,mBAAM,KAAI,CAACb,MAAL,GAAc,EAApB;AAAA,WAAxB;;AAvDG,eAAKH,KAAL,GAAaA,KAAb;;AACA,cAAIC,aAAJ,EAAmB;AAChB,iBAAKA,aAAL,GAAqBA,aAArB;AACA,iBAAKgB,QAAL,GAAgB,wDAASC,GAAT,CAAajB,aAAa,CAACkB,IAA3B,CAAhB;AACF,WAHD,MAGO;AACJ,iBAAKF,QAAL,GAAgB,IAAI,uDAAJ,EAAhB;AACF;AACH;;;;eAiBD,eAAgB;AACb,mBAAO,KAAKZ,IAAZ;AACF;AAED;;;;;eAnBA,aAAiBe,KAAjB,EAA6B;AAAA;;AAC1B,iBAAKf,IAAL,GAAYe,KAAZ,CAD0B,CAG1B;;AACA,iBAAKH,QAAL,CAAcI,KAAd,CAAoBC,OAApB,CAA4B,UAACC,CAAD,EAAO;AAChC,kBAAI,MAAI,CAACjB,SAAL,CAAekB,cAAf,CAA8BD,CAAC,CAACJ,IAAhC,CAAJ,EAA2C;AACxC,sBAAI,CAACM,YAAL,CAAkBF,CAAC,CAACG,QAApB,IAAgC,MAAI,CAACpB,SAAL,CAAeiB,CAAC,CAACJ,IAAjB,CAAhC;AACF;AACH,aAJD;;AAMA,gBAAI,KAAKd,IAAL,CAAUsB,KAAd,EAAqB;AAClB,mBAAKtB,IAAL,CAAUsB,KAAV;AACF;AACH;;;iBAUD,cAAKN,KAAL,EAAe;AAAA;;AACZ;AACAA,iBAAK,CAACO,YAAN,GAAqB,IAArB;AACA,iBAAKX,QAAL,CAAcI,KAAd,CAAoBC,OAApB,CAA4B,UAACC,CAAD,EAAO;AAChC,kBAAIA,CAAC,CAACM,UAAF,IAAgB,OAAOR,KAAK,CAACE,CAAC,CAACJ,IAAH,CAAZ,KAAyB,WAA7C,EAA0D;AACvD,oEAAOW,KAAP,CAAa,uBAAuBP,CAAC,CAACJ,IAAzB,GAAgC,OAAhC,GAA0C,MAAI,CAACF,QAAL,CAAcc,YAArE;;AACA,uBAAO,4DAAYtB,SAAZ,CAAsB,oCAAtB,CAAP;AACF;AACH,aALD;AAOA,iBAAKH,SAAL,GAAiBe,KAAjB;AACA,iBAAKnB,MAAL,CAAY8B,IAAZ,CAAiBX,KAAjB;AACA,mBAAO,IAAP;AACF;;;eAED,eAAe;AACZ,mBAAO,KAAKjB,YAAL,CAAkB6B,MAAlB,GAA2B,CAA3B,GAA+B,KAAK7B,YAAL,CAAkB,KAAKA,YAAL,CAAkB6B,MAAlB,GAA2B,CAA7C,CAA/B,GAAiF,IAAxF;AACF;;;iBAhFD,2BAAyBC,SAAzB,EAAuC;AACpC,mBAAO,IAAInC,QAAJ,CAAa,CAAC,CAAd,EAAiBmC,SAAjB,CAAP;AACF;;;;;;;;;;;;;;;;;;;;;ACdJ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,uB,6BALb;AAAA;;AAMG,aAAAC,sBAAA,GAAwD,kGAAxD;AAOF,O;;;;;;;;;;;;;;;;;AClBD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAIA;;;;;UAQaC,yB;AALb;AAAA;;AAAA;;AAWa,eAAAC,QAAA,GAA8B,IAAI,0DAAJ,EAA9B;AACA,eAAAC,MAAA,GAA4B,IAAI,0DAAJ,EAA5B;AACA,eAAAC,MAAA,GAA4B,IAAI,0DAAJ,EAA5B;AACA,eAAAC,QAAA,GAA8B,IAAI,0DAAJ,EAA9B;;AAkBV,eAAAC,aAAA,GAAgB;AAAA,mBAAM,MAAI,CAACJ,QAAL,CAAcN,IAAd,CAAmB,EAAnB,CAAN;AAAA,WAAhB;;AACA,eAAAW,WAAA,GAAc;AAAA,mBAAM,MAAI,CAACJ,MAAL,CAAYP,IAAZ,CAAiB,EAAjB,CAAN;AAAA,WAAd;;AACA,eAAAY,WAAA,GAAc;AAAA,mBAAM,MAAI,CAACJ,MAAL,CAAYR,IAAZ,CAAiB,EAAjB,CAAN;AAAA,WAAd;;AACA,eAAAa,aAAA,GAAgB;AAAA,mBAAM,MAAI,CAACJ,QAAL,CAAcT,IAAd,CAAmB,EAAnB,CAAN;AAAA,WAAhB;AACF;;;;eApBE,eAAY;AACT,mBAAO,KAAKc,WAAL,GAAmB,CAA1B;AACF;;;eACD,eAAY;AACT,mBAAO,KAAKA,WAAL,GAAmB,KAAKC,KAAL,CAAWd,MAAX,GAAoB,CAA9C;AACF;;;eAED,eAAc;AACX,mBAAO,KAAKa,WAAL,IAAoB,KAAKC,KAAL,CAAWd,MAAX,GAAoB,CAA/C;AACF;;;eAED,eAAgB;AACb,mBAAO,KAAKa,WAAL,IAAoB,CAAC,CAArB,IAA0B,KAAKC,KAAL,CAAW,KAAKD,WAAhB,EAA6BE,WAA7B,IAA4C,IAAtE,IACD,KAAKD,KAAL,CAAW,KAAKD,WAAhB,EAA6BG,oBADnC;AAEF;;;;;;;;;;;;;;;;;;;;;ACrCJ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAKA;;;;;AAQO;AAAA,YAAMb,sBAAN;AALP;AAAA;;AAMG,iBAAAA,sBAAA,GAAwDA,sBAAxD;AAQU,iBAAAc,MAAA,GAA+B,IAAI,0DAAJ,EAA/B;AAoDZ;;AA7DM;AAAA;AAAA,mBAWJ,qBAAYC,SAAZ,EAA6B;AAC1B,kBAAIA,SAAS,GAAG,KAAKC,UAArB,EAAiC;AAC9B;AACF;;AACD,mBAAKF,MAAL,CAAYlB,IAAZ,CAAiBmB,SAAjB;AACF;AAhBG;AAAA;AAAA,mBAkBJ,iBAAQA,SAAR,EAAyB;AACtB,kBAAIA,SAAS,GAAG,CAAhB,EAAmB;AAChB;AACAA,yBAAS,GAAG,KAAKC,UAAjB;AACF;;AACD,kBAAID,SAAS,GAAG,KAAKC,UAArB,EAAiC;AAC9B;AACAD,yBAAS,GAAG,CAAZ;AACF;;AACD,kBAAME,QAAQ,GAAW,KAAKN,KAAL,CAAWI,SAAX,EAAsBlD,aAAtB,CAAoCkB,IAApC,GAA2CiB,sBAAsB,CAACkB,oBAA3F;AACAC,sBAAQ,CAACC,cAAT,CAAwBH,QAAxB,EAAkCI,KAAlC;AACF;AA7BG;AAAA;AAAA,mBA+BJ,kBAASC,IAAT,EAAuB;AACpB,kBAAIA,IAAI,CAAC1D,KAAL,KAAe,KAAK8C,WAAxB,EAAqC;AAClC,oBAAI,KAAKA,WAAL,KAAqB,KAAKM,UAA9B,EAA0C;AACvC,yBAAO,YAAP;AACF,iBAFD,MAEO;AACJ,yBAAO,yBAAP;AACF;AACH;;AACD,kBAAIM,IAAI,CAAC1D,KAAL,GAAa,KAAKoD,UAAtB,EAAkC;AAC/B,uBAAO,cAAP;AACF;;AACD,qBAAO,EAAP;AACF;AA3CG;AAAA;AAAA,mBA6CJ,oBAAWM,IAAX,EAAyB;AACtB,qBAAOA,IAAI,CAAC1D,KAAL,GAAa,KAAKoD,UAAzB;AACF;AA/CG;AAAA;AAAA,mBAiDJ,8BAAqBO,UAArB,EAAyCD,IAAzC,EAAuD;AACpD,kBAAIE,KAAJ;;AACA,kBAAIF,IAAI,CAAC1D,KAAL,GAAa,KAAKoD,UAAtB,EAAkC;AAC/BQ,qBAAK,GAAG,4DAAYnD,SAAZ,CAAsB,qCAAtB,CAAR;AACF,eAFD,MAEO,IAAIiD,IAAI,CAAC1D,KAAL,KAAe,KAAKoD,UAAxB,EAAoC;AACxCQ,qBAAK,GAAG,4DAAYnD,SAAZ,CAAsB,sCAAtB,CAAR;AACF,eAFM,MAEA;AACJmD,qBAAK,GAAG,4DAAYnD,SAAZ,CAAsB,sCAAtB,CAAR;AACF;;AACD,qBAAO,4DAAYA,SAAZ,CAAsB,qCAAtB,EACDkD,UAAU,GAAG,CADZ,EACeD,IAAI,CAACzC,QAAL,CAAc4C,KAD7B,EACoCD,KADpC,CAAP;AAEF;AA5DG;;AAAA;AAAA;;AAEY,+BAAAN,oBAAA,GAA+B,MAA/B;;OAFZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uECbsE,4E,IAC7E;AAAA;AAAA,sBAK2C,UAL3C;;AAKiB;;;;;AALjB;AAAA,sN,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,U,GAK2C,4E,IACzB,4E,IAClB,gL,IAAmD,+E,IAChD,6V,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gB,GAIsD,+E,IACnC,+E,IACnB;AAAA;AAAA,sBAO0C,UAP1C;;AAIoB;;;;;AACA;;;;;AACA;;;;;AACA;;;;;AAPpB;AAAA,kO,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,U,GAO0C,+E,IACrB,4E,IACxB;AAAA;AArBiB,6BAAe,MAAf;AACA,6BAA2B,YAA3B;AACA,6BAAyB,WAAzB;AAHA,6BAAe,MAAf;;AADjB,wBAEiB,SAFjB,EAGiB,SAHjB,EAIiB,SAJjB,EACiB,SADjB;;AAWqB,6BAAe,MAAf;AAFA,6BAA2B,YAA3B;AACA,6BAAyB,WAAzB;AAEA,6BAAmC,gBAAnC;;AAJlB,wBAGkB,SAHlB,EACkB,SADlB,EAEkB,SAFlB,EAIkB,SAJlB;;AAMoB,6BAAe,MAAf;AACA,6BAA2B,YAA3B;AACA,8BAAqC,iBAArC;AACA,8BAAuC,kBAAvC;;AAHpB,yBAAoB,SAApB,EACoB,SADpB,EAEoB,UAFpB,EAGoB,UAHpB;AAG2D,S,EAAA,I;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ9D;AAAA;;;AAAA;AAAA;AAAA;;UAAaQ,iB,6BACV,2BAAmBC,gBAAnB,EAAuD;AAAA;;AAApC,aAAAA,gBAAA,GAAAA,gBAAA;AAAuC,O;;;;;;;;;;;;;;;;;ACL7D;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;AAaO;AAAA,YAAMC,mBAAN;AAuHJ,uCAAoBC,QAApB,EAAgDC,EAAhD,EAAwEC,SAAxE,EAAqG;AAAA;;AAAA;;AAAjF,iBAAAF,QAAA,GAAAA,QAAA;AAA4B,iBAAAC,EAAA,GAAAA,EAAA;AAAwB,iBAAAC,SAAA,GAAAA,SAAA;AAnGxE;;;;;;;AAOA,iBAAAC,oBAAA,GAA+BJ,mBAAmB,CAACK,8BAAnD;AAGA,iBAAAR,KAAA,GAAgB,EAAhB;AAGA,iBAAAS,gBAAA,GAA2B,4DAAY7D,SAAZ,CAAsB,oBAAtB,CAA3B;AAGA,iBAAA8D,iBAAA,GAA4B,aAA5B;AAkCA;;;;;;AAMA,iBAAAC,QAAA,GAAkB,EAAlB;AAEA;;;;;;AAMA,iBAAAC,eAAA,GAA4B,IAAI,mDAAJ,CAAa,CAAC,CAAd,EAAiB,IAAjB,CAA5B;AAEA;;;;;;;;AAQA,iBAAAhC,QAAA,GAA8B,IAAI,0DAAJ,EAA9B;AAEA;;;;AAGA,iBAAAM,KAAA,GAAoB,EAApB;AAEA;;;;AAGA,iBAAAD,WAAA,GAAsB,CAAC,CAAvB;AAEA;;;;AAGA,iBAAAM,UAAA,GAAqB,CAAC,CAAtB;AAIQ,iBAAAsB,MAAA,GAAkB,KAAlB;AACA,iBAAAC,YAAA,GAAoB;AACzB3E,mBAAK,EAAE,CAAC,CADiB;AAEzB4E,oBAAM,EAAE;AAFiB,aAApB;;AAgDA,iBAAAC,sBAAA,GAAyB,YAAM;AAAA;;AACpC,kBAAMC,mBAAmB,GAAU,MAAI,CAACL,eAAL,CAAqBxD,QAArB,CAA8BI,KAA9B,CAAoC0D,GAApC,CAAwC,UAAAxD,CAAC;AAAA,uBAAIA,CAAC,CAACJ,IAAN;AAAA,eAAzC,CAAnC;;AACA,kBAAM6D,gBAAgB,GAAU,+BAAI,CAACP,eAAL,CAAqBxD,QAArB,CAA8BuD,QAA9B,EAAuCS,MAAvC,iDAAiD,MAAI,CAACT,QAAtD,EAAhC;;AAEA,oBAAI,CAACC,eAAL,CAAqBlE,YAArB,GAJoC,CAMpC;AACA;AACA;AACA;;;AACA,oBAAI,CAAC2E,OAAL,CAAaJ,mBAAb,EAAkC,CAAC,CAAnC,EAAsCE,gBAAtC,EAAwDG,IAAxD,CAA6D,UAAAC,MAAM,EAAI;AACpE,sBAAI,CAACX,eAAL,CAAqB9D,cAArB;;AAEA,oBAAMmB,KAAK,GAAW,MAAI,CAAC2C,eAAL,CAAqBY,IAArB,CAA0BD,MAA1B,CAAtB,CAHoE,CAIpE;;;AACA,sBAAI,CAACX,eAAL,CAAqBhD,YAArB,GAAoC,MAAI,CAACgD,eAAL,CAAqBhD,YAAzD;;AAEA,oBAAIK,KAAJ,EAAW;AACR,wBAAI,CAAC2C,eAAL,CAAqBtE,MAArB,CAA4BO,IAA5B,CAAiCoB,KAAjC;AACF,iBAFD,MAEO;AACJ,wBAAI,CAACwD,kBAAL,CAAwB,MAAI,CAACb,eAA7B;AACF;AACH,eAZD,WAYS,UAAAc,CAAC,EAAI;AACX,oEAAOzD,KAAP,CAAa,iCAAb,EAAgDyD,CAAhD;;AACA,sBAAI,CAACd,eAAL,CAAqB1D,mBAArB,CAAyC,CAACwE,CAAD,CAAzC;AACF,eAfD;AAgBF,aA1BO;;AA4BA,iBAAAD,kBAAA,GAAqB,UAACE,IAAD,EAAoB;AAC9C;AACA,kBAAIA,IAAI,CAACpF,YAAL,CAAkB6B,MAAlB,GAA2B,CAA/B,EAAkC;AAC/B;AACA;AACF;;AAEDuD,kBAAI,CAACrF,MAAL,GAAc,EAAd;;AACA,kBAAI,CAAC,MAAI,CAACsF,eAAL,EAAL,EAA6B;AAC1B;AACF,eAV6C,CAY9C;;;AACA,kBAAMC,OAAO,GAAS,MAAI,CAACtC,UAAL,KAAoB,MAAI,CAACL,KAAL,CAAWd,MAAX,GAAoB,CAAzC,GAA8C,MAAI,CAAC0D,eAAnD,GAAqE,MAAI,CAACC,iBAA/F;;AAEA,oBAAI,CAACC,QAAL,CAAcL,IAAd,EAAoBL,IAApB,CAAyB,UAAAW,aAAa,EAAI;AACvC,oBAAI,CAAC,CAACA,aAAN,EAAqB;AAClBN,sBAAI,CAAC3E,mBAAL,CAAyBiF,aAAzB;AACF,iBAFD,MAEO;AACJN,sBAAI,CAACjF,YAAL,CAAkB,4DAAYE,SAAZ,CAAsB,wBAAtB,CAAlB;;AACA,wBAAI,CAACsF,gBAAL,CAAsBP,IAAtB,EAA4BL,IAA5B,CAAiC,UAAAa,eAAe,EAAI;AACjDR,wBAAI,CAAC7E,cAAL;;AACA,wBAAIqF,eAAJ,EAAqB;AAClBN,6BAAO,CAACF,IAAD,CAAP;AACF;AACH,mBALD,WAKS,UAAAD,CAAC,EAAI;AACXC,wBAAI,CAAC7E,cAAL;AACF,mBAPD;AAQF;AACH,eAdD,WAcS,UAAAsF,gBAAgB,EAAI;AAC1BT,oBAAI,CAAC7E,cAAL;;AAEA,oBAAIsF,gBAAJ,EAAsB;AACnBT,sBAAI,CAAC3E,mBAAL,CAAyBoF,gBAAzB;AACF;AACH,eApBD;AAqBF,aApCO;;AAsIE,iBAAAL,iBAAA,GAAoB,UAACM,WAAD,EAA2B;AAAA;;AACtD;AACA,kBAAMC,QAAQ,GAAa,MAAI,CAACpD,KAAL,CAAWmD,WAAW,CAAClG,KAAZ,GAAoB,CAA/B,CAA3B;AACA,kBAAM8E,mBAAmB,GAAUqB,QAAQ,CAAClF,QAAT,CAAkBI,KAAlB,CAAwB0D,GAAxB,CAA4B,UAAAxD,CAAC;AAAA,uBAAIA,CAAC,CAACJ,IAAN;AAAA,eAA7B,CAAnC;;AACA,kBAAM6D,gBAAgB,GAAU,yBAAAmB,QAAQ,CAAClF,QAAT,CAAkBuD,QAAlB,EAA2BS,MAA3B,iDAAqC,MAAI,CAACT,QAA1C,EAAhC;;AAEA0B,yBAAW,CAAC3F,YAAZ,GANsD,CAQtD;AACA;AACA;AACA;;AACA,oBAAI,CAAC2E,OAAL,CAAaJ,mBAAb,EAAkCoB,WAAW,CAAClG,KAA9C,EAAqDgF,gBAArD,EAAuEG,IAAvE,CAA4E,UAAAC,MAAM,EAAI;AACnFc,2BAAW,CAACvF,cAAZ;AAEA,oBAAMmB,KAAK,GAAWqE,QAAQ,CAACd,IAAT,CAAcD,MAAd,CAAtB;;AACA,oBAAI,CAACtD,KAAL,EAAY;AACT,wBAAI,CAACsB,UAAL,GAAkB+C,QAAQ,CAACnG,KAA3B;;AAEA,sBAAI,MAAI,CAAC8C,WAAL,KAAqBoD,WAAW,CAAClG,KAArC,EAA4C;AACzC;AACA;AACA,0BAAI,CAAC8C,WAAL;AACF;;AACD,wBAAI,CAACM,UAAL,GAAkB+C,QAAQ,CAACnG,KAA3B;AACF,iBATD,MASO;AACJ;AACAkG,6BAAW,CAAC/F,MAAZ,CAAmBO,IAAnB,CAAwBoB,KAAxB;AACF;AACH,eAjBD,WAiBS,UAAAyD,CAAC,EAAI;AACX,oEAAOzD,KAAP,CAAa,iCAAb,EAAgDyD,CAAhD;;AACAW,2BAAW,CAACvF,cAAZ;AACAuF,2BAAW,CAAC/F,MAAZ,CAAmBO,IAAnB,CAAwB6E,CAAxB;AACF,eArBD;AAsBF,aAlCS;;AAoCA,iBAAAI,eAAA,GAAkB,UAACS,QAAD,EAAwB;AACjD,kBAAM5B,QAAQ,GAAU4B,QAAQ,CAACnF,QAAT,CAAkBuD,QAAlB,CAA2BS,MAA3B,CAAkC,MAAI,CAACT,QAAvC,CAAxB;AAEA4B,sBAAQ,CAAC7F,YAAT,CAAsB,4DAAYE,SAAZ,CAAsB,wBAAtB,CAAtB;;AACA,oBAAI,CAACyE,OAAL,CAAa,CAAC,MAAI,CAACd,oBAAN,CAAb,EAA0CgC,QAAQ,CAACpG,KAAnD,EAA0DwE,QAA1D,EACOW,IADP,CACY,UAAAkB,SAAS,EAAI;AAChB,sBAAI,CAAC3B,MAAL,GAAc,KAAd;AACA,oBAAM4B,WAAW,GAAQD,SAAS,CAAC,MAAI,CAACjC,oBAAN,CAAlC;;AACA,oBAAI,MAAI,CAAC3B,QAAL,CAAc8D,SAAd,CAAwBtE,MAA5B,EAAoC;AACjC,wBAAI,CAACQ,QAAL,CAAcT,IAAd,CAAmBsE,WAAnB;AACF,iBAFD,MAEO;AACJ,8EAAYE,gBAAZ,CAA6BF,WAA7B;AACF;AACH,eATP,WASe,UAAAf,CAAC,EAAI;AACjBa,wBAAQ,CAACpF,qBAAT;AACAoF,wBAAQ,CAACzF,cAAT;AAEAyF,wBAAQ,CAACvF,mBAAT,CAA6B,CAAC0E,CAAD,CAA7B;;AACA,oEAAOzD,KAAP,CAAa,8BAAb,EAA6C,MAAI,CAACsC,oBAAlD,EAAwE,QAAxE,EAAkFmB,CAAlF;AACF,eAfD;AAgBF,aApBS;;AAiCA,iBAAAkB,UAAA,GAAa,YAAkD;AAAA,kBAAjDC,aAAiD,uEAAzB,MAAI,CAAC5D,WAAL,GAAmB,CAAM;AAEtE,oBAAI,CAACM,UAAL,GAAkBsD,aAAa,GAAG,CAAlC,CAFsE,CAItE;;AACA,kBAAMC,WAAW,GAAQ,EAAzB;;AACA,oBAAI,CAACC,QAAL,CAActF,OAAd,CAAsB,UAACuF,GAAD,EAAS;AAC5B,4EAAYC,aAAZ,CAA0BD,GAAG,CAACE,SAA9B,EAAyCzF,OAAzC,CAAiD,UAAC0F,KAAD;AAAA,yBAAWL,WAAW,CAACK,KAAD,CAAX,GAAqB,EAAhC;AAAA,iBAAjD;AACF,eAFD,EANsE,CAUtE;;;AACA,oBAAI,CAAC9B,OAAL,CAAa+B,MAAM,CAACC,IAAP,CAAYP,WAAZ,CAAb,EAAuCD,aAAa,GAAG,CAAvD,EAA0D,MAAI,CAAClC,QAA/D,EAAyEW,IAAzE,CAA8E,UAACgC,UAAD,EAAqB;AAChG,oBAAMC,MAAM,GAAU,EAAtB;AACA,oBAAIjE,SAAS,GAAW,CAAxB;;AACA,qBAAK,IAAI5B,CAAC,GAAW,CAArB,EAAwBA,CAAC,GAAG,MAAI,CAACqF,QAAL,CAAc3E,MAA1C,EAAkDV,CAAC,EAAnD,EAAuD;AACpD,sBAAMsF,GAAG,GAAY,MAAI,CAACD,QAAL,CAAcrF,CAAd,CAArB;;AACA,sBAAIyC,mBAAmB,CAACqD,eAApB,CAAoCF,UAApC,EAAgDN,GAAG,CAACE,SAApD,CAAJ,EAAoE;AACjE,wBAAI5D,SAAS,GAAG0D,GAAG,CAACS,cAAJ,CAAmBrF,MAA/B,GAAwCyE,aAA5C,EAA2D;AACxD,0BAAMa,aAAa,GAAWb,aAAa,GAAGvD,SAAhB,IAA6B,CAA7B,GAAiCuD,aAAa,GAAGvD,SAAjD,GAA6D,CAA3F;AACAiE,4BAAM,CAAC1G,IAAP,OAAA0G,MAAM,qBAASP,GAAG,CAACS,cAAJ,CAAmBE,KAAnB,CAAyBD,aAAzB,CAAT,EAAN;AACF;;AAEDpE,6BAAS,IAAI0D,GAAG,CAACS,cAAJ,CAAmBrF,MAAhC;AACF;AACH,iBAb+F,CAehG;;;AACA,sBAAI,CAACc,KAAL,CAAW0E,MAAX,CAAkBf,aAAlB,EAhBgG,CAkBhG;;;AACAU,sBAAM,CAAC9F,OAAP,CAAe,UAACoG,QAAD,EAAc;AAC1B,sBAAMC,QAAQ,GAAa,IAAI,mDAAJ,CAAa,MAAI,CAAC5E,KAAL,CAAWd,MAAxB,EAAgCyF,QAAhC,CAA3B;AACAC,0BAAQ,CAACzC,OAAT,GAAmB,MAAI,CAAC0C,eAAL,CAAqBD,QAArB,CAAnB;;AACAA,0BAAQ,CAAClB,UAAT,GAAuB;AAAA,2BAAM,MAAI,CAACA,UAAL,CAAgBkB,QAAQ,CAAC3H,KAAT,GAAiB,CAAjC,CAAN;AAAA,mBAAvB;;AACA,wBAAI,CAAC+C,KAAL,CAAWrC,IAAX,CAAgBiH,QAAhB;AACF,iBALD;;AAOA,oBAAIjB,aAAa,KAAK,CAAlB,IAAuB,MAAI,CAAC3D,KAAL,CAAWd,MAAX,GAAoB,CAA/C,EAAkD;AAC/C;AACA,wBAAI,CAACO,MAAL;AACF;AACH,eA9BD,WA8BS,UAAAV,KAAK,EAAI;AACf,oEAAOA,KAAP,CAAa,iCAAb,EAAgDA,KAAhD;;AACA,iBAAC4E,aAAa,KAAK,CAAlB,GAAsB,MAAI,CAACjC,eAA3B,GAA6C,MAAI,CAAC1B,KAAL,CAAW2D,aAAa,GAAG,CAA3B,CAA9C,EAA6EvG,MAA7E,CAAoFO,IAApF,CAAyFoB,KAAzF;AACF,eAjCD;AAkCF,aA7CS;;AAwEA,iBAAA+F,YAAA,GAAe,UAACC,KAAD,EAAkBC,SAAlB,EAA+C;AAErE,kBAAMX,MAAM,GAAQ,EAApB;;AAFqE,yDAGlDU,KAHkD;AAAA;;AAAA;AAGrE,oEAA0B;AAAA,sBAAfE,IAAe;;AAEvB;AACA,uBAAK,IAAIxC,IAAI,GAAQuC,SAArB,EAAgCvC,IAAI,IAAI,CAAxC,EAA2CA,IAAI,EAA/C,EAAmD;AAEhD,wBAAMyC,oBAAoB,GAAuB,MAAI,CAAClF,KAAL,CAAWyC,IAAX,EAAiBvE,QAAjB,CAA0BiH,YAA1B,CAAuCF,IAAvC,CAAjD;;AACA,wBAAIC,oBAAJ,EAA0B;AACvB;AACA,0BAAM5H,IAAI,GAAQ,MAAI,CAAC0C,KAAL,CAAWyC,IAAX,EAAiB/D,YAAnC;AACA,0BAAML,KAAK,GAAQf,IAAI,CAAC4H,oBAAoB,CAACvG,QAAtB,CAAvB,CAHuB,CAKvB;;AACA0F,4BAAM,CAACY,IAAD,CAAN,GAAe5G,KAAf;AACA;AACF;AAEH;;AAED,sBAAI,CAACgG,MAAM,CAAC5F,cAAP,CAAsBwG,IAAtB,CAAD,IAAgC,MAAI,CAACG,iBAAL,CAAuB3G,cAAvB,CAAsCwG,IAAtC,CAApC,EAAiF;AAC9EZ,0BAAM,CAACY,IAAD,CAAN,GAAe,MAAI,CAACG,iBAAL,CAAuBH,IAAvB,CAAf;AACA;AACF;;AAED,sBAAI,CAACZ,MAAM,CAAC5F,cAAP,CAAsBwG,IAAtB,CAAL,EAAkC;AAC/B,0BAAM,IAAII,KAAJ,CAAU,uBAAuBJ,IAAjC,CAAN;AACF;AACH;AA7BoE;AAAA;AAAA;AAAA;AAAA;;AA+BrE,qBAAOF,KAAK,CAAC/C,GAAN,CAAU,UAAC5D,IAAD;AAAA,uBAAUiG,MAAM,CAACjG,IAAD,CAAhB;AAAA,eAAV,CAAP;AAEF,aAjCS;AAmCV;;;;;;;;;;;;;;;;;AAeU,iBAAA+D,OAAA,GAAU,UAAC4C,KAAD,EAAkBC,SAAlB,EACdvD,QADc,EACM;AACvB,qBAAO,IAAI6D,OAAJ,CAAiB,UAACC,MAAD,EAASC,MAAT,EAAoB;AAEzC,oBAAMnB,MAAM,GAAQ,EAApB;;AAFyC,4DAGtBU,KAHsB;AAAA;;AAAA;AAGzC,yEAA0B;AAAA,wBAAfE,IAAe;;AAEvB;AACA,yBAAK,IAAIxC,IAAI,GAAQuC,SAArB,EAAgCvC,IAAI,IAAI,CAAxC,EAA2CA,IAAI,EAA/C,EAAmD;AAEhD,0BAAMyC,oBAAoB,GAAuB,MAAI,CAAClF,KAAL,CAAWyC,IAAX,EAAiBvE,QAAjB,CAA0BiH,YAA1B,CAAuCF,IAAvC,CAAjD;;AACA,0BAAIC,oBAAJ,EAA0B;AACvB;AACA,4BAAM5H,IAAI,GAAQ,MAAI,CAAC0C,KAAL,CAAWyC,IAAX,EAAiB/D,YAAnC;AACA,4BAAML,KAAK,GAAQf,IAAI,CAAC4H,oBAAoB,CAACvG,QAAtB,CAAvB,CAHuB,CAKvB;;AACA0F,8BAAM,CAACY,IAAD,CAAN,GAAeK,OAAO,CAACG,OAAR,CAAgBpH,KAAhB,CAAf;AACA;AACF;AAEH;;AAED,wBAAI,CAACgG,MAAM,CAAC5F,cAAP,CAAsBwG,IAAtB,CAAD,IAAgC,MAAI,CAACG,iBAAL,CAAuB3G,cAAvB,CAAsCwG,IAAtC,CAApC,EAAiF;AAC9EZ,4BAAM,CAACY,IAAD,CAAN,GAAeK,OAAO,CAACG,OAAR,CAAgB,MAAI,CAACL,iBAAL,CAAuBH,IAAvB,CAAhB,CAAf;AACF;;AAED,wBAAI,CAACZ,MAAM,CAAC5F,cAAP,CAAsBwG,IAAtB,CAAL,EAAkC;AAE/B;AAF+B,kEAGbxD,QAHa;AAAA;;AAAA;AAG/B,+EAA4B;AAAA,8BAAjBiE,GAAiB;;AACzB,8BAAMC,IAAI,GAAgB,sEAAYxH,GAAZ,CAAgBuH,GAAhB,CAA1B;;AACA,8BAAM/G,QAAQ,GAAWgH,IAAI,CAACC,WAAL,CAAiBX,IAAjB,CAAzB;;AAEA,8BAAItG,QAAJ,EAAc;AACX;AACA,gCAAMkH,KAAK,GAAQ,MAAI,CAAC3E,QAAL,CAAc/C,GAAd,CAAkBuH,GAAlB,CAAnB;;AACA,gCAAMI,OAAO,GAAuCD,KAAK,CAAClH,QAAD,CAAzD;;AACA,gCAAMoH,QAAQ,GAAaJ,IAAI,CAACK,WAAL,CAAiBf,IAAjB,KAA0B,4DAAYlB,aAAZ,CAA0B+B,OAA1B,CAArD;;AACA,gCAAMxH,KAAK,GAAU,MAAI,CAACwG,YAAL,CAAkBiB,QAAlB,EAA4Bf,SAA5B,CAArB;;AACAX,kCAAM,CAACY,IAAD,CAAN,GAAea,OAAO,CAACG,KAAR,CAAcJ,KAAd,EAAqBvH,KAArB,CAAf;AACA;AACF;AACH;AAhB8B;AAAA;AAAA;AAAA;AAAA;AAiBjC;AACH,mBA3CwC,CA6CzC;AACA;AACA;AACA;;AAhDyC;AAAA;AAAA;AAAA;AAAA;;AAiDzC,oBAAM6F,IAAI,GAAaD,MAAM,CAACC,IAAP,CAAYE,MAAZ,EAAoB6B,MAApB,CAA2B,UAAAC,GAAG;AAAA,yBAAI,4DAAYC,SAAZ,CAAsB/B,MAAM,CAAC8B,GAAD,CAA5B,CAAJ;AAAA,iBAA9B,CAAvB;AACA,oBAAIE,OAAO,GAAWlC,IAAI,CAACjF,MAA3B;;AAEA,oBAAImH,OAAO,KAAK,CAAhB,EAAmB;AAChBd,wBAAM,CAAClB,MAAD,CAAN;AACA;AACF;;AAEDF,oBAAI,CAAC5F,OAAL,CAAa,UAACH,IAAD,EAAkB;AAC5B,sBAAMkI,OAAO,GAAiBjC,MAAM,CAACjG,IAAD,CAApC;AACAkI,yBAAO,CAAClE,IAAR,CAAa,UAAA/D,KAAK,EAAI;AACnBgG,0BAAM,CAACjG,IAAD,CAAN,GAAeC,KAAf;AACAgI,2BAAO,IAAI,CAAX;;AACA,wBAAIA,OAAO,KAAK,CAAhB,EAAmB;AAChB;AACAd,4BAAM,CAAClB,MAAD,CAAN;AACF;AACH,mBAPD,WAOS,UAAAtF,KAAK,EAAI;AACf,wEAAOA,KAAP,CAAa,2BAAb,EAA0CA,KAA1C;;AACAyG,0BAAM,CAACzG,KAAD,CAAN;AACF,mBAVD;AAWF,iBAbD;AAcF,eAvEM,CAAP;AAwEF,aA1ES,CA5Y2F,CAClG;;;AACAqC,qBAAS,CAACmF,MAAV,CAAiBpF,EAAE,CAACqF,aAApB,EAAmCC,mBAAnC;AACF;AApFD;;;;;AAtCI;AAAA;AAAA,iBAiDJ,eAAqB;AAClB,qBAAO,KAAKC,OAAL,GAAe,KAAKA,OAApB,GAA8B,EAArC;AACF;AAED;;;;;AArDI;AAAA,iBAyCJ,aACsBrI,KADtB,EACkC;AAC/B,mBAAKqI,OAAL,GAAerI,KAAf;;AACA,kBAAI,KAAKqI,OAAL,IAAgB,KAAKC,IAAzB,EAA+B;AAC5B,qBAAKjD,UAAL;AACF;AACH;AA/CG;AAAA;AAAA,iBAkEJ,eAAY;AACT,qBAAO,KAAKiD,IAAL,GAAY,KAAKA,IAAjB,GAAwB,EAA/B;AACF;AAwDD;;;AA5HI;AAAA,iBA0DJ,aACatI,KADb,EAC+B;AAC5B,mBAAKsI,IAAL,GAAYtI,KAAZ;;AACA,kBAAI,KAAKqI,OAAL,IAAgB,KAAKC,IAAzB,EAA+B;AAC5B,qBAAKjD,UAAL;AACF;AACH;AAhEG;AAAA;AAAA,mBA+HJ,oBAAQ;AACL,mBAAK3D,WAAL,GAAmB,CAAC,CAApB;AACA,mBAAKM,UAAL,GAAkB,CAAC,CAAnB;AACA,mBAAKL,KAAL,GAAa,EAAb,CAHK,CAKL;AACA;;AACA,yEAAY4G,qBAAZ,CAAkC,KAAK9F,KAAvC;;AACA,mBAAKa,MAAL,GAAc,IAAd;AACA,mBAAKkF,kBAAL;AACF;AAzIG;AAAA;AAAA,mBA2IJ,kBAAM;AAEH,kBAAI,KAAK9G,WAAL,GAAmB,KAAKM,UAA5B,EAAwC;AACrC;AACA,qBAAKF,MAAL,CAAY,KAAKJ,WAAL,GAAmB,CAA/B;AACA;AACF;;AAED,kBAAI,KAAKA,WAAL,GAAmB,KAAKM,UAA5B,EAAwC;AACrC;AACA,oEAAOtB,KAAP,CAAa,2BACP,cADO,GACU,KAAKgB,WADf,GAC6B,KAD7B,GAEP,aAFO,GAES,KAAKM,UAF3B;;AAGA;AACF;;AAED,kBAAI,KAAKA,UAAL,KAAoB,CAAC,CAAzB,EAA4B;AACzB,qBAAKyB,sBAAL;AACF,eAFD,MAEO;AACJ,qBAAKS,kBAAL,CAAwB,KAAKvC,KAAL,CAAW,KAAKK,UAAhB,CAAxB;AACF;AACH;AAhKG;AAAA;AAAA,mBAoOJ,kBAAM;AACH,kBAAI,KAAKN,WAAL,GAAmB,CAAvB,EAA0B;AACvB,qBAAKI,MAAL,CAAY,KAAKJ,WAAL,GAAmB,CAA/B;AACF;AACH;AAxOG;AAAA;AAAA,mBA0OJ,oBAAQ;AACL,kBAAI,KAAK4B,MAAT,EAAiB;AACd,qBAAKmF,KAAL;AACF;;AACD,0EAAYrD,gBAAZ;AACF;AA/OG;AAAA;AAAA,mBAiPI,kBAAShB,IAAT,EAAuB;AAC5B,kBAAM4B,MAAM,GAAQ5B,IAAI,CAAC/D,YAAL,CAAkBoE,QAAlB,IAA8BL,IAAI,CAAC/D,YAAL,CAAkBoE,QAAlB,CAA2BiE,IAA3B,CAAgCtE,IAAI,CAAC/D,YAArC,CAAlD;AACA,qBAAO,4DAAY0H,SAAZ,CAAsB/B,MAAtB,IACCA,MADD,GAEC,IAAIiB,OAAJ,CAAsB,UAACC,MAAD,EAASC,MAAT;AAAA,uBAAoB,CAACnB,MAAD,GAAUkB,MAAM,CAAC,IAAD,CAAhB,GAAyBC,MAAM,CAACnB,MAAD,CAAnD;AAAA,eAAtB,CAFR;AAGF;AAtPG;AAAA;AAAA,mBAwPM,2BAAe;AACtB,kBAAM5B,IAAI,GAAa,KAAK1C,WAAL,KAAqB,CAAC,CAAtB,GAA0B,KAAK2B,eAA/B,GAAiD,KAAK1B,KAAL,CAAW,KAAKD,WAAhB,CAAxE;;AADsB,0DAEN0C,IAAI,CAACvE,QAAL,CAAc2D,MAFR;AAAA;;AAAA;AAEtB,uEAAsC;AAAA,sBAA3BmF,CAA2B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAMjI,KAAK,GAAQiI,CAAC,CAACC,SAAF,CAAYF,IAAZ,CAAiBtE,IAAI,CAAC/D,YAAtB,EAAoC+D,IAAI,CAAC/D,YAAL,CAAkBsI,CAAC,CAACrI,QAApB,CAApC,CAAnB;;AACA,sBAAII,KAAJ,EAAW;AACR0D,wBAAI,CAACrF,MAAL,CAAYO,IAAZ,CAAiBoB,KAAjB;AACA,2BAAO,KAAP;AACF;AACH,iBAfqB,CAgBtB;;AAhBsB;AAAA;AAAA;AAAA;AAAA;;AAiBtB0D,kBAAI,CAACrF,MAAL,GAAc,EAAd,CAjBsB,CAmBtB;AACA;AACA;AACA;AACA;;AACA,qBAAO,CAACqF,IAAI,CAAC/D,YAAL,CAAkBwI,cAAnB,IAAqCzE,IAAI,CAAC/D,YAAL,CAAkBwI,cAAlB,CAAiCH,IAAjC,CAAsCtE,IAAI,CAAC/D,YAA3C,CAA5C;AACF;AAjRG;AAAA;AAAA,mBAmRM,0BAAiB+D,IAAjB,EAA+B;AAAA;AAAA;;AACtC,kBAAMhB,QAAQ,GAAU,yBAAAgB,IAAI,CAACvE,QAAL,CAAcuD,QAAd,EAAuBS,MAAvB,iDAAiC,KAAKT,QAAtC,EAAxB,CADsC,CAGtC;;;AACA,kBAAM0F,UAAU,GAAa1E,IAAI,CAACvE,QAAL,CAAc2D,MAAd,CACtBqE,MADsB,CACf,UAAAkB,GAAG;AAAA,uBAAI,CAAC,CAACA,GAAG,CAACC,uBAAV;AAAA,eADY,EAEtBrF,GAFsB,CAElB,UAAAoF,GAAG;AAAA,uBAAIA,GAAG,CAACC,uBAAR;AAAA,eAFe,CAA7B;;AAIA,kBAAIF,UAAU,CAACjI,MAAX,KAAsB,CAA1B,EAA6B;AAC1B,uBAAOoG,OAAO,CAACG,OAAR,CAAgB,IAAhB,CAAP;AACF;;AAED,qBAAO,IAAIH,OAAJ,CAAqB,UAACC,MAAD,EAASC,MAAT,EAAoB;AAC7C;AACA,sBAAI,CAACrD,OAAL,CAAagF,UAAb,EAAyB1E,IAAI,CAACxF,KAA9B,EAAqCwE,QAArC,EAA+CW,IAA/C,CAAoD,UAAAJ,GAAG,EAAI;AAExD;AACA,sBAAIsF,QAAQ,GAAY,KAAxB;;AAHwD,8DAKtCH,UALsC;AAAA;;AAAA;AAKxD,2EAA8B;AAAA,0BAAnBhB,GAAmB;;AAC3B,0BAAInE,GAAG,CAACvD,cAAJ,CAAmB0H,GAAnB,CAAJ,EAA6B;AAE1B;AACA,4BAAInE,GAAG,CAACmE,GAAD,CAAP,EAAc;AACX1D,8BAAI,CAACrF,MAAL,CAAYO,IAAZ,CAAiBqE,GAAG,CAACmE,GAAD,CAApB;AACAZ,gCAAM,CAAC,KAAD,CAAN;AACA+B,kCAAQ,GAAG,IAAX;AACA;AACF;AACH,uBATD,MASO;AACJ,4EAAOvI,KAAP,CAAa,gCAAgCoH,GAA7C;;AACA1D,4BAAI,CAACrF,MAAL,CAAYO,IAAZ,CAAiBsD,mBAAmB,CAACsG,yBAArC;AACAhC,8BAAM,CAAC,KAAD,CAAN;AACA+B,gCAAQ,GAAG,IAAX;AACA;AACF;AACH;AAtBuD;AAAA;AAAA;AAAA;AAAA;;AAuBxD,sBAAI,CAACA,QAAL,EAAe;AACZ;AACA/B,0BAAM,CAAC,IAAD,CAAN;AACF;AACH,iBA3BD,WA2BS,UAAAxG,KAAK,EAAI;AACf,sEAAOA,KAAP,CAAa,iCAAb,EAAgDA,KAAhD;;AACA0D,sBAAI,CAACrF,MAAL,CAAYO,IAAZ,CAAiBoB,KAAjB;AACAyG,wBAAM,CAACzG,KAAD,CAAN;AACF,iBA/BD;AAgCF,eAlCM,CAAP;AAmCF;AA4DD;;;;AA9XI;AAAA;AAAA,mBAiYI,iBAAK;AACV,mBAAK4C,MAAL,GAAc,KAAd;AACF;AAnYG;AAAA;AAAA,mBAqYJ,gBAAO1E,KAAP,EAAoB;AACjB,mBAAK8C,WAAL,GAAmB9C,KAAnB;AACF,aAvYG,CAwbJ;;AAxbI;AAAA;AAAA,mBAybM,yBAAgB2H,QAAhB,EAAkC;AAAA;;AACzC,qBAAO,UAAC4C,QAAD,EAAoC;AACxC,uBAAO,IAAIlC,OAAJ,CAAiB,UAACC,MAAD,EAASC,MAAT,EAAoB;AAAA;;AAEzC,sBAAMiC,eAAe,GAAU,yBAAA7C,QAAQ,CAAC1G,QAAT,CAAkBuD,QAAlB,EAA2BS,MAA3B,iDAAqC,MAAI,CAACT,QAA1C,EAA/B;;AAEAmD,0BAAQ,CAACpH,YAAT;;AAEA,wBAAI,CAAC2E,OAAL,CAAa,CAACqF,QAAD,CAAb,EAAyB5C,QAAQ,CAAC3H,KAAlC,EAAyCwK,eAAzC,EAA0DrF,IAA1D,CAA+D,UAAAJ,GAAG,EAAI;AACnE4C,4BAAQ,CAAChH,cAAT;;AACA,wBAAIoE,GAAG,CAACvD,cAAJ,CAAmB+I,QAAnB,CAAJ,EAAkC;AAC/BjC,4BAAM,CAACvD,GAAG,CAACwF,QAAD,CAAJ,CAAN;AACF,qBAFD,MAEO;AACJhC,4BAAM,CAACvE,mBAAmB,CAACsG,yBAArB,CAAN;AAEF;AACH,mBARD,WAQS,UAAAG,MAAM,EAAI;AAChB9C,4BAAQ,CAAChH,cAAT;AACA4H,0BAAM,CAACkC,MAAD,CAAN;AACF,mBAXD;AAYF,iBAlBM,CAAP;AAmBF,eApBD;AAqBF;AAgID;;;;AA/kBI;AAAA;AAAA,mBAklBM,8BAAkB;AAAA;;AACzBC,wBAAU,CAAC,YAAM;AACd,oBAAI,MAAI,CAAChG,MAAT,EAAiB;AACd,sBAAMc,IAAI,GAAa,MAAI,CAAC1C,WAAL,KAAqB,CAAC,CAAtB,GAA0B,MAAI,CAACC,KAAL,CAAW,MAAI,CAACD,WAAhB,CAA1B,GAAyD,MAAI,CAAC2B,eAArF;;AACA,sBAAIe,IAAI,CAACxF,KAAL,GAAa,MAAI,CAACoD,UAAlB,IAAgCoC,IAAI,CAACpF,YAAL,CAAkB6B,MAAlB,KAA6B,CAAjE,EAAoE;AAEjE;AACA,wBAAM2C,MAAM,GAAQ,EAApB;;AAHiE,gEAIjDY,IAAI,CAACvE,QAAL,CAAc2D,MAJmC;AAAA;;AAAA;AAIjE,6EAAsC;AAAA,4BAA3BmF,CAA2B;AACnCnF,8BAAM,CAACmF,CAAC,CAAC5I,IAAH,CAAN,GAAiBqE,IAAI,CAAC/D,YAAL,CAAkBsI,CAAC,CAACrI,QAApB,CAAjB;AACF;AANgE;AAAA;AAAA;AAAA;AAAA;;AAQjE,wBAAI8D,IAAI,CAACxF,KAAL,KAAe,MAAI,CAAC2E,YAAL,CAAkB3E,KAArC,EAA4C;AACzC;AACA;AACA;AACA,4BAAI,CAAC2E,YAAL,GAAoB;AACjB3E,6BAAK,EAAEwF,IAAI,CAACxF,KADK;AAEjB4E,8BAAM,EAAEA;AAFS,uBAApB;AAIF,qBARD,MAQO;AACJ;AACA;AACA,2BAAK,IAAMsE,GAAX,IAAkBtE,MAAlB,EAA0B;AACvB,4BAAI,MAAI,CAACD,YAAL,CAAkBC,MAAlB,CAAyBpD,cAAzB,CAAwC0H,GAAxC,CAAJ,EAAkD;AAE/C,8BAAI,CAACjC,MAAM,CAAC0D,EAAP,CAAU,MAAI,CAAChG,YAAL,CAAkBC,MAAlB,CAAyBsE,GAAzB,CAAV,EAAyCtE,MAAM,CAACsE,GAAD,CAA/C,CAAL,EAA4D;AACzD,gFAAO0B,KAAP,CAAa,eAAe1B,GAAf,GAAqB,iCAAlC,EACM,MAAI,CAACvE,YAAL,CAAkBC,MAAlB,CAAyBsE,GAAzB,CADN,EACqC,MADrC,EAC6CtE,MAAM,CAACsE,GAAD,CADnD,EADyD,CAIzD;;;AACA,kCAAI,CAACvE,YAAL,GAAoB;AACjB3E,mCAAK,EAAEwF,IAAI,CAACxF,KADK;AAEjB4E,oCAAM,EAAEA;AAFS,6BAApB;;AAKA,kCAAI,CAAC6B,UAAL,CAAgBjB,IAAI,CAACxF,KAAL,GAAa,CAA7B;;AACA;AACF;AACH,yBAfD,MAeO;AACJ;AACA,8EAAO8B,KAAP,CAAa,eAAeoH,GAAf,GAAqB,2BAAlC,EAA+D,MAAI,CAACvE,YAApE;AACF;AACH;AACH;AACH;;AACD,wBAAI,CAACiF,kBAAL;AACF;AACH,eA/CS,EA+CP5F,mBAAmB,CAAC6G,sBA/Cb,CAAV;AAgDF;AAED;;;;;;;;AAroBI;AAAA;AAAA,mBA4oBM,yBAAuB1D,UAAvB,EAAwCJ,SAAxC,EAAsD;AAC7D,kBAAM+D,MAAM,GAAU,EAAtB;;AAEA,kBAAMC,UAAU,GAAa,4DAAYjE,aAAZ,CAA0BC,SAA1B,CAA7B;;AACAgE,wBAAU,CAACzJ,OAAX,CAAmB,UAAC0F,KAAD,EAAW;AAC3B,oBAAIA,KAAK,KAAK,SAAd,EAAyB;AACtB;AACA8D,wBAAM,CAACpK,IAAP,CAAY,IAAZ;AACF,iBAHD,MAGO,IAAIyG,UAAU,CAAC3F,cAAX,CAA0BwF,KAA1B,CAAJ,EAAsC;AAC1C8D,wBAAM,CAACpK,IAAP,CAAYyG,UAAU,CAACH,KAAD,CAAtB;AACF,iBAFM,MAEA;AACJ,sEAAOgE,IAAP,CAAY,0BAA0BhE,KAA1B,GAAkC,2BAA9C;;AACA8D,wBAAM,CAACpK,IAAP,CAAY,IAAZ;AACF;AACH,eAVD;AAYA,qBAAO,CAAC,CAACqG,SAAS,CAACiC,KAAV,CAAgBjC,SAAhB,EAA2B+D,MAA3B,CAAT;AACF;AA7pBG;;AAAA;AAAA;AAEJ;;;;;;AAIgB,4BAAAzG,8BAAA,GAAyC,YAAzC;AAEhB;;;;AAGwB,4BAAAiG,yBAAA,GAClB,4DAAY7J,SAAZ,CAAsB,oCAAtB,CADkB;AAGxB;;;;;AAIwB,4BAAAoK,sBAAA,GAAiC,GAAjC,CAlBpB,CAkB0D;;;OAlB1D;AAgsBP;;;;;;;UAKaI,O;AAEV;;;;AAIA,yBAAmB3D,cAAnB,EAA0F;AAAA,cAAzCP,SAAyC,uEAAnB;AAAA,mBAAa,IAAb;AAAA,WAAmB;;AAAA;;AAAvE,eAAAO,cAAA,GAAAA,cAAA;AAA8B,eAAAP,SAAA,GAAAA,SAAA;AAChD;AAED;;;;;;;eAGA,eAAU;AACP,mBAAO,KAAKO,cAAL,CAAoBrF,MAA3B;AACF;;;;;;;;;;;;;;;;;;;;;AC1uBJ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAEA;;;;;;;AAKO,eAASiJ,aAAT,GAA4C;AAChD,YAAIxC,IAAI,GAAG,IAAIyC,iBAAJ,EAAX;;AADgD,0CAAjBC,UAAiB;AAAjBA,oBAAiB;AAAA;;AAEhD,YAAIA,UAAJ,EAAgB;AACbA,oBAAU,CAAC9J,OAAX,CAAmB,UAAA+J,CAAC,EAAI;AACrB,gBAAI,OAAOA,CAAP,IAAY,QAAhB,EAA0B;AACvBA,eAAC,GAAGH,aAAa,CAACI,KAAd,CAAoBD,CAApB,CAAJ;AACF;;AACDA,aAAC,CAAC3C,IAAD,CAAD;AACF,WALD;AAMF;;AACD,eAAO,UAAC6C,MAAD,EAAcpK,IAAd,EAA+B;AACnC,cAAIqK,SAAS,GAAGD,MAAM,CAACE,WAAP,CAAmBtK,IAAnC;AAEAuH,cAAI,CAAChH,QAAL,GAAgBP,IAAhB;;AACA,cAAI,CAACuH,IAAI,CAACvH,IAAV,EAAgB;AACbuH,gBAAI,CAACvH,IAAL,GAAYA,IAAZ;AACF;;AACDuK,kBAAQ,CAACxK,GAAT,CAAasK,SAAb,EAAwBnK,KAAxB,CAA8BX,IAA9B,CAAmCgI,IAAnC;AACF,SARD;AASF;;AAED,iBAAcwC,aAAd,EAA2B;AACxB,iBAAgBI,KAAhB,CAAsBnK,IAAtB,EAAoC;AACjC,iBAAO,UAASwK,OAAT,EAAwC;AAC5CA,mBAAO,CAACL,KAAR,CAAcnK,IAAd;AACF,WAFD;AAGF;;AAJe,sBAAAmK,KAAA,GAAK,KAAL;;AAKhB,iBAAgBM,QAAhB,CAAyBxK,KAAzB,EAAyC;AACtC,iBAAO,UAASuK,OAAT,EAAsC;AAC1CA,mBAAO,CAACC,QAAR,CAAiBxK,KAAjB;AACF,WAFD;AAGF;;AAJe,sBAAAwK,QAAA,GAAQ,QAAR;AAKlB,OAXD,EAAcV,aAAa,KAAbA,aAAa,MAA3B;AAaA;;;;;;AAIO,eAASW,cAAT,GAA6C;AACjD,YAAInD,IAAI,GAAG,IAAIoD,kBAAJ,EAAX;;AADiD,2CAAjBV,UAAiB;AAAjBA,oBAAiB;AAAA;;AAEjD,YAAIA,UAAJ,EAAgB;AACbA,oBAAU,CAAC9J,OAAX,CAAmB,UAAA+J,CAAC,EAAI;AACrB,gBAAI,OAAOA,CAAP,IAAY,QAAhB,EAA0B;AACvBA,eAAC,GAAGH,aAAa,CAACI,KAAd,CAAoBD,CAApB,CAAJ;AACF;;AACDA,aAAC,CAAC3C,IAAD,CAAD;AACF,WALD;AAMF;;AACD,eAAO,UAAC6C,MAAD,EAAcpK,IAAd,EAA+B;AACnC,cAAIqK,SAAS,GAAGD,MAAM,CAACE,WAAP,CAAmBtK,IAAnC;AAEAuH,cAAI,CAAChH,QAAL,GAAgBP,IAAhB;;AAEA,cAAI,OAAOuH,IAAI,CAACvH,IAAZ,KAAqB,WAAzB,EAAsC;AACnCuH,gBAAI,CAACvH,IAAL,GAAYA,IAAZ;AACF;;AACDuK,kBAAQ,CAACxK,GAAT,CAAasK,SAAb,EAAwB5G,MAAxB,CAA+BlE,IAA/B,CAAoCgI,IAApC;AACF,SATD;AAUF;;AAED,iBAAcmD,cAAd,EAA4B;AACzB,iBAAgBP,KAAhB,CAAsBnK,IAAtB,EAAoC;AACjC,iBAAO,UAASwK,OAAT,EAAyC;AAC7CA,mBAAO,CAACL,KAAR,CAAcnK,IAAd;AACF,WAFD;AAGF;;AAJe,uBAAAmK,KAAA,GAAK,KAAL;;AAKhB,iBAAgBS,iBAAhB,CAAkCxB,QAAlC,EAAoD;AACjD,iBAAO,UAASoB,OAAT,EAAyC;AAC7CA,mBAAO,CAACK,cAAR,CAAuBzB,QAAvB;AACF,WAFD;AAGF;;AAJe,uBAAAwB,iBAAA,GAAiB,iBAAjB;;AAKhB,iBAAgBE,MAAhB,CAAuBC,WAAvB,EAA4C;AACzC,iBAAO,UAASP,OAAT,EAAyC;AAC7CA,mBAAO,CAACQ,eAAR,CAAwBD,WAAxB;AACF,WAFD;AAGF;;AAJe,uBAAAD,MAAA,GAAM,MAAN;;AAKhB,iBAAgBG,OAAhB,CAAwBC,YAAxB,EAA8C;AAC3C,iBAAO,UAASV,OAAT,EAAyC;AAC7CA,mBAAO,CAACW,gBAAR,CAAyBD,YAAzB;AACF,WAFD;AAGF;;AAJe,uBAAAD,OAAA,GAAO,OAAP;AAKlB,OArBD,EAAcP,cAAc,KAAdA,cAAc,MAA5B;AAuBA;;;;;;;;;AAOO,eAASU,UAAT,CACD1I,KADC,EAED2I,WAFC,EAGDhI,QAHC,EAGe;AACnB,eAAO,UAACiI,SAAD,EAAoB;AACxB,cAAI/D,IAAI,GAAagD,QAAQ,CAACxK,GAAT,CAAauL,SAAS,CAACtL,IAAvB,CAArB;AACAuH,cAAI,CAAC7E,KAAL,GAAaA,KAAb;AACA6E,cAAI,CAAC3G,YAAL,GAAoB0K,SAAS,CAACtL,IAA9B;;AAEA,cAAIqL,WAAJ,EAAiB;AACd,gBAAI,OAAOA,WAAP,KAAuB,UAA3B,EAAuC;AACpC9D,kBAAI,CAAC8D,WAAL,GAAyBA,WAAzB;AACF,aAFD,MAEO;AACJ9D,kBAAI,CAAC8D,WAAL,GAAmB;AAAA,uBAAO,KAAKA,WAAZ;AAAA,eAAnB;AACF;AACH,WAND,MAMO;AACJ9D,gBAAI,CAAC8D,WAAL,GAAmB,IAAnB;AACF;;AAED,cAAIhI,QAAJ,EAAc;AACXkE,gBAAI,CAAClE,QAAL,GAAgBA,QAAQ,IAAI,EAA5B;AACF;AACH,SAlBD;AAmBF;AAwDD;;;;;UAGa2G,iB;AAMV,qCAAc;AAAA;;AAFP,eAAAtJ,UAAA,GAAsB,IAAtB;AAES;;;;iBAET,eAAMV,IAAN,EAAoB;AACxB,iBAAKA,IAAL,GAAYA,IAAZ;AACA,mBAAO,IAAP;AACF;;;iBAEM,kBAASC,KAAT,EAAuB;AAC3B,iBAAKS,UAAL,GAAkBT,KAAlB;AACA,mBAAO,IAAP;AACF;;;iBAEM,oBAAQ;AACZ,mBAAO,KAAKD,IAAZ;AACF;;;;;AAIJ;;;;;UAGa2K,kB;AAOV,sCAAc;AAAA;;AAHP,eAAA9B,SAAA,GAAsC,UAAC0C,MAAD;AAAA,mBAAY,IAAZ;AAAA,WAAtC;AAGS;;;;iBAET,eAAMvL,IAAN,EAAoB;AACxB,iBAAKA,IAAL,GAAYA,IAAZ;AACA,mBAAO,IAAP;AACF;;;iBAEM,kBAAS6I,SAAT,EAA8C;AAClD,iBAAKA,SAAL,GAAiBA,SAAjB;AACA,mBAAO,IAAP;AACF;;;iBAEM,yBAAgBxJ,OAAhB,EAAiC;AACrC,mBAAO,KAAKqF,QAAL,CAAc,UAAAzE,KAAK;AAAA,qBAAIA,KAAK,GAAG,IAAH,GAAU,CAACZ,OAAD,CAAnB;AAAA,aAAnB,CAAP;AACF;;;iBAEM,0BAAiBA,OAAjB,EAAkC;AACtC,mBAAO,KAAKqF,QAAL,CAAc,UAAAzE,KAAK,EAAI;AAC3B,kBAAI,OAAOA,KAAP,KAAiB,WAAjB,IAAgCA,KAAK,IAAI,IAA7C,EAAmD;AAChD,uBAAO,CAACZ,OAAD,CAAP;AACF;;AACD,kBAAIY,KAAK,CAACI,cAAN,CAAqB,QAArB,KAAkCJ,KAAK,CAAC,QAAD,CAAL,IAAmB,CAAzD,EAA4D;AACzD,uBAAO,CAACZ,OAAD,CAAP;AACF;;AACD,qBAAO,IAAP;AACF,aARM,CAAP;AASF;;;iBAEM,wBAAemM,YAAf,EAAqC;AACzC,iBAAKvC,uBAAL,GAA+BuC,YAA/B;AACA,mBAAO,IAAP;AACF;;;iBAEM,oBAAQ;AACZ,mBAAO,KAAKxL,IAAZ;AACF;;;;;AAIJ;;;;;;AAIO;AAAA,YAAMuK,QAAN;AAAP;AAAA;;AAiBU,iBAAArK,KAAA,GAA6B,EAA7B;AACA,iBAAAuD,MAAA,GAA+B,EAA/B;AACA,iBAAAJ,QAAA,GAAkB,EAAlB;AAuBT;;AA1CM;AAAA;AAAA,mBAsBG,qBAAYrD,IAAZ,EAAwB;AAC5B,kBAAInB,KAAK,GAAG,KAAKqB,KAAL,CAAWuL,SAAX,CAAqB,UAAClJ,IAAD;AAAA,uBAAUA,IAAI,CAACvC,IAAL,IAAaA,IAAvB;AAAA,eAArB,CAAZ;AACA,qBAAOnB,KAAK,IAAI,CAAC,CAAV,GAAc,KAAKqB,KAAL,CAAWrB,KAAX,CAAd,GAAkC,IAAzC;AACF;AAzBG;AAAA;AAAA,mBA2BG,yBAAgB0B,QAAhB,EAAgC;AACpC,kBAAI1B,KAAK,GAAG,KAAKqB,KAAL,CAAWuL,SAAX,CAAqB,UAAClJ,IAAD;AAAA,uBAAUA,IAAI,CAAChC,QAAL,IAAiBA,QAA3B;AAAA,eAArB,CAAZ;AACA,qBAAO1B,KAAK,IAAI,CAAC,CAAV,GAAc,KAAKqB,KAAL,CAAWrB,KAAX,CAAd,GAAkC,IAAzC;AACF;AA9BG;AAAA;AAAA,mBAgCG,sBAAamB,IAAb,EAAyB;AAC7B,kBAAInB,KAAK,GAAG,KAAK4E,MAAL,CAAYgI,SAAZ,CAAsB,UAAClJ,IAAD;AAAA,uBAAUA,IAAI,CAACvC,IAAL,IAAaA,IAAvB;AAAA,eAAtB,CAAZ;AACA,qBAAOnB,KAAK,IAAI,CAAC,CAAV,GAAc,KAAK4E,MAAL,CAAY5E,KAAZ,CAAd,GAAmC,IAA1C;AACF;AAnCG;AAAA;AAAA,mBAqCG,0BAAiB0B,QAAjB,EAAiC;AACrC,kBAAI1B,KAAK,GAAG,KAAK4E,MAAL,CAAYgI,SAAZ,CAAsB,UAAClJ,IAAD;AAAA,uBAAUA,IAAI,CAAChC,QAAL,IAAiBA,QAA3B;AAAA,eAAtB,CAAZ;AACA,qBAAO1B,KAAK,IAAI,CAAC,CAAV,GAAc,KAAK4E,MAAL,CAAY5E,KAAZ,CAAd,GAAmC,IAA1C;AACF;AAxCG;AAAA;AAAA,mBAIG,aAAWyM,SAAX,EAA4B;AAChC,kBAAI,CAACf,QAAQ,CAACmB,OAAT,CAAiBrL,cAAjB,CAAgCiL,SAAhC,CAAL,EAAiD;AAC9C,oBAAI/D,IAAI,GAAG,IAAIgD,QAAJ,EAAX;AACAhD,oBAAI,CAAC7E,KAAL,GAAa4I,SAAb;;AACA/D,oBAAI,CAAC8D,WAAL,GAAmB;AAAA,yBAAMC,SAAN;AAAA,iBAAnB;;AACA/D,oBAAI,CAAC3G,YAAL,GAAoB0K,SAApB;AACAf,wBAAQ,CAACmB,OAAT,CAAiBJ,SAAjB,IAA8B/D,IAA9B;AACF;;AACD,qBAAOgD,QAAQ,CAACmB,OAAT,CAAiBJ,SAAjB,CAAP;AACF;AAbG;;AAAA;AAAA;;AAEW,iBAAAI,OAAA,GAAU,EAAV;;OAFX;;;;;;;;;;;;;;;;;ACtPP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAKA;;;;;;UASaC,a;AAWV,+BAAoBC,eAApB,EAAuEC,QAAvE,EAAoG;AAAA;;AAAhF,eAAAD,eAAA,GAAAA,eAAA;AAAmD,eAAAC,QAAA,GAAAA,QAAA;AAA+B;;;;iBAE/F,oBAAQ;AAAA;;AACZ;AACA,gBAAI,KAAKxH,IAAL,CAAUvF,aAAd,EAA6B;AAC1B,kEAAOgN,GAAP,CAAW,mBAAmB,KAAKzH,IAAL,CAAUvF,aAAV,CAAwBkB,IAAtD;;AACA,kBAAI+L,gBAAgB,GAAG,KAAKH,eAAL,CAAqBI,uBAArB,CAA6C,KAAK3H,IAAL,CAAUvF,aAAvD,CAAvB;AACA,kBAAI8D,gBAAgB,GAAG,KAAKqJ,eAAL,CAAqBrJ,gBAA5C;;AACA,kBAAIA,gBAAgB,CAAC9B,MAAjB,GAA0B,CAA9B,EAAiC;AAC9B8B,gCAAgB,CAACsJ,MAAjB,CAAwB,CAAxB;AACF;;AACD,kBAAIC,OAAO,GAAGvJ,gBAAgB,CAACwJ,eAAjB,CAAiCL,gBAAjC,CAAd;AACA,mBAAK1H,IAAL,CAAU/D,YAAV,GAAyB6L,OAAO,CAACE,QAAjC;;AAEA,kBAAI,KAAKhI,IAAL,CAAUvE,QAAV,CAAmBuL,WAAvB,EAAoC;AACjC;AACA,oBAAI9D,IAAI,GAAG,KAAKlD,IAAL,CAAUlF,SAArB;AACA,oBAAImN,IAAI,GAAa,KAAKjI,IAAL,CAAUvE,QAAV,CAAmBuL,WAAxC;;AACA,oBAAIzB,UAAU,GAAa,4DAAYjE,aAAZ,CAA0B2G,IAA1B,CAA3B;;AACA,oBAAI3C,MAAM,GAAG,KAAK4C,aAAL,CAAmB3C,UAAnB,EAA+BrC,IAA/B,CAAb;;AAEA,oBAAIoC,MAAJ,EAAY;AACT,uBAAK0B,WAAL,GAAmBiB,IAAI,CAACzE,KAAL,CAAWyE,IAAX,EAAiB3C,MAAjB,CAAnB;AACF,iBAFD,MAEO;AACJ,uBAAKtF,IAAL,CAAUtF,MAAV,CAAiByN,SAAjB,CAA4B,UAACtM,KAAD,EAAW;AACpCyJ,0BAAM,GAAG,MAAI,CAAC4C,aAAL,CAAmB3C,UAAnB,EAA+B1J,KAA/B,CAAT;;AACA,wBAAIyJ,MAAJ,EAAY;AACT,4BAAI,CAAC0B,WAAL,GAAmBiB,IAAI,CAAC3D,IAAL,CAAU2D,IAAV,EAAgB3C,MAAhB,CAAnB;AACF;AACH,mBALD;AAMF;AACH;AACH;AACH;;;iBAED,2BAAkB;AACf;AACA;AACA,iBAAKkC,QAAL,CAAcY,aAAd;AACF;;;iBAEO,uBAAcC,KAAd,EAA+BnF,IAA/B,EAAwC;AAC7C,gBAAItB,MAAM,GAAG,EAAb;;AAD6C,wDAE5ByG,KAF4B;AAAA;;AAAA;AAE7C,qEAAwB;AAAA,oBAAf1M,IAAe;;AACrB,oBAAIuH,IAAI,CAAClH,cAAL,CAAoBL,IAApB,CAAJ,EAA+B;AAC5BiG,wBAAM,CAAC1G,IAAP,CAAYgI,IAAI,CAACvH,IAAD,CAAhB;AACF,iBAFD,MAEO;AACJ,yBAAO,IAAP;AACF;AACH;AAR4C;AAAA;AAAA;AAAA;AAAA;;AAS7C,mBAAOiG,MAAP;AACF;;;iBAEM,uBAAc;AAClB,wEAAYZ,gBAAZ;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uECpFE,8I,GAAA;AAAA;AAAA;AAAA,gB,GAAoG,qF,IACF,qF,IAC/F;AAAA;AAAA,sBAe0C,UAf1C;;AAGQ;;;;;AAOA;;;;;AACA;;;;;AACA;;;;;AACA;;;;;AACA;;;;;AACA;;;;;AAfR;AAAA,sB,IAe0C,wF,IACvC,iJ,IAA0B,6E,IAAuB,wF,IACjD,mI,IAAuC,8E,IAA8B,qF,IAC/D,kF,IACZ;AAAA;AArBwD;;AAAiB,yCAA0B,QAA1B,CAA0B,SAA1B;;AAAzE,wBAAwD,SAAxD,EAAyE,SAAzE;AAAmG,S,EAAA;AAAA;;AAExF;;AACA,4BAA8C,QAA9C,CAA8C,SAA9C,CAA8C,aAA9C,CAA8C,IAA9C;;AAGA,2CAA6B,QAA7B,CAA6B,SAA7B;;AAEA,4DAAiD,YAAjD;AACA,4DAAgD,YAAhD;;AACA,uEAA0D,QAA1D,CAA0D,SAA1D;;AACA;;AATR,wBAAQ,SAAR,EACQ,SADR,EAIQ,SAJR,EAMQ,SANR,EAOQ,SAPR,EAQQ,SARR,EASQ,SATR;;AAgB6B;;AAAA;;AACpB;;AAAN,wBAAM,UAAN;;AAAuC;;AAAA;AAAuB,S;AAAA;;;2MAzBI,4E,IAC9E,gJ,IAAwB,+E,IACrB,6I,IAAsB,0F,IAEjB,+E,IACL,6J,GAAoB,wD,GAAuE,kF,IACxF,wH,GAAA;AAAA;AAAA,gB,GAqBM,+E,IACH,4E,IACH,4E,IACN;AAAA;AAxBW,6BAAkD,MAAlD;;AAAL,yBAAK,SAAL;AAAuD,S,EAAA;AAAA;AAJpC;;AAAA;;AAGF,oMAAsE,MAAtE;;AAApB,wBAAoB,SAApB;AAA0F,S;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uECH7F,kV,GAAA;AAAA;AAAA,gB,GAEmD,4E,IACnD;AAAA;AAD0B,6BAAwB,gBAAxB;;AAF1B,wBAE0B,SAF1B;AAEkD,S,EAAA,I;AAAA;;;uEAMzC,oY,GAAA;AAAA;AAAA,gB,GAKwC,qF,IACxC;AAD0B,4BAAa,OAAb,CAAa,OAAb,CAAa,SAAb;;AAL1B,wBAK0B,SAL1B;AAKuC,S,EAAA;AAAA;;AALb;;AAEA,8EAA8F,uBAA9F,CAA8F,oBAA9F;AAEA,kEAAoC,YAApC;;AAJ1B,wBAA0B,SAA1B,EAE0B,SAF1B,EAI0B,SAJ1B;AAI8D,S;AAAA;;;uEALpE,yH,IAAyC,qF,IACnC,yH,GAAA;AAAA;AAAA,gB,GAM2B,+E,IACjC;AAAA;AAJgC,2DAAgC,WAAhC;;AAH1B,wBAG0B,SAH1B;AAG0D,S,EAAA,I;AAAA;;;uEALnE,yH,IAAuC,+E,IACpC,yH,GAAA;AAAA;AAAA,gB,GAQe,4E,IAClB;AAAA;AATiB,6BAA0B,MAA1B;;AAAd,wBAAc,SAAd;AAAwC,S,EAAA,I;AAAA;;;uEATmC,4E,IAChD,4E,IAC9B,yH,GAAA;AAAA;AAAA,gB,GAG2B,8E,IAEJ,4E,IACvB,yH,GAAA;AAAA;AAAA,gB,GAUe,4E,IACf;AAAA;AAhB0B;;AAD1B,wBAC0B,SAD1B;;AAMc;;AAAd,wBAAc,SAAd;AAAsC,S,EAAA,I;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACkCtC;AAAA;;;AAAA;AAAA;AAAA;;UAAasH,gB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uEC9BV,0J,GAAA;AAAA;AAAA,gB,GAG8B,+E,IAC9B;AAAA;AAFI;;AAFJ,wBAEI,SAFJ;AAE4D,S,EAAA;AAAA;AACxD,6BAAyB,YAAzB;;AAHJ,wBAGI,SAHJ;AAG6B,S;AAAA;;;uEAU7B;AAAA;AAAA,sBAE2D,UAF3D;;AAEiB;;;;;AAFjB;AAAA,4N,GAAA;AAAA;AAAA;AAAA;AAAA,U,GAE2D,+E,IAC3D;AAAA;AAFiB,6BAAsB,KAAtB,CAAsB,MAAtB;;AADjB,wBACiB,SADjB;AACuC,S,EAAA,I;AAAA;;;uEAKvC,mJ,IAAqD,kF,IAClD,wK,IAAwD,+E,IAC3D,I,EAAA,I;AAAA;;;;;;;;;aAjCgF,4E,IAC/D,4E,IACpB,iJ,IAAyB,+E,IACtB,qJ,IAA6B,kF,IAC1B,oM,GAAA,wN,EAAA;AAAA;AAAA,gB,GAA8D,iG,IAEzD,kF,IACL;AAAA;AAAA,sBACqF,UADrF;;AAAoC;;;;;AAApC;AAAA,sB,GACQ,yD,GAA6E,qF,IAClF,6K,GAAA,qJ,EAAA,gP,EAAkC,yD,GAAiE,kF,IAC7F,+E,IACN,+E,IACN,+G,GAAA;AAAA;AAAA,gB,GAIK,4E,IACF,8E,IAEsC,4E,IAC5C,uM,IAG6C,iF,IAE1C,+G,GAAA;AAAA;AAAA,gB,GAGkB,iF,IAEK,+E,IACvB,+G,GAAA;AAAA;AAAA,gB,GAEO,iF,IAEW,+E,IAClB,+G,GAAA,iO,GAAqC,4E,IAClC,4E,IACN;AAAA;AAlCoD;;AAA9C,yBAA8C,SAA9C;;AASC,6BAAmB,YAAnB;;AADJ,yBACI,SADJ;;AAaiB;;AAAjB,yBAAiB,SAAjB;;AAM4B,6BAAwB,KAAxB,CAAwB,WAAxB;;AAA5B,yBAA4B,SAA5B;AAAoD,S,EAAA;AAAA;AA3Ba;;AAAA;;AAItD,gMAA4E,KAA5E,CAA4E,QAA5E,CAA4E,KAA5E;;AADR,yBACQ,SADR;;AAEqC;;AAAlC,yBAAkC,SAAlC;;AAcJ,6BAAuC,KAAvC,CAAuC,QAAvC,CAAuC,KAAvC;;AAHL,yBAGK,SAHL;AAG4C,S;AAAA","file":"17-es5.js","sourcesContent":["<!-- Copyright 2021 VMware, Inc. All rights reserved. VMware Confidential -->\n<div class=\"modal-footer wizard-footer\">\n   <button id=\"wzdCancel\"\n           class=\"btn btn-link\"\n           (click)=\"onCancelClick()\">\n      {{'vsan.common.cancel' | localized}}\n   </button>\n   <button id=\"wzdBack\"\n           class=\"btn btn-outline\"\n           *ngIf=\"showBack\"\n           (click)=\"onBackClick()\">\n      {{'vsan.common.back' | localized}}\n   </button>\n   <button id=\"wzdNext\"\n           class=\"btn btn-primary\"\n           *ngIf=\"showNext\"\n           (click)=\"onNextClick()\"\n           [disabled]=\"nextDisabled\">\n      {{'vsan.common.next' | localized}}\n   </button>\n   <button id=\"wzdFinish\"\n           class=\"btn btn-primary\"\n           [ngClass]=\"finishButtonStyle\"\n           *ngIf=\"showFinish\"\n           (click)=\"onFinishClick()\"\n           [disabled]=\"nextDisabled\">\n      {{finishButtonText}}\n   </button>\n</div>","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {EventEmitter, Type} from \"@angular/core\";\nimport {PageData} from \"./flow-metadata\";\nimport {Logger} from \"@util/logger\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {PageControls} from \"./flow-wizard.component\";\n\n/**\n * Holds the state of the page, serves as data model for the TOC.\n * Used also by the component factory to build pages.\n * Implements the PageControls interface\n * @see PageControls\n */\nexport class PageItem implements PageControls {\n\n   static createPlaceholder(component: any): PageItem {\n      return new PageItem(-1, component);\n   }\n   index: number;\n   pageComponent: Type<any>;\n\n   onWire: EventEmitter<any> = new EventEmitter<any>();\n\n   // binding for the error box above the page\n   errors: string[] = [];\n\n   // binding for the busy indicator text\n   busyMessages: string[] = [];\n   metadata: PageData;\n   nextButtonIsDisabled: boolean;\n\n   /**\n    * The view instance of the page\n    */\n   private view: any = {};\n\n   /**\n    * The input for the next page instance\n    */\n   pageInput: any = {};\n\n   /**\n    * @param index the index in the TOC (may differ due to PageSet conditions)\n    * @param pageComponent\n    */\n   constructor(index: number, pageComponent: any) {\n      this.index = index;\n      if (pageComponent) {\n         this.pageComponent = pageComponent;\n         this.metadata = PageData.get(pageComponent.name);\n      } else {\n         this.metadata = new PageData();\n      }\n   }\n\n   set viewInstance(value: any) {\n      this.view = value;\n\n      // assign the input\n      this.metadata.input.forEach((i) => {\n         if (this.pageInput.hasOwnProperty(i.name)) {\n            this.viewInstance[i.selector] = this.pageInput[i.name];\n         }\n      });\n\n      if (this.view.fetch) {\n         this.view.fetch();\n      }\n   }\n\n   get viewInstance(): any {\n      return this.view;\n   }\n\n   /**\n    * Assigns the input property values to be wired for the next\n    * assigned view instance.\n    */\n   wire(input: any): string {\n      // put the page controls in the\n      input.pageControls = this;\n      this.metadata.input.forEach((i) => {\n         if (i.isRequired && typeof input[i.name] === \"undefined\") {\n            Logger.error(\"missing property '\" + i.name + \"' in \" + this.metadata.pageTypeName);\n            return VsanUiUtils.getString(\"vsan.common.wizard.missingProperty\");\n         }\n      });\n\n      this.pageInput = input;\n      this.onWire.emit(input);\n      return null;\n   }\n\n   get busyMessage(): string {\n      return this.busyMessages.length > 0 ? this.busyMessages[this.busyMessages.length - 1] : null;\n   }\n\n   setBusyState = (message: string = VsanUiUtils.getString(\"vsan.loading\")) => this.busyMessages.push(message);\n   clearBusyState = () => this.busyMessages.pop();\n   addValidationErrors = (messages: string[]) => this.errors.push(...messages);\n   setValidationErrors = (messages: string[]) => this.errors = messages;\n   clearValidationErrors = () => this.errors = [];\n   collect: (property: string) => Promise<any>;\n   rebuildToc: () => void;\n}\n","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {PageItem} from \"./page-item\";\nimport {FlowWizardNavComponent} from \"@component/wizard/flow-wizard-nav.component\";\n\n@Component({\n   selector: \"vsan-wizard-body\",\n   templateUrl: \"flow-wizard-body.html\",\n   styleUrls: [\"flow-wizard-body.scss\"],\n})\nexport class FlowWizardBodyComponent {\n   FlowWizardNavComponent: typeof FlowWizardNavComponent = FlowWizardNavComponent;\n\n   @Input() pages: PageItem[];\n   @Input() visiblePage: number;\n   @Input() activePage: number;\n   @Input() placeholderPage: PageItem;\n\n}\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, Output, EventEmitter} from '@angular/core';\nimport {PageItem} from \"./page-item\";\n\n/**\n * Footer component for flow wizard\n */\n@Component({\n   selector: \"vsan-wizard-footer\",\n   templateUrl: \"flow-wizard-footer.html\",\n   styleUrls: [\"flow-wizard-footer.scss\"]\n})\nexport class FlowWizardFooterComponent {\n   @Input() pages: PageItem[];\n   @Input() visiblePage:number;\n   @Input() finishButtonText: string;\n   @Input() finishButtonStyle: string;\n\n   @Output() onCancel: EventEmitter<any> = new EventEmitter<any>();\n   @Output() onBack: EventEmitter<any> = new EventEmitter<any>();\n   @Output() onNext: EventEmitter<any> = new EventEmitter<any>();\n   @Output() onFinish: EventEmitter<any> = new EventEmitter<any>();\n\n   get showBack():boolean {\n      return this.visiblePage > 0;\n   }\n   get showNext():boolean {\n      return this.visiblePage < this.pages.length - 1;\n   }\n\n   get showFinish():boolean {\n      return this.visiblePage == this.pages.length - 1;\n   }\n\n   get nextDisabled():boolean {\n      return this.visiblePage == -1 || this.pages[this.visiblePage].busyMessage != null ||\n            this.pages[this.visiblePage].nextButtonIsDisabled;\n   }\n\n   onCancelClick = () => this.onCancel.emit({});\n   onBackClick = () => this.onBack.emit({});\n   onNextClick = () => this.onNext.emit({});\n   onFinishClick = () => this.onFinish.emit({});\n}","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {PageItem} from \"./page-item\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * Footer component for flow wizard\n */\n@Component({\n   selector: \"vsan-wizard-nav\",\n   templateUrl: \"flow-wizard-nav.html\",\n   styleUrls: [\"flow-wizard-nav.scss\"],\n})\nexport class FlowWizardNavComponent {\n   FlowWizardNavComponent: typeof FlowWizardNavComponent = FlowWizardNavComponent;\n   static readonly NAV_BUTTON_ID_SUFFIX: string = \"-tab\";\n\n   @Input() pages: PageItem[];\n   @Input() visiblePage: number;\n   @Input() activePage: number;\n   @Input() title: string;\n\n   @Output() onPage: EventEmitter<number> = new EventEmitter<number>();\n\n   onPageClick(pageIndex: number): void {\n      if (pageIndex > this.activePage) {\n         return;\n      }\n      this.onPage.emit(pageIndex);\n   }\n\n   focusOn(pageIndex: number): void {\n      if (pageIndex < 0) {\n         // If focus is on the first tab, moves focus to the last active tab.\n         pageIndex = this.activePage;\n      }\n      if (pageIndex > this.activePage) {\n         // If focus is on the last tab, moves focus to the first tab.\n         pageIndex = 0;\n      }\n      const buttonId: string = this.pages[pageIndex].pageComponent.name + FlowWizardNavComponent.NAV_BUTTON_ID_SUFFIX;\n      document.getElementById(buttonId).focus();\n   }\n\n   navClass(item: PageItem): string {\n      if (item.index === this.visiblePage) {\n         if (this.visiblePage === this.activePage) {\n            return \"nav-active\";\n         } else {\n            return \"nav-complete nav-active\";\n         }\n      }\n      if (item.index < this.activePage) {\n         return \"nav-complete\";\n      }\n      return \"\";\n   }\n\n   isDisabled(item: PageItem): boolean {\n      return item.index > this.activePage;\n   }\n\n   getScreenReaderLabel(stepNumber: number, item: PageItem): string {\n      let state: string;\n      if (item.index < this.activePage) {\n         state = VsanUiUtils.getString(\"vsan.common.wizard.status.completed\");\n      } else if (item.index === this.activePage) {\n         state = VsanUiUtils.getString(\"vsan.common.wizard.status.inProgress\");\n      } else {\n         state = VsanUiUtils.getString(\"vsan.common.wizard.status.notStarted\");\n      }\n      return VsanUiUtils.getString(\"vsan.common.wizard.status.ariaLabel\",\n            stepNumber + 1, item.metadata.title, state);\n   }\n}\n","<!-- Copyright 2021 VMware, Inc. All rights reserved. VMware Confidential -->\n<vsan-wizard-nav id=\"wizardNav\"\n                 [title]=\"title\"\n                 [pages]=\"pages\"\n                 [visiblePage]=\"visiblePage\"\n                 [activePage]=\"activePage\"\n                 (onPage)=\"onPage($event)\">\n</vsan-wizard-nav>\n<div id=\"wizardContentArea\" class=\"wizard-content\">\n   <vsan-wizard-body id=\"wizardBody\"\n                     [visiblePage]=\"visiblePage\"\n                     [activePage]=\"activePage\"\n                     [pages]=\"pages\"\n                     [placeholderPage]=\"placeholderPage\">\n   </vsan-wizard-body>\n   <vsan-wizard-footer [pages]=\"pages\"\n                       [visiblePage]=\"visiblePage\"\n                       [finishButtonText]=\"finishButtonText\"\n                       [finishButtonStyle]=\"finishButtonStyle\"\n                       (onCancel)=\"onCancel()\"\n                       (onBack)=\"onBack()\"\n                       (onNext)=\"onNext()\"\n                       (onFinish)=\"onNext()\">\n   </vsan-wizard-footer>\n</div>","/* Copyright 2017 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Directive, ViewContainerRef} from \"@angular/core\";\n\n@Directive({\n   selector: '[page-host]',\n})\nexport class PageHostDirective {\n   constructor(public viewContainerRef: ViewContainerRef) { }\n}","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {FocusTrapFactory} from \"@angular/cdk/a11y\";\nimport {Component, ElementRef, EventEmitter, Injector, Input, OnInit, Output} from \"@angular/core\";\nimport {OutputPropertyData} from \"@component/wizard/flow-metadata\";\nimport {ServiceData} from \"@service/service-metadata\";\nimport {Logger} from \"@util/logger\";\nimport {WebPlatform} from \"@util/platform\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {PageItem} from \"./page-item\";\n\n/**\n * Implements an unnecessarily complex wizard concept\n * allowing independent page components to pass data around through\n * dependency injection.\n * Internal: Asynchronous services injection is also supported for async invokers\n * described in ServiceMetadata.\n * @see ServiceMetadata\n */\n@Component({\n   selector: \"vsan-flow-wizard\",\n   templateUrl: \"flow-wizard.html\",\n   styleUrls: [\"flow-wizard.scss\"],\n})\nexport class FlowWizardComponent implements OnInit {\n\n   /**\n    * The default name of the property to be looked for in the services when\n    * finish is clicked.\n    */\n   static readonly DEFAULT_STARTING_TASK_PROPERTY: string = \"finishTask\";\n\n   /**\n    * The error to be shown when a required property is nowhere to be found.\n    */\n   private static readonly ERROR_COLLECTING_PROPERTY: string =\n         VsanUiUtils.getString(\"vsan.common.wizard.missingProperty\");\n\n   /**\n    * The interval on which the visible page is checked for changed output properties.\n    * If such are found, the TOC is rebuilt.\n    */\n   private static readonly PAGE_OUTPUT_SCAN_DELAY: number = 420; // ms\n\n   /**\n    * The name of the property to be looked for in the services when\n    * finish is clicked. The property will be looked for in the last page's services\n    * and then in the wizard services. The returned value will be passed to the future\n    * returned by the show method.\n    */\n   @Input()\n   startingTaskProperty: string = FlowWizardComponent.DEFAULT_STARTING_TASK_PROPERTY;\n\n   @Input()\n   title: string = \"\";\n\n   @Input()\n   finishButtonText: string = VsanUiUtils.getString(\"vsan.common.finish\");\n\n   @Input()\n   finishButtonStyle: string = \"btn-success\";\n\n   /**\n    * Local properties that will be looked up after the pages output.\n    */\n   @Input()\n   set contextProperties(value: any) {\n      this.context = value;\n      if (this.context && this.sets) {\n         this.rebuildToc();\n      }\n   }\n\n   get contextProperties(): any {\n      return this.context ? this.context : {};\n   }\n\n   /**\n    * Table of contents segments. Each page set has its lambda condition\n    * in order to include the set of pages.\n    * @see PageSet\n    */\n   @Input()\n   set pageSets(value: PageSet[]) {\n      this.sets = value;\n      if (this.context && this.sets) {\n         this.rebuildToc();\n      }\n   }\n\n   get pageSets(): PageSet[] {\n      return this.sets ? this.sets : [];\n   }\n\n   /**\n    * The wizard services. Will be looked up after all page outputs,\n    * page services and context properties fail to resolve a property.\n    * @type {Array}\n    */\n   @Input()\n   services: any[] = [];\n\n   /**\n    * Placeholder page for when no page is active.\n    * For convenience purposes with error / busy indication\n    * and null-pointer safety.\n    */\n   @Input()\n   placeholderPage: PageItem = new PageItem(-1, null);\n\n   /**\n    * Provides a hook for closing the wizard in a way that allows any additional processing.\n    * If this is subscribed to, the default closeModalDialog method will not be invoked and\n    * it is the caller's responsibility to close the modal.\n    * The data will hold whatever is returned by the startingTaskProperty invocation,\n    * most likely a task ref that can be monitored.\n    */\n   @Output()\n   onFinish: EventEmitter<any> = new EventEmitter<any>();\n\n   /**\n    * The pages to show in the wizard. Will be placed inside the host component.\n    */\n   pages: PageItem[] = [];\n\n   /**\n    * The page the user is currently seeing\n    */\n   visiblePage: number = -1;\n\n   /**\n    * The last cached page\n    */\n   activePage: number = -1;\n\n   private context: any;\n   private sets: PageSet[];\n   private isOpen: boolean = false;\n   private pageSnapshot: any = {\n      index: -1,\n      output: {},\n   };\n\n   constructor(private injector: Injector, private el: ElementRef, private focusTrap: FocusTrapFactory) {\n      // Create a focus trap region and move the focus into it.\n      focusTrap.create(el.nativeElement).focusInitialElement();\n   }\n\n   /**\n    * When wizard is opened via platform modal dialog, trigger open() upon creation.\n    */\n   ngOnInit(): void {\n      this.visiblePage = -1;\n      this.activePage = -1;\n      this.pages = [];\n\n      // loads the TOC, will trigger load of page 0\n      // this.rebuildToc();\n      WebPlatform.setAccessibilityTitle(this.title);\n      this.isOpen = true;\n      this.listenOnPageOutput();\n   }\n\n   onNext(): void {\n\n      if (this.visiblePage < this.activePage) {\n         // we are on a cached page, so do whatever clicking on the TOC does\n         this.onPage(this.visiblePage + 1);\n         return;\n      }\n\n      if (this.visiblePage > this.activePage) {\n         // should not be reachable\n         Logger.error(\"illegal wizard state: \" +\n               \"visiblePage=\" + this.visiblePage + \" > \" +\n               \"activePage=\" + this.activePage);\n         return;\n      }\n\n      if (this.activePage === -1) {\n         this.preparePlaceholderPage();\n      } else {\n         this.prepareToLeavePage(this.pages[this.activePage]);\n      }\n   }\n\n   private preparePlaceholderPage = () => {\n      const propertiesToCollect: any[] = this.placeholderPage.metadata.input.map(i => i.name);\n      const servicesToLookup: any[] = this.placeholderPage.metadata.services.concat(...this.services);\n\n      this.placeholderPage.setBusyState();\n\n      // collect the properties with (1) traversal offset so the service input\n      // is collected from the previous pages. it is not correct to start collecting\n      // from the page itself either as it may override properties and in this case its\n      // input would depend on its output.vmsValidationResult\n      this.collect(propertiesToCollect, -1, servicesToLookup).then(pInput => {\n         this.placeholderPage.clearBusyState();\n\n         const error: string = this.placeholderPage.wire(pInput);\n         // force wire as the view has already been set (valid for placeholder page only)\n         this.placeholderPage.viewInstance = this.placeholderPage.viewInstance;\n\n         if (error) {\n            this.placeholderPage.errors.push(error);\n         } else {\n            this.prepareToLeavePage(this.placeholderPage);\n         }\n      }).catch(e => {\n         Logger.error(\"A property couldn't be resolved\", e);\n         this.placeholderPage.setValidationErrors([e]);\n      });\n   };\n\n   private prepareToLeavePage = (page: PageItem) => {\n      // here visiblePage is the active page (may be -1 if the wizard is fresh)\n      if (page.busyMessages.length > 0) {\n         // next shouldn't be enabled but yet lets be safe\n         return;\n      }\n\n      page.errors = [];\n      if (!this.doLocalValidate()) {\n         return;\n      }\n\n      // remember in local variable as currentPage might be changed by the user while loading\n      const proceed: any = (this.activePage === this.pages.length - 1) ? this.startFinishTask : this.proceedToNextPage;\n\n      this.validate(page).then(errorMessages => {\n         if (!!errorMessages) {\n            page.addValidationErrors(errorMessages);\n         } else {\n            page.setBusyState(VsanUiUtils.getString(\"vsan.common.validating\"));\n            this.doRemoteValidate(page).then(remoteSucceeded => {\n               page.clearBusyState();\n               if (remoteSucceeded) {\n                  proceed(page);\n               }\n            }).catch(e => {\n               page.clearBusyState();\n            });\n         }\n      }).catch(exceptionMessage => {\n         page.clearBusyState();\n\n         if (exceptionMessage) {\n            page.addValidationErrors(exceptionMessage);\n         }\n      });\n   };\n\n   onBack(): void {\n      if (this.visiblePage > 0) {\n         this.onPage(this.visiblePage - 1);\n      }\n   }\n\n   onCancel(): void {\n      if (this.isOpen) {\n         this.close();\n      }\n      VsanUiUtils.closeModalDialog();\n   }\n\n   private validate(page: PageItem): Promise<string[]> {\n      const result: any = page.viewInstance.validate && page.viewInstance.validate.call(page.viewInstance);\n      return VsanUiUtils.isPromise(result)\n            ? result\n            : new Promise<string[]>((accept, reject) => !result ? accept(null) : reject(result));\n   }\n\n   protected doLocalValidate(): boolean {\n      const page: PageItem = this.visiblePage === -1 ? this.placeholderPage : this.pages[this.visiblePage];\n      for (const o of page.metadata.output) {\n         // FIXME: the validator function is defined as a decorated function (by the @OutputProperty function).\n         // This causes the 'this' to be the component rather than the passed viewInstance.\n         // 'this' refers to the page instance only if\n         // the validator function is defined inline and NOT as lambda expression:\n         // e.g. @OutputProperty(p => p.validate(function(value) { return [\"some error\"]; }))\n         // A possible solution is to specify the validator functions through separate annotation\n         // that does not collect its settings through decorator lambda function.\n         const error: any = o.validator.call(page.viewInstance, page.viewInstance[o.selector]);\n         if (error) {\n            page.errors.push(error);\n            return false;\n         }\n      }\n      // clear any previous errors\n      page.errors = [];\n\n      // The motivation of this change is because the reactive form validation errors cannot stop the user going\n      // to next view, to achieve this w/o this change, we have to add a general error message in the validate method.\n      // In order to support reactive forms in wizard ,we use the new inlineValidate method of the page component,\n      // if all the inputs are valid, inlineValidate method returns true, then the validate method will be executed;\n      // otherwise the page is stopped with only inline validation errors displayed.\n      return !page.viewInstance.inlineValidate || page.viewInstance.inlineValidate.call(page.viewInstance);\n   }\n\n   protected doRemoteValidate(page: PageItem): Promise<boolean> {\n      const services: any[] = page.metadata.services.concat(...this.services);\n\n      // list of all remote validator properties for the page\n      const validators: string[] = page.metadata.output\n            .filter(out => !!out.remoteValidatorProperty)\n            .map(out => out.remoteValidatorProperty);\n\n      if (validators.length === 0) {\n         return Promise.resolve(true);\n      }\n\n      return new Promise<boolean>((accept, reject) => {\n         // request the values of the validator properties\n         this.collect(validators, page.index, services).then(map => {\n\n            // flag whether a failure was found in the result\n            let accepted: boolean = false;\n\n            for (const key of validators) {\n               if (map.hasOwnProperty(key)) {\n\n                  // non-null result means validation error\n                  if (map[key]) {\n                     page.errors.push(map[key]);\n                     accept(false);\n                     accepted = true;\n                     break;\n                  }\n               } else {\n                  Logger.error(\"validator input not found: \" + key);\n                  page.errors.push(FlowWizardComponent.ERROR_COLLECTING_PROPERTY);\n                  accept(false);\n                  accepted = true;\n                  break;\n               }\n            }\n            if (!accepted) {\n               // if nothing was accepted at this point, that means everything went well\n               accept(true);\n            }\n         }).catch(error => {\n            Logger.error(\"A property couldn't be resolved\", error);\n            page.errors.push(error);\n            reject(error);\n         });\n      });\n   }\n\n   protected proceedToNextPage = (currentPage: PageItem) => {\n      // the page that is to be loaded\n      const nextPage: PageItem = this.pages[currentPage.index + 1];\n      const propertiesToCollect: any[] = nextPage.metadata.input.map(i => i.name);\n      const servicesToLookup: any[] = nextPage.metadata.services.concat(...this.services);\n\n      currentPage.setBusyState();\n\n      // collect the properties with (1) traversal offset so the service input\n      // is collected from the previous pages. it is not correct to start collecting\n      // from the page itself either as it may override properties and in this case its\n      // input would depend on its output.\n      this.collect(propertiesToCollect, currentPage.index, servicesToLookup).then(pInput => {\n         currentPage.clearBusyState();\n\n         const error: string = nextPage.wire(pInput);\n         if (!error) {\n            this.activePage = nextPage.index;\n\n            if (this.visiblePage === currentPage.index) {\n               // proceed only if the user is still on the last active page,\n               // they may have gone to a previous page while the last was loading.\n               this.visiblePage++;\n            }\n            this.activePage = nextPage.index;\n         } else {\n            // wire may return error if a required property is missing\n            currentPage.errors.push(error);\n         }\n      }).catch(e => {\n         Logger.error(\"A property couldn't be resolved\", e);\n         currentPage.clearBusyState();\n         currentPage.errors.push(e);\n      });\n   };\n\n   protected startFinishTask = (lastPage: PageItem) => {\n      const services: any[] = lastPage.metadata.services.concat(this.services);\n\n      lastPage.setBusyState(VsanUiUtils.getString(\"vsan.common.validating\"));\n      this.collect([this.startingTaskProperty], lastPage.index, services)\n            .then(resultMap => {\n               this.isOpen = false;\n               const startedTask: any = resultMap[this.startingTaskProperty];\n               if (this.onFinish.observers.length) {\n                  this.onFinish.emit(startedTask);\n               } else {\n                  VsanUiUtils.closeModalDialog(startedTask);\n               }\n            }).catch(e => {\n         lastPage.clearValidationErrors();\n         lastPage.clearBusyState();\n\n         lastPage.addValidationErrors([e]);\n         Logger.error(\"failed to start wizard task \", this.startingTaskProperty, \" with \", e);\n      });\n   };\n\n   /**\n    * Closes the wizard, causing also the result promise to be rejected.\n    */\n   private close(): void {\n      this.isOpen = false;\n   }\n\n   onPage(index: number): void {\n      this.visiblePage = index;\n   }\n\n   protected rebuildToc = (fromPageIndex: number = this.visiblePage + 1) => {\n\n      this.activePage = fromPageIndex - 1;\n\n      // unique and combined set of properties required by all page set conditions\n      const propertyMap: any = {};\n      this.pageSets.forEach((set) => {\n         VsanUiUtils.getParamNames(set.condition).forEach((param) => propertyMap[param] = {});\n      });\n\n      // collect the properties only locally starting from the last page\n      this.collect(Object.keys(propertyMap), fromPageIndex - 1, this.services).then((propValues: any) => {\n         const result: any[] = [];\n         let pageIndex: number = 0;\n         for (let i: number = 0; i < this.pageSets.length; i++) {\n            const set: PageSet = this.pageSets[i];\n            if (FlowWizardComponent.invokeCondition(propValues, set.condition)) {\n               if (pageIndex + set.pageComponents.length > fromPageIndex) {\n                  const setSliceIndex: number = fromPageIndex - pageIndex >= 0 ? fromPageIndex - pageIndex : 0;\n                  result.push(...set.pageComponents.slice(setSliceIndex));\n               }\n\n               pageIndex += set.pageComponents.length;\n            }\n         }\n\n         // removed cached page items\n         this.pages.splice(fromPageIndex);\n\n         // push back fresh page items\n         result.forEach((pageComp) => {\n            const pageItem: PageItem = new PageItem(this.pages.length, pageComp);\n            pageItem.collect = this.collectCallback(pageItem);\n            pageItem.rebuildToc = (() => this.rebuildToc(pageItem.index + 1));\n            this.pages.push(pageItem);\n         });\n\n         if (fromPageIndex === 0 && this.pages.length > 0) {\n            // load first page if such\n            this.onNext();\n         }\n      }).catch(error => {\n         Logger.error(\"A property couldn't be resolved\", error);\n         (fromPageIndex === 0 ? this.placeholderPage : this.pages[fromPageIndex - 1]).errors.push(error);\n      });\n   };\n\n   // creates and returns a callback for fetching a single property value\n   protected collectCallback(pageItem: PageItem): any {\n      return (property: string): Promise<any> => {\n         return new Promise<any>((accept, reject) => {\n\n            const iterateServices: any[] = pageItem.metadata.services.concat(...this.services);\n\n            pageItem.setBusyState();\n\n            this.collect([property], pageItem.index, iterateServices).then(map => {\n               pageItem.clearBusyState();\n               if (map.hasOwnProperty(property)) {\n                  accept(map[property]);\n               } else {\n                  reject(FlowWizardComponent.ERROR_COLLECTING_PROPERTY);\n\n               }\n            }).catch(reason => {\n               pageItem.clearBusyState();\n               reject(reason);\n            });\n         });\n      };\n   }\n\n   protected collectLocal = (props: string[], startPage: number): any[] => {\n\n      const result: any = {};\n      for (const prop of props) {\n\n         // iterate previous pages and look for their output\n         for (let page: any = startPage; page >= 0; page--) {\n\n            const potentialOutputMatch: OutputPropertyData = this.pages[page].metadata.outputByName(prop);\n            if (potentialOutputMatch) {\n               // page before the current one has matching output\n               const view: any = this.pages[page].viewInstance;\n               const value: any = view[potentialOutputMatch.selector];\n\n               // local properties are directly resolved\n               result[prop] = value;\n               break;\n            }\n\n         }\n\n         if (!result.hasOwnProperty(prop) && this.contextProperties.hasOwnProperty(prop)) {\n            result[prop] = this.contextProperties[prop];\n            continue;\n         }\n\n         if (!result.hasOwnProperty(prop)) {\n            throw new Error(\"missing property: \" + prop);\n         }\n      }\n\n      return props.map((name) => result[name]);\n\n   };\n\n   /**\n    * Collects the specified properties. First iterates the pages starting from the specified one\n    * and going down to index 0.\n    * The properties that are not found are then looked up in the context properties.\n    * The properties that are not found are then looked up in the specified services.\n    * If a property is found in a service, its input is collected from the pages and context properties only.\n    * @param props list of properties\n    * @param startPage the first page (with highest index) to be looked for output when\n    *    collecting the properties\n    * @returns Promise<any> Map property name to value\n    *    Accepts: Map property name to property value for all found properties.\n    *       properties that do not cause rejection, it is just not included in the map.\n    *       The caller is responsible to check if their requested property is in the result.\n    *    Rejects: If a property invoker in a service throws an exception\n    */\n   protected collect = (props: string[], startPage: number,\n         services: any[]) => {\n      return new Promise<any>((accept, reject) => {\n\n         const result: any = {};\n         for (const prop of props) {\n\n            // iterate previous pages and look for their output\n            for (let page: any = startPage; page >= 0; page--) {\n\n               const potentialOutputMatch: OutputPropertyData = this.pages[page].metadata.outputByName(prop);\n               if (potentialOutputMatch) {\n                  // page before the current one has matching output\n                  const view: any = this.pages[page].viewInstance;\n                  const value: any = view[potentialOutputMatch.selector];\n\n                  // local properties are directly resolved\n                  result[prop] = Promise.resolve(value);\n                  break;\n               }\n\n            }\n\n            if (!result.hasOwnProperty(prop) && this.contextProperties.hasOwnProperty(prop)) {\n               result[prop] = Promise.resolve(this.contextProperties[prop]);\n            }\n\n            if (!result.hasOwnProperty(prop)) {\n\n               // iterate page and wizard services and look for their output\n               for (const svc of services) {\n                  const data: ServiceData = ServiceData.get(svc);\n                  const selector: string = data.getSelector(prop);\n\n                  if (selector) {\n                     // recursively collect the invoker input from the pages (no services)\n                     const proxy: any = this.injector.get(svc);\n                     const invoker: (...params: any[]) => Promise<any> = proxy[selector];\n                     const argNames: string[] = data.getArgNames(prop) || VsanUiUtils.getParamNames(invoker);\n                     const input: any[] = this.collectLocal(argNames, startPage);\n                     result[prop] = invoker.apply(proxy, input);\n                     break;\n                  }\n               }\n            }\n         }\n\n         // This method is to collect the given property values, such as InputProperty.\n         // Some properties are local variable and some are from service calls.\n         // The local properties already have values, only properties from service calls are pending.\n         // The logic below is to get the value from promise calls, so e need to handle the promises.\n         const keys: string[] = Object.keys(result).filter(key => VsanUiUtils.isPromise(result[key]));\n         let pending: number = keys.length;\n\n         if (pending === 0) {\n            accept(result);\n            return;\n         }\n\n         keys.forEach((name: string) => {\n            const promise: Promise<any> = result[name];\n            promise.then(value => {\n               result[name] = value;\n               pending -= 1;\n               if (pending === 0) {\n                  // that was the last value to be received\n                  accept(result);\n               }\n            }).catch(error => {\n               Logger.error(\"property collect failed: \", error);\n               reject(error);\n            });\n         });\n      });\n   };\n\n   /**\n    * Schedules periodic checks for changed output properties of the currently visible page.\n    */\n   protected listenOnPageOutput(): void {\n      setTimeout(() => {\n         if (this.isOpen) {\n            const page: PageItem = this.visiblePage !== -1 ? this.pages[this.visiblePage] : this.placeholderPage;\n            if (page.index < this.activePage && page.busyMessages.length === 0) {\n\n               // take the current page output\n               const output: any = {};\n               for (const o of page.metadata.output) {\n                  output[o.name] = page.viewInstance[o.selector];\n               }\n\n               if (page.index !== this.pageSnapshot.index) {\n                  // this is the first time we take snapshot of this cached page\n                  // this happens when the user just visited it\n                  // remember it for later comparison\n                  this.pageSnapshot = {\n                     index: page.index,\n                     output: output,\n                  };\n               } else {\n                  // the last snapshot belongs to the currently visible page\n                  // look for changed properties\n                  for (const key in output) {\n                     if (this.pageSnapshot.output.hasOwnProperty(key)) {\n\n                        if (!Object.is(this.pageSnapshot.output[key], output[key])) {\n                           Logger.debug(\"property '\" + key + \"' changed, rebuilding TOC, old:\",\n                                 this.pageSnapshot.output[key], \"new:\", output[key]);\n\n                           // remember the current snapshot for the next check\n                           this.pageSnapshot = {\n                              index: page.index,\n                              output: output,\n                           };\n\n                           this.rebuildToc(page.index + 1);\n                           break;\n                        }\n                     } else {\n                        // should not be possible, page metadata cannot change runtime\n                        Logger.error(\"property '\" + key + \"' not found in snapshot: \", this.pageSnapshot);\n                     }\n                  }\n               }\n            }\n            this.listenOnPageOutput();\n         }\n      }, FlowWizardComponent.PAGE_OUTPUT_SCAN_DELAY);\n   }\n\n   /**\n    * Invokes the condition function and returns its result.\n    * Parameters are resolved from the map\n    * @param propValues\n    * @param condition\n    * @returns {boolean}\n    */\n   protected static invokeCondition(propValues: any, condition: any): boolean {\n      const params: any[] = [];\n\n      const paramNames: string[] = VsanUiUtils.getParamNames(condition);\n      paramNames.forEach((param) => {\n         if (param === \"...vals\") {\n            // This is the default condition, nothing to evaluate\n            params.push(null);\n         } else if (propValues.hasOwnProperty(param)) {\n            params.push(propValues[param]);\n         } else {\n            Logger.warn(\"page condition param \" + param + \" not found, assuming null\");\n            params.push(null);\n         }\n      });\n\n      return !!condition.apply(condition, params);\n   }\n\n}\n\n/**\n * Interface to the pages to access the wizard functionality.\n * A page must wire the 'pageControls' property in order get a reference.\n */\nexport interface PageControls {\n   /**\n    * Collects a property accessible to the current page.\n    * Note that this page output is also looked up, so\n    * property validators can be invoked this way. The side effect\n    * is that this method will resolve overridden properties (such that\n    * are both input and output) from the current page and not\n    * the original received value.\n    */\n   collect(property: string): Promise<any>;\n\n   setBusyState(value?: string): void;\n\n   clearBusyState(): void;\n\n   addValidationErrors(message: string[]): void;\n\n   setValidationErrors(message: string[]): void;\n\n   clearValidationErrors(): void;\n\n   /**\n    * Rebuilds the pages after the invoking one.\n    */\n   rebuildToc(): void;\n}\n\n/**\n * Set of pages, containing block of the TOC sharing existence condition.\n * The condition is evaluated as a function accepting named properties.\n * The properties are collected from pages.\n */\nexport class PageSet {\n\n   /**\n    * @param pageComponents the list of page components in this set\n    * @param condition function(...): boolean\n    */\n   constructor(public pageComponents: any[], public condition: Function = (...vals) => true) {\n   }\n\n   /**\n    * number of components\n    */\n   get length(): number {\n      return this.pageComponents.length;\n   }\n\n}\n\n/**\n * A page can implement this interface to provide custom validation.\n */\nexport interface OnValidate {\n   /**\n    * A non-null result is interpreted as error.\n    * Supports both synchronous (string as result)\n    * and asynchronous validation (promise as result).\n    */\n   validate(): string[] | Promise<string[]>;\n\n   /**\n    * required only when the view is using inline validation.\n    * returns true if the form is valid\n    */\n   inlineValidate?(): boolean;\n}\n\n/**\n * A page can implement this interface to perform additional data manipulation\n * upon loading all page properties.\n */\nexport interface OnFetch {\n   fetch(): void;\n}\n","/* Copyright 2017-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\n\n/**\n * Annotation for marking a page input property\n * @param builder so you can tweak stuff\n * @returns {(target:any, name:string) => void} field decorator\n */\nexport function InputProperty(... decorators: any[]): (target: any, name: string) => void {\n   let data = new InputPropertyData();\n   if (decorators) {\n      decorators.forEach(d => {\n         if (typeof d == \"string\") {\n            d = InputProperty.named(d);\n         }\n         d(data)\n      });\n   }\n   return (target: any, name: string) => {\n      let className = target.constructor.name;\n\n      data.selector = name;\n      if (!data.name) {\n         data.name = name;\n      }\n      PageData.get(className).input.push(data);\n   };\n}\n\nexport module InputProperty {\n   export function named(name: string) {\n      return function(builder: InputPropertyBuilder) {\n         builder.named(name);\n      }\n   }\n   export function required(value: boolean) {\n      return function(builder: InputPropertyBuilder){\n         builder.required(value);\n      }\n   }\n}\n\n/**\n * Annotation for marking a page output property\n * @param builder for convenient neatness\n */\nexport function OutputProperty(... decorators: any[]): (target: any, name: string) => void {\n   let data = new OutputPropertyData();\n   if (decorators) {\n      decorators.forEach(d => {\n         if (typeof d == \"string\") {\n            d = InputProperty.named(d);\n         }\n         d(data)\n      });\n   }\n   return (target: any, name: string) => {\n      let className = target.constructor.name;\n\n      data.selector = name;\n\n      if (typeof data.name === 'undefined') {\n         data.name = name;\n      }\n      PageData.get(className).output.push(data);\n   }\n}\n\nexport module OutputProperty {\n   export function named(name: string) {\n      return function(builder: OutputPropertyBuilder) {\n         builder.named(name);\n      }\n   }\n   export function validatorProperty(property: string) {\n      return function(builder: OutputPropertyBuilder) {\n         builder.validateRemote(property);\n      }\n   }\n   export function ifNull(nullMessage: string) {\n      return function(builder: OutputPropertyBuilder) {\n         builder.validateNotNull(nullMessage);\n      }\n   }\n   export function ifEmpty(emptyMessage: string) {\n      return function(builder: OutputPropertyBuilder) {\n         builder.validateNotEmpty(emptyMessage);\n      }\n   }\n}\n\n/**\n * Annotation for marking a component as page.\n * @param title\n * @param description - string or function (all page inputs may be used as incoming parameters)\n * @param services specific list of services for the page\n * @returns {(pageClass:any)=>undefined} type decorator\n */\nexport function WizardPage(\n      title: string,\n      description?: string | Function,\n      services?: any[]): (type: any) => void {\n   return (pageClass: any) => {\n      let data: PageData = PageData.get(pageClass.name);\n      data.title = title;\n      data.pageTypeName = pageClass.name;\n\n      if (description) {\n         if (typeof description === \"function\") {\n            data.description = <any> description;\n         } else {\n            data.description = () => (\"\" + description);\n         }\n      } else {\n         data.description = null;\n      }\n\n      if (services) {\n         data.services = services || [];\n      }\n   }\n}\n\n/**\n * Accessible in the @InputProperty annotation to\n * customize the property data.\n */\nexport interface InputPropertyBuilder {\n\n   /**\n    * Override the name of the property.\n    * Default is accessor name.\n    */\n   named(name: string): InputPropertyBuilder;\n\n   /**\n    * Overrides whether the input property is required.\n    * Default is true.\n    */\n   required(value: boolean): InputPropertyBuilder;\n\n}\n\n\n/**\n * Accessible in the @InputProperty annotation to\n * customize the property data.\n */\nexport interface OutputPropertyBuilder {\n\n   /**\n    * Override the name of the property.\n    * Default is accessor name.\n    */\n   named(name: string): OutputPropertyBuilder;\n\n   /**\n    * Sets the local validator callback for the property to\n    * not-null checker returning the specified message as error.\n    */\n   validateNotNull(message: string): OutputPropertyBuilder;\n\n   /**\n    * Sets the local validator callback for the property to\n    * not-null-or-empty checker returning the specified message as error.\n    * @param message\n    */\n   validateNotEmpty(message: string): OutputPropertyBuilder;\n\n   /**\n    * Assigns a remote property name to be collected during the page\n    * remote validation phase. A non-null result is interpreted as error.\n    */\n   validateRemote(propertyName: string): OutputPropertyBuilder;\n\n}\n\n/**\n * Holds the annotation data for an input property.\n */\nexport class InputPropertyData implements InputPropertyBuilder {\n\n   public selector: string;\n   public name: string;\n   public isRequired: boolean = true;\n\n   constructor() {}\n\n   public named(name: string) {\n      this.name = name;\n      return this;\n   }\n\n   public required(value: boolean): InputPropertyData {\n      this.isRequired = value;\n      return this;\n   }\n\n   public toString(): string {\n      return this.name;\n   }\n\n}\n\n/**\n * Holds the annotation data of an output property.\n */\nexport class OutputPropertyData implements OutputPropertyBuilder {\n\n   public selector: string;\n   public name: string;\n   public validator: (value: any) => string[] = (anyVal) => null;\n   public remoteValidatorProperty: string;\n\n   constructor() {}\n\n   public named(name: string) {\n      this.name = name;\n      return this;\n   }\n\n   public validate(validator: (value: any) => string[]) {\n      this.validator = validator;\n      return this;\n   }\n\n   public validateNotNull(message: string) {\n      return this.validate(value => value ? null : [message]);\n   }\n\n   public validateNotEmpty(message: string) {\n      return this.validate(value => {\n         if (typeof value === 'undefined' || value == null) {\n            return [message];\n         }\n         if (value.hasOwnProperty('length') && value['length'] == 0) {\n            return [message];\n         }\n         return null;\n      });\n   }\n\n   public validateRemote(propertyName: string) {\n      this.remoteValidatorProperty = propertyName;\n      return this;\n   }\n\n   public toString(): string {\n      return this.name;\n   }\n\n}\n\n/**\n * Holds the annotation data of a page, like\n * title, description, input and output properties.\n */\nexport class PageData {\n\n   private static content = {};\n\n   public static get(pageClass: string): PageData {\n      if (!PageData.content.hasOwnProperty(pageClass)) {\n         let data = new PageData();\n         data.title = pageClass;\n         data.description = () => pageClass;\n         data.pageTypeName = pageClass;\n         PageData.content[pageClass] = data;\n      }\n      return PageData.content[pageClass];\n   }\n\n   public title: string;\n   public description: () => string;\n   public input: InputPropertyData[] = [];\n   public output: OutputPropertyData[] = [];\n   public services: any[] = [];\n   public pageTypeName: string;\n\n   public inputByName(name: string): InputPropertyData {\n      let index = this.input.findIndex((item) => item.name == name);\n      return index != -1 ? this.input[index] : null;\n   }\n\n   public inputBySelector(selector: string): InputPropertyData {\n      let index = this.input.findIndex((item) => item.selector == selector);\n      return index != -1 ? this.input[index] : null;\n   }\n\n   public outputByName(name: string): OutputPropertyData {\n      let index = this.output.findIndex((item) => item.name == name);\n      return index != -1 ? this.output[index] : null;\n   }\n\n   public outputBySelector(selector: string): OutputPropertyData {\n      let index = this.output.findIndex((item) => item.selector == selector);\n      return index != -1 ? this.output[index] : null;\n   }\n\n}\n\n","/* Copyright 2017-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {\n   AfterViewInit,\n   ChangeDetectorRef,\n   Component,\n   ComponentFactoryResolver,\n   forwardRef,\n   Input,\n   OnInit,\n   ViewChild} from \"@angular/core\";\nimport {Logger} from \"../../util/logger\";\nimport {VsanUiUtils} from \"../../util/vsan-util\";\nimport {PageHostDirective} from \"./page-host.directive\";\nimport {PageItem} from \"./page-item\";\n\n/**\n * The container for a wizard page.\n * Manages page description, busy indicator and validation messages.\n */\n@Component({\n   selector: 'vsan-flow-page-container',\n   templateUrl: 'page-container.html',\n   styleUrls: ['page-container.scss']\n})\nexport class PageContainer implements OnInit, AfterViewInit {\n\n   @Input()\n   page: PageItem;\n\n   description: string;\n   /**\n    * The host page content holding the wizard page views\n    */\n   @ViewChild(forwardRef(() => PageHostDirective), {static: true}) pageContentHost: PageHostDirective;\n\n   constructor(private factoryResolver: ComponentFactoryResolver, private detector: ChangeDetectorRef) {}\n\n   public ngOnInit(): void {\n      // loads the page dynamically from its component\n      if (this.page.pageComponent) {\n         Logger.log(\"Loading page: \" + this.page.pageComponent.name);\n         let componentFactory = this.factoryResolver.resolveComponentFactory(this.page.pageComponent);\n         let viewContainerRef = this.pageContentHost.viewContainerRef;\n         if (viewContainerRef.length > 0) {\n            viewContainerRef.remove(0);\n         }\n         let pageRef = viewContainerRef.createComponent(componentFactory);\n         this.page.viewInstance = pageRef.instance;\n\n         if (this.page.metadata.description) {\n            // TODO: Look through the whole wizard context, not only page input\n            let data = this.page.pageInput;\n            let func: Function = this.page.metadata.description;\n            let paramNames: string[] = VsanUiUtils.getParamNames(func);\n            let params = this.collectParams(paramNames, data);\n\n            if (params) {\n               this.description = func.apply(func, params);\n            } else {\n               this.page.onWire.subscribe(((input) => {\n                  params = this.collectParams(paramNames, input);\n                  if (params) {\n                     this.description = func.call(func, params);\n                  }\n               }));\n            }\n         }\n      }\n   }\n\n   ngAfterViewInit() {\n      // To fix the 'ExpressionChangedAfterItHasBeenCheckedError', details check below:\n      // https://blog.angularindepth.com/everything-you-need-to-know-about-the-expressionchangedafterithasbeencheckederror-error-e3fd9ce7dbb4\n      this.detector.detectChanges();\n   }\n\n   private collectParams(names: string[], data: any): any[] {\n      let result = [];\n      for (let name of names) {\n         if (data.hasOwnProperty(name)) {\n            result.push(data[name]);\n         } else {\n            return null;\n         }\n      }\n      return result;\n   }\n\n   public closeWizard() {\n      VsanUiUtils.closeModalDialog();\n   }\n}\n","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"wizard-nav\">\n   <h3 id=\"wizard-title\">\n      {{title}}\n   </h3>\n   <div role=\"tablist\" [attr.aria-label]=\"'vsan.common.wizard.navigation' | localized: title\">\n      <div *ngFor=\"let item of pages; let stepNumber = index\" class=\"nav-item\" [ngClass]=\"navClass(item)\">\n         <!--Set button tabindex to make sure that only the selected tab is in the page Tab sequence.-->\n         <button id=\"{{item.pageComponent.name + FlowWizardNavComponent.NAV_BUTTON_ID_SUFFIX}}\"\n                 [attr.aria-controls]=\"item.pageComponent.name\"\n                 class=\"btn btn-link item-button\"\n                 (click)=\"onPageClick(stepNumber)\"\n                 [disabled]=\"isDisabled(item)\"\n                 role=\"tab\"\n                 [attr.aria-selected]=\"item.index === visiblePage\"\n                 [attr.aria-current]=\"item.index === visiblePage\"\n                 [attr.aria-label]=\"getScreenReaderLabel(stepNumber, item)\"\n                 [attr.tabindex]=\"item.index === visiblePage ? 0 : -1\"\n                 (keyup.arrowLeft)=\"focusOn(stepNumber-1)\"\n                 (keyup.arrowRight)=\"focusOn(stepNumber+1)\"\n                 (keyup.enter)=\"onPageClick(stepNumber)\"\n                 (keyup.space)=\"onPageClick(stepNumber)\"\n                 (keyup.home)=\"focusOn(0)\"\n                 (keyup.end)=\"focusOn(activePage)\">\n            <span class=\"item-number\">{{stepNumber+1}}</span>\n            <span id=\"item-label-{{stepNumber+1}}\">{{item.metadata.title}}</span>\n         </button>\n      </div>\n   </div>\n</div>\n","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<!-- placeholder page view -->\n<vsan-flow-page-container id=\"placeholderPage\"\n                          *ngIf=\"visiblePage == -1\"\n                          [page]=\"placeholderPage\">\n</vsan-flow-page-container>\n\n<!-- real page view -->\n<ng-container *ngIf=\"visiblePage > -1\">\n   <ng-container *ngFor=\"let item of pages\">\n         <vsan-flow-page-container id=\"{{item.pageComponent.name}}\"\n                                   role=\"tabpanel\"\n                                   [attr.aria-labelledby]=\"item.pageComponent.name + FlowWizardNavComponent.NAV_BUTTON_ID_SUFFIX\"\n                                   *ngIf=\"item.index <= activePage\"\n                                   [hidden]=\"item.index != visiblePage\"\n                                   [page]=\"item\">\n         </vsan-flow-page-container>\n   </ng-container>\n</ng-container>\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {FlowWizardComponent} from \"@component/wizard/flow-wizard.component\";\nimport {PageContainer} from \"@component/wizard/page-container.component\";\nimport {PageHostDirective} from \"@component/wizard/page-host.directive\";\nimport {FlowWizardBodyComponent} from \"@component/wizard/flow-wizard-body.component\";\nimport {FlowWizardFooterComponent} from \"@component/wizard/flow-wizard-footer.component\";\nimport {FlowWizardNavComponent} from \"@component/wizard/flow-wizard-nav.component\";\nimport {SummaryPageEntryComponent} from \"@component/wizard/wizard-summary-entry.component\";\nimport {SummaryPageCategoryComponent} from \"@component/wizard/wizard-summary-category.component\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\n\n@NgModule({\n   imports: [\n      A11yModule,\n      CommonModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n      CommonDirectiveModule\n   ],\n   declarations: [\n      FlowWizardComponent,\n      FlowWizardBodyComponent,\n      PageContainer,\n      PageHostDirective,\n      FlowWizardFooterComponent,\n      FlowWizardNavComponent,\n      SummaryPageEntryComponent,\n      SummaryPageCategoryComponent,\n   ],\n   exports: [\n      FlowWizardComponent,\n      SummaryPageEntryComponent,\n      SummaryPageCategoryComponent,\n   ],\n})\nexport class FlowWizardModule {\n}\n","<!--Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<!-- page header -->\n<div class=\"page-header\">\n   <div class=\"title-container\">\n      <h3 id=\"vsan-wizard-page-title\" class=\"title\" vsan-auto-focus>\n         {{page.metadata.title}}\n      </h3>\n      <button id=\"closeBtn\" class=\"close\" (click)=\"closeWizard()\"\n              [attr.aria-label]=\"'vsan.common.closeWizard'|localized: page.metadata.title\">\n         <clr-icon shape=\"close\" size=\"24\" title=\"{{'vsan.common.srMessage.close' | localized}}\"></clr-icon>\n      </button>\n   </div>\n   <h6 id=\"pageInfo\"\n       *ngIf=\"description\"\n       [ngClass]=\"page.busyMessage ? 'page-info-disabled' : ''\"\n       [innerHTML]=\"description\">\n   </h6>\n</div>\n\n<!-- Content of active page goes in here -->\n<div class=\"page-body\"\n     #pageContainer\n     role=\"group\"\n     [attr.aria-label]=\"page.metadata.title\">\n\n   <vsan-validation *ngIf=\"page?.errors?.length > 0\"\n                    [alerts]=\"page.errors\"\n                    (onClosed)=\"page.clearValidationErrors()\">\n   </vsan-validation>\n\n   <!-- busy indicator -->\n   <span class=\"busy-backdrop\" *ngIf=\"page.busyMessage\">\n      <span class=\"spinner spinner-lg central-spinner\"></span>\n   </span>\n\n   <!-- page view -->\n   <ng-template page-host></ng-template>\n</div>\n"]}