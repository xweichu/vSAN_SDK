{"version":3,"sources":["webpack:///src/app/vsan/support/model/perf-dashboard-disk-group.data.ts","webpack:///src/app/vsan/support/view/advanced-perf-dashboard.component.ts","webpack:///src/app/vsan/support/model/perf-dashboard-pnic.data.ts","webpack:///src/app/vsan/support/model/perf-dashboard-view.data.ts","webpack:///src/app/vsan/support/model/perf-dashboard-vnic.data.ts","webpack:///src/app/vsan/support/model/perf-dashboard-host-net.data.ts","webpack:///src/app/vsan/support/view/advanced-perf-sub-entity-dashboard.html","webpack:///src/app/vsan/support/view/advanced-perf-sub-entity-dashboard.component.ts","webpack:///src/app/vsan/support/model/perf-dashboard-cache-disk.data.ts","webpack:///src/app/vsan/common/service/flow/error-handler.decorator.ts","webpack:///src/app/vsan/common/service/navigation/model/knowledge-base-id.ts","webpack:///src/app/vsan/support/model/perf-dashboard-capacity-disk.data.ts","webpack:///src/app/vsan/support/model/perf-dashboard-dom-client.data.ts","webpack:///src/app/vsan/support/model/perf-dashboard-clom-disk.data.ts","webpack:///src/app/vsan/support/model/perf-dashboard-memory-host.data.ts","webpack:///src/app/vsan/support/model/perf-dashboard-host-net-tcpip.data.ts","webpack:///src/app/vsan/support/util/perf-for-support-util.ts","webpack:///src/app/vsan/support/model/perf-dashboard-dom-comp-scheduler.data.ts","webpack:///src/app/vsan/support/model/perf-dashboard-dom-owner.data.ts","webpack:///src/app/vsan/support/model/perf-dashboard-ddh-disk.data.ts","webpack:///src/app/vsan/support/model/perf-dashboard-host-sparse.data.ts","webpack:///src/app/vsan/support/model/perf-dashboard-distribution.data.ts","webpack:///src/app/vsan/support/model/perf-dashboard.data.ts","webpack:///src/app/vsan/support/model/perf-dashboard-dom-comp-mgr.data.ts","webpack:///src/app/vsan/support/model/perf-dashboard-cluster-resync.data.ts","webpack:///src/app/vsan/support/support-perf.module.ts","webpack:///src/app/vsan/support/model/perf-dashboard-cmmds-net.data.ts","webpack:///src/app/vsan/support/model/perf-dashboard-memory-system.data.ts","webpack:///src/app/vsan/support/model/perf-dashboard-memory-vsan.data.ts","webpack:///src/app/vsan/support/model/perf-dashboard-clom-host.data.ts","webpack:///src/app/vsan/support/model/perf-dashboard-cmmds.data.ts","webpack:///src/app/vsan/support/model/perf-dashboard-cpu.data.ts","webpack:///src/app/vsan/support/util/perf-dashboard-sub-entities-data-query.service.ts","webpack:///src/app/vsan/support/model/perf-dashboard-cmmds-workload.data.ts","webpack:///src/app/vsan/support/model/navigation/support-nav.data.ts"],"names":["PerfDashboardDiskgroupData","LSOM_DISK_GROUP_CHARTS","createPerfGraph","getString","RATE_BYTES_TYPE","TIME_MS_TYPE","Factory","create","upper","PERCENTAGE_TYPE","SIZE_BYTES_TYPE","AdvancedPerfDashboard","perfDataProvider","perfPersistenceService","allowReloadWhenError","outlineDashboardLinks","PIVOTAL_DASHBOARDS","dropdownDashboardCategories","CATEGORIED_DASHBOARDS","isZoomed","onRefresh","errorMessage","currentPerfEntityStateData","clusterRef","contextObject","entityGraphsDataMap","Map","entitiesStateDataMap","graphMap","getDisplayedGraphCacheKey","currentDashboardView","view","pivotalOnly","getDashboardGraphs","dashboardView","children","filter","graph","isPivotalGraph","selectDashboard","itemLabel","currentDashboardLabel","queryDashboardData","currentTimeRange","getSelectedPerfEntityTypes","selectedDashboard","DOMCLIENT","CLUSTER_DOMCLIENT","HOST_DOMCLIENT","DOMOWNER","HOST_DOMOWNER","DOMCOMPMGR","CLUSTER_DOMCOMPMGR","HOST_DOMCOMPMGR","TCPIP","VNIC","VSAN_VNIC_NET","CACHEDISK","CACHE_DISK","CAPACITYDISK","CAPACITY_DISK","DISKGROUP","DISK_GROUP","SPARSEHOST","HOST_VSANSPARSE","DDHDISK","DDH_DISK_STATS","PNIC","VSAN_PNIC_NET","HOSTNETWORK","VSAN_HOST_NET","CLOMHOST","CLOM_HOST_STATS","CLOMDISK","CLOM_DISK_STATS","CMMDS","NET","CMMDS_NET","WORKLOAD","CMMDS_WORKLOADSTATS","HOSTMEMORY","HOST_MEMORY_SLAB","HOST_MEMORY_HEAP","SYSMEMORY","SYSTEM_MEM","VSANDISTRIBUTION","VSAN_DISTRIBUTION","DOMCOMPSCHEDULER","DOMWORLDCPU","DOM_WORLD_CPU","HOSTCPU","HOST_CPU","VSANCPU","VSAN_CPU","LSOMWORLDCPU","LSOM_WORLD_CPU","CLUSTERRESYNC","CLUSTER_RESYNC","VSANMEMORY","VSAN_MEMORY","Error","createQuerySpecs","entityTypes","timeRange","map","entityType","from","to","aggregateEntitiesGraphData","perfEntitiesStateData","managedObjectExInfo","serverObj","entityStateData","entityData","entityRefId","indexOf","vsanUuid","forEach","split","ENTITY_REFID_SUBKEY_SEPERATOR","timeStamps","metricsSeries","push","series","values","threshold","key","getGraphsByEntityData","perfData","cacheKey","getGraphDataCacheKey","graphs","displayedGraphs","seriesKeys","noDataSeries","clusterObj","find","isCluster","metrics","metric","aggregated","aggregatedBy","length","slice","val","index","graphsData","ENTITY_REF_ID_TOKEN_SEPARATOR","getPerfStateData","serverObjectInfo","getEntityDataRelatedServerObjectInfo","mangedObjectInfo","onChartZoomIn","opt","isZoomOut","zoomOption","onZoomOut","zoomOut","showAllCharts","resetSelectedEntityCache","selectedPerfEntityName","name","selectedPerfEntityIcon","icon","selectedPerfEntityParentHost","showLessCharts","isGraphDisplayed","graphId","some","id","toggleGraphDisplay","displayedGraph","onTimeRangeChange","isOnInit","isPersistedSelectionInitialized","saveSelection","timeRangePickerComponent","currentPickerState","isNestedDashboard","NESTED_DASHBOARDS","onSubEntitySelected","data","entityIcon","entityName","parentHost","isVsanMaxEnabled","getVsanMaxDashboardViews","getVsanMaxDashboardCategories","preselectSubEntityName","preselectData","objectIdentifier","selectedView","getDashboardView","label","initializePersistedSelections","mainDashboardView","dashboard","getCategoryDashboardView","matchingDashboardViewPredicate","category","persistedSelection","getPersistedSelection","state","setTimerange","querySpecs","getEntityPerfStateForWildcards","results","hasGraphMetricsData","isRecentTimeRange","verboseModeEnabled","PERF_FOR_SUPPORT_VIEW_CMMDS_NO_DATA","PERF_FOR_SUPPORT_VIEW_CMMDS_NO_DATA_FOR_SELECTED_PERIOD","PERF_VIEW_NO_DATA","PERF_VIEW_NO_DATA_FOR_SELECTED_PERIOD","err","error","message","INVALID_ENTITY_REF_ID_KEY","clusterStateData","graphMetrics","clusterGraphs","graphsForClusterAndHosts","clusterGraph","obj","isClusterSelected","srMessage","srMessageType","DATA","SubEntityInfo","PerfDashboardPnicData","PNIC_CHARTS","PERMILLE_TYPE","PerfDashboardView","PerfDashboardVnicData","VNIC_CHARTS","PerfDashboardHostNetworkData","HOST_NETWORK_CHARTS","i","AdvancedPerfSubentityDashboard","perfDashboardQueryService","displayEntityInfoType","DisplayEntityInfoType","showAllSupported","filterObjects","filterMetrics","preselectSubEntityNameChange","displayEntityInfo","ALL","isNested","onError","zoom","entitySelected","resetGraphsDataMap","hostSubEntities","graphsDataMap","hostSubEntitiesData","getAggregatedHostLevelEntitiesData","hasOwnProperty","hostName","subentities","subentites","entity","entityUuid","uuid","getEntityName","host","subEntity","getEntityIcon","emit","_displayedGraphs","_compactMode","isUnset","_view","loadView","querySubEntities","subentitiesData","filterEntities","showMetricsForPreselectedEntity","selectedHost","entityGraphMetric","graphMetric","isEmpty","filteredEntitiesData","filteredEntityData","e","filteredSubEntitiesData","newSubEntityData","PerfDashboardCacheDiskData","LSOM_CACHE_DISK_CHARTS","ErrorHandler","props","targetClass","functionName","descriptor","errorHandler","value","KnowledgeBaseId","PerfDashboardCapacityDiskData","LSOM_CAPACITY_DISK_CHARTS","PerfDashboardDomClientData","DOM_CLIENT_CHARTS","PerfDashboardClomDiskData","CLOM_DISK_CHARTS","PerfDashboardMemoryHostData","MEMORY_HOST_CHARTS","PerfDashboardHostNetworkTcpipData","HOST_NETWORK_TCPIP_CHARTS","PerfForSupportUtil","CLAIM_AS_CACHE","CLAIM_AS_CAPACITY","DISK_GROUP_IMAGE","DISK","VIRTUAL_ADAPTER","PHYSICAL_ADAPTER","PerfDashboardDomCompSchedulerData","DOM_COMP_SCHEDULER_CHARTS","PerfDashboardDomOwnerData","DOM_OWNER_CHARTS","PerfDashboardDdhDiskData","LSOM_DDH_DISK_CHARTS","PerfDashboardHostSparseData","LSOM_HOST_SPARSE_CHARTS","PerfDashboardVsanDistributionData","VSAN_DISTRIBUTION_CHARTS","VsanPerfDashboardView","isSupportedByVsanMax","VsanPerfDashboardCategory","categories","views","DOM_COMP_MGR_CHARTS","CLOM_HOST_CHARTS","MEMORY_SYSTEM_CHARTS","MEMORY_VSAN_CHARTS","CMMDS_CHARTS","CMMDS_NET_CHARTS","CMMDS_WORKLOAD_CHARTS","CLUSTER_RESYNC_CHARTS","PerfDashboardDomCompMgrData","PerfDashboardClusterResyncData","SupportPerfModule","PerfDashboardCmmdsNetData","PerfDashboardMemorySystemData","MBYTES_TYPE","PerfDashboardMemoryVsanData","PerfDashboardClomHostData","PerfDashboardCmmdsData","PerfDashboardCpuData","PerfDashboardSubEntitiesDataQueryService","perfPropertyProvider","parseDiskGroupData","hostDiskgroupsMapping","hostDiskgroupsData","diskgroups","getDiskgroupEntities","getCacheDiskEntities","getCapacityDiskEntites","concat","HostSubEntitiesData","diskgroup","SubEntityObject","diskGroupName","diskGroupUuid","cacheDisk","diskName","diskUuid","diskinfo","capacityDisks","disk","getClusterDiskMappings","getHostPhysicalAdapterMapping","parsePnics","getHostVnicsMapping","parseVnics","getClusterStoragePoolDisks","parseDiskData","hostPnicsMapping","pnicsData","pnics","pnic","deviceName","hostUuid","hostVnicsMapping","vnicsData","vnics","vnic","netStackInstanceKey","hostsData","hostData","diskGroups","reduce","acc","diskGroup","disks","PerfDashboardCmmdsWorkloadData","SupportNavData","perfSelection","PerfSelectionData","SupportView"],"mappings":"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","file":"69-es5.js","sourcesContent":["/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardDiskgroupData {\n   static readonly LSOM_DISK_GROUP_CHARTS: PerfGraph[] = [\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.iopsFrontend\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.iopsFrontend.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsFrontend.iopsRead.label\")),\n               new PerfGraphMetrics(\"iopsWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsFrontend.iopsWrite.label\")),\n               new PerfGraphMetrics(\"iopsRcRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsFrontend.iopsRcRead.label\")),\n               new PerfGraphMetrics(\"iopsWbWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsFrontend.iopsWbWrite.label\")),\n            ]),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.throughputFrontend\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.throughputFrontend.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"throughputRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.throughputFrontend.throughputRead.label\")),\n               new PerfGraphMetrics(\"throughputWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.throughputFrontend.throughputWrite.label\")),\n            ]),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.latencyFrontend\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.latencyFrontend.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyAvgRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latencyFrontend.latencyAvgRead.label\")),\n               new PerfGraphMetrics(\"latencyAvgWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latencyFrontend.latencyAvgWrite.label\")),\n               new PerfGraphMetrics(\"latencyRcRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latencyFrontend.latencyRcRead.label\")),\n               new PerfGraphMetrics(\"latencyWbWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latencyFrontend.latencyWbWrite.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper)),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.iopsOverhead\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.iopsOverhead.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsRcWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsOverhead.iopsRcWrite.label\")),\n               new PerfGraphMetrics(\"iopsWbRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsOverhead.iopsWbRead.label\")),\n            ]),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.latencyOverhead\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.latencyOverhead.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyRcWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latencyOverhead.latencyRcWrite.label\")),\n               new PerfGraphMetrics(\"latencyWbRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latencyOverhead.latencyWbRead.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper)),\n      // Disk Group Congestion\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.congestions\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.congestions.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"memCongestion\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.congestions.memCongestion.label\")),\n               new PerfGraphMetrics(\"slabCongestion\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.congestions.slabCongestion.label\")),\n               new PerfGraphMetrics(\"ssdCongestion\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.congestions.ssdCongestion.label\")),\n               new PerfGraphMetrics(\"iopsCongestion\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.congestions.iopsCongestion.label\")),\n               new PerfGraphMetrics(\"logCongestion\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.congestions.logCongestion.label\")),\n               new PerfGraphMetrics(\"compCongestion\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.congestions.compCongestion.label\")),\n            ]),\n      // Disk Group IOPS\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupIOPS\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupIOPS.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"iopsRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupIOPS.iopsRead.label\")),\n            new PerfGraphMetrics(\"iopsWrite\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupIOPS.iopsWrite.label\")),\n         ], null, false),\n      // Disk Group Throughput\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupThroughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupThroughput.label\"),\n         PerfChartUtil.RATE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"throughputRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupThroughput.throughputRead.label\")),\n            new PerfGraphMetrics(\"throughputWrite\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupThroughput.throughputWrite.label\")),\n         ], null, false),\n      // Disk Group Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupLatency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupLatency.label\"),\n         PerfChartUtil.TIME_MS_TYPE,\n         [\n            new PerfGraphMetrics(\"latencyAvgRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupLatency.latencyAvgRead.label\")),\n            new PerfGraphMetrics(\"latencyAvgWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupLatency.latencyAvgWrite.label\")),\n         ],\n         PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper), false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.rcHitRate\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.rcHitRate.label\"),\n            PerfChartUtil.PERCENTAGE_TYPE,\n            [\n               new PerfGraphMetrics(\"rcHitRate\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.rcHitRate.rcHitRate.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.evictions\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.evictions.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"warEvictions\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.evictions.warEvictions.label\")),\n               new PerfGraphMetrics(\"quotaEvictions\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.evictions.quotaEvictions.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.wbFreePct\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.wbFreePct.label\"),\n            PerfChartUtil.PERCENTAGE_TYPE,\n            [\n               new PerfGraphMetrics(\"wbFreePct\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.wbFreePct.wbFreePct.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.capacity\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.capacity.label\"),\n            PerfChartUtil.SIZE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"capacity\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.capacity.capacity.label\")),\n               new PerfGraphMetrics(\"capacityUsed\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.capacity.capacityUsed.label\")),\n               new PerfGraphMetrics(\"capacityReserved\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.capacity.capacityReserved.label\")),\n               new PerfGraphMetrics(\"rcSize\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.capacity.rcSize.label\")),\n               new PerfGraphMetrics(\"wbSize\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.capacity.wbSize.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.destage\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.destage.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"ssdBytesDrained\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.destage.ssdBytesDrained.label\")),\n               new PerfGraphMetrics(\"zeroBytesDrained\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.destage.zeroBytesDrained.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.oio\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.oio.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"oioWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.oio.oioWrite.label\")),\n               new PerfGraphMetrics(\"oioRecWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.oio.oioRecWrite.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.oioSize\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.oioSize.label\"),\n            PerfChartUtil.SIZE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"oioWriteSize\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.oioSize.oioWriteSize.label\")),\n               new PerfGraphMetrics(\"oioRecWriteSize\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.oioSize.oioRecWriteSize.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.schedulerIOPct\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.schedulerIOPct.label\"),\n            PerfChartUtil.PERCENTAGE_TYPE,\n            [\n               new PerfGraphMetrics(\"iopsDelayPctSched\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerIOPct.iopsDelayPctSched.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.schedulerLatency\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.schedulerLatency.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyDelaySched\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerLatency.latencyDelaySched.label\")),\n               new PerfGraphMetrics(\"latencySchedQueueNS\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerLatency.latencySchedQueueNS.label\")),\n               new PerfGraphMetrics(\"latencySchedQueueRec\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerLatency.latencySchedQueueRec.label\")),\n               new PerfGraphMetrics(\"latencySchedQueueVM\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerLatency.latencySchedQueueVM.label\")),\n               new PerfGraphMetrics(\"latencySchedQueueMeta\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerLatency.latencySchedQueueMeta.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper), false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.schedulerIOPS\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.schedulerIOPS.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsSched\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerIOPS.iopsSched.label\")),\n               new PerfGraphMetrics(\"iopsSchedQueueNS\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerIOPS.iopsSchedQueueNS.label\")),\n               new PerfGraphMetrics(\"iopsSchedQueueRec\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerIOPS.iopsSchedQueueRec.label\")),\n               new PerfGraphMetrics(\"iopsSchedQueueVM\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerIOPS.iopsSchedQueueVM.label\")),\n               new PerfGraphMetrics(\"iopsSchedQueueMeta\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerIOPS.iopsSchedQueueMeta.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.schedulerTput\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.schedulerTput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"throughputSched\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerTput.throughputSched.label\")),\n               new PerfGraphMetrics(\"throughputSchedQueueNS\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerTput.throughputSchedQueueNS.label\")),\n               new PerfGraphMetrics(\"throughputSchedQueueRec\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerTput.throughputSchedQueueRec.label\")),\n               new PerfGraphMetrics(\"throughputSchedQueueVM\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerTput.throughputSchedQueueVM.label\")),\n               new PerfGraphMetrics(\"throughputSchedQueueMeta\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerTput.throughputSchedQueueMeta.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.iopsResync\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.iopsResync.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsResyncReadPolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsResync.iopsResyncReadPolicy.label\")),\n               new PerfGraphMetrics(\"iopsResyncReadDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsResync.iopsResyncReadDecom.label\")),\n               new PerfGraphMetrics(\"iopsResyncReadRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsResync.iopsResyncReadRebalance.label\")),\n               new PerfGraphMetrics(\"iopsResyncReadFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsResync.iopsResyncReadFixComp.label\")),\n               new PerfGraphMetrics(\"iopsResyncWritePolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsResync.iopsResyncWritePolicy.label\")),\n               new PerfGraphMetrics(\"iopsResyncWriteDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsResync.iopsResyncWriteDecom.label\")),\n               new PerfGraphMetrics(\"iopsResyncWriteRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsResync.iopsResyncWriteRebalance.label\")),\n               new PerfGraphMetrics(\"iopsResyncWriteFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsResync.iopsResyncWriteFixComp.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.tputResync\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.tputResync.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"tputResyncReadPolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.tputResync.tputResyncReadPolicy.label\")),\n               new PerfGraphMetrics(\"tputResyncReadDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.tputResync.tputResyncReadDecom.label\")),\n               new PerfGraphMetrics(\"tputResyncReadRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.tputResync.tputResyncReadRebalance.label\")),\n               new PerfGraphMetrics(\"tputResyncReadFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.tputResync.tputResyncReadFixComp.label\")),\n               new PerfGraphMetrics(\"tputResyncWritePolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.tputResync.tputResyncWritePolicy.label\")),\n               new PerfGraphMetrics(\"tputResyncWriteDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.tputResync.tputResyncWriteDecom.label\")),\n               new PerfGraphMetrics(\"tputResyncWriteRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.tputResync.tputResyncWriteRebalance.label\")),\n               new PerfGraphMetrics(\"tputResyncWriteFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.tputResync.tputResyncWriteFixComp.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.latResync\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.latResync.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latResyncReadPolicy\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.diskgroup.latResync.latResyncReadPolicy.label\")),\n               new PerfGraphMetrics(\"latResyncReadDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latResync.latResyncReadDecom.label\")),\n               new PerfGraphMetrics(\"latResyncReadRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latResync.latResyncReadRebalance.label\")),\n               new PerfGraphMetrics(\"latResyncReadFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latResync.latResyncReadFixComp.label\")),\n               new PerfGraphMetrics(\"latResyncWritePolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latResync.latResyncWritePolicy.label\")),\n               new PerfGraphMetrics(\"latResyncWriteDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latResync.latResyncWriteDecom.label\")),\n               new PerfGraphMetrics(\"latResyncWriteRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latResync.latResyncWriteRebalance.label\")),\n               new PerfGraphMetrics(\"latResyncWriteFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latResync.latResyncWriteFixComp.label\")),\n            ], null, false),\n      // Space Efficiency Throughput\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyThroughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyThroughput.label\"),\n         PerfChartUtil.RATE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"dedupedBytes\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyThroughput.dedupedBytes.label\")),\n            new PerfGraphMetrics(\"hashedBytes\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyThroughput.hashedBytes.label\")),\n         ], null, false),\n      // Space Efficiency Run Time\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyRunTime\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyRunTime.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"txnBuildTime\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyRunTime.txnBuildTime.label\")),\n            new PerfGraphMetrics(\"txnWriteTime\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyRunTime.txnWriteTime.label\")),\n            new PerfGraphMetrics(\"txnReplayTime\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyRunTime.txnReplayTime.label\")),\n            new PerfGraphMetrics(\"hashCalcTime\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyRunTime.hashCalcTime.label\")),\n            new PerfGraphMetrics(\"compressionTime\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyRunTime.compressionTime.label\")),\n            new PerfGraphMetrics(\"dataWriteTime\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyRunTime.dataWriteTime.label\")),\n         ], null, false),\n      // Space Efficiency Metadata IO\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyMetadataIO\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyMetadataIO.label\"),\n         PerfChartUtil.SIZE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"numHashmapRd\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyMetadataIO.numHashmapRd.label\")),\n            new PerfGraphMetrics(\"numHashmapWrt\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyMetadataIO.numHashmapWrt.label\")),\n            new PerfGraphMetrics(\"numBitmapRd\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyMetadataIO.numBitmapRd.label\")),\n            new PerfGraphMetrics(\"numBitmapWrt\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyMetadataIO.numBitmapWrt.label\")),\n            new PerfGraphMetrics(\"numXMapRd\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyMetadataIO.numXMapRd.label\")),\n            new PerfGraphMetrics(\"numXMapWrt\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyMetadataIO.numXMapWrt.label\")),\n         ], null, false),\n      // Space Efficiency Percentages\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyPct\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyPct.label\"),\n         PerfChartUtil.PERCENTAGE_TYPE,\n         [\n            new PerfGraphMetrics(\"dedupPct\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyPct.dedupPct.label\")),\n            new PerfGraphMetrics(\"compressPct\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyPct.compressPct.label\")),\n            new PerfGraphMetrics(\"dedupHmapHitRt\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyPct.dedupHmapHitRt.label\")),\n            new PerfGraphMetrics(\"dedupXmapHitRt\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyPct.dedupXmapHitRt.label\")),\n         ], null, false),\n      // Space Efficiency Capacity\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyCap\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyCap.label\"),\n         PerfChartUtil.SIZE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"ddpTotalCap\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyCap.ddpTotalCap.label\")),\n            new PerfGraphMetrics(\"ddpFreeCap\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyCap.ddpFreeCap.label\")),\n         ], null, false),\n   ];\n}\n","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewChild} from \"@angular/core\";\nimport {ChartZoomOption} from \"@component/chart/performance/chart-zoom-option\";\nimport {GraphMetric} from \"@component/chart/performance/graph-metrics.data\";\nimport {PerfGraph, PerfGraphMetrics} from \"@component/chart/performance/perf-graph\";\nimport {RangePickerState} from \"@component/datetime-picker/time-range-picker/range-picker-state\";\nimport {VsanTimeRangePickerComponent} from \"@component/datetime-picker/time-range-picker/time-range-picker.component\";\nimport {UnavailableViewSpec} from \"@component/unavailable-view/unavailable-view-spec\";\nimport {EntityRefType} from \"@generated/entity-ref-type\";\nimport {PerfEntityStateData} from \"@generated/perf-entity-state-data\";\nimport {PerfGraphMetricsData} from \"@generated/perf-graph-metrics-data\";\nimport {PerfQueryErrors} from \"@generated/perf-query-errors\";\nimport {PerfQuerySpec} from \"@generated/perf-query-spec\";\nimport {PerfTimeRangeData} from \"@generated/perf-time-range-data\";\nimport {ServerObjectInfo} from \"@generated/server-object-info\";\nimport {VsanPerfPropertyProvider} from \"@generated/vsan-perf-property-provider\";\nimport {FullTimeRangeSelectionData} from \"@model/full-time-range-selection.data\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {PerformancePersistenceService} from \"@service/performance-persistence.service\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {Logger} from \"@util/logger\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {PerfSelectionData} from \"../model/navigation/support-nav.data\";\nimport {PerfDashboardView} from \"../model/perf-dashboard-view.data\";\nimport {VsanPerfDashboardCategory, VsanPerfDashboardView} from \"../model/perf-dashboard.data\";\n\n@Component({\n   selector: \"vsan-advanced-perf-dashboard\",\n   templateUrl: \"advanced-perf-dashboard.html\",\n   styleUrls: [\"./advanced-perf-dashboard.scss\"],\n})\nexport class AdvancedPerfDashboard implements OnInit, AfterViewInit {\n   static readonly ENTITY_REFID_SUBKEY_SEPERATOR: string = \"|\";\n\n   allowReloadWhenError: boolean = true;\n\n   /**\n    * Lists out all the dashboard links that should be out of the dropdown list\n    * The link label should {category_label} | {dashboard_label}\n    */\n   outlineDashboardLinks: VsanPerfDashboardView[] = VsanPerfDashboardCategory.PIVOTAL_DASHBOARDS;\n\n   /**\n    * Gets the categoried dashboard links which are displayed in the dropdown list\n    * If any category has only one child item left,\n    * then the child item replaces the category to avoid the secondary dropdown menu\n    */\n   dropdownDashboardCategories: VsanPerfDashboardCategory[] = VsanPerfDashboardCategory.CATEGORIED_DASHBOARDS;\n\n   currentDashboardView: VsanPerfDashboardView;\n   currentDashboardLabel: string;\n\n   zoomOption: ChartZoomOption;\n   isZoomed: boolean = false;\n\n   @Input()\n   managedObjectExInfo: ServerObjectInfo[];\n\n   @Input()\n   private verboseModeEnabled: boolean;\n\n   @Input()\n   private preselectData: PerfSelectionData;\n\n   @Input()\n   isVsanMaxEnabled: boolean;\n\n   @Output()\n   onRefresh: EventEmitter<void> = new EventEmitter<void>();\n\n   perfEntitiesStateData: PerfEntityStateData[];\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   @ErrorMessage()\n   errorMessage: string = null;\n\n   /**\n    * The entity data user selected to view the detailed charts\n    */\n   currentPerfEntityStateData: PerfEntityStateData = null;\n\n   selectedPerfEntityName: string;\n\n   selectedPerfEntityIcon: string;\n\n   /**\n    * This could be null if the charts are from host directly.\n    * It is only set when user is checking the charts of a sub entity of a host\n    */\n   selectedPerfEntityParentHost: string;\n\n   preselectSubEntityName: string;\n\n   clusterRef: ManagedObject = ManagedObject.contextObject;\n\n   /**\n    * This cache is for each entity, with it browser side doesn't need to calculate the graphMetric frequently\n    */\n   private entityGraphsDataMap: Map<string, GraphMetric[]> = new Map();\n\n   /**\n    * This cache is for each dashboard.\n    * We cache the data so we don't have to send duplicated requests when user navigates between dashboards\n    */\n   private entitiesStateDataMap: Map<PerfDashboardView, PerfEntityStateData[]> = new Map();\n\n   get displayedGraphs(): PerfGraph[] {\n      const cacheKey: string = this.getDisplayedGraphCacheKey();\n      if (!this.graphMap[cacheKey]) {\n         this.graphMap[cacheKey] = this.pivotalOnly ?\n               this.currentDashboardView.children.filter(graph => graph.isPivotalGraph) :\n               this.currentDashboardView.children;\n      }\n      return this.graphMap[cacheKey];\n   }\n\n   set displayedGraphs(graphs: PerfGraph[]) {\n      const cacheKey: string = this.getDisplayedGraphCacheKey();\n      this.graphMap[cacheKey] = graphs;\n   }\n\n   private graphMap: Map<PerfDashboardView, PerfGraph[]> = new Map<PerfDashboardView, PerfGraph[]>();\n\n   currentTimeRange: PerfTimeRangeData;\n\n   constructor(private perfDataProvider: VsanPerfPropertyProvider,\n         private perfPersistenceService: PerformancePersistenceService) {\n   }\n\n   @ViewChild(VsanTimeRangePickerComponent)\n   timeRangePickerComponent: VsanTimeRangePickerComponent;\n\n   ngOnInit(): void {\n      this.outlineDashboardLinks = this.isVsanMaxEnabled\n            ? VsanPerfDashboardCategory.getVsanMaxDashboardViews(VsanPerfDashboardCategory.PIVOTAL_DASHBOARDS)\n            : VsanPerfDashboardCategory.PIVOTAL_DASHBOARDS;\n      this.dropdownDashboardCategories = this.isVsanMaxEnabled\n            ? VsanPerfDashboardCategory.getVsanMaxDashboardCategories(VsanPerfDashboardCategory.CATEGORIED_DASHBOARDS)\n            : VsanPerfDashboardCategory.CATEGORIED_DASHBOARDS;\n\n      this.preselectSubEntityName = this.preselectData?.objectIdentifier;\n      const selectedView: PerfDashboardView = this.preselectData\n            ? this.preselectData.dashboardView\n            : PerfDashboardView.DOMCLIENT;\n      this.currentDashboardView = this.getDashboardView(selectedView);\n      this.currentDashboardLabel = this.currentDashboardView.label;\n   }\n\n   ngAfterViewInit(): void {\n      this.initializePersistedSelections();\n      this.queryDashboardData(this.currentDashboardView.view, this.currentTimeRange);\n   }\n\n   private getDashboardView(view: PerfDashboardView): VsanPerfDashboardView {\n      const mainDashboardView: VsanPerfDashboardView =\n            this.outlineDashboardLinks.find(dashboard => dashboard.view === view);\n\n      return mainDashboardView\n            ? mainDashboardView\n            : this.getCategoryDashboardView(view);\n   }\n\n   private getCategoryDashboardView(view: PerfDashboardView): VsanPerfDashboardView {\n      const matchingDashboardViewPredicate: (dashboard: VsanPerfDashboardView) => boolean =\n            dashboard => dashboard.view === view;\n      return this.dropdownDashboardCategories\n            .find(category => category.children.some(matchingDashboardViewPredicate))\n            .children.find(matchingDashboardViewPredicate);\n   }\n\n   private initializePersistedSelections(): void {\n      // Try to get persisted selection.\n      const persistedSelection: FullTimeRangeSelectionData =\n            this.perfPersistenceService.getPersistedSelection();\n      /*\n       * If there is persisted time range selection, then wait for time-range-picker component\n       * initialization and pass the cached range into it.\n      * */\n      if (persistedSelection != null) {\n         const timeRange: PerfTimeRangeData = persistedSelection.timeRange;\n         const state: RangePickerState = persistedSelection.state;\n\n         if (this.timeRangePickerComponent.currentTimeRange.from !== timeRange.from ||\n               this.timeRangePickerComponent.currentTimeRange.to !== timeRange.to) {\n            this.timeRangePickerComponent.setTimerange(timeRange, state);\n            this.currentTimeRange = timeRange;\n         }\n      }\n   }\n\n   private get isPersistedSelectionInitialized(): boolean {\n      const persistedSelection: FullTimeRangeSelectionData = this.perfPersistenceService.getPersistedSelection();\n\n      // If there is no persisted selection. it's replaced by view's default one\n      if (persistedSelection == null) {\n         return true;\n      }\n\n      return this.currentTimeRange === persistedSelection.timeRange;\n   }\n\n   private getDisplayedGraphCacheKey = (): string => {\n      return this.currentDashboardView.view + (this.pivotalOnly ? \"_pivotal\" : \"_all\");\n   };\n\n   getDashboardGraphs = (dashboardView: VsanPerfDashboardView): PerfGraph[] => {\n      if (!dashboardView.children) {\n         return [];\n      }\n      /**\n       * when no entity is selected, we list the privotal graphs only;\n       * if user is viewing all the graphs of an entity, we should list all the graphs\n       */\n      return this.pivotalOnly ? dashboardView.children.filter(graph => graph.isPivotalGraph) : dashboardView.children;\n   };\n\n   selectDashboard = (dashboardView: VsanPerfDashboardView, itemLabel: string) => {\n      if (this.currentDashboardView && this.currentDashboardView.view === dashboardView.view) {\n         return;\n      }\n\n      this.currentPerfEntityStateData = null;\n      this.currentDashboardView = dashboardView;\n      this.currentDashboardLabel = itemLabel;\n\n      this.queryDashboardData(dashboardView.view, this.currentTimeRange);\n   };\n\n   /**\n    * For domclient and domcompmgr we need to cover both cluster and hosts level,\n    * because cluster and hosts are different entity id, so we need an array type\n    */\n   private getSelectedPerfEntityTypes = (selectedDashboard: PerfDashboardView): string[] => {\n      switch (selectedDashboard) {\n         case PerfDashboardView.DOMCLIENT:\n            return [EntityRefType.CLUSTER_DOMCLIENT(), EntityRefType.HOST_DOMCLIENT()];\n         case PerfDashboardView.DOMOWNER:\n            return [EntityRefType.HOST_DOMOWNER()];\n         case PerfDashboardView.DOMCOMPMGR:\n            return [EntityRefType.CLUSTER_DOMCOMPMGR(), EntityRefType.HOST_DOMCOMPMGR()];\n         case PerfDashboardView.TCPIP: // This entry shares the same entity type with vnic\n         case PerfDashboardView.VNIC:\n            return [EntityRefType.VSAN_VNIC_NET()];\n         case PerfDashboardView.CACHEDISK:\n            return [EntityRefType.CACHE_DISK()];\n         case PerfDashboardView.CAPACITYDISK:\n            return [EntityRefType.CAPACITY_DISK()];\n         case PerfDashboardView.DISKGROUP:\n            return [EntityRefType.DISK_GROUP()];\n         case PerfDashboardView.SPARSEHOST:\n            return [EntityRefType.HOST_VSANSPARSE()];\n         case PerfDashboardView.DDHDISK:\n            return [EntityRefType.DDH_DISK_STATS()];\n         case PerfDashboardView.PNIC:\n            return [EntityRefType.VSAN_PNIC_NET()];\n         case PerfDashboardView.HOSTNETWORK:\n            return [EntityRefType.VSAN_HOST_NET()];\n         case PerfDashboardView.CLOMHOST:\n            return [EntityRefType.CLOM_HOST_STATS()];\n         case PerfDashboardView.CLOMDISK:\n            return [EntityRefType.CLOM_DISK_STATS()];\n         case PerfDashboardView.CMMDS:\n            return [EntityRefType.CMMDS()];\n         case PerfDashboardView.NET:\n            return [EntityRefType.CMMDS_NET()];\n         case PerfDashboardView.WORKLOAD:\n            return [EntityRefType.CMMDS_WORKLOADSTATS()];\n         case PerfDashboardView.HOSTMEMORY:\n            return [EntityRefType.HOST_MEMORY_SLAB(), EntityRefType.HOST_MEMORY_HEAP()];\n         case PerfDashboardView.SYSMEMORY:\n            return [EntityRefType.SYSTEM_MEM()];\n         case PerfDashboardView.VSANDISTRIBUTION:\n            return [EntityRefType.VSAN_DISTRIBUTION()];\n         case PerfDashboardView.DOMCOMPSCHEDULER:\n            return [EntityRefType.DISK_GROUP()];\n         case PerfDashboardView.DOMWORLDCPU:\n            return [EntityRefType.DOM_WORLD_CPU()];\n         case PerfDashboardView.HOSTCPU:\n            return [EntityRefType.HOST_CPU()];\n         case PerfDashboardView.VSANCPU:\n            return [EntityRefType.VSAN_CPU()];\n         case PerfDashboardView.LSOMWORLDCPU:\n            return [EntityRefType.LSOM_WORLD_CPU()];\n         case PerfDashboardView.CLUSTERRESYNC:\n            return [EntityRefType.CLUSTER_RESYNC()];\n         case PerfDashboardView.VSANMEMORY:\n            return [EntityRefType.VSAN_MEMORY()];\n         default:\n            throw new Error(\"Unsupported dashboard view\");\n      }\n   };\n\n   private createQuerySpecs = (entityTypes: string[], timeRange: PerfTimeRangeData): PerfQuerySpec[] => {\n      return entityTypes.map(entityType => PerfQuerySpec.Factory.create(\n            entityType,\n            \"*\", // wild card query, * to match all the entityIds\n            null, /* group:string, not used*/\n            timeRange.from,\n            timeRange.to,\n            null, /* interval:number , not used*/\n            null /* labels:string[], not used*/));\n   };\n\n   @Loader({srMessage: \"vsan.perf.advanced.dashboards.dropdown.label\", srMessageType: SrMessageType.DATA})\n   private async queryDashboardData(selectedDashboard: PerfDashboardView, timeRange: PerfTimeRangeData): Promise<void> {\n      if (!timeRange) {\n         return;\n      }\n      this.perfEntitiesStateData = this.entitiesStateDataMap[selectedDashboard];\n      if (this.perfEntitiesStateData) {\n         return;\n      }\n\n      const entityTypes: string[] = this.getSelectedPerfEntityTypes(selectedDashboard);\n      const querySpecs: PerfQuerySpec[] = this.createQuerySpecs(entityTypes, timeRange);\n\n      const results: PerfEntityStateData[] =\n            await this.perfDataProvider.getEntityPerfStateForWildcards(this.clusterRef, querySpecs);\n      if (this.isNestedDashboard(this.currentDashboardView.view)) {\n         this.perfEntitiesStateData = results;\n      } else {\n         this.perfEntitiesStateData = this.aggregateEntitiesGraphData(results);\n      }\n      this.entitiesStateDataMap[selectedDashboard] = this.perfEntitiesStateData;\n   }\n\n   private aggregateEntitiesGraphData = (perfEntitiesStateData: PerfEntityStateData[]): PerfEntityStateData[] => {\n      return this.managedObjectExInfo\n            .map(serverObj => {\n               const entityStateData: PerfEntityStateData = PerfEntityStateData.Factory.create([], [], null, \"\");\n               perfEntitiesStateData.filter(entityData => entityData.entityRefId.indexOf(serverObj.vsanUuid) !== -1)\n                     .forEach(entityData => {\n                        entityStateData.entityRefId =\n                              entityData.entityRefId.split(AdvancedPerfDashboard.ENTITY_REFID_SUBKEY_SEPERATOR)[0];\n                        entityStateData.timeStamps = entityData.timeStamps;\n                        entityStateData.metricsSeries.push(...entityData.metricsSeries.map(series => {\n                           return PerfGraphMetricsData.Factory.create(series.values,\n                                 series.threshold,\n                                 series.key,\n                                 entityData.entityRefId.split(AdvancedPerfDashboard.ENTITY_REFID_SUBKEY_SEPERATOR)[1]);\n                        }));\n                     });\n               return entityStateData;\n            });\n   };\n\n   getGraphsByEntityData = (perfData: PerfEntityStateData): GraphMetric[] => {\n      const cacheKey: string = this.getGraphDataCacheKey(perfData.entityRefId);\n\n      if (!this.entityGraphsDataMap[cacheKey]) {\n         const graphs: PerfGraph[] = this.displayedGraphs;\n         const seriesKeys: string[] = perfData.metricsSeries.map(series => series.key);\n         const noDataSeries: PerfGraphMetrics[] = [];\n\n         // We should do this for host level data only, otherwise these graphs are displayed at cluster level\n         const clusterObj: ServerObjectInfo = this.managedObjectExInfo.find(serverObj => serverObj.isCluster);\n         if (!clusterObj || cacheKey.indexOf(clusterObj.vsanUuid) === -1) {\n            // Find the graph metric keys which don't have values in perfData\n            graphs.forEach(graph => {\n               noDataSeries.push(...graph.metrics.map(metric => {\n                  if (seriesKeys.indexOf(metric.key) === -1) {\n                     return metric;\n                  }\n               }).filter(key => key));\n            });\n\n            // Fill these metric series values with null otherwise these graph won't be displayed\n            noDataSeries.forEach(metric => {\n               let aggregated: number[];\n               if (metric.aggregatedBy && metric.aggregatedBy.length > 0) {\n                  // calculate aggregated value when metric is should be aggregated from other metrics\n                  perfData.metricsSeries.forEach(series => {\n                     if (metric.aggregatedBy.indexOf(series.key) !== -1) {\n                        if (!aggregated) {\n                           aggregated = series.values.slice();\n                        } else {\n                           series.values.forEach((val, index) => {\n                              // if both val are null, the aggregated result remains unchanged.\n                              // otherwise sum them as the new value\n                              if (aggregated[index] !== null || val !== null) {\n                                 aggregated[index] = (aggregated[index] || 0) + (val || 0);\n                              }\n                           });\n                        }\n                     }\n                  });\n               } else {\n                  aggregated = perfData.timeStamps.map(() => null);\n               }\n               perfData.metricsSeries.push(PerfGraphMetricsData.Factory.create(\n                     aggregated,\n                     null,\n                     metric.key,\n                     null,\n               ));\n            });\n         }\n         const graphsData: GraphMetric[] =\n               [new GraphMetric(perfData, graphs, GraphMetric.ENTITY_REF_ID_TOKEN_SEPARATOR + perfData.entityRefId)];\n         this.entityGraphsDataMap[cacheKey] = graphsData;\n         return graphsData;\n      }\n      return this.entityGraphsDataMap[cacheKey];\n   };\n\n   get noDataView(): UnavailableViewSpec {\n      if (!this.currentDashboardView) {\n         return null;\n      }\n      if (!this.hasGraphMetricsData) {\n         const isRecentTimeRange: boolean = VsanDateTimeUtils.isRecentTimeRange(this.currentTimeRange);\n         if (this.currentDashboardView.view === PerfDashboardView.CMMDS && !this.verboseModeEnabled) {\n            return isRecentTimeRange ? UnavailableViewSpec.PERF_FOR_SUPPORT_VIEW_CMMDS_NO_DATA :\n                  UnavailableViewSpec.PERF_FOR_SUPPORT_VIEW_CMMDS_NO_DATA_FOR_SELECTED_PERIOD;\n         }\n         return isRecentTimeRange ? UnavailableViewSpec.PERF_VIEW_NO_DATA :\n               UnavailableViewSpec.PERF_VIEW_NO_DATA_FOR_SELECTED_PERIOD;\n      }\n      return null;\n   }\n\n   /**\n    * Use this method to check if there is no metrics at all\n    */\n   get hasGraphMetricsData(): boolean {\n      return this.perfEntitiesStateData &&\n            this.perfEntitiesStateData.some(entityData => entityData.timeStamps.length > 0);\n   }\n\n   private getGraphDataCacheKey = (vsanUuid: string): string => {\n      return this.currentDashboardView.view + vsanUuid + (this.pivotalOnly ? \"_pivotal\" : \"_all\");\n   };\n\n   private get pivotalOnly(): boolean {\n      return this.currentPerfEntityStateData === null;\n   }\n\n   getPerfStateData = (serverObjectInfo: ServerObjectInfo): PerfEntityStateData => {\n      return this.perfEntitiesStateData\n            .find(entityData => entityData.entityRefId.indexOf(serverObjectInfo.vsanUuid) !== -1);\n   };\n\n   private getEntityDataRelatedServerObjectInfo = (perfData: PerfEntityStateData): ServerObjectInfo => {\n      return this.managedObjectExInfo\n            .find(mangedObjectInfo => perfData.entityRefId.indexOf(mangedObjectInfo.vsanUuid) !== -1);\n   };\n\n   @ErrorHandler()\n   private handleError(err: Error): void {\n      Logger.error(err);\n      this.perfEntitiesStateData = [];\n      if (err.message === PerfQueryErrors.INVALID_ENTITY_REF_ID_KEY()) {\n         this.allowReloadWhenError = false;\n         this.errorMessage = VsanUiUtils.getString(\"vsan.perf.service.chart.unsupportedEntityType.error\");\n      } else {\n         this.allowReloadWhenError = true;\n         this.errorMessage = VsanUiUtils.getString(\"vsan.perf.service.chart.common.error\");\n      }\n   }\n\n   /**\n    * Accepts the chart zoom options when user selects a range on the chart\n    */\n   onChartZoomIn = (opt: ChartZoomOption) => {\n      this.isZoomed = !opt.isZoomOut;\n      this.zoomOption = opt;\n   };\n\n   /**\n    * Reset the chart zoom level to default\n    */\n   onZoomOut = () => {\n      this.isZoomed = false;\n      const zoomOut: ChartZoomOption = new ChartZoomOption();\n      zoomOut.isZoomOut = true;\n      this.zoomOption = zoomOut;\n   };\n\n   showAllCharts = (serverObjectInfo: ServerObjectInfo) => {\n      const perfData: PerfEntityStateData = this.getPerfStateData(serverObjectInfo);\n      this.currentPerfEntityStateData = perfData;\n      this.resetSelectedEntityCache(perfData);\n      this.selectedPerfEntityName = serverObjectInfo.name;\n      this.selectedPerfEntityIcon = serverObjectInfo.icon;\n      this.selectedPerfEntityParentHost = null;\n      this.isZoomed = false;\n   };\n\n   showLessCharts = () => {\n      this.currentPerfEntityStateData = null;\n      this.selectedPerfEntityName = null;\n      this.selectedPerfEntityIcon = null;\n      this.selectedPerfEntityParentHost = null;\n   };\n\n   private resetSelectedEntityCache = (perfData: PerfEntityStateData) => {\n      // reset the cached graph config before redrawing the graphs\n      const cacheKey: string = this.getGraphDataCacheKey(this.getEntityDataRelatedServerObjectInfo(perfData).vsanUuid);\n      this.entityGraphsDataMap[cacheKey] = null;\n   };\n\n   isGraphDisplayed = (graphId: string): boolean => {\n      return this.displayedGraphs.some(graph => graph.id === graphId);\n   };\n\n   toggleGraphDisplay = (graph: PerfGraph) => {\n      if (this.isGraphDisplayed(graph.id)) {\n         // remove this chart from the displayed graphs list\n         this.displayedGraphs = this.displayedGraphs.filter(displayedGraph => graph.id !== displayedGraph.id);\n      } else {\n         // add the chart into the displayed graphs list\n         this.displayedGraphs = this.getDashboardGraphs(this.currentDashboardView)\n               .filter(displayedGraph => this.isGraphDisplayed(displayedGraph.id) || graph.id === displayedGraph.id);\n      }\n\n      // reset the graph data cache\n      this.entityGraphsDataMap = new Map();\n   };\n\n   onTimeRangeChange = (timeRange: PerfTimeRangeData, isOnInit: boolean) => {\n      // View might not be ready yet.\n      if (!this.currentDashboardView || (isOnInit && !this.isPersistedSelectionInitialized)) {\n         return;\n      }\n\n      // clear the cached data so the charts can be refreshed\n      this.entityGraphsDataMap = new Map();\n      this.perfEntitiesStateData = null;\n      this.entitiesStateDataMap[this.currentDashboardView.view] = null;\n      this.currentTimeRange = timeRange;\n      this.queryDashboardData(this.currentDashboardView.view, timeRange);\n\n      if (!isOnInit) {\n         this.perfPersistenceService.saveSelection(timeRange, this.timeRangePickerComponent.currentPickerState);\n      }\n   };\n\n   isNestedDashboard = (selectedDashboard: PerfDashboardView): boolean => {\n      return VsanPerfDashboardCategory.NESTED_DASHBOARDS.indexOf(selectedDashboard) !== -1;\n   };\n\n   onSubEntitySelected = (data: SubEntityInfo) => {\n      this.selectedPerfEntityIcon = data.entityIcon;\n      this.selectedPerfEntityName = data.entityName;\n      this.currentPerfEntityStateData = data.perfData;\n      this.selectedPerfEntityParentHost = data.parentHost;\n   };\n\n   get graphsForClusterAndHosts(): PerfGraph[] {\n      const clusterObj: ServerObjectInfo = this.managedObjectExInfo.find(serverObj => serverObj.isCluster);\n      if (!clusterObj) {\n         return [];\n      }\n      const clusterStateData: PerfEntityStateData = this.getPerfStateData(clusterObj);\n      if (!clusterStateData) {\n         return [];\n      }\n      const graphMetrics: GraphMetric = new GraphMetric(\n            clusterStateData,\n            this.getDashboardGraphs(this.currentDashboardView),\n            GraphMetric.ENTITY_REF_ID_TOKEN_SEPARATOR + clusterStateData.entityRefId);\n      return graphMetrics.graphs;\n   }\n\n   get graphsForHostsOnly(): PerfGraph[] {\n      const clusterGraphs: PerfGraph[] = this.graphsForClusterAndHosts;\n      return this.getDashboardGraphs(this.currentDashboardView)\n            .filter(graph => !clusterGraphs.find(clusterGraph => clusterGraph.id === graph.id));\n   }\n\n   get graphsForSelectedEntity(): PerfGraph[] {\n      const serverObj: ServerObjectInfo = this.managedObjectExInfo\n            .find(obj => this.currentPerfEntityStateData.entityRefId.indexOf(obj.vsanUuid) > -1);\n      const isClusterSelected: boolean = serverObj && serverObj.isCluster;\n      if (isClusterSelected) {\n         return this.graphsForClusterAndHosts;\n      }\n      return this.getDashboardGraphs(this.currentDashboardView);\n   }\n}\n\nexport class SubEntityInfo {\n   constructor(public parentHost: string,\n         public entityIcon: string,\n         public entityName: string,\n         public perfData: PerfEntityStateData) {\n   }\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardPnicData {\n   static readonly PNIC_CHARTS: PerfGraph[] = [\n      // Packets/sec chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.pnic.packets\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.packets.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"rxPackets\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.network.vnic.packets.rxPackets.label\")),\n               new PerfGraphMetrics(\"txPackets\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.network.vnic.packets.txPackets.label\")),\n            ]),\n      // Throughput chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.pnic.throughput\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.throughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"rxThroughput\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.throughput.rxThroughput.label\")),\n               new PerfGraphMetrics(\"txThroughput\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.throughput.txThroughput.label\")),\n            ]),\n      // Error Rate (per-mille)\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.pnic.loss.rate\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.network.pnic.errorRate.label\"),\n            PerfChartUtil.PERMILLE_TYPE,\n            [\n               new PerfGraphMetrics(\"rxPacketsLossRate\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.network.pnic.errorRate.rxPacketsLossRate.label\")),\n               new PerfGraphMetrics(\"txPacketsLossRate\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.network.pnic.errorRate.txPacketsLossRate.label\")),\n            ]),\n      // vSwitch Port Drops (per-mille)\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.pnic.packet.drops\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.packet.drops.label\"),\n            PerfChartUtil.PERMILLE_TYPE,\n            [\n               new PerfGraphMetrics(\"portRxDrops\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.packet.drops.portRxDrops.label\")),\n               new PerfGraphMetrics(\"portTxDrops\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.packet.drops.portTxDrops.label\")),\n            ]),\n      // IO Chain Drops (per-mille)\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.pnic.ioChainDrops\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.io.chain.drops.label\"),\n            PerfChartUtil.PERMILLE_TYPE,\n            [\n               new PerfGraphMetrics(\"ioChainRxdrops\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.hostnet.ioChainRxdrops.label\")),\n               new PerfGraphMetrics(\"ioChainTxdrops\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.hostnet.ioChainTxdrops.label\")),\n            ], null, false),\n      // Flow Control (per-mille)\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.pnic.pauseCount\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.network.pnic.pauseCount.label\"),\n            PerfChartUtil.PERMILLE_TYPE,\n            [\n               new PerfGraphMetrics(\"pauseCount\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.network.pnic.metrics.pauseCount.label\")),\n            ], null, false),\n   ];\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nexport enum PerfDashboardView {\n   DOMCLIENT,\n   DOMOWNER,\n   DOMCOMPMGR,\n   DOMCOMPSCHEDULER,\n   CACHEDISK,\n   CAPACITYDISK,\n   DISKGROUP,\n   DDHDISK,\n   SPARSEHOST,\n   PNIC,\n   VNIC,\n   TCPIP,\n   HOSTNETWORK,\n   CLOMHOST,\n   CLOMDISK,\n   HOSTMEMORY,\n   SYSMEMORY,\n   VSANMEMORY,\n   NET,\n   WORKLOAD,\n   DOMWORLDCPU,\n   LSOMWORLDCPU,\n   HOSTCPU,\n   VSANCPU,\n   VSANDISTRIBUTION,\n   CMMDS,\n   CLUSTERRESYNC,\n   DISK,\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardVnicData {\n   static readonly VNIC_CHARTS: PerfGraph[] = [\n      // Packets/sec chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.vnic.packets\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.packets.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"rxPackets\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.network.vnic.packets.rxPackets.label\")),\n               new PerfGraphMetrics(\"txPackets\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.network.vnic.packets.txPackets.label\")),\n            ]),\n      // Throughput chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.vnic.throughput\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.throughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"rxThroughput\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.throughput.rxThroughput.label\")),\n               new PerfGraphMetrics(\"txThroughput\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.throughput.txThroughput.label\")),\n            ]),\n      // Discards Rate (per-mille) chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.vnic.loss.rate\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.loss.rate.label\"),\n            PerfChartUtil.PERMILLE_TYPE,\n            [\n               new PerfGraphMetrics(\"rxPacketsLossRate\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.loss.rate.rxPacketsLossRate.label\")),\n               new PerfGraphMetrics(\"txPacketsLossRate\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.loss.rate.txPacketsLossRate.label\")),\n            ]),\n      // vSwitch Port Drops (per-mille) chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.vnic.packet.drops\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.packet.drops.label\"),\n            PerfChartUtil.PERMILLE_TYPE,\n            [\n               new PerfGraphMetrics(\"portRxDrops\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.packet.drops.portRxDrops.label\")),\n               new PerfGraphMetrics(\"portTxDrops\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.packet.drops.portTxDrops.label\")),\n            ]),\n      // IO Chain Drops (per-mille)\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.vnic.ioChainDrops\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.io.chain.drops.label\"),\n            PerfChartUtil.PERMILLE_TYPE,\n            [\n               new PerfGraphMetrics(\"ioChainRxdrops\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.hostnet.ioChainRxdrops.label\")),\n               new PerfGraphMetrics(\"ioChainTxdrops\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.hostnet.ioChainTxdrops.label\")),\n            ], null, false),\n   ];\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardHostNetworkData {\n   static readonly HOST_NETWORK_CHARTS: PerfGraph[] = [\n      // Packets/sec chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.hostnetwork.packets\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.packets.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"rxPackets\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.network.vnic.packets.rxPackets.label\")),\n               new PerfGraphMetrics(\"txPackets\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.network.vnic.packets.txPackets.label\")),\n            ]),\n      // Throughput chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.hostnetwork.throughput\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.throughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"rxThroughput\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.throughput.rxThroughput.label\")),\n               new PerfGraphMetrics(\"txThroughput\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.throughput.txThroughput.label\")),\n            ]),\n      // Discards Rate (per-mille) chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.hostnetwork.loss.rate\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.loss.rate.label\"),\n            PerfChartUtil.PERMILLE_TYPE,\n            [\n               new PerfGraphMetrics(\"rxPacketsLossRate\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.loss.rate.rxPacketsLossRate.label\")),\n               new PerfGraphMetrics(\"txPacketsLossRate\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.loss.rate.txPacketsLossRate.label\")),\n            ]),\n      // vSwitch Port Drops\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.hostnetwork.vswitchDrops\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.packet.drops.label\"),\n            PerfChartUtil.PERMILLE_TYPE,\n            [\n               new PerfGraphMetrics(\"portRxDrops\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.packet.drops.portRxDrops.label\")),\n               new PerfGraphMetrics(\"portTxDrops\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.packet.drops.portTxDrops.label\")),\n            ]),\n      // IO Chain Drops\n      PerfGraph.createPerfGraph(\n         \"com.vmware.vsan.perf.graph.network.hostnetwork.ioChainDrops\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.io.chain.drops.label\"),\n         PerfChartUtil.PERMILLE_TYPE,\n         [\n            new PerfGraphMetrics(\"ioChainRxdrops\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.hostnet.ioChainRxdrops.label\")),\n            new PerfGraphMetrics(\"ioChainTxdrops\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.hostnet.ioChainTxdrops.label\")),\n         ]),\n   ];\n}","<!-- Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div *ngIf=\"loading\" class=\"spinner central-spinner\"></div>\n<ng-container *ngIf=\"!loading\">\n   <ng-container *ngIf=\"displayEntityInfo !== displayEntityInfoType.ALL\">\n      <nav class=\"sidenav\" *ngFor=\"let host of hostSubEntities; let i=index\">\n         <section class=\"nav-group\">\n            <ng-container *ngFor=\"let graphMetric of graphsDataMap[host.hostName]; let j=index\">\n               <div class=\"sub-entity-dashboard nav-content\" [ngClass]=\"isNested ? 'nested-dashboard' : ''\">\n                  <ng-container *ngIf=\"displayEntityInfo === displayEntityInfoType.ONLY_SUB_ENTITIES\">\n                     <ng-container *ngTemplateOutlet=\"subEntityInfo; context: {host: host, graphMetric: graphMetric, i: i, j: j}\">\n                     </ng-container>\n                  </ng-container>\n                  <ng-container *ngTemplateOutlet=\"graphics; context: {host: host, graphMetric: graphMetric, i: i, j: j}\">\n                  </ng-container>\n               </div>\n            </ng-container>\n         </section>\n      </nav>\n   </ng-container>\n\n   <ng-container *ngIf=\"displayEntityInfo === displayEntityInfoType.ALL\">\n      <nav class=\"sidenav\" *ngFor=\"let host of hostSubEntities; let i=index\">\n         <section class=\"nav-group collapsible\">\n            <input id=\"check-{{i}}\" type=\"checkbox\">\n            <label for=\"check-{{i}}\">\n               <clr-icon shape=\"vsphere-icon-host\" class=\"is-info\"></clr-icon>\n               <span class=\"entity-name\">{{host.hostName}}</span>\n            </label>\n            <ng-container *ngFor=\"let graphMetric of graphsDataMap[host.hostName]; let j=index\">\n               <div class=\"sub-entity-dashboard nav-content\" [ngClass]=\"isNested ? 'nested-dashboard' : ''\">\n                  <ng-container *ngTemplateOutlet=\"subEntityInfo; context: {host: host, graphMetric: graphMetric, i: i, j: j}\">\n                  </ng-container>\n                  <ng-container *ngTemplateOutlet=\"graphics; context: {host: host, graphMetric: graphMetric, i: i, j: j}\">\n                  </ng-container>\n               </div>\n            </ng-container>\n         </section>\n      </nav>\n   </ng-container>\n</ng-container>\n\n<ng-template #subEntityInfo let-host=\"host\" let-graphMetric=\"graphMetric\" let-i=\"i\" let-j=\"j\">\n   <div class=\"sub-entity-info\">\n      <clr-icon [attr.shape]=\"getEntityIcon()\" class=\"is-info\"></clr-icon>\n      <span class=\"entity-name\">{{getEntityName(host, j)}}</span>\n      <button *ngIf=\"showAllSupported\"\n              id=\"show-all-btn-{{i}}-{{j}}\"\n              class=\"btn btn-sm btn-link\"\n              (click)=\"showAllCharts(host, graphMetric.metrics, getEntityName(host, j))\">\n         {{\"vsan.perf.advanced.dashboards.entity.graphs.showAll.label\" | localized}}\n      </button>\n   </div>\n</ng-template>\n\n<ng-template #graphics let-host=\"host\" let-graphMetric=\"graphMetric\" let-i=\"i\" let-j=\"j\">\n   <vsan-perf-charts-container id=\"charts-container-{{host.hostName}}-{{i}}-{{j}}\"\n                               [data]=\"[graphMetric]\"\n                               [isShowAllLinkVisible]=\"false\"\n                               [isZoomButtonVisible]=\"false\"\n                               [isShowGraphDescription]=\"false\"\n                               [looseXAxisLabel]=\"true\"\n                               [compactMode]=\"compactMode\"\n                               [zoomOutOptions]=\"zoomOption\"\n                               (zoom)=\"zoom.emit($event)\"\n                               *ngIf=\"graphMetric\">\n   </vsan-perf-charts-container>\n</ng-template>","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {PerfEntityStateData} from \"@generated/perf-entity-state-data\";\nimport {PerfGraph} from \"@component/chart/performance/perf-graph\";\nimport {GraphMetric} from \"@component/chart/performance/graph-metrics.data\";\nimport {ChartZoomOption} from \"@component/chart/performance/chart-zoom-option\";\nimport {SubEntityInfo} from \"./advanced-perf-dashboard.component\";\nimport {PerfDashboardView} from \"../model/perf-dashboard-view.data\";\nimport {\n   HostSubEntitiesData,\n   PerfDashboardSubEntitiesDataQueryService,\n   SubEntityObject,\n} from \"../util/perf-dashboard-sub-entities-data-query.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {PerfForSupportUtil} from \"../util/perf-for-support-util\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\n\n@Component({\n   selector: \"vsan-advanced-perf-sub-entity-dashboard\",\n   templateUrl: \"advanced-perf-sub-entity-dashboard.html\",\n   styleUrls: [\n      \"advanced-perf-sub-entity-dashboard.scss\",\n      \"advanced-perf-dashboard.scss\"],\n})\nexport class AdvancedPerfSubentityDashboard {\n   displayEntityInfoType: typeof DisplayEntityInfoType = DisplayEntityInfoType;\n\n   @Input()\n   private perfEntitiesStateData: PerfEntityStateData[];\n\n   @Input()\n   set displayedGraphs(val: PerfGraph[]) {\n      this._displayedGraphs = val;\n      this.resetGraphsDataMap();\n   }\n\n   get displayedGraphs(): PerfGraph[] {\n      return this._displayedGraphs;\n   }\n\n   @Input()\n   zoomOption: ChartZoomOption;\n\n   @Input()\n   clusterRef: ManagedObject = ManagedObject.contextObject;\n\n   @Input()\n   showAllSupported: boolean = true;\n\n   @Input()\n   filterObjects: HostSubEntitiesData[] = null;\n\n   @Input()\n   filterMetrics: string[] = null;\n\n   @Input()\n   preselectSubEntityName: string = null;\n\n   @Output()\n   preselectSubEntityNameChange: EventEmitter<string> = new EventEmitter<string>();\n\n   @Input()\n   displayEntityInfo: DisplayEntityInfoType = DisplayEntityInfoType.ALL;\n\n   @Input()\n   isNested: boolean = true;\n\n   _compactMode: boolean;\n   @Input()\n   set compactMode(val: boolean) {\n      this._compactMode = val;\n   }\n\n   // Charts are compact when:\n   // 1) Explicitly defined via compactMode property\n   // 2) Or compactMode property is not defined and charts are more than 2\n   get compactMode(): boolean {\n      return this._compactMode === true || (this.displayedGraphs?.length > 2 && VsanUiUtils.isUnset(this._compactMode));\n   }\n\n   @Input()\n   set view(val: PerfDashboardView) {\n      if (this._view === val) {\n         return;\n      }\n      this._view = val;\n\n      this.loadView();\n   }\n\n   get view(): PerfDashboardView {\n      return this._view;\n   }\n\n   @Loader()\n   private async loadView(): Promise<void> {\n      const subentitiesData: HostSubEntitiesData[] =\n            await this.perfDashboardQueryService.querySubEntities(this.clusterRef, this.view);\n\n      this.hostSubEntities = this.filterEntities(subentitiesData);\n      this.resetGraphsDataMap();\n\n      if (this.preselectSubEntityName) {\n         this.showMetricsForPreselectedEntity();\n      }\n   }\n\n   @ErrorHandler()\n   private handleError(err: string): void {\n      this.onError.emit(err);\n   }\n\n   /**\n    * Show all metrics for already preselected sub entity.\n    */\n   private showMetricsForPreselectedEntity(): void {\n      const selectedHost: HostSubEntitiesData = this.hostSubEntities.find(host =>\n            host.subentites.some(entity => entity.name === this.preselectSubEntityName));\n      if (!selectedHost) {\n         return;\n      }\n\n      const entityGraphMetric: GraphMetric = (this.graphsDataMap[selectedHost.hostName] as GraphMetric[])\n            .find(graphMetric => graphMetric.entityRefId.indexOf(this.preselectSubEntityName) !== -1);\n\n      this.showAllCharts(selectedHost, entityGraphMetric.metrics, this.preselectSubEntityName);\n      this.preselectSubEntityNameChange.emit(null);\n   }\n\n   /**\n    * Filter the fetched entities by the passed \"@Input() filterObjects\".\n    */\n   private filterEntities(subentitiesData: HostSubEntitiesData[]): HostSubEntitiesData[] {\n      if (!this.filterObjects || VsanUiUtils.isEmpty(this.filterObjects)) {\n         return subentitiesData;\n      }\n\n      const filteredEntitiesData: HostSubEntitiesData[] = [];\n      this.filterObjects.forEach(entity => {\n         const filteredEntityData: HostSubEntitiesData =\n               subentitiesData.find(e => e.hostName === entity.hostName);\n         let filteredSubEntitiesData: SubEntityObject[] = [];\n\n         if (filteredEntityData && !VsanUiUtils.isEmpty(entity.subentites)) {\n            entity.subentites.forEach(subEntity => {\n               const newSubEntityData: SubEntityObject =\n                     filteredEntityData.subentites.find(e => e.name === subEntity.name && e.uuid === subEntity.uuid);\n               if (newSubEntityData) {\n                  filteredSubEntitiesData.push(newSubEntityData);\n               }\n            });\n         } else {\n            filteredSubEntitiesData = filteredEntityData.subentites;\n         }\n\n         filteredEntitiesData.push(new HostSubEntitiesData(entity.hostName, filteredSubEntitiesData));\n      });\n      return filteredEntitiesData;\n   }\n\n   @Output()\n   onError: EventEmitter<string> = new EventEmitter();\n\n   @Output()\n   zoom: EventEmitter<ChartZoomOption> = new EventEmitter<ChartZoomOption>();\n\n   @Output()\n   private entitySelected: EventEmitter<any> = new EventEmitter();\n\n   hostSubEntities: HostSubEntitiesData[];\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   graphsDataMap: Map<string, GraphMetric[]>;\n\n   private _displayedGraphs: PerfGraph[];\n\n   private _view: PerfDashboardView;\n\n   constructor(private perfDashboardQueryService: PerfDashboardSubEntitiesDataQueryService) {\n   }\n\n   private resetGraphsDataMap = () => {\n      if (this.hostSubEntities) {\n         this.graphsDataMap = new Map();\n         this.hostSubEntities.forEach(hostSubEntitiesData =>\n               this.getAggregatedHostLevelEntitiesData(hostSubEntitiesData));\n      }\n   };\n\n   /**\n    * For some dashboards like diskgroup, vNic, etc. A host may have several these entities,\n    * we need to aggregate/group the data by hosts so the dashboards can be displayed clearly.\n    */\n   private getAggregatedHostLevelEntitiesData = (hostSubEntitiesData: HostSubEntitiesData) => {\n      if (this.graphsDataMap.hasOwnProperty(hostSubEntitiesData.hostName)) {\n         return;\n      }\n\n      const subentities: SubEntityObject[] = hostSubEntitiesData.subentites;\n      if (!subentities) {\n         return null;\n      }\n      this.graphsDataMap[hostSubEntitiesData.hostName] = subentities.map(entity => {\n         const entityUuid: string = entity.uuid;\n         return new GraphMetric(\n               this.perfEntitiesStateData.find(entityData => entityData.entityRefId.indexOf(entityUuid) !== -1),\n               this.displayedGraphs,\n               GraphMetric.ENTITY_REF_ID_TOKEN_SEPARATOR + entityUuid);\n      });\n   };\n\n   getEntityName = (hostSubEntitiesData: HostSubEntitiesData, index: number): string => {\n      return hostSubEntitiesData.subentites[index].name;\n   };\n\n   getEntityIcon(): string {\n      return PerfForSupportUtil.getEntityIcon(this.view);\n   }\n\n   showAllCharts = (host: HostSubEntitiesData, perfData: PerfEntityStateData, entityName: string) => {\n      const subEntity: SubEntityInfo = new SubEntityInfo(host.hostName,\n            PerfForSupportUtil.getEntityIcon(this.view), entityName, perfData);\n      this.entitySelected.emit(subEntity);\n   };\n}\n\n/**\n * Indicates what part of the entities/sub-entities info to be shown.\n */\nexport enum DisplayEntityInfoType {\n   ALL,\n   ONLY_SUB_ENTITIES,\n   NONE,\n}\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"@component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"@component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardCacheDiskData {\n   static readonly LSOM_CACHE_DISK_CHARTS: PerfGraph[] = [\n      // Device IOPS\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.deviceIOPS\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.deviceIOPS.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"iopsDevRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.deviceIOPS.iopsDevRead.label\")),\n            new PerfGraphMetrics(\"iopsDevWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.deviceIOPS.iopsDevWrite.label\")),\n         ]),\n      // Device Throughput\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devThroughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devThroughput.label\"),\n         PerfChartUtil.RATE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"throughputDevRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devThroughput.throughputDevRead.label\")),\n            new PerfGraphMetrics(\"throughputDevWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devThroughput.throughputDevWrite.label\")),\n         ]),\n      // Device Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.label\"),\n         PerfChartUtil.TIME_MS_TYPE,\n         [\n            new PerfGraphMetrics(\"latencyDevDAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevDAvg.label\")),\n            new PerfGraphMetrics(\"latencyDevKAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevKAvg.label\")),\n            new PerfGraphMetrics(\"latencyDevGAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevGAvg.label\")),\n            new PerfGraphMetrics(\"latencyDevRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevRead.label\")),\n            new PerfGraphMetrics(\"latencyDevWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevWrite.label\")),\n         ],\n         PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper)),\n      // Write buffer usage (percentage)\n      PerfGraph.createPerfGraph(\n            \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.writeBufferUsagePct\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.writeBufferUsagePct.label\"),\n            PerfChartUtil.PERCENTAGE_TYPE,\n            [\n               new PerfGraphMetrics(\"wbFreePct\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.writeBufferUsagePct.wbFreePct.label\")),\n               new PerfGraphMetrics(\"llogLogSpace\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.writeBufferUsagePct.llogLogSpace.label\")),\n               new PerfGraphMetrics(\"llogDataSpace\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.writeBufferUsagePct.llogDataSpace.label\")),\n               new PerfGraphMetrics(\"plogLogSpace\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.writeBufferUsagePct.plogLogSpace.label\")),\n               new PerfGraphMetrics(\"plogDataSpace\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.writeBufferUsagePct.plogDataSpace.label\")),\n               new PerfGraphMetrics(\"elevStartThresh\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.writeBufferUsagePct.elevStartThresh.label\")),\n               new PerfGraphMetrics(\"elevUnthrottleThresh\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.writeBufferUsagePct.elevUnthrottleThresh.label\")),\n            ]),\n      // PLOG Elev Throughput\n      PerfGraph.createPerfGraph(\n            \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevThroughput\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevThroughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"plogTotalBytesDrained\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevThroughput.plogTotalBytesDrained.label\")),\n               new PerfGraphMetrics(\"plogSsdBytesDrained\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevThroughput.plogSsdBytesDrained.label\")),\n               new PerfGraphMetrics(\"plogZeroBytesDrained\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevThroughput.plogZeroBytesDrained.label\")),\n            ]),\n      // RC Hit Rate\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.rcHitRate\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.rcHitRate.label\"),\n         PerfChartUtil.PERCENTAGE_TYPE,\n         [\n            new PerfGraphMetrics(\"rcHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.rcHitRate.rcHitRate.label\")),\n         ], null, false),\n      // Evictions\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.evictions\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.evictions.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"quotaEvictions\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.evictions.quotaEvictions.label\")),\n            new PerfGraphMetrics(\"warEvictions\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.evictions.warEvictions.label\")),\n         ], null, false),\n      // Write Buffer\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.wb\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.wb.label\"),\n         PerfChartUtil.PERCENTAGE_TYPE,\n         [\n            new PerfGraphMetrics(\"wbFreePct\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.wb.wbFreePct.label\")),\n            new PerfGraphMetrics(\"llogLogSpace\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.wb.llogLogSpace.label\")),\n            new PerfGraphMetrics(\"llogDataSpace\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.wb.llogDataSpace.label\")),\n            new PerfGraphMetrics(\"plogLogSpace\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.wb.plogLogSpace.label\")),\n            new PerfGraphMetrics(\"plogDataSpace\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.wb.plogDataSpace.label\")),\n         ], null, false),\n      // PLOG Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.label\"),\n         PerfChartUtil.TIME_MS_TYPE,\n         [\n            new PerfGraphMetrics(\"plogReadQLatency\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.plogReadQLatency.label\")),\n            new PerfGraphMetrics(\"plogWriteQLatency\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.plogWriteQLatency.label\")),\n            new PerfGraphMetrics(\"plogtotalRdLat\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.plogtotalRdLat.label\")),\n            new PerfGraphMetrics(\"plogtotalWrLat\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.plogtotalWrLat.label\")),\n            new PerfGraphMetrics(\"plogHelpRdQLat\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.plogHelpRdQLat.label\")),\n            new PerfGraphMetrics(\"plogHelpWrQLat\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.plogHelpWrQLat.label\")),\n         ],\n         PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper), false),\n      // PLOG Cumulative Enc Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogCumlEncLat\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogCumlEncLat.label\"),\n         PerfChartUtil.TIME_MS_TYPE,\n         [\n            new PerfGraphMetrics(\"plogCumlEncRdLat\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogCumlEncLat.plogCumlEncRdLat.label\")),\n            new PerfGraphMetrics(\"plogCumlEncWrLat\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogCumlEncLat.plogCumlEncWrLat.label\")),\n         ],\n         PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper), false),\n      // PLOG Average Queue Depth\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogHelpQDepth\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogHelpQDepth.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"plogHelpRdQDepth\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogHelpQDepth.plogHelpRdQDepth.label\")),\n            new PerfGraphMetrics(\"plogHelpWrQDepth\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogHelpQDepth.plogHelpWrQDepth.label\")),\n         ], null, false),\n      // PLOG Read Throughput\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.label\"),\n         PerfChartUtil.RATE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"plogTotalBytesRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.plogTotalBytesRead.label\")),\n            new PerfGraphMetrics(\"plogTotalBytesReadFromMD\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.plogTotalBytesReadFromMD.label\")),\n            new PerfGraphMetrics(\"plogTotalBytesReadFromSSD\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.plogTotalBytesReadFromSSD.label\")),\n            new PerfGraphMetrics(\"plogTotalBytesReadByRC\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.plogTotalBytesReadByRC.label\")),\n            new PerfGraphMetrics(\"plogTotalBytesReadByVMFS\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.plogTotalBytesReadByVMFS.label\")),\n         ], null, false),\n      // PLOG ReadOPS\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"plogNumTotalReads\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.plogNumTotalReads.label\")),\n            new PerfGraphMetrics(\"plogNumMDReads\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.plogNumMDReads.label\")),\n            new PerfGraphMetrics(\"plogNumSSDReads\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.plogNumSSDReads.label\")),\n            new PerfGraphMetrics(\"plogNumRCReads\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.plogNumRCReads.label\")),\n            new PerfGraphMetrics(\"plogNumVMFSReads\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.plogNumVMFSReads.label\")),\n         ], null, false),\n      // PLOG Data Usage\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogDataUsage\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogDataUsage.label\"),\n         PerfChartUtil.SIZE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"plogDGDataUsage\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogDataUsage.plogDGDataUsage.label\")),\n         ], null, false),\n      // PLOG Write Throughput\n      PerfGraph.createPerfGraph(\n            \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"plogTotalCSBytes\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalCSBytes.label\")),\n               new PerfGraphMetrics(\"plogTotalZeroBytes\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalZeroBytes.label\")),\n               new PerfGraphMetrics(\"plogTotalDelBytes\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalDelBytes.label\")),\n               new PerfGraphMetrics(\"plogTotalFSBytes\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalFSBytes.label\")),\n               new PerfGraphMetrics(\"plogTotalCFBytes\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalCFBytes.label\")),\n               new PerfGraphMetrics(\"plogTotalFSUnmapBytes\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalFSUnmapBytes.label\")),\n            ], null, false),\n      // PLOG Elev IOPs\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevIOPs\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevIOPs.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"plogNumElevSSDReads\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevIOPs.plogNumElevSSDReads.label\")),\n            new PerfGraphMetrics(\"plogNumElevMDWrites\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevIOPs.plogNumElevMDWrites.label\")),\n            new PerfGraphMetrics(\"plogElevCycles\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevIOPs.plogElevCycles.label\")),\n         ], null, false),\n      // PLOG Logs\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLogs\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLogs.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"plogNumWriteLogs\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLogs.plogNumWriteLogs.label\")),\n            new PerfGraphMetrics(\"plogNumCommitLogs\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLogs.plogNumCommitLogs.label\")),\n            new PerfGraphMetrics(\"plogNumFreedLogs\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLogs.plogNumFreedLogs.label\")),\n            new PerfGraphMetrics(\"plogNumFreedCommitLogs\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLogs.plogNumFreedCommitLogs.label\")),\n         ], null, false),\n      // LLOG Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogLatency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogLatency.label\"),\n         PerfChartUtil.TIME_MS_TYPE,\n         [\n            new PerfGraphMetrics(\"latencyRcRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogLatency.latencyRcRead.label\")),\n            new PerfGraphMetrics(\"latencyWbRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogLatency.latencyWbRead.label\")),\n            new PerfGraphMetrics(\"latencyRcWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogLatency.latencyRcWrite.label\")),\n            new PerfGraphMetrics(\"latencyWbWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogLatency.latencyWbWrite.label\")),\n            new PerfGraphMetrics(\"latencyRcRdQ\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogLatency.latencyRcRdQ.label\")),\n            new PerfGraphMetrics(\"latencyRcWrtQ\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogLatency.latencyRcWrtQ.label\")),\n            new PerfGraphMetrics(\"latencyWbRdQ\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogLatency.latencyWbRdQ.label\")),\n            new PerfGraphMetrics(\"latencyWbWrtQ\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogLatency.latencyWbWrtQ.label\")),\n         ],\n         PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper), false),\n      // LLOG IOPs\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogIOPs\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogIOPs.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"iopsRcRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogIOPs.iopsRcRead.label\")),\n            new PerfGraphMetrics(\"iopsWbRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogIOPs.iopsWbRead.label\")),\n            new PerfGraphMetrics(\"iopsRcWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogIOPs.iopsRcWrite.label\")),\n            new PerfGraphMetrics(\"iopsWbWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogIOPs.iopsWbWrite.label\")),\n         ], null, false),\n      // Block attribute cache size\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.blkAttrCcheSz\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.blkAttrCcheSz.label\"),\n         PerfChartUtil.SIZE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"blkAttrCcheSz\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.blkAttrCcheSz.blkAttrCcheSz.label\")),\n         ], null, false),\n      // Blk Attr cache hit rate\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.blkAttrCcheHitRt\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.blkAttrCcheHitRt.label\"),\n         PerfChartUtil.PERCENTAGE_TYPE,\n         [\n            new PerfGraphMetrics(\"blkAttrCcheHitRt\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.blkAttrCcheHitRt.blkAttrCcheHitRt.label\")),\n         ], null, false),\n   ];\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {LoadingFlowWrapper} from \"@service/flow/loading-flow-wrapper.data\";\n\n/**\n * This property decorator is supposed to be used along with the @Loader decorator.\n * If an exception is thrown during the execution of the method decorated with @Loader\n * the ErrorHandler method will be invoked. You can define as many ErrorHandlers as you want,\n * but they must be with different names. The name can be provided as input to the decorator.\n * If a name is set to the ErrorHandler it will handle only the errors thrown by Loader functions\n * with the same name. If no name is passed to the ErrorHandler, it will handle only the errors\n * from Loader functions with no name.\n *\n * <pre>\n * // Example 1:\n * @Loader()\n * loadSyncData(): any {\n *    throw new Error(\"Failed to load sync data\");\n * }\n *\n * @ErrorHandler()\n * handleError(err: any) {\n *    // handle the error.\n * }\n *...\n *\n * // Example 2\n *\n * @Loader({name: \"data-loading-flow})\n * async loadAsyncData(): Promise<any> {\n *    return Promise.reject(\"Failed to load async data\");\n * }\n *\n * @ErrorHandler({name: \"data-loading-flow})\n * handleError(err: any) {\n *    // handle the error.\n * }\n * ...\n * </pre>\n */\nexport function ErrorHandler(props?: ErrorHandlerProperties): MethodDecorator {\n   props = props || {};\n   return (targetClass: any, functionName: string, descriptor: PropertyDescriptor): void => {\n      (new LoadingFlowWrapper(targetClass, props.name)).errorHandler = descriptor.value;\n   };\n}\n\n/**\n * Properties of the ErrorHandler decorator.\n */\nexport interface ErrorHandlerProperties {\n\n   /**\n    * Indicates which @Loder should be handled by this @ErrorHandler\n    */\n   name?: string;\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n/**\n * IDs used in external KB link navigation\n */\nexport enum KnowledgeBaseId {\n   PRECHECK_PCP = \"83954\",\n   VIRTUAL_OBJECTS = \"2108319\",\n   UPGRADE = \"2148493\",\n   PERFORMANCE_DIAGNOSTICS = \"2148770\",\n   SUPPORT_INSIGHT = \"60206\",\n}\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardCapacityDiskData {\n   static readonly LSOM_CAPACITY_DISK_CHARTS: PerfGraph[] = [\n      // Device IOPS\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.deviceIOPS\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.deviceIOPS.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"iopsDevRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.deviceIOPS.iopsDevRead.label\")),\n            new PerfGraphMetrics(\"iopsDevWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.deviceIOPS.iopsDevWrite.label\")),\n         ]),\n      // Device Throughput\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.devThroughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devThroughput.label\"),\n         PerfChartUtil.RATE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"throughputDevRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devThroughput.throughputDevRead.label\")),\n            new PerfGraphMetrics(\"throughputDevWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devThroughput.throughputDevWrite.label\")),\n         ]),\n      // Device Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.devLatency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.label\"),\n         PerfChartUtil.TIME_MS_TYPE,\n         [\n            new PerfGraphMetrics(\"latencyDevDAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevDAvg.label\")),\n            new PerfGraphMetrics(\"latencyDevKAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevKAvg.label\")),\n            new PerfGraphMetrics(\"latencyDevGAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevGAvg.label\")),\n            new PerfGraphMetrics(\"latencyDevRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevRead.label\")),\n            new PerfGraphMetrics(\"latencyDevWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevWrite.label\")),\n         ],\n         PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper)),\n      // PLOG Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.plogLatency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.label\"),\n         PerfChartUtil.TIME_MS_TYPE,\n         [\n            new PerfGraphMetrics(\"plogReadQLatency\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.plogReadQLatency.label\")),\n            new PerfGraphMetrics(\"plogWriteQLatency\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.plogWriteQLatency.label\")),\n            new PerfGraphMetrics(\"plogHelpRdQLat\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.plogHelpRdQLat.label\")),\n            new PerfGraphMetrics(\"plogHelpWrQLat\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.plogHelpWrQLat.label\")),\n         ],\n         PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper), false),\n      // PLOG Cumulative Enc Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.plogCumlEncLat\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogCumlEncLat.label\"),\n         PerfChartUtil.TIME_MS_TYPE,\n         [\n            new PerfGraphMetrics(\"plogCumlEncRdLat\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogCumlEncLat.plogCumlEncRdLat.label\")),\n            new PerfGraphMetrics(\"plogCumlEncWrLat\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogCumlEncLat.plogCumlEncWrLat.label\")),\n         ],\n         PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper), false),\n      // PLOG Average Queue Depth\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.plogHelpQDepth\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogHelpQDepth.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"plogHelpRdQDepth\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogHelpQDepth.plogHelpRdQDepth.label\")),\n            new PerfGraphMetrics(\"plogHelpWrQDepth\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogHelpQDepth.plogHelpWrQDepth.label\")),\n         ], null, false),\n      // Capactiy\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.capacity\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.capacity.label\"),\n         PerfChartUtil.SIZE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"capacityUsed\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.capacity.capacityUsed.label\"))\n         ], null, false),\n      // PLOG Read Throughput\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.plogReadThroughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.label\"),\n         PerfChartUtil.RATE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"plogTotalBytesRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.plogTotalBytesRead.label\")),\n            new PerfGraphMetrics(\"plogTotalBytesReadFromMD\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.plogTotalBytesReadFromMD.label\")),\n            new PerfGraphMetrics(\"plogTotalBytesReadFromSSD\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.plogTotalBytesReadFromSSD.label\")),\n            new PerfGraphMetrics(\"plogTotalBytesReadByRC\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.plogTotalBytesReadByRC.label\")),\n            new PerfGraphMetrics(\"plogTotalBytesReadByVMFS\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.plogTotalBytesReadByVMFS.label\")),\n         ], null, false),\n      // PLOG ReadOPS\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.plogReadOps\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"plogNumTotalReads\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.plogNumTotalReads.label\")),\n            new PerfGraphMetrics(\"plogNumMDReads\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.plogNumMDReads.label\")),\n            new PerfGraphMetrics(\"plogNumSSDReads\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.plogNumSSDReads.label\")),\n            new PerfGraphMetrics(\"plogNumRCReads\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.plogNumRCReads.label\")),\n            new PerfGraphMetrics(\"plogNumVMFSReads\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.plogNumVMFSReads.label\")),\n         ], null, false),\n      // PLOG Data Usage\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.plogDataUsage\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogDataUsage.label\"),\n         PerfChartUtil.SIZE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"plogDGDataUsage\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogDataUsage.plogDGDataUsage.label\")),\n         ], null, false),\n      // PLOG Write Throughput\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.plogWriteThroughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.label\"),\n         PerfChartUtil.RATE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"plogTotalCSBytes\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalCSBytes.label\")),\n            new PerfGraphMetrics(\"plogTotalZeroBytes\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalZeroBytes.label\")),\n            new PerfGraphMetrics(\"plogTotalDelBytes\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalDelBytes.label\")),\n            new PerfGraphMetrics(\"plogTotalFSBytes\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalFSBytes.label\")),\n            new PerfGraphMetrics(\"plogTotalCFBytes\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalCFBytes.label\")),\n            new PerfGraphMetrics(\"plogTotalFSUnmapBytes\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalFSUnmapBytes.label\")),\n            new PerfGraphMetrics(\"plogTotalCFUnmapBytes\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalCFUnmapBytes.label\")),\n         ], null, false),\n      // PLOG Elev Throughput\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.plogElevThroughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevThroughput.label\"),\n         PerfChartUtil.RATE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"plogTotalBytesDrained\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevThroughput.plogTotalBytesDrained.label\")),\n            new PerfGraphMetrics(\"plogSsdBytesDrained\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevThroughput.plogSsdBytesDrained.label\")),\n            new PerfGraphMetrics(\"plogZeroBytesDrained\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevThroughput.plogZeroBytesDrained.label\")),\n         ]),\n      // PLOG Elev IOPs\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.plogElevIOPs\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevIOPs.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"plogNumElevSSDReads\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevIOPs.plogNumElevSSDReads.label\")),\n            new PerfGraphMetrics(\"plogNumElevMDWrites\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevIOPs.plogNumElevMDWrites.label\")),\n            new PerfGraphMetrics(\"plogElevCycles\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevIOPs.plogElevCycles.label\")),\n         ], null, false),\n      // Virsto Map Blocks\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.virstoMapBlocks\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMapBlock.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"virstoValidMapBlocks\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMapBlock.virstoValidMapBlocks.label\")),\n            new PerfGraphMetrics(\"virstoInvalidMapBlocks\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMapBlock.virstoInvalidMapBlocks.label\")),\n            new PerfGraphMetrics(\"virstoDirtyMapBlocks\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMapBlock.virstoDirtyMapBlocks.label\")),\n            new PerfGraphMetrics(\"virstoFreeMapBlocks\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMapBlock.virstoFreeMapBlocks.label\")),\n         ], null, false),\n      // Virsto Map Block Cache\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.virstoMapBlockCache\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMapBlockCache.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"virstoMapBlockCacheHitsPerSec\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMapBlockCache.virstoMapBlockCacheHitsPerSec.label\")),\n            new PerfGraphMetrics(\"virstoMapBlockCacheMissesPerSec\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMapBlockCache.virstoMapBlockCacheMissesPerSec.label\")),\n            new PerfGraphMetrics(\"virstoMapBlockCacheEvictionsPerSec\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMapBlockCache.virstoMapBlockCacheEvictionsPerSec.label\")),\n         ], null, false),\n      // Virsto Metadata Flusher Runs\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.virstoMetadataFlusherRuns\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMetadataFlusherRuns.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"virstoMetadataFlusherRunsPerSec\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMetadataFlusherRunsPerSec.label\")),\n         ], null, false),\n      // Virsto Metadata Pending data\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.virstoMetadataFlusherPendingData\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMetadataFlusherPendingData.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"virstoMetadataFlusherPendingBuffers\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMetadataFlusherPendingBuffers.label\")),\n         ], null, false),\n      // Virsto Metadata Flush Tput\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.virstoMetadataFlushedPerRun\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMetadataFlushed.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"virstoMetadataFlushedPerRun\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMetadataFlushedPerRun.label\")),\n         ], null, false),\n      // Virsto Instance\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.virstoInstance\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoInstance.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"virstoInstanceHeapUtilization\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoInstanceHeapUtilization.label\")),\n         ], null, false),\n      // Commit Flusher Components\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.commitFlusherComp\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.commitFlusherComp.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"commitFlusherComponentsToFlush\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.commitFlusherComponentsToFlush.label\")),\n         ], null, false),\n      // Commit Flusher Extents\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.commitFlusherExtents\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.commitFlusherExtents.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"commitFlusherExtentsProcessed\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.commitFlusherExtentsProcessed.label\")),\n            new PerfGraphMetrics(\"commitFlusherExtentSizeProcessed\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.commitFlusherExtentSizeProcessed.label\")),\n         ], null, false),\n      // Time in commit flusher\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.timeInCommitFlusher\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.timeInCommitFlusher.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cfTime\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.cfTime.label\")),\n            new PerfGraphMetrics(\"blkAttrFlshTime\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.blkAttrFlshTime.label\")),\n            new PerfGraphMetrics(\"vrstBarrTime\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.vrstBarrTime.label\")),\n            new PerfGraphMetrics(\"plogIOTime\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.plogIOTime.label\")),\n         ], null, false),\n      // Commit flusher run breakdown\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.commitFlusherRunBreakdown\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.commitFlusherRunBreakdown.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"numCFAct\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.numCFAct.label\")),\n            new PerfGraphMetrics(\"numCksumFlsh\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.numCksumFlsh.label\")),\n            new PerfGraphMetrics(\"numVrstBar\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.numVrstBar.label\")),\n            new PerfGraphMetrics(\"numPlogIOs\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.numPlogIOs.label\")),\n         ], null, false),\n      // Checksum Error\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.checksumErrors\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.checksumErrors.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"checksumErrors\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.checksumErrors.label\")),\n         ], null, false),\n   ];\n}\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardDomClientData {\n   static readonly DOM_CLIENT_CHARTS: PerfGraph[] = [\n      // Latency chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domClient.latency\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domclient.latency.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyAvgRead\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.domclient.latency.metrics.read.label\")),\n               new PerfGraphMetrics(\"latencyAvgWrite\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.domclient.latency.metrics.write.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper)),\n      // IOPS chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domClient.iops\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domclient.iops.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsRead\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.domclient.iops.metrics.read.label\")),\n               new PerfGraphMetrics(\"iopsWrite\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.domclient.iops.metrics.write.label\")),\n            ]),\n      // Throughput chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domClient.throughput\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domclient.throughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"throughputRead\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.domclient.throughput.metrics.read.label\")),\n               new PerfGraphMetrics(\"throughputWrite\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.domclient.throughput.metrics.write.label\")),\n            ]),\n      // Congestion chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domClient.congestion\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domclient.congestion.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"congestion\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.domclient.congestion.metrics.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30, 60, PerfGraphThresholdDirection.upper)),\n      // Outstanding IO chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domClient.oio\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domclient.oio.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"oio\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.domclient.oio.metrics.label\")),\n            ]),\n      // LatencyStddev chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domClient.latencyStddev\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domclient.latencyStddev.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyStddev\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domclient.latencyStddev.metrics.label\")),\n               new PerfGraphMetrics(\"latencyStddevUnmap\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.latencyStddev.latencyStddevUnmap.label\")),\n               new PerfGraphMetrics(\"latencyStddevWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domclient.latencyStddevWrite.metrics.label\")),\n               new PerfGraphMetrics(\"latencyStddevRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domclient.latencyStddevRead.metrics.label\"))\n            ]),\n      // clientCacheHits chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domClient.clientCacheHits\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domclient.clientCacheHits.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsRead\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.domclient.iops.metrics.read.label\")),\n            ], null, false),\n   ];\n}\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardClomDiskData {\n   static readonly CLOM_DISK_CHARTS: PerfGraph[] = [\n      // Disk Component Count Ratio\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.diskCompCntRatio\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.diskCompCntRatio.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"diskCompCntRatio\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.diskCompCntRatio.label\")),\n            ]),\n      // Disk Data Component Count Ratio\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.diskDataCompCntRatio\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.diskDataCompCntRatio.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"diskDataCompCntRatio\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.diskDataCompCntRatio.label\")),\n            ]),\n      // Diskgroup data Component Count Ratio\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.diskgrpDataCompCntRatio\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.diskgrpDataCompCntRatio.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"diskgrpDataCompCntRatio\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.diskgrpDataCompCntRatio.label\")),\n            ]),\n\n      // Disk Fullness\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.diskFullness\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.diskFullness.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"diskFullness\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.diskFullness.label\")),\n            ], null, false),\n      // Fitness\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.fitness\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.fitness.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"fitness\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.fitness.label\")),\n            ], null, false),\n      // Max Actual Reserved Space Utilization\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.maxActResvSpaceUtil\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.maxActResvSpaceUtil.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"maxActResvSpaceUtil\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.maxActResvSpaceUtil.label\")),\n            ], null, false),\n      // Read Cache Reservation Utilization\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.rcResvUtil\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.rcResvUtil.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"rcResvUtil\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.rcResvUtil.label\")),\n            ], null, false),\n      // Resource Standard Deviation Change\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.resourceStddevChange\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.resourceStddevChange.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"resourceStddevChange\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.resourceStddevChange.label\")),\n            ], null, false),\n      // Unreserved Address Space Utilization\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.unresvAddrSpaceUtil\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.unresvAddrSpaceUtil.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"unresvAddrSpaceUtil\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.unresvAddrSpaceUtil.label\")),\n            ], null, false),\n      // Usage Variance\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.usageVariance\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.usageVariance.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"usageVariance\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.usageVariance.label\")),\n            ], null, false),\n      // Version Weight\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.versionWeight\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.versionWeight.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"versionWeight\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.versionWeight.label\")),\n            ], null, false),\n   ];\n}\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardMemoryHostData {\n   static readonly MEMORY_HOST_CHARTS: PerfGraph[] = [\n      // Slab Utilization\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.memory.slabUtil\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.memory.slabUtil.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"slabUtil\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.memory.metrics.slabUtil.label\")),\n            ], null, true),\n      // Heap Utilization\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.memory.heapUtil\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.memory.heapUtil.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"heapUtil\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.memory.metrics.heapUtil.label\")),\n            ], null, true),\n   ];\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\n\nexport class PerfDashboardHostNetworkTcpipData {\n   static readonly HOST_NETWORK_TCPIP_CHARTS: PerfGraph[] = [\n      // Packets/sec chart\n      PerfGraph.createPerfGraph(\n         \"com.vmware.vsan.perf.graph.network.hostnetwork.tcpip.packets\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.packets.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"tcpRxPackets\",\n                  VsanUiUtils.getString(\n                        \"vsan.perf.advanced.dashboards.network.vnic.packets.rxPackets.label\")),\n            new PerfGraphMetrics(\"tcpTxPackets\",\n                  VsanUiUtils.getString(\n                        \"vsan.perf.advanced.dashboards.network.vnic.packets.txPackets.label\")),\n         ]),\n      // Throughput chart\n      PerfGraph.createPerfGraph(\n         \"com.vmware.vsan.perf.graph.network.hostnetwork.tcpip.throughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.throughput.label\"),\n         PerfChartUtil.RATE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"tcpRxThroughput\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.vnic.throughput.rxThroughput.label\")),\n            new PerfGraphMetrics(\"tcpTxThroughput\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.vnic.throughput.txThroughput.label\")),\n         ]),\n      // TCP Connections\n      PerfGraph.createPerfGraph(\n         \"com.vmware.vsan.perf.graph.network.hostnetwork.tcpip.connections\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.tcpip.connections.label\"),\n         PerfChartUtil.PERMILLE_TYPE,\n         [\n            new PerfGraphMetrics(\"tcpHalfopenDropRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.tcpip.halfopenDropRate.label\")),\n            new PerfGraphMetrics(\"tcpTimeoutDropRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.tcpip.timeoutDropRate.label\")),\n         ]),\n      // TCP Transmission\n      PerfGraph.createPerfGraph(\n         \"com.vmware.vsan.perf.graph.network.hostnetwork.tcpip.transmission\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.tcpip.transmission.label\"),\n         PerfChartUtil.PERMILLE_TYPE,\n         [\n            new PerfGraphMetrics(\"tcpTxRexmitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.vnic.loss.rate.tcpTxRexmitRate.label\")),\n            new PerfGraphMetrics(\"tcpRcvdupackRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.tcpip.tcpRcvdupackRate.label\")),\n            new PerfGraphMetrics(\"tcpRcvoopackRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.tcpip.tcpRcvoopackRate.label\")),\n            new PerfGraphMetrics(\"tcpRcvduppackRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.tcpip.tcpRcvduppackRate.label\")),\n            new PerfGraphMetrics(\"tcpSackSendBlocksRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.tcpip.tcpSackSendBlocksRate.label\")),\n            new PerfGraphMetrics(\"tcpSackRcvBlocksRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.tcpip.tcpSackRcvBlocksRate.label\")),\n            new PerfGraphMetrics(\"tcpSackRexmitsRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.tcpip.tcpSackRexmitsRate.label\")),\n         ]),\n      // TCP/IP Errors\n      PerfGraph.createPerfGraph(\n         \"com.vmware.vsan.perf.graph.network.hostnetwork.tcpip.error.rate\",\n         VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.network.hostnetwork.tcpip.errorRate.label\"),\n         PerfChartUtil.PERMILLE_TYPE,\n         [\n            new PerfGraphMetrics(\"tcpErrs\", VsanUiUtils.getString(\n                  \"com.vmware.vsan.perf.graph.network.hostnetwork.tcpip.errorRate.tcpError.label\")),\n            new PerfGraphMetrics(\"ipErrs\", VsanUiUtils.getString(\n                  \"com.vmware.vsan.perf.graph.network.hostnetwork.tcpip.errorRate.ipv4Error.label\")),\n            new PerfGraphMetrics(\"ip6Errs\", VsanUiUtils.getString(\n                  \"com.vmware.vsan.perf.graph.network.hostnetwork.tcpip.errorRate.ipv6Error.label\")),\n         ]),\n      // TCP Congestion\n      PerfGraph.createPerfGraph(\n         \"com.vmware.vsan.perf.graph.network.hostnetwork.tcpip.congestion\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.tcpip.congestion.label\"),\n            PerfChartUtil.PERCENTAGE_TYPE,\n         [\n            new PerfGraphMetrics(\"tcpSndZeroWin\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.tcpip.tcpSndZeroWin.label\")),\n         ]),\n   ];\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {PerfDashboardView} from \"../model/perf-dashboard-view.data\";\nimport {Icon} from \"@util/icon\";\n\nexport class PerfForSupportUtil {\n   static getEntityIcon(view: PerfDashboardView): string {\n      switch (view) {\n         case PerfDashboardView.DOMCOMPSCHEDULER:\n         case PerfDashboardView.CACHEDISK:\n            return Icon.CLAIM_AS_CACHE;\n         case PerfDashboardView.CLOMDISK:\n         case PerfDashboardView.CAPACITYDISK:\n            return Icon.CLAIM_AS_CAPACITY;\n         case PerfDashboardView.DISKGROUP:\n            return Icon.DISK_GROUP_IMAGE;\n         case PerfDashboardView.DDHDISK:\n            return Icon.DISK;\n         case PerfDashboardView.VNIC:\n            return Icon.VIRTUAL_ADAPTER;\n         case PerfDashboardView.PNIC:\n            return Icon.PHYSICAL_ADAPTER;\n         default:\n            return \"\";\n      }\n   }\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardDomCompSchedulerData {\n   static readonly DOM_COMP_SCHEDULER_CHARTS: PerfGraph[] = [\n      // Latency chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domScheduler.latency\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domCompmgr.latency.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencySched\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latencySched.label\")),\n\n               new PerfGraphMetrics(\"latResyncRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latResyncRead.label\")),\n               new PerfGraphMetrics(\"latResyncWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latResyncWrite.label\")),\n               new PerfGraphMetrics(\"latResyncReadPolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latResyncReadPolicy.label\")),\n               new PerfGraphMetrics(\"latResyncWritePolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latResyncWritePolicy.label\")),\n               new PerfGraphMetrics(\"latResyncReadDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latResyncReadDecom.label\")),\n               new PerfGraphMetrics(\"latResyncWriteDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latResyncWriteDecom.label\")),\n               new PerfGraphMetrics(\"latResyncReadRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latResyncReadRebalance.label\")),\n               new PerfGraphMetrics(\"latResyncWriteRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latResyncWriteRebalance.label\")),\n               new PerfGraphMetrics(\"latResyncReadFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latResyncReadFixComp.label\")),\n               new PerfGraphMetrics(\"latResyncWriteFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latResyncWriteFixComp.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper),\n      ),\n      // IOPS chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domCompScheduler.iops\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domCompmgr.iops.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsDirectSched\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsDirectSched.label\")),\n\n               new PerfGraphMetrics(\"iopsResyncRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsResyncRead.label\")),\n               new PerfGraphMetrics(\"iopsResyncWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsResyncWrite.label\")),\n               new PerfGraphMetrics(\"iopsResyncReadPolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsResyncReadPolicy.label\")),\n               new PerfGraphMetrics(\"iopsResyncWritePolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsResyncWritePolicy.label\")),\n               new PerfGraphMetrics(\"iopsResyncReadDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsResyncReadDecom.label\")),\n               new PerfGraphMetrics(\"iopsResyncWriteDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsResyncWriteDecom.label\")),\n               new PerfGraphMetrics(\"iopsResyncReadRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsResyncReadRebalance.label\")),\n               new PerfGraphMetrics(\"iopsResyncWriteRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsResyncWriteRebalance.label\")),\n               new PerfGraphMetrics(\"iopsResyncReadFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsResyncReadFixComp.label\")),\n               new PerfGraphMetrics(\"iopsResyncWriteFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsResyncWriteFixComp.label\")),\n            ],\n      ),\n      // Throughput chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domCompScheduler.throughput\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domCompmgr.throughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"tputResyncRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.throughput.tputResyncRead.label\")),\n               new PerfGraphMetrics(\"tputResyncWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.throughput.tputResyncWrite.label\")),\n               new PerfGraphMetrics(\"tputResyncReadPolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.throughput.tputResyncReadPolicy.label\")),\n               new PerfGraphMetrics(\"tputResyncWritePolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.throughput.tputResyncWritePolicy.label\")),\n               new PerfGraphMetrics(\"tputResyncReadDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.throughput.tputResyncReadDecom.label\")),\n               new PerfGraphMetrics(\"tputResyncWriteDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.throughput.tputResyncWriteDecom.label\")),\n               new PerfGraphMetrics(\"tputResyncReadRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.throughput.tputResyncReadRebalance.label\")),\n               new PerfGraphMetrics(\"tputResyncWriteRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.throughput.tputResyncWriteRebalance.label\")),\n               new PerfGraphMetrics(\"tputResyncReadFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.throughput.tputResyncReadFixComp.label\")),\n               new PerfGraphMetrics(\"tputResyncWriteFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.throughput.tputResyncWriteFixComp.label\")),\n            ],\n      ),\n      // Outstanding Bytes chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domScheduler.outstandingBytesSched\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domScheduler.outstandingBytesSched.label\"),\n            PerfChartUtil.SIZE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"outstandingBytesSched\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.outstandingBytesSched.label\")),\n            ],\n      ),\n      // Percentage IO Delay\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domScheduler.iopsDelayPctSched\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.domScheduler.iopsDelayPctSched.label\"),\n            PerfChartUtil.PERCENTAGE_TYPE,\n            [\n               new PerfGraphMetrics(\"iopsDelayPctSched\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domScheduler.iopsDelayPctSched.label\")),\n            ],\n      ),\n      // Disk Level Congestion\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domScheduler.diskLevelCongestion\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.domScheduler.diskLevelCongestion.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"componentCongestionReadSched\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domScheduler.congestion.componentCongestionReadSched.label\")),\n               new PerfGraphMetrics(\"componentCongestionWriteSched\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domScheduler.congestion.componentCongestionWriteSched.label\")),\n               new PerfGraphMetrics(\"diskgroupCongestionReadSched\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domScheduler.congestion.diskgroupCongestionReadSched.label\")),\n               new PerfGraphMetrics(\"diskgroupCongestionWriteSched\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domScheduler.congestion.diskgroupCongestionWriteSched.label\")),\n            ],\n      ),\n      // Delayed IO Average Latency\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domSchedular.delayedLatencyAvg\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.domSchedular.delayedLatencyAvg.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyDelaySched\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedLatencyAvg.latencyDelaySched.label\")),\n               new PerfGraphMetrics(\"latencySchedQueueNS\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedLatencyAvg.latencySchedQueueNS.label\")),\n               new PerfGraphMetrics(\"latencySchedQueueRec\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedLatencyAvg.latencySchedQueueRec.label\")),\n               new PerfGraphMetrics(\"latencySchedQueueVM\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedLatencyAvg.latencySchedQueueVM.label\")),\n               new PerfGraphMetrics(\"latencySchedQueueMeta\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedLatencyAvg.latencySchedQueueMeta.label\")),\n            ], null, false),\n      // Delayed IOPS\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domSchedular.delayedIops\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.domSchedular.delayedIops.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsSched\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedIops.iopsSched.label\")),\n               new PerfGraphMetrics(\"iopsSchedQueueNS\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedIops.iopsSchedQueueNS.label\")),\n               new PerfGraphMetrics(\"iopsSchedQueueRec\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedIops.iopsSchedQueueRec.label\")),\n               new PerfGraphMetrics(\"iopsSchedQueueVM\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedIops.iopsSchedQueueVM.label\")),\n               new PerfGraphMetrics(\"iopsSchedQueueMeta\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedIops.iopsSchedQueueMeta.label\")),\n            ], null, false),\n      // Delayed IO Throughput\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domSchedular.delayedThroughput\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.domSchedular.delayedThroughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"throughputSched\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedThroughput.throughputSched.label\")),\n               new PerfGraphMetrics(\"throughputSchedQueueNS\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedThroughput.throughputSchedQueueNS.label\")),\n               new PerfGraphMetrics(\"throughputSchedQueueRec\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedThroughput.throughputSchedQueueRec.label\")),\n               new PerfGraphMetrics(\"throughputSchedQueueVM\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedThroughput.throughputSchedQueueVM.label\")),\n               new PerfGraphMetrics(\"throughputSchedQueueMeta\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedThroughput.throughputSchedQueueMeta.label\")),\n            ], null, false),\n   ];\n}","/* Copyright 2018-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardDomOwnerData {\n   static readonly DOM_OWNER_CHARTS: PerfGraph[] = [\n      // Latency chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domOwner.latency\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domowner.latency.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyAvgRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.latency.latencyAvgRead.label\")),\n               new PerfGraphMetrics(\"latencyAvgWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.latency.latencyAvgWrite.label\")),\n               new PerfGraphMetrics(\"latencyAvgResyncRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.latency.latencyAvgResyncRead.label\")),\n               new PerfGraphMetrics(\"latencyAvgRecWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.latency.latencyAvgRecWrite.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper),\n      ),\n      // IOPS chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domOwner.iops\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domowner.iops.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.iops.iopsRead.label\")),\n               new PerfGraphMetrics(\"iopsWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.iops.iopsWrite.label\")),\n               new PerfGraphMetrics(\"iopsResyncRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.iops.iopsResyncRead.label\")),\n               new PerfGraphMetrics(\"iopsRecWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.iops.iopsRecWrite.label\")),\n            ],\n      ),\n      // Throughput chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domOwner.throughput\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domowner.throughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"tputRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.throughput.tputRead.label\")),\n               new PerfGraphMetrics(\"tputWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.throughput.tputWrite.label\")),\n               new PerfGraphMetrics(\"tputResyncRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.throughput.tputResyncRead.label\")),\n               new PerfGraphMetrics(\"tputRecWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.throughput.tputRecWrite.label\")),\n            ],\n      ),\n      // Congestion chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domOwner.congestion\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domowner.congestion.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"readCongestion\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.congestion.readCongestion.label\")),\n               new PerfGraphMetrics(\"writeCongestion\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.congestion.writeCongestion.label\")),\n               new PerfGraphMetrics(\"recoveryWriteCongestion\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.congestion.recoveryWriteCongestion.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30, 60, PerfGraphThresholdDirection.upper),\n      ),\n      // Outstanding IO cahrt\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domOwner.oio\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domowner.oio.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"oio\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.oio.oio.label\")),\n            ],\n      ),\n      // latencyStddev chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domOwner.latencyStddev\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domowner.latencyStddev.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyStddev\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.latencyStddev.latencyStddev.label\")),\n               new PerfGraphMetrics(\"latencyStddevUnmap\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.latencyStddev.latencyStddevUnmap.label\")),\n               new PerfGraphMetrics(\"latencyStddevWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domclient.latencyStddevWrite.metrics.label\")),\n               new PerfGraphMetrics(\"latencyStddevRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domclient.latencyStddevRead.metrics.label\"))\n            ],\n      ),\n      PerfGraph.createPerfGraph(\n         \"com.vmware.vsan.perf.graph.domOwner.leafOwnerLatency\",\n         VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.domOwner.leafOwnerLatency.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"readLeafOwnerLatency\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.domOwner.readLeafOwnerLatency.label\")),\n            new PerfGraphMetrics(\"writeLeafOwnerLatency\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.domOwner.writeLeafOwnerLatency.label\")),\n            new PerfGraphMetrics(\"recoveryWriteLeafOwnerLatency\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.domOwner.recoveryWriteLeafOwnerLatency.label\")),\n            new PerfGraphMetrics(\"unmapLeafOwnerLatency\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.domOwner.unmapLeafOwnerLatency.label\")),\n            new PerfGraphMetrics(\"recoveryUnmapLeafOwnerLatency\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.domOwner.recoveryUnmapLeafOwnerLatency.label\")),\n         ],\n         PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper),\n         false\n      ),\n   ];\n}\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardDdhDiskData {\n   static readonly LSOM_DDH_DISK_CHARTS: PerfGraph[] = [\n      // IOPS\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.iops\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.iops.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"avgReadIOPS\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.iops.avgReadIOPS.label\")),\n            new PerfGraphMetrics(\"avgWriteIOPS\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.iops.avgWriteIOPS.label\")),\n            new PerfGraphMetrics(\"avgUnmapIOPS\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.iops.avgUnmapIOPS.label\")),\n         ]\n      ),\n      // Throughput\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.throughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.throughput.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"avgReadTPut\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.avgReadTPut.label\")),\n            new PerfGraphMetrics(\"avgWriteTPut\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.avgWriteTPut.label\")),\n            new PerfGraphMetrics(\"avgUnmapIOPS\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.avgUnmapTput.label\")),\n         ]\n      ),\n      // Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.latency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.latency.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"avgReadLatency\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.avgReadLatency.label\")),\n            new PerfGraphMetrics(\"avgWriteLatency\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.avgWriteLatency.label\")),\n            new PerfGraphMetrics(\"avgUnmapLatency\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.avgUnmapLatency.label\")),\n         ]\n      ),\n      // Log Congestion\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.logCongestion\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.logCongestion.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"logCongestion\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.logCongestion.label\"))\n         ]\n      ),\n      // PLOG IORetry Unweighted Moving Avg Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.plogioavglatency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.plogioavglatency.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"ioretryReadLatencyUnwtdMvgAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.ioretryReadLatencyUnwtdMvgAvg.label\")),\n            new PerfGraphMetrics(\"ioretryWriteLatencyUnwtdMvgAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.ioretryWriteLatencyUnwtdMvgAvg.label\")),\n         ], null, false),\n      // PLOG IORetry Unweighted Moving Avg Latency Std Dev\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.plogioavglatencystddev\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.plogioavglatencystddev.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"ioretryReadLatencyUnwtdMvgStdDev\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.ioretryReadLatencyUnwtdMvgStdDev.label\")),\n            new PerfGraphMetrics(\"ioretryWriteLatencyUnwtdMvgStdDev\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.ioretryWriteLatencyUnwtdMvgStdDev.label\")),\n         ], null, false),\n      // PLOG IORetry IOPS\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.plogioretryiops\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.plogioretryiops.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"ioretryReadIopsAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.ioretryReadIopsAvg.label\")),\n            new PerfGraphMetrics(\"ioretryWriteIopsAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.ioretryWriteIopsAvg.label\")),\n         ], null, false),\n      // PLOG IORetry IOPS Moving Avg\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.plogioretryiopsavg\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.plogioretryiopsavg.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"ioretryReadIopsMvgAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.ioretryReadIopsMvgAvg.label\")),\n            new PerfGraphMetrics(\"ioretryWriteIopsMvgAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.ioretryWriteIopsMvgAvg.label\")),\n         ], null, false),\n      // Log Segment Number\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.logsegmentnum\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.logsegmentnum.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"llogStartSegNo\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.llogStartSegNo.label\")),\n            new PerfGraphMetrics(\"llogCurrentSegNo\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.llogCurrentSegNo.label\")),\n            new PerfGraphMetrics(\"plogStartSegNo\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.plogStartSegNo.label\")),\n            new PerfGraphMetrics(\"plogCurrentSegNo\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.plogCurrentSegNo.label\")),\n         ], null, false),\n      // Interval\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.interval\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.interval.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"intervalCount\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.intervalCount.label\")),\n            new PerfGraphMetrics(\"latencyIntervalSecs\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.latencyIntervalSecs.label\")),\n            new PerfGraphMetrics(\"elapsedSecsInInterval\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.elapsedSecsInInterval.label\")),\n         ], null, false),\n      // Exceed counts\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.exceedcounts\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.exceedcounts.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"readLatencyExCount\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.readLatencyExCount.label\")),\n            new PerfGraphMetrics(\"writeLatencyExCount\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.writeLatencyExCount.label\")),\n            new PerfGraphMetrics(\"minimumReadIOsExceededCount\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.minimumReadIOsExceededCount.label\")),\n            new PerfGraphMetrics(\"minimumWriteIOsExceededCount\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.minimumWriteIOsExceededCount.label\")),\n         ], null, false),\n      // Mean Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.meanlatency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.meanlatency.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"currentReadLatencyMean\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.currentReadLatencyMean.label\")),\n            new PerfGraphMetrics(\"currentWriteLatencyMean\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.currentWriteLatencyMean.label\")),\n         ], null, false),\n   ];\n}\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardHostSparseData {\n   static readonly LSOM_HOST_SPARSE_CHARTS: PerfGraph[] = [\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.latency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.latency.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"latencyCacheLookup\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.latencyCacheLookup.label\")),\n            new PerfGraphMetrics(\"latencyGwe\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.latencyGwe.label\")),\n            new PerfGraphMetrics(\"latencyRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.latencyRead.label\")),\n            new PerfGraphMetrics(\"latencyWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.latencyWrite.label\")),\n         ]),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.iops\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.iops.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"iopsGwe\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.iopsGwe.label\")),\n            new PerfGraphMetrics(\"iopsRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.iopsRead.label\")),\n            new PerfGraphMetrics(\"iopsRmw\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.iopsRmw.label\")),\n            new PerfGraphMetrics(\"iopsWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.iopsWrite.label\")),\n            new PerfGraphMetrics(\"iopsWriteConflicts\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.iopsWriteConflicts.label\")),\n         ]),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.throughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.throughput.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"throughputRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.throughputRead.label\")),\n            new PerfGraphMetrics(\"throughputWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.throughputWrite.label\")),\n         ]),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.cacheHitRate\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.cacheHitRate.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cacheHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.cacheHitRate.label\")),\n         ]),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.cacheAllocFails\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.cacheAllocFails.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cacheHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.cacheAllocFails.label\")),\n         ], null, false),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.cacheEntries\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.cacheEntries.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cacheHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.cacheEntries.label\")),\n         ], null, false),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.cacheEvictAttempts\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.cacheEvictAttempts.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cacheHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.cacheEvictAttempts.label\")),\n         ], null, false),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.cacheInserts\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.cacheInserts.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cacheHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.cacheInserts.label\")),\n         ], null, false),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.cacheLockContentions\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.cacheLockContentions.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cacheHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.cacheLockContentions.label\")),\n         ], null, false),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.cacheRemoves\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.cacheRemoves.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cacheHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.cacheRemoves.label\")),\n         ], null, false),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.cacheUpdateLatency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.cacheUpdateLatency.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cacheHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.cacheUpdateLatency.label\")),\n         ], null, false),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.lruLockContentions\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.lruLockContentions.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cacheHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.lruLockContentions.label\")),\n         ], null, false),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.readsToLayer\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.readsToLayer.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cacheHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.readsToLayer.label\")),\n         ], null, false),\n   ];\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardVsanDistributionData {\n   static readonly VSAN_DISTRIBUTION_CHARTS: PerfGraph[] = [\n      // Components\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.distribution.components\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.distribution.components.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"components\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.distribution.components.label\")),\n            ]),\n      // IO Components\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.distribution.ioComponents\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.distribution.ioComponents.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"ioComponents\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.distribution.ioComponents.label\")),\n            ]),\n      // DOM Clients\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.distribution.domClients\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.distribution.domClients.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"domClients\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.distribution.domClients.label\")),\n            ]),\n      // DOM Owners\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.distribution.domOwners\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.distribution.domOwners.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"domOwners\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.distribution.domOwners.label\")),\n            ]),\n      // DOM Colocated\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.distribution.domColocated\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.distribution.domColocated.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"domColocated\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.distribution.domColocated.label\")),\n            ]),\n   ];\n}","/* Copyright 2018-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {PerfDashboardView} from \"./perf-dashboard-view.data\";\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfDashboardDiskgroupData} from \"./perf-dashboard-disk-group.data\";\nimport {PerfDashboardDomClientData} from \"./perf-dashboard-dom-client.data\";\nimport {PerfDashboardDomOwnerData} from \"./perf-dashboard-dom-owner.data\";\nimport {PerfDashboardDomCompMgrData} from \"./perf-dashboard-dom-comp-mgr.data\";\nimport {PerfDashboardVnicData} from \"./perf-dashboard-vnic.data\";\nimport {PerfDashboardCacheDiskData} from \"./perf-dashboard-cache-disk.data\";\nimport {PerfDashboardCapacityDiskData} from \"./perf-dashboard-capacity-disk.data\";\nimport {PerfDashboardDdhDiskData} from \"./perf-dashboard-ddh-disk.data\";\nimport {PerfDashboardHostSparseData} from \"./perf-dashboard-host-sparse.data\";\nimport {PerfDashboardPnicData} from \"./perf-dashboard-pnic.data\";\nimport {PerfDashboardHostNetworkData} from \"./perf-dashboard-host-net.data\";\nimport {PerfDashboardClomHostData} from \"./perf-dashboard-clom-host.data\";\nimport {PerfDashboardClomDiskData} from \"./perf-dashboard-clom-disk.data\";\nimport {PerfDashboardMemoryHostData} from \"./perf-dashboard-memory-host.data\";\nimport {PerfDashboardMemorySystemData} from \"./perf-dashboard-memory-system.data\";\nimport {PerfDashboardMemoryVsanData} from \"./perf-dashboard-memory-vsan.data\";\nimport {PerfDashboardCmmdsNetData} from \"./perf-dashboard-cmmds-net.data\";\nimport {PerfDashboardCmmdsWorkloadData} from \"./perf-dashboard-cmmds-workload.data\";\nimport {PerfDashboardCmmdsData} from \"./perf-dashboard-cmmds.data\";\nimport {PerfDashboardCpuData} from \"./perf-dashboard-cpu.data\";\nimport {PerfDashboardVsanDistributionData} from \"./perf-dashboard-distribution.data\";\nimport {PerfDashboardDomCompSchedulerData} from \"./perf-dashboard-dom-comp-scheduler.data\";\nimport {PerfDashboardHostNetworkTcpipData} from \"./perf-dashboard-host-net-tcpip.data\";\nimport {PerfDashboardClusterResyncData} from \"./perf-dashboard-cluster-resync.data\";\n\n/**\n * The dashboard view definition, isOutlineDashboard=true means this link should be outlined\n */\nexport class VsanPerfDashboardView {\n   constructor(public view: PerfDashboardView,\n         public label: string,\n         public children: PerfGraph[],\n         public isSupportedByVsanMax: boolean = true) {}\n}\n\n/**\n * The category definition of the dashboard views.\n */\nexport class VsanPerfDashboardCategory {\n   constructor(public label: string, public children: VsanPerfDashboardView[]) {}\n\n   /**\n    * These dashboards are not directly aggregated by hosts, but the devices that belongs to a host\n    */\n   static readonly NESTED_DASHBOARDS: PerfDashboardView[] = [\n      PerfDashboardView.DISKGROUP,\n      PerfDashboardView.CACHEDISK,\n      PerfDashboardView.CAPACITYDISK,\n      PerfDashboardView.DDHDISK,\n      PerfDashboardView.VNIC,\n      PerfDashboardView.PNIC,\n      PerfDashboardView.CLOMDISK,\n      PerfDashboardView.DOMCOMPSCHEDULER,\n   ];\n\n   static readonly PIVOTAL_DASHBOARDS: VsanPerfDashboardView[] = [\n      new VsanPerfDashboardView(PerfDashboardView.DOMCLIENT,\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.dom.client.label\"),\n            PerfDashboardDomClientData.DOM_CLIENT_CHARTS),\n      new VsanPerfDashboardView(PerfDashboardView.DOMOWNER,\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.dom.owner.label\"),\n            PerfDashboardDomOwnerData.DOM_OWNER_CHARTS),\n      new VsanPerfDashboardView(PerfDashboardView.DOMCOMPMGR,\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.dom.mgr.label\"),\n            PerfDashboardDomCompMgrData.DOM_COMP_MGR_CHARTS),\n      new VsanPerfDashboardView(PerfDashboardView.DISKGROUP,\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.diskgroup.label\"),\n            PerfDashboardDiskgroupData.LSOM_DISK_GROUP_CHARTS,\n            false),\n      new VsanPerfDashboardView(PerfDashboardView.VNIC,\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.network.vnic.label\"),\n            PerfDashboardVnicData.VNIC_CHARTS),\n   ];\n\n   /**\n    * Defines all the available dashboards and categories them.\n    */\n   static readonly CATEGORIED_DASHBOARDS: VsanPerfDashboardCategory[] = [\n      new VsanPerfDashboardCategory(VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.dom.scheduler.label\"),\n            [new VsanPerfDashboardView(PerfDashboardView.DOMCOMPSCHEDULER, \"\",\n                  PerfDashboardDomCompSchedulerData.DOM_COMP_SCHEDULER_CHARTS)]),\n\n      new VsanPerfDashboardCategory(VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.label\"),\n            [new VsanPerfDashboardView(PerfDashboardView.CACHEDISK,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.label\"),\n                  PerfDashboardCacheDiskData.LSOM_CACHE_DISK_CHARTS,\n                  false),\n             new VsanPerfDashboardView(PerfDashboardView.CAPACITYDISK,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.label\"),\n                  PerfDashboardCapacityDiskData.LSOM_CAPACITY_DISK_CHARTS,\n                   false),\n             new VsanPerfDashboardView(PerfDashboardView.DDHDISK,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.label\"),\n                  PerfDashboardDdhDiskData.LSOM_DDH_DISK_CHARTS),\n             new VsanPerfDashboardView(PerfDashboardView.SPARSEHOST,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.sparse.label\"),\n                  PerfDashboardHostSparseData.LSOM_HOST_SPARSE_CHARTS),\n            ]),\n\n      new VsanPerfDashboardCategory(VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.network.label\"),\n            [new VsanPerfDashboardView(PerfDashboardView.PNIC,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.network.pnic.label\"),\n                  PerfDashboardPnicData.PNIC_CHARTS),\n             new VsanPerfDashboardView(PerfDashboardView.TCPIP,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.network.tcpip.label\"),\n                  PerfDashboardHostNetworkTcpipData.HOST_NETWORK_TCPIP_CHARTS),\n             new VsanPerfDashboardView(PerfDashboardView.HOSTNETWORK,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.network.host.label\"),\n                  PerfDashboardHostNetworkData.HOST_NETWORK_CHARTS),\n            ]),\n\n      new VsanPerfDashboardCategory(VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.clom.label\"),\n            [new VsanPerfDashboardView(PerfDashboardView.CLOMHOST,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.clom.host.label\"),\n                  PerfDashboardClomHostData.CLOM_HOST_CHARTS),\n             new VsanPerfDashboardView(PerfDashboardView.CLOMDISK,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.clom.disk.label\"),\n                  PerfDashboardClomDiskData.CLOM_DISK_CHARTS),\n            ]),\n\n      new VsanPerfDashboardCategory(VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.memory.label\"),\n            [\n             new VsanPerfDashboardView(PerfDashboardView.HOSTMEMORY,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.memory.heap.label\"),\n                  PerfDashboardMemoryHostData.MEMORY_HOST_CHARTS),\n             new VsanPerfDashboardView(PerfDashboardView.SYSMEMORY,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.memory.system.label\"),\n                  PerfDashboardMemorySystemData.MEMORY_SYSTEM_CHARTS),\n             new VsanPerfDashboardView(PerfDashboardView.VSANMEMORY,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.memory.vsan.label\"),\n                  PerfDashboardMemoryVsanData.MEMORY_VSAN_CHARTS),\n            ]),\n\n      new VsanPerfDashboardCategory(VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cmmds.label\"),\n            [new VsanPerfDashboardView(PerfDashboardView.CMMDS,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cmmds.label\"),\n                  PerfDashboardCmmdsData.CMMDS_CHARTS),\n             new VsanPerfDashboardView(PerfDashboardView.NET,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cmmds.net.label\"),\n                  PerfDashboardCmmdsNetData.CMMDS_NET_CHARTS),\n             new VsanPerfDashboardView(PerfDashboardView.WORKLOAD,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cmmds.workload.label\"),\n                  PerfDashboardCmmdsWorkloadData.CMMDS_WORKLOAD_CHARTS),\n            ]),\n\n      new VsanPerfDashboardCategory(VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cpu.label\"),\n            [new VsanPerfDashboardView(PerfDashboardView.DOMWORLDCPU,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cpu.dom.label\"),\n                  PerfDashboardCpuData.DOM_WORLD_CPU),\n             new VsanPerfDashboardView(PerfDashboardView.LSOMWORLDCPU,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cpu.lsom.label\"),\n                  PerfDashboardCpuData.LSOM_WORLD_CPU),\n             new VsanPerfDashboardView(PerfDashboardView.HOSTCPU,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cpu.host.label\"),\n                  PerfDashboardCpuData.HOST_CPU),\n             new VsanPerfDashboardView(PerfDashboardView.VSANCPU,\n                VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cpu.vsan.label\"),\n                PerfDashboardCpuData.VSAN_CPU),\n            ]),\n\n      new VsanPerfDashboardCategory(VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.distribution.label\"),\n            [new VsanPerfDashboardView(PerfDashboardView.VSANDISTRIBUTION, \"\",\n                  PerfDashboardVsanDistributionData.VSAN_DISTRIBUTION_CHARTS)]),\n\n      new VsanPerfDashboardCategory(VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cluster.resync.label\"),\n            [new VsanPerfDashboardView(PerfDashboardView.CLUSTERRESYNC, \"\",\n                  PerfDashboardClusterResyncData.CLUSTER_RESYNC_CHARTS)]),\n   ];\n\n   static getVsanMaxDashboardCategories(categories: VsanPerfDashboardCategory[]): VsanPerfDashboardCategory[] {\n      if (VsanUiUtils.isEmpty(categories)) {\n         return [];\n      }\n\n      return categories.map(category => {\n         category.children = this.getVsanMaxDashboardViews(category.children);\n         return category;\n      });\n   }\n\n   static getVsanMaxDashboardViews(views: VsanPerfDashboardView[]): VsanPerfDashboardView[] {\n      if (VsanUiUtils.isEmpty(views)) {\n         return [];\n      }\n\n      return views.filter(view => view.isSupportedByVsanMax);\n   }\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardDomCompMgrData {\n   static readonly DOM_COMP_MGR_CHARTS: PerfGraph[] = [\n      // Latency chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domCompmgr.latency\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domCompmgr.latency.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyAvgRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.latency.latencyAvgRead.label\")),\n               new PerfGraphMetrics(\"latencyAvgWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.latency.latencyAvgWrite.label\")),\n               new PerfGraphMetrics(\"latencyAvgRecWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.latency.latencyAvgRecWrite.label\")),\n               new PerfGraphMetrics(\"latAvgResyncRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.latency.latAvgResyncRead.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper),\n      ),\n      // IOPS chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domCompmgr.iops\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domCompmgr.iops.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.iops.iopsRead.label\")),\n               new PerfGraphMetrics(\"iopsWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.iops.iopsWrite.label\")),\n               new PerfGraphMetrics(\"iopsRecWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.iops.iopsRecWrite.label\")),\n               new PerfGraphMetrics(\"iopsResyncRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.iops.iopsResyncRead.label\")),\n            ],\n      ),\n      // Throughput chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domCompmgr.throughput\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domCompmgr.throughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"throughputRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.throughput.throughputRead.label\")),\n               new PerfGraphMetrics(\"throughputWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.throughput.throughputWrite.label\")),\n               new PerfGraphMetrics(\"throughputRecWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.throughput.throughputRecWrite.label\")),\n               new PerfGraphMetrics(\"tputResyncRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.throughput.tputResyncRead.label\")),\n            ],\n      ),\n      // Congestion chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domCompmgr.congestion\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domCompmgr.congestion.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"congestion\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.congestion.congestion.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30, 60, PerfGraphThresholdDirection.upper),\n      ),\n      // Outstanding IO chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domCompmgr.oio\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domCompmgr.oio.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"oio\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.oio.oio.label\")),\n            ],\n      ),\n      // latencyStddev chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domCompmgr.latencyStddev\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domCompmgr.latencyStddev.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyStddev\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.latencyStddev.latencyStddev.label\")),\n               new PerfGraphMetrics(\"latencyStddevUnmap\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.latencyStddev.latencyStddevUnmap.label\")),\n               new PerfGraphMetrics(\"latencyStddevWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domclient.latencyStddevWrite.metrics.label\")),\n               new PerfGraphMetrics(\"latencyStddevRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domclient.latencyStddevRead.metrics.label\"))\n            ],\n      ),\n   ];\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\n\nexport class PerfDashboardClusterResyncData {\n   static readonly CLUSTER_RESYNC_CHARTS: PerfGraph[] = [\n      // IOPS Resync\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cluster.resync.iops\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cluster.resync.iops.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsResyncReadPolicy\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.iops.readPolicy.label\")),\n               new PerfGraphMetrics(\"iopsResyncWritePolicy\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.iops.writePolicy.label\")),\n               new PerfGraphMetrics(\"iopsResyncReadDecom\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.iops.readDecom.label\")),\n               new PerfGraphMetrics(\"iopsResyncWriteDecom\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.iops.writeDecom.label\")),\n               new PerfGraphMetrics(\"iopsResyncReadRebalance\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.iops.readRebalance.label\")),\n               new PerfGraphMetrics(\"iopsResyncWriteRebalance\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.iops.writeRebalance.label\")),\n               new PerfGraphMetrics(\"iopsResyncReadFixComp\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.iops.readFixComp.label\")),\n               new PerfGraphMetrics(\"iopsResyncWriteFixComp\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.iops.writeFixComp.label\")),\n            ]),\n      // Throughput Resync\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cluster.resync.throughput\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cluster.resync.throughput.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"tputResyncReadPolicy\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.throughput.readPolicy.label\")),\n               new PerfGraphMetrics(\"tputResyncWritePolicy\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.throughput.writePolicy.label\")),\n               new PerfGraphMetrics(\"tputResyncReadDecom\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.throughput.readDecom.label\")),\n               new PerfGraphMetrics(\"tputResyncWriteDecom\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.throughput.writeDecom.label\")),\n               new PerfGraphMetrics(\"tputResyncReadRebalance\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.throughput.readRebalance.label\")),\n               new PerfGraphMetrics(\"tputResyncWriteRebalance\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.throughput.writeRebalance.label\")),\n               new PerfGraphMetrics(\"tputResyncReadFixComp\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.throughput.readFixComp.label\")),\n               new PerfGraphMetrics(\"tputResyncWriteFixComp\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.throughput.writeFixComp.label\")),\n            ]),\n      // Latency Resync\n      PerfGraph.createPerfGraph(\n         \"com.vmware.vsan.perf.graph.cluster.resync.latency\",\n         VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cluster.resync.latency.label\"),\n         PerfChartUtil.RATE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"latResyncReadPolicy\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.cluster.resync.latency.readPolicy.label\")),\n            new PerfGraphMetrics(\"latResyncWritePolicy\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.cluster.resync.latency.writePolicy.label\")),\n            new PerfGraphMetrics(\"latResyncReadDecom\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.cluster.resync.latency.readDecom.label\")),\n            new PerfGraphMetrics(\"latResyncWriteDecom\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.cluster.resync.latency.writeDecom.label\")),\n            new PerfGraphMetrics(\"latResyncReadRebalance\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.cluster.resync.latency.readRebalance.label\")),\n            new PerfGraphMetrics(\"latResyncWriteRebalance\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.cluster.resync.latency.writeRebalance.label\")),\n            new PerfGraphMetrics(\"latResyncReadFixComp\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.cluster.resync.latency.readFixComp.label\")),\n            new PerfGraphMetrics(\"latResyncWriteFixComp\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.cluster.resync.latency.writeFixComp.label\")),\n         ]),\n   ];\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {AdvancedPerfDashboard} from \"./view/advanced-perf-dashboard.component\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {FormsModule} from \"@angular/forms\";\nimport {VsanChartModule} from \"@component/chart/chart.module\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {DatetimePickerModule} from \"@component/datetime-picker/datetime-picker.module\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {AdvancedPerfSubentityDashboard} from \"./view/advanced-perf-sub-entity-dashboard.component\";\nimport {DetailedAdvancedPerfDashboard} from \"./view/advanced-perf-detailed-dashboard.component\";\nimport {VsanAdvancedPerfGraphicsComponent} from \"./view/advanced-perf-graphics.component\";\nimport {PerfDashboardSubEntitiesDataQueryService} from \"./util/perf-dashboard-sub-entities-data-query.service\";\nimport {PerformancePersistenceService} from \"@service/performance-persistence.service\";\nimport {PersistentStorageService} from \"@service/browser-storage.service\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      FormsModule,\n      VsanChartModule,\n      UnavailableViewModule,\n      ValidationModule,\n      CommonPipeModule,\n      DatetimePickerModule,\n      CommonDirectiveModule,\n   ],\n   declarations: [\n      AdvancedPerfDashboard,\n      DetailedAdvancedPerfDashboard,\n      AdvancedPerfSubentityDashboard,\n      VsanAdvancedPerfGraphicsComponent,\n   ],\n   exports: [\n      AdvancedPerfDashboard,\n      AdvancedPerfSubentityDashboard,\n      DetailedAdvancedPerfDashboard,\n      VsanAdvancedPerfGraphicsComponent,\n   ],\n   providers: [\n      PerfDashboardSubEntitiesDataQueryService,\n      PerformancePersistenceService,\n      PersistentStorageService,\n   ],\n})\nexport class SupportPerfModule {\n}\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardCmmdsNetData {\n   static readonly CMMDS_NET_CHARTS: PerfGraph[] = [\n      // Net Stats\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cmmds.net.rxtx\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cmmds.net.rxtx.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"rdtRx\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.net.metrics.rdtRx.label\")),\n               new PerfGraphMetrics(\"rdtTx\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.net.metrics.rdtTx.label\")),\n               new PerfGraphMetrics(\"groupRx\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.net.metrics.groupRx.label\")),\n               new PerfGraphMetrics(\"groupTxUcast\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.net.metrics.groupTxUcast.label\")),\n               new PerfGraphMetrics(\"groupTxMcast\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.net.metrics.groupTxMcast.label\")),\n            ]),\n      // Throughput\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cmmds.net.throughput\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cmmds.net.throughput.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"rdtRxThroughput\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.net.metrics.rdtRxThroughput.label\")),\n               new PerfGraphMetrics(\"rdtTxThroughput\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.net.metrics.rdtTxThroughput.label\")),\n               new PerfGraphMetrics(\"groupRxThroughput\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.net.metrics.groupRxThroughput.label\")),\n               new PerfGraphMetrics(\"groupTxUcastThroughput\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.net.metrics.groupTxUcastThroughput.label\")),\n               new PerfGraphMetrics(\"groupTxMcastThroughput\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.net.metrics.groupTxMcastThroughput.label\")),\n            ]),\n   ];\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\n\nexport class PerfDashboardMemorySystemData {\n   static readonly MEMORY_SYSTEM_CHARTS: PerfGraph[] = [\n      // Total Mb Memory Used\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.memory.totalMbMemUsed\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.memory.totalMbMemUsed.label\"),\n            PerfChartUtil.MBYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"totalMbMemUsed\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.memory.metrics.totalMbMemUsed.label\")),\n            ]),\n      // Percentage Memory Used\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.memory.pctMemUsed\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.memory.pctMemUsed.label\"),\n            PerfChartUtil.PERCENTAGE_TYPE,\n            [\n               new PerfGraphMetrics(\"pctMemUsed\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.memory.metrics.pctMemUsed.label\")),\n            ]),\n      // Over commit Ratio\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.memory.overcommitRatio\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.memory.overcommitRatio.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"overcommitRatio\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.memory.metrics.overcommitRatio.label\")),\n            ]),\n   ];\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\n\nexport class PerfDashboardMemoryVsanData {\n   static readonly MEMORY_VSAN_CHARTS: PerfGraph[] = [\n      // vSAN Used\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.memory.vsanMemory\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.memory.vsan.label\"),\n            PerfChartUtil.SIZE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"vsanUsedSize\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.dropdown.memory.vsan.label\"),\n                           null,\n                           null,\n                           [\"kernelReservedSize\", \"uwReservedSize\"]),\n            ]),\n   ];\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardClomHostData {\n   static readonly CLOM_HOST_CHARTS: PerfGraph[] = [\n      // Node Component Count Ratio\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.nodeCompCntRatio\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.nodeCompCntRatio.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"nodeCompCntRatio\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.nodeCompCntRatio.label\")),\n            ]),\n      // Node Data Component Count Ratio\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.nodeDataCompCntRatio\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.nodeDataCompCntRatio.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"nodeDataCompCntRatio\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.nodeDataCompCntRatio.label\")),\n            ]),\n   ];\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardCmmdsData {\n   static readonly CMMDS_CHARTS: PerfGraph[] = [\n      // Updates Applied\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.updatesApplied\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.updatesApplied.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"updatesApplied\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.updatesApplied.label\")),\n            ]),\n      // Updates Requested\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.updatesRequested\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.updatesRequested.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"updatesRequested\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.updatesRequested.label\")),\n            ]),\n   ];\n}","/* Copyright 2018-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\n\nexport class PerfDashboardCpuData {\n   static readonly LSOM_WORLD_CPU: PerfGraph[] = [\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cpu.lsom.usedPct\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cpu.lsom.usedPct.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"usedPct\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cpu.lsom.metrics.usedPct.label\")),\n            ]),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cpu.lsom.readyPct\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cpu.lsom.readyPct.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"readyPct\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cpu.lsom.metrics.readyPct.label\")),\n            ]),\n   ];\n\n   static readonly DOM_WORLD_CPU: PerfGraph[] = [\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cpu.dom.usedPct\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cpu.lsom.usedPct.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"usedPct\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cpu.lsom.metrics.usedPct.label\")),\n            ]),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cpu.dom.readyPct\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cpu.lsom.readyPct.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"readyPct\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cpu.lsom.metrics.readyPct.label\")),\n            ]),\n   ];\n\n   static readonly HOST_CPU: PerfGraph[] = [\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cpu.host.coreUtilPct\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cpu.host.coreUtilPct.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"coreUtilPct\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cpu.host.metrics.coreUtilPct.label\")),\n            ]),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cpu.host.pcpuUsedPct\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cpu.host.pcpuUsedPct.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"pcpuUsedPct\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cpu.host.metrics.pcpuUsedPct.label\")),\n            ]),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cpu.host.pcpuUtilPct\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cpu.host.pcpuUtilPct.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"pcpuUtilPct\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cpu.lsom.metrics.pcpuUtilPct.label\")),\n            ]),\n   ];\n\n   static readonly VSAN_CPU: PerfGraph[] = [\n      PerfGraph.createPerfGraph(\n         \"com.vmware.vsan.perf.graph.cpu.vsan\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cpu.vsan.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"usedPct\",\n                  VsanUiUtils.getString(\n                        \"vsan.perf.advanced.dashboards.dropdown.cpu.vsan.usedPct.label\")),\n            new PerfGraphMetrics(\"readyPct\",\n                  VsanUiUtils.getString(\n                        \"vsan.perf.advanced.dashboards.dropdown.cpu.vsan.readyPct.label\")),\n         ]),\n   ];\n}","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Injectable} from \"@angular/core\";\nimport {VsanPerfPropertyProvider} from \"@generated/vsan-perf-property-provider\";\nimport {PerfDashboardView} from \"../model/perf-dashboard-view.data\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {DiskGroup} from \"@generated/disk-group\";\nimport {DiskInfo} from \"@generated/disk-info\";\nimport {HostPnicsData} from \"@generated/host-pnics-data\";\nimport {HostVnicsData} from \"@generated/host-vnics-data\";\nimport {HostDiskGroupsData} from \"@generated/host-disk-groups-data\";\nimport {HostData} from \"@generated/host-data\";\nimport {DiskGroupData} from \"@generated/disk-group-data\";\nimport {DiskData} from \"@generated/disk-data\";\n\n/**\n * Use this object to query the sub-entities of a host\n */\n@Injectable()\nexport class PerfDashboardSubEntitiesDataQueryService {\n   constructor(private perfPropertyProvider: VsanPerfPropertyProvider) {}\n\n   async querySubEntities(clusterRef: ManagedObject, view: PerfDashboardView): Promise<HostSubEntitiesData[]> {\n      switch (view) {\n         case PerfDashboardView.DOMCOMPSCHEDULER:\n         case PerfDashboardView.DDHDISK:\n         case PerfDashboardView.CACHEDISK:\n         case PerfDashboardView.CAPACITYDISK:\n         case PerfDashboardView.DISKGROUP:\n         case PerfDashboardView.CLOMDISK:\n            return this.parseDiskGroupData(view, await this.perfPropertyProvider.getClusterDiskMappings(clusterRef));\n         case PerfDashboardView.PNIC:\n            return this.parsePnics(await this.perfPropertyProvider.getHostPhysicalAdapterMapping(clusterRef));\n         case PerfDashboardView.VNIC:\n            return this.parseVnics(await this.perfPropertyProvider.getHostVnicsMapping(clusterRef));\n         case PerfDashboardView.DISK:\n            return this.parseDiskData(await this.perfPropertyProvider.getClusterStoragePoolDisks(clusterRef));\n      }\n      return null;\n   }\n\n   private parsePnics(hostPnicsMapping: HostPnicsData[]): HostSubEntitiesData[] {\n      if (!hostPnicsMapping) {\n         return [];\n      }\n\n      return hostPnicsMapping.map(pnicsData => new HostSubEntitiesData(pnicsData.hostName,\n               pnicsData.pnics.map(pnic =>\n                     new SubEntityObject(pnic.deviceName, pnic.hostUuid + \"|\" + pnic.deviceName))));\n   }\n\n   private parseVnics(hostVnicsMapping: HostVnicsData[]): HostSubEntitiesData[] {\n      if (!hostVnicsMapping) {\n         return [];\n      }\n\n      return hostVnicsMapping.map(vnicsData => new HostSubEntitiesData(vnicsData.hostName,\n               vnicsData.vnics.map(vnic =>\n                     new SubEntityObject(vnic.deviceName, vnic.hostUuid +\n                     \"|\" + vnic.netStackInstanceKey + \"|\" + vnic.deviceName))));\n   }\n\n   /**\n    * Parse the entities object array for diskgroup, cache-disk, and capaicity-disk\n    */\n   private parseDiskGroupData = (view: PerfDashboardView,\n         hostDiskgroupsMapping: HostDiskGroupsData[]): HostSubEntitiesData[] => {\n      if (!hostDiskgroupsMapping) {\n         return [];\n      }\n      return hostDiskgroupsMapping.map(hostDiskgroupsData => {\n         const diskgroups: DiskGroup[] = hostDiskgroupsData.diskgroups;\n         let subentites: SubEntityObject[] = null;\n         switch (view) {\n            case PerfDashboardView.DISKGROUP:\n               subentites = this.getDiskgroupEntities(hostDiskgroupsData.diskgroups);\n               break;\n            case PerfDashboardView.DOMCOMPSCHEDULER:\n            case PerfDashboardView.CACHEDISK:\n               subentites = this.getCacheDiskEntities(hostDiskgroupsData.diskgroups);\n               break;\n            case PerfDashboardView.CLOMDISK:\n            case PerfDashboardView.CAPACITYDISK:\n               subentites = this.getCapacityDiskEntites(hostDiskgroupsData.diskgroups);\n               break;\n            case PerfDashboardView.DDHDISK:\n               subentites = this.getCacheDiskEntities(hostDiskgroupsData.diskgroups)\n                     .concat(this.getCapacityDiskEntites(hostDiskgroupsData.diskgroups));\n               break;\n\n         }\n         const hostSubEntitiesData: HostSubEntitiesData = new HostSubEntitiesData(\n               hostDiskgroupsData.hostName,\n               subentites);\n         return hostSubEntitiesData;\n      });\n   };\n\n   private getDiskgroupEntities = (diskgroups: DiskGroup[]): SubEntityObject[] => {\n      return diskgroups.map(diskgroup => new SubEntityObject(diskgroup.diskGroupName, diskgroup.diskGroupUuid));\n   };\n\n   private getCacheDiskEntities = (diskgroups: DiskGroup[]): SubEntityObject[] => {\n      return diskgroups.map(diskgroup =>\n            new SubEntityObject(diskgroup.cacheDisk.diskName, diskgroup.cacheDisk.diskUuid));\n   };\n\n   private getCapacityDiskEntites = (diskgroups: DiskGroup[]): SubEntityObject[] => {\n      let diskinfo: DiskInfo[] = [];\n      diskgroups.forEach(diskgroup => diskinfo = diskinfo.concat(diskgroup.capacityDisks));\n      return diskinfo.map(disk => new SubEntityObject(disk.diskName, disk.diskUuid));\n   };\n\n   private parseDiskData(hostsData: HostData[]): HostSubEntitiesData[] {\n      if (!hostsData) {\n         return [];\n      }\n      return hostsData.map(hostData => new HostSubEntitiesData(hostData.name,\n            hostData.diskGroups.reduce((acc: DiskData[], diskGroup: DiskGroupData) => acc.concat(diskGroup.disks), [])\n             // Uuid is set to disk name in IoVmMetricsDialogComponent.initializeDiskPerformance()\n            .map(disk => new SubEntityObject(disk.uuid, disk.uuid)))); //\n   }\n}\n\nexport class SubEntityObject {\n   constructor(public name: string, public uuid: string) {}\n}\n\nexport class HostSubEntitiesData {\n   constructor(public hostName: string, public subentites: SubEntityObject[]) {}\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardCmmdsWorkloadData {\n   static readonly CMMDS_WORKLOAD_CHARTS: PerfGraph[] = [\n      // Inbound Stats\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cmmds.workload.inbount\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cmmds.workload.inbound.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"rxAccept\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.rxAccept.label\")),\n               new PerfGraphMetrics(\"rxAgentUpdateRequest\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.rxAgentUpdateRequest.label\")),\n               new PerfGraphMetrics(\"rxHeartbeatRequest\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.rxHeartbeatRequest.label\")),\n               new PerfGraphMetrics(\"rxMasterUpdate\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.rxMasterUpdate.label\")),\n               new PerfGraphMetrics(\"rxRetransmitRequest\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.rxRetransmitRequest.label\")),\n               new PerfGraphMetrics(\"rxSnapshot\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.rxSnapshot.label\")),\n               new PerfGraphMetrics(\"rxMisc\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.rxMisc.label\")),\n            ]),\n      // Outbound Stats\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cmmds.workload.outbount\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cmmds.workload.outbound.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"txAgentUpdateRequest\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.txAgentUpdateRequest.label\")),\n               new PerfGraphMetrics(\"txHeartbeatRequest\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.txHeartbeatRequest.label\")),\n               new PerfGraphMetrics(\"txMasterCheckpoint\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.txMasterCheckpoint.label\")),\n               new PerfGraphMetrics(\"txMasterCkptTried\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.txMasterCkptTried.label\")),\n               new PerfGraphMetrics(\"txRetransmitRequest\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.txRetransmitRequest.label\")),\n               new PerfGraphMetrics(\"txSnapshot\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.txSnapshot.label\")),\n               new PerfGraphMetrics(\"txSnapshotBytes\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.txSnapshotBytes.label\")),\n               new PerfGraphMetrics(\"txSnapshotTried\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.txSnapshotTried.label\")),\n               new PerfGraphMetrics(\"txMasterUpdate\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.txMasterUpdate.label\")),\n               new PerfGraphMetrics(\"txMasterUpdateTried\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.txMasterUpdateTried.label\")),\n            ]),\n      // workload batch\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cmmds.workload.batch\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cmmds.workload.batch.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"agentBatchesSent\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.agentBatchesSent.label\")),\n               new PerfGraphMetrics(\"totalUpdSentInAgentBatch\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.totalUpdSentInAgentBatch.label\")),\n               new PerfGraphMetrics(\"checkPointBatchesSent\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.checkPointBatchesSent.label\")),\n               new PerfGraphMetrics(\"totalUpdInBatchCkpt\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.totalUpdInBatchCkpt.label\")),\n               new PerfGraphMetrics(\"masterBatchesRecved\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.masterBatchesRecved.label\")),\n               new PerfGraphMetrics(\"totalUpdInMasterBatches\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.totalUpdInMasterBatches.label\")),\n            ]),\n   ];\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {PerfDashboardView} from \"../perf-dashboard-view.data\";\nimport {NavigationContext} from \"@navigation/context/navigation-context\";\n\nexport class SupportNavData implements NavigationContext {\n   constructor(public view: SupportView, public perfSelection: PerfSelectionData) {}\n}\n\nexport class PerfSelectionData {\n   constructor(public dashboardView: PerfDashboardView, public objectIdentifier: string = null) {}\n}\n\nexport enum SupportView {\n   OBFUSCATION,\n   ADVANCED_PERFORMANCE,\n}"]}