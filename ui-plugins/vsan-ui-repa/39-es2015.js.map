{"version":3,"sources":["./src/app/vsan/common/component/chart/capacity-legend/capacity-legend.html","./src/app/vsan/common/component/chart/capacity-legend/capacity-legend.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6GAGG,uHAA+C,qFAC5C,+nBAIqE,GAFhE,4EAA0D,MAEY,gFAC3E,wIAAgC,mGAEhC,MAAO,6EACV,mDAPQ,6BAAmB,EACnB,iDAA0D,6BAF/D,YAIqE,EAHhE,SAAmB,EACnB,SAA0D,mDAF1D,kIAAyB,GAGzB,gCAAuC,4BACvC,yEAA+D,wBAJpE,YAIqE,EAJhE,SAAyB,EAGzB,SAAuC,EACvC,SAA+D,GAC9D,kIAAyB,GAA/B,YAAgC,EAA1B,SAAyB,GAAC,+FAEhC;6GAVN,wHAA0E,kFACvE,MAA0G,6EAC1G,sZAA+C,IASzC,0EACT,mDAVQ,+DAAyC,GAA9C,YAA+C,EAA1C,SAAyC;6GAH6B,0EAC9E,+dAA0E,iDAA5D,mBAA2D,mBAAzE,YAA0E,EAA5D,SAA2D;;;;;;;;;;;;;;;;;ACWzE;AAAA;AAAO;UAAM,uBAAuB;QAGjC,YAAoB,eAAoC,EAC1C,eAAgC;YAD1B,oBAAe,GAAf,eAAe,CAAqB;YAC1C,oBAAe,GAAf,eAAe,CAAiB;QAAG,CAAC;QAuBlD,gBAAgB,CAAC,YAA8B;YAC5C,OAAO,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC;QACpE,CAAC;QAED,qBAAqB,CAAC,YAA8B,EAAE,KAAa;YAChE,IAAI,YAAY,CAAC,kBAAkB,EAAE;gBAClC,OAAO,YAAY,CAAC,kBAAkB,CAAC;aACzC;YACD,OAAO,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAClE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QACrD,CAAC;QAED,qBAAqB,CAAC,YAA8B;YACjD,OAAO,IAAI,CAAC,eAAe,CAAC,2BAA2B,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACrF,CAAC;QAED,YAAY,CAAC,SAA2B;YACrC,+DAA+D;YAC/D,OAAO,SAAS,CAAC,EAAE,KAAK,wBAAwB,CAAC;QACpD,CAAC;QAED,SAAS,CAAC,WAA6B;YACpC,IAAI,IAAI,CAAC,aAAa,IAAI,WAAW,CAAC,YAAY,KAAK,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;gBAC7E,MAAM,WAAW,GAAW,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBAC7F,IAAI,WAAW,EAAE;oBACd,OAAO,uBAAuB,CAAC,mBAAmB,GAAG,WAAW,CAAC;iBACnE;aACH;QACJ,CAAC;;IAtDuB,2CAAmB,GAAW,WAAW,CAAC","file":"39-es2015.js","sourcesContent":["<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<ng-container *ngFor=\"let sectionData of chartSectionData; let i = index\">\n   <!-- Only display legend items with positive value since they aren't displayed in the bar-chart either -->\n   <div *ngIf=\"getCapacityValue(sectionData) > 0\">\n      <div id=\"capacity-color-{{i}}\"\n           class=\"type-legend\"\n           [ngClass]=\"{'linear-gradient': showGradient(sectionData)}\"\n           [style.border]=\"getBorder(sectionData)\"\n           [style.backgroundColor]=\"getCapacityValueColor(sectionData, i)\"></div>\n      <span id=\"capacity-value-{{i}}\">\n         {{getCapacityValueLabel(sectionData)}}\n      </span>\n   </div>\n</ng-container>","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, Input} from \"@angular/core\";\nimport {ChartSectionData} from \"@component/chart/model/chart-section.data\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {BarChartService} from \"@component/chart/capacity-bar-chart/bar-chart.service\";\n\n@Component({\n   templateUrl: \"capacity-legend.html\",\n   styleUrls: [\"capacity-legend.scss\"],\n   selector: \"vsan-capacity-legend\",\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CapacityLegendComponent {\n   private static readonly LEGEND_BORDER_STYLE: string = \"1px solid\";\n\n   constructor(private capacityService: VsanCapacityService,\n         private barChartService: BarChartService) {}\n\n   @Input()\n   chartSectionData: ChartSectionData[];\n\n   @Input()\n   used: number;\n\n   @Input()\n   total: number;\n\n   @Input()\n   warningThreshold: number;\n\n   @Input()\n   errorThreshold: number;\n\n   /**\n    * The hovered series in capacity bar chart component, used to display the corresponding legend border.\n    */\n   @Input()\n   hoveredSeries: any;\n\n   getCapacityValue(capacityData: ChartSectionData): number {\n      return this.capacityService.getCapacityLegendValue(capacityData);\n   }\n\n   getCapacityValueColor(capacityData: ChartSectionData, index: number): string {\n      if (capacityData.customSectionColor) {\n         return capacityData.customSectionColor;\n      }\n      return this.capacityService.getSectionColor(this.used, this.total, index,\n            this.warningThreshold, this.errorThreshold);\n   }\n\n   getCapacityValueLabel(capacityData: ChartSectionData): string {\n      return this.capacityService.getCapacityLegendValueLabel(capacityData, this.total);\n   }\n\n   showGradient(chartData: ChartSectionData): boolean {\n      // For transient capacity we use special gradient fill as color\n      return chartData.id === \"transientSpaceOverview\";\n   }\n\n   getBorder(sectionData: ChartSectionData): string {\n      if (this.hoveredSeries && sectionData.sectionLabel === this.hoveredSeries.name) {\n         const borderColor: string = this.barChartService.getBarChartBorder(this.hoveredSeries.color);\n         if (borderColor) {\n            return CapacityLegendComponent.LEGEND_BORDER_STYLE + borderColor;\n         }\n      }\n   }\n}"],"sourceRoot":"webpack:///"}