{"version":3,"sources":["./src/app/vsan/support/model/perf-dashboard-disk-group.data.ts","./src/app/vsan/support/view/advanced-perf-dashboard.component.ts","./src/app/vsan/support/model/perf-dashboard-pnic.data.ts","./src/app/vsan/support/model/perf-dashboard-view.data.ts","./src/app/vsan/support/model/perf-dashboard-vnic.data.ts","./src/app/vsan/support/model/perf-dashboard-host-net.data.ts","./src/app/vsan/support/view/advanced-perf-sub-entity-dashboard.html","./src/app/vsan/support/view/advanced-perf-sub-entity-dashboard.component.ts","./src/app/vsan/support/model/perf-dashboard-cache-disk.data.ts","./src/app/vsan/common/service/flow/error-handler.decorator.ts","./src/app/vsan/common/service/navigation/model/knowledge-base-id.ts","./src/app/vsan/support/model/perf-dashboard-capacity-disk.data.ts","./src/app/vsan/support/model/perf-dashboard-dom-client.data.ts","./src/app/vsan/support/model/perf-dashboard-clom-disk.data.ts","./src/app/vsan/support/model/perf-dashboard-memory-host.data.ts","./src/app/vsan/support/model/perf-dashboard-host-net-tcpip.data.ts","./src/app/vsan/support/util/perf-for-support-util.ts","./src/app/vsan/support/model/perf-dashboard-dom-comp-scheduler.data.ts","./src/app/vsan/support/model/perf-dashboard-dom-owner.data.ts","./src/app/vsan/support/model/perf-dashboard-ddh-disk.data.ts","./src/app/vsan/support/model/perf-dashboard-host-sparse.data.ts","./src/app/vsan/support/model/perf-dashboard-distribution.data.ts","./src/app/vsan/support/model/perf-dashboard.data.ts","./src/app/vsan/support/model/perf-dashboard-dom-comp-mgr.data.ts","./src/app/vsan/support/model/perf-dashboard-cluster-resync.data.ts","./src/app/vsan/support/support-perf.module.ts","./src/app/vsan/support/model/perf-dashboard-cmmds-net.data.ts","./src/app/vsan/support/model/perf-dashboard-memory-system.data.ts","./src/app/vsan/support/model/perf-dashboard-memory-vsan.data.ts","./src/app/vsan/support/model/perf-dashboard-clom-host.data.ts","./src/app/vsan/support/model/perf-dashboard-cmmds.data.ts","./src/app/vsan/support/model/perf-dashboard-cpu.data.ts","./src/app/vsan/support/util/perf-dashboard-sub-entities-data-query.service.ts","./src/app/vsan/support/model/perf-dashboard-cmmds-workload.data.ts","./src/app/vsan/support/model/navigation/support-nav.data.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACrB;AACwC;AACT;AACpB;AACmB;AAE/E;UAAM,0BAA0B;;IACpB,iDAAsB,GAAgB;QACnD,wFAAS,CAAC,eAAe,CACnB,oDAAoD,EACpD,kEAAW,CAAC,SAAS,CAAC,4DAA4D,CAAC,EACnF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,UAAU,EAAE,kEAAW,CAAC,SAAS,CAChD,qEAAqE,CAAC,CAAC;YAC7E,IAAI,+FAAgB,CAAC,WAAW,EAAE,kEAAW,CAAC,SAAS,CACjD,sEAAsE,CAAC,CAAC;YAC9E,IAAI,+FAAgB,CAAC,YAAY,EAAE,kEAAW,CAAC,SAAS,CAClD,uEAAuE,CAAC,CAAC;YAC/E,IAAI,+FAAgB,CAAC,aAAa,EAAE,kEAAW,CAAC,SAAS,CACnD,wEAAwE,CAAC,CAAC;SAClF,CAAC;QACR,wFAAS,CAAC,eAAe,CACnB,0DAA0D,EAC1D,kEAAW,CAAC,SAAS,CAAC,kEAAkE,CAAC,EACzF,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,iFAAiF,CAAC,CAAC;YACzF,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,kFAAkF,CAAC,CAAC;SAC5F,CAAC;QACR,wFAAS,CAAC,eAAe,CACnB,uDAAuD,EACvD,kEAAW,CAAC,SAAS,CAAC,+DAA+D,CAAC,EACtF,iGAAa,CAAC,YAAY,EAC1B;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,8EAA8E,CAAC,CAAC;YACtF,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,+EAA+E,CAAC,CAAC;YACvF,IAAI,+FAAgB,CAAC,eAAe,EAAE,kEAAW,CAAC,SAAS,CACrD,6EAA6E,CAAC,CAAC;YACrF,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,8EAA8E,CAAC,CAAC;SACxF,EACD,kFAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,qGAA2B,CAAC,KAAK,CAAC,CAAC;QACjG,wFAAS,CAAC,eAAe,CACnB,oDAAoD,EACpD,kEAAW,CAAC,SAAS,CAAC,4DAA4D,CAAC,EACnF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,aAAa,EAAE,kEAAW,CAAC,SAAS,CACnD,wEAAwE,CAAC,CAAC;YAChF,IAAI,+FAAgB,CAAC,YAAY,EAAE,kEAAW,CAAC,SAAS,CAClD,uEAAuE,CAAC,CAAC;SACjF,CAAC;QACR,wFAAS,CAAC,eAAe,CACnB,uDAAuD,EACvD,kEAAW,CAAC,SAAS,CAAC,+DAA+D,CAAC,EACtF,iGAAa,CAAC,YAAY,EAC1B;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,8EAA8E,CAAC,CAAC;YACtF,IAAI,+FAAgB,CAAC,eAAe,EAAE,kEAAW,CAAC,SAAS,CACrD,6EAA6E,CAAC,CAAC;SACvF,EACD,kFAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,qGAA2B,CAAC,KAAK,CAAC,CAAC;QACjG,wBAAwB;QACxB,wFAAS,CAAC,eAAe,CACnB,mDAAmD,EACnD,kEAAW,CAAC,SAAS,CAAC,2DAA2D,CAAC,EAClF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,eAAe,EAAE,kEAAW,CAAC,SAAS,CACrD,yEAAyE,CAAC,CAAC;YACjF,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,0EAA0E,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,eAAe,EAAE,kEAAW,CAAC,SAAS,CACrD,yEAAyE,CAAC,CAAC;YACjF,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,0EAA0E,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,eAAe,EAAE,kEAAW,CAAC,SAAS,CACrD,yEAAyE,CAAC,CAAC;YACjF,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,0EAA0E,CAAC,CAAC;SACpF,CAAC;QACR,kBAAkB;QAClB,wFAAS,CAAC,eAAe,CACtB,iEAAiE,EACjE,kEAAW,CAAC,SAAS,CAAC,uEAAuE,CAAC,EAC9F,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,UAAU,EAAE,kEAAW,CAAC,SAAS,CAChD,gFAAgF,CAAC,CAAC;YACxF,IAAI,+FAAgB,CAAC,WAAW,EAAE,kEAAW,CAAC,SAAS,CACpD,iFAAiF,CAAC,CAAC;SACxF,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,wBAAwB;QACxB,wFAAS,CAAC,eAAe,CACtB,uEAAuE,EACvE,kEAAW,CAAC,SAAS,CAAC,6EAA6E,CAAC,EACpG,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,4FAA4F,CAAC,CAAC;YACpG,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CAC1D,6FAA6F,CAAC,CAAC;SACpG,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,qBAAqB;QACrB,wFAAS,CAAC,eAAe,CACtB,oEAAoE,EACpE,kEAAW,CAAC,SAAS,CAAC,0EAA0E,CAAC,EACjG,iGAAa,CAAC,YAAY,EAC1B;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,yFAAyF,CAAC,CAAC;YACjG,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,0FAA0F,CAAC,CAAC;SACpG,EACD,kFAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,qGAA2B,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC;QACrG,wFAAS,CAAC,eAAe,CACnB,iDAAiD,EACjD,kEAAW,CAAC,SAAS,CAAC,yDAAyD,CAAC,EAChF,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,WAAW,EAAE,kEAAW,CAAC,SAAS,CACjD,mEAAmE,CAAC,CAAC;SAC7E,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,wFAAS,CAAC,eAAe,CACnB,iDAAiD,EACjD,kEAAW,CAAC,SAAS,CAAC,yDAAyD,CAAC,EAChF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,sEAAsE,CAAC,CAAC;YAC9E,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,wEAAwE,CAAC,CAAC;SAClF,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,wFAAS,CAAC,eAAe,CACnB,iDAAiD,EACjD,kEAAW,CAAC,SAAS,CAAC,yDAAyD,CAAC,EAChF,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,WAAW,EAAE,kEAAW,CAAC,SAAS,CACjD,mEAAmE,CAAC,CAAC;SAC7E,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,wFAAS,CAAC,eAAe,CACnB,gDAAgD,EAChD,kEAAW,CAAC,SAAS,CAAC,wDAAwD,CAAC,EAC/E,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,UAAU,EAAE,kEAAW,CAAC,SAAS,CAChD,iEAAiE,CAAC,CAAC;YACzE,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,qEAAqE,CAAC,CAAC;YAC7E,IAAI,+FAAgB,CAAC,kBAAkB,EAAE,kEAAW,CAAC,SAAS,CACxD,yEAAyE,CAAC,CAAC;YACjF,IAAI,+FAAgB,CAAC,QAAQ,EAAE,kEAAW,CAAC,SAAS,CAC9C,+DAA+D,CAAC,CAAC;YACvE,IAAI,+FAAgB,CAAC,QAAQ,EAAE,kEAAW,CAAC,SAAS,CAC9C,+DAA+D,CAAC,CAAC;SACzE,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,wFAAS,CAAC,eAAe,CACnB,+CAA+C,EAC/C,kEAAW,CAAC,SAAS,CAAC,uDAAuD,CAAC,EAC9E,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,uEAAuE,CAAC,CAAC;YAC/E,IAAI,+FAAgB,CAAC,kBAAkB,EAAE,kEAAW,CAAC,SAAS,CACxD,wEAAwE,CAAC,CAAC;SAClF,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,wFAAS,CAAC,eAAe,CACnB,2CAA2C,EAC3C,kEAAW,CAAC,SAAS,CAAC,mDAAmD,CAAC,EAC1E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,UAAU,EAAE,kEAAW,CAAC,SAAS,CAChD,4DAA4D,CAAC,CAAC;YACpE,IAAI,+FAAgB,CAAC,aAAa,EAAE,kEAAW,CAAC,SAAS,CACnD,+DAA+D,CAAC,CAAC;SACzE,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,wFAAS,CAAC,eAAe,CACnB,+CAA+C,EAC/C,kEAAW,CAAC,SAAS,CAAC,uDAAuD,CAAC,EAC9E,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,oEAAoE,CAAC,CAAC;YAC5E,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,uEAAuE,CAAC,CAAC;SACjF,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,wFAAS,CAAC,eAAe,CACnB,sDAAsD,EACtD,kEAAW,CAAC,SAAS,CAAC,8DAA8D,CAAC,EACrF,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,mBAAmB,EAAE,kEAAW,CAAC,SAAS,CACzD,gFAAgF,CAAC,CAAC;SAC1F,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,wFAAS,CAAC,eAAe,CACnB,wDAAwD,EACxD,kEAAW,CAAC,SAAS,CAAC,gEAAgE,CAAC,EACvF,iGAAa,CAAC,YAAY,EAC1B;YACG,IAAI,+FAAgB,CAAC,mBAAmB,EAAE,kEAAW,CAAC,SAAS,CACzD,kFAAkF,CAAC,CAAC;YAC1F,IAAI,+FAAgB,CAAC,qBAAqB,EAAE,kEAAW,CAAC,SAAS,CAC3D,oFAAoF,CAAC,CAAC;YAC5F,IAAI,+FAAgB,CAAC,sBAAsB,EAAE,kEAAW,CAAC,SAAS,CAC5D,qFAAqF,CAAC,CAAC;YAC7F,IAAI,+FAAgB,CAAC,qBAAqB,EAAE,kEAAW,CAAC,SAAS,CAC3D,oFAAoF,CAAC,CAAC;YAC5F,IAAI,+FAAgB,CAAC,uBAAuB,EAAE,kEAAW,CAAC,SAAS,CAC7D,sFAAsF,CAAC,CAAC;SAChG,EACD,kFAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,qGAA2B,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC;QACxG,wFAAS,CAAC,eAAe,CACnB,qDAAqD,EACrD,kEAAW,CAAC,SAAS,CAAC,6DAA6D,CAAC,EACpF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,WAAW,EAAE,kEAAW,CAAC,SAAS,CACjD,uEAAuE,CAAC,CAAC;YAC/E,IAAI,+FAAgB,CAAC,kBAAkB,EAAE,kEAAW,CAAC,SAAS,CACxD,8EAA8E,CAAC,CAAC;YACtF,IAAI,+FAAgB,CAAC,mBAAmB,EAAE,kEAAW,CAAC,SAAS,CACzD,+EAA+E,CAAC,CAAC;YACvF,IAAI,+FAAgB,CAAC,kBAAkB,EAAE,kEAAW,CAAC,SAAS,CACxD,8EAA8E,CAAC,CAAC;YACtF,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC1D,gFAAgF,CAAC,CAAC;SAC1F,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,wFAAS,CAAC,eAAe,CACnB,qDAAqD,EACrD,kEAAW,CAAC,SAAS,CAAC,6DAA6D,CAAC,EACpF,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,6EAA6E,CAAC,CAAC;YACrF,IAAI,+FAAgB,CAAC,wBAAwB,EAAE,kEAAW,CAAC,SAAS,CAC9D,oFAAoF,CAAC,CAAC;YAC5F,IAAI,+FAAgB,CAAC,yBAAyB,EAAE,kEAAW,CAAC,SAAS,CAC/D,qFAAqF,CAAC,CAAC;YAC7F,IAAI,+FAAgB,CAAC,wBAAwB,EAAE,kEAAW,CAAC,SAAS,CAC9D,oFAAoF,CAAC,CAAC;YAC5F,IAAI,+FAAgB,CAAC,0BAA0B,EAAE,kEAAW,CAAC,SAAS,CAChE,sFAAsF,CAAC,CAAC;SAChG,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,wFAAS,CAAC,eAAe,CACnB,kDAAkD,EAClD,kEAAW,CAAC,SAAS,CAAC,0DAA0D,CAAC,EACjF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,sBAAsB,EAAE,kEAAW,CAAC,SAAS,CAC5D,+EAA+E,CAAC,CAAC;YACvF,IAAI,+FAAgB,CAAC,qBAAqB,EAAE,kEAAW,CAAC,SAAS,CAC3D,8EAA8E,CAAC,CAAC;YACtF,IAAI,+FAAgB,CAAC,yBAAyB,EAAE,kEAAW,CAAC,SAAS,CAC/D,kFAAkF,CAAC,CAAC;YAC1F,IAAI,+FAAgB,CAAC,uBAAuB,EAAE,kEAAW,CAAC,SAAS,CAC7D,gFAAgF,CAAC,CAAC;YACxF,IAAI,+FAAgB,CAAC,uBAAuB,EAAE,kEAAW,CAAC,SAAS,CAC7D,gFAAgF,CAAC,CAAC;YACxF,IAAI,+FAAgB,CAAC,sBAAsB,EAAE,kEAAW,CAAC,SAAS,CAC5D,+EAA+E,CAAC,CAAC;YACvF,IAAI,+FAAgB,CAAC,0BAA0B,EAAE,kEAAW,CAAC,SAAS,CAChE,mFAAmF,CAAC,CAAC;YAC3F,IAAI,+FAAgB,CAAC,wBAAwB,EAAE,kEAAW,CAAC,SAAS,CAC9D,iFAAiF,CAAC,CAAC;SAC3F,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,wFAAS,CAAC,eAAe,CACnB,kDAAkD,EAClD,kEAAW,CAAC,SAAS,CAAC,0DAA0D,CAAC,EACjF,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,sBAAsB,EAAE,kEAAW,CAAC,SAAS,CAC5D,+EAA+E,CAAC,CAAC;YACvF,IAAI,+FAAgB,CAAC,qBAAqB,EAAE,kEAAW,CAAC,SAAS,CAC3D,8EAA8E,CAAC,CAAC;YACtF,IAAI,+FAAgB,CAAC,yBAAyB,EAAE,kEAAW,CAAC,SAAS,CAC/D,kFAAkF,CAAC,CAAC;YAC1F,IAAI,+FAAgB,CAAC,uBAAuB,EAAE,kEAAW,CAAC,SAAS,CAC7D,gFAAgF,CAAC,CAAC;YACxF,IAAI,+FAAgB,CAAC,uBAAuB,EAAE,kEAAW,CAAC,SAAS,CAC7D,gFAAgF,CAAC,CAAC;YACxF,IAAI,+FAAgB,CAAC,sBAAsB,EAAE,kEAAW,CAAC,SAAS,CAC5D,+EAA+E,CAAC,CAAC;YACvF,IAAI,+FAAgB,CAAC,0BAA0B,EAAE,kEAAW,CAAC,SAAS,CAChE,mFAAmF,CAAC,CAAC;YAC3F,IAAI,+FAAgB,CAAC,wBAAwB,EAAE,kEAAW,CAAC,SAAS,CAC9D,iFAAiF,CAAC,CAAC;SAC3F,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,wFAAS,CAAC,eAAe,CACnB,iDAAiD,EACjD,kEAAW,CAAC,SAAS,CAAC,yDAAyD,CAAC,EAChF,iGAAa,CAAC,YAAY,EAC1B;YACG,IAAI,+FAAgB,CAAC,qBAAqB,EAAE,kEAAW,CAAC,SAAS,CAC9D,6EAA6E,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC1D,4EAA4E,CAAC,CAAC;YACpF,IAAI,+FAAgB,CAAC,wBAAwB,EAAE,kEAAW,CAAC,SAAS,CAC9D,gFAAgF,CAAC,CAAC;YACxF,IAAI,+FAAgB,CAAC,sBAAsB,EAAE,kEAAW,CAAC,SAAS,CAC5D,8EAA8E,CAAC,CAAC;YACtF,IAAI,+FAAgB,CAAC,sBAAsB,EAAE,kEAAW,CAAC,SAAS,CAC5D,8EAA8E,CAAC,CAAC;YACtF,IAAI,+FAAgB,CAAC,qBAAqB,EAAE,kEAAW,CAAC,SAAS,CAC3D,6EAA6E,CAAC,CAAC;YACrF,IAAI,+FAAgB,CAAC,yBAAyB,EAAE,kEAAW,CAAC,SAAS,CAC/D,iFAAiF,CAAC,CAAC;YACzF,IAAI,+FAAgB,CAAC,uBAAuB,EAAE,kEAAW,CAAC,SAAS,CAC7D,+EAA+E,CAAC,CAAC;SACzF,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,8BAA8B;QAC9B,wFAAS,CAAC,eAAe,CACtB,6EAA6E,EAC7E,kEAAW,CAAC,SAAS,CAAC,mFAAmF,CAAC,EAC1G,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,gGAAgG,CAAC,CAAC;YACxG,IAAI,+FAAgB,CAAC,aAAa,EAAE,kEAAW,CAAC,SAAS,CACnD,+FAA+F,CAAC,CAAC;SACzG,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,4BAA4B;QAC5B,wFAAS,CAAC,eAAe,CACtB,0EAA0E,EAC1E,kEAAW,CAAC,SAAS,CAAC,gFAAgF,CAAC,EACvG,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,6FAA6F,CAAC,CAAC;YACrG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,6FAA6F,CAAC,CAAC;YACrG,IAAI,+FAAgB,CAAC,eAAe,EAAE,kEAAW,CAAC,SAAS,CACrD,8FAA8F,CAAC,CAAC;YACtG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,6FAA6F,CAAC,CAAC;YACrG,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,gGAAgG,CAAC,CAAC;YACxG,IAAI,+FAAgB,CAAC,eAAe,EAAE,kEAAW,CAAC,SAAS,CACrD,8FAA8F,CAAC,CAAC;SACxG,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,+BAA+B;QAC/B,wFAAS,CAAC,eAAe,CACtB,6EAA6E,EAC7E,kEAAW,CAAC,SAAS,CAAC,mFAAmF,CAAC,EAC1G,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,gGAAgG,CAAC,CAAC;YACxG,IAAI,+FAAgB,CAAC,eAAe,EAAE,kEAAW,CAAC,SAAS,CACrD,iGAAiG,CAAC,CAAC;YACzG,IAAI,+FAAgB,CAAC,aAAa,EAAE,kEAAW,CAAC,SAAS,CACnD,+FAA+F,CAAC,CAAC;YACvG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,gGAAgG,CAAC,CAAC;YACxG,IAAI,+FAAgB,CAAC,WAAW,EAAE,kEAAW,CAAC,SAAS,CACjD,6FAA6F,CAAC,CAAC;YACrG,IAAI,+FAAgB,CAAC,YAAY,EAAE,kEAAW,CAAC,SAAS,CAClD,8FAA8F,CAAC,CAAC;SACxG,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,+BAA+B;QAC/B,wFAAS,CAAC,eAAe,CACtB,sEAAsE,EACtE,kEAAW,CAAC,SAAS,CAAC,4EAA4E,CAAC,EACnG,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,UAAU,EAAE,kEAAW,CAAC,SAAS,CAChD,qFAAqF,CAAC,CAAC;YAC7F,IAAI,+FAAgB,CAAC,aAAa,EAAE,kEAAW,CAAC,SAAS,CACnD,wFAAwF,CAAC,CAAC;YAChG,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,2FAA2F,CAAC,CAAC;YACnG,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,2FAA2F,CAAC,CAAC;SACrG,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,4BAA4B;QAC5B,wFAAS,CAAC,eAAe,CACtB,sEAAsE,EACtE,kEAAW,CAAC,SAAS,CAAC,4EAA4E,CAAC,EACnG,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,aAAa,EAAE,kEAAW,CAAC,SAAS,CACnD,wFAAwF,CAAC,CAAC;YAChG,IAAI,+FAAgB,CAAC,YAAY,EAAE,kEAAW,CAAC,SAAS,CAClD,uFAAuF,CAAC,CAAC;SACjG,EAAE,IAAI,EAAE,KAAK,CAAC;KACpB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxYL,kFAAkF;AACqB;AACxB;AACH;AAIU;AAC7B;AACa;AACE;AACX;AACJ;AAKU;AACA;AACb;AACqB;AACrB;AAEiB;AACnC;AACwB;AAChB;AAEwB;AAC0B;AAOvF;UAAM,qBAAqB;QAgG/B,YAAoB,gBAA0C,EAChD,sBAAqD;YAD/C,qBAAgB,GAAhB,gBAAgB,CAA0B;YAChD,2BAAsB,GAAtB,sBAAsB,CAA+B;YA9FnE,yBAAoB,GAAY,IAAI,CAAC;YAErC;;;eAGG;YACH,0BAAqB,GAA4B,qFAAyB,CAAC,kBAAkB,CAAC;YAE9F;;;;eAIG;YACH,gCAA2B,GAAgC,qFAAyB,CAAC,qBAAqB,CAAC;YAM3G,aAAQ,GAAY,KAAK,CAAC;YAe1B,cAAS,GAAuB,IAAI,0DAAY,EAAQ,CAAC;YAQzD,iBAAY,GAAW,IAAI,CAAC;YAE5B;;eAEG;YACH,+BAA0B,GAAwB,IAAI,CAAC;YAcvD,eAAU,GAAkB,sEAAa,CAAC,aAAa,CAAC;YAExD;;eAEG;YACK,wBAAmB,GAA+B,IAAI,GAAG,EAAE,CAAC;YAEpE;;;eAGG;YACK,yBAAoB,GAAkD,IAAI,GAAG,EAAE,CAAC;YAiBhF,aAAQ,GAAwC,IAAI,GAAG,EAAkC,CAAC;YAgF1F,8BAAyB,GAAG,GAAW,EAAE;gBAC9C,OAAO,IAAI,CAAC,oBAAoB,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YACpF,CAAC,CAAC;YAEF,uBAAkB,GAAG,CAAC,aAAoC,EAAe,EAAE;gBACxE,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;oBAC1B,OAAO,EAAE,CAAC;iBACZ;gBACD;;;mBAGG;gBACH,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC;YACnH,CAAC,CAAC;YAEF,oBAAe,GAAG,CAAC,aAAoC,EAAE,SAAiB,EAAE,EAAE;gBAC3E,IAAI,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,oBAAoB,CAAC,IAAI,KAAK,aAAa,CAAC,IAAI,EAAE;oBACrF,OAAO;iBACT;gBAED,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC;gBACvC,IAAI,CAAC,oBAAoB,GAAG,aAAa,CAAC;gBAC1C,IAAI,CAAC,qBAAqB,GAAG,SAAS,CAAC;gBAEvC,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACtE,CAAC,CAAC;YAEF;;;eAGG;YACK,+BAA0B,GAAG,CAAC,iBAAoC,EAAY,EAAE;gBACrF,QAAQ,iBAAiB,EAAE;oBACxB,KAAK,kFAAiB,CAAC,SAAS;wBAC7B,OAAO,CAAC,wEAAa,CAAC,iBAAiB,EAAE,EAAE,wEAAa,CAAC,cAAc,EAAE,CAAC,CAAC;oBAC9E,KAAK,kFAAiB,CAAC,QAAQ;wBAC5B,OAAO,CAAC,wEAAa,CAAC,aAAa,EAAE,CAAC,CAAC;oBAC1C,KAAK,kFAAiB,CAAC,UAAU;wBAC9B,OAAO,CAAC,wEAAa,CAAC,kBAAkB,EAAE,EAAE,wEAAa,CAAC,eAAe,EAAE,CAAC,CAAC;oBAChF,KAAK,kFAAiB,CAAC,KAAK,CAAC,CAAC,mDAAmD;oBACjF,KAAK,kFAAiB,CAAC,IAAI;wBACxB,OAAO,CAAC,wEAAa,CAAC,aAAa,EAAE,CAAC,CAAC;oBAC1C,KAAK,kFAAiB,CAAC,SAAS;wBAC7B,OAAO,CAAC,wEAAa,CAAC,UAAU,EAAE,CAAC,CAAC;oBACvC,KAAK,kFAAiB,CAAC,YAAY;wBAChC,OAAO,CAAC,wEAAa,CAAC,aAAa,EAAE,CAAC,CAAC;oBAC1C,KAAK,kFAAiB,CAAC,SAAS;wBAC7B,OAAO,CAAC,wEAAa,CAAC,UAAU,EAAE,CAAC,CAAC;oBACvC,KAAK,kFAAiB,CAAC,UAAU;wBAC9B,OAAO,CAAC,wEAAa,CAAC,eAAe,EAAE,CAAC,CAAC;oBAC5C,KAAK,kFAAiB,CAAC,OAAO;wBAC3B,OAAO,CAAC,wEAAa,CAAC,cAAc,EAAE,CAAC,CAAC;oBAC3C,KAAK,kFAAiB,CAAC,IAAI;wBACxB,OAAO,CAAC,wEAAa,CAAC,aAAa,EAAE,CAAC,CAAC;oBAC1C,KAAK,kFAAiB,CAAC,WAAW;wBAC/B,OAAO,CAAC,wEAAa,CAAC,aAAa,EAAE,CAAC,CAAC;oBAC1C,KAAK,kFAAiB,CAAC,QAAQ;wBAC5B,OAAO,CAAC,wEAAa,CAAC,eAAe,EAAE,CAAC,CAAC;oBAC5C,KAAK,kFAAiB,CAAC,QAAQ;wBAC5B,OAAO,CAAC,wEAAa,CAAC,eAAe,EAAE,CAAC,CAAC;oBAC5C,KAAK,kFAAiB,CAAC,KAAK;wBACzB,OAAO,CAAC,wEAAa,CAAC,KAAK,EAAE,CAAC,CAAC;oBAClC,KAAK,kFAAiB,CAAC,GAAG;wBACvB,OAAO,CAAC,wEAAa,CAAC,SAAS,EAAE,CAAC,CAAC;oBACtC,KAAK,kFAAiB,CAAC,QAAQ;wBAC5B,OAAO,CAAC,wEAAa,CAAC,mBAAmB,EAAE,CAAC,CAAC;oBAChD,KAAK,kFAAiB,CAAC,UAAU;wBAC9B,OAAO,CAAC,wEAAa,CAAC,gBAAgB,EAAE,EAAE,wEAAa,CAAC,gBAAgB,EAAE,CAAC,CAAC;oBAC/E,KAAK,kFAAiB,CAAC,SAAS;wBAC7B,OAAO,CAAC,wEAAa,CAAC,UAAU,EAAE,CAAC,CAAC;oBACvC,KAAK,kFAAiB,CAAC,gBAAgB;wBACpC,OAAO,CAAC,wEAAa,CAAC,iBAAiB,EAAE,CAAC,CAAC;oBAC9C,KAAK,kFAAiB,CAAC,gBAAgB;wBACpC,OAAO,CAAC,wEAAa,CAAC,UAAU,EAAE,CAAC,CAAC;oBACvC,KAAK,kFAAiB,CAAC,WAAW;wBAC/B,OAAO,CAAC,wEAAa,CAAC,aAAa,EAAE,CAAC,CAAC;oBAC1C,KAAK,kFAAiB,CAAC,OAAO;wBAC3B,OAAO,CAAC,wEAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACrC,KAAK,kFAAiB,CAAC,OAAO;wBAC3B,OAAO,CAAC,wEAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACrC,KAAK,kFAAiB,CAAC,YAAY;wBAChC,OAAO,CAAC,wEAAa,CAAC,cAAc,EAAE,CAAC,CAAC;oBAC3C,KAAK,kFAAiB,CAAC,aAAa;wBACjC,OAAO,CAAC,wEAAa,CAAC,cAAc,EAAE,CAAC,CAAC;oBAC3C,KAAK,kFAAiB,CAAC,UAAU;wBAC9B,OAAO,CAAC,wEAAa,CAAC,WAAW,EAAE,CAAC,CAAC;oBACxC;wBACG,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;iBACnD;YACJ,CAAC,CAAC;YAEM,qBAAgB,GAAG,CAAC,WAAqB,EAAE,SAA4B,EAAmB,EAAE;gBACjG,OAAO,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,wEAAa,CAAC,OAAO,CAAC,MAAM,CAC3D,UAAU,EACV,GAAG,EAAE,gDAAgD;gBACrD,IAAI,EAAE,2BAA2B,CACjC,SAAS,CAAC,IAAI,EACd,SAAS,CAAC,EAAE,EACZ,IAAI,EAAE,+BAA+B,CACrC,IAAI,CAAC,8BAA8B,CAAC,CAAC,CAAC;YAC/C,CAAC,CAAC;YAyBM,+BAA0B,GAAG,CAAC,qBAA4C,EAAyB,EAAE;gBAC1G,OAAO,IAAI,CAAC,mBAAmB;qBACxB,GAAG,CAAC,SAAS,CAAC,EAAE;oBACd,MAAM,eAAe,GAAwB,qFAAmB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;oBAClG,qBAAqB,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;yBAC9F,OAAO,CAAC,UAAU,CAAC,EAAE;wBACnB,eAAe,CAAC,WAAW;4BACrB,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC3F,eAAe,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC;wBACnD,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;4BACzE,OAAO,uFAAoB,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAClD,MAAM,CAAC,SAAS,EAChB,MAAM,CAAC,GAAG,EACV,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC/F,CAAC,CAAC,CAAC,CAAC;oBACP,CAAC,CAAC,CAAC;oBACT,OAAO,eAAe,CAAC;gBAC1B,CAAC,CAAC,CAAC;YACZ,CAAC,CAAC;YAEF,0BAAqB,GAAG,CAAC,QAA6B,EAAiB,EAAE;gBACtE,MAAM,QAAQ,GAAW,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;gBAEzE,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EAAE;oBACtC,MAAM,MAAM,GAAgB,IAAI,CAAC,eAAe,CAAC;oBACjD,MAAM,UAAU,GAAa,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;oBAC9E,MAAM,YAAY,GAAuB,EAAE,CAAC;oBAE5C,oGAAoG;oBACpG,MAAM,UAAU,GAAqB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;oBACrG,IAAI,CAAC,UAAU,IAAI,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;wBAC9D,iEAAiE;wBACjE,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;4BACpB,YAAY,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;gCAC7C,IAAI,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;oCACxC,OAAO,MAAM,CAAC;iCAChB;4BACJ,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;wBAC1B,CAAC,CAAC,CAAC;wBAEH,qFAAqF;wBACrF,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;4BAC3B,IAAI,UAAoB,CAAC;4BACzB,IAAI,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;gCACxD,oFAAoF;gCACpF,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;oCACrC,IAAI,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;wCACjD,IAAI,CAAC,UAAU,EAAE;4CACd,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;yCACrC;6CAAM;4CACJ,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;gDAClC,iEAAiE;gDACjE,sCAAsC;gDACtC,IAAI,UAAU,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,GAAG,KAAK,IAAI,EAAE;oDAC7C,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;iDAC5D;4CACJ,CAAC,CAAC,CAAC;yCACL;qCACH;gCACJ,CAAC,CAAC,CAAC;6BACL;iCAAM;gCACJ,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;6BACnD;4BACD,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,uFAAoB,CAAC,OAAO,CAAC,MAAM,CACzD,UAAU,EACV,IAAI,EACJ,MAAM,CAAC,GAAG,EACV,IAAI,CACT,CAAC,CAAC;wBACN,CAAC,CAAC,CAAC;qBACL;oBACD,MAAM,UAAU,GACV,CAAC,IAAI,2FAAW,CAAC,QAAQ,EAAE,MAAM,EAAE,2FAAW,CAAC,6BAA6B,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;oBAC5G,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;oBAChD,OAAO,UAAU,CAAC;iBACpB;gBACD,OAAO,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;YAC7C,CAAC,CAAC;YA0BM,yBAAoB,GAAG,CAAC,QAAgB,EAAU,EAAE;gBACzD,OAAO,IAAI,CAAC,oBAAoB,CAAC,IAAI,GAAG,QAAQ,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAC/F,CAAC,CAAC;YAMF,qBAAgB,GAAG,CAAC,gBAAkC,EAAuB,EAAE;gBAC5E,OAAO,IAAI,CAAC,qBAAqB;qBAC1B,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/F,CAAC,CAAC;YAEM,yCAAoC,GAAG,CAAC,QAA6B,EAAoB,EAAE;gBAChG,OAAO,IAAI,CAAC,mBAAmB;qBACxB,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnG,CAAC,CAAC;YAeF;;eAEG;YACH,kBAAa,GAAG,CAAC,GAAoB,EAAE,EAAE;gBACtC,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC;gBAC/B,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;YACzB,CAAC,CAAC;YAEF;;eAEG;YACH,cAAS,GAAG,GAAG,EAAE;gBACd,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,MAAM,OAAO,GAAoB,IAAI,8FAAe,EAAE,CAAC;gBACvD,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;YAC7B,CAAC,CAAC;YAEF,kBAAa,GAAG,CAAC,gBAAkC,EAAE,EAAE;gBACpD,MAAM,QAAQ,GAAwB,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;gBAC9E,IAAI,CAAC,0BAA0B,GAAG,QAAQ,CAAC;gBAC3C,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC;gBACxC,IAAI,CAAC,sBAAsB,GAAG,gBAAgB,CAAC,IAAI,CAAC;gBACpD,IAAI,CAAC,sBAAsB,GAAG,gBAAgB,CAAC,IAAI,CAAC;gBACpD,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;gBACzC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACzB,CAAC,CAAC;YAEF,mBAAc,GAAG,GAAG,EAAE;gBACnB,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC;gBACvC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;gBACnC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;gBACnC,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;YAC5C,CAAC,CAAC;YAEM,6BAAwB,GAAG,CAAC,QAA6B,EAAE,EAAE;gBAClE,4DAA4D;gBAC5D,MAAM,QAAQ,GAAW,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,oCAAoC,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACjH,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;YAC7C,CAAC,CAAC;YAEF,qBAAgB,GAAG,CAAC,OAAe,EAAW,EAAE;gBAC7C,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,OAAO,CAAC,CAAC;YACnE,CAAC,CAAC;YAEF,uBAAkB,GAAG,CAAC,KAAgB,EAAE,EAAE;gBACvC,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;oBAClC,mDAAmD;oBACnD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,cAAc,CAAC,EAAE,CAAC,CAAC;iBACvG;qBAAM;oBACJ,+CAA+C;oBAC/C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,oBAAoB,CAAC;yBAClE,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,EAAE,KAAK,cAAc,CAAC,EAAE,CAAC,CAAC;iBAC9G;gBAED,6BAA6B;gBAC7B,IAAI,CAAC,mBAAmB,GAAG,IAAI,GAAG,EAAE,CAAC;YACxC,CAAC,CAAC;YAEF,sBAAiB,GAAG,CAAC,SAA4B,EAAE,QAAiB,EAAE,EAAE;gBACrE,+BAA+B;gBAC/B,IAAI,CAAC,IAAI,CAAC,oBAAoB,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,+BAA+B,CAAC,EAAE;oBACpF,OAAO;iBACT;gBAED,uDAAuD;gBACvD,IAAI,CAAC,mBAAmB,GAAG,IAAI,GAAG,EAAE,CAAC;gBACrC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;gBAClC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;gBACjE,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;gBAClC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;gBAEnE,IAAI,CAAC,QAAQ,EAAE;oBACZ,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,SAAS,EAAE,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,CAAC,CAAC;iBACzG;YACJ,CAAC,CAAC;YAEF,sBAAiB,GAAG,CAAC,iBAAoC,EAAW,EAAE;gBACnE,OAAO,qFAAyB,CAAC,iBAAiB,CAAC,OAAO,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;YACxF,CAAC,CAAC;YAEF,wBAAmB,GAAG,CAAC,IAAmB,EAAE,EAAE;gBAC3C,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,UAAU,CAAC;gBAC9C,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,UAAU,CAAC;gBAC9C,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAChD,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,UAAU,CAAC;YACvD,CAAC,CAAC;QAnaF,CAAC;QArBD,IAAI,eAAe;YAChB,MAAM,QAAQ,GAAW,IAAI,CAAC,yBAAyB,EAAE,CAAC;YAC1D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;gBAC3B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;oBACtC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;oBAC1E,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC;aAC3C;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAClC,CAAC;QAED,IAAI,eAAe,CAAC,MAAmB;YACpC,MAAM,QAAQ,GAAW,IAAI,CAAC,yBAAyB,EAAE,CAAC;YAC1D,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;QACpC,CAAC;QAaD,QAAQ;;YACL,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,gBAAgB;gBAC5C,CAAC,CAAC,qFAAyB,CAAC,wBAAwB,CAAC,qFAAyB,CAAC,kBAAkB,CAAC;gBAClG,CAAC,CAAC,qFAAyB,CAAC,kBAAkB,CAAC;YACrD,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,gBAAgB;gBAClD,CAAC,CAAC,qFAAyB,CAAC,6BAA6B,CAAC,qFAAyB,CAAC,qBAAqB,CAAC;gBAC1G,CAAC,CAAC,qFAAyB,CAAC,qBAAqB,CAAC;YAExD,IAAI,CAAC,sBAAsB,GAAG,CAAH,KAAG,IAAI,CAAC,aAAa,0CAAE,gBAAgB,CAAC;YACnE,MAAM,YAAY,GAAsB,IAAI,CAAC,aAAa;gBACpD,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa;gBAClC,CAAC,CAAC,kFAAiB,CAAC,SAAS,CAAC;YACpC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;YAChE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;QAChE,CAAC;QAED,eAAe;YACZ,IAAI,CAAC,6BAA6B,EAAE,CAAC;YACrC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAClF,CAAC;QAEO,gBAAgB,CAAC,IAAuB;YAC7C,MAAM,iBAAiB,GACjB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;YAE5E,OAAO,iBAAiB;gBAClB,CAAC,CAAC,iBAAiB;gBACnB,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;QAC/C,CAAC;QAEO,wBAAwB,CAAC,IAAuB;YACrD,MAAM,8BAA8B,GAC9B,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,KAAK,IAAI,CAAC;YAC3C,OAAO,IAAI,CAAC,2BAA2B;iBAChC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;iBACxE,QAAQ,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;QACxD,CAAC;QAEO,6BAA6B;YAClC,kCAAkC;YAClC,MAAM,kBAAkB,GAClB,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,EAAE,CAAC;YAC1D;;;gBAGI;YACJ,IAAI,kBAAkB,IAAI,IAAI,EAAE;gBAC7B,MAAM,SAAS,GAAsB,kBAAkB,CAAC,SAAS,CAAC;gBAClE,MAAM,KAAK,GAAqB,kBAAkB,CAAC,KAAK,CAAC;gBAEzD,IAAI,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI;oBACpE,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC,EAAE,KAAK,SAAS,CAAC,EAAE,EAAE;oBACvE,IAAI,CAAC,wBAAwB,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;oBAC7D,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;iBACpC;aACH;QACJ,CAAC;QAED,IAAY,+BAA+B;YACxC,MAAM,kBAAkB,GAA+B,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,EAAE,CAAC;YAE3G,0EAA0E;YAC1E,IAAI,kBAAkB,IAAI,IAAI,EAAE;gBAC7B,OAAO,IAAI,CAAC;aACd;YAED,OAAO,IAAI,CAAC,gBAAgB,KAAK,kBAAkB,CAAC,SAAS,CAAC;QACjE,CAAC;QAyGa,kBAAkB,CAAC,iBAAoC,EAAE,SAA4B;;gBAChG,IAAI,CAAC,SAAS,EAAE;oBACb,OAAO;iBACT;gBACD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;gBAC1E,IAAI,IAAI,CAAC,qBAAqB,EAAE;oBAC7B,OAAO;iBACT;gBAED,MAAM,WAAW,GAAa,IAAI,CAAC,0BAA0B,CAAC,iBAAiB,CAAC,CAAC;gBACjF,MAAM,UAAU,GAAoB,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;gBAElF,MAAM,OAAO,GACP,MAAM,IAAI,CAAC,gBAAgB,CAAC,8BAA8B,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;gBAC9F,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE;oBACzD,IAAI,CAAC,qBAAqB,GAAG,OAAO,CAAC;iBACvC;qBAAM;oBACJ,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC;iBACxE;gBACD,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC;YAC7E,CAAC;SAAA;QAiFD,IAAI,UAAU;YACX,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;gBAC7B,OAAO,IAAI,CAAC;aACd;YACD,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;gBAC5B,MAAM,iBAAiB,GAAY,4EAAiB,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC9F,IAAI,IAAI,CAAC,oBAAoB,CAAC,IAAI,KAAK,kFAAiB,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;oBACzF,OAAO,iBAAiB,CAAC,CAAC,CAAC,qGAAmB,CAAC,mCAAmC,CAAC,CAAC;wBAC9E,qGAAmB,CAAC,uDAAuD,CAAC;iBACpF;gBACD,OAAO,iBAAiB,CAAC,CAAC,CAAC,qGAAmB,CAAC,iBAAiB,CAAC,CAAC;oBAC5D,qGAAmB,CAAC,qCAAqC,CAAC;aAClE;YACD,OAAO,IAAI,CAAC;QACf,CAAC;QAED;;WAEG;QACH,IAAI,mBAAmB;YACpB,OAAO,IAAI,CAAC,qBAAqB;gBAC3B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACzF,CAAC;QAMD,IAAY,WAAW;YACpB,OAAO,IAAI,CAAC,0BAA0B,KAAK,IAAI,CAAC;QACnD,CAAC;QAaO,WAAW,CAAC,GAAU;YAC3B,oDAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;YAChC,IAAI,GAAG,CAAC,OAAO,KAAK,4EAAe,CAAC,yBAAyB,EAAE,EAAE;gBAC9D,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,IAAI,CAAC,YAAY,GAAG,4DAAW,CAAC,SAAS,CAAC,qDAAqD,CAAC,CAAC;aACnG;iBAAM;gBACJ,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;gBACjC,IAAI,CAAC,YAAY,GAAG,4DAAW,CAAC,SAAS,CAAC,sCAAsC,CAAC,CAAC;aACpF;QACJ,CAAC;QA0FD,IAAI,wBAAwB;YACzB,MAAM,UAAU,GAAqB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YACrG,IAAI,CAAC,UAAU,EAAE;gBACd,OAAO,EAAE,CAAC;aACZ;YACD,MAAM,gBAAgB,GAAwB,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;YAChF,IAAI,CAAC,gBAAgB,EAAE;gBACpB,OAAO,EAAE,CAAC;aACZ;YACD,MAAM,YAAY,GAAgB,IAAI,2FAAW,CAC3C,gBAAgB,EAChB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAClD,2FAAW,CAAC,6BAA6B,GAAG,gBAAgB,CAAC,WAAW,CAAC,CAAC;YAChF,OAAO,YAAY,CAAC,MAAM,CAAC;QAC9B,CAAC;QAED,IAAI,kBAAkB;YACnB,MAAM,aAAa,GAAgB,IAAI,CAAC,wBAAwB,CAAC;YACjE,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,oBAAoB,CAAC;iBAClD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7F,CAAC;QAED,IAAI,uBAAuB;YACxB,MAAM,SAAS,GAAqB,IAAI,CAAC,mBAAmB;iBACrD,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,0BAA0B,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC3F,MAAM,iBAAiB,GAAY,SAAS,IAAI,SAAS,CAAC,SAAS,CAAC;YACpE,IAAI,iBAAiB,EAAE;gBACpB,OAAO,IAAI,CAAC,wBAAwB,CAAC;aACvC;YACD,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAC7D,CAAC;;IApiBe,mDAA6B,GAAW,GAAG,CAAC;IAyC5D;QADC,mGAAgB,EAAE;;0DACF;IAGjB;QADC,2FAAY,EAAE;;+DACa;IAsO5B;QADC,8EAAM,CAAC,EAAC,SAAS,EAAE,8CAA8C,EAAE,aAAa,EAAE,uFAAa,CAAC,IAAI,EAAC,CAAC;;;;mEAqBtG;IA4HD;QADC,2FAAY,EAAE;;uFACU,KAAK;;4DAU7B;;;AA2HG,MAAM,aAAa;IACvB,YAAmB,UAAkB,EACxB,UAAkB,EAClB,UAAkB,EAClB,QAA6B;QAHvB,eAAU,GAAV,UAAU,CAAQ;QACxB,eAAU,GAAV,UAAU,CAAQ;QAClB,eAAU,GAAV,UAAU,CAAQ;QAClB,aAAQ,GAAR,QAAQ,CAAqB;IAC1C,CAAC;CACH;;;;;;;;;;;;;;ACllBD;AAAA;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACrB;AACwC;AACT;AAIhF;UAAM,qBAAqB;;IACf,iCAAW,GAAgB;QACxC,oBAAoB;QACpB,wFAAS,CAAC,eAAe,CACnB,iDAAiD,EACjD,kEAAW,CAAC,SAAS,CAAC,0DAA0D,CAAC,EACjF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,WAAW,EAC1B,kEAAW,CAAC,SAAS,CACf,oEAAoE,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,WAAW,EAC1B,kEAAW,CAAC,SAAS,CACf,oEAAoE,CAAC,CAAC;SACpF,CAAC;QACR,mBAAmB;QACnB,wFAAS,CAAC,eAAe,CACnB,oDAAoD,EACpD,kEAAW,CAAC,SAAS,CAAC,6DAA6D,CAAC,EACpF,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,0EAA0E,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,0EAA0E,CAAC,CAAC;SACpF,CAAC;QACR,yBAAyB;QACzB,wFAAS,CAAC,eAAe,CACnB,mDAAmD,EACnD,kEAAW,CAAC,SAAS,CAAC,yDAAyD,CAAC,EAChF,iGAAa,CAAC,aAAa,EAC3B;YACG,IAAI,+FAAgB,CAAC,mBAAmB,EAAE,kEAAW,CAAC,SAAS,CACzD,2EAA2E,CAAC,CAAC;YACnF,IAAI,+FAAgB,CAAC,mBAAmB,EAAE,kEAAW,CAAC,SAAS,CACzD,2EAA2E,CAAC,CAAC;SACrF,CAAC;QACR,iCAAiC;QACjC,wFAAS,CAAC,eAAe,CACnB,sDAAsD,EACtD,kEAAW,CAAC,SAAS,CAAC,+DAA+D,CAAC,EACtF,iGAAa,CAAC,aAAa,EAC3B;YACG,IAAI,+FAAgB,CAAC,aAAa,EAAE,kEAAW,CAAC,SAAS,CACnD,2EAA2E,CAAC,CAAC;YACnF,IAAI,+FAAgB,CAAC,aAAa,EAAE,kEAAW,CAAC,SAAS,CACnD,2EAA2E,CAAC,CAAC;SACrF,CAAC;QACR,6BAA6B;QAC7B,wFAAS,CAAC,eAAe,CACnB,sDAAsD,EACtD,kEAAW,CAAC,SAAS,CAAC,iEAAiE,CAAC,EACxF,iGAAa,CAAC,aAAa,EAC3B;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,oEAAoE,CAAC,CAAC;YAC5E,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,oEAAoE,CAAC,CAAC;SAC9E,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,2BAA2B;QAC3B,wFAAS,CAAC,eAAe,CACnB,oDAAoD,EACpD,kEAAW,CAAC,SAAS,CAAC,0DAA0D,CAAC,EACjF,iGAAa,CAAC,aAAa,EAC3B;YACG,IAAI,+FAAgB,CAAC,YAAY,EAAE,kEAAW,CAAC,SAAS,CAClD,kEAAkE,CAAC,CAAC;SAC5E,EAAE,IAAI,EAAE,KAAK,CAAC;KACvB,CAAC;;;;;;;;;;;;;;;;AC3EL;AAAA;AAAA,6EAA6E;AAE7E,IAAY,iBA6BX,iBA7BD,WAAY,iBAAiB;IAC1B,mEAAS;IACT,iEAAQ;IACR,qEAAU;IACV,iFAAgB;IAChB,mEAAS;IACT,yEAAY;IACZ,mEAAS;IACT,+DAAO;IACP,qEAAU;IACV,yDAAI;IACJ,0DAAI;IACJ,4DAAK;IACL,wEAAW;IACX,kEAAQ;IACR,kEAAQ;IACR,sEAAU;IACV,oEAAS;IACT,sEAAU;IACV,wDAAG;IACH,kEAAQ;IACR,wEAAW;IACX,0EAAY;IACZ,gEAAO;IACP,gEAAO;IACP,kFAAgB;IAChB,4DAAK;IACL,4EAAa;IACb,0DAAI;WA5BK,iBAAiB;CA6B5B,KA7B4B,CA6B5B;;;;;;;;;;;;;;AC/BD;AAAA;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACrB;AACwC;AACT;AAIhF;UAAM,qBAAqB;;IACf,iCAAW,GAAgB;QACxC,oBAAoB;QACpB,wFAAS,CAAC,eAAe,CACnB,iDAAiD,EACjD,kEAAW,CAAC,SAAS,CAAC,0DAA0D,CAAC,EACjF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,WAAW,EAC1B,kEAAW,CAAC,SAAS,CACf,oEAAoE,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,WAAW,EAC1B,kEAAW,CAAC,SAAS,CACf,oEAAoE,CAAC,CAAC;SACpF,CAAC;QACR,mBAAmB;QACnB,wFAAS,CAAC,eAAe,CACnB,oDAAoD,EACpD,kEAAW,CAAC,SAAS,CAAC,6DAA6D,CAAC,EACpF,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,0EAA0E,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,0EAA0E,CAAC,CAAC;SACpF,CAAC;QACR,kCAAkC;QAClC,wFAAS,CAAC,eAAe,CACnB,mDAAmD,EACnD,kEAAW,CAAC,SAAS,CAAC,4DAA4D,CAAC,EACnF,iGAAa,CAAC,aAAa,EAC3B;YACG,IAAI,+FAAgB,CAAC,mBAAmB,EAAE,kEAAW,CAAC,SAAS,CACzD,8EAA8E,CAAC,CAAC;YACtF,IAAI,+FAAgB,CAAC,mBAAmB,EAAE,kEAAW,CAAC,SAAS,CACzD,8EAA8E,CAAC,CAAC;SACxF,CAAC;QACR,uCAAuC;QACvC,wFAAS,CAAC,eAAe,CACnB,sDAAsD,EACtD,kEAAW,CAAC,SAAS,CAAC,+DAA+D,CAAC,EACtF,iGAAa,CAAC,aAAa,EAC3B;YACG,IAAI,+FAAgB,CAAC,aAAa,EAAE,kEAAW,CAAC,SAAS,CACnD,2EAA2E,CAAC,CAAC;YACnF,IAAI,+FAAgB,CAAC,aAAa,EAAE,kEAAW,CAAC,SAAS,CACnD,2EAA2E,CAAC,CAAC;SACrF,CAAC;QACR,6BAA6B;QAC7B,wFAAS,CAAC,eAAe,CACnB,sDAAsD,EACtD,kEAAW,CAAC,SAAS,CAAC,iEAAiE,CAAC,EACxF,iGAAa,CAAC,aAAa,EAC3B;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,oEAAoE,CAAC,CAAC;YAC5E,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,oEAAoE,CAAC,CAAC;SAC9E,EAAE,IAAI,EAAE,KAAK,CAAC;KACvB,CAAC;;;;;;;;;;;;;;;;AClEL;AAAA;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACrB;AACwC;AACT;AAIhF;UAAM,4BAA4B;;IACtB,gDAAmB,GAAgB;QAChD,oBAAoB;QACpB,wFAAS,CAAC,eAAe,CACnB,wDAAwD,EACxD,kEAAW,CAAC,SAAS,CAAC,0DAA0D,CAAC,EACjF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,WAAW,EAC1B,kEAAW,CAAC,SAAS,CACf,oEAAoE,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,WAAW,EAC1B,kEAAW,CAAC,SAAS,CACf,oEAAoE,CAAC,CAAC;SACpF,CAAC;QACR,mBAAmB;QACnB,wFAAS,CAAC,eAAe,CACnB,2DAA2D,EAC3D,kEAAW,CAAC,SAAS,CAAC,6DAA6D,CAAC,EACpF,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,0EAA0E,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,0EAA0E,CAAC,CAAC;SACpF,CAAC;QACR,kCAAkC;QAClC,wFAAS,CAAC,eAAe,CACnB,0DAA0D,EAC1D,kEAAW,CAAC,SAAS,CAAC,4DAA4D,CAAC,EACnF,iGAAa,CAAC,aAAa,EAC3B;YACG,IAAI,+FAAgB,CAAC,mBAAmB,EAAE,kEAAW,CAAC,SAAS,CACzD,8EAA8E,CAAC,CAAC;YACtF,IAAI,+FAAgB,CAAC,mBAAmB,EAAE,kEAAW,CAAC,SAAS,CACzD,8EAA8E,CAAC,CAAC;SACxF,CAAC;QACR,qBAAqB;QACrB,wFAAS,CAAC,eAAe,CACnB,6DAA6D,EAC7D,kEAAW,CAAC,SAAS,CAAC,+DAA+D,CAAC,EACtF,iGAAa,CAAC,aAAa,EAC3B;YACG,IAAI,+FAAgB,CAAC,aAAa,EAAE,kEAAW,CAAC,SAAS,CACnD,2EAA2E,CAAC,CAAC;YACnF,IAAI,+FAAgB,CAAC,aAAa,EAAE,kEAAW,CAAC,SAAS,CACnD,2EAA2E,CAAC,CAAC;SACrF,CAAC;QACR,iBAAiB;QACjB,wFAAS,CAAC,eAAe,CACtB,6DAA6D,EAC7D,kEAAW,CAAC,SAAS,CAAC,iEAAiE,CAAC,EACxF,iGAAa,CAAC,aAAa,EAC3B;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,oEAAoE,CAAC,CAAC;YAC5E,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,oEAAoE,CAAC,CAAC;SAC9E,CAAC;KACP,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oHCjEL,2JAAqD;oHAQhC,wHAA6G,oGAC7G;oHAFH,wHAAoF,oGACjF,gcAA6G,GAA/F,2FAA8F,MAC7F,4FAClB,2BAFiB,oQAA8F,GAA5G,YAA6G,EAA/F,oBAA8F;oHAG/G,wHAAwG,iGACxG;oHAPN,yHAAoF,8FACjF,ulBAA6F,gGAC1F,6ZAAoF,IAGrE,4FACf,gcAAwG,GAA1F,4FAAyF,MACxF,yFAClB,MAAM,sFACT,mDARQ,kDAAwC,EAAC,uDAA8C,GAA5F,YAA6F,EAAxF,SAAwC,EAAC,SAA8C,GAC3E,8CAAqE,2CAAnF,YAAoF,EAAtE,SAAqE,GAIrE,mOAAyF,GAAvG,YAAwG,EAA1F,oBAAyF;oHARnH,2IAAuE,wFACpE,uJAA2B,2FACxB,seAAoF,IASrE,mFAClB,MAAU,gFACb,mDAXoB,oCAAqE,8BAAnF,YAAoF,EAAtE,SAAqE;oHAH5F,wHAAsE,qFACnE,seAAuE,IAajE,6EACT,mDAdwB,mBAAiD,kBAAtE,YAAuE,EAAlD,SAAiD;qHA0B1D,wHAA6G,iGAC7G;qHACA,wHAAwG,iGACxG;qHALN,yHAAoF,8FACjF,wlBAA6F,gGAC1F,icAA6G,GAA/F,2FAA8F,MAC7F,4FACf,kcAAwG,GAA1F,4FAAyF,MACxF,yFAClB,MAAM,sFACT,mDANQ,kDAAwC,EAAC,uDAA8C,GAA5F,YAA6F,EAAxF,SAAwC,EAAC,SAA8C,GAC3E,iOAA8F,GAA5G,YAA6G,EAA/F,oBAA8F,GAE9F,mOAAyF,GAAvG,aAAwG,EAA1F,oBAAyF;qHAXnH,4IAAuE,wFACpE,oKAAuC,2FACpC,6JAAwC,2FACxC,skBAAyB,6FACtB,skBAAoD,IAAW,yFAC/D,uJAA0B,iFAAiB,MAAO,sFACrD,MAAQ,sFACR,weAAoF,IAOrE,mFAClB,MAAU,gFACb,mDAba,kHAAiB,GAAxB,YAAyB,EAAlB,SAAiB,GAIV,oCAAqE,8BAAnF,aAAoF,EAAtE,SAAqE,2BAL5E,kHAAgB,GAAvB,YAAwC,EAAjC,SAAgB,GACvB,0GAAyB,GAEI,uEAAiB;oHANvD,wHAAsE,qFACnE,ueAAuE,IAgBjE,6EACT,mDAjBwB,mBAAiD,kBAAtE,YAAuE,EAAlD,SAAiD;oHAnB5E,wHAA+B,kFAC5B,6ZAAsE,IAevD,+EAEf,6ZAAsE,IAkBvD,0EAClB,mDApCiB,8CAAuD,6BAArE,YAAsE,EAAxD,SAAuD,GAiBvD,8CAAuD,6BAArE,YAAsE,EAAxD,SAAuD;;mEAyBlE;YAAA;YAAA,YAGmF;YAA3E;;gCAA0E;;YAHlF;QAAA,aAGmF,+JAEnF,+BAJQ,sJAA6B,GADrC,YAGmF,EAF3E,SAA6B,GAE8C,0PAEnF;AAAA;qHATwF,6EAC3F,0JAA6B,qFAC1B,ijBAAyD,IAAW,gFACpE,sJAA0B,gFAA0B,MAAO,gFAC3D,+ZAGmF,IAE1E,6EACZ,MAAM,0EACT,mDAPc,mBAAwB,mBAAhC,aAGmF,EAH3E,SAAwB,mDAFtB,mBAA8B,kBAAxC,YAAyD,EAA/C,SAA8B,GACd,yFAA0B;;mEAWvD;YAAA;YAAA,YASgD;YADpB;;gCAA0B;;YARtD;QAAA,kxCASgD,KARpB,uDAAsB,IAQF,6EAChD,mDAR4B,qBAA8B,EAG9B,oBAAwB,EAFxB,qBAA6B,EAC7B,qBAAgC,EAGhC,mBAA6B,aAD7B,mBAA2B,cAL3B,gCAAsB,8BADlD,YASgD,EAPpB,SAA8B,EAG9B,SAAwB,EAFxB,SAA6B,EAC7B,SAAgC,EAGhC,SAA6B,EAD7B,SAA2B,EAL3B,SAAsB,2BADtB,gMAAmD,GAA/E,YASgD,EATpB,SAAmD;AAAA;qHADO,6EACtF,8ZASgD,IACnB,0EAChC,2BAF+B,kBAAmB,sBAT/C,YASgD,EAApB,SAAmB;gQAhEmC,0EACrF,6ZAAqD,IAAM,0EAC3D,6ZAA+B,IAqChB,4EAEf,iJAA8F,KAWhF,4EAEd,4IAAyF,kDArDpF,mBAAe,UAApB,YAAqD,EAAhD,SAAe,GACN,oBAAgB,UAA9B,YAA+B,EAAjB,SAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACF9B,kFAAkF;AACb;AAGO;AAEV;AAMF;AACV;AACV;AACqB;AACU;AACR;AACb;AAS/C;UAAM,8BAA8B;QA4JxC,YAAoB,yBAAmE;YAAnE,8BAAyB,GAAzB,yBAAyB,CAA0C;YA3JvF,0BAAqB,GAAiC,qBAAqB,CAAC;YAmB5E,eAAU,GAAkB,qEAAa,CAAC,aAAa,CAAC;YAGxD,qBAAgB,GAAY,IAAI,CAAC;YAGjC,kBAAa,GAA0B,IAAI,CAAC;YAG5C,kBAAa,GAAa,IAAI,CAAC;YAG/B,2BAAsB,GAAW,IAAI,CAAC;YAGtC,iCAA4B,GAAyB,IAAI,0DAAY,EAAU,CAAC;YAGhF,sBAAiB,GAA0B,qBAAqB,CAAC,GAAG,CAAC;YAGrE,aAAQ,GAAY,IAAI,CAAC;YAgGzB,YAAO,GAAyB,IAAI,0DAAY,EAAE,CAAC;YAGnD,SAAI,GAAkC,IAAI,0DAAY,EAAmB,CAAC;YAGlE,mBAAc,GAAsB,IAAI,0DAAY,EAAE,CAAC;YAgBvD,uBAAkB,GAAG,GAAG,EAAE;gBAC/B,IAAI,IAAI,CAAC,eAAe,EAAE;oBACvB,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC;oBAC/B,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,mBAAmB,CAAC,EAAE,CAC7C,IAAI,CAAC,kCAAkC,CAAC,mBAAmB,CAAC,CAAC,CAAC;iBACtE;YACJ,CAAC,CAAC;YAEF;;;eAGG;YACK,uCAAkC,GAAG,CAAC,mBAAwC,EAAE,EAAE;gBACvF,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EAAE;oBAClE,OAAO;iBACT;gBAED,MAAM,WAAW,GAAsB,mBAAmB,CAAC,UAAU,CAAC;gBACtE,IAAI,CAAC,WAAW,EAAE;oBACf,OAAO,IAAI,CAAC;iBACd;gBACD,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;oBACzE,MAAM,UAAU,GAAW,MAAM,CAAC,IAAI,CAAC;oBACvC,OAAO,IAAI,2FAAW,CAChB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EAChG,IAAI,CAAC,eAAe,EACpB,2FAAW,CAAC,6BAA6B,GAAG,UAAU,CAAC,CAAC;gBACjE,CAAC,CAAC,CAAC;YACN,CAAC,CAAC;YAEF,kBAAa,GAAG,CAAC,mBAAwC,EAAE,KAAa,EAAU,EAAE;gBACjF,OAAO,mBAAmB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;YACrD,CAAC,CAAC;YAMF,kBAAa,GAAG,CAAC,IAAyB,EAAE,QAA6B,EAAE,UAAkB,EAAE,EAAE;gBAC9F,MAAM,SAAS,GAAkB,IAAI,gFAAa,CAAC,IAAI,CAAC,QAAQ,EAC1D,8EAAkB,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;gBACzE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACvC,CAAC,CAAC;QA5CF,CAAC;QAvJD,IACI,eAAe,CAAC,GAAgB;YACjC,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC;YAC5B,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC7B,CAAC;QAED,IAAI,eAAe;YAChB,OAAO,IAAI,CAAC,gBAAgB,CAAC;QAChC,CAAC;QA8BD,IACI,WAAW,CAAC,GAAY;YACzB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QAC3B,CAAC;QAED,2BAA2B;QAC3B,iDAAiD;QACjD,uEAAuE;QACvE,IAAI,WAAW;;YACZ,OAAO,IAAI,CAAC,YAAY,KAAK,IAAI,IAAI,CAAC,WAAI,CAAC,eAAe,0CAAE,MAAM,IAAG,CAAC,IAAI,2DAAW,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;QACrH,CAAC;QAED,IACI,IAAI,CAAC,GAAsB;YAC5B,IAAI,IAAI,CAAC,KAAK,KAAK,GAAG,EAAE;gBACrB,OAAO;aACT;YACD,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;YAEjB,IAAI,CAAC,QAAQ,EAAE,CAAC;QACnB,CAAC;QAED,IAAI,IAAI;YACL,OAAO,IAAI,CAAC,KAAK,CAAC;QACrB,CAAC;QAGa,QAAQ;;gBACnB,MAAM,eAAe,GACf,MAAM,IAAI,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBAExF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;gBAC5D,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAE1B,IAAI,IAAI,CAAC,sBAAsB,EAAE;oBAC9B,IAAI,CAAC,+BAA+B,EAAE,CAAC;iBACzC;YACJ,CAAC;SAAA;QAGO,WAAW,CAAC,GAAW;YAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC;QAED;;WAEG;QACK,+BAA+B;YACpC,MAAM,YAAY,GAAwB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CACrE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;YACnF,IAAI,CAAC,YAAY,EAAE;gBAChB,OAAO;aACT;YAED,MAAM,iBAAiB,GAAiB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,QAAQ,CAAmB;iBAC5F,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAEhG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;YACzF,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChD,CAAC;QAED;;WAEG;QACK,cAAc,CAAC,eAAsC;YAC1D,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,2DAAW,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;gBACjE,OAAO,eAAe,CAAC;aACzB;YAED,MAAM,oBAAoB,GAA0B,EAAE,CAAC;YACvD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBACjC,MAAM,kBAAkB,GAClB,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAChE,IAAI,uBAAuB,GAAsB,EAAE,CAAC;gBAEpD,IAAI,kBAAkB,IAAI,CAAC,2DAAW,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;oBAChE,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;wBACnC,MAAM,gBAAgB,GAChB,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,CAAC,CAAC;wBACtG,IAAI,gBAAgB,EAAE;4BACnB,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;yBACjD;oBACJ,CAAC,CAAC,CAAC;iBACL;qBAAM;oBACJ,uBAAuB,GAAG,kBAAkB,CAAC,UAAU,CAAC;iBAC1D;gBAED,oBAAoB,CAAC,IAAI,CAAC,IAAI,wGAAmB,CAAC,MAAM,CAAC,QAAQ,EAAE,uBAAuB,CAAC,CAAC,CAAC;YAChG,CAAC,CAAC,CAAC;YACH,OAAO,oBAAoB,CAAC;QAC/B,CAAC;QA2DD,aAAa;YACV,OAAO,8EAAkB,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtD,CAAC;;IA5HD;QADC,8EAAM,EAAE;;;;kEAWR;IAGD;QADC,0FAAY,EAAE;;;;qEAGd;IA8DD;QADC,kGAAgB,EAAE;;mEACF;;;AAwDpB;;GAEG;AACH,IAAY,qBAIX,iBAJD,WAAY,qBAAqB;IAC9B,+DAAG;IACH,2FAAiB;IACjB,iEAAI;WAHK,qBAAqB;CAIhC,KAJgC,CAIhC;;;;;;;;;;;;;;AC9OD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFAAkF;AACtC;AACwC;AACT;AACR;AACmB;AAE/E;UAAM,0BAA0B;;IACpB,iDAAsB,GAAgB;QACnD,cAAc;QACd,iFAAS,CAAC,eAAe,CACtB,8DAA8D,EAC9D,2DAAW,CAAC,SAAS,CAAC,oEAAoE,CAAC,EAC3F,IAAI,EACJ;YACG,IAAI,wFAAgB,CAAC,aAAa,EAAE,2DAAW,CAAC,SAAS,CACnD,gFAAgF,CAAC,CAAC;YACxF,IAAI,wFAAgB,CAAC,cAAc,EAAE,2DAAW,CAAC,SAAS,CACpD,iFAAiF,CAAC,CAAC;SAC3F,CAAC;QACL,oBAAoB;QACpB,iFAAS,CAAC,eAAe,CACtB,iEAAiE,EACjE,2DAAW,CAAC,SAAS,CAAC,uEAAuE,CAAC,EAC9F,0FAAa,CAAC,eAAe,EAC7B;YACG,IAAI,wFAAgB,CAAC,mBAAmB,EAAE,2DAAW,CAAC,SAAS,CACzD,yFAAyF,CAAC,CAAC;YACjG,IAAI,wFAAgB,CAAC,oBAAoB,EAAE,2DAAW,CAAC,SAAS,CAC1D,0FAA0F,CAAC,CAAC;SACpG,CAAC;QACL,iBAAiB;QACjB,iFAAS,CAAC,eAAe,CACtB,8DAA8D,EAC9D,2DAAW,CAAC,SAAS,CAAC,oEAAoE,CAAC,EAC3F,0FAAa,CAAC,YAAY,EAC1B;YACG,IAAI,wFAAgB,CAAC,gBAAgB,EAAE,2DAAW,CAAC,SAAS,CACtD,mFAAmF,CAAC,CAAC;YAC3F,IAAI,wFAAgB,CAAC,gBAAgB,EAAE,2DAAW,CAAC,SAAS,CACtD,mFAAmF,CAAC,CAAC;YAC3F,IAAI,wFAAgB,CAAC,gBAAgB,EAAE,2DAAW,CAAC,SAAS,CACtD,mFAAmF,CAAC,CAAC;YAC3F,IAAI,wFAAgB,CAAC,gBAAgB,EAAE,2DAAW,CAAC,SAAS,CACtD,mFAAmF,CAAC,CAAC;YAC3F,IAAI,wFAAgB,CAAC,iBAAiB,EAAE,2DAAW,CAAC,SAAS,CACvD,oFAAoF,CAAC,CAAC;SAC9F,EACD,kFAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,qGAA2B,CAAC,KAAK,CAAC,CAAC;QAC9F,kCAAkC;QAClC,iFAAS,CAAC,eAAe,CACnB,uEAAuE,EACvE,2DAAW,CAAC,SAAS,CAAC,6EAA6E,CAAC,EACpG,0FAAa,CAAC,eAAe,EAC7B;YACG,IAAI,wFAAgB,CAAC,WAAW,EAAE,2DAAW,CAAC,SAAS,CACjD,uFAAuF,CAAC,CAAC;YAC/F,IAAI,wFAAgB,CAAC,cAAc,EAAE,2DAAW,CAAC,SAAS,CACpD,0FAA0F,CAAC,CAAC;YAClG,IAAI,wFAAgB,CAAC,eAAe,EAAE,2DAAW,CAAC,SAAS,CACrD,2FAA2F,CAAC,CAAC;YACnG,IAAI,wFAAgB,CAAC,cAAc,EAAE,2DAAW,CAAC,SAAS,CACpD,0FAA0F,CAAC,CAAC;YAClG,IAAI,wFAAgB,CAAC,eAAe,EAAE,2DAAW,CAAC,SAAS,CACrD,2FAA2F,CAAC,CAAC;YACnG,IAAI,wFAAgB,CAAC,iBAAiB,EAAE,2DAAW,CAAC,SAAS,CACvD,6FAA6F,CAAC,CAAC;YACrG,IAAI,wFAAgB,CAAC,sBAAsB,EAAE,2DAAW,CAAC,SAAS,CAC5D,kGAAkG,CAAC,CAAC;SAC5G,CAAC;QACR,uBAAuB;QACvB,iFAAS,CAAC,eAAe,CACnB,sEAAsE,EACtE,2DAAW,CAAC,SAAS,CAAC,4EAA4E,CAAC,EACnG,0FAAa,CAAC,eAAe,EAC7B;YACG,IAAI,wFAAgB,CAAC,uBAAuB,EAAE,2DAAW,CAAC,SAAS,CAC7D,kGAAkG,CAAC,CAAC;YAC1G,IAAI,wFAAgB,CAAC,qBAAqB,EAAE,2DAAW,CAAC,SAAS,CAC3D,gGAAgG,CAAC,CAAC;YACxG,IAAI,wFAAgB,CAAC,sBAAsB,EAAE,2DAAW,CAAC,SAAS,CAC5D,iGAAiG,CAAC,CAAC;SAC3G,CAAC;QACR,cAAc;QACd,iFAAS,CAAC,eAAe,CACtB,6DAA6D,EAC7D,2DAAW,CAAC,SAAS,CAAC,mEAAmE,CAAC,EAC1F,0FAAa,CAAC,eAAe,EAC7B;YACG,IAAI,wFAAgB,CAAC,WAAW,EAAE,2DAAW,CAAC,SAAS,CACjD,6EAA6E,CAAC,CAAC;SACvF,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,YAAY;QACZ,iFAAS,CAAC,eAAe,CACtB,6DAA6D,EAC7D,2DAAW,CAAC,SAAS,CAAC,mEAAmE,CAAC,EAC1F,IAAI,EACJ;YACG,IAAI,wFAAgB,CAAC,gBAAgB,EAAE,2DAAW,CAAC,SAAS,CACtD,kFAAkF,CAAC,CAAC;YAC1F,IAAI,wFAAgB,CAAC,cAAc,EAAE,2DAAW,CAAC,SAAS,CACpD,gFAAgF,CAAC,CAAC;SAC1F,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,eAAe;QACf,iFAAS,CAAC,eAAe,CACtB,sDAAsD,EACtD,2DAAW,CAAC,SAAS,CAAC,4DAA4D,CAAC,EACnF,0FAAa,CAAC,eAAe,EAC7B;YACG,IAAI,wFAAgB,CAAC,WAAW,EAAE,2DAAW,CAAC,SAAS,CACjD,sEAAsE,CAAC,CAAC;YAC9E,IAAI,wFAAgB,CAAC,cAAc,EAAE,2DAAW,CAAC,SAAS,CACpD,yEAAyE,CAAC,CAAC;YACjF,IAAI,wFAAgB,CAAC,eAAe,EAAE,2DAAW,CAAC,SAAS,CACrD,0EAA0E,CAAC,CAAC;YAClF,IAAI,wFAAgB,CAAC,cAAc,EAAE,2DAAW,CAAC,SAAS,CACpD,yEAAyE,CAAC,CAAC;YACjF,IAAI,wFAAgB,CAAC,eAAe,EAAE,2DAAW,CAAC,SAAS,CACrD,0EAA0E,CAAC,CAAC;SACpF,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,eAAe;QACf,iFAAS,CAAC,eAAe,CACtB,+DAA+D,EAC/D,2DAAW,CAAC,SAAS,CAAC,qEAAqE,CAAC,EAC5F,0FAAa,CAAC,YAAY,EAC1B;YACG,IAAI,wFAAgB,CAAC,kBAAkB,EAAE,2DAAW,CAAC,SAAS,CACxD,sFAAsF,CAAC,CAAC;YAC9F,IAAI,wFAAgB,CAAC,mBAAmB,EAAE,2DAAW,CAAC,SAAS,CACzD,uFAAuF,CAAC,CAAC;YAC/F,IAAI,wFAAgB,CAAC,gBAAgB,EAAE,2DAAW,CAAC,SAAS,CACtD,oFAAoF,CAAC,CAAC;YAC5F,IAAI,wFAAgB,CAAC,gBAAgB,EAAE,2DAAW,CAAC,SAAS,CACtD,oFAAoF,CAAC,CAAC;YAC5F,IAAI,wFAAgB,CAAC,gBAAgB,EAAE,2DAAW,CAAC,SAAS,CACtD,oFAAoF,CAAC,CAAC;YAC5F,IAAI,wFAAgB,CAAC,gBAAgB,EAAE,2DAAW,CAAC,SAAS,CACtD,oFAAoF,CAAC,CAAC;SAC9F,EACD,kFAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,qGAA2B,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC;QACrG,8BAA8B;QAC9B,iFAAS,CAAC,eAAe,CACtB,kEAAkE,EAClE,2DAAW,CAAC,SAAS,CAAC,wEAAwE,CAAC,EAC/F,0FAAa,CAAC,YAAY,EAC1B;YACG,IAAI,wFAAgB,CAAC,kBAAkB,EAAE,2DAAW,CAAC,SAAS,CACxD,yFAAyF,CAAC,CAAC;YACjG,IAAI,wFAAgB,CAAC,kBAAkB,EAAE,2DAAW,CAAC,SAAS,CACxD,yFAAyF,CAAC,CAAC;SACnG,EACD,kFAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,qGAA2B,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC;QACrG,2BAA2B;QAC3B,iFAAS,CAAC,eAAe,CACtB,kEAAkE,EAClE,2DAAW,CAAC,SAAS,CAAC,wEAAwE,CAAC,EAC/F,IAAI,EACJ;YACG,IAAI,wFAAgB,CAAC,kBAAkB,EAAE,2DAAW,CAAC,SAAS,CACxD,yFAAyF,CAAC,CAAC;YACjG,IAAI,wFAAgB,CAAC,kBAAkB,EAAE,2DAAW,CAAC,SAAS,CACxD,yFAAyF,CAAC,CAAC;SACnG,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,uBAAuB;QACvB,iFAAS,CAAC,eAAe,CACtB,sEAAsE,EACtE,2DAAW,CAAC,SAAS,CAAC,4EAA4E,CAAC,EACnG,0FAAa,CAAC,eAAe,EAC7B;YACG,IAAI,wFAAgB,CAAC,oBAAoB,EAAE,2DAAW,CAAC,SAAS,CAC1D,+FAA+F,CAAC,CAAC;YACvG,IAAI,wFAAgB,CAAC,0BAA0B,EAAE,2DAAW,CAAC,SAAS,CAChE,qGAAqG,CAAC,CAAC;YAC7G,IAAI,wFAAgB,CAAC,2BAA2B,EAAE,2DAAW,CAAC,SAAS,CACjE,sGAAsG,CAAC,CAAC;YAC9G,IAAI,wFAAgB,CAAC,wBAAwB,EAAE,2DAAW,CAAC,SAAS,CAC9D,mGAAmG,CAAC,CAAC;YAC3G,IAAI,wFAAgB,CAAC,0BAA0B,EAAE,2DAAW,CAAC,SAAS,CAChE,qGAAqG,CAAC,CAAC;SAC/G,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,eAAe;QACf,iFAAS,CAAC,eAAe,CACtB,+DAA+D,EAC/D,2DAAW,CAAC,SAAS,CAAC,qEAAqE,CAAC,EAC5F,IAAI,EACJ;YACG,IAAI,wFAAgB,CAAC,mBAAmB,EAAE,2DAAW,CAAC,SAAS,CACzD,uFAAuF,CAAC,CAAC;YAC/F,IAAI,wFAAgB,CAAC,gBAAgB,EAAE,2DAAW,CAAC,SAAS,CACtD,oFAAoF,CAAC,CAAC;YAC5F,IAAI,wFAAgB,CAAC,iBAAiB,EAAE,2DAAW,CAAC,SAAS,CACvD,qFAAqF,CAAC,CAAC;YAC7F,IAAI,wFAAgB,CAAC,gBAAgB,EAAE,2DAAW,CAAC,SAAS,CACtD,oFAAoF,CAAC,CAAC;YAC5F,IAAI,wFAAgB,CAAC,kBAAkB,EAAE,2DAAW,CAAC,SAAS,CACxD,sFAAsF,CAAC,CAAC;SAChG,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,kBAAkB;QAClB,iFAAS,CAAC,eAAe,CACtB,iEAAiE,EACjE,2DAAW,CAAC,SAAS,CAAC,uEAAuE,CAAC,EAC9F,0FAAa,CAAC,eAAe,EAC7B;YACG,IAAI,wFAAgB,CAAC,iBAAiB,EAAE,2DAAW,CAAC,SAAS,CACvD,uFAAuF,CAAC,CAAC;SACjG,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,wBAAwB;QACxB,iFAAS,CAAC,eAAe,CACnB,uEAAuE,EACvE,2DAAW,CAAC,SAAS,CAAC,6EAA6E,CAAC,EACpG,0FAAa,CAAC,eAAe,EAC7B;YACG,IAAI,wFAAgB,CAAC,kBAAkB,EAAE,2DAAW,CAAC,SAAS,CACxD,8FAA8F,CAAC,CAAC;YACtG,IAAI,wFAAgB,CAAC,oBAAoB,EAAE,2DAAW,CAAC,SAAS,CAC1D,gGAAgG,CAAC,CAAC;YACxG,IAAI,wFAAgB,CAAC,mBAAmB,EAAE,2DAAW,CAAC,SAAS,CACzD,+FAA+F,CAAC,CAAC;YACvG,IAAI,wFAAgB,CAAC,kBAAkB,EAAE,2DAAW,CAAC,SAAS,CACxD,8FAA8F,CAAC,CAAC;YACtG,IAAI,wFAAgB,CAAC,kBAAkB,EAAE,2DAAW,CAAC,SAAS,CACxD,8FAA8F,CAAC,CAAC;YACtG,IAAI,wFAAgB,CAAC,uBAAuB,EAAE,2DAAW,CAAC,SAAS,CAC7D,mGAAmG,CAAC,CAAC;SAC7G,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,iBAAiB;QACjB,iFAAS,CAAC,eAAe,CACtB,gEAAgE,EAChE,2DAAW,CAAC,SAAS,CAAC,sEAAsE,CAAC,EAC7F,IAAI,EACJ;YACG,IAAI,wFAAgB,CAAC,qBAAqB,EAAE,2DAAW,CAAC,SAAS,CAC9D,0FAA0F,CAAC,CAAC;YAC/F,IAAI,wFAAgB,CAAC,qBAAqB,EAAE,2DAAW,CAAC,SAAS,CAC9D,0FAA0F,CAAC,CAAC;YAC/F,IAAI,wFAAgB,CAAC,gBAAgB,EAAE,2DAAW,CAAC,SAAS,CACzD,qFAAqF,CAAC,CAAC;SAC5F,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,YAAY;QACZ,iFAAS,CAAC,eAAe,CACtB,4DAA4D,EAC5D,2DAAW,CAAC,SAAS,CAAC,kEAAkE,CAAC,EACzF,IAAI,EACJ;YACG,IAAI,wFAAgB,CAAC,kBAAkB,EAAE,2DAAW,CAAC,SAAS,CAC3D,mFAAmF,CAAC,CAAC;YACxF,IAAI,wFAAgB,CAAC,mBAAmB,EAAE,2DAAW,CAAC,SAAS,CAC5D,oFAAoF,CAAC,CAAC;YACzF,IAAI,wFAAgB,CAAC,kBAAkB,EAAE,2DAAW,CAAC,SAAS,CAC3D,mFAAmF,CAAC,CAAC;YACxF,IAAI,wFAAgB,CAAC,wBAAwB,EAAE,2DAAW,CAAC,SAAS,CACjE,yFAAyF,CAAC,CAAC;SAChG,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,eAAe;QACf,iFAAS,CAAC,eAAe,CACtB,+DAA+D,EAC/D,2DAAW,CAAC,SAAS,CAAC,qEAAqE,CAAC,EAC5F,0FAAa,CAAC,YAAY,EAC1B;YACG,IAAI,wFAAgB,CAAC,eAAe,EAAE,2DAAW,CAAC,SAAS,CACrD,mFAAmF,CAAC,CAAC;YAC3F,IAAI,wFAAgB,CAAC,eAAe,EAAE,2DAAW,CAAC,SAAS,CACrD,mFAAmF,CAAC,CAAC;YAC3F,IAAI,wFAAgB,CAAC,gBAAgB,EAAE,2DAAW,CAAC,SAAS,CACtD,oFAAoF,CAAC,CAAC;YAC5F,IAAI,wFAAgB,CAAC,gBAAgB,EAAE,2DAAW,CAAC,SAAS,CACtD,oFAAoF,CAAC,CAAC;YAC5F,IAAI,wFAAgB,CAAC,cAAc,EAAE,2DAAW,CAAC,SAAS,CACpD,kFAAkF,CAAC,CAAC;YAC1F,IAAI,wFAAgB,CAAC,eAAe,EAAE,2DAAW,CAAC,SAAS,CACrD,mFAAmF,CAAC,CAAC;YAC3F,IAAI,wFAAgB,CAAC,cAAc,EAAE,2DAAW,CAAC,SAAS,CACpD,kFAAkF,CAAC,CAAC;YAC1F,IAAI,wFAAgB,CAAC,eAAe,EAAE,2DAAW,CAAC,SAAS,CACrD,mFAAmF,CAAC,CAAC;SAC7F,EACD,kFAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,qGAA2B,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC;QACrG,YAAY;QACZ,iFAAS,CAAC,eAAe,CACtB,4DAA4D,EAC5D,2DAAW,CAAC,SAAS,CAAC,kEAAkE,CAAC,EACzF,IAAI,EACJ;YACG,IAAI,wFAAgB,CAAC,YAAY,EAAE,2DAAW,CAAC,SAAS,CAClD,6EAA6E,CAAC,CAAC;YACrF,IAAI,wFAAgB,CAAC,YAAY,EAAE,2DAAW,CAAC,SAAS,CAClD,6EAA6E,CAAC,CAAC;YACrF,IAAI,wFAAgB,CAAC,aAAa,EAAE,2DAAW,CAAC,SAAS,CACnD,8EAA8E,CAAC,CAAC;YACtF,IAAI,wFAAgB,CAAC,aAAa,EAAE,2DAAW,CAAC,SAAS,CACnD,8EAA8E,CAAC,CAAC;SACxF,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,6BAA6B;QAC7B,iFAAS,CAAC,eAAe,CACtB,iEAAiE,EACjE,2DAAW,CAAC,SAAS,CAAC,uEAAuE,CAAC,EAC9F,0FAAa,CAAC,eAAe,EAC7B;YACG,IAAI,wFAAgB,CAAC,eAAe,EAAE,2DAAW,CAAC,SAAS,CACrD,qFAAqF,CAAC,CAAC;SAC/F,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,0BAA0B;QAC1B,iFAAS,CAAC,eAAe,CACtB,oEAAoE,EACpE,2DAAW,CAAC,SAAS,CAAC,0EAA0E,CAAC,EACjG,0FAAa,CAAC,eAAe,EAC7B;YACG,IAAI,wFAAgB,CAAC,kBAAkB,EAAE,2DAAW,CAAC,SAAS,CACxD,2FAA2F,CAAC,CAAC;SACrG,EAAE,IAAI,EAAE,KAAK,CAAC;KACpB,CAAC;;;;;;;;;;;;;;;;ACtTL;AAAA;AAAA;AAAA,6EAA6E;AAEF;AAE3E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmCG;AACI,SAAS,YAAY,CAAC,KAA8B;IACxD,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;IACpB,OAAO,CAAC,WAAgB,EAAE,YAAoB,EAAE,UAA8B,EAAQ,EAAE;QACrF,CAAC,IAAI,0FAAkB,CAAC,WAAW,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,GAAG,UAAU,CAAC,KAAK,CAAC;IACrF,CAAC,CAAC;AACL,CAAC;;;;;;;;;;;;;;AC7CD;AAAA;AAAA,6EAA6E;AAC7E;;GAEG;AACH,IAAY,eAMX,iBAND,WAAY,eAAe;IACxB,yCAAsB;IACtB,8CAA2B;IAC3B,sCAAmB;IACnB,sDAAmC;IACnC,4CAAyB;WALhB,eAAe;CAM1B,KAN0B,CAM1B;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACrB;AACwC;AACT;AACpB;AACmB;AAE/E;UAAM,6BAA6B;;IACvB,uDAAyB,GAAgB;QACtD,cAAc;QACd,wFAAS,CAAC,eAAe,CACtB,iEAAiE,EACjE,kEAAW,CAAC,SAAS,CAAC,oEAAoE,CAAC,EAC3F,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,aAAa,EAAE,kEAAW,CAAC,SAAS,CACnD,gFAAgF,CAAC,CAAC;YACxF,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,iFAAiF,CAAC,CAAC;SAC3F,CAAC;QACL,oBAAoB;QACpB,wFAAS,CAAC,eAAe,CACtB,oEAAoE,EACpE,kEAAW,CAAC,SAAS,CAAC,uEAAuE,CAAC,EAC9F,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,mBAAmB,EAAE,kEAAW,CAAC,SAAS,CACzD,yFAAyF,CAAC,CAAC;YACjG,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC1D,0FAA0F,CAAC,CAAC;SACpG,CAAC;QACL,iBAAiB;QACjB,wFAAS,CAAC,eAAe,CACtB,iEAAiE,EACjE,kEAAW,CAAC,SAAS,CAAC,oEAAoE,CAAC,EAC3F,iGAAa,CAAC,YAAY,EAC1B;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,mFAAmF,CAAC,CAAC;YAC3F,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,mFAAmF,CAAC,CAAC;YAC3F,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,mFAAmF,CAAC,CAAC;YAC3F,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,mFAAmF,CAAC,CAAC;YAC3F,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,oFAAoF,CAAC,CAAC;SAC9F,EACD,kFAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,qGAA2B,CAAC,KAAK,CAAC,CAAC;QAC9F,eAAe;QACf,wFAAS,CAAC,eAAe,CACtB,kEAAkE,EAClE,kEAAW,CAAC,SAAS,CAAC,qEAAqE,CAAC,EAC5F,iGAAa,CAAC,YAAY,EAC1B;YACG,IAAI,+FAAgB,CAAC,kBAAkB,EAAE,kEAAW,CAAC,SAAS,CACxD,sFAAsF,CAAC,CAAC;YAC9F,IAAI,+FAAgB,CAAC,mBAAmB,EAAE,kEAAW,CAAC,SAAS,CACzD,uFAAuF,CAAC,CAAC;YAC/F,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,oFAAoF,CAAC,CAAC;YAC5F,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,oFAAoF,CAAC,CAAC;SAC9F,EACD,kFAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,qGAA2B,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC;QACrG,8BAA8B;QAC9B,wFAAS,CAAC,eAAe,CACtB,qEAAqE,EACrE,kEAAW,CAAC,SAAS,CAAC,wEAAwE,CAAC,EAC/F,iGAAa,CAAC,YAAY,EAC1B;YACG,IAAI,+FAAgB,CAAC,kBAAkB,EAAE,kEAAW,CAAC,SAAS,CACxD,yFAAyF,CAAC,CAAC;YACjG,IAAI,+FAAgB,CAAC,kBAAkB,EAAE,kEAAW,CAAC,SAAS,CACxD,yFAAyF,CAAC,CAAC;SACnG,EACD,kFAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,qGAA2B,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC;QACrG,2BAA2B;QAC3B,wFAAS,CAAC,eAAe,CACtB,qEAAqE,EACrE,kEAAW,CAAC,SAAS,CAAC,wEAAwE,CAAC,EAC/F,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,kBAAkB,EAAE,kEAAW,CAAC,SAAS,CACxD,yFAAyF,CAAC,CAAC;YACjG,IAAI,+FAAgB,CAAC,kBAAkB,EAAE,kEAAW,CAAC,SAAS,CACxD,yFAAyF,CAAC,CAAC;SACnG,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,WAAW;QACX,wFAAS,CAAC,eAAe,CACtB,+DAA+D,EAC/D,kEAAW,CAAC,SAAS,CAAC,qEAAqE,CAAC,EAC5F,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,kFAAkF,CAAC,CAAC;SAC5F,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,uBAAuB;QACvB,wFAAS,CAAC,eAAe,CACtB,yEAAyE,EACzE,kEAAW,CAAC,SAAS,CAAC,4EAA4E,CAAC,EACnG,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC1D,+FAA+F,CAAC,CAAC;YACvG,IAAI,+FAAgB,CAAC,0BAA0B,EAAE,kEAAW,CAAC,SAAS,CAChE,qGAAqG,CAAC,CAAC;YAC7G,IAAI,+FAAgB,CAAC,2BAA2B,EAAE,kEAAW,CAAC,SAAS,CACjE,sGAAsG,CAAC,CAAC;YAC9G,IAAI,+FAAgB,CAAC,wBAAwB,EAAE,kEAAW,CAAC,SAAS,CAC9D,mGAAmG,CAAC,CAAC;YAC3G,IAAI,+FAAgB,CAAC,0BAA0B,EAAE,kEAAW,CAAC,SAAS,CAChE,qGAAqG,CAAC,CAAC;SAC/G,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,eAAe;QACf,wFAAS,CAAC,eAAe,CACtB,kEAAkE,EAClE,kEAAW,CAAC,SAAS,CAAC,qEAAqE,CAAC,EAC5F,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,mBAAmB,EAAE,kEAAW,CAAC,SAAS,CACzD,uFAAuF,CAAC,CAAC;YAC/F,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,oFAAoF,CAAC,CAAC;YAC5F,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,qFAAqF,CAAC,CAAC;YAC7F,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,oFAAoF,CAAC,CAAC;YAC5F,IAAI,+FAAgB,CAAC,kBAAkB,EAAE,kEAAW,CAAC,SAAS,CACxD,sFAAsF,CAAC,CAAC;SAChG,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,kBAAkB;QAClB,wFAAS,CAAC,eAAe,CACtB,oEAAoE,EACpE,kEAAW,CAAC,SAAS,CAAC,uEAAuE,CAAC,EAC9F,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,uFAAuF,CAAC,CAAC;SACjG,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,wBAAwB;QACxB,wFAAS,CAAC,eAAe,CACtB,0EAA0E,EAC1E,kEAAW,CAAC,SAAS,CAAC,6EAA6E,CAAC,EACpG,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,kBAAkB,EAAE,kEAAW,CAAC,SAAS,CAC3D,8FAA8F,CAAC,CAAC;YACnG,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC7D,gGAAgG,CAAC,CAAC;YACrG,IAAI,+FAAgB,CAAC,mBAAmB,EAAE,kEAAW,CAAC,SAAS,CAC5D,+FAA+F,CAAC,CAAC;YACpG,IAAI,+FAAgB,CAAC,kBAAkB,EAAE,kEAAW,CAAC,SAAS,CAC3D,8FAA8F,CAAC,CAAC;YACnG,IAAI,+FAAgB,CAAC,kBAAkB,EAAE,kEAAW,CAAC,SAAS,CAC3D,8FAA8F,CAAC,CAAC;YACnG,IAAI,+FAAgB,CAAC,uBAAuB,EAAE,kEAAW,CAAC,SAAS,CAChE,mGAAmG,CAAC,CAAC;YACxG,IAAI,+FAAgB,CAAC,uBAAuB,EAAE,kEAAW,CAAC,SAAS,CAChE,mGAAmG,CAAC,CAAC;SAC1G,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,uBAAuB;QACvB,wFAAS,CAAC,eAAe,CACtB,yEAAyE,EACzE,kEAAW,CAAC,SAAS,CAAC,4EAA4E,CAAC,EACnG,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,uBAAuB,EAAE,kEAAW,CAAC,SAAS,CAChE,kGAAkG,CAAC,CAAC;YACvG,IAAI,+FAAgB,CAAC,qBAAqB,EAAE,kEAAW,CAAC,SAAS,CAC9D,gGAAgG,CAAC,CAAC;YACrG,IAAI,+FAAgB,CAAC,sBAAsB,EAAE,kEAAW,CAAC,SAAS,CAC/D,iGAAiG,CAAC,CAAC;SACxG,CAAC;QACL,iBAAiB;QACjB,wFAAS,CAAC,eAAe,CACtB,0DAA0D,EAC1D,kEAAW,CAAC,SAAS,CAAC,sEAAsE,CAAC,EAC7F,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,qBAAqB,EAAE,kEAAW,CAAC,SAAS,CAC9D,0FAA0F,CAAC,CAAC;YAC/F,IAAI,+FAAgB,CAAC,qBAAqB,EAAE,kEAAW,CAAC,SAAS,CAC9D,0FAA0F,CAAC,CAAC;YAC/F,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACzD,qFAAqF,CAAC,CAAC;SAC5F,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,oBAAoB;QACpB,wFAAS,CAAC,eAAe,CACtB,6DAA6D,EAC7D,kEAAW,CAAC,SAAS,CAAC,2EAA2E,CAAC,EAClG,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,sBAAsB,EAAE,kEAAW,CAAC,SAAS,CAC5D,gGAAgG,CAAC,CAAC;YACxG,IAAI,+FAAgB,CAAC,wBAAwB,EAAE,kEAAW,CAAC,SAAS,CAC9D,kGAAkG,CAAC,CAAC;YAC1G,IAAI,+FAAgB,CAAC,sBAAsB,EAAE,kEAAW,CAAC,SAAS,CAC5D,gGAAgG,CAAC,CAAC;YACxG,IAAI,+FAAgB,CAAC,qBAAqB,EAAE,kEAAW,CAAC,SAAS,CAC3D,+FAA+F,CAAC,CAAC;SACzG,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,yBAAyB;QACzB,wFAAS,CAAC,eAAe,CACtB,iEAAiE,EACjE,kEAAW,CAAC,SAAS,CAAC,gFAAgF,CAAC,EACvG,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,+BAA+B,EAAE,kEAAW,CAAC,SAAS,CACrE,8GAA8G,CAAC,CAAC;YACtH,IAAI,+FAAgB,CAAC,iCAAiC,EAAE,kEAAW,CAAC,SAAS,CACvE,gHAAgH,CAAC,CAAC;YACxH,IAAI,+FAAgB,CAAC,oCAAoC,EAAE,kEAAW,CAAC,SAAS,CAC1E,mHAAmH,CAAC,CAAC;SAC7H,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,+BAA+B;QAC/B,wFAAS,CAAC,eAAe,CACtB,uEAAuE,EACvE,kEAAW,CAAC,SAAS,CAAC,sFAAsF,CAAC,EAC7G,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,iCAAiC,EAAE,kEAAW,CAAC,SAAS,CACvE,4FAA4F,CAAC,CAAC;SACtG,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,+BAA+B;QAC/B,wFAAS,CAAC,eAAe,CACtB,8EAA8E,EAC9E,kEAAW,CAAC,SAAS,CAAC,6FAA6F,CAAC,EACpH,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,qCAAqC,EAAE,kEAAW,CAAC,SAAS,CAC3E,gGAAgG,CAAC,CAAC;SAC1G,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,6BAA6B;QAC7B,wFAAS,CAAC,eAAe,CACtB,yEAAyE,EACzE,kEAAW,CAAC,SAAS,CAAC,kFAAkF,CAAC,EACzG,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,6BAA6B,EAAE,kEAAW,CAAC,SAAS,CACnE,wFAAwF,CAAC,CAAC;SAClG,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,kBAAkB;QAClB,wFAAS,CAAC,eAAe,CACtB,4DAA4D,EAC5D,kEAAW,CAAC,SAAS,CAAC,2EAA2E,CAAC,EAClG,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,+BAA+B,EAAE,kEAAW,CAAC,SAAS,CACrE,0FAA0F,CAAC,CAAC;SACpG,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,4BAA4B;QAC5B,wFAAS,CAAC,eAAe,CACtB,+DAA+D,EAC/D,kEAAW,CAAC,SAAS,CAAC,8EAA8E,CAAC,EACrG,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,gCAAgC,EAAE,kEAAW,CAAC,SAAS,CACtE,2FAA2F,CAAC,CAAC;SACrG,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,yBAAyB;QACzB,wFAAS,CAAC,eAAe,CACtB,kEAAkE,EAClE,kEAAW,CAAC,SAAS,CAAC,iFAAiF,CAAC,EACxG,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,+BAA+B,EAAE,kEAAW,CAAC,SAAS,CACrE,0FAA0F,CAAC,CAAC;YAClG,IAAI,+FAAgB,CAAC,kCAAkC,EAAE,kEAAW,CAAC,SAAS,CACxE,6FAA6F,CAAC,CAAC;SACvG,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,yBAAyB;QACzB,wFAAS,CAAC,eAAe,CACtB,iEAAiE,EACjE,kEAAW,CAAC,SAAS,CAAC,gFAAgF,CAAC,EACvG,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,QAAQ,EAAE,kEAAW,CAAC,SAAS,CAC9C,mEAAmE,CAAC,CAAC;YAC3E,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,4EAA4E,CAAC,CAAC;YACpF,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,yEAAyE,CAAC,CAAC;YACjF,IAAI,+FAAgB,CAAC,YAAY,EAAE,kEAAW,CAAC,SAAS,CAClD,uEAAuE,CAAC,CAAC;SACjF,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,+BAA+B;QAC/B,wFAAS,CAAC,eAAe,CACtB,uEAAuE,EACvE,kEAAW,CAAC,SAAS,CAAC,sFAAsF,CAAC,EAC7G,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,UAAU,EAAE,kEAAW,CAAC,SAAS,CAChD,qEAAqE,CAAC,CAAC;YAC7E,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,yEAAyE,CAAC,CAAC;YACjF,IAAI,+FAAgB,CAAC,YAAY,EAAE,kEAAW,CAAC,SAAS,CAClD,uEAAuE,CAAC,CAAC;YAC/E,IAAI,+FAAgB,CAAC,YAAY,EAAE,kEAAW,CAAC,SAAS,CAClD,uEAAuE,CAAC,CAAC;SACjF,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,iBAAiB;QACjB,wFAAS,CAAC,eAAe,CACtB,4DAA4D,EAC5D,kEAAW,CAAC,SAAS,CAAC,2EAA2E,CAAC,EAClG,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,2EAA2E,CAAC,CAAC;SACrF,EAAE,IAAI,EAAE,KAAK,CAAC;KACpB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtTL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACrB;AACwC;AACT;AACpB;AACmB;AAE/E;UAAM,0BAA0B;;IACpB,4CAAiB,GAAgB;QAC9C,gBAAgB;QAChB,wFAAS,CAAC,eAAe,CACnB,8CAA8C,EAC9C,kEAAW,CAAC,SAAS,CAAC,uDAAuD,CAAC,EAC9E,iGAAa,CAAC,YAAY,EAC1B;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAC/B,kEAAW,CAAC,SAAS,CACf,oEAAoE,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,iBAAiB,EAChC,kEAAW,CAAC,SAAS,CACf,qEAAqE,CAAC,CAAC;SACrF,EACD,kFAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,qGAA2B,CAAC,KAAK,CAAC,CAAC;QACjG,aAAa;QACb,wFAAS,CAAC,eAAe,CACnB,2CAA2C,EAC3C,kEAAW,CAAC,SAAS,CAAC,oDAAoD,CAAC,EAC3E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,UAAU,EACzB,kEAAW,CAAC,SAAS,CACf,iEAAiE,CAAC,CAAC;YAC/E,IAAI,+FAAgB,CAAC,WAAW,EAC1B,kEAAW,CAAC,SAAS,CACf,kEAAkE,CAAC,CAAC;SAClF,CAAC;QACR,mBAAmB;QACnB,wFAAS,CAAC,eAAe,CACnB,iDAAiD,EACjD,kEAAW,CAAC,SAAS,CAAC,0DAA0D,CAAC,EACjF,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAC/B,kEAAW,CAAC,SAAS,CACf,uEAAuE,CAAC,CAAC;YACrF,IAAI,+FAAgB,CAAC,iBAAiB,EAChC,kEAAW,CAAC,SAAS,CACf,wEAAwE,CAAC,CAAC;SACxF,CAAC;QACR,mBAAmB;QACnB,wFAAS,CAAC,eAAe,CACnB,iDAAiD,EACjD,kEAAW,CAAC,SAAS,CAAC,0DAA0D,CAAC,EACjF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,YAAY,EAC3B,kEAAW,CAAC,SAAS,CACf,kEAAkE,CAAC,CAAC;SAClF,EACD,kFAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,qGAA2B,CAAC,KAAK,CAAC,CAAC;QAC3F,uBAAuB;QACvB,wFAAS,CAAC,eAAe,CACnB,0CAA0C,EAC1C,kEAAW,CAAC,SAAS,CAAC,mDAAmD,CAAC,EAC1E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,KAAK,EACpB,kEAAW,CAAC,SAAS,CACf,2DAA2D,CAAC,CAAC;SAC3E,CAAC;QACR,sBAAsB;QACtB,wFAAS,CAAC,eAAe,CACnB,oDAAoD,EACpD,kEAAW,CAAC,SAAS,CAAC,6DAA6D,CAAC,EACpF,iGAAa,CAAC,YAAY,EAC1B;YACG,IAAI,+FAAgB,CAAC,eAAe,EAAE,kEAAW,CAAC,SAAS,CACrD,qEAAqE,CAAC,CAAC;YAC7E,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC1D,+EAA+E,CAAC,CAAC;YACvF,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC1D,0EAA0E,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,mBAAmB,EAAE,kEAAW,CAAC,SAAS,CACzD,yEAAyE,CAAC,CAAC;SACnF,CAAC;QACR,wBAAwB;QACxB,wFAAS,CAAC,eAAe,CACnB,sDAAsD,EACtD,kEAAW,CAAC,SAAS,CAAC,+DAA+D,CAAC,EACtF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,UAAU,EACzB,kEAAW,CAAC,SAAS,CACf,iEAAiE,CAAC,CAAC;SACjF,EAAE,IAAI,EAAE,KAAK,CAAC;KACvB,CAAC;;;;;;;;;;;;;;;;AC/FL;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACrB;AACwC;AAGzF;UAAM,yBAAyB;;IACnB,0CAAgB,GAAgB;QAC7C,6BAA6B;QAC7B,wFAAS,CAAC,eAAe,CACnB,kDAAkD,EAClD,kEAAW,CAAC,SAAS,CAAC,wDAAwD,CAAC,EAC/E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,kBAAkB,EACjC,kEAAW,CAAC,SAAS,CACf,gEAAgE,CAAC,CAAC;SAChF,CAAC;QACR,kCAAkC;QAClC,wFAAS,CAAC,eAAe,CACnB,sDAAsD,EACtD,kEAAW,CAAC,SAAS,CAAC,4DAA4D,CAAC,EACnF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,sBAAsB,EACrC,kEAAW,CAAC,SAAS,CACf,oEAAoE,CAAC,CAAC;SACpF,CAAC;QACR,uCAAuC;QACvC,wFAAS,CAAC,eAAe,CACnB,yDAAyD,EACzD,kEAAW,CAAC,SAAS,CAAC,+DAA+D,CAAC,EACtF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,yBAAyB,EACxC,kEAAW,CAAC,SAAS,CACf,uEAAuE,CAAC,CAAC;SACvF,CAAC;QAER,gBAAgB;QAChB,wFAAS,CAAC,eAAe,CACnB,8CAA8C,EAC9C,kEAAW,CAAC,SAAS,CAAC,oDAAoD,CAAC,EAC3E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,cAAc,EAC7B,kEAAW,CAAC,SAAS,CACf,4DAA4D,CAAC,CAAC;SAC5E,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,UAAU;QACV,wFAAS,CAAC,eAAe,CACnB,yCAAyC,EACzC,kEAAW,CAAC,SAAS,CAAC,+CAA+C,CAAC,EACtE,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,SAAS,EACxB,kEAAW,CAAC,SAAS,CACf,uDAAuD,CAAC,CAAC;SACvE,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,wCAAwC;QACxC,wFAAS,CAAC,eAAe,CACnB,qDAAqD,EACrD,kEAAW,CAAC,SAAS,CAAC,2DAA2D,CAAC,EAClF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,qBAAqB,EACpC,kEAAW,CAAC,SAAS,CACf,mEAAmE,CAAC,CAAC;SACnF,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,qCAAqC;QACrC,wFAAS,CAAC,eAAe,CACnB,4CAA4C,EAC5C,kEAAW,CAAC,SAAS,CAAC,kDAAkD,CAAC,EACzE,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,YAAY,EAC3B,kEAAW,CAAC,SAAS,CACf,0DAA0D,CAAC,CAAC;SAC1E,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,qCAAqC;QACrC,wFAAS,CAAC,eAAe,CACnB,sDAAsD,EACtD,kEAAW,CAAC,SAAS,CAAC,4DAA4D,CAAC,EACnF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,sBAAsB,EACrC,kEAAW,CAAC,SAAS,CACf,oEAAoE,CAAC,CAAC;SACpF,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,uCAAuC;QACvC,wFAAS,CAAC,eAAe,CACnB,qDAAqD,EACrD,kEAAW,CAAC,SAAS,CAAC,2DAA2D,CAAC,EAClF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,qBAAqB,EACpC,kEAAW,CAAC,SAAS,CACf,mEAAmE,CAAC,CAAC;SACnF,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,iBAAiB;QACjB,wFAAS,CAAC,eAAe,CACnB,+CAA+C,EAC/C,kEAAW,CAAC,SAAS,CAAC,qDAAqD,CAAC,EAC5E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,eAAe,EAC9B,kEAAW,CAAC,SAAS,CACf,6DAA6D,CAAC,CAAC;SAC7E,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,iBAAiB;QACjB,wFAAS,CAAC,eAAe,CACnB,+CAA+C,EAC/C,kEAAW,CAAC,SAAS,CAAC,qDAAqD,CAAC,EAC5E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,eAAe,EAC9B,kEAAW,CAAC,SAAS,CACf,6DAA6D,CAAC,CAAC;SAC7E,EAAE,IAAI,EAAE,KAAK,CAAC;KACvB,CAAC;;;;;;;;;;;;;;;;ACtHL;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACrB;AACwC;AAGzF;UAAM,2BAA2B;;IACrB,8CAAkB,GAAgB;QAC/C,mBAAmB;QACnB,wFAAS,CAAC,eAAe,CACnB,4CAA4C,EAC5C,kEAAW,CAAC,SAAS,CAAC,kDAAkD,CAAC,EACzE,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,UAAU,EACzB,kEAAW,CAAC,SAAS,CACf,0DAA0D,CAAC,CAAC;SAC1E,EAAE,IAAI,EAAE,IAAI,CAAC;QACpB,mBAAmB;QACnB,wFAAS,CAAC,eAAe,CACnB,4CAA4C,EAC5C,kEAAW,CAAC,SAAS,CAAC,kDAAkD,CAAC,EACzE,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,UAAU,EACzB,kEAAW,CAAC,SAAS,CACf,0DAA0D,CAAC,CAAC;SAC1E,EAAE,IAAI,EAAE,IAAI,CAAC;KACtB,CAAC;;;;;;;;;;;;;;;;AC3BL;AAAA;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACrB;AACwC;AACT;AAEhF;UAAM,iCAAiC;;IAC3B,2DAAyB,GAAgB;QACtD,oBAAoB;QACpB,wFAAS,CAAC,eAAe,CACtB,8DAA8D,EAC9D,kEAAW,CAAC,SAAS,CAAC,0DAA0D,CAAC,EACjF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,cAAc,EAC7B,kEAAW,CAAC,SAAS,CACf,oEAAoE,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,cAAc,EAC7B,kEAAW,CAAC,SAAS,CACf,oEAAoE,CAAC,CAAC;SACpF,CAAC;QACL,mBAAmB;QACnB,wFAAS,CAAC,eAAe,CACtB,iEAAiE,EACjE,kEAAW,CAAC,SAAS,CAAC,6DAA6D,CAAC,EACpF,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,0EAA0E,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,0EAA0E,CAAC,CAAC;SACpF,CAAC;QACL,kBAAkB;QAClB,wFAAS,CAAC,eAAe,CACtB,kEAAkE,EAClE,kEAAW,CAAC,SAAS,CAAC,+DAA+D,CAAC,EACtF,iGAAa,CAAC,aAAa,EAC3B;YACG,IAAI,+FAAgB,CAAC,qBAAqB,EAAE,kEAAW,CAAC,SAAS,CAC3D,oEAAoE,CAAC,CAAC;YAC5E,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC1D,mEAAmE,CAAC,CAAC;SAC7E,CAAC;QACL,mBAAmB;QACnB,wFAAS,CAAC,eAAe,CACtB,mEAAmE,EACnE,kEAAW,CAAC,SAAS,CAAC,gEAAgE,CAAC,EACvF,iGAAa,CAAC,aAAa,EAC3B;YACG,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,4EAA4E,CAAC,CAAC;YACpF,IAAI,+FAAgB,CAAC,kBAAkB,EAAE,kEAAW,CAAC,SAAS,CACxD,oEAAoE,CAAC,CAAC;YAC5E,IAAI,+FAAgB,CAAC,kBAAkB,EAAE,kEAAW,CAAC,SAAS,CACxD,oEAAoE,CAAC,CAAC;YAC5E,IAAI,+FAAgB,CAAC,mBAAmB,EAAE,kEAAW,CAAC,SAAS,CACzD,qEAAqE,CAAC,CAAC;YAC7E,IAAI,+FAAgB,CAAC,uBAAuB,EAAE,kEAAW,CAAC,SAAS,CAC7D,yEAAyE,CAAC,CAAC;YACjF,IAAI,+FAAgB,CAAC,sBAAsB,EAAE,kEAAW,CAAC,SAAS,CAC5D,wEAAwE,CAAC,CAAC;YAChF,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC1D,sEAAsE,CAAC,CAAC;SAChF,CAAC;QACL,gBAAgB;QAChB,wFAAS,CAAC,eAAe,CACtB,iEAAiE,EACjE,kEAAW,CAAC,SAAS,CAAC,sEAAsE,CAAC,EAC7F,iGAAa,CAAC,aAAa,EAC3B;YACG,IAAI,+FAAgB,CAAC,SAAS,EAAE,kEAAW,CAAC,SAAS,CAC/C,+EAA+E,CAAC,CAAC;YACvF,IAAI,+FAAgB,CAAC,QAAQ,EAAE,kEAAW,CAAC,SAAS,CAC9C,gFAAgF,CAAC,CAAC;YACxF,IAAI,+FAAgB,CAAC,SAAS,EAAE,kEAAW,CAAC,SAAS,CAC/C,gFAAgF,CAAC,CAAC;SAC1F,CAAC;QACL,iBAAiB;QACjB,wFAAS,CAAC,eAAe,CACtB,iEAAiE,EACjE,kEAAW,CAAC,SAAS,CAAC,8DAA8D,CAAC,EAClF,iGAAa,CAAC,eAAe,EAChC;YACG,IAAI,+FAAgB,CAAC,eAAe,EAAE,kEAAW,CAAC,SAAS,CACrD,iEAAiE,CAAC,CAAC;SAC3E,CAAC;KACP,CAAC;;;;;;;;;;;;;;;;ACrFL;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACT;AACpC;AAEzB,MAAM,kBAAkB;IAC5B,MAAM,CAAC,aAAa,CAAC,IAAuB;QACzC,QAAQ,IAAI,EAAE;YACX,KAAK,iFAAiB,CAAC,gBAAgB,CAAC;YACxC,KAAK,iFAAiB,CAAC,SAAS;gBAC7B,OAAO,+CAAI,CAAC,cAAc,CAAC;YAC9B,KAAK,iFAAiB,CAAC,QAAQ,CAAC;YAChC,KAAK,iFAAiB,CAAC,YAAY;gBAChC,OAAO,+CAAI,CAAC,iBAAiB,CAAC;YACjC,KAAK,iFAAiB,CAAC,SAAS;gBAC7B,OAAO,+CAAI,CAAC,gBAAgB,CAAC;YAChC,KAAK,iFAAiB,CAAC,OAAO;gBAC3B,OAAO,+CAAI,CAAC,IAAI,CAAC;YACpB,KAAK,iFAAiB,CAAC,IAAI;gBACxB,OAAO,+CAAI,CAAC,eAAe,CAAC;YAC/B,KAAK,iFAAiB,CAAC,IAAI;gBACxB,OAAO,+CAAI,CAAC,gBAAgB,CAAC;YAChC;gBACG,OAAO,EAAE,CAAC;SACf;IACJ,CAAC;CACH;;;;;;;;;;;;;;ACzBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACrB;AACwC;AACT;AACpB;AACmB;AAE/E;UAAM,iCAAiC;;IAC3B,2DAAyB,GAAgB;QACtD,gBAAgB;QAChB,wFAAS,CAAC,eAAe,CACnB,iDAAiD,EACjD,kEAAW,CAAC,SAAS,CAAC,wDAAwD,CAAC,EAC/E,iGAAa,CAAC,YAAY,EAC1B;YACG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,uEAAuE,CAAC,CAAC;YAE/E,IAAI,+FAAgB,CAAC,eAAe,EAAE,kEAAW,CAAC,SAAS,CACrD,wEAAwE,CAAC,CAAC;YAChF,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,yEAAyE,CAAC,CAAC;YACjF,IAAI,+FAAgB,CAAC,qBAAqB,EAAE,kEAAW,CAAC,SAAS,CAC3D,8EAA8E,CAAC,CAAC;YACtF,IAAI,+FAAgB,CAAC,sBAAsB,EAAE,kEAAW,CAAC,SAAS,CAC5D,+EAA+E,CAAC,CAAC;YACvF,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC1D,6EAA6E,CAAC,CAAC;YACrF,IAAI,+FAAgB,CAAC,qBAAqB,EAAE,kEAAW,CAAC,SAAS,CAC3D,8EAA8E,CAAC,CAAC;YACtF,IAAI,+FAAgB,CAAC,wBAAwB,EAAE,kEAAW,CAAC,SAAS,CAC9D,iFAAiF,CAAC,CAAC;YACzF,IAAI,+FAAgB,CAAC,yBAAyB,EAAE,kEAAW,CAAC,SAAS,CAC/D,kFAAkF,CAAC,CAAC;YAC1F,IAAI,+FAAgB,CAAC,sBAAsB,EAAE,kEAAW,CAAC,SAAS,CAC5D,+EAA+E,CAAC,CAAC;YACvF,IAAI,+FAAgB,CAAC,uBAAuB,EAAE,kEAAW,CAAC,SAAS,CAC7D,gFAAgF,CAAC,CAAC;SAC1F,EACD,kFAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,qGAA2B,CAAC,KAAK,CAAC,CAC/F;QACD,aAAa;QACb,wFAAS,CAAC,eAAe,CACnB,kDAAkD,EAClD,kEAAW,CAAC,SAAS,CAAC,qDAAqD,CAAC,EAC5E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,uEAAuE,CAAC,CAAC;YAE/E,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,sEAAsE,CAAC,CAAC;YAC9E,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,uEAAuE,CAAC,CAAC;YAC/E,IAAI,+FAAgB,CAAC,sBAAsB,EAAE,kEAAW,CAAC,SAAS,CAC5D,4EAA4E,CAAC,CAAC;YACpF,IAAI,+FAAgB,CAAC,uBAAuB,EAAE,kEAAW,CAAC,SAAS,CAC7D,6EAA6E,CAAC,CAAC;YACrF,IAAI,+FAAgB,CAAC,qBAAqB,EAAE,kEAAW,CAAC,SAAS,CAC3D,2EAA2E,CAAC,CAAC;YACnF,IAAI,+FAAgB,CAAC,sBAAsB,EAAE,kEAAW,CAAC,SAAS,CAC5D,4EAA4E,CAAC,CAAC;YACpF,IAAI,+FAAgB,CAAC,yBAAyB,EAAE,kEAAW,CAAC,SAAS,CAC/D,+EAA+E,CAAC,CAAC;YACvF,IAAI,+FAAgB,CAAC,0BAA0B,EAAE,kEAAW,CAAC,SAAS,CAChE,gFAAgF,CAAC,CAAC;YACxF,IAAI,+FAAgB,CAAC,uBAAuB,EAAE,kEAAW,CAAC,SAAS,CAC7D,6EAA6E,CAAC,CAAC;YACrF,IAAI,+FAAgB,CAAC,wBAAwB,EAAE,kEAAW,CAAC,SAAS,CAC9D,8EAA8E,CAAC,CAAC;SACxF,CACN;QACD,mBAAmB;QACnB,wFAAS,CAAC,eAAe,CACnB,wDAAwD,EACxD,kEAAW,CAAC,SAAS,CAAC,2DAA2D,CAAC,EAClF,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,4EAA4E,CAAC,CAAC;YACpF,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,6EAA6E,CAAC,CAAC;YACrF,IAAI,+FAAgB,CAAC,sBAAsB,EAAE,kEAAW,CAAC,SAAS,CAC5D,kFAAkF,CAAC,CAAC;YAC1F,IAAI,+FAAgB,CAAC,uBAAuB,EAAE,kEAAW,CAAC,SAAS,CAC7D,mFAAmF,CAAC,CAAC;YAC3F,IAAI,+FAAgB,CAAC,qBAAqB,EAAE,kEAAW,CAAC,SAAS,CAC3D,iFAAiF,CAAC,CAAC;YACzF,IAAI,+FAAgB,CAAC,sBAAsB,EAAE,kEAAW,CAAC,SAAS,CAC5D,kFAAkF,CAAC,CAAC;YAC1F,IAAI,+FAAgB,CAAC,yBAAyB,EAAE,kEAAW,CAAC,SAAS,CAC/D,qFAAqF,CAAC,CAAC;YAC7F,IAAI,+FAAgB,CAAC,0BAA0B,EAAE,kEAAW,CAAC,SAAS,CAChE,sFAAsF,CAAC,CAAC;YAC9F,IAAI,+FAAgB,CAAC,uBAAuB,EAAE,kEAAW,CAAC,SAAS,CAC7D,mFAAmF,CAAC,CAAC;YAC3F,IAAI,+FAAgB,CAAC,wBAAwB,EAAE,kEAAW,CAAC,SAAS,CAC9D,oFAAoF,CAAC,CAAC;SAC9F,CACN;QACD,0BAA0B;QAC1B,wFAAS,CAAC,eAAe,CACnB,+DAA+D,EAC/D,kEAAW,CAAC,SAAS,CAAC,wEAAwE,CAAC,EAC/F,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,uBAAuB,EAAE,kEAAW,CAAC,SAAS,CAC7D,wEAAwE,CAAC,CAAC;SAClF,CACN;QACD,sBAAsB;QACtB,wFAAS,CAAC,eAAe,CACnB,2DAA2D,EAC3D,kEAAW,CAAC,SAAS,CAAC,iEAAiE,CAAC,EACxF,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,mBAAmB,EAAE,kEAAW,CAAC,SAAS,CACzD,iEAAiE,CAAC,CAAC;SAC3E,CACN;QACD,wBAAwB;QACxB,wFAAS,CAAC,eAAe,CACnB,6DAA6D,EAC7D,kEAAW,CAAC,SAAS,CAAC,mEAAmE,CAAC,EAC1F,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,8BAA8B,EAAE,kEAAW,CAAC,SAAS,CACpE,uFAAuF,CAAC,CAAC;YAC/F,IAAI,+FAAgB,CAAC,+BAA+B,EAAE,kEAAW,CAAC,SAAS,CACrE,wFAAwF,CAAC,CAAC;YAChG,IAAI,+FAAgB,CAAC,8BAA8B,EAAE,kEAAW,CAAC,SAAS,CACpE,uFAAuF,CAAC,CAAC;YAC/F,IAAI,+FAAgB,CAAC,+BAA+B,EAAE,kEAAW,CAAC,SAAS,CACrE,wFAAwF,CAAC,CAAC;SAClG,CACN;QACD,6BAA6B;QAC7B,wFAAS,CAAC,eAAe,CACnB,2DAA2D,EAC3D,kEAAW,CAAC,SAAS,CAAC,iEAAiE,CAAC,EACxF,iGAAa,CAAC,YAAY,EAC1B;YACG,IAAI,+FAAgB,CAAC,mBAAmB,EAAE,kEAAW,CAAC,SAAS,CACzD,mFAAmF,CAAC,CAAC;YAC3F,IAAI,+FAAgB,CAAC,qBAAqB,EAAE,kEAAW,CAAC,SAAS,CAC3D,qFAAqF,CAAC,CAAC;YAC7F,IAAI,+FAAgB,CAAC,sBAAsB,EAAE,kEAAW,CAAC,SAAS,CAC5D,sFAAsF,CAAC,CAAC;YAC9F,IAAI,+FAAgB,CAAC,qBAAqB,EAAE,kEAAW,CAAC,SAAS,CAC3D,qFAAqF,CAAC,CAAC;YAC7F,IAAI,+FAAgB,CAAC,uBAAuB,EAAE,kEAAW,CAAC,SAAS,CAC7D,uFAAuF,CAAC,CAAC;SACjG,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,eAAe;QACf,wFAAS,CAAC,eAAe,CACnB,qDAAqD,EACrD,kEAAW,CAAC,SAAS,CAAC,2DAA2D,CAAC,EAClF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,WAAW,EAAE,kEAAW,CAAC,SAAS,CACjD,qEAAqE,CAAC,CAAC;YAC7E,IAAI,+FAAgB,CAAC,kBAAkB,EAAE,kEAAW,CAAC,SAAS,CACxD,4EAA4E,CAAC,CAAC;YACpF,IAAI,+FAAgB,CAAC,mBAAmB,EAAE,kEAAW,CAAC,SAAS,CACzD,6EAA6E,CAAC,CAAC;YACrF,IAAI,+FAAgB,CAAC,kBAAkB,EAAE,kEAAW,CAAC,SAAS,CACxD,4EAA4E,CAAC,CAAC;YACpF,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC1D,8EAA8E,CAAC,CAAC;SACxF,EAAE,IAAI,EAAE,KAAK,CAAC;QACrB,wBAAwB;QACxB,wFAAS,CAAC,eAAe,CACnB,2DAA2D,EAC3D,kEAAW,CAAC,SAAS,CAAC,iEAAiE,CAAC,EACxF,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,iFAAiF,CAAC,CAAC;YACzF,IAAI,+FAAgB,CAAC,wBAAwB,EAAE,kEAAW,CAAC,SAAS,CAC9D,wFAAwF,CAAC,CAAC;YAChG,IAAI,+FAAgB,CAAC,yBAAyB,EAAE,kEAAW,CAAC,SAAS,CAC/D,yFAAyF,CAAC,CAAC;YACjG,IAAI,+FAAgB,CAAC,wBAAwB,EAAE,kEAAW,CAAC,SAAS,CAC9D,wFAAwF,CAAC,CAAC;YAChG,IAAI,+FAAgB,CAAC,0BAA0B,EAAE,kEAAW,CAAC,SAAS,CAChE,0FAA0F,CAAC,CAAC;SACpG,EAAE,IAAI,EAAE,KAAK,CAAC;KACvB,CAAC;;;;;;;;;;;;;;;;AC3LL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFAAkF;AAC1B;AACwC;AACT;AACpB;AACmB;AAE/E;UAAM,yBAAyB;;IACnB,0CAAgB,GAAgB;QAC7C,gBAAgB;QAChB,wFAAS,CAAC,eAAe,CACnB,6CAA6C,EAC7C,kEAAW,CAAC,SAAS,CAAC,sDAAsD,CAAC,EAC7E,iGAAa,CAAC,YAAY,EAC1B;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,qEAAqE,CAAC,CAAC;YAC7E,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,sEAAsE,CAAC,CAAC;YAC9E,IAAI,+FAAgB,CAAC,sBAAsB,EAAE,kEAAW,CAAC,SAAS,CAC5D,2EAA2E,CAAC,CAAC;YACnF,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC1D,yEAAyE,CAAC,CAAC;SACnF,EACD,kFAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,qGAA2B,CAAC,KAAK,CAAC,CAC/F;QACD,aAAa;QACb,wFAAS,CAAC,eAAe,CACnB,0CAA0C,EAC1C,kEAAW,CAAC,SAAS,CAAC,mDAAmD,CAAC,EAC1E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,UAAU,EAAE,kEAAW,CAAC,SAAS,CAChD,4DAA4D,CAAC,CAAC;YACpE,IAAI,+FAAgB,CAAC,WAAW,EAAE,kEAAW,CAAC,SAAS,CACjD,6DAA6D,CAAC,CAAC;YACrE,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,kEAAkE,CAAC,CAAC;YAC1E,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,gEAAgE,CAAC,CAAC;SAC1E,CACN;QACD,mBAAmB;QACnB,wFAAS,CAAC,eAAe,CACnB,gDAAgD,EAChD,kEAAW,CAAC,SAAS,CAAC,yDAAyD,CAAC,EAChF,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,UAAU,EAAE,kEAAW,CAAC,SAAS,CAChD,kEAAkE,CAAC,CAAC;YAC1E,IAAI,+FAAgB,CAAC,WAAW,EAAE,kEAAW,CAAC,SAAS,CACjD,mEAAmE,CAAC,CAAC;YAC3E,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,wEAAwE,CAAC,CAAC;YAChF,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,sEAAsE,CAAC,CAAC;SAChF,CACN;QACD,mBAAmB;QACnB,wFAAS,CAAC,eAAe,CACnB,gDAAgD,EAChD,kEAAW,CAAC,SAAS,CAAC,yDAAyD,CAAC,EAChF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,wEAAwE,CAAC,CAAC;YAChF,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,yEAAyE,CAAC,CAAC;YACjF,IAAI,+FAAgB,CAAC,yBAAyB,EAAE,kEAAW,CAAC,SAAS,CAC/D,iFAAiF,CAAC,CAAC;SAC3F,EACD,kFAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,qGAA2B,CAAC,KAAK,CAAC,CACzF;QACD,uBAAuB;QACvB,wFAAS,CAAC,eAAe,CACnB,yCAAyC,EACzC,kEAAW,CAAC,SAAS,CAAC,kDAAkD,CAAC,EACzE,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,KAAK,EAAE,kEAAW,CAAC,SAAS,CAC3C,sDAAsD,CAAC,CAAC;SAChE,CACN;QACD,sBAAsB;QACtB,wFAAS,CAAC,eAAe,CACnB,mDAAmD,EACnD,kEAAW,CAAC,SAAS,CAAC,4DAA4D,CAAC,EACnF,iGAAa,CAAC,YAAY,EAC1B;YACG,IAAI,+FAAgB,CAAC,eAAe,EAAE,kEAAW,CAAC,SAAS,CACrD,0EAA0E,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC1D,+EAA+E,CAAC,CAAC;YACvF,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC1D,0EAA0E,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,mBAAmB,EAAE,kEAAW,CAAC,SAAS,CACzD,yEAAyE,CAAC,CAAC;SACnF,CACN;QACD,wFAAS,CAAC,eAAe,CACtB,sDAAsD,EACtD,kEAAW,CAAC,SAAS,CAAC,4DAA4D,CAAC,EACnF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,sBAAsB,EACrC,kEAAW,CAAC,SAAS,CACf,gEAAgE,CAAC,CAAC;YAC9E,IAAI,+FAAgB,CAAC,uBAAuB,EACtC,kEAAW,CAAC,SAAS,CACf,iEAAiE,CAAC,CAAC;YAC/E,IAAI,+FAAgB,CAAC,+BAA+B,EAC9C,kEAAW,CAAC,SAAS,CACf,yEAAyE,CAAC,CAAC;YACvF,IAAI,+FAAgB,CAAC,uBAAuB,EACtC,kEAAW,CAAC,SAAS,CACf,iEAAiE,CAAC,CAAC;YAC/E,IAAI,+FAAgB,CAAC,+BAA+B,EAC9C,kEAAW,CAAC,SAAS,CACf,yEAAyE,CAAC,CAAC;SACzF,EACD,kFAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,qGAA2B,CAAC,KAAK,CAAC,EAC1F,KAAK,CACP;KACH,CAAC;;;;;;;;;;;;;;;;AC3HL;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACrB;AACwC;AAKzF;UAAM,wBAAwB;;IAClB,6CAAoB,GAAgB;QACjD,OAAO;QACP,wFAAS,CAAC,eAAe,CACtB,sDAAsD,EACtD,kEAAW,CAAC,SAAS,CAAC,4DAA4D,CAAC,EACnF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,aAAa,EAAE,kEAAW,CAAC,SAAS,CACnD,wEAAwE,CAAC,CAAC;YAChF,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,yEAAyE,CAAC,CAAC;YACjF,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,yEAAyE,CAAC,CAAC;SACnF,CACH;QACD,aAAa;QACb,wFAAS,CAAC,eAAe,CACtB,4DAA4D,EAC5D,kEAAW,CAAC,SAAS,CAAC,kEAAkE,CAAC,EACzF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,aAAa,EAAE,kEAAW,CAAC,SAAS,CACnD,mEAAmE,CAAC,CAAC;YAC3E,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,oEAAoE,CAAC,CAAC;YAC5E,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,oEAAoE,CAAC,CAAC;SAC9E,CACH;QACD,UAAU;QACV,wFAAS,CAAC,eAAe,CACtB,yDAAyD,EACzD,kEAAW,CAAC,SAAS,CAAC,+DAA+D,CAAC,EACtF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,sEAAsE,CAAC,CAAC;YAC9E,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,uEAAuE,CAAC,CAAC;YAC/E,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,uEAAuE,CAAC,CAAC;SACjF,CACH;QACD,iBAAiB;QACjB,wFAAS,CAAC,eAAe,CACtB,+DAA+D,EAC/D,kEAAW,CAAC,SAAS,CAAC,qEAAqE,CAAC,EAC5F,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,eAAe,EAAE,kEAAW,CAAC,SAAS,CACrD,qEAAqE,CAAC,CAAC;SAC/E,CACH;QACD,6CAA6C;QAC7C,wFAAS,CAAC,eAAe,CACtB,kEAAkE,EAClE,kEAAW,CAAC,SAAS,CAAC,wEAAwE,CAAC,EAC/F,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,+BAA+B,EAAE,kEAAW,CAAC,SAAS,CACrE,qFAAqF,CAAC,CAAC;YAC7F,IAAI,+FAAgB,CAAC,gCAAgC,EAAE,kEAAW,CAAC,SAAS,CACtE,sFAAsF,CAAC,CAAC;SAChG,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,qDAAqD;QACrD,wFAAS,CAAC,eAAe,CACtB,wEAAwE,EACxE,kEAAW,CAAC,SAAS,CAAC,8EAA8E,CAAC,EACrG,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,kCAAkC,EAAE,kEAAW,CAAC,SAAS,CACxE,wFAAwF,CAAC,CAAC;YAChG,IAAI,+FAAgB,CAAC,mCAAmC,EAAE,kEAAW,CAAC,SAAS,CACzE,yFAAyF,CAAC,CAAC;SACnG,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,oBAAoB;QACpB,wFAAS,CAAC,eAAe,CACtB,iEAAiE,EACjE,kEAAW,CAAC,SAAS,CAAC,uEAAuE,CAAC,EAC9F,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC1D,0EAA0E,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,qBAAqB,EAAE,kEAAW,CAAC,SAAS,CAC3D,2EAA2E,CAAC,CAAC;SACrF,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,+BAA+B;QAC/B,wFAAS,CAAC,eAAe,CACtB,oEAAoE,EACpE,kEAAW,CAAC,SAAS,CAAC,0EAA0E,CAAC,EACjG,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,uBAAuB,EAAE,kEAAW,CAAC,SAAS,CAC7D,6EAA6E,CAAC,CAAC;YACrF,IAAI,+FAAgB,CAAC,wBAAwB,EAAE,kEAAW,CAAC,SAAS,CAC9D,8EAA8E,CAAC,CAAC;SACxF,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,qBAAqB;QACrB,wFAAS,CAAC,eAAe,CACtB,+DAA+D,EAC/D,kEAAW,CAAC,SAAS,CAAC,qEAAqE,CAAC,EAC5F,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,sEAAsE,CAAC,CAAC;YAC9E,IAAI,+FAAgB,CAAC,kBAAkB,EAAE,kEAAW,CAAC,SAAS,CACxD,wEAAwE,CAAC,CAAC;YAChF,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,sEAAsE,CAAC,CAAC;YAC9E,IAAI,+FAAgB,CAAC,kBAAkB,EAAE,kEAAW,CAAC,SAAS,CACxD,wEAAwE,CAAC,CAAC;SAClF,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,WAAW;QACX,wFAAS,CAAC,eAAe,CACtB,0DAA0D,EAC1D,kEAAW,CAAC,SAAS,CAAC,gEAAgE,CAAC,EACvF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,eAAe,EAAE,kEAAW,CAAC,SAAS,CACrD,qEAAqE,CAAC,CAAC;YAC7E,IAAI,+FAAgB,CAAC,qBAAqB,EAAE,kEAAW,CAAC,SAAS,CAC3D,2EAA2E,CAAC,CAAC;YACnF,IAAI,+FAAgB,CAAC,uBAAuB,EAAE,kEAAW,CAAC,SAAS,CAC7D,6EAA6E,CAAC,CAAC;SACvF,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,gBAAgB;QAChB,wFAAS,CAAC,eAAe,CACtB,8DAA8D,EAC9D,kEAAW,CAAC,SAAS,CAAC,oEAAoE,CAAC,EAC3F,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC1D,0EAA0E,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,qBAAqB,EAAE,kEAAW,CAAC,SAAS,CAC3D,2EAA2E,CAAC,CAAC;YACnF,IAAI,+FAAgB,CAAC,6BAA6B,EAAE,kEAAW,CAAC,SAAS,CACnE,mFAAmF,CAAC,CAAC;YAC3F,IAAI,+FAAgB,CAAC,8BAA8B,EAAE,kEAAW,CAAC,SAAS,CACpE,oFAAoF,CAAC,CAAC;SAC9F,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,eAAe;QACf,wFAAS,CAAC,eAAe,CACtB,6DAA6D,EAC7D,kEAAW,CAAC,SAAS,CAAC,mEAAmE,CAAC,EAC1F,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,wBAAwB,EAAE,kEAAW,CAAC,SAAS,CAC9D,8EAA8E,CAAC,CAAC;YACtF,IAAI,+FAAgB,CAAC,yBAAyB,EAAE,kEAAW,CAAC,SAAS,CAC/D,+EAA+E,CAAC,CAAC;SACzF,EAAE,IAAI,EAAE,KAAK,CAAC;KACpB,CAAC;;;;;;;;;;;;;;;;AC/JL;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACrB;AACwC;AAKzF;UAAM,2BAA2B;;IACrB,mDAAuB,GAAgB;QACpD,wFAAS,CAAC,eAAe,CACtB,mDAAmD,EACnD,kEAAW,CAAC,SAAS,CAAC,yDAAyD,CAAC,EAChF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC1D,oEAAoE,CAAC,CAAC;YAC5E,IAAI,+FAAgB,CAAC,YAAY,EAAE,kEAAW,CAAC,SAAS,CAClD,4DAA4D,CAAC,CAAC;YACpE,IAAI,+FAAgB,CAAC,aAAa,EAAE,kEAAW,CAAC,SAAS,CACnD,6DAA6D,CAAC,CAAC;YACrE,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,8DAA8D,CAAC,CAAC;SACxE,CAAC;QACL,wFAAS,CAAC,eAAe,CACtB,gDAAgD,EAChD,kEAAW,CAAC,SAAS,CAAC,sDAAsD,CAAC,EAC7E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,SAAS,EAAE,kEAAW,CAAC,SAAS,CAC/C,yDAAyD,CAAC,CAAC;YACjE,IAAI,+FAAgB,CAAC,UAAU,EAAE,kEAAW,CAAC,SAAS,CAChD,0DAA0D,CAAC,CAAC;YAClE,IAAI,+FAAgB,CAAC,SAAS,EAAE,kEAAW,CAAC,SAAS,CAC/C,yDAAyD,CAAC,CAAC;YACjE,IAAI,+FAAgB,CAAC,WAAW,EAAE,kEAAW,CAAC,SAAS,CACjD,2DAA2D,CAAC,CAAC;YACnE,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC1D,oEAAoE,CAAC,CAAC;SAC9E,CAAC;QACL,wFAAS,CAAC,eAAe,CACtB,sDAAsD,EACtD,kEAAW,CAAC,SAAS,CAAC,4DAA4D,CAAC,EACnF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,gEAAgE,CAAC,CAAC;YACxE,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,iEAAiE,CAAC,CAAC;SAC3E,CAAC;QACL,wFAAS,CAAC,eAAe,CACtB,wDAAwD,EACxD,kEAAW,CAAC,SAAS,CAAC,8DAA8D,CAAC,EACrF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,8DAA8D,CAAC,CAAC;SACxE,CAAC;QACL,wFAAS,CAAC,eAAe,CACtB,2DAA2D,EAC3D,kEAAW,CAAC,SAAS,CAAC,iEAAiE,CAAC,EACxF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,iEAAiE,CAAC,CAAC;SAC3E,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,wFAAS,CAAC,eAAe,CACtB,wDAAwD,EACxD,kEAAW,CAAC,SAAS,CAAC,8DAA8D,CAAC,EACrF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,8DAA8D,CAAC,CAAC;SACxE,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,wFAAS,CAAC,eAAe,CACtB,8DAA8D,EAC9D,kEAAW,CAAC,SAAS,CAAC,oEAAoE,CAAC,EAC3F,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,oEAAoE,CAAC,CAAC;SAC9E,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,wFAAS,CAAC,eAAe,CACtB,wDAAwD,EACxD,kEAAW,CAAC,SAAS,CAAC,8DAA8D,CAAC,EACrF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,8DAA8D,CAAC,CAAC;SACxE,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,wFAAS,CAAC,eAAe,CACtB,gEAAgE,EAChE,kEAAW,CAAC,SAAS,CAAC,sEAAsE,CAAC,EAC7F,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,sEAAsE,CAAC,CAAC;SAChF,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,wFAAS,CAAC,eAAe,CACtB,wDAAwD,EACxD,kEAAW,CAAC,SAAS,CAAC,8DAA8D,CAAC,EACrF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,8DAA8D,CAAC,CAAC;SACxE,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,wFAAS,CAAC,eAAe,CACtB,8DAA8D,EAC9D,kEAAW,CAAC,SAAS,CAAC,oEAAoE,CAAC,EAC3F,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,oEAAoE,CAAC,CAAC;SAC9E,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,wFAAS,CAAC,eAAe,CACtB,8DAA8D,EAC9D,kEAAW,CAAC,SAAS,CAAC,oEAAoE,CAAC,EAC3F,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,oEAAoE,CAAC,CAAC;SAC9E,EAAE,IAAI,EAAE,KAAK,CAAC;QAClB,wFAAS,CAAC,eAAe,CACtB,wDAAwD,EACxD,kEAAW,CAAC,SAAS,CAAC,8DAA8D,CAAC,EACrF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,8DAA8D,CAAC,CAAC;SACxE,EAAE,IAAI,EAAE,KAAK,CAAC;KACpB,CAAC;;;;;;;;;;;;;;;;ACjIL;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACrB;AACwC;AAGzF;UAAM,iCAAiC;;IAC3B,0DAAwB,GAAgB;QACrD,aAAa;QACb,wFAAS,CAAC,eAAe,CACnB,oDAAoD,EACpD,kEAAW,CAAC,SAAS,CAAC,0DAA0D,CAAC,EACjF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,YAAY,EAC3B,kEAAW,CAAC,SAAS,CACf,0DAA0D,CAAC,CAAC;SAC1E,CAAC;QACR,gBAAgB;QAChB,wFAAS,CAAC,eAAe,CACnB,sDAAsD,EACtD,kEAAW,CAAC,SAAS,CAAC,4DAA4D,CAAC,EACnF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,cAAc,EAC7B,kEAAW,CAAC,SAAS,CACf,4DAA4D,CAAC,CAAC;SAC5E,CAAC;QACR,cAAc;QACd,wFAAS,CAAC,eAAe,CACnB,oDAAoD,EACpD,kEAAW,CAAC,SAAS,CAAC,0DAA0D,CAAC,EACjF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,YAAY,EAC3B,kEAAW,CAAC,SAAS,CACf,0DAA0D,CAAC,CAAC;SAC1E,CAAC;QACR,aAAa;QACb,wFAAS,CAAC,eAAe,CACnB,mDAAmD,EACnD,kEAAW,CAAC,SAAS,CAAC,yDAAyD,CAAC,EAChF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,WAAW,EAC1B,kEAAW,CAAC,SAAS,CACf,yDAAyD,CAAC,CAAC;SACzE,CAAC;QACR,gBAAgB;QAChB,wFAAS,CAAC,eAAe,CACnB,sDAAsD,EACtD,kEAAW,CAAC,SAAS,CAAC,4DAA4D,CAAC,EACnF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,cAAc,EAC7B,kEAAW,CAAC,SAAS,CACf,4DAA4D,CAAC,CAAC;SAC5E,CAAC;KACV,CAAC;;;;;;;;;;;;;;;;ACzDL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFAAkF;AACrB;AACL;AAEoB;AACA;AACF;AACK;AACd;AACW;AACM;AACV;AACM;AACb;AACW;AACF;AACA;AACI;AACI;AACJ;AACJ;AACU;AACjB;AACJ;AACsB;AACM;AACJ;AACH;AAEpF;;GAEG;AACI,MAAM,qBAAqB;IAC/B,YAAmB,IAAuB,EAC7B,KAAa,EACb,QAAqB,EACrB,oBAAoB,GAAY,IAAI;QAH9B,SAAI,GAAJ,IAAI,CAAmB;QAC7B,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAa;QACrB,yBAAoB,GAApB,oBAAoB,CAAgB;IAAG,CAAC;CACvD;AAED;;GAEG;AACI;UAAM,yBAAyB;QACnC,YAAmB,KAAa,EAAS,QAAiC;YAAvD,UAAK,GAAL,KAAK,CAAQ;YAAS,aAAQ,GAAR,QAAQ,CAAyB;QAAG,CAAC;QAkI9E,MAAM,CAAC,6BAA6B,CAAC,UAAuC;YACzE,IAAI,kEAAW,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;gBAClC,OAAO,EAAE,CAAC;aACZ;YAED,OAAO,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;gBAC9B,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACrE,OAAO,QAAQ,CAAC;YACnB,CAAC,CAAC,CAAC;QACN,CAAC;QAED,MAAM,CAAC,wBAAwB,CAAC,KAA8B;YAC3D,IAAI,kEAAW,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC7B,OAAO,EAAE,CAAC;aACZ;YAED,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAC1D,CAAC;;IAjJD;;OAEG;IACa,2CAAiB,GAAwB;QACtD,2EAAiB,CAAC,SAAS;QAC3B,2EAAiB,CAAC,SAAS;QAC3B,2EAAiB,CAAC,YAAY;QAC9B,2EAAiB,CAAC,OAAO;QACzB,2EAAiB,CAAC,IAAI;QACtB,2EAAiB,CAAC,IAAI;QACtB,2EAAiB,CAAC,QAAQ;QAC1B,2EAAiB,CAAC,gBAAgB;KACpC,CAAC;IAEc,4CAAkB,GAA4B;QAC3D,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,SAAS,EAC/C,kEAAW,CAAC,SAAS,CAAC,yDAAyD,CAAC,EAChF,0FAA0B,CAAC,iBAAiB,CAAC;QACnD,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,QAAQ,EAC9C,kEAAW,CAAC,SAAS,CAAC,wDAAwD,CAAC,EAC/E,wFAAyB,CAAC,gBAAgB,CAAC;QACjD,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,UAAU,EAChD,kEAAW,CAAC,SAAS,CAAC,sDAAsD,CAAC,EAC7E,6FAA2B,CAAC,mBAAmB,CAAC;QACtD,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,SAAS,EAC/C,kEAAW,CAAC,SAAS,CAAC,6DAA6D,CAAC,EACpF,0FAA0B,CAAC,sBAAsB,EACjD,KAAK,CAAC;QACZ,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,IAAI,EAC1C,kEAAW,CAAC,SAAS,CAAC,2DAA2D,CAAC,EAClF,+EAAqB,CAAC,WAAW,CAAC;KAC1C,CAAC;IAEF;;OAEG;IACa,+CAAqB,GAAgC;QAClE,IAAI,yBAAyB,CAAC,kEAAW,CAAC,SAAS,CAAC,4DAA4D,CAAC,EAC3G,CAAC,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,gBAAgB,EAAE,EAAE,EAC3D,0GAAiC,CAAC,yBAAyB,CAAC,CAAC,CAAC;QAE1E,IAAI,yBAAyB,CAAC,kEAAW,CAAC,SAAS,CAAC,mDAAmD,CAAC,EAClG,CAAC,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,SAAS,EAChD,kEAAW,CAAC,SAAS,CAAC,yDAAyD,CAAC,EAChF,0FAA0B,CAAC,sBAAsB,EACjD,KAAK,CAAC;YACX,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,YAAY,EACnD,kEAAW,CAAC,SAAS,CAAC,4DAA4D,CAAC,EACnF,gGAA6B,CAAC,yBAAyB,EACtD,KAAK,CAAC;YACZ,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,OAAO,EAC9C,kEAAW,CAAC,SAAS,CAAC,uDAAuD,CAAC,EAC9E,sFAAwB,CAAC,oBAAoB,CAAC;YACnD,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,UAAU,EACjD,kEAAW,CAAC,SAAS,CAAC,0DAA0D,CAAC,EACjF,6FAA2B,CAAC,uBAAuB,CAAC;SACzD,CAAC;QAER,IAAI,yBAAyB,CAAC,kEAAW,CAAC,SAAS,CAAC,sDAAsD,CAAC,EACrG,CAAC,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,IAAI,EAC3C,kEAAW,CAAC,SAAS,CAAC,2DAA2D,CAAC,EAClF,gFAAqB,CAAC,WAAW,CAAC;YACvC,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,KAAK,EAC5C,kEAAW,CAAC,SAAS,CAAC,4DAA4D,CAAC,EACnF,sGAAiC,CAAC,yBAAyB,CAAC;YACjE,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,WAAW,EAClD,kEAAW,CAAC,SAAS,CAAC,2DAA2D,CAAC,EAClF,2FAA4B,CAAC,mBAAmB,CAAC;SACtD,CAAC;QAER,IAAI,yBAAyB,CAAC,kEAAW,CAAC,SAAS,CAAC,mDAAmD,CAAC,EAClG,CAAC,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,QAAQ,EAC/C,kEAAW,CAAC,SAAS,CAAC,wDAAwD,CAAC,EAC/E,yFAAyB,CAAC,gBAAgB,CAAC;YAChD,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,QAAQ,EAC/C,kEAAW,CAAC,SAAS,CAAC,wDAAwD,CAAC,EAC/E,yFAAyB,CAAC,gBAAgB,CAAC;SAChD,CAAC;QAER,IAAI,yBAAyB,CAAC,kEAAW,CAAC,SAAS,CAAC,qDAAqD,CAAC,EACpG;YACC,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,UAAU,EACjD,kEAAW,CAAC,SAAS,CAAC,0DAA0D,CAAC,EACjF,6FAA2B,CAAC,kBAAkB,CAAC;YACpD,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,SAAS,EAChD,kEAAW,CAAC,SAAS,CAAC,4DAA4D,CAAC,EACnF,iGAA6B,CAAC,oBAAoB,CAAC;YACxD,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,UAAU,EACjD,kEAAW,CAAC,SAAS,CAAC,0DAA0D,CAAC,EACjF,6FAA2B,CAAC,kBAAkB,CAAC;SACpD,CAAC;QAER,IAAI,yBAAyB,CAAC,kEAAW,CAAC,SAAS,CAAC,oDAAoD,CAAC,EACnG,CAAC,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,KAAK,EAC5C,kEAAW,CAAC,SAAS,CAAC,oDAAoD,CAAC,EAC3E,kFAAsB,CAAC,YAAY,CAAC;YACzC,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,GAAG,EAC1C,kEAAW,CAAC,SAAS,CAAC,wDAAwD,CAAC,EAC/E,yFAAyB,CAAC,gBAAgB,CAAC;YAChD,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,QAAQ,EAC/C,kEAAW,CAAC,SAAS,CAAC,6DAA6D,CAAC,EACpF,mGAA8B,CAAC,qBAAqB,CAAC;SAC1D,CAAC;QAER,IAAI,yBAAyB,CAAC,kEAAW,CAAC,SAAS,CAAC,kDAAkD,CAAC,EACjG,CAAC,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,WAAW,EAClD,kEAAW,CAAC,SAAS,CAAC,sDAAsD,CAAC,EAC7E,8EAAoB,CAAC,aAAa,CAAC;YACxC,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,YAAY,EACnD,kEAAW,CAAC,SAAS,CAAC,uDAAuD,CAAC,EAC9E,8EAAoB,CAAC,cAAc,CAAC;YACzC,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,OAAO,EAC9C,kEAAW,CAAC,SAAS,CAAC,uDAAuD,CAAC,EAC9E,8EAAoB,CAAC,QAAQ,CAAC;YACnC,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,OAAO,EAChD,kEAAW,CAAC,SAAS,CAAC,uDAAuD,CAAC,EAC9E,8EAAoB,CAAC,QAAQ,CAAC;SACjC,CAAC;QAER,IAAI,yBAAyB,CAAC,kEAAW,CAAC,SAAS,CAAC,2DAA2D,CAAC,EAC1G,CAAC,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,gBAAgB,EAAE,EAAE,EAC3D,oGAAiC,CAAC,wBAAwB,CAAC,CAAC,CAAC;QAEzE,IAAI,yBAAyB,CAAC,kEAAW,CAAC,SAAS,CAAC,6DAA6D,CAAC,EAC5G,CAAC,IAAI,qBAAqB,CAAC,2EAAiB,CAAC,aAAa,EAAE,EAAE,EACxD,mGAA8B,CAAC,qBAAqB,CAAC,CAAC,CAAC;KACrE,CAAC;;;;;;;;;;;;;;;;AC3KL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACrB;AACwC;AACT;AACpB;AACmB;AAE/E;UAAM,2BAA2B;;IACrB,+CAAmB,GAAgB;QAChD,gBAAgB;QAChB,wFAAS,CAAC,eAAe,CACnB,+CAA+C,EAC/C,kEAAW,CAAC,SAAS,CAAC,wDAAwD,CAAC,EAC/E,iGAAa,CAAC,YAAY,EAC1B;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,uEAAuE,CAAC,CAAC;YAC/E,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,wEAAwE,CAAC,CAAC;YAChF,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC1D,2EAA2E,CAAC,CAAC;YACnF,IAAI,+FAAgB,CAAC,kBAAkB,EAAE,kEAAW,CAAC,SAAS,CACxD,yEAAyE,CAAC,CAAC;SACnF,EACD,kFAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,qGAA2B,CAAC,KAAK,CAAC,CAC/F;QACD,aAAa;QACb,wFAAS,CAAC,eAAe,CACnB,4CAA4C,EAC5C,kEAAW,CAAC,SAAS,CAAC,qDAAqD,CAAC,EAC5E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,UAAU,EAAE,kEAAW,CAAC,SAAS,CAChD,8DAA8D,CAAC,CAAC;YACtE,IAAI,+FAAgB,CAAC,WAAW,EAAE,kEAAW,CAAC,SAAS,CACjD,+DAA+D,CAAC,CAAC;YACvE,IAAI,+FAAgB,CAAC,cAAc,EAAE,kEAAW,CAAC,SAAS,CACpD,kEAAkE,CAAC,CAAC;YAC1E,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,oEAAoE,CAAC,CAAC;SAC9E,CACN;QACD,mBAAmB;QACnB,wFAAS,CAAC,eAAe,CACnB,kDAAkD,EAClD,kEAAW,CAAC,SAAS,CAAC,2DAA2D,CAAC,EAClF,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,0EAA0E,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,iBAAiB,EAAE,kEAAW,CAAC,SAAS,CACvD,2EAA2E,CAAC,CAAC;YACnF,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC1D,8EAA8E,CAAC,CAAC;YACtF,IAAI,+FAAgB,CAAC,gBAAgB,EAAE,kEAAW,CAAC,SAAS,CACtD,0EAA0E,CAAC,CAAC;SACpF,CACN;QACD,mBAAmB;QACnB,wFAAS,CAAC,eAAe,CACnB,kDAAkD,EAClD,kEAAW,CAAC,SAAS,CAAC,2DAA2D,CAAC,EAClF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,YAAY,EAAE,kEAAW,CAAC,SAAS,CAClD,sEAAsE,CAAC,CAAC;SAChF,EACD,kFAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,qGAA2B,CAAC,KAAK,CAAC,CACzF;QACD,uBAAuB;QACvB,wFAAS,CAAC,eAAe,CACnB,2CAA2C,EAC3C,kEAAW,CAAC,SAAS,CAAC,oDAAoD,CAAC,EAC3E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,KAAK,EAAE,kEAAW,CAAC,SAAS,CAC3C,wDAAwD,CAAC,CAAC;SAClE,CACN;QACD,sBAAsB;QACtB,wFAAS,CAAC,eAAe,CACnB,qDAAqD,EACrD,kEAAW,CAAC,SAAS,CAAC,8DAA8D,CAAC,EACrF,iGAAa,CAAC,YAAY,EAC1B;YACG,IAAI,+FAAgB,CAAC,eAAe,EAAE,kEAAW,CAAC,SAAS,CACrD,4EAA4E,CAAC,CAAC;YACpF,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC1D,+EAA+E,CAAC,CAAC;YACvF,IAAI,+FAAgB,CAAC,oBAAoB,EAAE,kEAAW,CAAC,SAAS,CAC1D,0EAA0E,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,mBAAmB,EAAE,kEAAW,CAAC,SAAS,CACzD,yEAAyE,CAAC,CAAC;SACnF,CACN;KACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/FL;AAAA;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACrB;AAC+B;AACS;AAEzF;UAAM,8BAA8B;;IACxB,oDAAqB,GAAgB;QAClD,cAAc;QACd,wFAAS,CAAC,eAAe,CACnB,gDAAgD,EAChD,kEAAW,CAAC,SAAS,CAAC,sDAAsD,CAAC,EAC7E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,sBAAsB,EACrC,kEAAW,CAAC,SAAS,CACf,iEAAiE,CAAC,CAAC;YAC/E,IAAI,+FAAgB,CAAC,uBAAuB,EACtC,kEAAW,CAAC,SAAS,CACf,kEAAkE,CAAC,CAAC;YAChF,IAAI,+FAAgB,CAAC,qBAAqB,EACpC,kEAAW,CAAC,SAAS,CACf,gEAAgE,CAAC,CAAC;YAC9E,IAAI,+FAAgB,CAAC,sBAAsB,EACrC,kEAAW,CAAC,SAAS,CACf,iEAAiE,CAAC,CAAC;YAC/E,IAAI,+FAAgB,CAAC,yBAAyB,EACxC,kEAAW,CAAC,SAAS,CACf,oEAAoE,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,0BAA0B,EACzC,kEAAW,CAAC,SAAS,CACf,qEAAqE,CAAC,CAAC;YACnF,IAAI,+FAAgB,CAAC,uBAAuB,EACtC,kEAAW,CAAC,SAAS,CACf,kEAAkE,CAAC,CAAC;YAChF,IAAI,+FAAgB,CAAC,wBAAwB,EACvC,kEAAW,CAAC,SAAS,CACf,mEAAmE,CAAC,CAAC;SACnF,CAAC;QACR,oBAAoB;QACpB,wFAAS,CAAC,eAAe,CACnB,sDAAsD,EACtD,kEAAW,CAAC,SAAS,CAAC,4DAA4D,CAAC,EACnF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,sBAAsB,EACrC,kEAAW,CAAC,SAAS,CACf,uEAAuE,CAAC,CAAC;YACrF,IAAI,+FAAgB,CAAC,uBAAuB,EACtC,kEAAW,CAAC,SAAS,CACf,wEAAwE,CAAC,CAAC;YACtF,IAAI,+FAAgB,CAAC,qBAAqB,EACpC,kEAAW,CAAC,SAAS,CACf,sEAAsE,CAAC,CAAC;YACpF,IAAI,+FAAgB,CAAC,sBAAsB,EACrC,kEAAW,CAAC,SAAS,CACf,uEAAuE,CAAC,CAAC;YACrF,IAAI,+FAAgB,CAAC,yBAAyB,EACxC,kEAAW,CAAC,SAAS,CACf,0EAA0E,CAAC,CAAC;YACxF,IAAI,+FAAgB,CAAC,0BAA0B,EACzC,kEAAW,CAAC,SAAS,CACf,2EAA2E,CAAC,CAAC;YACzF,IAAI,+FAAgB,CAAC,uBAAuB,EACtC,kEAAW,CAAC,SAAS,CACf,wEAAwE,CAAC,CAAC;YACtF,IAAI,+FAAgB,CAAC,wBAAwB,EACvC,kEAAW,CAAC,SAAS,CACf,yEAAyE,CAAC,CAAC;SACzF,CAAC;QACR,iBAAiB;QACjB,wFAAS,CAAC,eAAe,CACtB,mDAAmD,EACnD,kEAAW,CAAC,SAAS,CAAC,yDAAyD,CAAC,EAChF,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,qBAAqB,EACpC,kEAAW,CAAC,SAAS,CACf,oEAAoE,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,sBAAsB,EACrC,kEAAW,CAAC,SAAS,CACf,qEAAqE,CAAC,CAAC;YACnF,IAAI,+FAAgB,CAAC,oBAAoB,EACnC,kEAAW,CAAC,SAAS,CACf,mEAAmE,CAAC,CAAC;YACjF,IAAI,+FAAgB,CAAC,qBAAqB,EACpC,kEAAW,CAAC,SAAS,CACf,oEAAoE,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,wBAAwB,EACvC,kEAAW,CAAC,SAAS,CACf,uEAAuE,CAAC,CAAC;YACrF,IAAI,+FAAgB,CAAC,yBAAyB,EACxC,kEAAW,CAAC,SAAS,CACf,wEAAwE,CAAC,CAAC;YACtF,IAAI,+FAAgB,CAAC,sBAAsB,EACrC,kEAAW,CAAC,SAAS,CACf,qEAAqE,CAAC,CAAC;YACnF,IAAI,+FAAgB,CAAC,uBAAuB,EACtC,kEAAW,CAAC,SAAS,CACf,sEAAsE,CAAC,CAAC;SACtF,CAAC;KACP,CAAC;;;;;;;;;;;;;;;;ACnDL;AAAA;AAAO,MAAM,iBAAiB;CAC7B;;;;;;;;;;;;;;AClDD;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACrB;AACwC;AAGzF;UAAM,yBAAyB;;IACnB,0CAAgB,GAAgB;QAC7C,YAAY;QACZ,wFAAS,CAAC,eAAe,CACnB,2CAA2C,EAC3C,kEAAW,CAAC,SAAS,CAAC,iDAAiD,CAAC,EACxE,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,OAAO,EACtB,kEAAW,CAAC,SAAS,CACf,0DAA0D,CAAC,CAAC;YACxE,IAAI,+FAAgB,CAAC,OAAO,EACtB,kEAAW,CAAC,SAAS,CACf,0DAA0D,CAAC,CAAC;YACxE,IAAI,+FAAgB,CAAC,SAAS,EACxB,kEAAW,CAAC,SAAS,CACf,4DAA4D,CAAC,CAAC;YAC1E,IAAI,+FAAgB,CAAC,cAAc,EAC7B,kEAAW,CAAC,SAAS,CACf,iEAAiE,CAAC,CAAC;YAC/E,IAAI,+FAAgB,CAAC,cAAc,EAC7B,kEAAW,CAAC,SAAS,CACf,iEAAiE,CAAC,CAAC;SACjF,CAAC;QACR,aAAa;QACb,wFAAS,CAAC,eAAe,CACnB,iDAAiD,EACjD,kEAAW,CAAC,SAAS,CAAC,uDAAuD,CAAC,EAC9E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,iBAAiB,EAChC,kEAAW,CAAC,SAAS,CACf,oEAAoE,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,iBAAiB,EAChC,kEAAW,CAAC,SAAS,CACf,oEAAoE,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,mBAAmB,EAClC,kEAAW,CAAC,SAAS,CACf,sEAAsE,CAAC,CAAC;YACpF,IAAI,+FAAgB,CAAC,wBAAwB,EACvC,kEAAW,CAAC,SAAS,CACf,2EAA2E,CAAC,CAAC;YACzF,IAAI,+FAAgB,CAAC,wBAAwB,EACvC,kEAAW,CAAC,SAAS,CACf,2EAA2E,CAAC,CAAC;SAC3F,CAAC;KACV,CAAC;;;;;;;;;;;;;;;;ACnDL;AAAA;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACrB;AACwC;AAET;AAEhF;UAAM,6BAA6B;;IACvB,kDAAoB,GAAgB;QACjD,uBAAuB;QACvB,wFAAS,CAAC,eAAe,CACnB,kDAAkD,EAClD,kEAAW,CAAC,SAAS,CAAC,wDAAwD,CAAC,EAC/E,iGAAa,CAAC,WAAW,EACzB;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAC/B,kEAAW,CAAC,SAAS,CACf,gEAAgE,CAAC,CAAC;SAChF,CAAC;QACR,yBAAyB;QACzB,wFAAS,CAAC,eAAe,CACnB,8CAA8C,EAC9C,kEAAW,CAAC,SAAS,CAAC,oDAAoD,CAAC,EAC3E,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,YAAY,EAC3B,kEAAW,CAAC,SAAS,CACf,4DAA4D,CAAC,CAAC;SAC5E,CAAC;QACR,oBAAoB;QACpB,wFAAS,CAAC,eAAe,CACnB,mDAAmD,EACnD,kEAAW,CAAC,SAAS,CAAC,yDAAyD,CAAC,EAChF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,iBAAiB,EAChC,kEAAW,CAAC,SAAS,CACf,iEAAiE,CAAC,CAAC;SACjF,CAAC;KACV,CAAC;;;;;;;;;;;;;;;;ACtCL;AAAA;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACrB;AACwC;AACT;AAEhF;UAAM,2BAA2B;;IACrB,8CAAkB,GAAgB;QAC/C,YAAY;QACZ,wFAAS,CAAC,eAAe,CACnB,8CAA8C,EAC9C,kEAAW,CAAC,SAAS,CAAC,0DAA0D,CAAC,EACjF,iGAAa,CAAC,eAAe,EAC7B;YACG,IAAI,+FAAgB,CAAC,cAAc,EAC7B,kEAAW,CAAC,SAAS,CACf,0DAA0D,CAAC,EAC3D,IAAI,EACJ,IAAI,EACJ,CAAC,oBAAoB,EAAE,gBAAgB,CAAC,CAAC;SACvD,CAAC;KACV,CAAC;;;;;;;;;;;;;;;;ACpBL;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACrB;AACwC;AAGzF;UAAM,yBAAyB;;IACnB,0CAAgB,GAAgB;QAC7C,6BAA6B;QAC7B,wFAAS,CAAC,eAAe,CACnB,kDAAkD,EAClD,kEAAW,CAAC,SAAS,CAAC,wDAAwD,CAAC,EAC/E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,kBAAkB,EACjC,kEAAW,CAAC,SAAS,CACf,gEAAgE,CAAC,CAAC;SAChF,CAAC;QACR,kCAAkC;QAClC,wFAAS,CAAC,eAAe,CACnB,sDAAsD,EACtD,kEAAW,CAAC,SAAS,CAAC,4DAA4D,CAAC,EACnF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,sBAAsB,EACrC,kEAAW,CAAC,SAAS,CACf,oEAAoE,CAAC,CAAC;SACpF,CAAC;KACV,CAAC;;;;;;;;;;;;;;;;AC3BL;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACrB;AACwC;AAGzF;UAAM,sBAAsB;;IAChB,mCAAY,GAAgB;QACzC,kBAAkB;QAClB,wFAAS,CAAC,eAAe,CACnB,gDAAgD,EAChD,kEAAW,CAAC,SAAS,CAAC,sDAAsD,CAAC,EAC7E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,gBAAgB,EAC/B,kEAAW,CAAC,SAAS,CACf,8DAA8D,CAAC,CAAC;SAC9E,CAAC;QACR,oBAAoB;QACpB,wFAAS,CAAC,eAAe,CACnB,kDAAkD,EAClD,kEAAW,CAAC,SAAS,CAAC,wDAAwD,CAAC,EAC/E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,kBAAkB,EACjC,kEAAW,CAAC,SAAS,CACf,gEAAgE,CAAC,CAAC;SAChF,CAAC;KACV,CAAC;;;;;;;;;;;;;;;;AC3BL;AAAA;AAAA;AAAA;AAAA,kFAAkF;AAC1B;AACwC;AAEzF;UAAM,oBAAoB;;IACd,mCAAc,GAAgB;QAC3C,wFAAS,CAAC,eAAe,CACnB,6CAA6C,EAC7C,kEAAW,CAAC,SAAS,CAAC,mDAAmD,CAAC,EAC1E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,SAAS,EACxB,kEAAW,CAAC,SAAS,CACf,2DAA2D,CAAC,CAAC;SAC3E,CAAC;QACR,wFAAS,CAAC,eAAe,CACnB,8CAA8C,EAC9C,kEAAW,CAAC,SAAS,CAAC,oDAAoD,CAAC,EAC3E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,UAAU,EACzB,kEAAW,CAAC,SAAS,CACf,4DAA4D,CAAC,CAAC;SAC5E,CAAC;KACV,CAAC;IAEc,kCAAa,GAAgB;QAC1C,wFAAS,CAAC,eAAe,CACnB,4CAA4C,EAC5C,kEAAW,CAAC,SAAS,CAAC,mDAAmD,CAAC,EAC1E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,SAAS,EACxB,kEAAW,CAAC,SAAS,CACf,2DAA2D,CAAC,CAAC;SAC3E,CAAC;QACR,wFAAS,CAAC,eAAe,CACnB,6CAA6C,EAC7C,kEAAW,CAAC,SAAS,CAAC,oDAAoD,CAAC,EAC3E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,UAAU,EACzB,kEAAW,CAAC,SAAS,CACf,4DAA4D,CAAC,CAAC;SAC5E,CAAC;KACV,CAAC;IAEc,6BAAQ,GAAgB;QACrC,wFAAS,CAAC,eAAe,CACnB,iDAAiD,EACjD,kEAAW,CAAC,SAAS,CAAC,uDAAuD,CAAC,EAC9E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,aAAa,EAC5B,kEAAW,CAAC,SAAS,CACf,+DAA+D,CAAC,CAAC;SAC/E,CAAC;QACR,wFAAS,CAAC,eAAe,CACnB,iDAAiD,EACjD,kEAAW,CAAC,SAAS,CAAC,uDAAuD,CAAC,EAC9E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,aAAa,EAC5B,kEAAW,CAAC,SAAS,CACf,+DAA+D,CAAC,CAAC;SAC/E,CAAC;QACR,wFAAS,CAAC,eAAe,CACnB,iDAAiD,EACjD,kEAAW,CAAC,SAAS,CAAC,uDAAuD,CAAC,EAC9E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,aAAa,EAC5B,kEAAW,CAAC,SAAS,CACf,+DAA+D,CAAC,CAAC;SAC/E,CAAC;KACV,CAAC;IAEc,6BAAQ,GAAgB;QACrC,wFAAS,CAAC,eAAe,CACtB,qCAAqC,EACrC,kEAAW,CAAC,SAAS,CAAC,uDAAuD,CAAC,EAC9E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,SAAS,EACxB,kEAAW,CAAC,SAAS,CACf,+DAA+D,CAAC,CAAC;YAC7E,IAAI,+FAAgB,CAAC,UAAU,EACzB,kEAAW,CAAC,SAAS,CACf,gEAAgE,CAAC,CAAC;SAChF,CAAC;KACP,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACvF+D;AAWpE;;GAEG;AAEI,MAAM,wCAAwC;IAClD,YAAoB,oBAA8C;QAA9C,yBAAoB,GAApB,oBAAoB,CAA0B;QA0ClE;;WAEG;QACK,uBAAkB,GAAG,CAAC,IAAuB,EAC/C,qBAA2C,EAAyB,EAAE;YACzE,IAAI,CAAC,qBAAqB,EAAE;gBACzB,OAAO,EAAE,CAAC;aACZ;YACD,OAAO,qBAAqB,CAAC,GAAG,CAAC,kBAAkB,CAAC,EAAE;gBACnD,MAAM,UAAU,GAAgB,kBAAkB,CAAC,UAAU,CAAC;gBAC9D,IAAI,UAAU,GAAsB,IAAI,CAAC;gBACzC,QAAQ,IAAI,EAAE;oBACX,KAAK,iFAAiB,CAAC,SAAS;wBAC7B,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;wBACtE,MAAM;oBACT,KAAK,iFAAiB,CAAC,gBAAgB,CAAC;oBACxC,KAAK,iFAAiB,CAAC,SAAS;wBAC7B,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;wBACtE,MAAM;oBACT,KAAK,iFAAiB,CAAC,QAAQ,CAAC;oBAChC,KAAK,iFAAiB,CAAC,YAAY;wBAChC,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;wBACxE,MAAM;oBACT,KAAK,iFAAiB,CAAC,OAAO;wBAC3B,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,UAAU,CAAC;6BAC9D,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC;wBAC1E,MAAM;iBAEX;gBACD,MAAM,mBAAmB,GAAwB,IAAI,mBAAmB,CAClE,kBAAkB,CAAC,QAAQ,EAC3B,UAAU,CAAC,CAAC;gBAClB,OAAO,mBAAmB,CAAC;YAC9B,CAAC,CAAC,CAAC;QACN,CAAC,CAAC;QAEM,yBAAoB,GAAG,CAAC,UAAuB,EAAqB,EAAE;YAC3E,OAAO,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,eAAe,CAAC,SAAS,CAAC,aAAa,EAAE,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;QAC7G,CAAC,CAAC;QAEM,yBAAoB,GAAG,CAAC,UAAuB,EAAqB,EAAE;YAC3E,OAAO,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAC5B,IAAI,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC1F,CAAC,CAAC;QAEM,2BAAsB,GAAG,CAAC,UAAuB,EAAqB,EAAE;YAC7E,IAAI,QAAQ,GAAe,EAAE,CAAC;YAC9B,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;YACrF,OAAO,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClF,CAAC,CAAC;IA3FmE,CAAC;IAEhE,gBAAgB,CAAC,UAAyB,EAAE,IAAuB;;YACtE,QAAQ,IAAI,EAAE;gBACX,KAAK,iFAAiB,CAAC,gBAAgB,CAAC;gBACxC,KAAK,iFAAiB,CAAC,OAAO,CAAC;gBAC/B,KAAK,iFAAiB,CAAC,SAAS,CAAC;gBACjC,KAAK,iFAAiB,CAAC,YAAY,CAAC;gBACpC,KAAK,iFAAiB,CAAC,SAAS,CAAC;gBACjC,KAAK,iFAAiB,CAAC,QAAQ;oBAC5B,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,MAAM,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC5G,KAAK,iFAAiB,CAAC,IAAI;oBACxB,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,oBAAoB,CAAC,6BAA6B,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrG,KAAK,iFAAiB,CAAC,IAAI;oBACxB,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC3F,KAAK,iFAAiB,CAAC,IAAI;oBACxB,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC,oBAAoB,CAAC,0BAA0B,CAAC,UAAU,CAAC,CAAC,CAAC;aACvG;YACD,OAAO,IAAI,CAAC;QACf,CAAC;KAAA;IAEO,UAAU,CAAC,gBAAiC;QACjD,IAAI,CAAC,gBAAgB,EAAE;YACpB,OAAO,EAAE,CAAC;SACZ;QAED,OAAO,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,mBAAmB,CAAC,SAAS,CAAC,QAAQ,EAC1E,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CACrB,IAAI,eAAe,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IACjG,CAAC;IAEO,UAAU,CAAC,gBAAiC;QACjD,IAAI,CAAC,gBAAgB,EAAE;YACpB,OAAO,EAAE,CAAC;SACZ;QAED,OAAO,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,mBAAmB,CAAC,SAAS,CAAC,QAAQ,EAC1E,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CACrB,IAAI,eAAe,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ;YAClD,GAAG,GAAG,IAAI,CAAC,mBAAmB,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC;IAqDO,aAAa,CAAC,SAAqB;QACxC,IAAI,CAAC,SAAS,EAAE;YACb,OAAO,EAAE,CAAC;SACZ;QACD,OAAO,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,mBAAmB,CAAC,QAAQ,CAAC,IAAI,EAChE,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,GAAe,EAAE,SAAwB,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC;YACzG,qFAAqF;aACrF,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACtE,CAAC;CACH;AAEM,MAAM,eAAe;IACzB,YAAmB,IAAY,EAAS,IAAY;QAAjC,SAAI,GAAJ,IAAI,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAQ;IAAG,CAAC;CAC1D;AAEM,MAAM,mBAAmB;IAC7B,YAAmB,QAAgB,EAAS,UAA6B;QAAtD,aAAQ,GAAR,QAAQ,CAAQ;QAAS,eAAU,GAAV,UAAU,CAAmB;IAAG,CAAC;CAC/E;;;;;;;;;;;;;;ACjID;AAAA;AAAA;AAAA;AAAA,6EAA6E;AACrB;AACwC;AAGzF;UAAM,8BAA8B;;IACxB,oDAAqB,GAAgB;QAClD,gBAAgB;QAChB,wFAAS,CAAC,eAAe,CACnB,mDAAmD,EACnD,kEAAW,CAAC,SAAS,CAAC,yDAAyD,CAAC,EAChF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,UAAU,EACzB,kEAAW,CAAC,SAAS,CACf,kEAAkE,CAAC,CAAC;YAChF,IAAI,+FAAgB,CAAC,sBAAsB,EACrC,kEAAW,CAAC,SAAS,CACf,8EAA8E,CAAC,CAAC;YAC5F,IAAI,+FAAgB,CAAC,oBAAoB,EACnC,kEAAW,CAAC,SAAS,CACf,4EAA4E,CAAC,CAAC;YAC1F,IAAI,+FAAgB,CAAC,gBAAgB,EAC/B,kEAAW,CAAC,SAAS,CACf,wEAAwE,CAAC,CAAC;YACtF,IAAI,+FAAgB,CAAC,qBAAqB,EACpC,kEAAW,CAAC,SAAS,CACf,6EAA6E,CAAC,CAAC;YAC3F,IAAI,+FAAgB,CAAC,YAAY,EAC3B,kEAAW,CAAC,SAAS,CACf,oEAAoE,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,QAAQ,EACvB,kEAAW,CAAC,SAAS,CACf,gEAAgE,CAAC,CAAC;SAChF,CAAC;QACR,iBAAiB;QACjB,wFAAS,CAAC,eAAe,CACnB,oDAAoD,EACpD,kEAAW,CAAC,SAAS,CAAC,0DAA0D,CAAC,EACjF,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,sBAAsB,EACrC,kEAAW,CAAC,SAAS,CACf,8EAA8E,CAAC,CAAC;YAC5F,IAAI,+FAAgB,CAAC,oBAAoB,EACnC,kEAAW,CAAC,SAAS,CACf,4EAA4E,CAAC,CAAC;YAC1F,IAAI,+FAAgB,CAAC,oBAAoB,EACnC,kEAAW,CAAC,SAAS,CACf,4EAA4E,CAAC,CAAC;YAC1F,IAAI,+FAAgB,CAAC,mBAAmB,EAClC,kEAAW,CAAC,SAAS,CACf,2EAA2E,CAAC,CAAC;YACzF,IAAI,+FAAgB,CAAC,qBAAqB,EACpC,kEAAW,CAAC,SAAS,CACf,6EAA6E,CAAC,CAAC;YAC3F,IAAI,+FAAgB,CAAC,YAAY,EAC3B,kEAAW,CAAC,SAAS,CACf,oEAAoE,CAAC,CAAC;YAClF,IAAI,+FAAgB,CAAC,iBAAiB,EAChC,kEAAW,CAAC,SAAS,CACf,yEAAyE,CAAC,CAAC;YACvF,IAAI,+FAAgB,CAAC,iBAAiB,EAChC,kEAAW,CAAC,SAAS,CACf,yEAAyE,CAAC,CAAC;YACvF,IAAI,+FAAgB,CAAC,gBAAgB,EAC/B,kEAAW,CAAC,SAAS,CACf,wEAAwE,CAAC,CAAC;YACtF,IAAI,+FAAgB,CAAC,qBAAqB,EACpC,kEAAW,CAAC,SAAS,CACf,6EAA6E,CAAC,CAAC;SAC7F,CAAC;QACR,iBAAiB;QACjB,wFAAS,CAAC,eAAe,CACnB,iDAAiD,EACjD,kEAAW,CAAC,SAAS,CAAC,uDAAuD,CAAC,EAC9E,IAAI,EACJ;YACG,IAAI,+FAAgB,CAAC,kBAAkB,EACjC,kEAAW,CAAC,SAAS,CACf,0EAA0E,CAAC,CAAC;YACxF,IAAI,+FAAgB,CAAC,0BAA0B,EACzC,kEAAW,CAAC,SAAS,CACf,kFAAkF,CAAC,CAAC;YAChG,IAAI,+FAAgB,CAAC,uBAAuB,EACtC,kEAAW,CAAC,SAAS,CACf,+EAA+E,CAAC,CAAC;YAC7F,IAAI,+FAAgB,CAAC,qBAAqB,EACpC,kEAAW,CAAC,SAAS,CACf,6EAA6E,CAAC,CAAC;YAC3F,IAAI,+FAAgB,CAAC,qBAAqB,EACpC,kEAAW,CAAC,SAAS,CACf,6EAA6E,CAAC,CAAC;YAC3F,IAAI,+FAAgB,CAAC,yBAAyB,EACxC,kEAAW,CAAC,SAAS,CACf,iFAAiF,CAAC,CAAC;SACjG,CAAC;KACV,CAAC;;;;;;;;;;;;;;;;AC7FL;AAAA;AAAA;AAAA;AAAO,MAAM,cAAc;IACxB,YAAmB,IAAiB,EAAS,aAAgC;QAA1D,SAAI,GAAJ,IAAI,CAAa;QAAS,kBAAa,GAAb,aAAa,CAAmB;IAAG,CAAC;CACnF;AAEM,MAAM,iBAAiB;IAC3B,YAAmB,aAAgC,EAAS,gBAAgB,GAAW,IAAI;QAAxE,kBAAa,GAAb,aAAa,CAAmB;QAAS,qBAAgB,GAAhB,gBAAgB,CAAe;IAAG,CAAC;CACjG;AAED,IAAY,WAGX,iBAHD,WAAY,WAAW;IACpB,2DAAW;IACX,6EAAoB;WAFX,WAAW;CAGtB,KAHsB,CAGtB","file":"69-es2015.js","sourcesContent":["/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardDiskgroupData {\n   static readonly LSOM_DISK_GROUP_CHARTS: PerfGraph[] = [\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.iopsFrontend\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.iopsFrontend.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsFrontend.iopsRead.label\")),\n               new PerfGraphMetrics(\"iopsWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsFrontend.iopsWrite.label\")),\n               new PerfGraphMetrics(\"iopsRcRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsFrontend.iopsRcRead.label\")),\n               new PerfGraphMetrics(\"iopsWbWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsFrontend.iopsWbWrite.label\")),\n            ]),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.throughputFrontend\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.throughputFrontend.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"throughputRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.throughputFrontend.throughputRead.label\")),\n               new PerfGraphMetrics(\"throughputWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.throughputFrontend.throughputWrite.label\")),\n            ]),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.latencyFrontend\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.latencyFrontend.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyAvgRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latencyFrontend.latencyAvgRead.label\")),\n               new PerfGraphMetrics(\"latencyAvgWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latencyFrontend.latencyAvgWrite.label\")),\n               new PerfGraphMetrics(\"latencyRcRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latencyFrontend.latencyRcRead.label\")),\n               new PerfGraphMetrics(\"latencyWbWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latencyFrontend.latencyWbWrite.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper)),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.iopsOverhead\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.iopsOverhead.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsRcWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsOverhead.iopsRcWrite.label\")),\n               new PerfGraphMetrics(\"iopsWbRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsOverhead.iopsWbRead.label\")),\n            ]),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.latencyOverhead\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.latencyOverhead.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyRcWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latencyOverhead.latencyRcWrite.label\")),\n               new PerfGraphMetrics(\"latencyWbRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latencyOverhead.latencyWbRead.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper)),\n      // Disk Group Congestion\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.congestions\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.congestions.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"memCongestion\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.congestions.memCongestion.label\")),\n               new PerfGraphMetrics(\"slabCongestion\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.congestions.slabCongestion.label\")),\n               new PerfGraphMetrics(\"ssdCongestion\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.congestions.ssdCongestion.label\")),\n               new PerfGraphMetrics(\"iopsCongestion\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.congestions.iopsCongestion.label\")),\n               new PerfGraphMetrics(\"logCongestion\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.congestions.logCongestion.label\")),\n               new PerfGraphMetrics(\"compCongestion\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.congestions.compCongestion.label\")),\n            ]),\n      // Disk Group IOPS\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupIOPS\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupIOPS.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"iopsRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupIOPS.iopsRead.label\")),\n            new PerfGraphMetrics(\"iopsWrite\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupIOPS.iopsWrite.label\")),\n         ], null, false),\n      // Disk Group Throughput\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupThroughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupThroughput.label\"),\n         PerfChartUtil.RATE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"throughputRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupThroughput.throughputRead.label\")),\n            new PerfGraphMetrics(\"throughputWrite\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupThroughput.throughputWrite.label\")),\n         ], null, false),\n      // Disk Group Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupLatency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupLatency.label\"),\n         PerfChartUtil.TIME_MS_TYPE,\n         [\n            new PerfGraphMetrics(\"latencyAvgRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupLatency.latencyAvgRead.label\")),\n            new PerfGraphMetrics(\"latencyAvgWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.diskGroupLatency.latencyAvgWrite.label\")),\n         ],\n         PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper), false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.rcHitRate\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.rcHitRate.label\"),\n            PerfChartUtil.PERCENTAGE_TYPE,\n            [\n               new PerfGraphMetrics(\"rcHitRate\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.rcHitRate.rcHitRate.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.evictions\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.evictions.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"warEvictions\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.evictions.warEvictions.label\")),\n               new PerfGraphMetrics(\"quotaEvictions\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.evictions.quotaEvictions.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.wbFreePct\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.wbFreePct.label\"),\n            PerfChartUtil.PERCENTAGE_TYPE,\n            [\n               new PerfGraphMetrics(\"wbFreePct\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.wbFreePct.wbFreePct.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.capacity\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.capacity.label\"),\n            PerfChartUtil.SIZE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"capacity\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.capacity.capacity.label\")),\n               new PerfGraphMetrics(\"capacityUsed\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.capacity.capacityUsed.label\")),\n               new PerfGraphMetrics(\"capacityReserved\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.capacity.capacityReserved.label\")),\n               new PerfGraphMetrics(\"rcSize\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.capacity.rcSize.label\")),\n               new PerfGraphMetrics(\"wbSize\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.capacity.wbSize.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.destage\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.destage.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"ssdBytesDrained\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.destage.ssdBytesDrained.label\")),\n               new PerfGraphMetrics(\"zeroBytesDrained\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.destage.zeroBytesDrained.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.oio\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.oio.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"oioWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.oio.oioWrite.label\")),\n               new PerfGraphMetrics(\"oioRecWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.oio.oioRecWrite.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.oioSize\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.oioSize.label\"),\n            PerfChartUtil.SIZE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"oioWriteSize\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.oioSize.oioWriteSize.label\")),\n               new PerfGraphMetrics(\"oioRecWriteSize\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.oioSize.oioRecWriteSize.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.schedulerIOPct\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.schedulerIOPct.label\"),\n            PerfChartUtil.PERCENTAGE_TYPE,\n            [\n               new PerfGraphMetrics(\"iopsDelayPctSched\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerIOPct.iopsDelayPctSched.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.schedulerLatency\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.schedulerLatency.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyDelaySched\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerLatency.latencyDelaySched.label\")),\n               new PerfGraphMetrics(\"latencySchedQueueNS\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerLatency.latencySchedQueueNS.label\")),\n               new PerfGraphMetrics(\"latencySchedQueueRec\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerLatency.latencySchedQueueRec.label\")),\n               new PerfGraphMetrics(\"latencySchedQueueVM\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerLatency.latencySchedQueueVM.label\")),\n               new PerfGraphMetrics(\"latencySchedQueueMeta\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerLatency.latencySchedQueueMeta.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper), false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.schedulerIOPS\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.schedulerIOPS.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsSched\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerIOPS.iopsSched.label\")),\n               new PerfGraphMetrics(\"iopsSchedQueueNS\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerIOPS.iopsSchedQueueNS.label\")),\n               new PerfGraphMetrics(\"iopsSchedQueueRec\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerIOPS.iopsSchedQueueRec.label\")),\n               new PerfGraphMetrics(\"iopsSchedQueueVM\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerIOPS.iopsSchedQueueVM.label\")),\n               new PerfGraphMetrics(\"iopsSchedQueueMeta\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerIOPS.iopsSchedQueueMeta.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.schedulerTput\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.schedulerTput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"throughputSched\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerTput.throughputSched.label\")),\n               new PerfGraphMetrics(\"throughputSchedQueueNS\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerTput.throughputSchedQueueNS.label\")),\n               new PerfGraphMetrics(\"throughputSchedQueueRec\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerTput.throughputSchedQueueRec.label\")),\n               new PerfGraphMetrics(\"throughputSchedQueueVM\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerTput.throughputSchedQueueVM.label\")),\n               new PerfGraphMetrics(\"throughputSchedQueueMeta\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.schedulerTput.throughputSchedQueueMeta.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.iopsResync\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.iopsResync.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsResyncReadPolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsResync.iopsResyncReadPolicy.label\")),\n               new PerfGraphMetrics(\"iopsResyncReadDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsResync.iopsResyncReadDecom.label\")),\n               new PerfGraphMetrics(\"iopsResyncReadRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsResync.iopsResyncReadRebalance.label\")),\n               new PerfGraphMetrics(\"iopsResyncReadFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsResync.iopsResyncReadFixComp.label\")),\n               new PerfGraphMetrics(\"iopsResyncWritePolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsResync.iopsResyncWritePolicy.label\")),\n               new PerfGraphMetrics(\"iopsResyncWriteDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsResync.iopsResyncWriteDecom.label\")),\n               new PerfGraphMetrics(\"iopsResyncWriteRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsResync.iopsResyncWriteRebalance.label\")),\n               new PerfGraphMetrics(\"iopsResyncWriteFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.iopsResync.iopsResyncWriteFixComp.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.tputResync\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.tputResync.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"tputResyncReadPolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.tputResync.tputResyncReadPolicy.label\")),\n               new PerfGraphMetrics(\"tputResyncReadDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.tputResync.tputResyncReadDecom.label\")),\n               new PerfGraphMetrics(\"tputResyncReadRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.tputResync.tputResyncReadRebalance.label\")),\n               new PerfGraphMetrics(\"tputResyncReadFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.tputResync.tputResyncReadFixComp.label\")),\n               new PerfGraphMetrics(\"tputResyncWritePolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.tputResync.tputResyncWritePolicy.label\")),\n               new PerfGraphMetrics(\"tputResyncWriteDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.tputResync.tputResyncWriteDecom.label\")),\n               new PerfGraphMetrics(\"tputResyncWriteRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.tputResync.tputResyncWriteRebalance.label\")),\n               new PerfGraphMetrics(\"tputResyncWriteFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.tputResync.tputResyncWriteFixComp.label\")),\n            ], null, false),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.disk-group.latResync\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.diskgroup.latResync.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latResyncReadPolicy\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.diskgroup.latResync.latResyncReadPolicy.label\")),\n               new PerfGraphMetrics(\"latResyncReadDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latResync.latResyncReadDecom.label\")),\n               new PerfGraphMetrics(\"latResyncReadRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latResync.latResyncReadRebalance.label\")),\n               new PerfGraphMetrics(\"latResyncReadFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latResync.latResyncReadFixComp.label\")),\n               new PerfGraphMetrics(\"latResyncWritePolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latResync.latResyncWritePolicy.label\")),\n               new PerfGraphMetrics(\"latResyncWriteDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latResync.latResyncWriteDecom.label\")),\n               new PerfGraphMetrics(\"latResyncWriteRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latResync.latResyncWriteRebalance.label\")),\n               new PerfGraphMetrics(\"latResyncWriteFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.diskgroup.latResync.latResyncWriteFixComp.label\")),\n            ], null, false),\n      // Space Efficiency Throughput\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyThroughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyThroughput.label\"),\n         PerfChartUtil.RATE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"dedupedBytes\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyThroughput.dedupedBytes.label\")),\n            new PerfGraphMetrics(\"hashedBytes\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyThroughput.hashedBytes.label\")),\n         ], null, false),\n      // Space Efficiency Run Time\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyRunTime\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyRunTime.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"txnBuildTime\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyRunTime.txnBuildTime.label\")),\n            new PerfGraphMetrics(\"txnWriteTime\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyRunTime.txnWriteTime.label\")),\n            new PerfGraphMetrics(\"txnReplayTime\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyRunTime.txnReplayTime.label\")),\n            new PerfGraphMetrics(\"hashCalcTime\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyRunTime.hashCalcTime.label\")),\n            new PerfGraphMetrics(\"compressionTime\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyRunTime.compressionTime.label\")),\n            new PerfGraphMetrics(\"dataWriteTime\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyRunTime.dataWriteTime.label\")),\n         ], null, false),\n      // Space Efficiency Metadata IO\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyMetadataIO\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyMetadataIO.label\"),\n         PerfChartUtil.SIZE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"numHashmapRd\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyMetadataIO.numHashmapRd.label\")),\n            new PerfGraphMetrics(\"numHashmapWrt\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyMetadataIO.numHashmapWrt.label\")),\n            new PerfGraphMetrics(\"numBitmapRd\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyMetadataIO.numBitmapRd.label\")),\n            new PerfGraphMetrics(\"numBitmapWrt\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyMetadataIO.numBitmapWrt.label\")),\n            new PerfGraphMetrics(\"numXMapRd\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyMetadataIO.numXMapRd.label\")),\n            new PerfGraphMetrics(\"numXMapWrt\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyMetadataIO.numXMapWrt.label\")),\n         ], null, false),\n      // Space Efficiency Percentages\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyPct\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyPct.label\"),\n         PerfChartUtil.PERCENTAGE_TYPE,\n         [\n            new PerfGraphMetrics(\"dedupPct\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyPct.dedupPct.label\")),\n            new PerfGraphMetrics(\"compressPct\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyPct.compressPct.label\")),\n            new PerfGraphMetrics(\"dedupHmapHitRt\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyPct.dedupHmapHitRt.label\")),\n            new PerfGraphMetrics(\"dedupXmapHitRt\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyPct.dedupXmapHitRt.label\")),\n         ], null, false),\n      // Space Efficiency Capacity\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyCap\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyCap.label\"),\n         PerfChartUtil.SIZE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"ddpTotalCap\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyCap.ddpTotalCap.label\")),\n            new PerfGraphMetrics(\"ddpFreeCap\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.spaceEfficiencyCap.ddpFreeCap.label\")),\n         ], null, false),\n   ];\n}\n","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewChild} from \"@angular/core\";\nimport {ChartZoomOption} from \"@component/chart/performance/chart-zoom-option\";\nimport {GraphMetric} from \"@component/chart/performance/graph-metrics.data\";\nimport {PerfGraph, PerfGraphMetrics} from \"@component/chart/performance/perf-graph\";\nimport {RangePickerState} from \"@component/datetime-picker/time-range-picker/range-picker-state\";\nimport {VsanTimeRangePickerComponent} from \"@component/datetime-picker/time-range-picker/time-range-picker.component\";\nimport {UnavailableViewSpec} from \"@component/unavailable-view/unavailable-view-spec\";\nimport {EntityRefType} from \"@generated/entity-ref-type\";\nimport {PerfEntityStateData} from \"@generated/perf-entity-state-data\";\nimport {PerfGraphMetricsData} from \"@generated/perf-graph-metrics-data\";\nimport {PerfQueryErrors} from \"@generated/perf-query-errors\";\nimport {PerfQuerySpec} from \"@generated/perf-query-spec\";\nimport {PerfTimeRangeData} from \"@generated/perf-time-range-data\";\nimport {ServerObjectInfo} from \"@generated/server-object-info\";\nimport {VsanPerfPropertyProvider} from \"@generated/vsan-perf-property-provider\";\nimport {FullTimeRangeSelectionData} from \"@model/full-time-range-selection.data\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {PerformancePersistenceService} from \"@service/performance-persistence.service\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {Logger} from \"@util/logger\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {PerfSelectionData} from \"../model/navigation/support-nav.data\";\nimport {PerfDashboardView} from \"../model/perf-dashboard-view.data\";\nimport {VsanPerfDashboardCategory, VsanPerfDashboardView} from \"../model/perf-dashboard.data\";\n\n@Component({\n   selector: \"vsan-advanced-perf-dashboard\",\n   templateUrl: \"advanced-perf-dashboard.html\",\n   styleUrls: [\"./advanced-perf-dashboard.scss\"],\n})\nexport class AdvancedPerfDashboard implements OnInit, AfterViewInit {\n   static readonly ENTITY_REFID_SUBKEY_SEPERATOR: string = \"|\";\n\n   allowReloadWhenError: boolean = true;\n\n   /**\n    * Lists out all the dashboard links that should be out of the dropdown list\n    * The link label should {category_label} | {dashboard_label}\n    */\n   outlineDashboardLinks: VsanPerfDashboardView[] = VsanPerfDashboardCategory.PIVOTAL_DASHBOARDS;\n\n   /**\n    * Gets the categoried dashboard links which are displayed in the dropdown list\n    * If any category has only one child item left,\n    * then the child item replaces the category to avoid the secondary dropdown menu\n    */\n   dropdownDashboardCategories: VsanPerfDashboardCategory[] = VsanPerfDashboardCategory.CATEGORIED_DASHBOARDS;\n\n   currentDashboardView: VsanPerfDashboardView;\n   currentDashboardLabel: string;\n\n   zoomOption: ChartZoomOption;\n   isZoomed: boolean = false;\n\n   @Input()\n   managedObjectExInfo: ServerObjectInfo[];\n\n   @Input()\n   private verboseModeEnabled: boolean;\n\n   @Input()\n   private preselectData: PerfSelectionData;\n\n   @Input()\n   isVsanMaxEnabled: boolean;\n\n   @Output()\n   onRefresh: EventEmitter<void> = new EventEmitter<void>();\n\n   perfEntitiesStateData: PerfEntityStateData[];\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   @ErrorMessage()\n   errorMessage: string = null;\n\n   /**\n    * The entity data user selected to view the detailed charts\n    */\n   currentPerfEntityStateData: PerfEntityStateData = null;\n\n   selectedPerfEntityName: string;\n\n   selectedPerfEntityIcon: string;\n\n   /**\n    * This could be null if the charts are from host directly.\n    * It is only set when user is checking the charts of a sub entity of a host\n    */\n   selectedPerfEntityParentHost: string;\n\n   preselectSubEntityName: string;\n\n   clusterRef: ManagedObject = ManagedObject.contextObject;\n\n   /**\n    * This cache is for each entity, with it browser side doesn't need to calculate the graphMetric frequently\n    */\n   private entityGraphsDataMap: Map<string, GraphMetric[]> = new Map();\n\n   /**\n    * This cache is for each dashboard.\n    * We cache the data so we don't have to send duplicated requests when user navigates between dashboards\n    */\n   private entitiesStateDataMap: Map<PerfDashboardView, PerfEntityStateData[]> = new Map();\n\n   get displayedGraphs(): PerfGraph[] {\n      const cacheKey: string = this.getDisplayedGraphCacheKey();\n      if (!this.graphMap[cacheKey]) {\n         this.graphMap[cacheKey] = this.pivotalOnly ?\n               this.currentDashboardView.children.filter(graph => graph.isPivotalGraph) :\n               this.currentDashboardView.children;\n      }\n      return this.graphMap[cacheKey];\n   }\n\n   set displayedGraphs(graphs: PerfGraph[]) {\n      const cacheKey: string = this.getDisplayedGraphCacheKey();\n      this.graphMap[cacheKey] = graphs;\n   }\n\n   private graphMap: Map<PerfDashboardView, PerfGraph[]> = new Map<PerfDashboardView, PerfGraph[]>();\n\n   currentTimeRange: PerfTimeRangeData;\n\n   constructor(private perfDataProvider: VsanPerfPropertyProvider,\n         private perfPersistenceService: PerformancePersistenceService) {\n   }\n\n   @ViewChild(VsanTimeRangePickerComponent)\n   timeRangePickerComponent: VsanTimeRangePickerComponent;\n\n   ngOnInit(): void {\n      this.outlineDashboardLinks = this.isVsanMaxEnabled\n            ? VsanPerfDashboardCategory.getVsanMaxDashboardViews(VsanPerfDashboardCategory.PIVOTAL_DASHBOARDS)\n            : VsanPerfDashboardCategory.PIVOTAL_DASHBOARDS;\n      this.dropdownDashboardCategories = this.isVsanMaxEnabled\n            ? VsanPerfDashboardCategory.getVsanMaxDashboardCategories(VsanPerfDashboardCategory.CATEGORIED_DASHBOARDS)\n            : VsanPerfDashboardCategory.CATEGORIED_DASHBOARDS;\n\n      this.preselectSubEntityName = this.preselectData?.objectIdentifier;\n      const selectedView: PerfDashboardView = this.preselectData\n            ? this.preselectData.dashboardView\n            : PerfDashboardView.DOMCLIENT;\n      this.currentDashboardView = this.getDashboardView(selectedView);\n      this.currentDashboardLabel = this.currentDashboardView.label;\n   }\n\n   ngAfterViewInit(): void {\n      this.initializePersistedSelections();\n      this.queryDashboardData(this.currentDashboardView.view, this.currentTimeRange);\n   }\n\n   private getDashboardView(view: PerfDashboardView): VsanPerfDashboardView {\n      const mainDashboardView: VsanPerfDashboardView =\n            this.outlineDashboardLinks.find(dashboard => dashboard.view === view);\n\n      return mainDashboardView\n            ? mainDashboardView\n            : this.getCategoryDashboardView(view);\n   }\n\n   private getCategoryDashboardView(view: PerfDashboardView): VsanPerfDashboardView {\n      const matchingDashboardViewPredicate: (dashboard: VsanPerfDashboardView) => boolean =\n            dashboard => dashboard.view === view;\n      return this.dropdownDashboardCategories\n            .find(category => category.children.some(matchingDashboardViewPredicate))\n            .children.find(matchingDashboardViewPredicate);\n   }\n\n   private initializePersistedSelections(): void {\n      // Try to get persisted selection.\n      const persistedSelection: FullTimeRangeSelectionData =\n            this.perfPersistenceService.getPersistedSelection();\n      /*\n       * If there is persisted time range selection, then wait for time-range-picker component\n       * initialization and pass the cached range into it.\n      * */\n      if (persistedSelection != null) {\n         const timeRange: PerfTimeRangeData = persistedSelection.timeRange;\n         const state: RangePickerState = persistedSelection.state;\n\n         if (this.timeRangePickerComponent.currentTimeRange.from !== timeRange.from ||\n               this.timeRangePickerComponent.currentTimeRange.to !== timeRange.to) {\n            this.timeRangePickerComponent.setTimerange(timeRange, state);\n            this.currentTimeRange = timeRange;\n         }\n      }\n   }\n\n   private get isPersistedSelectionInitialized(): boolean {\n      const persistedSelection: FullTimeRangeSelectionData = this.perfPersistenceService.getPersistedSelection();\n\n      // If there is no persisted selection. it's replaced by view's default one\n      if (persistedSelection == null) {\n         return true;\n      }\n\n      return this.currentTimeRange === persistedSelection.timeRange;\n   }\n\n   private getDisplayedGraphCacheKey = (): string => {\n      return this.currentDashboardView.view + (this.pivotalOnly ? \"_pivotal\" : \"_all\");\n   };\n\n   getDashboardGraphs = (dashboardView: VsanPerfDashboardView): PerfGraph[] => {\n      if (!dashboardView.children) {\n         return [];\n      }\n      /**\n       * when no entity is selected, we list the privotal graphs only;\n       * if user is viewing all the graphs of an entity, we should list all the graphs\n       */\n      return this.pivotalOnly ? dashboardView.children.filter(graph => graph.isPivotalGraph) : dashboardView.children;\n   };\n\n   selectDashboard = (dashboardView: VsanPerfDashboardView, itemLabel: string) => {\n      if (this.currentDashboardView && this.currentDashboardView.view === dashboardView.view) {\n         return;\n      }\n\n      this.currentPerfEntityStateData = null;\n      this.currentDashboardView = dashboardView;\n      this.currentDashboardLabel = itemLabel;\n\n      this.queryDashboardData(dashboardView.view, this.currentTimeRange);\n   };\n\n   /**\n    * For domclient and domcompmgr we need to cover both cluster and hosts level,\n    * because cluster and hosts are different entity id, so we need an array type\n    */\n   private getSelectedPerfEntityTypes = (selectedDashboard: PerfDashboardView): string[] => {\n      switch (selectedDashboard) {\n         case PerfDashboardView.DOMCLIENT:\n            return [EntityRefType.CLUSTER_DOMCLIENT(), EntityRefType.HOST_DOMCLIENT()];\n         case PerfDashboardView.DOMOWNER:\n            return [EntityRefType.HOST_DOMOWNER()];\n         case PerfDashboardView.DOMCOMPMGR:\n            return [EntityRefType.CLUSTER_DOMCOMPMGR(), EntityRefType.HOST_DOMCOMPMGR()];\n         case PerfDashboardView.TCPIP: // This entry shares the same entity type with vnic\n         case PerfDashboardView.VNIC:\n            return [EntityRefType.VSAN_VNIC_NET()];\n         case PerfDashboardView.CACHEDISK:\n            return [EntityRefType.CACHE_DISK()];\n         case PerfDashboardView.CAPACITYDISK:\n            return [EntityRefType.CAPACITY_DISK()];\n         case PerfDashboardView.DISKGROUP:\n            return [EntityRefType.DISK_GROUP()];\n         case PerfDashboardView.SPARSEHOST:\n            return [EntityRefType.HOST_VSANSPARSE()];\n         case PerfDashboardView.DDHDISK:\n            return [EntityRefType.DDH_DISK_STATS()];\n         case PerfDashboardView.PNIC:\n            return [EntityRefType.VSAN_PNIC_NET()];\n         case PerfDashboardView.HOSTNETWORK:\n            return [EntityRefType.VSAN_HOST_NET()];\n         case PerfDashboardView.CLOMHOST:\n            return [EntityRefType.CLOM_HOST_STATS()];\n         case PerfDashboardView.CLOMDISK:\n            return [EntityRefType.CLOM_DISK_STATS()];\n         case PerfDashboardView.CMMDS:\n            return [EntityRefType.CMMDS()];\n         case PerfDashboardView.NET:\n            return [EntityRefType.CMMDS_NET()];\n         case PerfDashboardView.WORKLOAD:\n            return [EntityRefType.CMMDS_WORKLOADSTATS()];\n         case PerfDashboardView.HOSTMEMORY:\n            return [EntityRefType.HOST_MEMORY_SLAB(), EntityRefType.HOST_MEMORY_HEAP()];\n         case PerfDashboardView.SYSMEMORY:\n            return [EntityRefType.SYSTEM_MEM()];\n         case PerfDashboardView.VSANDISTRIBUTION:\n            return [EntityRefType.VSAN_DISTRIBUTION()];\n         case PerfDashboardView.DOMCOMPSCHEDULER:\n            return [EntityRefType.DISK_GROUP()];\n         case PerfDashboardView.DOMWORLDCPU:\n            return [EntityRefType.DOM_WORLD_CPU()];\n         case PerfDashboardView.HOSTCPU:\n            return [EntityRefType.HOST_CPU()];\n         case PerfDashboardView.VSANCPU:\n            return [EntityRefType.VSAN_CPU()];\n         case PerfDashboardView.LSOMWORLDCPU:\n            return [EntityRefType.LSOM_WORLD_CPU()];\n         case PerfDashboardView.CLUSTERRESYNC:\n            return [EntityRefType.CLUSTER_RESYNC()];\n         case PerfDashboardView.VSANMEMORY:\n            return [EntityRefType.VSAN_MEMORY()];\n         default:\n            throw new Error(\"Unsupported dashboard view\");\n      }\n   };\n\n   private createQuerySpecs = (entityTypes: string[], timeRange: PerfTimeRangeData): PerfQuerySpec[] => {\n      return entityTypes.map(entityType => PerfQuerySpec.Factory.create(\n            entityType,\n            \"*\", // wild card query, * to match all the entityIds\n            null, /* group:string, not used*/\n            timeRange.from,\n            timeRange.to,\n            null, /* interval:number , not used*/\n            null /* labels:string[], not used*/));\n   };\n\n   @Loader({srMessage: \"vsan.perf.advanced.dashboards.dropdown.label\", srMessageType: SrMessageType.DATA})\n   private async queryDashboardData(selectedDashboard: PerfDashboardView, timeRange: PerfTimeRangeData): Promise<void> {\n      if (!timeRange) {\n         return;\n      }\n      this.perfEntitiesStateData = this.entitiesStateDataMap[selectedDashboard];\n      if (this.perfEntitiesStateData) {\n         return;\n      }\n\n      const entityTypes: string[] = this.getSelectedPerfEntityTypes(selectedDashboard);\n      const querySpecs: PerfQuerySpec[] = this.createQuerySpecs(entityTypes, timeRange);\n\n      const results: PerfEntityStateData[] =\n            await this.perfDataProvider.getEntityPerfStateForWildcards(this.clusterRef, querySpecs);\n      if (this.isNestedDashboard(this.currentDashboardView.view)) {\n         this.perfEntitiesStateData = results;\n      } else {\n         this.perfEntitiesStateData = this.aggregateEntitiesGraphData(results);\n      }\n      this.entitiesStateDataMap[selectedDashboard] = this.perfEntitiesStateData;\n   }\n\n   private aggregateEntitiesGraphData = (perfEntitiesStateData: PerfEntityStateData[]): PerfEntityStateData[] => {\n      return this.managedObjectExInfo\n            .map(serverObj => {\n               const entityStateData: PerfEntityStateData = PerfEntityStateData.Factory.create([], [], null, \"\");\n               perfEntitiesStateData.filter(entityData => entityData.entityRefId.indexOf(serverObj.vsanUuid) !== -1)\n                     .forEach(entityData => {\n                        entityStateData.entityRefId =\n                              entityData.entityRefId.split(AdvancedPerfDashboard.ENTITY_REFID_SUBKEY_SEPERATOR)[0];\n                        entityStateData.timeStamps = entityData.timeStamps;\n                        entityStateData.metricsSeries.push(...entityData.metricsSeries.map(series => {\n                           return PerfGraphMetricsData.Factory.create(series.values,\n                                 series.threshold,\n                                 series.key,\n                                 entityData.entityRefId.split(AdvancedPerfDashboard.ENTITY_REFID_SUBKEY_SEPERATOR)[1]);\n                        }));\n                     });\n               return entityStateData;\n            });\n   };\n\n   getGraphsByEntityData = (perfData: PerfEntityStateData): GraphMetric[] => {\n      const cacheKey: string = this.getGraphDataCacheKey(perfData.entityRefId);\n\n      if (!this.entityGraphsDataMap[cacheKey]) {\n         const graphs: PerfGraph[] = this.displayedGraphs;\n         const seriesKeys: string[] = perfData.metricsSeries.map(series => series.key);\n         const noDataSeries: PerfGraphMetrics[] = [];\n\n         // We should do this for host level data only, otherwise these graphs are displayed at cluster level\n         const clusterObj: ServerObjectInfo = this.managedObjectExInfo.find(serverObj => serverObj.isCluster);\n         if (!clusterObj || cacheKey.indexOf(clusterObj.vsanUuid) === -1) {\n            // Find the graph metric keys which don't have values in perfData\n            graphs.forEach(graph => {\n               noDataSeries.push(...graph.metrics.map(metric => {\n                  if (seriesKeys.indexOf(metric.key) === -1) {\n                     return metric;\n                  }\n               }).filter(key => key));\n            });\n\n            // Fill these metric series values with null otherwise these graph won't be displayed\n            noDataSeries.forEach(metric => {\n               let aggregated: number[];\n               if (metric.aggregatedBy && metric.aggregatedBy.length > 0) {\n                  // calculate aggregated value when metric is should be aggregated from other metrics\n                  perfData.metricsSeries.forEach(series => {\n                     if (metric.aggregatedBy.indexOf(series.key) !== -1) {\n                        if (!aggregated) {\n                           aggregated = series.values.slice();\n                        } else {\n                           series.values.forEach((val, index) => {\n                              // if both val are null, the aggregated result remains unchanged.\n                              // otherwise sum them as the new value\n                              if (aggregated[index] !== null || val !== null) {\n                                 aggregated[index] = (aggregated[index] || 0) + (val || 0);\n                              }\n                           });\n                        }\n                     }\n                  });\n               } else {\n                  aggregated = perfData.timeStamps.map(() => null);\n               }\n               perfData.metricsSeries.push(PerfGraphMetricsData.Factory.create(\n                     aggregated,\n                     null,\n                     metric.key,\n                     null,\n               ));\n            });\n         }\n         const graphsData: GraphMetric[] =\n               [new GraphMetric(perfData, graphs, GraphMetric.ENTITY_REF_ID_TOKEN_SEPARATOR + perfData.entityRefId)];\n         this.entityGraphsDataMap[cacheKey] = graphsData;\n         return graphsData;\n      }\n      return this.entityGraphsDataMap[cacheKey];\n   };\n\n   get noDataView(): UnavailableViewSpec {\n      if (!this.currentDashboardView) {\n         return null;\n      }\n      if (!this.hasGraphMetricsData) {\n         const isRecentTimeRange: boolean = VsanDateTimeUtils.isRecentTimeRange(this.currentTimeRange);\n         if (this.currentDashboardView.view === PerfDashboardView.CMMDS && !this.verboseModeEnabled) {\n            return isRecentTimeRange ? UnavailableViewSpec.PERF_FOR_SUPPORT_VIEW_CMMDS_NO_DATA :\n                  UnavailableViewSpec.PERF_FOR_SUPPORT_VIEW_CMMDS_NO_DATA_FOR_SELECTED_PERIOD;\n         }\n         return isRecentTimeRange ? UnavailableViewSpec.PERF_VIEW_NO_DATA :\n               UnavailableViewSpec.PERF_VIEW_NO_DATA_FOR_SELECTED_PERIOD;\n      }\n      return null;\n   }\n\n   /**\n    * Use this method to check if there is no metrics at all\n    */\n   get hasGraphMetricsData(): boolean {\n      return this.perfEntitiesStateData &&\n            this.perfEntitiesStateData.some(entityData => entityData.timeStamps.length > 0);\n   }\n\n   private getGraphDataCacheKey = (vsanUuid: string): string => {\n      return this.currentDashboardView.view + vsanUuid + (this.pivotalOnly ? \"_pivotal\" : \"_all\");\n   };\n\n   private get pivotalOnly(): boolean {\n      return this.currentPerfEntityStateData === null;\n   }\n\n   getPerfStateData = (serverObjectInfo: ServerObjectInfo): PerfEntityStateData => {\n      return this.perfEntitiesStateData\n            .find(entityData => entityData.entityRefId.indexOf(serverObjectInfo.vsanUuid) !== -1);\n   };\n\n   private getEntityDataRelatedServerObjectInfo = (perfData: PerfEntityStateData): ServerObjectInfo => {\n      return this.managedObjectExInfo\n            .find(mangedObjectInfo => perfData.entityRefId.indexOf(mangedObjectInfo.vsanUuid) !== -1);\n   };\n\n   @ErrorHandler()\n   private handleError(err: Error): void {\n      Logger.error(err);\n      this.perfEntitiesStateData = [];\n      if (err.message === PerfQueryErrors.INVALID_ENTITY_REF_ID_KEY()) {\n         this.allowReloadWhenError = false;\n         this.errorMessage = VsanUiUtils.getString(\"vsan.perf.service.chart.unsupportedEntityType.error\");\n      } else {\n         this.allowReloadWhenError = true;\n         this.errorMessage = VsanUiUtils.getString(\"vsan.perf.service.chart.common.error\");\n      }\n   }\n\n   /**\n    * Accepts the chart zoom options when user selects a range on the chart\n    */\n   onChartZoomIn = (opt: ChartZoomOption) => {\n      this.isZoomed = !opt.isZoomOut;\n      this.zoomOption = opt;\n   };\n\n   /**\n    * Reset the chart zoom level to default\n    */\n   onZoomOut = () => {\n      this.isZoomed = false;\n      const zoomOut: ChartZoomOption = new ChartZoomOption();\n      zoomOut.isZoomOut = true;\n      this.zoomOption = zoomOut;\n   };\n\n   showAllCharts = (serverObjectInfo: ServerObjectInfo) => {\n      const perfData: PerfEntityStateData = this.getPerfStateData(serverObjectInfo);\n      this.currentPerfEntityStateData = perfData;\n      this.resetSelectedEntityCache(perfData);\n      this.selectedPerfEntityName = serverObjectInfo.name;\n      this.selectedPerfEntityIcon = serverObjectInfo.icon;\n      this.selectedPerfEntityParentHost = null;\n      this.isZoomed = false;\n   };\n\n   showLessCharts = () => {\n      this.currentPerfEntityStateData = null;\n      this.selectedPerfEntityName = null;\n      this.selectedPerfEntityIcon = null;\n      this.selectedPerfEntityParentHost = null;\n   };\n\n   private resetSelectedEntityCache = (perfData: PerfEntityStateData) => {\n      // reset the cached graph config before redrawing the graphs\n      const cacheKey: string = this.getGraphDataCacheKey(this.getEntityDataRelatedServerObjectInfo(perfData).vsanUuid);\n      this.entityGraphsDataMap[cacheKey] = null;\n   };\n\n   isGraphDisplayed = (graphId: string): boolean => {\n      return this.displayedGraphs.some(graph => graph.id === graphId);\n   };\n\n   toggleGraphDisplay = (graph: PerfGraph) => {\n      if (this.isGraphDisplayed(graph.id)) {\n         // remove this chart from the displayed graphs list\n         this.displayedGraphs = this.displayedGraphs.filter(displayedGraph => graph.id !== displayedGraph.id);\n      } else {\n         // add the chart into the displayed graphs list\n         this.displayedGraphs = this.getDashboardGraphs(this.currentDashboardView)\n               .filter(displayedGraph => this.isGraphDisplayed(displayedGraph.id) || graph.id === displayedGraph.id);\n      }\n\n      // reset the graph data cache\n      this.entityGraphsDataMap = new Map();\n   };\n\n   onTimeRangeChange = (timeRange: PerfTimeRangeData, isOnInit: boolean) => {\n      // View might not be ready yet.\n      if (!this.currentDashboardView || (isOnInit && !this.isPersistedSelectionInitialized)) {\n         return;\n      }\n\n      // clear the cached data so the charts can be refreshed\n      this.entityGraphsDataMap = new Map();\n      this.perfEntitiesStateData = null;\n      this.entitiesStateDataMap[this.currentDashboardView.view] = null;\n      this.currentTimeRange = timeRange;\n      this.queryDashboardData(this.currentDashboardView.view, timeRange);\n\n      if (!isOnInit) {\n         this.perfPersistenceService.saveSelection(timeRange, this.timeRangePickerComponent.currentPickerState);\n      }\n   };\n\n   isNestedDashboard = (selectedDashboard: PerfDashboardView): boolean => {\n      return VsanPerfDashboardCategory.NESTED_DASHBOARDS.indexOf(selectedDashboard) !== -1;\n   };\n\n   onSubEntitySelected = (data: SubEntityInfo) => {\n      this.selectedPerfEntityIcon = data.entityIcon;\n      this.selectedPerfEntityName = data.entityName;\n      this.currentPerfEntityStateData = data.perfData;\n      this.selectedPerfEntityParentHost = data.parentHost;\n   };\n\n   get graphsForClusterAndHosts(): PerfGraph[] {\n      const clusterObj: ServerObjectInfo = this.managedObjectExInfo.find(serverObj => serverObj.isCluster);\n      if (!clusterObj) {\n         return [];\n      }\n      const clusterStateData: PerfEntityStateData = this.getPerfStateData(clusterObj);\n      if (!clusterStateData) {\n         return [];\n      }\n      const graphMetrics: GraphMetric = new GraphMetric(\n            clusterStateData,\n            this.getDashboardGraphs(this.currentDashboardView),\n            GraphMetric.ENTITY_REF_ID_TOKEN_SEPARATOR + clusterStateData.entityRefId);\n      return graphMetrics.graphs;\n   }\n\n   get graphsForHostsOnly(): PerfGraph[] {\n      const clusterGraphs: PerfGraph[] = this.graphsForClusterAndHosts;\n      return this.getDashboardGraphs(this.currentDashboardView)\n            .filter(graph => !clusterGraphs.find(clusterGraph => clusterGraph.id === graph.id));\n   }\n\n   get graphsForSelectedEntity(): PerfGraph[] {\n      const serverObj: ServerObjectInfo = this.managedObjectExInfo\n            .find(obj => this.currentPerfEntityStateData.entityRefId.indexOf(obj.vsanUuid) > -1);\n      const isClusterSelected: boolean = serverObj && serverObj.isCluster;\n      if (isClusterSelected) {\n         return this.graphsForClusterAndHosts;\n      }\n      return this.getDashboardGraphs(this.currentDashboardView);\n   }\n}\n\nexport class SubEntityInfo {\n   constructor(public parentHost: string,\n         public entityIcon: string,\n         public entityName: string,\n         public perfData: PerfEntityStateData) {\n   }\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardPnicData {\n   static readonly PNIC_CHARTS: PerfGraph[] = [\n      // Packets/sec chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.pnic.packets\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.packets.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"rxPackets\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.network.vnic.packets.rxPackets.label\")),\n               new PerfGraphMetrics(\"txPackets\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.network.vnic.packets.txPackets.label\")),\n            ]),\n      // Throughput chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.pnic.throughput\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.throughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"rxThroughput\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.throughput.rxThroughput.label\")),\n               new PerfGraphMetrics(\"txThroughput\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.throughput.txThroughput.label\")),\n            ]),\n      // Error Rate (per-mille)\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.pnic.loss.rate\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.network.pnic.errorRate.label\"),\n            PerfChartUtil.PERMILLE_TYPE,\n            [\n               new PerfGraphMetrics(\"rxPacketsLossRate\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.network.pnic.errorRate.rxPacketsLossRate.label\")),\n               new PerfGraphMetrics(\"txPacketsLossRate\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.network.pnic.errorRate.txPacketsLossRate.label\")),\n            ]),\n      // vSwitch Port Drops (per-mille)\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.pnic.packet.drops\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.packet.drops.label\"),\n            PerfChartUtil.PERMILLE_TYPE,\n            [\n               new PerfGraphMetrics(\"portRxDrops\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.packet.drops.portRxDrops.label\")),\n               new PerfGraphMetrics(\"portTxDrops\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.packet.drops.portTxDrops.label\")),\n            ]),\n      // IO Chain Drops (per-mille)\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.pnic.ioChainDrops\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.io.chain.drops.label\"),\n            PerfChartUtil.PERMILLE_TYPE,\n            [\n               new PerfGraphMetrics(\"ioChainRxdrops\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.hostnet.ioChainRxdrops.label\")),\n               new PerfGraphMetrics(\"ioChainTxdrops\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.hostnet.ioChainTxdrops.label\")),\n            ], null, false),\n      // Flow Control (per-mille)\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.pnic.pauseCount\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.network.pnic.pauseCount.label\"),\n            PerfChartUtil.PERMILLE_TYPE,\n            [\n               new PerfGraphMetrics(\"pauseCount\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.network.pnic.metrics.pauseCount.label\")),\n            ], null, false),\n   ];\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nexport enum PerfDashboardView {\n   DOMCLIENT,\n   DOMOWNER,\n   DOMCOMPMGR,\n   DOMCOMPSCHEDULER,\n   CACHEDISK,\n   CAPACITYDISK,\n   DISKGROUP,\n   DDHDISK,\n   SPARSEHOST,\n   PNIC,\n   VNIC,\n   TCPIP,\n   HOSTNETWORK,\n   CLOMHOST,\n   CLOMDISK,\n   HOSTMEMORY,\n   SYSMEMORY,\n   VSANMEMORY,\n   NET,\n   WORKLOAD,\n   DOMWORLDCPU,\n   LSOMWORLDCPU,\n   HOSTCPU,\n   VSANCPU,\n   VSANDISTRIBUTION,\n   CMMDS,\n   CLUSTERRESYNC,\n   DISK,\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardVnicData {\n   static readonly VNIC_CHARTS: PerfGraph[] = [\n      // Packets/sec chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.vnic.packets\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.packets.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"rxPackets\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.network.vnic.packets.rxPackets.label\")),\n               new PerfGraphMetrics(\"txPackets\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.network.vnic.packets.txPackets.label\")),\n            ]),\n      // Throughput chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.vnic.throughput\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.throughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"rxThroughput\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.throughput.rxThroughput.label\")),\n               new PerfGraphMetrics(\"txThroughput\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.throughput.txThroughput.label\")),\n            ]),\n      // Discards Rate (per-mille) chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.vnic.loss.rate\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.loss.rate.label\"),\n            PerfChartUtil.PERMILLE_TYPE,\n            [\n               new PerfGraphMetrics(\"rxPacketsLossRate\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.loss.rate.rxPacketsLossRate.label\")),\n               new PerfGraphMetrics(\"txPacketsLossRate\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.loss.rate.txPacketsLossRate.label\")),\n            ]),\n      // vSwitch Port Drops (per-mille) chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.vnic.packet.drops\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.packet.drops.label\"),\n            PerfChartUtil.PERMILLE_TYPE,\n            [\n               new PerfGraphMetrics(\"portRxDrops\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.packet.drops.portRxDrops.label\")),\n               new PerfGraphMetrics(\"portTxDrops\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.packet.drops.portTxDrops.label\")),\n            ]),\n      // IO Chain Drops (per-mille)\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.vnic.ioChainDrops\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.io.chain.drops.label\"),\n            PerfChartUtil.PERMILLE_TYPE,\n            [\n               new PerfGraphMetrics(\"ioChainRxdrops\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.hostnet.ioChainRxdrops.label\")),\n               new PerfGraphMetrics(\"ioChainTxdrops\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.hostnet.ioChainTxdrops.label\")),\n            ], null, false),\n   ];\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardHostNetworkData {\n   static readonly HOST_NETWORK_CHARTS: PerfGraph[] = [\n      // Packets/sec chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.hostnetwork.packets\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.packets.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"rxPackets\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.network.vnic.packets.rxPackets.label\")),\n               new PerfGraphMetrics(\"txPackets\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.network.vnic.packets.txPackets.label\")),\n            ]),\n      // Throughput chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.hostnetwork.throughput\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.throughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"rxThroughput\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.throughput.rxThroughput.label\")),\n               new PerfGraphMetrics(\"txThroughput\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.throughput.txThroughput.label\")),\n            ]),\n      // Discards Rate (per-mille) chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.hostnetwork.loss.rate\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.loss.rate.label\"),\n            PerfChartUtil.PERMILLE_TYPE,\n            [\n               new PerfGraphMetrics(\"rxPacketsLossRate\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.loss.rate.rxPacketsLossRate.label\")),\n               new PerfGraphMetrics(\"txPacketsLossRate\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.loss.rate.txPacketsLossRate.label\")),\n            ]),\n      // vSwitch Port Drops\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.network.hostnetwork.vswitchDrops\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.packet.drops.label\"),\n            PerfChartUtil.PERMILLE_TYPE,\n            [\n               new PerfGraphMetrics(\"portRxDrops\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.packet.drops.portRxDrops.label\")),\n               new PerfGraphMetrics(\"portTxDrops\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.network.vnic.packet.drops.portTxDrops.label\")),\n            ]),\n      // IO Chain Drops\n      PerfGraph.createPerfGraph(\n         \"com.vmware.vsan.perf.graph.network.hostnetwork.ioChainDrops\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.io.chain.drops.label\"),\n         PerfChartUtil.PERMILLE_TYPE,\n         [\n            new PerfGraphMetrics(\"ioChainRxdrops\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.hostnet.ioChainRxdrops.label\")),\n            new PerfGraphMetrics(\"ioChainTxdrops\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.hostnet.ioChainTxdrops.label\")),\n         ]),\n   ];\n}","<!-- Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div *ngIf=\"loading\" class=\"spinner central-spinner\"></div>\n<ng-container *ngIf=\"!loading\">\n   <ng-container *ngIf=\"displayEntityInfo !== displayEntityInfoType.ALL\">\n      <nav class=\"sidenav\" *ngFor=\"let host of hostSubEntities; let i=index\">\n         <section class=\"nav-group\">\n            <ng-container *ngFor=\"let graphMetric of graphsDataMap[host.hostName]; let j=index\">\n               <div class=\"sub-entity-dashboard nav-content\" [ngClass]=\"isNested ? 'nested-dashboard' : ''\">\n                  <ng-container *ngIf=\"displayEntityInfo === displayEntityInfoType.ONLY_SUB_ENTITIES\">\n                     <ng-container *ngTemplateOutlet=\"subEntityInfo; context: {host: host, graphMetric: graphMetric, i: i, j: j}\">\n                     </ng-container>\n                  </ng-container>\n                  <ng-container *ngTemplateOutlet=\"graphics; context: {host: host, graphMetric: graphMetric, i: i, j: j}\">\n                  </ng-container>\n               </div>\n            </ng-container>\n         </section>\n      </nav>\n   </ng-container>\n\n   <ng-container *ngIf=\"displayEntityInfo === displayEntityInfoType.ALL\">\n      <nav class=\"sidenav\" *ngFor=\"let host of hostSubEntities; let i=index\">\n         <section class=\"nav-group collapsible\">\n            <input id=\"check-{{i}}\" type=\"checkbox\">\n            <label for=\"check-{{i}}\">\n               <clr-icon shape=\"vsphere-icon-host\" class=\"is-info\"></clr-icon>\n               <span class=\"entity-name\">{{host.hostName}}</span>\n            </label>\n            <ng-container *ngFor=\"let graphMetric of graphsDataMap[host.hostName]; let j=index\">\n               <div class=\"sub-entity-dashboard nav-content\" [ngClass]=\"isNested ? 'nested-dashboard' : ''\">\n                  <ng-container *ngTemplateOutlet=\"subEntityInfo; context: {host: host, graphMetric: graphMetric, i: i, j: j}\">\n                  </ng-container>\n                  <ng-container *ngTemplateOutlet=\"graphics; context: {host: host, graphMetric: graphMetric, i: i, j: j}\">\n                  </ng-container>\n               </div>\n            </ng-container>\n         </section>\n      </nav>\n   </ng-container>\n</ng-container>\n\n<ng-template #subEntityInfo let-host=\"host\" let-graphMetric=\"graphMetric\" let-i=\"i\" let-j=\"j\">\n   <div class=\"sub-entity-info\">\n      <clr-icon [attr.shape]=\"getEntityIcon()\" class=\"is-info\"></clr-icon>\n      <span class=\"entity-name\">{{getEntityName(host, j)}}</span>\n      <button *ngIf=\"showAllSupported\"\n              id=\"show-all-btn-{{i}}-{{j}}\"\n              class=\"btn btn-sm btn-link\"\n              (click)=\"showAllCharts(host, graphMetric.metrics, getEntityName(host, j))\">\n         {{\"vsan.perf.advanced.dashboards.entity.graphs.showAll.label\" | localized}}\n      </button>\n   </div>\n</ng-template>\n\n<ng-template #graphics let-host=\"host\" let-graphMetric=\"graphMetric\" let-i=\"i\" let-j=\"j\">\n   <vsan-perf-charts-container id=\"charts-container-{{host.hostName}}-{{i}}-{{j}}\"\n                               [data]=\"[graphMetric]\"\n                               [isShowAllLinkVisible]=\"false\"\n                               [isZoomButtonVisible]=\"false\"\n                               [isShowGraphDescription]=\"false\"\n                               [looseXAxisLabel]=\"true\"\n                               [compactMode]=\"compactMode\"\n                               [zoomOutOptions]=\"zoomOption\"\n                               (zoom)=\"zoom.emit($event)\"\n                               *ngIf=\"graphMetric\">\n   </vsan-perf-charts-container>\n</ng-template>","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {PerfEntityStateData} from \"@generated/perf-entity-state-data\";\nimport {PerfGraph} from \"@component/chart/performance/perf-graph\";\nimport {GraphMetric} from \"@component/chart/performance/graph-metrics.data\";\nimport {ChartZoomOption} from \"@component/chart/performance/chart-zoom-option\";\nimport {SubEntityInfo} from \"./advanced-perf-dashboard.component\";\nimport {PerfDashboardView} from \"../model/perf-dashboard-view.data\";\nimport {\n   HostSubEntitiesData,\n   PerfDashboardSubEntitiesDataQueryService,\n   SubEntityObject,\n} from \"../util/perf-dashboard-sub-entities-data-query.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {PerfForSupportUtil} from \"../util/perf-for-support-util\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\n\n@Component({\n   selector: \"vsan-advanced-perf-sub-entity-dashboard\",\n   templateUrl: \"advanced-perf-sub-entity-dashboard.html\",\n   styleUrls: [\n      \"advanced-perf-sub-entity-dashboard.scss\",\n      \"advanced-perf-dashboard.scss\"],\n})\nexport class AdvancedPerfSubentityDashboard {\n   displayEntityInfoType: typeof DisplayEntityInfoType = DisplayEntityInfoType;\n\n   @Input()\n   private perfEntitiesStateData: PerfEntityStateData[];\n\n   @Input()\n   set displayedGraphs(val: PerfGraph[]) {\n      this._displayedGraphs = val;\n      this.resetGraphsDataMap();\n   }\n\n   get displayedGraphs(): PerfGraph[] {\n      return this._displayedGraphs;\n   }\n\n   @Input()\n   zoomOption: ChartZoomOption;\n\n   @Input()\n   clusterRef: ManagedObject = ManagedObject.contextObject;\n\n   @Input()\n   showAllSupported: boolean = true;\n\n   @Input()\n   filterObjects: HostSubEntitiesData[] = null;\n\n   @Input()\n   filterMetrics: string[] = null;\n\n   @Input()\n   preselectSubEntityName: string = null;\n\n   @Output()\n   preselectSubEntityNameChange: EventEmitter<string> = new EventEmitter<string>();\n\n   @Input()\n   displayEntityInfo: DisplayEntityInfoType = DisplayEntityInfoType.ALL;\n\n   @Input()\n   isNested: boolean = true;\n\n   _compactMode: boolean;\n   @Input()\n   set compactMode(val: boolean) {\n      this._compactMode = val;\n   }\n\n   // Charts are compact when:\n   // 1) Explicitly defined via compactMode property\n   // 2) Or compactMode property is not defined and charts are more than 2\n   get compactMode(): boolean {\n      return this._compactMode === true || (this.displayedGraphs?.length > 2 && VsanUiUtils.isUnset(this._compactMode));\n   }\n\n   @Input()\n   set view(val: PerfDashboardView) {\n      if (this._view === val) {\n         return;\n      }\n      this._view = val;\n\n      this.loadView();\n   }\n\n   get view(): PerfDashboardView {\n      return this._view;\n   }\n\n   @Loader()\n   private async loadView(): Promise<void> {\n      const subentitiesData: HostSubEntitiesData[] =\n            await this.perfDashboardQueryService.querySubEntities(this.clusterRef, this.view);\n\n      this.hostSubEntities = this.filterEntities(subentitiesData);\n      this.resetGraphsDataMap();\n\n      if (this.preselectSubEntityName) {\n         this.showMetricsForPreselectedEntity();\n      }\n   }\n\n   @ErrorHandler()\n   private handleError(err: string): void {\n      this.onError.emit(err);\n   }\n\n   /**\n    * Show all metrics for already preselected sub entity.\n    */\n   private showMetricsForPreselectedEntity(): void {\n      const selectedHost: HostSubEntitiesData = this.hostSubEntities.find(host =>\n            host.subentites.some(entity => entity.name === this.preselectSubEntityName));\n      if (!selectedHost) {\n         return;\n      }\n\n      const entityGraphMetric: GraphMetric = (this.graphsDataMap[selectedHost.hostName] as GraphMetric[])\n            .find(graphMetric => graphMetric.entityRefId.indexOf(this.preselectSubEntityName) !== -1);\n\n      this.showAllCharts(selectedHost, entityGraphMetric.metrics, this.preselectSubEntityName);\n      this.preselectSubEntityNameChange.emit(null);\n   }\n\n   /**\n    * Filter the fetched entities by the passed \"@Input() filterObjects\".\n    */\n   private filterEntities(subentitiesData: HostSubEntitiesData[]): HostSubEntitiesData[] {\n      if (!this.filterObjects || VsanUiUtils.isEmpty(this.filterObjects)) {\n         return subentitiesData;\n      }\n\n      const filteredEntitiesData: HostSubEntitiesData[] = [];\n      this.filterObjects.forEach(entity => {\n         const filteredEntityData: HostSubEntitiesData =\n               subentitiesData.find(e => e.hostName === entity.hostName);\n         let filteredSubEntitiesData: SubEntityObject[] = [];\n\n         if (filteredEntityData && !VsanUiUtils.isEmpty(entity.subentites)) {\n            entity.subentites.forEach(subEntity => {\n               const newSubEntityData: SubEntityObject =\n                     filteredEntityData.subentites.find(e => e.name === subEntity.name && e.uuid === subEntity.uuid);\n               if (newSubEntityData) {\n                  filteredSubEntitiesData.push(newSubEntityData);\n               }\n            });\n         } else {\n            filteredSubEntitiesData = filteredEntityData.subentites;\n         }\n\n         filteredEntitiesData.push(new HostSubEntitiesData(entity.hostName, filteredSubEntitiesData));\n      });\n      return filteredEntitiesData;\n   }\n\n   @Output()\n   onError: EventEmitter<string> = new EventEmitter();\n\n   @Output()\n   zoom: EventEmitter<ChartZoomOption> = new EventEmitter<ChartZoomOption>();\n\n   @Output()\n   private entitySelected: EventEmitter<any> = new EventEmitter();\n\n   hostSubEntities: HostSubEntitiesData[];\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   graphsDataMap: Map<string, GraphMetric[]>;\n\n   private _displayedGraphs: PerfGraph[];\n\n   private _view: PerfDashboardView;\n\n   constructor(private perfDashboardQueryService: PerfDashboardSubEntitiesDataQueryService) {\n   }\n\n   private resetGraphsDataMap = () => {\n      if (this.hostSubEntities) {\n         this.graphsDataMap = new Map();\n         this.hostSubEntities.forEach(hostSubEntitiesData =>\n               this.getAggregatedHostLevelEntitiesData(hostSubEntitiesData));\n      }\n   };\n\n   /**\n    * For some dashboards like diskgroup, vNic, etc. A host may have several these entities,\n    * we need to aggregate/group the data by hosts so the dashboards can be displayed clearly.\n    */\n   private getAggregatedHostLevelEntitiesData = (hostSubEntitiesData: HostSubEntitiesData) => {\n      if (this.graphsDataMap.hasOwnProperty(hostSubEntitiesData.hostName)) {\n         return;\n      }\n\n      const subentities: SubEntityObject[] = hostSubEntitiesData.subentites;\n      if (!subentities) {\n         return null;\n      }\n      this.graphsDataMap[hostSubEntitiesData.hostName] = subentities.map(entity => {\n         const entityUuid: string = entity.uuid;\n         return new GraphMetric(\n               this.perfEntitiesStateData.find(entityData => entityData.entityRefId.indexOf(entityUuid) !== -1),\n               this.displayedGraphs,\n               GraphMetric.ENTITY_REF_ID_TOKEN_SEPARATOR + entityUuid);\n      });\n   };\n\n   getEntityName = (hostSubEntitiesData: HostSubEntitiesData, index: number): string => {\n      return hostSubEntitiesData.subentites[index].name;\n   };\n\n   getEntityIcon(): string {\n      return PerfForSupportUtil.getEntityIcon(this.view);\n   }\n\n   showAllCharts = (host: HostSubEntitiesData, perfData: PerfEntityStateData, entityName: string) => {\n      const subEntity: SubEntityInfo = new SubEntityInfo(host.hostName,\n            PerfForSupportUtil.getEntityIcon(this.view), entityName, perfData);\n      this.entitySelected.emit(subEntity);\n   };\n}\n\n/**\n * Indicates what part of the entities/sub-entities info to be shown.\n */\nexport enum DisplayEntityInfoType {\n   ALL,\n   ONLY_SUB_ENTITIES,\n   NONE,\n}\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"@component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"@component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardCacheDiskData {\n   static readonly LSOM_CACHE_DISK_CHARTS: PerfGraph[] = [\n      // Device IOPS\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.deviceIOPS\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.deviceIOPS.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"iopsDevRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.deviceIOPS.iopsDevRead.label\")),\n            new PerfGraphMetrics(\"iopsDevWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.deviceIOPS.iopsDevWrite.label\")),\n         ]),\n      // Device Throughput\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devThroughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devThroughput.label\"),\n         PerfChartUtil.RATE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"throughputDevRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devThroughput.throughputDevRead.label\")),\n            new PerfGraphMetrics(\"throughputDevWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devThroughput.throughputDevWrite.label\")),\n         ]),\n      // Device Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.label\"),\n         PerfChartUtil.TIME_MS_TYPE,\n         [\n            new PerfGraphMetrics(\"latencyDevDAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevDAvg.label\")),\n            new PerfGraphMetrics(\"latencyDevKAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevKAvg.label\")),\n            new PerfGraphMetrics(\"latencyDevGAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevGAvg.label\")),\n            new PerfGraphMetrics(\"latencyDevRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevRead.label\")),\n            new PerfGraphMetrics(\"latencyDevWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevWrite.label\")),\n         ],\n         PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper)),\n      // Write buffer usage (percentage)\n      PerfGraph.createPerfGraph(\n            \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.writeBufferUsagePct\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.writeBufferUsagePct.label\"),\n            PerfChartUtil.PERCENTAGE_TYPE,\n            [\n               new PerfGraphMetrics(\"wbFreePct\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.writeBufferUsagePct.wbFreePct.label\")),\n               new PerfGraphMetrics(\"llogLogSpace\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.writeBufferUsagePct.llogLogSpace.label\")),\n               new PerfGraphMetrics(\"llogDataSpace\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.writeBufferUsagePct.llogDataSpace.label\")),\n               new PerfGraphMetrics(\"plogLogSpace\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.writeBufferUsagePct.plogLogSpace.label\")),\n               new PerfGraphMetrics(\"plogDataSpace\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.writeBufferUsagePct.plogDataSpace.label\")),\n               new PerfGraphMetrics(\"elevStartThresh\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.writeBufferUsagePct.elevStartThresh.label\")),\n               new PerfGraphMetrics(\"elevUnthrottleThresh\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.writeBufferUsagePct.elevUnthrottleThresh.label\")),\n            ]),\n      // PLOG Elev Throughput\n      PerfGraph.createPerfGraph(\n            \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevThroughput\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevThroughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"plogTotalBytesDrained\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevThroughput.plogTotalBytesDrained.label\")),\n               new PerfGraphMetrics(\"plogSsdBytesDrained\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevThroughput.plogSsdBytesDrained.label\")),\n               new PerfGraphMetrics(\"plogZeroBytesDrained\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevThroughput.plogZeroBytesDrained.label\")),\n            ]),\n      // RC Hit Rate\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.rcHitRate\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.rcHitRate.label\"),\n         PerfChartUtil.PERCENTAGE_TYPE,\n         [\n            new PerfGraphMetrics(\"rcHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.rcHitRate.rcHitRate.label\")),\n         ], null, false),\n      // Evictions\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.evictions\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.evictions.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"quotaEvictions\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.evictions.quotaEvictions.label\")),\n            new PerfGraphMetrics(\"warEvictions\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.evictions.warEvictions.label\")),\n         ], null, false),\n      // Write Buffer\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.wb\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.wb.label\"),\n         PerfChartUtil.PERCENTAGE_TYPE,\n         [\n            new PerfGraphMetrics(\"wbFreePct\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.wb.wbFreePct.label\")),\n            new PerfGraphMetrics(\"llogLogSpace\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.wb.llogLogSpace.label\")),\n            new PerfGraphMetrics(\"llogDataSpace\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.wb.llogDataSpace.label\")),\n            new PerfGraphMetrics(\"plogLogSpace\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.wb.plogLogSpace.label\")),\n            new PerfGraphMetrics(\"plogDataSpace\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.wb.plogDataSpace.label\")),\n         ], null, false),\n      // PLOG Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.label\"),\n         PerfChartUtil.TIME_MS_TYPE,\n         [\n            new PerfGraphMetrics(\"plogReadQLatency\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.plogReadQLatency.label\")),\n            new PerfGraphMetrics(\"plogWriteQLatency\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.plogWriteQLatency.label\")),\n            new PerfGraphMetrics(\"plogtotalRdLat\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.plogtotalRdLat.label\")),\n            new PerfGraphMetrics(\"plogtotalWrLat\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.plogtotalWrLat.label\")),\n            new PerfGraphMetrics(\"plogHelpRdQLat\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.plogHelpRdQLat.label\")),\n            new PerfGraphMetrics(\"plogHelpWrQLat\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.plogHelpWrQLat.label\")),\n         ],\n         PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper), false),\n      // PLOG Cumulative Enc Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogCumlEncLat\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogCumlEncLat.label\"),\n         PerfChartUtil.TIME_MS_TYPE,\n         [\n            new PerfGraphMetrics(\"plogCumlEncRdLat\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogCumlEncLat.plogCumlEncRdLat.label\")),\n            new PerfGraphMetrics(\"plogCumlEncWrLat\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogCumlEncLat.plogCumlEncWrLat.label\")),\n         ],\n         PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper), false),\n      // PLOG Average Queue Depth\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogHelpQDepth\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogHelpQDepth.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"plogHelpRdQDepth\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogHelpQDepth.plogHelpRdQDepth.label\")),\n            new PerfGraphMetrics(\"plogHelpWrQDepth\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogHelpQDepth.plogHelpWrQDepth.label\")),\n         ], null, false),\n      // PLOG Read Throughput\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.label\"),\n         PerfChartUtil.RATE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"plogTotalBytesRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.plogTotalBytesRead.label\")),\n            new PerfGraphMetrics(\"plogTotalBytesReadFromMD\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.plogTotalBytesReadFromMD.label\")),\n            new PerfGraphMetrics(\"plogTotalBytesReadFromSSD\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.plogTotalBytesReadFromSSD.label\")),\n            new PerfGraphMetrics(\"plogTotalBytesReadByRC\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.plogTotalBytesReadByRC.label\")),\n            new PerfGraphMetrics(\"plogTotalBytesReadByVMFS\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.plogTotalBytesReadByVMFS.label\")),\n         ], null, false),\n      // PLOG ReadOPS\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"plogNumTotalReads\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.plogNumTotalReads.label\")),\n            new PerfGraphMetrics(\"plogNumMDReads\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.plogNumMDReads.label\")),\n            new PerfGraphMetrics(\"plogNumSSDReads\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.plogNumSSDReads.label\")),\n            new PerfGraphMetrics(\"plogNumRCReads\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.plogNumRCReads.label\")),\n            new PerfGraphMetrics(\"plogNumVMFSReads\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.plogNumVMFSReads.label\")),\n         ], null, false),\n      // PLOG Data Usage\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogDataUsage\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogDataUsage.label\"),\n         PerfChartUtil.SIZE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"plogDGDataUsage\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogDataUsage.plogDGDataUsage.label\")),\n         ], null, false),\n      // PLOG Write Throughput\n      PerfGraph.createPerfGraph(\n            \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"plogTotalCSBytes\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalCSBytes.label\")),\n               new PerfGraphMetrics(\"plogTotalZeroBytes\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalZeroBytes.label\")),\n               new PerfGraphMetrics(\"plogTotalDelBytes\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalDelBytes.label\")),\n               new PerfGraphMetrics(\"plogTotalFSBytes\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalFSBytes.label\")),\n               new PerfGraphMetrics(\"plogTotalCFBytes\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalCFBytes.label\")),\n               new PerfGraphMetrics(\"plogTotalFSUnmapBytes\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalFSUnmapBytes.label\")),\n            ], null, false),\n      // PLOG Elev IOPs\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevIOPs\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevIOPs.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"plogNumElevSSDReads\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevIOPs.plogNumElevSSDReads.label\")),\n            new PerfGraphMetrics(\"plogNumElevMDWrites\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevIOPs.plogNumElevMDWrites.label\")),\n            new PerfGraphMetrics(\"plogElevCycles\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevIOPs.plogElevCycles.label\")),\n         ], null, false),\n      // PLOG Logs\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLogs\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLogs.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"plogNumWriteLogs\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLogs.plogNumWriteLogs.label\")),\n            new PerfGraphMetrics(\"plogNumCommitLogs\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLogs.plogNumCommitLogs.label\")),\n            new PerfGraphMetrics(\"plogNumFreedLogs\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLogs.plogNumFreedLogs.label\")),\n            new PerfGraphMetrics(\"plogNumFreedCommitLogs\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLogs.plogNumFreedCommitLogs.label\")),\n         ], null, false),\n      // LLOG Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogLatency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogLatency.label\"),\n         PerfChartUtil.TIME_MS_TYPE,\n         [\n            new PerfGraphMetrics(\"latencyRcRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogLatency.latencyRcRead.label\")),\n            new PerfGraphMetrics(\"latencyWbRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogLatency.latencyWbRead.label\")),\n            new PerfGraphMetrics(\"latencyRcWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogLatency.latencyRcWrite.label\")),\n            new PerfGraphMetrics(\"latencyWbWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogLatency.latencyWbWrite.label\")),\n            new PerfGraphMetrics(\"latencyRcRdQ\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogLatency.latencyRcRdQ.label\")),\n            new PerfGraphMetrics(\"latencyRcWrtQ\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogLatency.latencyRcWrtQ.label\")),\n            new PerfGraphMetrics(\"latencyWbRdQ\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogLatency.latencyWbRdQ.label\")),\n            new PerfGraphMetrics(\"latencyWbWrtQ\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogLatency.latencyWbWrtQ.label\")),\n         ],\n         PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper), false),\n      // LLOG IOPs\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogIOPs\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogIOPs.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"iopsRcRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogIOPs.iopsRcRead.label\")),\n            new PerfGraphMetrics(\"iopsWbRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogIOPs.iopsWbRead.label\")),\n            new PerfGraphMetrics(\"iopsRcWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogIOPs.iopsRcWrite.label\")),\n            new PerfGraphMetrics(\"iopsWbWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.llogIOPs.iopsWbWrite.label\")),\n         ], null, false),\n      // Block attribute cache size\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.blkAttrCcheSz\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.blkAttrCcheSz.label\"),\n         PerfChartUtil.SIZE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"blkAttrCcheSz\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.blkAttrCcheSz.blkAttrCcheSz.label\")),\n         ], null, false),\n      // Blk Attr cache hit rate\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.blkAttrCcheHitRt\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.blkAttrCcheHitRt.label\"),\n         PerfChartUtil.PERCENTAGE_TYPE,\n         [\n            new PerfGraphMetrics(\"blkAttrCcheHitRt\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.blkAttrCcheHitRt.blkAttrCcheHitRt.label\")),\n         ], null, false),\n   ];\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {LoadingFlowWrapper} from \"@service/flow/loading-flow-wrapper.data\";\n\n/**\n * This property decorator is supposed to be used along with the @Loader decorator.\n * If an exception is thrown during the execution of the method decorated with @Loader\n * the ErrorHandler method will be invoked. You can define as many ErrorHandlers as you want,\n * but they must be with different names. The name can be provided as input to the decorator.\n * If a name is set to the ErrorHandler it will handle only the errors thrown by Loader functions\n * with the same name. If no name is passed to the ErrorHandler, it will handle only the errors\n * from Loader functions with no name.\n *\n * <pre>\n * // Example 1:\n * @Loader()\n * loadSyncData(): any {\n *    throw new Error(\"Failed to load sync data\");\n * }\n *\n * @ErrorHandler()\n * handleError(err: any) {\n *    // handle the error.\n * }\n *...\n *\n * // Example 2\n *\n * @Loader({name: \"data-loading-flow})\n * async loadAsyncData(): Promise<any> {\n *    return Promise.reject(\"Failed to load async data\");\n * }\n *\n * @ErrorHandler({name: \"data-loading-flow})\n * handleError(err: any) {\n *    // handle the error.\n * }\n * ...\n * </pre>\n */\nexport function ErrorHandler(props?: ErrorHandlerProperties): MethodDecorator {\n   props = props || {};\n   return (targetClass: any, functionName: string, descriptor: PropertyDescriptor): void => {\n      (new LoadingFlowWrapper(targetClass, props.name)).errorHandler = descriptor.value;\n   };\n}\n\n/**\n * Properties of the ErrorHandler decorator.\n */\nexport interface ErrorHandlerProperties {\n\n   /**\n    * Indicates which @Loder should be handled by this @ErrorHandler\n    */\n   name?: string;\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n/**\n * IDs used in external KB link navigation\n */\nexport enum KnowledgeBaseId {\n   PRECHECK_PCP = \"83954\",\n   VIRTUAL_OBJECTS = \"2108319\",\n   UPGRADE = \"2148493\",\n   PERFORMANCE_DIAGNOSTICS = \"2148770\",\n   SUPPORT_INSIGHT = \"60206\",\n}\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardCapacityDiskData {\n   static readonly LSOM_CAPACITY_DISK_CHARTS: PerfGraph[] = [\n      // Device IOPS\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.deviceIOPS\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.deviceIOPS.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"iopsDevRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.deviceIOPS.iopsDevRead.label\")),\n            new PerfGraphMetrics(\"iopsDevWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.deviceIOPS.iopsDevWrite.label\")),\n         ]),\n      // Device Throughput\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.devThroughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devThroughput.label\"),\n         PerfChartUtil.RATE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"throughputDevRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devThroughput.throughputDevRead.label\")),\n            new PerfGraphMetrics(\"throughputDevWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devThroughput.throughputDevWrite.label\")),\n         ]),\n      // Device Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.devLatency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.label\"),\n         PerfChartUtil.TIME_MS_TYPE,\n         [\n            new PerfGraphMetrics(\"latencyDevDAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevDAvg.label\")),\n            new PerfGraphMetrics(\"latencyDevKAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevKAvg.label\")),\n            new PerfGraphMetrics(\"latencyDevGAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevGAvg.label\")),\n            new PerfGraphMetrics(\"latencyDevRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevRead.label\")),\n            new PerfGraphMetrics(\"latencyDevWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevWrite.label\")),\n         ],\n         PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper)),\n      // PLOG Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.plogLatency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.label\"),\n         PerfChartUtil.TIME_MS_TYPE,\n         [\n            new PerfGraphMetrics(\"plogReadQLatency\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.plogReadQLatency.label\")),\n            new PerfGraphMetrics(\"plogWriteQLatency\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.plogWriteQLatency.label\")),\n            new PerfGraphMetrics(\"plogHelpRdQLat\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.plogHelpRdQLat.label\")),\n            new PerfGraphMetrics(\"plogHelpWrQLat\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogLatency.plogHelpWrQLat.label\")),\n         ],\n         PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper), false),\n      // PLOG Cumulative Enc Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.plogCumlEncLat\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogCumlEncLat.label\"),\n         PerfChartUtil.TIME_MS_TYPE,\n         [\n            new PerfGraphMetrics(\"plogCumlEncRdLat\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogCumlEncLat.plogCumlEncRdLat.label\")),\n            new PerfGraphMetrics(\"plogCumlEncWrLat\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogCumlEncLat.plogCumlEncWrLat.label\")),\n         ],\n         PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper), false),\n      // PLOG Average Queue Depth\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.plogHelpQDepth\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogHelpQDepth.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"plogHelpRdQDepth\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogHelpQDepth.plogHelpRdQDepth.label\")),\n            new PerfGraphMetrics(\"plogHelpWrQDepth\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogHelpQDepth.plogHelpWrQDepth.label\")),\n         ], null, false),\n      // Capactiy\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.capacity\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.capacity.label\"),\n         PerfChartUtil.SIZE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"capacityUsed\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.capacity.capacityUsed.label\"))\n         ], null, false),\n      // PLOG Read Throughput\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.plogReadThroughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.label\"),\n         PerfChartUtil.RATE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"plogTotalBytesRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.plogTotalBytesRead.label\")),\n            new PerfGraphMetrics(\"plogTotalBytesReadFromMD\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.plogTotalBytesReadFromMD.label\")),\n            new PerfGraphMetrics(\"plogTotalBytesReadFromSSD\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.plogTotalBytesReadFromSSD.label\")),\n            new PerfGraphMetrics(\"plogTotalBytesReadByRC\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.plogTotalBytesReadByRC.label\")),\n            new PerfGraphMetrics(\"plogTotalBytesReadByVMFS\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadThroughput.plogTotalBytesReadByVMFS.label\")),\n         ], null, false),\n      // PLOG ReadOPS\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.plogReadOps\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"plogNumTotalReads\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.plogNumTotalReads.label\")),\n            new PerfGraphMetrics(\"plogNumMDReads\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.plogNumMDReads.label\")),\n            new PerfGraphMetrics(\"plogNumSSDReads\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.plogNumSSDReads.label\")),\n            new PerfGraphMetrics(\"plogNumRCReads\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.plogNumRCReads.label\")),\n            new PerfGraphMetrics(\"plogNumVMFSReads\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogReadOps.plogNumVMFSReads.label\")),\n         ], null, false),\n      // PLOG Data Usage\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.plogDataUsage\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogDataUsage.label\"),\n         PerfChartUtil.SIZE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"plogDGDataUsage\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogDataUsage.plogDGDataUsage.label\")),\n         ], null, false),\n      // PLOG Write Throughput\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.plogWriteThroughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.label\"),\n         PerfChartUtil.RATE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"plogTotalCSBytes\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalCSBytes.label\")),\n            new PerfGraphMetrics(\"plogTotalZeroBytes\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalZeroBytes.label\")),\n            new PerfGraphMetrics(\"plogTotalDelBytes\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalDelBytes.label\")),\n            new PerfGraphMetrics(\"plogTotalFSBytes\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalFSBytes.label\")),\n            new PerfGraphMetrics(\"plogTotalCFBytes\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalCFBytes.label\")),\n            new PerfGraphMetrics(\"plogTotalFSUnmapBytes\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalFSUnmapBytes.label\")),\n            new PerfGraphMetrics(\"plogTotalCFUnmapBytes\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogWriteThroughput.plogTotalCFUnmapBytes.label\")),\n         ], null, false),\n      // PLOG Elev Throughput\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.plogElevThroughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevThroughput.label\"),\n         PerfChartUtil.RATE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"plogTotalBytesDrained\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevThroughput.plogTotalBytesDrained.label\")),\n            new PerfGraphMetrics(\"plogSsdBytesDrained\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevThroughput.plogSsdBytesDrained.label\")),\n            new PerfGraphMetrics(\"plogZeroBytesDrained\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevThroughput.plogZeroBytesDrained.label\")),\n         ]),\n      // PLOG Elev IOPs\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.plogElevIOPs\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevIOPs.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"plogNumElevSSDReads\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevIOPs.plogNumElevSSDReads.label\")),\n            new PerfGraphMetrics(\"plogNumElevMDWrites\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevIOPs.plogNumElevMDWrites.label\")),\n            new PerfGraphMetrics(\"plogElevCycles\", VsanUiUtils.getString(\n               \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.plogElevIOPs.plogElevCycles.label\")),\n         ], null, false),\n      // Virsto Map Blocks\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.virstoMapBlocks\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMapBlock.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"virstoValidMapBlocks\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMapBlock.virstoValidMapBlocks.label\")),\n            new PerfGraphMetrics(\"virstoInvalidMapBlocks\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMapBlock.virstoInvalidMapBlocks.label\")),\n            new PerfGraphMetrics(\"virstoDirtyMapBlocks\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMapBlock.virstoDirtyMapBlocks.label\")),\n            new PerfGraphMetrics(\"virstoFreeMapBlocks\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMapBlock.virstoFreeMapBlocks.label\")),\n         ], null, false),\n      // Virsto Map Block Cache\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.virstoMapBlockCache\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMapBlockCache.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"virstoMapBlockCacheHitsPerSec\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMapBlockCache.virstoMapBlockCacheHitsPerSec.label\")),\n            new PerfGraphMetrics(\"virstoMapBlockCacheMissesPerSec\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMapBlockCache.virstoMapBlockCacheMissesPerSec.label\")),\n            new PerfGraphMetrics(\"virstoMapBlockCacheEvictionsPerSec\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMapBlockCache.virstoMapBlockCacheEvictionsPerSec.label\")),\n         ], null, false),\n      // Virsto Metadata Flusher Runs\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.virstoMetadataFlusherRuns\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMetadataFlusherRuns.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"virstoMetadataFlusherRunsPerSec\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMetadataFlusherRunsPerSec.label\")),\n         ], null, false),\n      // Virsto Metadata Pending data\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.virstoMetadataFlusherPendingData\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMetadataFlusherPendingData.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"virstoMetadataFlusherPendingBuffers\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMetadataFlusherPendingBuffers.label\")),\n         ], null, false),\n      // Virsto Metadata Flush Tput\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.virstoMetadataFlushedPerRun\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMetadataFlushed.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"virstoMetadataFlushedPerRun\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoMetadataFlushedPerRun.label\")),\n         ], null, false),\n      // Virsto Instance\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.virstoInstance\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoInstance.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"virstoInstanceHeapUtilization\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.virstoInstanceHeapUtilization.label\")),\n         ], null, false),\n      // Commit Flusher Components\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.commitFlusherComp\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.commitFlusherComp.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"commitFlusherComponentsToFlush\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.commitFlusherComponentsToFlush.label\")),\n         ], null, false),\n      // Commit Flusher Extents\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.commitFlusherExtents\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.commitFlusherExtents.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"commitFlusherExtentsProcessed\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.commitFlusherExtentsProcessed.label\")),\n            new PerfGraphMetrics(\"commitFlusherExtentSizeProcessed\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.commitFlusherExtentSizeProcessed.label\")),\n         ], null, false),\n      // Time in commit flusher\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.timeInCommitFlusher\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.timeInCommitFlusher.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cfTime\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.cfTime.label\")),\n            new PerfGraphMetrics(\"blkAttrFlshTime\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.blkAttrFlshTime.label\")),\n            new PerfGraphMetrics(\"vrstBarrTime\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.vrstBarrTime.label\")),\n            new PerfGraphMetrics(\"plogIOTime\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.plogIOTime.label\")),\n         ], null, false),\n      // Commit flusher run breakdown\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.commitFlusherRunBreakdown\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.commitFlusherRunBreakdown.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"numCFAct\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.numCFAct.label\")),\n            new PerfGraphMetrics(\"numCksumFlsh\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.numCksumFlsh.label\")),\n            new PerfGraphMetrics(\"numVrstBar\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.numVrstBar.label\")),\n            new PerfGraphMetrics(\"numPlogIOs\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.numPlogIOs.label\")),\n         ], null, false),\n      // Checksum Error\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.capacity.checksumErrors\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.checksumErrors.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"checksumErrors\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.checksumErrors.label\")),\n         ], null, false),\n   ];\n}\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardDomClientData {\n   static readonly DOM_CLIENT_CHARTS: PerfGraph[] = [\n      // Latency chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domClient.latency\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domclient.latency.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyAvgRead\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.domclient.latency.metrics.read.label\")),\n               new PerfGraphMetrics(\"latencyAvgWrite\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.domclient.latency.metrics.write.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper)),\n      // IOPS chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domClient.iops\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domclient.iops.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsRead\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.domclient.iops.metrics.read.label\")),\n               new PerfGraphMetrics(\"iopsWrite\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.domclient.iops.metrics.write.label\")),\n            ]),\n      // Throughput chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domClient.throughput\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domclient.throughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"throughputRead\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.domclient.throughput.metrics.read.label\")),\n               new PerfGraphMetrics(\"throughputWrite\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.domclient.throughput.metrics.write.label\")),\n            ]),\n      // Congestion chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domClient.congestion\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domclient.congestion.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"congestion\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.domclient.congestion.metrics.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30, 60, PerfGraphThresholdDirection.upper)),\n      // Outstanding IO chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domClient.oio\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domclient.oio.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"oio\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.domclient.oio.metrics.label\")),\n            ]),\n      // LatencyStddev chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domClient.latencyStddev\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domclient.latencyStddev.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyStddev\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domclient.latencyStddev.metrics.label\")),\n               new PerfGraphMetrics(\"latencyStddevUnmap\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.latencyStddev.latencyStddevUnmap.label\")),\n               new PerfGraphMetrics(\"latencyStddevWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domclient.latencyStddevWrite.metrics.label\")),\n               new PerfGraphMetrics(\"latencyStddevRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domclient.latencyStddevRead.metrics.label\"))\n            ]),\n      // clientCacheHits chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domClient.clientCacheHits\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domclient.clientCacheHits.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsRead\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.domclient.iops.metrics.read.label\")),\n            ], null, false),\n   ];\n}\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardClomDiskData {\n   static readonly CLOM_DISK_CHARTS: PerfGraph[] = [\n      // Disk Component Count Ratio\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.diskCompCntRatio\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.diskCompCntRatio.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"diskCompCntRatio\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.diskCompCntRatio.label\")),\n            ]),\n      // Disk Data Component Count Ratio\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.diskDataCompCntRatio\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.diskDataCompCntRatio.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"diskDataCompCntRatio\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.diskDataCompCntRatio.label\")),\n            ]),\n      // Diskgroup data Component Count Ratio\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.diskgrpDataCompCntRatio\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.diskgrpDataCompCntRatio.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"diskgrpDataCompCntRatio\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.diskgrpDataCompCntRatio.label\")),\n            ]),\n\n      // Disk Fullness\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.diskFullness\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.diskFullness.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"diskFullness\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.diskFullness.label\")),\n            ], null, false),\n      // Fitness\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.fitness\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.fitness.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"fitness\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.fitness.label\")),\n            ], null, false),\n      // Max Actual Reserved Space Utilization\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.maxActResvSpaceUtil\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.maxActResvSpaceUtil.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"maxActResvSpaceUtil\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.maxActResvSpaceUtil.label\")),\n            ], null, false),\n      // Read Cache Reservation Utilization\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.rcResvUtil\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.rcResvUtil.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"rcResvUtil\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.rcResvUtil.label\")),\n            ], null, false),\n      // Resource Standard Deviation Change\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.resourceStddevChange\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.resourceStddevChange.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"resourceStddevChange\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.resourceStddevChange.label\")),\n            ], null, false),\n      // Unreserved Address Space Utilization\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.unresvAddrSpaceUtil\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.unresvAddrSpaceUtil.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"unresvAddrSpaceUtil\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.unresvAddrSpaceUtil.label\")),\n            ], null, false),\n      // Usage Variance\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.usageVariance\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.usageVariance.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"usageVariance\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.usageVariance.label\")),\n            ], null, false),\n      // Version Weight\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.versionWeight\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.versionWeight.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"versionWeight\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.versionWeight.label\")),\n            ], null, false),\n   ];\n}\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardMemoryHostData {\n   static readonly MEMORY_HOST_CHARTS: PerfGraph[] = [\n      // Slab Utilization\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.memory.slabUtil\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.memory.slabUtil.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"slabUtil\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.memory.metrics.slabUtil.label\")),\n            ], null, true),\n      // Heap Utilization\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.memory.heapUtil\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.memory.heapUtil.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"heapUtil\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.memory.metrics.heapUtil.label\")),\n            ], null, true),\n   ];\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\n\nexport class PerfDashboardHostNetworkTcpipData {\n   static readonly HOST_NETWORK_TCPIP_CHARTS: PerfGraph[] = [\n      // Packets/sec chart\n      PerfGraph.createPerfGraph(\n         \"com.vmware.vsan.perf.graph.network.hostnetwork.tcpip.packets\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.packets.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"tcpRxPackets\",\n                  VsanUiUtils.getString(\n                        \"vsan.perf.advanced.dashboards.network.vnic.packets.rxPackets.label\")),\n            new PerfGraphMetrics(\"tcpTxPackets\",\n                  VsanUiUtils.getString(\n                        \"vsan.perf.advanced.dashboards.network.vnic.packets.txPackets.label\")),\n         ]),\n      // Throughput chart\n      PerfGraph.createPerfGraph(\n         \"com.vmware.vsan.perf.graph.network.hostnetwork.tcpip.throughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.vnic.throughput.label\"),\n         PerfChartUtil.RATE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"tcpRxThroughput\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.vnic.throughput.rxThroughput.label\")),\n            new PerfGraphMetrics(\"tcpTxThroughput\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.vnic.throughput.txThroughput.label\")),\n         ]),\n      // TCP Connections\n      PerfGraph.createPerfGraph(\n         \"com.vmware.vsan.perf.graph.network.hostnetwork.tcpip.connections\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.tcpip.connections.label\"),\n         PerfChartUtil.PERMILLE_TYPE,\n         [\n            new PerfGraphMetrics(\"tcpHalfopenDropRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.tcpip.halfopenDropRate.label\")),\n            new PerfGraphMetrics(\"tcpTimeoutDropRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.tcpip.timeoutDropRate.label\")),\n         ]),\n      // TCP Transmission\n      PerfGraph.createPerfGraph(\n         \"com.vmware.vsan.perf.graph.network.hostnetwork.tcpip.transmission\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.tcpip.transmission.label\"),\n         PerfChartUtil.PERMILLE_TYPE,\n         [\n            new PerfGraphMetrics(\"tcpTxRexmitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.vnic.loss.rate.tcpTxRexmitRate.label\")),\n            new PerfGraphMetrics(\"tcpRcvdupackRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.tcpip.tcpRcvdupackRate.label\")),\n            new PerfGraphMetrics(\"tcpRcvoopackRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.tcpip.tcpRcvoopackRate.label\")),\n            new PerfGraphMetrics(\"tcpRcvduppackRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.tcpip.tcpRcvduppackRate.label\")),\n            new PerfGraphMetrics(\"tcpSackSendBlocksRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.tcpip.tcpSackSendBlocksRate.label\")),\n            new PerfGraphMetrics(\"tcpSackRcvBlocksRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.tcpip.tcpSackRcvBlocksRate.label\")),\n            new PerfGraphMetrics(\"tcpSackRexmitsRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.tcpip.tcpSackRexmitsRate.label\")),\n         ]),\n      // TCP/IP Errors\n      PerfGraph.createPerfGraph(\n         \"com.vmware.vsan.perf.graph.network.hostnetwork.tcpip.error.rate\",\n         VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.network.hostnetwork.tcpip.errorRate.label\"),\n         PerfChartUtil.PERMILLE_TYPE,\n         [\n            new PerfGraphMetrics(\"tcpErrs\", VsanUiUtils.getString(\n                  \"com.vmware.vsan.perf.graph.network.hostnetwork.tcpip.errorRate.tcpError.label\")),\n            new PerfGraphMetrics(\"ipErrs\", VsanUiUtils.getString(\n                  \"com.vmware.vsan.perf.graph.network.hostnetwork.tcpip.errorRate.ipv4Error.label\")),\n            new PerfGraphMetrics(\"ip6Errs\", VsanUiUtils.getString(\n                  \"com.vmware.vsan.perf.graph.network.hostnetwork.tcpip.errorRate.ipv6Error.label\")),\n         ]),\n      // TCP Congestion\n      PerfGraph.createPerfGraph(\n         \"com.vmware.vsan.perf.graph.network.hostnetwork.tcpip.congestion\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.network.tcpip.congestion.label\"),\n            PerfChartUtil.PERCENTAGE_TYPE,\n         [\n            new PerfGraphMetrics(\"tcpSndZeroWin\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.network.tcpip.tcpSndZeroWin.label\")),\n         ]),\n   ];\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {PerfDashboardView} from \"../model/perf-dashboard-view.data\";\nimport {Icon} from \"@util/icon\";\n\nexport class PerfForSupportUtil {\n   static getEntityIcon(view: PerfDashboardView): string {\n      switch (view) {\n         case PerfDashboardView.DOMCOMPSCHEDULER:\n         case PerfDashboardView.CACHEDISK:\n            return Icon.CLAIM_AS_CACHE;\n         case PerfDashboardView.CLOMDISK:\n         case PerfDashboardView.CAPACITYDISK:\n            return Icon.CLAIM_AS_CAPACITY;\n         case PerfDashboardView.DISKGROUP:\n            return Icon.DISK_GROUP_IMAGE;\n         case PerfDashboardView.DDHDISK:\n            return Icon.DISK;\n         case PerfDashboardView.VNIC:\n            return Icon.VIRTUAL_ADAPTER;\n         case PerfDashboardView.PNIC:\n            return Icon.PHYSICAL_ADAPTER;\n         default:\n            return \"\";\n      }\n   }\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardDomCompSchedulerData {\n   static readonly DOM_COMP_SCHEDULER_CHARTS: PerfGraph[] = [\n      // Latency chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domScheduler.latency\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domCompmgr.latency.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencySched\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latencySched.label\")),\n\n               new PerfGraphMetrics(\"latResyncRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latResyncRead.label\")),\n               new PerfGraphMetrics(\"latResyncWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latResyncWrite.label\")),\n               new PerfGraphMetrics(\"latResyncReadPolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latResyncReadPolicy.label\")),\n               new PerfGraphMetrics(\"latResyncWritePolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latResyncWritePolicy.label\")),\n               new PerfGraphMetrics(\"latResyncReadDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latResyncReadDecom.label\")),\n               new PerfGraphMetrics(\"latResyncWriteDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latResyncWriteDecom.label\")),\n               new PerfGraphMetrics(\"latResyncReadRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latResyncReadRebalance.label\")),\n               new PerfGraphMetrics(\"latResyncWriteRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latResyncWriteRebalance.label\")),\n               new PerfGraphMetrics(\"latResyncReadFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latResyncReadFixComp.label\")),\n               new PerfGraphMetrics(\"latResyncWriteFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.latency.latResyncWriteFixComp.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper),\n      ),\n      // IOPS chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domCompScheduler.iops\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domCompmgr.iops.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsDirectSched\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsDirectSched.label\")),\n\n               new PerfGraphMetrics(\"iopsResyncRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsResyncRead.label\")),\n               new PerfGraphMetrics(\"iopsResyncWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsResyncWrite.label\")),\n               new PerfGraphMetrics(\"iopsResyncReadPolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsResyncReadPolicy.label\")),\n               new PerfGraphMetrics(\"iopsResyncWritePolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsResyncWritePolicy.label\")),\n               new PerfGraphMetrics(\"iopsResyncReadDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsResyncReadDecom.label\")),\n               new PerfGraphMetrics(\"iopsResyncWriteDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsResyncWriteDecom.label\")),\n               new PerfGraphMetrics(\"iopsResyncReadRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsResyncReadRebalance.label\")),\n               new PerfGraphMetrics(\"iopsResyncWriteRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsResyncWriteRebalance.label\")),\n               new PerfGraphMetrics(\"iopsResyncReadFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsResyncReadFixComp.label\")),\n               new PerfGraphMetrics(\"iopsResyncWriteFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.iops.iopsResyncWriteFixComp.label\")),\n            ],\n      ),\n      // Throughput chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domCompScheduler.throughput\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domCompmgr.throughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"tputResyncRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.throughput.tputResyncRead.label\")),\n               new PerfGraphMetrics(\"tputResyncWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.throughput.tputResyncWrite.label\")),\n               new PerfGraphMetrics(\"tputResyncReadPolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.throughput.tputResyncReadPolicy.label\")),\n               new PerfGraphMetrics(\"tputResyncWritePolicy\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.throughput.tputResyncWritePolicy.label\")),\n               new PerfGraphMetrics(\"tputResyncReadDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.throughput.tputResyncReadDecom.label\")),\n               new PerfGraphMetrics(\"tputResyncWriteDecom\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.throughput.tputResyncWriteDecom.label\")),\n               new PerfGraphMetrics(\"tputResyncReadRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.throughput.tputResyncReadRebalance.label\")),\n               new PerfGraphMetrics(\"tputResyncWriteRebalance\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.throughput.tputResyncWriteRebalance.label\")),\n               new PerfGraphMetrics(\"tputResyncReadFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.throughput.tputResyncReadFixComp.label\")),\n               new PerfGraphMetrics(\"tputResyncWriteFixComp\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.throughput.tputResyncWriteFixComp.label\")),\n            ],\n      ),\n      // Outstanding Bytes chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domScheduler.outstandingBytesSched\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domScheduler.outstandingBytesSched.label\"),\n            PerfChartUtil.SIZE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"outstandingBytesSched\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domScheduler.outstandingBytesSched.label\")),\n            ],\n      ),\n      // Percentage IO Delay\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domScheduler.iopsDelayPctSched\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.domScheduler.iopsDelayPctSched.label\"),\n            PerfChartUtil.PERCENTAGE_TYPE,\n            [\n               new PerfGraphMetrics(\"iopsDelayPctSched\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domScheduler.iopsDelayPctSched.label\")),\n            ],\n      ),\n      // Disk Level Congestion\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domScheduler.diskLevelCongestion\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.domScheduler.diskLevelCongestion.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"componentCongestionReadSched\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domScheduler.congestion.componentCongestionReadSched.label\")),\n               new PerfGraphMetrics(\"componentCongestionWriteSched\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domScheduler.congestion.componentCongestionWriteSched.label\")),\n               new PerfGraphMetrics(\"diskgroupCongestionReadSched\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domScheduler.congestion.diskgroupCongestionReadSched.label\")),\n               new PerfGraphMetrics(\"diskgroupCongestionWriteSched\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domScheduler.congestion.diskgroupCongestionWriteSched.label\")),\n            ],\n      ),\n      // Delayed IO Average Latency\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domSchedular.delayedLatencyAvg\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.domSchedular.delayedLatencyAvg.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyDelaySched\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedLatencyAvg.latencyDelaySched.label\")),\n               new PerfGraphMetrics(\"latencySchedQueueNS\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedLatencyAvg.latencySchedQueueNS.label\")),\n               new PerfGraphMetrics(\"latencySchedQueueRec\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedLatencyAvg.latencySchedQueueRec.label\")),\n               new PerfGraphMetrics(\"latencySchedQueueVM\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedLatencyAvg.latencySchedQueueVM.label\")),\n               new PerfGraphMetrics(\"latencySchedQueueMeta\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedLatencyAvg.latencySchedQueueMeta.label\")),\n            ], null, false),\n      // Delayed IOPS\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domSchedular.delayedIops\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.domSchedular.delayedIops.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsSched\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedIops.iopsSched.label\")),\n               new PerfGraphMetrics(\"iopsSchedQueueNS\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedIops.iopsSchedQueueNS.label\")),\n               new PerfGraphMetrics(\"iopsSchedQueueRec\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedIops.iopsSchedQueueRec.label\")),\n               new PerfGraphMetrics(\"iopsSchedQueueVM\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedIops.iopsSchedQueueVM.label\")),\n               new PerfGraphMetrics(\"iopsSchedQueueMeta\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedIops.iopsSchedQueueMeta.label\")),\n            ], null, false),\n      // Delayed IO Throughput\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domSchedular.delayedThroughput\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.domSchedular.delayedThroughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"throughputSched\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedThroughput.throughputSched.label\")),\n               new PerfGraphMetrics(\"throughputSchedQueueNS\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedThroughput.throughputSchedQueueNS.label\")),\n               new PerfGraphMetrics(\"throughputSchedQueueRec\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedThroughput.throughputSchedQueueRec.label\")),\n               new PerfGraphMetrics(\"throughputSchedQueueVM\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedThroughput.throughputSchedQueueVM.label\")),\n               new PerfGraphMetrics(\"throughputSchedQueueMeta\", VsanUiUtils.getString(\n                     \"com.vmware.vsan.perf.graph.domSchedular.delayedThroughput.throughputSchedQueueMeta.label\")),\n            ], null, false),\n   ];\n}","/* Copyright 2018-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardDomOwnerData {\n   static readonly DOM_OWNER_CHARTS: PerfGraph[] = [\n      // Latency chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domOwner.latency\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domowner.latency.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyAvgRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.latency.latencyAvgRead.label\")),\n               new PerfGraphMetrics(\"latencyAvgWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.latency.latencyAvgWrite.label\")),\n               new PerfGraphMetrics(\"latencyAvgResyncRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.latency.latencyAvgResyncRead.label\")),\n               new PerfGraphMetrics(\"latencyAvgRecWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.latency.latencyAvgRecWrite.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper),\n      ),\n      // IOPS chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domOwner.iops\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domowner.iops.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.iops.iopsRead.label\")),\n               new PerfGraphMetrics(\"iopsWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.iops.iopsWrite.label\")),\n               new PerfGraphMetrics(\"iopsResyncRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.iops.iopsResyncRead.label\")),\n               new PerfGraphMetrics(\"iopsRecWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.iops.iopsRecWrite.label\")),\n            ],\n      ),\n      // Throughput chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domOwner.throughput\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domowner.throughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"tputRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.throughput.tputRead.label\")),\n               new PerfGraphMetrics(\"tputWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.throughput.tputWrite.label\")),\n               new PerfGraphMetrics(\"tputResyncRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.throughput.tputResyncRead.label\")),\n               new PerfGraphMetrics(\"tputRecWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.throughput.tputRecWrite.label\")),\n            ],\n      ),\n      // Congestion chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domOwner.congestion\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domowner.congestion.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"readCongestion\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.congestion.readCongestion.label\")),\n               new PerfGraphMetrics(\"writeCongestion\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.congestion.writeCongestion.label\")),\n               new PerfGraphMetrics(\"recoveryWriteCongestion\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.congestion.recoveryWriteCongestion.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30, 60, PerfGraphThresholdDirection.upper),\n      ),\n      // Outstanding IO cahrt\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domOwner.oio\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domowner.oio.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"oio\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.oio.oio.label\")),\n            ],\n      ),\n      // latencyStddev chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domOwner.latencyStddev\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domowner.latencyStddev.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyStddev\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.latencyStddev.latencyStddev.label\")),\n               new PerfGraphMetrics(\"latencyStddevUnmap\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.latencyStddev.latencyStddevUnmap.label\")),\n               new PerfGraphMetrics(\"latencyStddevWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domclient.latencyStddevWrite.metrics.label\")),\n               new PerfGraphMetrics(\"latencyStddevRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domclient.latencyStddevRead.metrics.label\"))\n            ],\n      ),\n      PerfGraph.createPerfGraph(\n         \"com.vmware.vsan.perf.graph.domOwner.leafOwnerLatency\",\n         VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.domOwner.leafOwnerLatency.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"readLeafOwnerLatency\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.domOwner.readLeafOwnerLatency.label\")),\n            new PerfGraphMetrics(\"writeLeafOwnerLatency\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.domOwner.writeLeafOwnerLatency.label\")),\n            new PerfGraphMetrics(\"recoveryWriteLeafOwnerLatency\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.domOwner.recoveryWriteLeafOwnerLatency.label\")),\n            new PerfGraphMetrics(\"unmapLeafOwnerLatency\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.domOwner.unmapLeafOwnerLatency.label\")),\n            new PerfGraphMetrics(\"recoveryUnmapLeafOwnerLatency\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.domOwner.recoveryUnmapLeafOwnerLatency.label\")),\n         ],\n         PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper),\n         false\n      ),\n   ];\n}\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardDdhDiskData {\n   static readonly LSOM_DDH_DISK_CHARTS: PerfGraph[] = [\n      // IOPS\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.iops\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.iops.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"avgReadIOPS\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.iops.avgReadIOPS.label\")),\n            new PerfGraphMetrics(\"avgWriteIOPS\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.iops.avgWriteIOPS.label\")),\n            new PerfGraphMetrics(\"avgUnmapIOPS\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.iops.avgUnmapIOPS.label\")),\n         ]\n      ),\n      // Throughput\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.throughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.throughput.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"avgReadTPut\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.avgReadTPut.label\")),\n            new PerfGraphMetrics(\"avgWriteTPut\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.avgWriteTPut.label\")),\n            new PerfGraphMetrics(\"avgUnmapIOPS\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.avgUnmapTput.label\")),\n         ]\n      ),\n      // Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.latency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.latency.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"avgReadLatency\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.avgReadLatency.label\")),\n            new PerfGraphMetrics(\"avgWriteLatency\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.avgWriteLatency.label\")),\n            new PerfGraphMetrics(\"avgUnmapLatency\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.avgUnmapLatency.label\")),\n         ]\n      ),\n      // Log Congestion\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.logCongestion\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.logCongestion.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"logCongestion\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.logCongestion.label\"))\n         ]\n      ),\n      // PLOG IORetry Unweighted Moving Avg Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.plogioavglatency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.plogioavglatency.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"ioretryReadLatencyUnwtdMvgAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.ioretryReadLatencyUnwtdMvgAvg.label\")),\n            new PerfGraphMetrics(\"ioretryWriteLatencyUnwtdMvgAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.ioretryWriteLatencyUnwtdMvgAvg.label\")),\n         ], null, false),\n      // PLOG IORetry Unweighted Moving Avg Latency Std Dev\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.plogioavglatencystddev\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.plogioavglatencystddev.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"ioretryReadLatencyUnwtdMvgStdDev\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.ioretryReadLatencyUnwtdMvgStdDev.label\")),\n            new PerfGraphMetrics(\"ioretryWriteLatencyUnwtdMvgStdDev\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.ioretryWriteLatencyUnwtdMvgStdDev.label\")),\n         ], null, false),\n      // PLOG IORetry IOPS\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.plogioretryiops\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.plogioretryiops.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"ioretryReadIopsAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.ioretryReadIopsAvg.label\")),\n            new PerfGraphMetrics(\"ioretryWriteIopsAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.ioretryWriteIopsAvg.label\")),\n         ], null, false),\n      // PLOG IORetry IOPS Moving Avg\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.plogioretryiopsavg\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.plogioretryiopsavg.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"ioretryReadIopsMvgAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.ioretryReadIopsMvgAvg.label\")),\n            new PerfGraphMetrics(\"ioretryWriteIopsMvgAvg\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.ioretryWriteIopsMvgAvg.label\")),\n         ], null, false),\n      // Log Segment Number\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.logsegmentnum\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.logsegmentnum.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"llogStartSegNo\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.llogStartSegNo.label\")),\n            new PerfGraphMetrics(\"llogCurrentSegNo\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.llogCurrentSegNo.label\")),\n            new PerfGraphMetrics(\"plogStartSegNo\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.plogStartSegNo.label\")),\n            new PerfGraphMetrics(\"plogCurrentSegNo\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.plogCurrentSegNo.label\")),\n         ], null, false),\n      // Interval\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.interval\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.interval.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"intervalCount\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.intervalCount.label\")),\n            new PerfGraphMetrics(\"latencyIntervalSecs\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.latencyIntervalSecs.label\")),\n            new PerfGraphMetrics(\"elapsedSecsInInterval\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.elapsedSecsInInterval.label\")),\n         ], null, false),\n      // Exceed counts\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.exceedcounts\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.exceedcounts.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"readLatencyExCount\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.readLatencyExCount.label\")),\n            new PerfGraphMetrics(\"writeLatencyExCount\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.writeLatencyExCount.label\")),\n            new PerfGraphMetrics(\"minimumReadIOsExceededCount\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.minimumReadIOsExceededCount.label\")),\n            new PerfGraphMetrics(\"minimumWriteIOsExceededCount\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.minimumWriteIOsExceededCount.label\")),\n         ], null, false),\n      // Mean Latency\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.meanlatency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.meanlatency.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"currentReadLatencyMean\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.currentReadLatencyMean.label\")),\n            new PerfGraphMetrics(\"currentWriteLatencyMean\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.currentWriteLatencyMean.label\")),\n         ], null, false),\n   ];\n}\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardHostSparseData {\n   static readonly LSOM_HOST_SPARSE_CHARTS: PerfGraph[] = [\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.latency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.latency.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"latencyCacheLookup\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.latencyCacheLookup.label\")),\n            new PerfGraphMetrics(\"latencyGwe\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.latencyGwe.label\")),\n            new PerfGraphMetrics(\"latencyRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.latencyRead.label\")),\n            new PerfGraphMetrics(\"latencyWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.latencyWrite.label\")),\n         ]),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.iops\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.iops.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"iopsGwe\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.iopsGwe.label\")),\n            new PerfGraphMetrics(\"iopsRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.iopsRead.label\")),\n            new PerfGraphMetrics(\"iopsRmw\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.iopsRmw.label\")),\n            new PerfGraphMetrics(\"iopsWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.iopsWrite.label\")),\n            new PerfGraphMetrics(\"iopsWriteConflicts\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.iopsWriteConflicts.label\")),\n         ]),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.throughput\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.throughput.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"throughputRead\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.throughputRead.label\")),\n            new PerfGraphMetrics(\"throughputWrite\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.throughputWrite.label\")),\n         ]),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.cacheHitRate\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.cacheHitRate.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cacheHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.cacheHitRate.label\")),\n         ]),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.cacheAllocFails\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.cacheAllocFails.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cacheHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.cacheAllocFails.label\")),\n         ], null, false),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.cacheEntries\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.cacheEntries.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cacheHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.cacheEntries.label\")),\n         ], null, false),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.cacheEvictAttempts\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.cacheEvictAttempts.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cacheHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.cacheEvictAttempts.label\")),\n         ], null, false),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.cacheInserts\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.cacheInserts.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cacheHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.cacheInserts.label\")),\n         ], null, false),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.cacheLockContentions\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.cacheLockContentions.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cacheHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.cacheLockContentions.label\")),\n         ], null, false),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.cacheRemoves\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.cacheRemoves.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cacheHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.cacheRemoves.label\")),\n         ], null, false),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.cacheUpdateLatency\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.cacheUpdateLatency.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cacheHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.cacheUpdateLatency.label\")),\n         ], null, false),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.lruLockContentions\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.lruLockContentions.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cacheHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.lruLockContentions.label\")),\n         ], null, false),\n      PerfGraph.createPerfGraph(\n         \"vsan.perf.advanced.dashboards.lsom.sparse.readsToLayer\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.lsom.sparse.readsToLayer.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"cacheHitRate\", VsanUiUtils.getString(\n                  \"vsan.perf.advanced.dashboards.lsom.sparse.readsToLayer.label\")),\n         ], null, false),\n   ];\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardVsanDistributionData {\n   static readonly VSAN_DISTRIBUTION_CHARTS: PerfGraph[] = [\n      // Components\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.distribution.components\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.distribution.components.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"components\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.distribution.components.label\")),\n            ]),\n      // IO Components\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.distribution.ioComponents\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.distribution.ioComponents.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"ioComponents\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.distribution.ioComponents.label\")),\n            ]),\n      // DOM Clients\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.distribution.domClients\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.distribution.domClients.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"domClients\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.distribution.domClients.label\")),\n            ]),\n      // DOM Owners\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.distribution.domOwners\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.distribution.domOwners.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"domOwners\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.distribution.domOwners.label\")),\n            ]),\n      // DOM Colocated\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.distribution.domColocated\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.distribution.domColocated.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"domColocated\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.distribution.domColocated.label\")),\n            ]),\n   ];\n}","/* Copyright 2018-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {PerfDashboardView} from \"./perf-dashboard-view.data\";\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfDashboardDiskgroupData} from \"./perf-dashboard-disk-group.data\";\nimport {PerfDashboardDomClientData} from \"./perf-dashboard-dom-client.data\";\nimport {PerfDashboardDomOwnerData} from \"./perf-dashboard-dom-owner.data\";\nimport {PerfDashboardDomCompMgrData} from \"./perf-dashboard-dom-comp-mgr.data\";\nimport {PerfDashboardVnicData} from \"./perf-dashboard-vnic.data\";\nimport {PerfDashboardCacheDiskData} from \"./perf-dashboard-cache-disk.data\";\nimport {PerfDashboardCapacityDiskData} from \"./perf-dashboard-capacity-disk.data\";\nimport {PerfDashboardDdhDiskData} from \"./perf-dashboard-ddh-disk.data\";\nimport {PerfDashboardHostSparseData} from \"./perf-dashboard-host-sparse.data\";\nimport {PerfDashboardPnicData} from \"./perf-dashboard-pnic.data\";\nimport {PerfDashboardHostNetworkData} from \"./perf-dashboard-host-net.data\";\nimport {PerfDashboardClomHostData} from \"./perf-dashboard-clom-host.data\";\nimport {PerfDashboardClomDiskData} from \"./perf-dashboard-clom-disk.data\";\nimport {PerfDashboardMemoryHostData} from \"./perf-dashboard-memory-host.data\";\nimport {PerfDashboardMemorySystemData} from \"./perf-dashboard-memory-system.data\";\nimport {PerfDashboardMemoryVsanData} from \"./perf-dashboard-memory-vsan.data\";\nimport {PerfDashboardCmmdsNetData} from \"./perf-dashboard-cmmds-net.data\";\nimport {PerfDashboardCmmdsWorkloadData} from \"./perf-dashboard-cmmds-workload.data\";\nimport {PerfDashboardCmmdsData} from \"./perf-dashboard-cmmds.data\";\nimport {PerfDashboardCpuData} from \"./perf-dashboard-cpu.data\";\nimport {PerfDashboardVsanDistributionData} from \"./perf-dashboard-distribution.data\";\nimport {PerfDashboardDomCompSchedulerData} from \"./perf-dashboard-dom-comp-scheduler.data\";\nimport {PerfDashboardHostNetworkTcpipData} from \"./perf-dashboard-host-net-tcpip.data\";\nimport {PerfDashboardClusterResyncData} from \"./perf-dashboard-cluster-resync.data\";\n\n/**\n * The dashboard view definition, isOutlineDashboard=true means this link should be outlined\n */\nexport class VsanPerfDashboardView {\n   constructor(public view: PerfDashboardView,\n         public label: string,\n         public children: PerfGraph[],\n         public isSupportedByVsanMax: boolean = true) {}\n}\n\n/**\n * The category definition of the dashboard views.\n */\nexport class VsanPerfDashboardCategory {\n   constructor(public label: string, public children: VsanPerfDashboardView[]) {}\n\n   /**\n    * These dashboards are not directly aggregated by hosts, but the devices that belongs to a host\n    */\n   static readonly NESTED_DASHBOARDS: PerfDashboardView[] = [\n      PerfDashboardView.DISKGROUP,\n      PerfDashboardView.CACHEDISK,\n      PerfDashboardView.CAPACITYDISK,\n      PerfDashboardView.DDHDISK,\n      PerfDashboardView.VNIC,\n      PerfDashboardView.PNIC,\n      PerfDashboardView.CLOMDISK,\n      PerfDashboardView.DOMCOMPSCHEDULER,\n   ];\n\n   static readonly PIVOTAL_DASHBOARDS: VsanPerfDashboardView[] = [\n      new VsanPerfDashboardView(PerfDashboardView.DOMCLIENT,\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.dom.client.label\"),\n            PerfDashboardDomClientData.DOM_CLIENT_CHARTS),\n      new VsanPerfDashboardView(PerfDashboardView.DOMOWNER,\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.dom.owner.label\"),\n            PerfDashboardDomOwnerData.DOM_OWNER_CHARTS),\n      new VsanPerfDashboardView(PerfDashboardView.DOMCOMPMGR,\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.dom.mgr.label\"),\n            PerfDashboardDomCompMgrData.DOM_COMP_MGR_CHARTS),\n      new VsanPerfDashboardView(PerfDashboardView.DISKGROUP,\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.diskgroup.label\"),\n            PerfDashboardDiskgroupData.LSOM_DISK_GROUP_CHARTS,\n            false),\n      new VsanPerfDashboardView(PerfDashboardView.VNIC,\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.network.vnic.label\"),\n            PerfDashboardVnicData.VNIC_CHARTS),\n   ];\n\n   /**\n    * Defines all the available dashboards and categories them.\n    */\n   static readonly CATEGORIED_DASHBOARDS: VsanPerfDashboardCategory[] = [\n      new VsanPerfDashboardCategory(VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.dom.scheduler.label\"),\n            [new VsanPerfDashboardView(PerfDashboardView.DOMCOMPSCHEDULER, \"\",\n                  PerfDashboardDomCompSchedulerData.DOM_COMP_SCHEDULER_CHARTS)]),\n\n      new VsanPerfDashboardCategory(VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.label\"),\n            [new VsanPerfDashboardView(PerfDashboardView.CACHEDISK,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.label\"),\n                  PerfDashboardCacheDiskData.LSOM_CACHE_DISK_CHARTS,\n                  false),\n             new VsanPerfDashboardView(PerfDashboardView.CAPACITYDISK,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.capacity.label\"),\n                  PerfDashboardCapacityDiskData.LSOM_CAPACITY_DISK_CHARTS,\n                   false),\n             new VsanPerfDashboardView(PerfDashboardView.DDHDISK,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.ddh.label\"),\n                  PerfDashboardDdhDiskData.LSOM_DDH_DISK_CHARTS),\n             new VsanPerfDashboardView(PerfDashboardView.SPARSEHOST,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.sparse.label\"),\n                  PerfDashboardHostSparseData.LSOM_HOST_SPARSE_CHARTS),\n            ]),\n\n      new VsanPerfDashboardCategory(VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.network.label\"),\n            [new VsanPerfDashboardView(PerfDashboardView.PNIC,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.network.pnic.label\"),\n                  PerfDashboardPnicData.PNIC_CHARTS),\n             new VsanPerfDashboardView(PerfDashboardView.TCPIP,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.network.tcpip.label\"),\n                  PerfDashboardHostNetworkTcpipData.HOST_NETWORK_TCPIP_CHARTS),\n             new VsanPerfDashboardView(PerfDashboardView.HOSTNETWORK,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.network.host.label\"),\n                  PerfDashboardHostNetworkData.HOST_NETWORK_CHARTS),\n            ]),\n\n      new VsanPerfDashboardCategory(VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.clom.label\"),\n            [new VsanPerfDashboardView(PerfDashboardView.CLOMHOST,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.clom.host.label\"),\n                  PerfDashboardClomHostData.CLOM_HOST_CHARTS),\n             new VsanPerfDashboardView(PerfDashboardView.CLOMDISK,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.clom.disk.label\"),\n                  PerfDashboardClomDiskData.CLOM_DISK_CHARTS),\n            ]),\n\n      new VsanPerfDashboardCategory(VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.memory.label\"),\n            [\n             new VsanPerfDashboardView(PerfDashboardView.HOSTMEMORY,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.memory.heap.label\"),\n                  PerfDashboardMemoryHostData.MEMORY_HOST_CHARTS),\n             new VsanPerfDashboardView(PerfDashboardView.SYSMEMORY,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.memory.system.label\"),\n                  PerfDashboardMemorySystemData.MEMORY_SYSTEM_CHARTS),\n             new VsanPerfDashboardView(PerfDashboardView.VSANMEMORY,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.memory.vsan.label\"),\n                  PerfDashboardMemoryVsanData.MEMORY_VSAN_CHARTS),\n            ]),\n\n      new VsanPerfDashboardCategory(VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cmmds.label\"),\n            [new VsanPerfDashboardView(PerfDashboardView.CMMDS,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cmmds.label\"),\n                  PerfDashboardCmmdsData.CMMDS_CHARTS),\n             new VsanPerfDashboardView(PerfDashboardView.NET,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cmmds.net.label\"),\n                  PerfDashboardCmmdsNetData.CMMDS_NET_CHARTS),\n             new VsanPerfDashboardView(PerfDashboardView.WORKLOAD,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cmmds.workload.label\"),\n                  PerfDashboardCmmdsWorkloadData.CMMDS_WORKLOAD_CHARTS),\n            ]),\n\n      new VsanPerfDashboardCategory(VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cpu.label\"),\n            [new VsanPerfDashboardView(PerfDashboardView.DOMWORLDCPU,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cpu.dom.label\"),\n                  PerfDashboardCpuData.DOM_WORLD_CPU),\n             new VsanPerfDashboardView(PerfDashboardView.LSOMWORLDCPU,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cpu.lsom.label\"),\n                  PerfDashboardCpuData.LSOM_WORLD_CPU),\n             new VsanPerfDashboardView(PerfDashboardView.HOSTCPU,\n                  VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cpu.host.label\"),\n                  PerfDashboardCpuData.HOST_CPU),\n             new VsanPerfDashboardView(PerfDashboardView.VSANCPU,\n                VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cpu.vsan.label\"),\n                PerfDashboardCpuData.VSAN_CPU),\n            ]),\n\n      new VsanPerfDashboardCategory(VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.distribution.label\"),\n            [new VsanPerfDashboardView(PerfDashboardView.VSANDISTRIBUTION, \"\",\n                  PerfDashboardVsanDistributionData.VSAN_DISTRIBUTION_CHARTS)]),\n\n      new VsanPerfDashboardCategory(VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cluster.resync.label\"),\n            [new VsanPerfDashboardView(PerfDashboardView.CLUSTERRESYNC, \"\",\n                  PerfDashboardClusterResyncData.CLUSTER_RESYNC_CHARTS)]),\n   ];\n\n   static getVsanMaxDashboardCategories(categories: VsanPerfDashboardCategory[]): VsanPerfDashboardCategory[] {\n      if (VsanUiUtils.isEmpty(categories)) {\n         return [];\n      }\n\n      return categories.map(category => {\n         category.children = this.getVsanMaxDashboardViews(category.children);\n         return category;\n      });\n   }\n\n   static getVsanMaxDashboardViews(views: VsanPerfDashboardView[]): VsanPerfDashboardView[] {\n      if (VsanUiUtils.isEmpty(views)) {\n         return [];\n      }\n\n      return views.filter(view => view.isSupportedByVsanMax);\n   }\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardDomCompMgrData {\n   static readonly DOM_COMP_MGR_CHARTS: PerfGraph[] = [\n      // Latency chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domCompmgr.latency\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domCompmgr.latency.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyAvgRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.latency.latencyAvgRead.label\")),\n               new PerfGraphMetrics(\"latencyAvgWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.latency.latencyAvgWrite.label\")),\n               new PerfGraphMetrics(\"latencyAvgRecWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.latency.latencyAvgRecWrite.label\")),\n               new PerfGraphMetrics(\"latAvgResyncRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.latency.latAvgResyncRead.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper),\n      ),\n      // IOPS chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domCompmgr.iops\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domCompmgr.iops.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.iops.iopsRead.label\")),\n               new PerfGraphMetrics(\"iopsWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.iops.iopsWrite.label\")),\n               new PerfGraphMetrics(\"iopsRecWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.iops.iopsRecWrite.label\")),\n               new PerfGraphMetrics(\"iopsResyncRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.iops.iopsResyncRead.label\")),\n            ],\n      ),\n      // Throughput chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domCompmgr.throughput\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domCompmgr.throughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"throughputRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.throughput.throughputRead.label\")),\n               new PerfGraphMetrics(\"throughputWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.throughput.throughputWrite.label\")),\n               new PerfGraphMetrics(\"throughputRecWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.throughput.throughputRecWrite.label\")),\n               new PerfGraphMetrics(\"tputResyncRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.throughput.tputResyncRead.label\")),\n            ],\n      ),\n      // Congestion chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domCompmgr.congestion\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domCompmgr.congestion.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"congestion\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.congestion.congestion.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30, 60, PerfGraphThresholdDirection.upper),\n      ),\n      // Outstanding IO chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domCompmgr.oio\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domCompmgr.oio.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"oio\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.oio.oio.label\")),\n            ],\n      ),\n      // latencyStddev chart\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.domCompmgr.latencyStddev\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.domCompmgr.latencyStddev.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyStddev\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domCompmgr.latencyStddev.latencyStddev.label\")),\n               new PerfGraphMetrics(\"latencyStddevUnmap\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domowner.latencyStddev.latencyStddevUnmap.label\")),\n               new PerfGraphMetrics(\"latencyStddevWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domclient.latencyStddevWrite.metrics.label\")),\n               new PerfGraphMetrics(\"latencyStddevRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.domclient.latencyStddevRead.metrics.label\"))\n            ],\n      ),\n   ];\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\n\nexport class PerfDashboardClusterResyncData {\n   static readonly CLUSTER_RESYNC_CHARTS: PerfGraph[] = [\n      // IOPS Resync\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cluster.resync.iops\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cluster.resync.iops.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsResyncReadPolicy\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.iops.readPolicy.label\")),\n               new PerfGraphMetrics(\"iopsResyncWritePolicy\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.iops.writePolicy.label\")),\n               new PerfGraphMetrics(\"iopsResyncReadDecom\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.iops.readDecom.label\")),\n               new PerfGraphMetrics(\"iopsResyncWriteDecom\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.iops.writeDecom.label\")),\n               new PerfGraphMetrics(\"iopsResyncReadRebalance\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.iops.readRebalance.label\")),\n               new PerfGraphMetrics(\"iopsResyncWriteRebalance\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.iops.writeRebalance.label\")),\n               new PerfGraphMetrics(\"iopsResyncReadFixComp\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.iops.readFixComp.label\")),\n               new PerfGraphMetrics(\"iopsResyncWriteFixComp\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.iops.writeFixComp.label\")),\n            ]),\n      // Throughput Resync\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cluster.resync.throughput\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cluster.resync.throughput.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"tputResyncReadPolicy\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.throughput.readPolicy.label\")),\n               new PerfGraphMetrics(\"tputResyncWritePolicy\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.throughput.writePolicy.label\")),\n               new PerfGraphMetrics(\"tputResyncReadDecom\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.throughput.readDecom.label\")),\n               new PerfGraphMetrics(\"tputResyncWriteDecom\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.throughput.writeDecom.label\")),\n               new PerfGraphMetrics(\"tputResyncReadRebalance\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.throughput.readRebalance.label\")),\n               new PerfGraphMetrics(\"tputResyncWriteRebalance\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.throughput.writeRebalance.label\")),\n               new PerfGraphMetrics(\"tputResyncReadFixComp\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.throughput.readFixComp.label\")),\n               new PerfGraphMetrics(\"tputResyncWriteFixComp\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cluster.resync.throughput.writeFixComp.label\")),\n            ]),\n      // Latency Resync\n      PerfGraph.createPerfGraph(\n         \"com.vmware.vsan.perf.graph.cluster.resync.latency\",\n         VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cluster.resync.latency.label\"),\n         PerfChartUtil.RATE_BYTES_TYPE,\n         [\n            new PerfGraphMetrics(\"latResyncReadPolicy\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.cluster.resync.latency.readPolicy.label\")),\n            new PerfGraphMetrics(\"latResyncWritePolicy\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.cluster.resync.latency.writePolicy.label\")),\n            new PerfGraphMetrics(\"latResyncReadDecom\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.cluster.resync.latency.readDecom.label\")),\n            new PerfGraphMetrics(\"latResyncWriteDecom\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.cluster.resync.latency.writeDecom.label\")),\n            new PerfGraphMetrics(\"latResyncReadRebalance\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.cluster.resync.latency.readRebalance.label\")),\n            new PerfGraphMetrics(\"latResyncWriteRebalance\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.cluster.resync.latency.writeRebalance.label\")),\n            new PerfGraphMetrics(\"latResyncReadFixComp\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.cluster.resync.latency.readFixComp.label\")),\n            new PerfGraphMetrics(\"latResyncWriteFixComp\",\n                  VsanUiUtils.getString(\n                        \"com.vmware.vsan.perf.graph.cluster.resync.latency.writeFixComp.label\")),\n         ]),\n   ];\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {AdvancedPerfDashboard} from \"./view/advanced-perf-dashboard.component\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {FormsModule} from \"@angular/forms\";\nimport {VsanChartModule} from \"@component/chart/chart.module\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {DatetimePickerModule} from \"@component/datetime-picker/datetime-picker.module\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {AdvancedPerfSubentityDashboard} from \"./view/advanced-perf-sub-entity-dashboard.component\";\nimport {DetailedAdvancedPerfDashboard} from \"./view/advanced-perf-detailed-dashboard.component\";\nimport {VsanAdvancedPerfGraphicsComponent} from \"./view/advanced-perf-graphics.component\";\nimport {PerfDashboardSubEntitiesDataQueryService} from \"./util/perf-dashboard-sub-entities-data-query.service\";\nimport {PerformancePersistenceService} from \"@service/performance-persistence.service\";\nimport {PersistentStorageService} from \"@service/browser-storage.service\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      FormsModule,\n      VsanChartModule,\n      UnavailableViewModule,\n      ValidationModule,\n      CommonPipeModule,\n      DatetimePickerModule,\n      CommonDirectiveModule,\n   ],\n   declarations: [\n      AdvancedPerfDashboard,\n      DetailedAdvancedPerfDashboard,\n      AdvancedPerfSubentityDashboard,\n      VsanAdvancedPerfGraphicsComponent,\n   ],\n   exports: [\n      AdvancedPerfDashboard,\n      AdvancedPerfSubentityDashboard,\n      DetailedAdvancedPerfDashboard,\n      VsanAdvancedPerfGraphicsComponent,\n   ],\n   providers: [\n      PerfDashboardSubEntitiesDataQueryService,\n      PerformancePersistenceService,\n      PersistentStorageService,\n   ],\n})\nexport class SupportPerfModule {\n}\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardCmmdsNetData {\n   static readonly CMMDS_NET_CHARTS: PerfGraph[] = [\n      // Net Stats\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cmmds.net.rxtx\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cmmds.net.rxtx.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"rdtRx\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.net.metrics.rdtRx.label\")),\n               new PerfGraphMetrics(\"rdtTx\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.net.metrics.rdtTx.label\")),\n               new PerfGraphMetrics(\"groupRx\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.net.metrics.groupRx.label\")),\n               new PerfGraphMetrics(\"groupTxUcast\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.net.metrics.groupTxUcast.label\")),\n               new PerfGraphMetrics(\"groupTxMcast\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.net.metrics.groupTxMcast.label\")),\n            ]),\n      // Throughput\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cmmds.net.throughput\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cmmds.net.throughput.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"rdtRxThroughput\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.net.metrics.rdtRxThroughput.label\")),\n               new PerfGraphMetrics(\"rdtTxThroughput\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.net.metrics.rdtTxThroughput.label\")),\n               new PerfGraphMetrics(\"groupRxThroughput\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.net.metrics.groupRxThroughput.label\")),\n               new PerfGraphMetrics(\"groupTxUcastThroughput\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.net.metrics.groupTxUcastThroughput.label\")),\n               new PerfGraphMetrics(\"groupTxMcastThroughput\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.net.metrics.groupTxMcastThroughput.label\")),\n            ]),\n   ];\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\n\nexport class PerfDashboardMemorySystemData {\n   static readonly MEMORY_SYSTEM_CHARTS: PerfGraph[] = [\n      // Total Mb Memory Used\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.memory.totalMbMemUsed\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.memory.totalMbMemUsed.label\"),\n            PerfChartUtil.MBYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"totalMbMemUsed\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.memory.metrics.totalMbMemUsed.label\")),\n            ]),\n      // Percentage Memory Used\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.memory.pctMemUsed\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.memory.pctMemUsed.label\"),\n            PerfChartUtil.PERCENTAGE_TYPE,\n            [\n               new PerfGraphMetrics(\"pctMemUsed\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.memory.metrics.pctMemUsed.label\")),\n            ]),\n      // Over commit Ratio\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.memory.overcommitRatio\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.memory.overcommitRatio.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"overcommitRatio\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.memory.metrics.overcommitRatio.label\")),\n            ]),\n   ];\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\n\nexport class PerfDashboardMemoryVsanData {\n   static readonly MEMORY_VSAN_CHARTS: PerfGraph[] = [\n      // vSAN Used\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.memory.vsanMemory\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.memory.vsan.label\"),\n            PerfChartUtil.SIZE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"vsanUsedSize\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.dropdown.memory.vsan.label\"),\n                           null,\n                           null,\n                           [\"kernelReservedSize\", \"uwReservedSize\"]),\n            ]),\n   ];\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardClomHostData {\n   static readonly CLOM_HOST_CHARTS: PerfGraph[] = [\n      // Node Component Count Ratio\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.nodeCompCntRatio\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.nodeCompCntRatio.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"nodeCompCntRatio\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.nodeCompCntRatio.label\")),\n            ]),\n      // Node Data Component Count Ratio\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.nodeDataCompCntRatio\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.nodeDataCompCntRatio.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"nodeDataCompCntRatio\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.nodeDataCompCntRatio.label\")),\n            ]),\n   ];\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardCmmdsData {\n   static readonly CMMDS_CHARTS: PerfGraph[] = [\n      // Updates Applied\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.updatesApplied\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.updatesApplied.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"updatesApplied\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.updatesApplied.label\")),\n            ]),\n      // Updates Requested\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.clom.updatesRequested\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.clom.updatesRequested.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"updatesRequested\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.clom.metrics.updatesRequested.label\")),\n            ]),\n   ];\n}","/* Copyright 2018-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\n\nexport class PerfDashboardCpuData {\n   static readonly LSOM_WORLD_CPU: PerfGraph[] = [\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cpu.lsom.usedPct\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cpu.lsom.usedPct.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"usedPct\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cpu.lsom.metrics.usedPct.label\")),\n            ]),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cpu.lsom.readyPct\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cpu.lsom.readyPct.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"readyPct\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cpu.lsom.metrics.readyPct.label\")),\n            ]),\n   ];\n\n   static readonly DOM_WORLD_CPU: PerfGraph[] = [\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cpu.dom.usedPct\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cpu.lsom.usedPct.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"usedPct\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cpu.lsom.metrics.usedPct.label\")),\n            ]),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cpu.dom.readyPct\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cpu.lsom.readyPct.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"readyPct\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cpu.lsom.metrics.readyPct.label\")),\n            ]),\n   ];\n\n   static readonly HOST_CPU: PerfGraph[] = [\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cpu.host.coreUtilPct\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cpu.host.coreUtilPct.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"coreUtilPct\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cpu.host.metrics.coreUtilPct.label\")),\n            ]),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cpu.host.pcpuUsedPct\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cpu.host.pcpuUsedPct.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"pcpuUsedPct\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cpu.host.metrics.pcpuUsedPct.label\")),\n            ]),\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cpu.host.pcpuUtilPct\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cpu.host.pcpuUtilPct.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"pcpuUtilPct\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cpu.lsom.metrics.pcpuUtilPct.label\")),\n            ]),\n   ];\n\n   static readonly VSAN_CPU: PerfGraph[] = [\n      PerfGraph.createPerfGraph(\n         \"com.vmware.vsan.perf.graph.cpu.vsan\",\n         VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.cpu.vsan.label\"),\n         null,\n         [\n            new PerfGraphMetrics(\"usedPct\",\n                  VsanUiUtils.getString(\n                        \"vsan.perf.advanced.dashboards.dropdown.cpu.vsan.usedPct.label\")),\n            new PerfGraphMetrics(\"readyPct\",\n                  VsanUiUtils.getString(\n                        \"vsan.perf.advanced.dashboards.dropdown.cpu.vsan.readyPct.label\")),\n         ]),\n   ];\n}","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Injectable} from \"@angular/core\";\nimport {VsanPerfPropertyProvider} from \"@generated/vsan-perf-property-provider\";\nimport {PerfDashboardView} from \"../model/perf-dashboard-view.data\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {DiskGroup} from \"@generated/disk-group\";\nimport {DiskInfo} from \"@generated/disk-info\";\nimport {HostPnicsData} from \"@generated/host-pnics-data\";\nimport {HostVnicsData} from \"@generated/host-vnics-data\";\nimport {HostDiskGroupsData} from \"@generated/host-disk-groups-data\";\nimport {HostData} from \"@generated/host-data\";\nimport {DiskGroupData} from \"@generated/disk-group-data\";\nimport {DiskData} from \"@generated/disk-data\";\n\n/**\n * Use this object to query the sub-entities of a host\n */\n@Injectable()\nexport class PerfDashboardSubEntitiesDataQueryService {\n   constructor(private perfPropertyProvider: VsanPerfPropertyProvider) {}\n\n   async querySubEntities(clusterRef: ManagedObject, view: PerfDashboardView): Promise<HostSubEntitiesData[]> {\n      switch (view) {\n         case PerfDashboardView.DOMCOMPSCHEDULER:\n         case PerfDashboardView.DDHDISK:\n         case PerfDashboardView.CACHEDISK:\n         case PerfDashboardView.CAPACITYDISK:\n         case PerfDashboardView.DISKGROUP:\n         case PerfDashboardView.CLOMDISK:\n            return this.parseDiskGroupData(view, await this.perfPropertyProvider.getClusterDiskMappings(clusterRef));\n         case PerfDashboardView.PNIC:\n            return this.parsePnics(await this.perfPropertyProvider.getHostPhysicalAdapterMapping(clusterRef));\n         case PerfDashboardView.VNIC:\n            return this.parseVnics(await this.perfPropertyProvider.getHostVnicsMapping(clusterRef));\n         case PerfDashboardView.DISK:\n            return this.parseDiskData(await this.perfPropertyProvider.getClusterStoragePoolDisks(clusterRef));\n      }\n      return null;\n   }\n\n   private parsePnics(hostPnicsMapping: HostPnicsData[]): HostSubEntitiesData[] {\n      if (!hostPnicsMapping) {\n         return [];\n      }\n\n      return hostPnicsMapping.map(pnicsData => new HostSubEntitiesData(pnicsData.hostName,\n               pnicsData.pnics.map(pnic =>\n                     new SubEntityObject(pnic.deviceName, pnic.hostUuid + \"|\" + pnic.deviceName))));\n   }\n\n   private parseVnics(hostVnicsMapping: HostVnicsData[]): HostSubEntitiesData[] {\n      if (!hostVnicsMapping) {\n         return [];\n      }\n\n      return hostVnicsMapping.map(vnicsData => new HostSubEntitiesData(vnicsData.hostName,\n               vnicsData.vnics.map(vnic =>\n                     new SubEntityObject(vnic.deviceName, vnic.hostUuid +\n                     \"|\" + vnic.netStackInstanceKey + \"|\" + vnic.deviceName))));\n   }\n\n   /**\n    * Parse the entities object array for diskgroup, cache-disk, and capaicity-disk\n    */\n   private parseDiskGroupData = (view: PerfDashboardView,\n         hostDiskgroupsMapping: HostDiskGroupsData[]): HostSubEntitiesData[] => {\n      if (!hostDiskgroupsMapping) {\n         return [];\n      }\n      return hostDiskgroupsMapping.map(hostDiskgroupsData => {\n         const diskgroups: DiskGroup[] = hostDiskgroupsData.diskgroups;\n         let subentites: SubEntityObject[] = null;\n         switch (view) {\n            case PerfDashboardView.DISKGROUP:\n               subentites = this.getDiskgroupEntities(hostDiskgroupsData.diskgroups);\n               break;\n            case PerfDashboardView.DOMCOMPSCHEDULER:\n            case PerfDashboardView.CACHEDISK:\n               subentites = this.getCacheDiskEntities(hostDiskgroupsData.diskgroups);\n               break;\n            case PerfDashboardView.CLOMDISK:\n            case PerfDashboardView.CAPACITYDISK:\n               subentites = this.getCapacityDiskEntites(hostDiskgroupsData.diskgroups);\n               break;\n            case PerfDashboardView.DDHDISK:\n               subentites = this.getCacheDiskEntities(hostDiskgroupsData.diskgroups)\n                     .concat(this.getCapacityDiskEntites(hostDiskgroupsData.diskgroups));\n               break;\n\n         }\n         const hostSubEntitiesData: HostSubEntitiesData = new HostSubEntitiesData(\n               hostDiskgroupsData.hostName,\n               subentites);\n         return hostSubEntitiesData;\n      });\n   };\n\n   private getDiskgroupEntities = (diskgroups: DiskGroup[]): SubEntityObject[] => {\n      return diskgroups.map(diskgroup => new SubEntityObject(diskgroup.diskGroupName, diskgroup.diskGroupUuid));\n   };\n\n   private getCacheDiskEntities = (diskgroups: DiskGroup[]): SubEntityObject[] => {\n      return diskgroups.map(diskgroup =>\n            new SubEntityObject(diskgroup.cacheDisk.diskName, diskgroup.cacheDisk.diskUuid));\n   };\n\n   private getCapacityDiskEntites = (diskgroups: DiskGroup[]): SubEntityObject[] => {\n      let diskinfo: DiskInfo[] = [];\n      diskgroups.forEach(diskgroup => diskinfo = diskinfo.concat(diskgroup.capacityDisks));\n      return diskinfo.map(disk => new SubEntityObject(disk.diskName, disk.diskUuid));\n   };\n\n   private parseDiskData(hostsData: HostData[]): HostSubEntitiesData[] {\n      if (!hostsData) {\n         return [];\n      }\n      return hostsData.map(hostData => new HostSubEntitiesData(hostData.name,\n            hostData.diskGroups.reduce((acc: DiskData[], diskGroup: DiskGroupData) => acc.concat(diskGroup.disks), [])\n             // Uuid is set to disk name in IoVmMetricsDialogComponent.initializeDiskPerformance()\n            .map(disk => new SubEntityObject(disk.uuid, disk.uuid)))); //\n   }\n}\n\nexport class SubEntityObject {\n   constructor(public name: string, public uuid: string) {}\n}\n\nexport class HostSubEntitiesData {\n   constructor(public hostName: string, public subentites: SubEntityObject[]) {}\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardCmmdsWorkloadData {\n   static readonly CMMDS_WORKLOAD_CHARTS: PerfGraph[] = [\n      // Inbound Stats\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cmmds.workload.inbount\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cmmds.workload.inbound.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"rxAccept\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.rxAccept.label\")),\n               new PerfGraphMetrics(\"rxAgentUpdateRequest\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.rxAgentUpdateRequest.label\")),\n               new PerfGraphMetrics(\"rxHeartbeatRequest\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.rxHeartbeatRequest.label\")),\n               new PerfGraphMetrics(\"rxMasterUpdate\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.rxMasterUpdate.label\")),\n               new PerfGraphMetrics(\"rxRetransmitRequest\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.rxRetransmitRequest.label\")),\n               new PerfGraphMetrics(\"rxSnapshot\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.rxSnapshot.label\")),\n               new PerfGraphMetrics(\"rxMisc\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.rxMisc.label\")),\n            ]),\n      // Outbound Stats\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cmmds.workload.outbount\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cmmds.workload.outbound.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"txAgentUpdateRequest\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.txAgentUpdateRequest.label\")),\n               new PerfGraphMetrics(\"txHeartbeatRequest\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.txHeartbeatRequest.label\")),\n               new PerfGraphMetrics(\"txMasterCheckpoint\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.txMasterCheckpoint.label\")),\n               new PerfGraphMetrics(\"txMasterCkptTried\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.txMasterCkptTried.label\")),\n               new PerfGraphMetrics(\"txRetransmitRequest\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.txRetransmitRequest.label\")),\n               new PerfGraphMetrics(\"txSnapshot\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.txSnapshot.label\")),\n               new PerfGraphMetrics(\"txSnapshotBytes\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.txSnapshotBytes.label\")),\n               new PerfGraphMetrics(\"txSnapshotTried\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.txSnapshotTried.label\")),\n               new PerfGraphMetrics(\"txMasterUpdate\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.txMasterUpdate.label\")),\n               new PerfGraphMetrics(\"txMasterUpdateTried\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.txMasterUpdateTried.label\")),\n            ]),\n      // workload batch\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.cmmds.workload.batch\",\n            VsanUiUtils.getString(\"com.vmware.vsan.perf.graph.cmmds.workload.batch.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"agentBatchesSent\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.agentBatchesSent.label\")),\n               new PerfGraphMetrics(\"totalUpdSentInAgentBatch\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.totalUpdSentInAgentBatch.label\")),\n               new PerfGraphMetrics(\"checkPointBatchesSent\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.checkPointBatchesSent.label\")),\n               new PerfGraphMetrics(\"totalUpdInBatchCkpt\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.totalUpdInBatchCkpt.label\")),\n               new PerfGraphMetrics(\"masterBatchesRecved\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.masterBatchesRecved.label\")),\n               new PerfGraphMetrics(\"totalUpdInMasterBatches\",\n                     VsanUiUtils.getString(\n                           \"com.vmware.vsan.perf.graph.cmmds.workload.metrics.totalUpdInMasterBatches.label\")),\n            ]),\n   ];\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {PerfDashboardView} from \"../perf-dashboard-view.data\";\nimport {NavigationContext} from \"@navigation/context/navigation-context\";\n\nexport class SupportNavData implements NavigationContext {\n   constructor(public view: SupportView, public perfSelection: PerfSelectionData) {}\n}\n\nexport class PerfSelectionData {\n   constructor(public dashboardView: PerfDashboardView, public objectIdentifier: string = null) {}\n}\n\nexport enum SupportView {\n   OBFUSCATION,\n   ADVANCED_PERFORMANCE,\n}"],"sourceRoot":"webpack:///"}