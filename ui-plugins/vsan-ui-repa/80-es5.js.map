{"version":3,"sources":["webpack:///src/app/vsan/common/component/virtual-objects-table/filter/composite-health-states-filter.ts","webpack:///src/app/vsan/common/component/virtual-objects-table/virtual-objects-filterable-table.component.ts","webpack:///src/app/vsan/common/directive/state-change.directive.ts","webpack:///src/app/vsan/common/component/virtual-objects-table/filter/composite-health-states-filter-item.component.ts","webpack:///src/app/vsan/common/component/virtual-objects-table/virtual-objects-filterable-table.html","webpack:///src/app/vsan/common/component/virtual-objects-table/actions/virtual-objects-actions.component.ts","webpack:///src/app/vsan/common/component/virtual-objects-table/actions/virtual-objects-actions.html","webpack:///src/app/vsan/file-services/shares/filters/file-share-type-filter-options.ts","webpack:///src/app/vsan/common/component/virtual-objects-table/filter/composite-health-states-filter-item.html"],"names":["CompositeHealthStatesFilter","virtualObjects","preselectedStates","hasMultiSelection","NON_FILTERABLE_STATES","NON_COMPLIANT","filteredVirtualObjects","filterItems","isEmpty","initFilterItems","applySelection","healthState","filterItem","find","item","toggleFilters","selected","forEach","generateFilterItems","obj","updateFilterItemsFromVirtualObject","children","isAggregationObject","uid","compositeHealth","processStateToFilterItems","complianceState","incomplianceReason","rebuildState","policyState","state","increaseCount","some","nonFilterable","elementsCount","enabled","preselectedState","push","selectedFilters","getSelectedFilterItems","JSON","parse","stringify","filter","parentObject","isSelectionApplicableForParentObject","parent","child","matchesAnyOfSelected","changeFilterItemsAvailability","checkChildren","matchesFullSelection","virtualObject","every","selectedFilter","hasHealthMatch","baseState","filteredRootsWithoutChildren","filteredObject","VirtualObjectsFilterableTableComponent","virtualObjectsTableService","changeDetector","selectedVirtualObjects","healthFilter","_initialFilteredHealthStates","clearFiltersTrigger","_virtualObjects","value","hasCompositeHealth","sort","healthFilterItemCompare","toggleHealthState","length","COMPLIANT","HEALTHY","map","hasAppliedFilters","appliedHealthStateFilters","object","resetFilters","detectChanges","a","b","indexA","HEALTH_STATES_ORDER","indexOf","indexB","StateChangeDirective","el","nativeElement","disabled","elementId","id","document","getElementById","buttonText","innerText","srOnlyMessage","getString","CompositeHealthStatesFilterItemComponent","onItemClicked","getHealthStateLabelClass","isDangerHealthState","isWarningHealthState","isSuccessHealthState","VirtualObjectsActionsComponent","navigationService","virtualObjectsActionAvailabilityService","VirtualObjectsActionAvailabilityService","actionId","getActionStatus","available","message","checkAvailability","isLoading","loading","selectedObjects","placementDetailsContext","clusterRef","contextObject","allItems","setDimensions","WIZARD_XL","open","isVolume","isVmWithAttachedVolume","isFileShareOrFileVolume","isVmdkOrAttachedFCD","selectedItem","isAttachedBlockVolume","navigateToVmPerfView","navigateToFileSharesPerfView","vmPerfContext","viewType","VM_VIRTUAL_DISK","selectedEntityName","name","navigateTo","VM_PERFORMANCE","vmRef","selectedFileShare","selectedObjectName","getNavigationObjectName","isFileShare","fileSharePerfContext","CLUSTER_FILE_SERVICE","CLUSTER_PERFORMANCE","selectedObject","isFileVolume","cnsVolumesContext","volumeName","CLUSTER_CNS_VOLUMES","fileServiceSharesContext","preselectedShareName","shareTypeFilter","FILE_SHARE","CNS_VOLUME","FILE_SERVICE_SHARES","searchInChildren","objectToGet","findChild","getName","FileShareTypeFilterOptions"],"mappings":"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","file":"80-es5.js","sourcesContent":["/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {VsanObjectHealthState} from \"@generated/vsan-object-health-state\";\nimport {ObjectHealthComplianceState} from \"@generated/object-health-compliance-state\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanObjectCompositeHealth} from \"@generated/vsan-object-composite-health\";\nimport {BaseHealthState} from \"@util/vsan-health-util\";\n\n/**\n * Filter by health states for parent and children objects. There are two types of usage:\n * - Single selection - a single filter can applied (all filter states are mutually exclusive).\n * The following condition should be met:\n * -- Parent object should contain at least one child with the selected filter.\n * - Multiple selection - covers the health V2 use case of different health categories\n * in which one or more statuses can be selected. The following conditions should be met:\n * -- Parent object should satisfy all selected filters. Each of filtered children should satisfy at least one of\n * selected filters.\n * -- Parent has a child which status satisfy all selected filters. Each of filtered children should satisfy all of the\n * selected children.\n */\nexport class CompositeHealthStatesFilter {\n   private readonly NON_FILTERABLE_STATES: BaseHealthState[] = [ObjectHealthComplianceState.NON_COMPLIANT];\n\n   filteredVirtualObjects: VirtualObjectModel[] = [];\n   filterItems: HealthStateFilterItem[] = [];\n\n   constructor(private virtualObjects: VirtualObjectModel[] = [],\n         private readonly preselectedStates: BaseHealthState[] = [],\n         private hasMultiSelection: boolean = false) {\n      if (VsanUiUtils.isEmpty(this.preselectedStates)) {\n         this.preselectedStates = [];\n      }\n      this.initFilterItems();\n      this.applySelection();\n   }\n\n   toggleHealthState(healthState: BaseHealthState): void {\n      const filterItem: HealthStateFilterItem = this.filterItems.find(item => item.healthState === healthState);\n      if (!filterItem) {\n         // the state is not from available filters\n         return;\n      }\n\n      this.toggleFilters(filterItem, healthState);\n\n      this.applySelection();\n   }\n\n   private toggleFilters(filterItem: HealthStateFilterItem, healthState: BaseHealthState): void {\n      // when multi-selection is applicable, health state filter acts like a checkbox\n      if (this.hasMultiSelection) {\n         filterItem.selected = !filterItem.selected;\n         return;\n      }\n\n      // when single-selection is applicable, health state filter acts like a radio-button\n      this.filterItems.forEach(item => {\n         if (item.healthState === healthState) {\n            item.selected = !item.selected;\n         } else {\n            item.selected = false;\n         }\n      });\n   }\n\n   private initFilterItems(): void {\n      this.filterItems = [];\n\n      if (VsanUiUtils.isEmpty(this.virtualObjects)) {\n         return;\n      }\n\n      this.generateFilterItems(this.virtualObjects);\n   }\n\n   private generateFilterItems(virtualObjects: VirtualObjectModel[]): void {\n      if (VsanUiUtils.isEmpty(virtualObjects)) {\n         return;\n      }\n\n      virtualObjects.forEach(obj => {\n         this.updateFilterItemsFromVirtualObject(obj);\n         this.generateFilterItems(obj.children);\n      });\n   }\n\n   private updateFilterItemsFromVirtualObject(obj: VirtualObjectModel): void {\n      const isAggregationObject: boolean = !obj.uid;\n      if (obj.compositeHealth) {\n         this.processStateToFilterItems(obj.compositeHealth.complianceState, !isAggregationObject);\n         this.processStateToFilterItems(obj.compositeHealth.incomplianceReason, !isAggregationObject);\n         this.processStateToFilterItems(obj.compositeHealth.rebuildState, !isAggregationObject);\n         this.processStateToFilterItems(obj.compositeHealth.policyState, !isAggregationObject);\n      } else {\n         this.processStateToFilterItems(obj.healthState, !isAggregationObject);\n      }\n   }\n\n   private processStateToFilterItems(state: BaseHealthState, increaseCount: boolean): void {\n      if (!state || this.NON_FILTERABLE_STATES.some(nonFilterable => nonFilterable === state)) {\n         return;\n      }\n\n      let filterItem: HealthStateFilterItem = this.filterItems.find(item => item.healthState === state);\n      if (!filterItem) {\n         filterItem = {\n            healthState: state,\n            elementsCount: 0,\n            enabled: true, // filters are enabled at initialization,\n            selected: this.preselectedStates.some(preselectedState => preselectedState === state),\n         };\n         this.filterItems.push(filterItem);\n      }\n      if (increaseCount) {\n         filterItem.elementsCount++;\n      }\n   }\n\n   private applySelection(): void {\n      const selectedFilters: HealthStateFilterItem[] = this.getSelectedFilterItems();\n      if (!this.virtualObjects) {\n         this.filteredVirtualObjects = [];\n         return;\n      }\n      this.filteredVirtualObjects = JSON.parse(JSON.stringify(this.virtualObjects));\n      if (!VsanUiUtils.isEmpty(selectedFilters)) {\n         // filter root objects\n         this.filteredVirtualObjects = this.filteredVirtualObjects.filter(parentObject =>\n               this.isSelectionApplicableForParentObject(parentObject, true));\n      }\n      // the health status of root is built from statuses of children. Show only children which are accountable for\n      // current parent status\n      this.filteredVirtualObjects.forEach(parent => {\n         if (!VsanUiUtils.isEmpty(parent.children)) {\n            parent.children = parent.children.filter(child => this.matchesAnyOfSelected(child));\n         }\n      });\n\n      if (this.hasMultiSelection) {\n         // disable statuses that are from the same health category\n         this.changeFilterItemsAvailability();\n      }\n   }\n\n   private getSelectedFilterItems(): HealthStateFilterItem[] {\n      if (VsanUiUtils.isEmpty(this.filterItems)) {\n         return [];\n      }\n      return this.filterItems.filter(item => item.selected);\n   }\n\n   private isSelectionApplicableForParentObject(parentObject: VirtualObjectModel, checkChildren: boolean): boolean {\n      // 1. root object should have all selected states\n      if (this.matchesFullSelection(parentObject)) {\n         return true;\n      }\n      if (checkChildren) {\n         // 2. a child of the parent object should have all selected states\n         return !VsanUiUtils.isEmpty(parentObject.children) &&\n               parentObject.children.some(child => this.matchesFullSelection(child));\n      }\n   }\n\n   private matchesFullSelection(virtualObject: VirtualObjectModel): boolean {\n      const selectedFilters: HealthStateFilterItem[] = this.getSelectedFilterItems();\n      if (VsanUiUtils.isEmpty(selectedFilters)) {\n         return true;\n      }\n      return selectedFilters.every(selectedFilter =>\n            this.hasHealthMatch(selectedFilter.healthState, virtualObject.compositeHealth, virtualObject.healthState));\n   }\n\n   private matchesAnyOfSelected(virtualObject: VirtualObjectModel): boolean {\n      const selectedFilters: HealthStateFilterItem[] = this.getSelectedFilterItems();\n      if (VsanUiUtils.isEmpty(selectedFilters)) {\n         return true;\n      }\n      return selectedFilters.some(selectedFilter =>\n            this.hasHealthMatch(selectedFilter.healthState, virtualObject.compositeHealth, virtualObject.healthState));\n   }\n\n   private hasHealthMatch(baseState: BaseHealthState,\n         compositeHealth: VsanObjectCompositeHealth,\n         healthState: VsanObjectHealthState): boolean {\n      if (!compositeHealth) {\n         return baseState === healthState;\n      }\n\n      return baseState === compositeHealth.complianceState ||\n            baseState === compositeHealth.incomplianceReason ||\n            baseState === compositeHealth.rebuildState ||\n            baseState === compositeHealth.policyState;\n   }\n\n   private changeFilterItemsAvailability(): void {\n      const filteredRootsWithoutChildren: VirtualObjectModel[] = this.filteredVirtualObjects.filter(filteredObject =>\n            this.isSelectionApplicableForParentObject(filteredObject, false));\n      this.filterItems.forEach(filterItem => {\n         filterItem.enabled = filterItem.selected || filteredRootsWithoutChildren.some(virtualObject =>\n               this.hasHealthMatch(filterItem.healthState, virtualObject.compositeHealth, virtualObject.healthState));\n      });\n   }\n\n}\n\nexport interface HealthStateFilterItem {\n   healthState: BaseHealthState;\n   elementsCount: number;\n   enabled: boolean;\n   selected: boolean;\n}","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectorRef, Component, EventEmitter, Input} from \"@angular/core\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {\n   CompositeHealthStatesFilter,\n   HealthStateFilterItem,\n} from \"@component/virtual-objects-table/filter/composite-health-states-filter\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ObjectHealthComplianceState} from \"@generated/object-health-compliance-state\";\nimport {BaseHealthState, VsanHealthUtil} from \"@util/vsan-health-util\";\nimport {VsanObjectHealthState} from \"@generated/vsan-object-health-state\";\nimport {VirtualObjectsTableService} from \"@component/virtual-objects-table/virtual-objects-table.service\";\nimport {VirtualObjectType} from \"@generated/virtual-object-type\";\n\n@Component({\n   selector: \"vsan-virtual-objects-filterable-table\",\n   templateUrl: \"virtual-objects-filterable-table.html\",\n   styleUrls: [\"virtual-objects-filterable-table.scss\"],\n})\nexport class VirtualObjectsFilterableTableComponent {\n\n   selectedVirtualObjects: VirtualObjectModel[] = [];\n   private healthFilter: CompositeHealthStatesFilter = new CompositeHealthStatesFilter();\n   private _initialFilteredHealthStates: BaseHealthState[] = [];\n   private _virtualObjects: VirtualObjectModel[];\n   private hasAppliedFilters: boolean;\n\n   clearFiltersTrigger: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n   @Input()\n   set virtualObjects(value: VirtualObjectModel[]) {\n      if (this._virtualObjects === value) {\n         return;\n      }\n      this._virtualObjects = value;\n      this.healthFilter = new CompositeHealthStatesFilter(this._virtualObjects, this._initialFilteredHealthStates,\n            this.hasCompositeHealth());\n   }\n\n   get virtualObjects(): VirtualObjectModel[] {\n      return this._virtualObjects;\n   }\n\n   @Input()\n   set initialFilteredHealthStates(value: BaseHealthState[]) {\n      this._initialFilteredHealthStates = VsanUiUtils.isEmpty(value) ? [] : value;\n      if (!VsanUiUtils.isEmpty(value) && !VsanUiUtils.isEmpty(this._virtualObjects)) {\n         this.healthFilter = new CompositeHealthStatesFilter(this._virtualObjects, this._initialFilteredHealthStates,\n               this.hasCompositeHealth());\n      }\n   }\n\n   @Input()\n   initiallyFilteredName: string;\n\n   @Input()\n   initiallyFilteredTypes: VirtualObjectType[];\n\n   @Input()\n   presentVirtualObjectUuids: string[];\n\n   @Input()\n   loading: boolean;\n\n   constructor(private virtualObjectsTableService: VirtualObjectsTableService,\n         private changeDetector: ChangeDetectorRef) {}\n\n   get filteredVirtualObjects(): VirtualObjectModel[] {\n      return this.healthFilter.filteredVirtualObjects;\n   }\n\n   get filterItems(): HealthStateFilterItem[] {\n      return this.healthFilter.filterItems.sort(this.healthFilterItemCompare);\n   }\n\n   toggleHealthState(healthState: BaseHealthState): void {\n      this.healthFilter.toggleHealthState(healthState);\n   }\n\n   areFiltersVisible(): boolean {\n      if (!this.healthFilter || VsanUiUtils.isEmpty(this.healthFilter.filterItems)) {\n         return false;\n      }\n      // if there is only one filter, it shouldn't be \"Healthy\"\n      return this.healthFilter.filterItems && this.healthFilter.filterItems.length &&\n            (this.healthFilter.filterItems.length > 1 ||\n                  this.healthFilter.filterItems[0].healthState !== ObjectHealthComplianceState.COMPLIANT &&\n                  this.healthFilter.filterItems[0].healthState !== VsanObjectHealthState.HEALTHY);\n   }\n\n   appliedHealthStateFilters(): BaseHealthState[] {\n      return this.healthFilter.filterItems.filter(item => item.selected).map(item => item.healthState);\n   }\n\n   isClearHealthFiltersActionDisabled(): boolean {\n      return !this.hasAppliedFilters && !this.appliedHealthStateFilters?.length;\n   }\n\n   hasCompositeHealth(): boolean {\n      return this.virtualObjects?.some(object => !!object.compositeHealth);\n   }\n\n   clearHealthFilters(): void {\n      this.healthFilter = new CompositeHealthStatesFilter(this._virtualObjects, [], this.hasCompositeHealth());\n      this.virtualObjectsTableService.resetFilters();\n   }\n\n   onSelectionChanged(value: VirtualObjectModel[]): void {\n      this.selectedVirtualObjects = value;\n   }\n\n   onFilterChanged(hasAppliedFilters: boolean): void {\n      if (hasAppliedFilters === this.hasAppliedFilters) {\n         return;\n      }\n      this.hasAppliedFilters = hasAppliedFilters;\n      // avoid ExpressionChangedAfterItHasBeenCheckedError on click of \"Clear filters\" button, if there are applied\n      // filters in the datagrid columns\n      this.changeDetector.detectChanges();\n   }\n\n   private healthFilterItemCompare(a: HealthStateFilterItem, b: HealthStateFilterItem): number {\n      let indexA: number = VsanHealthUtil.HEALTH_STATES_ORDER.indexOf(a.healthState);\n      indexA = indexA ? indexA : VsanHealthUtil.HEALTH_STATES_ORDER.length;\n      let indexB: number = VsanHealthUtil.HEALTH_STATES_ORDER.indexOf(b.healthState);\n      indexB = indexB ? indexB : VsanHealthUtil.HEALTH_STATES_ORDER.length;\n      return indexA - indexB;\n   }\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Directive, ElementRef, Input} from \"@angular/core\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * Attribute directive for notifying screen reader users when the element state changes(enable or disable)\n */\n@Directive({\n   selector: \"[vsan-state-change]\",\n})\nexport class StateChangeDirective {\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   constructor(private el: ElementRef) {}\n\n   @Input(\"disabled\") set disabled(value: boolean) {\n      this.el.nativeElement.disabled = value;\n\n      const elementId: string = this.el.nativeElement.id;\n      if (elementId && document.getElementById(elementId)) {\n         const buttonText: string = document.getElementById(elementId).innerText;\n         this.srOnlyMessage = !value ?\n               VsanUiUtils.getString(\"vsan.common.srMessage.enable.button\", buttonText) :\n               VsanUiUtils.getString(\"vsan.common.srMessage.disable.button\", buttonText);\n      }\n   }\n}\n","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {HealthStateFilterItem} from \"@component/virtual-objects-table/filter/composite-health-states-filter\";\nimport {BaseHealthState, VsanHealthUtil} from \"@util/vsan-health-util\";\n\n@Component({\n   selector: \"vsan-composite-health-states-filter-item\",\n   templateUrl: \"composite-health-states-filter-item.html\",\n   styleUrls: [\"composite-health-states-filter-item.scss\"],\n})\nexport class CompositeHealthStatesFilterItemComponent {\n\n   @Input()\n   item: HealthStateFilterItem;\n\n   @Output()\n   onItemClicked: EventEmitter<BaseHealthState> = new EventEmitter<BaseHealthState>();\n\n   getEnabledItemClass(): string {\n      return VsanHealthUtil.getHealthStateLabelClass(this.item.healthState);\n   }\n\n   getBadgeColor(): string {\n      if (!this.item.enabled) {\n         return \"badge-disabled\";\n      }\n      if (VsanHealthUtil.isDangerHealthState(this.item.healthState)) {\n         return \"badge-danger\";\n      }\n      if (VsanHealthUtil.isWarningHealthState(this.item.healthState)) {\n         return \"badge-warning\";\n      }\n      if (VsanHealthUtil.isSuccessHealthState(this.item.healthState)) {\n         return \"badge-success\";\n      }\n   }\n\n}","<!-- Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div *ngIf=\"areFiltersVisible()\">\n   <vsan-composite-health-states-filter-item *ngFor=\"let item of filterItems\"\n                                             id=\"{{item.healthState}}\"\n                                             [item]=\"item\"\n                                             (onItemClicked)=\"toggleHealthState($event)\">\n   </vsan-composite-health-states-filter-item>\n</div>\n\n<div class=\"vsan-actions virtual-objects-action-buttons\">\n   <vsan-virtual-objects-actions [allItems]=\"virtualObjects\"\n                                 [selectedVirtualObjects]=\"selectedVirtualObjects\"\n                                 [loading]=\"loading\">\n   </vsan-virtual-objects-actions>\n   <clr-button-group class=\"btn-link\">\n      <clr-button id=\"clear-filters\"\n                  name=\"clear-filters\"\n                  class=\"btn btn-sm\"\n                  vsan-state-change\n                  [disabled]=\"isClearHealthFiltersActionDisabled()\"\n                  (click)=\"clearHealthFilters()\">\n         {{'vsan.monitor.cluster.virtualObjects.objects.clearFilters' | localized}}\n      </clr-button>\n   </clr-button-group>\n</div>\n\n<vsan-virtual-objects-table id=\"virtual-objects-table\"\n                            [allVirtualObjects]=\"virtualObjects\"\n                            [virtualObjects]=\"filteredVirtualObjects\"\n                            [appliedHealthStateFilters]=\"appliedHealthStateFilters()\"\n                            [nameFilterValue]=\"initiallyFilteredName\"\n                            [typeFilterValue]=\"initiallyFilteredTypes\"\n                            [presentVirtualObjectUuids]=\"presentVirtualObjectUuids\"\n                            [loading]=\"loading\"\n                            (selectionChanged)=\"onSelectionChanged($event)\"\n                            (filterChanged)=\"onFilterChanged($event)\">\n</vsan-virtual-objects-table>\n","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {\n   VirtualObjectsActionAvailabilityService,\n} from \"@component/virtual-objects-table/actions/validation/virtual-objects-action-availability.service\";\nimport {VirtualObjectsTypeUtil} from \"@component/virtual-objects-table/virtual-objects-type.util\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {PerformanceContext} from \"@navigation/context/performance-context\";\nimport {SharesContext} from \"@navigation/context/shares-context\";\nimport {VolumesContext} from \"@navigation/context/volumes-context\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {ActionAvailableStatus} from \"@util/validation/action-available-status\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VirtualObjectsUtil} from \"@vspherejsservices/virtual-objects/virtual-object-util\";\nimport {FileShareTypeFilterOptions} from \"../../../../file-services/shares/filters/file-share-type-filter-options\";\nimport {PerfMonitorViewType} from \"../../../../performance/model/perf-monitor-view-type.model\";\nimport {PlacementDetailsDialogContext} from \"../../../../virtualobjects/view/placement-details-dialog-context\";\n\n@Component({\n   selector: \"vsan-virtual-objects-actions\",\n   templateUrl: \"virtual-objects-actions.html\",\n   styleUrls: [\"virtual-objects-actions.scss\"],\n})\nexport class VirtualObjectsActionsComponent {\n\n   VirtualObjectsActionAvailabilityService: typeof VirtualObjectsActionAvailabilityService = VirtualObjectsActionAvailabilityService;\n\n   @Input()\n   loading: boolean;\n\n   @Input()\n   allItems: VirtualObjectModel[];\n\n   @Input()\n   selectedVirtualObjects: VirtualObjectModel[];\n\n   constructor(private navigationService: NavigationService,\n         private virtualObjectsActionAvailabilityService: VirtualObjectsActionAvailabilityService) {\n   }\n\n   actionDisabled(actionId: string): boolean {\n      return !this.getActionStatus(actionId).available;\n   }\n\n   getActionButtonTitle(actionId: string): string {\n      return this.getActionStatus(actionId).message;\n   }\n\n   private getActionStatus(actionId: string): ActionAvailableStatus {\n      return this.virtualObjectsActionAvailabilityService.checkAvailability({\n         actionId: actionId,\n         isLoading: this.loading,\n         selectedObjects: this.selectedVirtualObjects,\n      });\n   }\n\n   // View Physical Placement Details\n   viewPhysicalPlacementDetails(): void {\n      const placementDetailsContext: PlacementDetailsDialogContext = {\n         clusterRef: ManagedObject.contextObject,\n         virtualObjects: this.allItems,\n         selectedVirtualObjects: this.selectedVirtualObjects,\n      };\n      new ModalBuilder(\"virtualObjects/physicalPlacementDialog\")\n            .setDimensions(ModalBuilder.WIZARD_XL)\n            .open(placementDetailsContext);\n   }\n\n   // View Performance\n   hasObjectWithSupportedPerformance(): boolean {\n      return !VsanUiUtils.isEmpty(this.allItems)\n            && this.allItems.some(item =>\n                  VirtualObjectsTypeUtil.isVolume(item) ||\n                  VirtualObjectsTypeUtil.isVmWithAttachedVolume(item) ||\n                  VirtualObjectsTypeUtil.isFileShareOrFileVolume(item) ||\n                  VirtualObjectsTypeUtil.isVmdkOrAttachedFCD(item));\n   }\n\n   navigateToPerformanceView(selectedItem: VirtualObjectModel): void {\n      if (VirtualObjectsTypeUtil.isAttachedBlockVolume(selectedItem) ||\n            VirtualObjectsTypeUtil.isVmdkOrAttachedFCD(selectedItem)) {\n         this.navigateToVmPerfView(selectedItem);\n      } else {\n         this.navigateToFileSharesPerfView(selectedItem);\n      }\n   }\n\n   private navigateToVmPerfView(selectedItem: VirtualObjectModel): void {\n      const vmPerfContext: PerformanceContext = {\n         viewType: PerfMonitorViewType[PerfMonitorViewType.VM_VIRTUAL_DISK],\n         selectedEntityName: selectedItem.name,\n      };\n      this.navigationService.navigateTo(PlatformExtension.VM_PERFORMANCE, selectedItem.vmRef, vmPerfContext);\n   }\n\n   private navigateToFileSharesPerfView(selectedFileShare: VirtualObjectModel): void {\n      const selectedObjectName: string = this.getNavigationObjectName(\n            selectedFileShare, VirtualObjectsTypeUtil.isFileShare(selectedFileShare));\n\n      const fileSharePerfContext: PerformanceContext = {\n         viewType: PerfMonitorViewType[PerfMonitorViewType.CLUSTER_FILE_SERVICE],\n         selectedEntityName: selectedObjectName,\n      };\n      this.navigationService.navigateTo(PlatformExtension.CLUSTER_PERFORMANCE, null, fileSharePerfContext);\n   }\n\n   // View Volume\n   hasVolumeObject(): boolean {\n      return !VsanUiUtils.isEmpty(this.allItems) &&\n            this.allItems.some(item =>\n                  VirtualObjectsTypeUtil.isVmWithAttachedVolume(item) ||\n                  VirtualObjectsTypeUtil.isVolume(item));\n   }\n\n   navigateToVolumesView(): void {\n      const selectedObject: VirtualObjectModel = this.selectedVirtualObjects.find(\n            virtualObject => VirtualObjectsTypeUtil.isVolume(virtualObject));\n      const selectedObjectName: string = this.getNavigationObjectName(\n            selectedObject, VirtualObjectsTypeUtil.isFileVolume(selectedObject));\n\n      const cnsVolumesContext: VolumesContext = {\n         volumeName: selectedObjectName,\n      };\n      this.navigationService.navigateTo(PlatformExtension.CLUSTER_CNS_VOLUMES, null, cnsVolumesContext);\n   }\n\n   // View File Share\n   hasFileShareOrFileVolumeObject(): boolean {\n      return !VsanUiUtils.isEmpty(this.allItems) &&\n            this.allItems.some(item => VirtualObjectsTypeUtil.isFileShareOrFileVolume(item));\n   }\n\n   navigateToFileSharesView(): void {\n      const selectedObject: VirtualObjectModel = this.selectedVirtualObjects.find(\n            virtualObject => VirtualObjectsTypeUtil.isFileShareOrFileVolume(virtualObject));\n      const selectedObjectName: string = this.getNavigationObjectName(\n            selectedObject, VirtualObjectsTypeUtil.isFileShare(selectedObject));\n\n      const fileServiceSharesContext: SharesContext = {\n         preselectedShareName: selectedObjectName,\n         shareTypeFilter: VirtualObjectsTypeUtil.isFileShare(selectedObject)\n               ? FileShareTypeFilterOptions.FILE_SHARE\n               : FileShareTypeFilterOptions.CNS_VOLUME,\n      };\n      this.navigationService.navigateTo(PlatformExtension.FILE_SERVICE_SHARES, null, fileServiceSharesContext);\n   }\n\n   private getNavigationObjectName(object: VirtualObjectModel, searchInChildren: boolean): string {\n      const objectToGet: VirtualObjectModel = searchInChildren\n            ? this.findChild(object.uid)\n            : object;\n      if (VirtualObjectsTypeUtil.isAttachedBlockVolume(objectToGet)) {\n         // For attached CNS/Extension objects we have an extra (Hard Disk X) appended to the display name,\n         // Which won't match when navigating to CNS view. Use the plain name field instead.\n         return objectToGet.name;\n      }\n      return VirtualObjectsUtil.getName(objectToGet);\n   }\n\n   private findChild(uid: string): VirtualObjectModel {\n      return this.allItems\n            .filter(object => object && !VsanUiUtils.isEmpty(object.children))\n            .find(object => object.children.some(child => child && child.uid === uid));\n   }\n}\n","<!-- Copyright 2020-2021 VMware, Inc. All rights reserved. VMware Confidential -->\n\n<div class=\"btn-group\">\n   <!-- Placement details button -->\n   <clr-tooltip>\n      <span clrTooltipTrigger\n            [vsan-ignore-focus]=\"!actionDisabled(VirtualObjectsActionAvailabilityService.VIEW_PLACEMENT_DETAILS_ID)\">\n         <button id=\"{{VirtualObjectsActionAvailabilityService.VIEW_PLACEMENT_DETAILS_ID}}\"\n                 class=\"btn btn-sm btn-link no-spacing\"\n                 aria-describedby=\"view-placement-details-description\"\n                 vsan-state-change\n                 (click)=\"viewPhysicalPlacementDetails()\"\n                 [disabled]=\"actionDisabled(VirtualObjectsActionAvailabilityService.VIEW_PLACEMENT_DETAILS_ID)\">\n            {{\"vsan.monitor.cluster.virtualObjects.action.viewDetails\" | localized}}\n         </button>\n      </span>\n      <clr-tooltip-content id=\"view-placement-details-description\"\n                           clrPosition=\"top-right\"\n                           clrSize=\"lg\">\n         {{getActionButtonTitle(VirtualObjectsActionAvailabilityService.VIEW_PLACEMENT_DETAILS_ID)}}\n      </clr-tooltip-content>\n   </clr-tooltip>\n   <!-- View performance button -->\n   <clr-tooltip *ngIf=\"hasObjectWithSupportedPerformance()\">\n      <span clrTooltipTrigger\n            [vsan-ignore-focus]=\"!actionDisabled(VirtualObjectsActionAvailabilityService.VIEW_PERFORMANCE_ID)\">\n         <button id=\"{{VirtualObjectsActionAvailabilityService.VIEW_PERFORMANCE_ID}}\"\n                 class=\"btn btn-sm btn-link no-spacing\"\n                 aria-describedby=\"view-performance-description\"\n                 vsan-state-change\n                 (click)=\"navigateToPerformanceView(this.selectedVirtualObjects[0])\"\n                 [disabled]=\"actionDisabled(VirtualObjectsActionAvailabilityService.VIEW_PERFORMANCE_ID)\">\n            {{\"vsan.monitor.cluster.virtualObjects.action.navigateToPerformanceView\" | localized}}\n         </button>\n      </span>\n      <clr-tooltip-content id=\"view-performance-description\"\n                           clrPosition=\"top-right\"\n                           clrSize=\"lg\">\n         {{getActionButtonTitle(VirtualObjectsActionAvailabilityService.VIEW_PERFORMANCE_ID)}}\n      </clr-tooltip-content>\n   </clr-tooltip>\n   <!-- Buttons for navigating to Volumes view and File Shares view:\n         1) If there are no file share objects/volume objects at all hide navigation buttons.\n         2) If file share objects/volume objects present but selected count is different\n        than 1 disable the corresponding button.\n   -->\n   <clr-tooltip *ngIf=\"hasVolumeObject()\">\n      <span clrTooltipTrigger\n            [vsan-ignore-focus]=\"!actionDisabled(VirtualObjectsActionAvailabilityService.VIEW_VOLUME_ID)\">\n         <button id=\"{{VirtualObjectsActionAvailabilityService.VIEW_VOLUME_ID}}\"\n                 class=\"btn btn-sm btn-link no-spacing\"\n                 aria-describedby=\"view-volumes-description\"\n                 vsan-state-change\n                 (click)=\"navigateToVolumesView()\"\n                 [disabled]=\"actionDisabled(VirtualObjectsActionAvailabilityService.VIEW_VOLUME_ID)\">\n            {{\"vsan.monitor.cluster.virtualObjects.action.navigateToCnsVolumes\" | localized}}\n         </button>\n      </span>\n      <clr-tooltip-content id=\"view-volumes-description\"\n                           clrPosition=\"top-right\"\n                           clrSize=\"lg\">\n         {{getActionButtonTitle(VirtualObjectsActionAvailabilityService.VIEW_VOLUME_ID)}}\n      </clr-tooltip-content>\n   </clr-tooltip>\n   <clr-tooltip *ngIf=\"hasFileShareOrFileVolumeObject()\">\n      <span clrTooltipTrigger\n            [vsan-ignore-focus]=\"!actionDisabled(VirtualObjectsActionAvailabilityService.VIEW_FILE_SHARE)\">\n         <button id=\"{{VirtualObjectsActionAvailabilityService.VIEW_FILE_SHARE}}\"\n                 class=\"btn btn-sm btn-link no-spacing\"\n                 aria-describedby=\"view-file-shares-description\"\n                 vsan-state-change\n                 (click)=\"navigateToFileSharesView()\"\n                 [disabled]=\"actionDisabled(VirtualObjectsActionAvailabilityService.VIEW_FILE_SHARE)\">\n            {{\"vsan.monitor.cluster.virtualObjects.action.navigateToFileShares\" | localized}}\n         </button>\n      </span>\n      <clr-tooltip-content id=\"view-file-shares-description\"\n                           clrPosition=\"top-right\"\n                           clrSize=\"lg\">\n         {{getActionButtonTitle(VirtualObjectsActionAvailabilityService.VIEW_FILE_SHARE)}}\n      </clr-tooltip-content>\n   </clr-tooltip>\n</div>\n\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nexport enum FileShareTypeFilterOptions {\n   FILE_SHARE = \"user\",\n   CNS_VOLUME = \"cns\",\n   ALL = \"All\"\n}","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<!-- disabled filter item -->\n<span *ngIf=\"!item.enabled\"\n      class=\"label disabled-item\"\n      [title]=\"item.healthState | healthStateLabel\">\n   {{item.healthState | healthStateLabel}}\n   <span class=\"badge\">\n      {{item.elementsCount}}\n   </span>\n</span>\n\n<!-- enabled filter item -->\n<a *ngIf=\"item.enabled\"\n   href=\"javascript://\"\n   class=\"label clickable\"\n   [ngClass]=\"getEnabledItemClass()\"\n   [class.not-selected]=\"!item.selected\"\n   [title]=\"item.healthState | healthStateLabel\"\n   (click)=\"onItemClicked.emit(item.healthState)\">\n   {{item.healthState | healthStateLabel}}\n   <span class=\"badge\"\n         [ngClass]=\"getBadgeColor()\">\n      {{item.elementsCount}}\n   </span>\n</a>"]}