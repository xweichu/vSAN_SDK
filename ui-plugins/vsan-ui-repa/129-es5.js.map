{"version":3,"sources":["webpack:///src/app/vsan/performance/io-insight/wizard/new-io-insight-wizard.component.ts","webpack:///src/app/vsan/performance/io-insight/wizard/settings-page.html","webpack:///src/app/vsan/performance/io-insight/wizard/new-io-insight-wizard.html","webpack:///src/app/vsan/performance/io-insight/wizard/select-target-page.component.ts","webpack:///src/app/vsan/performance/io-insight/wizard/summary-page.component.ts","webpack:///src/app/vsan/performance/io-insight/wizard/settings-page.component.ts","webpack:///src/app/vsan/performance/io-insight/wizard/new-io-insight.module.ts","webpack:///src/app/vsan/performance/io-insight/wizard/summary-page.html","webpack:///src/app/vsan/performance/io-insight/wizard/select-target-page.html"],"names":["NewIoInsightWizardComponent","services","setWizardContext","context","objectRef","contextObject","preselectedMoRef","canPreselctMoRef","pages","type","HOST","VM","SelectTargetPageComponent","ioInsightInventoryService","targetInventoryNodes","_hostRefs","clusterObject","moRef","CLUSTER","inventoryRoot","clusterRef","nodes","resetPage","buildHostRefs","filter","node","data","isLeafNode","childrenFetched","map","nodeRef","areEqual","vmHostRef","forEach","hostNode","expanded","pageControls","clearValidationErrors","required","ifEmpty","getString","SummaryPageComponent","convertToTreeNodes","entities","vms","length","entity","childVms","vm","hostRef","poweredOnVsanVms","isPoweredOn","isVsanVm","name","Factory","create","iconShape","convertVMToTreeNodes","getSelectedChildrenCount","childNodes","treeNode","child","selected","isExpanded","toSeconds","duration","durationUnit","result","push","hostVms","MINUTES","vmRef","primaryIconId","errors","SettingsPageComponent","INSTANCE_NAME_MAX_LENGTH","now","Date","objectName","selectedHost","selectedVMs","x","selectedVm","instanceName","DATE_FORMATTER","transform","NO_SECONDS","durationErrors","addValidationErrors","validatorProperty","routes","path","component","NewIoInsightModule"],"mappings":"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","file":"129-es5.js","sourcesContent":["/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {PageSet} from \"@component/wizard/flow-wizard.component\";\nimport {SummaryPageComponent} from \"./summary-page.component\";\nimport {SelectTargetPageComponent} from \"./select-target-page.component\";\nimport {SettingsPageComponent} from \"./settings-page.component\";\nimport {ManagedObject, ManagedObjectUtils} from \"@service/managed-object\";\nimport {NewIoInsightWizardContextData} from \"./new-io-insight-wizard-context.data\";\nimport {CreateIoInsightService} from \"@generated/create-io-insight-service\";\n\n@Component({\n   templateUrl: \"new-io-insight-wizard.html\",\n   selector: \"vsan-new-io-insight-wizard\"\n})\nexport class NewIoInsightWizardComponent implements OnInit {\n   /**\n    * Holds wizard context data, shared between all the pages.\n    */\n   context: NewIoInsightWizardContextData;\n   errorMessage: string;\n   services: any[] = [CreateIoInsightService];\n\n   async ngOnInit() {\n      this.setWizardContext();\n   }\n\n   private setWizardContext = () => {\n      this.context = {\n         objectRef: ManagedObject.contextObject,\n         preselectedMoRef: this.canPreselctMoRef() ?\n               ManagedObject.contextObject:\n               null\n      }\n   }\n\n   private canPreselctMoRef() : boolean {\n      return ManagedObject.contextObject.type === ManagedObjectUtils.HOST ||\n            ManagedObject.contextObject.type === ManagedObjectUtils.VM;\n   }\n\n   pages: PageSet[] = [\n      new PageSet([SelectTargetPageComponent]),\n      new PageSet([SettingsPageComponent]),\n      new PageSet([SummaryPageComponent]),\n   ];\n}","<!-- Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<form class=\"clr-form clr-form-horizontal\">\n   <div class=\"clr-form-control control-full-width clr-row\">\n      <label for=\"name-input\" class=\"clr-control-label clr-col-2\">\n         {{\"vsan.io.insight.wizard.settingsPage.name\" | localized}}\n      </label>\n      <div class=\"clr-control-container\">\n         <div class=\"clr-input-wrapper\">\n            <input clrInput\n                   id=\"name-input\"\n                   name=\"nameSelector\"\n                   type=\"text\"\n                   [(ngModel)]=\"instanceName\"\n                   [maxLength]=\"INSTANCE_NAME_MAX_LENGTH\"/>\n         </div>\n      </div>\n   </div>\n   <vsan-io-insight-duration-input (onValidationErrors)=\"onDurationValidationErrors($event)\"\n                                      [(duration)]=\"duration\"\n                                      [(durationUnit)]=\"durationUnit\">\n   </vsan-io-insight-duration-input>\n</form>\n<vsan-validation [allowClose]=\"false\"\n                 [alert]=\"'vsan.io.insight.wizard.settingsPage.info' | localized\"\n                 alertType=\"info\">\n</vsan-validation>","<vsan-validation *ngIf=\"errorMessage\" [alert]=\"errorMessage\" [allowClose]=\"false\"></vsan-validation>\n<vsan-flow-wizard\n      [title]=\"'vsan.io.insight.wizard.title' | localized\"\n      [pageSets]=\"pages\"\n      [contextProperties]=\"context\"\n      startingTaskProperty=\"createIoInsightInstance\"\n      [services]=\"services\">\n</vsan-flow-wizard>\n","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {InputProperty, OutputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject, ManagedObjectUtils} from \"@service/managed-object\";\nimport {IoInsightInventoryService} from \"@generated/io-insight-inventory-service\";\nimport {PageControls} from \"@component/wizard/flow-wizard.component\";\nimport * as ManagedObjectData from \"@generated/inventory-node\";\nimport {InventoryNode} from \"@component/inventory/inventory-node\";\n\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.io.insight.wizard.selectTarget.title\"),\n      VsanUiUtils.getString(\"vsan.io.insight.wizard.selectTarget.description\")\n)\n@Component({\n   templateUrl: \"select-target-page.html\",\n   styleUrls: [\"select-target-page.scss\"],\n})\nexport class SelectTargetPageComponent implements OnInit {\n   inventoryRoot: ManagedObject[];\n\n   @InputProperty()\n   clusterObject: ManagedObjectData.InventoryNode;\n\n   @InputProperty()\n   vmHostRef: ManagedObject;\n\n   @InputProperty(InputProperty.required(false))\n   preselectedMoRef: ManagedObject;\n\n   @InputProperty()\n   private pageControls: PageControls;\n\n   @OutputProperty(OutputProperty.ifEmpty(VsanUiUtils.getString(\n         \"vsan.io.insight.wizard.selectTarget.noTargetSelected.error\")))\n   targetInventoryNodes: InventoryNode[] = [];\n\n   private _hostRefs: ManagedObject[] = [];\n\n   @OutputProperty()\n   get hostRefs(): ManagedObject[] {\n      return this._hostRefs;\n   }\n\n   @OutputProperty()\n   get clusterRef(): ManagedObject {\n      return this.clusterObject.moRef;\n   }\n\n   get selectAllNodes(): boolean {\n      // for cluster all child hosts should be selected\n      return ManagedObject.contextObject.type === ManagedObjectUtils.CLUSTER;\n   }\n\n   constructor(public ioInsightInventoryService: IoInsightInventoryService) {}\n\n   ngOnInit(): void {\n      this.inventoryRoot = [this.clusterRef];\n   }\n\n   nodesChanged(nodes: InventoryNode[]): void {\n      this.resetPage();\n      this.targetInventoryNodes = nodes;\n      this.buildHostRefs();\n   }\n\n   private buildHostRefs(): void {\n      this._hostRefs = this.targetInventoryNodes\n            .filter(node => !node.data.isLeafNode && !node.childrenFetched)\n            .map(node => node.data.nodeRef);\n   }\n\n   rootNodesReceived(nodes: InventoryNode[]): void {\n      // expand parent host node, in order the preselected VM to be visible\n      if (this.preselectedMoRef && this.preselectedMoRef.type === ManagedObjectUtils.VM) {\n         nodes.filter(node => ManagedObject.areEqual(node.data.nodeRef, this.vmHostRef))\n               .forEach(hostNode => hostNode.expanded = true);\n      }\n   }\n\n   resetPage(): void {\n      this.pageControls.clearValidationErrors();\n      this.targetInventoryNodes = [];\n   }\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {InputProperty, OutputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {InventoryNode} from \"@component/inventory/inventory-node\";\nimport {InventoryNode as ManagedObjectInfo} from \"@generated/inventory-node\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {DurationUnit} from \"@pipe/DurationPipe\";\nimport {TreeNode} from \"@component/inventory/tree-view/tree-node\";\nimport {PageControls} from \"@component/wizard/flow-wizard.component\";\nimport {BasicVmData} from \"@generated/basic-vm-data\";\nimport {PageItem} from \"@component/wizard/page-item\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\nimport {SummaryVmData} from \"@generated/summary-vm-data\";\n\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.io.insight.wizard.summaryPage.title\"),\n      null,\n)\n@Component({\n   templateUrl: \"summary-page.html\",\n   styleUrls: [\"summary-page.scss\"],\n})\nexport class SummaryPageComponent implements OnInit {\n   nodes: TreeNode[];\n\n   @InputProperty()\n   pageControls: PageControls;\n\n   @InputProperty()\n   instanceName: string;\n\n   @InputProperty()\n   duration: number;\n\n   @InputProperty()\n   durationUnit: DurationUnit;\n\n   @InputProperty()\n   targetInventoryNodes: InventoryNode[];\n\n   @InputProperty()\n   hostVms: SummaryVmData[];\n\n   @OutputProperty()\n   get durationSeconds(): number {\n      return VsanDateTimeUtils.toSeconds(this.duration, this.durationUnit);\n   }\n\n   @OutputProperty()\n   get hosts(): ManagedObject[] {\n      return this.targetInventoryNodes.map(node => node.data.nodeRef);\n   }\n\n   @OutputProperty()\n   get vms(): ManagedObject[] {\n      const result: ManagedObject[] = [];\n      this.targetInventoryNodes.map(node => {\n         node.childNodes.filter(child => child.selected).forEach(child => result.push(child.data.nodeRef));\n      });\n      return result;\n   }\n\n   async ngOnInit() {\n      this.nodes = this.convertToTreeNodes(this.targetInventoryNodes, this.hostVms);\n   }\n\n   get durationLabel(): string {\n      if (this.durationUnit === DurationUnit.MINUTES) {\n         return this.duration === 1 ?\n               VsanUiUtils.getString(\"vsan.time.common.minute\") :\n               VsanUiUtils.getString(\"vsan.time.common.minutes\", this.duration);\n      } else {\n         return this.duration === 1 ?\n               VsanUiUtils.getString(\"vsan.time.common.hour\") :\n               VsanUiUtils.getString(\"vsan.time.common.hours\", this.duration);\n      }\n   }\n\n   private convertToTreeNodes = (entities: InventoryNode[], vms: SummaryVmData[]): TreeNode[] => {\n      if (!entities || entities.length === 0) {\n         return [];\n      }\n      return entities.map(entity => {\n         if (!entity.data.isLeafNode && !entity.childrenFetched) {\n            const childVms = vms.filter(vm => ManagedObject.areEqual(entity.data.nodeRef, vm.hostRef));\n            const poweredOnVsanVms = childVms.filter(vm => vm.isPoweredOn && vm.isVsanVm);\n            const name = VsanUiUtils.getString(\n                  \"vsan.io.insight.wizard.summary.targetNode.name\",\n                  entity.data.name, poweredOnVsanVms.length, childVms.length);\n            return new TreeNode(\n                  ManagedObjectInfo.Factory.create(entity.data.nodeRef, name, entity.data.iconShape),\n                  this.convertVMToTreeNodes(poweredOnVsanVms),\n            );\n         } else {\n            const name = entity.data.isLeafNode ? entity.data.name :\n                  VsanUiUtils.getString(\n                        \"vsan.io.insight.wizard.summary.targetNode.name\",\n                        entity.data.name, this.getSelectedChildrenCount(entity), entity.childNodes.length);\n            const treeNode = new TreeNode(\n                  ManagedObjectInfo.Factory.create(entity.data.nodeRef, name, entity.data.iconShape),\n                  this.convertToTreeNodes(entity.childNodes.filter(child => child.selected), vms),\n            );\n            treeNode.isExpanded = true;\n            return treeNode;\n         }\n      });\n   };\n\n   private convertVMToTreeNodes(vms: SummaryVmData[]): TreeNode[] {\n      if (!vms && vms.length === 0) {\n         return [];\n      }\n      return vms.map(vm => {\n         return new TreeNode(ManagedObjectInfo.Factory.create(vm.vmRef, vm.name, vm.primaryIconId), null);\n      });\n   }\n\n   getSelectedChildrenCount(node: InventoryNode): number {\n      return node.childNodes.filter(child => child.selected).length;\n   }\n\n   get hasErrors(): boolean {\n      return (this.pageControls as PageItem).errors.length > 0;\n   }\n}","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {InputProperty, OutputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {OnValidate, PageControls} from \"@component/wizard/flow-wizard.component\";\nimport {DurationUnit} from \"@pipe/DurationPipe\";\nimport * as ManagedObjectData from \"@generated/inventory-node\";\nimport {InventoryNode} from \"@component/inventory/inventory-node\";\nimport {DateFormat, VsanDateFormatterPipe} from \"@pipe/VsanDateFormatterPipe\";\n\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.io.insight.wizard.settingsPage.title\"),\n)\n@Component({\n   templateUrl: \"settings-page.html\",\n   styleUrls: [\"settings-page.scss\"],\n})\nexport class SettingsPageComponent implements OnInit, OnValidate {\n   private static readonly DATE_FORMATTER: VsanDateFormatterPipe = new VsanDateFormatterPipe();\n\n   readonly INSTANCE_NAME_MAX_LENGTH: number = 256;\n\n   private durationErrors: string[];\n\n   @InputProperty()\n   private clusterObject: ManagedObjectData.InventoryNode;\n\n   @InputProperty()\n   private pageControls: PageControls;\n\n   @InputProperty()\n   targetInventoryNodes: InventoryNode[];\n\n   @OutputProperty(OutputProperty.validatorProperty(\"isInstanceNameValid\"))\n   instanceName: string;\n\n   @OutputProperty(OutputProperty.ifEmpty(VsanUiUtils.getString(\n         \"vsan.io.insight.wizard.settingsPage.noDuration.error\")))\n   duration: number = 10;\n\n   @OutputProperty()\n   durationUnit: DurationUnit = DurationUnit.MINUTES;\n\n   ngOnInit(): void {\n      const now: Date = new Date();\n      let objectName: string = this.clusterObject.name;\n\n      if (this.targetInventoryNodes.length === 1) {\n         const selectedHost: InventoryNode = this.targetInventoryNodes[0];\n\n         const selectedVMs: InventoryNode[] = selectedHost.childNodes.filter(x => x.selected);\n         // Only 1 vm is selected, then use vm name\n         if (selectedVMs.length === 1) {\n            const selectedVm: InventoryNode = selectedVMs[0];\n            objectName = selectedVm.data.name;\n         } else {\n            // Only 1 host with multiple vms is selected, then use host name\n            objectName = selectedHost.data.name;\n         }\n      }\n\n      this.instanceName = VsanUiUtils.getString(\"vsan.io.insight.wizard.settingsPage.defaultName\", objectName,\n                  SettingsPageComponent.DATE_FORMATTER.transform(now, DateFormat.NO_SECONDS));\n   }\n\n   onDurationValidationErrors(errors: string[]) {\n      this.pageControls.clearValidationErrors();\n      this.durationErrors = errors;\n      this.pageControls.addValidationErrors(this.durationErrors);\n   }\n\n   validate(): string[] {\n      return this.durationErrors && this.durationErrors.length\n            ? this.durationErrors\n            : null;\n   }\n}","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {VsanCommonModule} from \"app/vsan/common/vsan-common.module\";\nimport {FlowWizardModule} from \"@component/wizard/flow-wizard.module\";\nimport {NewIoInsightWizardComponent} from \".//new-io-insight-wizard.component\";\nimport {SelectTargetPageComponent} from \".//select-target-page.component\";\nimport {SettingsPageComponent} from \".//settings-page.component\";\nimport {SummaryPageComponent} from \".//summary-page.component\";\nimport {IoInsightActionsModule} from \"../action/io-insight-actions.module\";\n\nconst routes: Routes = [\n   {\n      path: \"newIoInsightWizard\",\n      component: NewIoInsightWizardComponent\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      VsanCommonModule,\n      FlowWizardModule,\n      RouterModule.forChild(routes),\n      IoInsightActionsModule\n   ],\n   declarations: [\n      NewIoInsightWizardComponent,\n      SelectTargetPageComponent,\n      SettingsPageComponent,\n      SummaryPageComponent,\n   ],\n   entryComponents: [\n      SelectTargetPageComponent,\n      SettingsPageComponent,\n      SummaryPageComponent,\n   ]\n})\nexport class NewIoInsightModule {\n}","<vsan-validation [allowClose]=\"false\"\n                 *ngIf=\"!hasErrors\"\n                 [alert]=\"'vsan.io.insight.wizard.summary.infoLabel' | localized\"\n                 alertType=\"info\">\n</vsan-validation>\n\n<!-- Instance name -->\n<form class=\"clr-form-horizontal\">\n   <div class=\"clr-row\">\n      <label class=\"clr-control-label clr-col-2\">{{'vsan.io.insight.wizard.summary.runNameLabel' | localized}}</label>\n      <span vsan-show-title id=\"instance-name-entry\">\n         {{instanceName}}\n      </span>\n   </div>\n\n   <div class=\"clr-row\">\n      <label class=\"clr-control-label clr-col-2\">{{'vsan.io.insight.wizard.summary.durationLabel' | localized}}</label>\n      <span id=\"duration-entry\">\n         {{durationLabel}}\n      </span>\n   </div>\n\n   <div class=\"clr-row\">\n      <label class=\"clr-control-label clr-col-12\">{{'vsan.io.insight.wizard.summary.targetLabel' | localized}}</label>\n   </div>\n\n   <vsan-tree-view\n         [nodes]=\"nodes\"\n         [showSearch]=\"false\"\n         class=\"tree-view-no-padding\">\n   </vsan-tree-view>\n</form>\n","<!-- Inventory list -->\n<ng-template #selectAllNodesHeader>\n   {{\"vsan.io.insight.wizard.selectTarget.monitorWholeCluster.label\" | localized}}\n   <clr-icon [attr.shape]=\"clusterObject.primaryIconId\"></clr-icon>\n   {{clusterObject.name}}\n</ng-template>\n<vsan-inventory-browser\n      id=\"ioinsight-inventory-browser\"\n      [inventoryService]=\"ioInsightInventoryService\"\n      [showCheckBoxes]=\"true\"\n      [objRefs]=\"inventoryRoot\"\n      [preselectedNodes]=\"[preselectedMoRef]\"\n      (selectedNodesChanged)=\"nodesChanged($event)\"\n      (rootNodesReceived)=\"rootNodesReceived($event)\"\n      [showSelectAllNodes]=\"true\"\n      [selectAllNodesHeader]=\"selectAllNodesHeader\"\n      [selectAllNodes]=\"selectAllNodes\"\n      [searchInputAriaLabelKey]=\"'vsan.io.insight.wizard.selectTarget.monitorWholeCluster.searchInputAriaLabel'\">\n</vsan-inventory-browser>\n"]}