{"version":3,"sources":["webpack:///src/app/vsan/shared-witness/dialog/reassign-witness-precheck-dialog.html","webpack:///src/app/vsan/shared-witness/wizard/select-clusters-page.html","webpack:///src/app/vsan/shared-witness/wizard/ready-to-complete-page.component.ts","webpack:///src/app/vsan/shared-witness/wizard/select-host-and-clusters-page.component.ts","webpack:///src/app/vsan/shared-witness/dialog/reassign-witness-precheck-dialog.component.ts","webpack:///src/app/vsan/shared-witness/wizard/ready-to-complete-page.html","webpack:///src/app/vsan/shared-witness/wizard/reassign-witness-wizard.component.ts","webpack:///src/app/vsan/shared-witness/wizard/add-clusters-wizard.component.ts","webpack:///src/app/vsan/shared-witness/wizard/select-clusters-page.component.ts","webpack:///src/app/vsan/shared-witness/wizard/select-host-and-clusters-page.html","webpack:///src/app/vsan/shared-witness/dialog/add-clusters-precheck-dialog.html","webpack:///src/app/vsan/shared-witness/wizard/add-clusters-wizard.component.ts.AddClustersWizardComponent.html","webpack:///src/app/vsan/shared-witness/wizard/reassign-witness-wizard.component.ts.ReassignWitnessWizardComponent.html","webpack:///src/app/vsan/shared-witness/dialog/add-clusters-precheck-dialog.component.ts","webpack:///src/app/vsan/shared-witness/wizard/shared-witness-wizard.module.ts"],"names":["ReadyToCompletePageComponent","selectedClusters","sort","c1","c2","name","localeCompare","lbaToBytes","witnessHostDiskMapping","ssd","capacity","nonSsd","reduce","sum","disk","required","getString","SelectHostAndClustersPageComponent","witnessHostService","hostInventoryService","sharedWitnessService","diskManagementService","validationMessages","validationAlertType","SUCCESS","assignedClustersCount","witnessAssignedClusters","selectedClustersAll","skipWitnessValidation","hasDiskGroupsOnWitness","inventoryRoot","vcRoot","contextObject","serverGuid","setInventoryFilterContext","clustersData","currentWitnessHost","filterContext","Map","set","CURRENT_WITNESS_HOST_REF","event","closeHostSelectionDropDown","item","node","witnessHost","data","nodeRef","componentsLimit","setHostData","validateCompatibility","isHost","witnessHostNode","Factory","create","iconShape","hasValidationError","setPageControlErrors","resetValidation","DANGER","push","setAssignedClusters","length","isEmpty","validateSharedWitnessHost","pageControls","setValidationErrors","rebuildToc","collect","filter","selClsInfo","isClusterWitnessedByCurrentHost","clustersRefs","map","c","moRef","clsInfo","some","assignedClsRef","areEqual","setBusyState","Promise","all","getValidateNewWitnessHost","getMaxComponentsPerCluster","getHostDisksClaimingData","hostValidationResult","witnessClaimDisksData","hasDiskGroups","clustersValidationData","updateClustersValidation","witnessValidationResult","witnessHostValidation","handleSharedWitnessHostValidationResult","handleHostValidationError","clearBusyState","type","HOST","COMPUTE_RESOURCE","clearValidationErrors","document","getElementById","click","assignedClustersMessage","INFO","isNumericValue","ifNull","ReassignWitnessPrecheckDialogComponent","configureSharedWitnessWorkflowBacking","loading","showPrecheck","contextObjects","MAX_NUMBER_OF_SHARED_CLUSTERS","reassignWitness","getClustersNodes","reassignWizardContext","setModalDialogHeight","ReassignWitnessWizardComponent","services","pages","context","getModalContext","error","AddClustersWizardComponent","hostRef","SelectClustersPageComponent","twoNodeClusters","JSON","parse","stringify","result","i","cluster","getClusterDataByRef","bind","clusterRef","find","clusterData","uid","ifEmpty","named","AddClustersPrecheckDialogComponent","sharedWitnessValidationService","sharedWitnessHostService","stretchedClusterService","vsanCapabilityProvider","witnessHostName","getIsSharedWitnessSupported","isSharedWitnessSupported","validationMessage","querySharedWitnessPrecheckCompatibility","witnessHostCompatibility","Object","keys","validationError","DIALOG_HEIGHT_LARGE","sharedWitnessHostWizardRoutes","path","REASSIGN_WITNESS_WIZARD","component","ADD_CLUSTERS_WIZARD","ADD_CLUSTERS_PRECHECK_DIALOG","REASSIGN_WITNESS_PRECHECK_DIALOG","SharedWitnessWizardModule"],"mappings":"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","file":"117-es5.js","sourcesContent":["<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-info-prompt *ngIf=\"showPrecheck\"\n                  [(alertMessages)]=\"validationMessages\"\n                  [allowAlertClose]=\"false\"\n                  [blockContent]=\"loading\"\n                  [title]=\"'vsan.cluster.sharedWitness.reassignWitnessPrecheck.dialog.title' | localized\">\n</vsan-info-prompt>\n<vsan-assign-witness-wizard *ngIf=\"!showPrecheck\"\n                            [context]=\"reassignWizardContext\">\n</vsan-assign-witness-wizard>","<!-- Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-select-clusters [twoNodeClusters]=\"twoNodeClusters\"\n                      [clustersValidationData]=\"clustersValidationData\"\n                      (selectionChanged)=\"selectionChanged($event)\"\n                      (validateCompatibility)=\"validateCompatibility()\"\n                      [witnessLimits]=\"sharedWitnessLimits\">\n</vsan-select-clusters>","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {InputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanDiskMapping} from \"@generated/vsan-disk-mapping\";\nimport {DiskMgmtUtil} from \"@util/disk-mgmt.util\";\nimport {InventoryNode} from \"@generated/inventory-node\";\n\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.host.sharedWitness.reassign.wizard.summary.title\"),\n)\n@Component({\n   templateUrl: \"ready-to-complete-page.html\",\n   styleUrls: [\"ready-to-complete-page.scss\"],\n})\nexport class ReadyToCompletePageComponent {\n\n   @InputProperty()\n   selectedClusters: InventoryNode[];\n\n   @InputProperty()\n   witnessHost: ManagedObject;\n\n   @InputProperty()\n   witnessHostNode: InventoryNode;\n\n   @InputProperty(InputProperty.required(false))\n   witnessHostDiskMapping: VsanDiskMapping;\n\n   ngOnInit() {\n      this.selectedClusters = this.selectedClusters.sort((c1, c2) =>\n            c1.name.localeCompare(c2.name));\n   }\n\n   claimedCache(): number {\n      return DiskMgmtUtil.lbaToBytes(this.witnessHostDiskMapping.ssd.capacity);\n   }\n\n   claimedCapacity(): number {\n      return this.witnessHostDiskMapping.nonSsd.reduce((sum, disk) => sum += DiskMgmtUtil.lbaToBytes(disk.capacity), 0);\n   }\n}","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {InventoryNode} from \"@component/inventory/inventory-node\";\nimport {AlertType} from \"@component/validation/alert-type\";\nimport {InputProperty, OutputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {OnValidate, PageControls} from \"@component/wizard/flow-wizard.component\";\nimport {ConfigureSharedWitnessWorkflowBacking} from \"@generated/configure-shared-witness-workflow-backing\";\nimport {DiskManagementService} from \"@generated/disk-management-service\";\nimport {FilterContextKey} from \"@generated/filter-context-key\";\nimport {InventoryNode as InventoryNodeInfo} from \"@generated/inventory-node\";\nimport {SharedWitnessClusterValidationData} from \"@generated/shared-witness-cluster-validation-data\";\nimport {VsanClaimDisksData} from \"@generated/vsan-claim-disks-data\";\nimport {VsanDiskMapping} from \"@generated/vsan-disk-mapping\";\nimport {WitnessCandidateInventoryService} from \"@generated/witness-candidate-inventory-service\";\nimport {WitnessHostValidationResult} from \"@generated/witness-host-validation-result\";\nimport {ManagedObject, ManagedObjectUtils} from \"@service/managed-object\";\nimport {WitnessHostValidation, WitnessValidationService} from \"@service/witness-validation.service\";\nimport {DiskMgmtUtil} from \"@util/disk-mgmt.util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"select-host-and-clusters-page.html\",\n   styleUrls: [\"select-host-and-clusters-page.scss\"],\n})\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.host.sharedWitness.reassign.wizard.selectClusters.title\"),\n)\nexport class SelectHostAndClustersPageComponent implements OnInit, OnValidate {\n\n   inventoryRoot: ManagedObject[];\n   filterContext: Map<FilterContextKey, ManagedObject>;\n   validationMessages: string[] = [];\n   validationAlertType: AlertType = AlertType.SUCCESS;\n   componentsLimit: number;\n   clustersValidationData: Map<string, SharedWitnessClusterValidationData>;\n   assignedClustersCount: number = 0;\n   witnessAssignedClusters: ManagedObject[] = [];\n\n   // Selected clusters including ones witnessed by the current host\n   selectedClustersAll: InventoryNodeInfo[] = [];\n\n   // Flag to track if currently selected host & clusters have been validated against backend\n   private skipWitnessValidation: boolean = false;\n\n   @InputProperty()\n   private pageControls: PageControls;\n\n   @InputProperty(InputProperty.required(false))\n   currentWitnessHost: ManagedObject;\n\n   @InputProperty()\n   clustersData: InventoryNodeInfo[];\n\n   // Selected clusters excluding ones witnessed by the current host\n   @OutputProperty()\n   selectedClusters: InventoryNodeInfo[] = [];\n\n   @OutputProperty()\n   clustersRefs: ManagedObject[];\n\n   @OutputProperty(OutputProperty.ifNull(VsanUiUtils.getString(\n         \"vsan.host.sharedWitness.reassign.wizard.selectClusters.validation.selectWitnessHost\")))\n   witnessHost: ManagedObject;\n\n   @OutputProperty()\n   witnessHostNode: InventoryNodeInfo;\n\n   @OutputProperty()\n   hasDiskGroupsOnWitness: boolean = false;\n\n   /*\n      witnessHostDiskMapping property is set in ClaimDisksWitnessHostPage which, however, is conditional based on\n      whether the selected host has disk groups or not.\n      Since the property is required for 'startingTaskProperty' method we must always define it.\n    */\n   @OutputProperty()\n   witnessHostDiskMapping: VsanDiskMapping;\n\n   constructor(private witnessHostService: WitnessValidationService,\n         public hostInventoryService: WitnessCandidateInventoryService,\n         private sharedWitnessService: ConfigureSharedWitnessWorkflowBacking,\n         private diskManagementService: DiskManagementService) {\n   }\n\n   ngOnInit(): void {\n      this.inventoryRoot = [ManagedObject.vcRoot(ManagedObject.contextObject.serverGuid)];\n      this.setInventoryFilterContext();\n      // Preselect all clusters\n      this.selectedClustersAll = this.clustersData;\n   }\n\n   private setInventoryFilterContext(): void {\n      if (this.currentWitnessHost) {\n         const filterContext: Map<FilterContextKey, ManagedObject> = new Map();\n         filterContext.set(FilterContextKey.CURRENT_WITNESS_HOST_REF, this.currentWitnessHost);\n         this.filterContext = filterContext;\n      }\n   }\n\n   async hostSelected(event: any): Promise<void> {\n      this.closeHostSelectionDropDown();\n      const item: InventoryNode = event.node;\n      if (this.witnessHost === item.data.nodeRef) {\n         // The selected host is already selected, nothing to do.\n         return;\n      }\n      this.assignedClustersCount = 0;\n      this.componentsLimit = null;\n      this.setHostData(item);\n      await this.validateCompatibility(true);\n   }\n\n   private setHostData(item: InventoryNode): void {\n      if (this.isHost(item)) {\n         this.witnessHost = item.data.nodeRef;\n         this.witnessHostNode = InventoryNodeInfo.Factory.create(\n               item.data.nodeRef, item.data.name, item.data.iconShape);\n      } else {\n         this.witnessHost = null;\n         this.witnessHostNode = null;\n      }\n   }\n\n   async validate(): Promise<string[]> {\n      // Don't start validation if it has already passed and cluster/host selection hasn't been changed\n      if (this.skipWitnessValidation) {\n         return null;\n      }\n      await this.validateCompatibility(false);\n      if (this.hasValidationError()) {\n         // prevent the user from proceeding if the selected host had validation errors\n         return this.validationMessages;\n      }\n      return null;\n   }\n\n   async validateCompatibility(setPageControlErrors: boolean): Promise<void> {\n      this.resetValidation();\n      if (!this.witnessHost) {\n         this.validationAlertType = AlertType.DANGER;\n         this.validationMessages.push(VsanUiUtils.getString(\n               \"vsan.host.sharedWitness.reassign.wizard.selectClusters.validation.selectWitnessHost\"));\n      } else {\n         // Query assigned clusters and validate that non assigned clusters are selected\n         await this.setAssignedClusters();\n         if (!this.selectedClusters.length) {\n            this.validationAlertType = AlertType.DANGER;\n            this.validationMessages.push(VsanUiUtils.getString(\n                  \"vsan.host.sharedWitness.reassign.wizard.selectClusters.validation.clusters\"));\n         }\n      }\n      if (VsanUiUtils.isEmpty(this.validationMessages)) {\n         await this.validateSharedWitnessHost();\n      }\n      if (!this.hasValidationError()) {\n         this.skipWitnessValidation = true;\n      } else if (setPageControlErrors) {\n         this.pageControls.setValidationErrors(this.validationMessages);\n      }\n      this.pageControls.rebuildToc();\n   }\n\n   private async setAssignedClusters(): Promise<void> {\n      this.witnessAssignedClusters = await this.pageControls.collect(\"witnessAssignedClusters\");\n      this.assignedClustersCount =\n            !VsanUiUtils.isEmpty(this.witnessAssignedClusters) ? this.witnessAssignedClusters.length : 0;\n      this.selectedClusters = this.selectedClustersAll.filter(\n            selClsInfo => !this.isClusterWitnessedByCurrentHost(selClsInfo));\n      this.clustersRefs = this.selectedClusters.map(c => c.moRef);\n   }\n\n   isClusterWitnessedByCurrentHost(clsInfo: InventoryNodeInfo): boolean {\n      if (!VsanUiUtils.isEmpty(this.witnessAssignedClusters)) {\n         return this.witnessAssignedClusters.some(\n               assignedClsRef => ManagedObject.areEqual(clsInfo.moRef, assignedClsRef));\n      } else {\n         return false;\n      }\n   }\n\n   private async validateSharedWitnessHost(): Promise<void> {\n      this.pageControls.setBusyState();\n      let witnessHostValidation: WitnessHostValidation;\n      try {\n         let hostValidationResult: WitnessHostValidationResult;\n         let witnessClaimDisksData: VsanClaimDisksData;\n         [hostValidationResult, this.componentsLimit, witnessClaimDisksData] = await Promise.all([\n            this.sharedWitnessService.getValidateNewWitnessHost(this.clustersRefs, this.witnessHost),\n            this.sharedWitnessService.getMaxComponentsPerCluster(this.witnessHost),\n            this.diskManagementService.getHostDisksClaimingData(this.witnessHost, false),\n         ]);\n         this.hasDiskGroupsOnWitness = DiskMgmtUtil.hasDiskGroups(witnessClaimDisksData);\n         this.clustersValidationData = this.witnessHostService.updateClustersValidation(\n               hostValidationResult.witnessValidationResult, this.clustersValidationData, this.clustersData);\n         witnessHostValidation = this.witnessHostService.handleSharedWitnessHostValidationResult(hostValidationResult);\n      } catch (error) {\n         witnessHostValidation = this.witnessHostService.handleHostValidationError(error);\n         this.hasDiskGroupsOnWitness = false;\n      }\n      this.validationMessages = witnessHostValidation.validationMessages;\n      this.validationAlertType = witnessHostValidation.validationAlertType;\n      this.pageControls.clearBusyState();\n   }\n\n   clusterSelectionChanged(): void {\n      // Upon changing the clusters selection we need to call the backend for validation\n      this.resetValidation();\n   }\n\n   private isHost(item: InventoryNode): boolean {\n      return item.data.nodeRef.type === ManagedObjectUtils.HOST ||\n            item.data.nodeRef.type === ManagedObjectUtils.COMPUTE_RESOURCE;\n   }\n\n   private resetValidation(): void {\n      this.validationAlertType = AlertType.SUCCESS;\n      this.validationMessages = [];\n      this.skipWitnessValidation = false;\n      this.clustersRefs = [];\n      this.selectedClusters = [];\n      this.pageControls.clearValidationErrors();\n      this.pageControls.rebuildToc();\n   }\n\n   private hasValidationError(): boolean {\n      return this.validationMessages && this.validationMessages.length && this.validationAlertType === AlertType.DANGER;\n   }\n\n   private closeHostSelectionDropDown(): void {\n      // Close dropdown programmatically via element's click.\n      // *clrIfOpen=\"openDropDown\" cannot be used because dropdown's contents should always be rendered in order\n      // to access WitnessHostSelectionComponent\n      document.getElementById(\"shared-witness-select\").click();\n   }\n\n   // Get info labels for assigned cluster count and possible witness vLCM disablement\n   getInfoLabels(): string[] {\n      let assignedClustersMessage: string;\n      if (this.assignedClustersCount === 1) {\n         assignedClustersMessage = VsanUiUtils.getString(\n               \"vsan.host.sharedWitness.reassign.wizard.selectClusters.assignedClustersCount.one\",\n                     this.witnessHostNode.name);\n      } else {\n         assignedClustersMessage = VsanUiUtils.getString(\n               \"vsan.host.sharedWitness.reassign.wizard.selectClusters.assignedClustersCount.many\",\n               this.witnessHostNode.name,\n               this.assignedClustersCount);\n      }\n      if (this.validationAlertType === AlertType.INFO) {\n         return [assignedClustersMessage, this.validationMessages[0]];\n      } else {\n         return [assignedClustersMessage];\n      }\n   }\n\n   getComponentsLimitLabel(): string | number {\n      return VsanUiUtils.isNumericValue(this.componentsLimit) ?\n            this.componentsLimit : VsanUiUtils.getString(\"vsan.na.label\");\n   }\n}\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ConfigureSharedWitnessWorkflowBacking} from \"@generated/configure-shared-witness-workflow-backing\";\nimport {InventoryNode} from \"@generated/inventory-node\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {SharedWitnessConstants} from \"../common/shared-witness-constants\";\n\n@Component({\n   templateUrl: \"reassign-witness-precheck-dialog.html\",\n   selector: \"vsan-reassign-witness-precheck-dialog\",\n   styleUrls: [\"reassign-witness-precheck-dialog.scss\"],\n})\nexport class ReassignWitnessPrecheckDialogComponent implements OnInit {\n\n   loading: boolean = false;\n   showPrecheck: boolean = true;\n   validationMessages: string[] = [];\n   reassignWizardContext: any;\n\n   constructor(private configureSharedWitnessWorkflowBacking: ConfigureSharedWitnessWorkflowBacking) {\n   }\n\n   ngOnInit(): void {\n      const clustersRefs: ManagedObject[] = ManagedObject.contextObjects;\n      if (clustersRefs.length >= SharedWitnessConstants.MAX_NUMBER_OF_SHARED_CLUSTERS) {\n         this.validationMessages = [VsanUiUtils.getString(\n               \"vsan.cluster.sharedWitness.reassignWitnessPrecheck.dialog.validation.tooManyClusters\",\n               clustersRefs.length, SharedWitnessConstants.MAX_NUMBER_OF_SHARED_CLUSTERS)];\n         return;\n      }\n      // If there aren't any validation errors hide the current precheck dialog and show reassign witness wizard.\n      this.reassignWitness(clustersRefs);\n   }\n\n   async reassignWitness(clustersRefs: ManagedObject[]): Promise<void> {\n      let clustersData: InventoryNode[];\n      try {\n         this.loading = true;\n         clustersData = await this.configureSharedWitnessWorkflowBacking.getClustersNodes(clustersRefs);\n      } catch (e) {\n         this.validationMessages = [e];\n         return;\n      } finally {\n         this.loading = false;\n      }\n      this.reassignWizardContext = {clustersData: clustersData};\n      // SDK API allows to modify modal height only and therefore the max width of wizard and dialogs is initially set.\n      VsanUiUtils.setModalDialogHeight(700);\n      this.showPrecheck = false;\n   }\n}\n","<!-- Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div class=\"clr-row\">\n   <label class=\"clr-col-4 clr-control-label\">\n      {{\"vsan.host.sharedWitness.reassign.wizard.summary.clusters\" | localized}}\n   </label>\n   <div class=\"clr-col-8 clusters\">\n      <div *ngFor=\"let clusterData of selectedClusters\"\n            vsan-show-title>\n         <clr-icon [attr.shape]=\"clusterData.primaryIconId\"></clr-icon>\n         <span>\n            {{clusterData.name}}\n         </span>\n      </div>\n   </div>\n</div>\n<div class=\"clr-row\">\n   <label class=\"clr-col-4 clr-control-label\">\n      {{\"vsan.host.sharedWitness.reassign.wizard.summary.witnessHost\" | localized}}\n   </label>\n   <div class=\"clr-col-8\">\n      <span vsan-show-title\n            class=\"cell-value\">\n         <clr-icon [attr.shape]=\"witnessHostNode.primaryIconId\"></clr-icon>\n         {{witnessHostNode.name}}\n      </span>\n   </div>\n</div>\n<ng-container *ngIf=\"witnessHostDiskMapping\">\n   <div class=\"clr-row\">\n      <label class=\"clr-col-4 clr-control-label\">\n         {{\"vsan.host.sharedWitness.reassign.wizard.summary.claimedCache\" | localized}}\n      </label>\n      <div class=\"clr-col-8\">\n         <span >\n            {{claimedCache() | fileSize}}\n         </span>\n      </div>\n   </div>\n   <div class=\"clr-row\">\n      <label class=\"clr-col-4 clr-control-label\">\n         {{\"vsan.host.sharedWitness.reassign.wizard.summary.claimedCapacity\" | localized}}\n      </label>\n      <div class=\"clr-col-8\">\n         <span >\n            {{claimedCapacity() | fileSize}}\n         </span>\n      </div>\n   </div>\n</ng-container>","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {PageSet} from \"@component/wizard/flow-wizard.component\";\nimport {SelectHostAndClustersPageComponent} from \"./select-host-and-clusters-page.component\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ClaimDisksWitnessHostPage} from \"@component/wizard/shared-pages/claim-disks-witness-host-page.component\";\nimport {ReadyToCompletePageComponent} from \"./ready-to-complete-page.component\";\nimport {ConfigureSharedWitnessWorkflowBacking} from \"@generated/configure-shared-witness-workflow-backing\";\nimport {Logger} from \"@util/logger\";\n\n@Component({\n   selector: \"vsan-assign-witness-wizard\",\n   template: `\n      <vsan-flow-wizard\n            [title]=\"'vsan.host.sharedWitness.reassign.wizard.title' | localized\"\n            [pageSets]=\"pages\"\n            [contextProperties]=\"context\"\n            [startingTaskProperty]=\"'configureSharedWitnessHost'\"\n            [services]=\"services\">\n      </vsan-flow-wizard>`,\n})\nexport class ReassignWitnessWizardComponent implements OnInit {\n\n   /**\n    * Holds wizard context data, shared between all the pages. Context is provided via:\n    * * Input property when the wizard is defined declaratively (e.g., precheck dialog).\n    * * Modal context when the wizard is opened via ModalBuilder (e.g., two host clusters view).\n    */\n   @Input()\n   context: any;\n\n   readonly services: any[] = [ConfigureSharedWitnessWorkflowBacking];\n\n   ngOnInit(): void {\n      if (!this.context) {\n         this.context = VsanUiUtils.getModalContext();\n      }\n      if (!this.context || !this.context.clustersData)  {\n         // This shouldn't happen as dialog is opened only when clustersData is not empty.\n         Logger.error(\"No clusters found in wizard context!\");\n      }\n   }\n\n   readonly pages: PageSet[] = [\n      new PageSet([SelectHostAndClustersPageComponent]),\n      new PageSet([ClaimDisksWitnessHostPage], (hasDiskGroupsOnWitness) => !hasDiskGroupsOnWitness),\n      new PageSet([ReadyToCompletePageComponent]),\n   ];\n}","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component} from \"@angular/core\";\nimport {PageSet} from \"@component/wizard/flow-wizard.component\";\nimport {ClaimDisksWitnessHostPage} from \"@component/wizard/shared-pages/claim-disks-witness-host-page.component\";\nimport {ReadyToCompletePageComponent} from \"./ready-to-complete-page.component\";\nimport {ConfigureSharedWitnessWorkflowBacking} from \"@generated/configure-shared-witness-workflow-backing\";\nimport {SelectClustersPageComponent} from \"./select-clusters-page.component\";\nimport {ManagedObject} from \"@service/managed-object\";\n\n@Component({\n   selector: \"vsan-add-clusters-wizard\",\n   template: `\n      <vsan-flow-wizard\n            [title]=\"'vsan.host.sharedWitness.addClusters.wizard.title' | localized\"\n            [pageSets]=\"pages\"\n            [contextProperties]=\"context\"\n            [startingTaskProperty]=\"'configureSharedWitnessHost'\"\n            [services]=\"services\">\n      </vsan-flow-wizard>`,\n})\nexport class AddClustersWizardComponent {\n\n   /**\n    * Holds wizard context data, shared between all the pages.\n    */\n   // Pass hostRef from wizard as ManagedObject.contextObject is not available when requested from the wizard page\n   context: any = {hostRef: ManagedObject.contextObject};\n   readonly services: any[] = [ConfigureSharedWitnessWorkflowBacking];\n\n   readonly pages: PageSet[] = [\n      new PageSet([SelectClustersPageComponent]),\n      new PageSet([ClaimDisksWitnessHostPage]),\n      new PageSet([ReadyToCompletePageComponent]),\n   ];\n}","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {InputProperty, OutputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {OnValidate, PageControls} from \"@component/wizard/flow-wizard.component\";\nimport {AlertType} from \"@component/validation/alert-type\";\nimport {TwoHostClusterData} from \"@generated/two-host-cluster-data\";\nimport {WitnessHostValidationResult} from \"@generated/witness-host-validation-result\";\nimport {WitnessHostValidation, WitnessValidationService} from \"@service/witness-validation.service\";\nimport {SharedWitnessClusterValidationData} from \"@generated/shared-witness-cluster-validation-data\";\nimport {InventoryNode} from \"@generated/inventory-node\";\nimport {SharedWitnessLimits} from \"@generated/shared-witness-limits\";\n\n@Component({\n   templateUrl: \"select-clusters-page.html\",\n   styleUrls: [\"select-clusters-page.scss\"],\n})\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.host.sharedWitness.addClusters.wizard.selectClusters.title\"),\n)\nexport class SelectClustersPageComponent implements OnInit, OnValidate {\n\n   validationMessages: string[] = [];\n   validationAlertType: AlertType = AlertType.SUCCESS;\n   clustersValidationData: Map<string, SharedWitnessClusterValidationData>;\n\n   // Flag to track if currently selected host & clusters have been validated against backend\n   private skipWitnessValidation: boolean = false;\n\n   @InputProperty()\n   private pageControls: PageControls;\n\n   @InputProperty()\n   twoNodeClusters: TwoHostClusterData[] = [];\n\n   @InputProperty()\n   sharedWitnessLimits: SharedWitnessLimits;\n\n   // Selected clusters excluding ones witnessed by the current host\n   @OutputProperty()\n   selectedClusters: InventoryNode[] = [];\n\n   @OutputProperty(OutputProperty.ifEmpty(\n         VsanUiUtils.getString(\"vsan.host.sharedWitness.reassign.wizard.selectClusters.validation.clusters\")))\n   clustersRefs: ManagedObject[];\n\n   @OutputProperty(OutputProperty.named(\"witnessHost\"))\n   @InputProperty()\n   hostRef: ManagedObject;\n\n   constructor(private witnessHostService: WitnessValidationService) {\n   }\n\n   ngOnInit(): void {\n      this.twoNodeClusters = JSON.parse(JSON.stringify(this.twoNodeClusters));\n   }\n\n   async validate(): Promise<string[]> {\n      // Don't start validation if it has already passed and cluster/host selection hasn't been changed\n      if (this.skipWitnessValidation) {\n         return null;\n      }\n      await this.validateCompatibility(false);\n      if (this.hasValidationError()) {\n         // prevent the user from proceeding if the selected host had validation errors\n         return this.validationMessages;\n      }\n      return null;\n   }\n\n   async validateCompatibility(setPageControlErrors: boolean = true): Promise<void> {\n      this.resetValidation();\n      if (VsanUiUtils.isEmpty(this.validationMessages)) {\n         await this.validateSharedWitnessHost();\n      }\n      if (!this.hasValidationError()) {\n         this.skipWitnessValidation = true;\n      } else if (setPageControlErrors) {\n         this.pageControls.setValidationErrors(this.validationMessages);\n      }\n      this.pageControls.rebuildToc();\n   }\n\n   resetValidation(): void {\n      this.validationAlertType = AlertType.SUCCESS;\n      this.validationMessages = [];\n      this.skipWitnessValidation = false;\n      this.pageControls.clearValidationErrors();\n      this.pageControls.rebuildToc();\n   }\n\n   private async validateSharedWitnessHost(): Promise<void> {\n      this.pageControls.setBusyState();\n      let witnessHostValidation: WitnessHostValidation;\n      try {\n         const result: WitnessHostValidationResult = await this.pageControls.collect(\"validateCurrentWitnessHost\");\n         this.clustersValidationData = this.witnessHostService.updateClustersValidation(\n               result.witnessValidationResult, this.clustersValidationData, this.twoNodeClusters.map(i => i.cluster));\n         witnessHostValidation = this.witnessHostService.handleSharedWitnessHostValidationResult(result);\n      } catch (error) {\n         witnessHostValidation = this.witnessHostService.handleHostValidationError(error);\n      }\n      this.validationMessages = witnessHostValidation.validationMessages;\n      this.validationAlertType = witnessHostValidation.validationAlertType;\n      this.pageControls.clearBusyState();\n   }\n\n   selectionChanged(clustersRefs: ManagedObject[]): void {\n      // Upon changing the clusters selection we need to call the backend for validation\n      this.resetValidation();\n      this.clustersRefs = clustersRefs;\n      this.selectedClusters = clustersRefs.map(this.getClusterDataByRef.bind(this));\n      // TODO: pass all clusters\n   }\n\n   private getClusterDataByRef(clusterRef: ManagedObject): InventoryNode {\n      return this.twoNodeClusters.find(clusterData =>\n            ManagedObject.uid(clusterData.cluster.moRef) === ManagedObject.uid(clusterRef)).cluster;\n   }\n\n   private hasValidationError(): boolean {\n      return !VsanUiUtils.isEmpty(this.validationMessages) && this.validationAlertType === AlertType.DANGER;\n   }\n}\n","<!-- Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-witness-host-requirements [headerKey]=\"'vsan.host.sharedWitness.reassign.wizard.selectClusters.description'\">\n</vsan-witness-host-requirements>\n<!--Select shared witness host from inventory browser-->\n<div class=\"select-host-section\">\n   <span class=\"bold\">\n      {{\"vsan.host.sharedWitness.reassign.wizard.selectClusters.selectWitness.label\" | localized}}\n   </span>\n   <clr-dropdown id=\"shared-witness-select\"\n                 class=\"wide-item\">\n      <button type=\"button\"\n              class=\"dropdown-toggle btn btn-link\"\n              clrDropdownToggle>\n         <ng-container *ngIf=\"!witnessHost\">\n            {{\"vsan.host.sharedWitness.reassign.wizard.selectClusters.selectWitness.dropdown.label\" | localized}}\n         </ng-container>\n         <ng-container *ngIf=\"witnessHost\">\n            <clr-icon [attr.shape]=\"witnessHostNode?.primaryIconId\"\n                      class=\"inventory-node-icon\">\n            </clr-icon>\n            {{witnessHostNode?.name}}\n         </ng-container>\n         <clr-icon shape=\"caret down\"></clr-icon>\n      </button>\n      <clr-dropdown-menu clrPosition=\"bottom-left\"\n                         [attr.aria-label]=\"'vsan.common.srMessage.dropdownMenu.expanded.label' | localized:\n                              ('vsan.host.sharedWitness.reassign.wizard.selectClusters.selectWitness.label' | localized)\">\n         <!-- Inventory list -->\n         <vsan-inventory-browser\n               id=\"inventory-browser\"\n               [inventoryService]=\"hostInventoryService\"\n               [filterContext]=\"filterContext\"\n               [objRefs]=\"inventoryRoot\"\n               (nodeSelected)=\"hostSelected($event)\"\n               *ngIf=\"inventoryRoot\"\n               [searchInputAriaLabelKey]=\"'vsan.host.sharedWitness.reassign.wizard.selectClusters.selectWitness.searchInputAriaLabel'\">\n         </vsan-inventory-browser>\n      </clr-dropdown-menu>\n   </clr-dropdown>\n</div>\n<!--Components limit-->\n<div class=\"components-limit-section\">\n   <span class=\"bold\">\n      {{\"vsan.host.sharedWitness.reassign.wizard.selectClusters.componentsLimit\" | localized}}\n   </span>\n   <span>\n      {{getComponentsLimitLabel()}}\n   </span>\n</div>\n<!--Assigned clusters count-->\n<vsan-validation id=\"assigned-clusters-count\"\n                 alertType=\"info\"\n                 *ngIf=\"witnessHost && assignedClustersCount\"\n                 [alerts]=\"getInfoLabels()\"\n                 [alertsExpanded]=\"true\"\n                 [allowClose]=\"false\"\n                 [isSmall]=\"true\">\n</vsan-validation>\n<clr-datagrid id=\"witness-host-clusters-list\"\n              class=\"datagrid-compact\"\n              [(clrDgSelected)]=\"selectedClustersAll\"\n              (clrDgSelectedChange)=\"clusterSelectionChanged()\">\n   <clr-dg-column id=\"cluster-name-column\">\n      {{\"vsan.host.sharedWitness.reassign.wizard.selectClusters.cluster.name\" | localized}}\n   </clr-dg-column>\n   <clr-dg-column id=\"cluster-compatibility-column\">\n      {{\"vsan.host.sharedWitness.reassign.wizard.selectClusters.cluster.compatibility\" | localized}}\n   </clr-dg-column>\n   <clr-dg-row *clrDgItems=\"let clusterData of clustersData\"\n               [clrDgItem]=\"clusterData\"\n               [clrDgSelectable]=\"!isClusterWitnessedByCurrentHost(clusterData)\"\n               [clrDgSelected]=\"isClusterWitnessedByCurrentHost(clusterData)\"\n               [ngClass]=\"{'disable-action': isClusterWitnessedByCurrentHost(clusterData)}\">\n      <clr-dg-cell class=\"cluster-name-cell\">\n         <vsan-icon-item [label]=\"clusterData.name\"\n                         [shape]=\"clusterData.primaryIconId\">\n         </vsan-icon-item>\n      </clr-dg-cell>\n      <!-- Grid rows's height is expanded after triggering validation due to the icon's height reaching datagrid cell padding. -->\n      <clr-dg-cell class=\"cluster-compatibility-cell no-vertical-padding\">\n         <vsan-compatibility-cell vsan-show-title [copyToClipboard]=true\n                                  [isSelected]=\"selectedClustersAll.includes(clusterData)\"\n                                  [clusterValidationData]=\"clustersValidationData &&\n                                  clustersValidationData[clusterData.moRef.value]\"\n                                  [isClusterWitnessedByCurrentHost]=\"isClusterWitnessedByCurrentHost(clusterData)\">\n         </vsan-compatibility-cell>\n      </clr-dg-cell>\n   </clr-dg-row>\n   <clr-dg-footer></clr-dg-footer>\n</clr-datagrid>\n<clr-button-group class=\"btn-link\">\n   <clr-button id=\"validate-clusters-compatibility\"\n               name=\"validate-clusters-compatibility\"\n               type=\"button\"\n               class=\"btn btn-sm\"\n               (click)=\"validateCompatibility(true)\"\n               [disabled]=\"!witnessHost || !selectedClustersAll.length\">\n      {{\"vsan.host.sharedWitness.reassign.wizard.selectClusters.validateClusters.label\" | localized}}\n   </clr-button>\n</clr-button-group>\n","<!-- Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-info-prompt *ngIf=\"showPrecheck\"\n                  [(alertMessage)]=\"validationMessage\"\n                  [allowAlertClose]=\"false\"\n                  [blockContent]=\"loading\"\n                  [subtitle]=\"witnessHostName\"\n                  [title]=\"'vsan.host.sharedWitness.addClustersPrecheck.dialog.title' | localized\">\n</vsan-info-prompt>\n<ng-container *ngIf=\"!showPrecheck\">\n   <vsan-select-clusters-dialog *ngIf=\"hasDiskGroups\"></vsan-select-clusters-dialog>\n   <vsan-add-clusters-wizard *ngIf=\"!hasDiskGroups\"></vsan-add-clusters-wizard>\n</ng-container>\n","\n      <vsan-flow-wizard\n            [title]=\"'vsan.host.sharedWitness.addClusters.wizard.title' | localized\"\n            [pageSets]=\"pages\"\n            [contextProperties]=\"context\"\n            [startingTaskProperty]=\"'configureSharedWitnessHost'\"\n            [services]=\"services\">\n      </vsan-flow-wizard>","\n      <vsan-flow-wizard\n            [title]=\"'vsan.host.sharedWitness.reassign.wizard.title' | localized\"\n            [pageSets]=\"pages\"\n            [contextProperties]=\"context\"\n            [startingTaskProperty]=\"'configureSharedWitnessHost'\"\n            [services]=\"services\">\n      </vsan-flow-wizard>","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {SharedWitnessHostService} from \"@generated/shared-witness-host-service\";\nimport {SharedWitnessValidationService} from \"@generated/shared-witness-validation-service\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {VsanStretchedClusterService} from \"@generated/vsan-stretched-cluster-service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"add-clusters-precheck-dialog.html\",\n   selector: \"vsan-add-clusters-precheck-dialog\",\n   styleUrls: [\"add-clusters-precheck-dialog.scss\"],\n})\nexport class AddClustersPrecheckDialogComponent implements OnInit {\n   loading: boolean = false;\n   showPrecheck: boolean = true;\n   hasDiskGroups: boolean = false;\n   validationMessage: string;\n   witnessHostName: string = \"\";\n   private static DIALOG_HEIGHT_LARGE: number = 700;\n\n   constructor(private sharedWitnessValidationService: SharedWitnessValidationService,\n         private sharedWitnessHostService: SharedWitnessHostService,\n         private stretchedClusterService: VsanStretchedClusterService,\n         private vsanCapabilityProvider: VsanCapabilityProvider) {\n   }\n\n   async ngOnInit(): Promise<void> {\n      let witnessHostCompatibility: any;\n      try {\n         this.loading = true;\n         const isSharedWitnessSupported: boolean = await this.vsanCapabilityProvider.getIsSharedWitnessSupported(\n               ManagedObject.contextObject);\n         if (!isSharedWitnessSupported) {\n            this.validationMessage = VsanUiUtils.getString(\"vsan.sharedWitness.notSupported\");\n            return;\n         }\n         [witnessHostCompatibility, this.hasDiskGroups] = await Promise.all([\n            this.sharedWitnessValidationService.querySharedWitnessPrecheckCompatibility(ManagedObject.contextObject),\n            this.stretchedClusterService.hasDiskGroups(ManagedObject.contextObject),\n         ]);\n      } catch (e) {\n         this.validationMessage = e;\n         return;\n      } finally {\n         this.loading = false;\n      }\n      this.witnessHostName = Object.keys(witnessHostCompatibility)[0];\n      const validationError: string = witnessHostCompatibility[this.witnessHostName];\n      if (validationError) {\n         this.validationMessage = validationError;\n         return;\n      }\n\n      /*\n      If there aren't any validation errors hide the current precheck dialog and show add clusters dialog/wizard.\n      SDK API allows to modify modal height only and therefore the max width of wizard and dialogs is initially set.\n      */\n      VsanUiUtils.setModalDialogHeight(AddClustersPrecheckDialogComponent.DIALOG_HEIGHT_LARGE);\n      this.showPrecheck = false;\n   }\n}","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {DiskmgmtCommonModule} from \"@component/diskmgmt/diskmgmt-common.module\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\nimport {FlowWizardModule} from \"@component/wizard/flow-wizard.module\";\nimport {WizardSharedPagesModule} from \"@component/wizard/shared-pages/wizard-shared-pages.module\";\nimport {VsanCommonModule} from \"app/vsan/common/vsan-common.module\";\nimport {NgDragDropModule} from \"ng-drag-drop\";\nimport {SharedWitnessCommonModule} from \"../common/shared-witness-common.module\";\nimport {SharedWitnessRoutePaths} from \"../common/shared-witness-route-paths\";\nimport {AddClustersPrecheckDialogComponent} from \"../dialog/add-clusters-precheck-dialog.component\";\nimport {ReassignWitnessPrecheckDialogComponent} from \"../dialog/reassign-witness-precheck-dialog.component\";\nimport {AddClustersWizardComponent} from \"./add-clusters-wizard.component\";\nimport {ReadyToCompletePageComponent} from \"./ready-to-complete-page.component\";\nimport {ReassignWitnessWizardComponent} from \"./reassign-witness-wizard.component\";\nimport {SelectClustersPageComponent} from \"./select-clusters-page.component\";\nimport {SelectHostAndClustersPageComponent} from \"./select-host-and-clusters-page.component\";\n\nconst sharedWitnessHostWizardRoutes: Routes = [\n   {\n      path: SharedWitnessRoutePaths.REASSIGN_WITNESS_WIZARD,\n      component: ReassignWitnessWizardComponent,\n   },\n   {\n      path: SharedWitnessRoutePaths.ADD_CLUSTERS_WIZARD,\n      component: AddClustersWizardComponent,\n   },\n   {\n      path: SharedWitnessRoutePaths.ADD_CLUSTERS_PRECHECK_DIALOG,\n      component: AddClustersPrecheckDialogComponent,\n   },\n   {\n      path: SharedWitnessRoutePaths.REASSIGN_WITNESS_PRECHECK_DIALOG,\n      component: ReassignWitnessPrecheckDialogComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      ClarityModule,\n      NgDragDropModule,\n      VsanCommonModule,\n      FlowWizardModule,\n      DiskmgmtCommonModule,\n      WizardSharedPagesModule,\n      SharedWitnessCommonModule,\n      UnavailableViewModule,\n      RouterModule.forChild(sharedWitnessHostWizardRoutes),\n   ],\n   declarations: [\n      AddClustersPrecheckDialogComponent,\n      AddClustersWizardComponent,\n      ReassignWitnessPrecheckDialogComponent,\n      ReassignWitnessWizardComponent,\n      SelectClustersPageComponent,\n      SelectHostAndClustersPageComponent,\n      ReadyToCompletePageComponent,\n   ],\n   entryComponents: [\n      AddClustersPrecheckDialogComponent,\n      ReassignWitnessPrecheckDialogComponent,\n      SelectClustersPageComponent,\n      SelectHostAndClustersPageComponent,\n      ReadyToCompletePageComponent,\n   ],\n})\nexport class SharedWitnessWizardModule {\n}"]}