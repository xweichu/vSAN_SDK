{"version":3,"sources":["./src/app/vsan/file-services/enable-service/enable-file-service.component.ts","./src/app/vsan/file-services/enable-service/enable-file-service.html","./src/app/vsan/file-services/enable-service/enable-file-service.module.ts","./src/app/vsan/common/service/flow/loader-name.ts"],"names":[],"mappings":"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","file":"141-es2015.js","sourcesContent":["/* Copyright 2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit, ViewChild} from \"@angular/core\";\nimport {InventorySelectionEvent} from \"@component/inventory/inventory-node\";\nimport {ExternalProxySettingsConfig} from \"@generated/external-proxy-settings-config\";\nimport {NetworkInventoryService} from \"@generated/network-inventory-service\";\nimport {VsanFileServiceCommonConfig} from \"@generated/vsan-file-service-common-config\";\nimport {VsanFileServiceConfigService} from \"@generated/vsan-file-service-config-service\";\nimport {VsanFileServiceOvf} from \"@generated/vsan-file-service-ovf\";\nimport {VsanFileServiceOvfProps} from \"@generated/vsan-file-service-ovf-props\";\nimport {VsanHealthPropertyProvider} from \"@generated/vsan-health-property-provider\";\nimport {DataAccessService} from \"@service/data-access.service\";\nimport {LoaderName} from \"@service/flow/loader-name\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {Icon} from \"@util/icon\";\nimport {StringUtil} from \"@util/string-util\";\nimport {Version} from \"@util/version\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {FileServicesOvfSettings} from \"../shared/file-services-ovf-settings.component\";\nimport {OvfOption, OvfSettings} from \"../shared/file-services-ovf-settings.data\";\nimport {EnableFileServiceModalContext} from \"./enable-file-service-modal-context.data\";\n\n@Component({\n   selector: \"vsan-enable-file-service-dialog\",\n   templateUrl: \"enable-file-service.html\",\n   styleUrls: [\"enable-file-service.scss\"],\n})\nexport class EnableFileServiceComponent implements OnInit {\n   @LoadingIndicator({\n      name: [LoaderName.ON_INIT, LoaderName.REGISTER, LoaderName.MONITOR],\n   })\n   busy: boolean;\n   blockEnableButton: boolean;\n   alertMessages: string[];\n\n   networkRef: ManagedObject;\n   networkName: string;\n   clusterRef: ManagedObject = ManagedObject.contextObject;\n   publicOvfProps: VsanFileServiceOvfProps;\n   ovfSettings: OvfSettings;\n   isInternetAccessEnabled: boolean;\n   downloadTask: ManagedObject;\n   existingOvfVersion: Version;\n   fsvmVersion: Version;\n   hostVersion: Version;\n   canUseExistingOvf: boolean;\n   startUpload: boolean = false;\n   showNetworkBrowser: boolean;\n   Icon: typeof Icon = Icon;\n\n   @ViewChild(\"ovfFileSelector\")\n   ovfFileSelector: FileServicesOvfSettings;\n\n   constructor(private fileService: VsanFileServiceConfigService,\n         public networkInventoryService: NetworkInventoryService,\n         private dataAccessService: DataAccessService,\n         private healthService: VsanHealthPropertyProvider,\n         private taskMonitorService: TaskMonitorService) {\n   }\n\n   @Loader({name: LoaderName.ON_INIT})\n   async ngOnInit(): Promise<void> {\n      const context: EnableFileServiceModalContext = VsanUiUtils.getModalContext() as EnableFileServiceModalContext;\n      this.existingOvfVersion = new Version(context.precheckResult.ovfInstalled);\n      this.fsvmVersion = new Version(context.precheckResult.fsvmVersion);\n      this.hostVersion = new Version(context.precheckResult.hostVersion);\n      this.networkRef = context.network;\n      const networkNamePromise: Promise<string> = !this.networkRef\n            ? Promise.resolve(\"\")\n            : this.networkInventoryService.getNetworkName(this.networkRef);\n      let registeredOvfs: VsanFileServiceOvf[];\n      let externalProxyData: ExternalProxySettingsConfig;\n      [registeredOvfs, externalProxyData, this.networkName] = await Promise.all([\n         this.fileService.getRegisteredOvfs(this.clusterRef),\n         this.healthService.getExternalProxySettings(this.clusterRef),\n         networkNamePromise,\n      ]);\n      this.canUseExistingOvf =\n            registeredOvfs.some(ovf => ovf.isCompatible && ovf.version === context.precheckResult.ovfInstalled);\n      this.downloadTask = registeredOvfs.find(ovf => ovf.downloadTask)?.downloadTask;\n      this.isInternetAccessEnabled = externalProxyData.enableInternetAccess;\n\n      if (this.isInternetAccessEnabled) {\n         this.publicOvfProps = await this.fileService.getPublicOvfProps(this.clusterRef);\n      }\n      this.ovfSettings = new OvfSettings(this.getOvfOption(), this.publicOvfProps);\n   }\n\n   selectNode(event: InventorySelectionEvent): void {\n      if (event.node.data.isLeafNode) {\n         this.networkRef = event.node.data.nodeRef;\n         this.networkName = event.node.data.name || \"\";\n         this.showNetworkBrowser = false;\n      }\n   }\n\n   async enable(): Promise<void> {\n      this.alertMessages = null;\n      this.blockEnableButton = true;\n      if (!this.networkName) {\n         this.alertMessages = [VsanUiUtils.getString(\"vsan.services.fileservices.wizard.ipPool.validation.network.empty\")];\n         this.blockEnableButton = false;\n         return;\n      }\n      // auto download OVF files, hold until the download task completes\n      if (!this.ovfSettings.isUseExisting && !this.ovfSettings.isManualDownload) {\n         await this.registerOvfTask();\n         await this.monitorDownloadTask();\n      }\n      if (!this.ovfSettings.isManualDownload) {\n         return await this.enableFileService();\n      }\n      // Manually upload OVF files, the enable fs task starts after the uploading completes,\n      // goto ovfUploadComplete method for details\n      await this.validateUploadOvf();\n   }\n\n   /**\n    * Check the validation result of the local OVF files, and start uploading them if everything is OK\n    */\n   private async validateUploadOvf(): Promise<void> {\n      const validationResult: string[] | Promise<string[]> = this.ovfFileSelector.validate();\n      if (validationResult) {\n         if (validationResult instanceof Promise) {\n            const errors: string[] = await validationResult;\n            if (errors?.length) {\n               this.alertMessages = errors;\n               this.blockEnableButton = false;\n               return;\n            }\n            // This triggers the uploading task\n            this.startUpload = true;\n         } else {\n            this.alertMessages = validationResult;\n            this.blockEnableButton = false;\n         }\n      }\n   }\n\n   private getOvfOption(): OvfOption {\n      if (this.canUseExistingOvf) {\n         return OvfOption.EXISTING;\n      }\n      if (!this.isInternetAccessEnabled || StringUtil.isEmpty(this.publicOvfProps?.url)) {\n         return OvfOption.MANUAL;\n      }\n      return OvfOption.DOWNLOAD;\n   }\n\n   @Loader({name: LoaderName.REGISTER})\n   private async registerOvfTask(): Promise<void> {\n      this.downloadTask = await this.fileService.downloadPublicOvf(this.clusterRef);\n   }\n\n   @Loader({name: LoaderName.MONITOR})\n   private async monitorDownloadTask(): Promise<void> {\n      this.blockEnableButton = true;\n      await this.taskMonitorService.getAwaitResult(this.downloadTask);\n   }\n\n   private async enableFileService(): Promise<void> {\n      const task: ManagedObject = await this.fileService.configureFileService(this.clusterRef,\n            VsanFileServiceCommonConfig.Factory.create(null, this.networkRef, false, false));\n      VsanUiUtils.closeModalDialog(task);\n   }\n\n   async ovfUploadComplete(): Promise<void> {\n      this.startUpload = false;\n      await this.enableFileService();\n   }\n\n   ovfUploadCancel(): void {\n      this.startUpload = false;\n      this.blockEnableButton = false;\n   }\n\n   ovfUploadError(errors: string[]): void {\n      this.alertMessages = errors;\n      this.startUpload = false;\n      this.blockEnableButton = false;\n   }\n}\n","<!--Copyright 2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-create-prompt\n      [title]=\"'vsan.generalconfig.fileServices.edit.toggle' | localized\"\n      [blockContent]=\"busy\"\n      [blockButton]=\"blockEnableButton\"\n      [confirmText]=\"'vsan.common.enable' | localized\"\n      [(alertMessages)]=\"alertMessages\"\n      (onConfirm)=\"enable()\">\n   <vsan-validation id=\"network-security-warning\"\n                    [isSmall]=\"true\"\n                    [alertType]=\"'info'\"\n                    [allowClose]=\"false\"\n                    [alert]=\"'vsan.services.fileservices.wizard.ipPool.input.network.security.warning' | localized\">\n   </vsan-validation>\n   <h5 id=\"file-service-network\">{{\"vsan.services.network.title\" | localized}}</h5>\n   <div id=\"network-container\" class=\"clr-row\">\n      <label class=\"clr-control-label clr-col-md-4\" for=\"browse-network\">\n         {{\"vsan.services.fileservices.wizard.ipPool.input.network\"| localized}}\n      </label>\n      <div class=\"clr-control-container clr-col-md-8\">\n         <clr-dropdown [clrCloseMenuOnItemClick]=\"true\">\n            <button id=\"browse-network\"\n                    class=\"dropdown-toggle btn btn-link\"\n                    (click)=\"showNetworkBrowser = true;\"\n                    clrDropdownToggle>\n               <clr-icon *ngIf=\"networkName\"\n                         class=\"network-icon\"\n                         [attr.shape]=\"Icon.NETWORK\"></clr-icon>\n               {{networkName || ('vsan.common.select' | localized)}}\n               <clr-icon shape=\"caret down\"></clr-icon>\n            </button>\n            <ng-template [(clrIfOpen)]=\"showNetworkBrowser\">\n               <clr-dropdown-menu clrPosition=\"bottom-left\"\n                                  [attr.aria-label]=\"'vsan.common.srMessage.dropdownMenu.expanded.label' | localized:\n                                       ('vsan.services.fileservices.wizard.ipPool.input.network' | localized)\">\n                  <vsan-inventory-browser #selector\n                                          [objRefs]=\"[clusterRef]\"\n                                          [inventoryService]=\"networkInventoryService\"\n                                          [preselectedNodes]=\"[networkRef]\"\n                                          (nodeSelected)=\"selectNode($event)\"\n                                          [searchInputAriaLabelKey]=\"'vsan.services.fileservices.wizard.ipPool.input.network.searchInputAriaLabel'\">\n                  </vsan-inventory-browser>\n               </clr-dropdown-menu>\n            </ng-template>\n         </clr-dropdown>\n      </div>\n   </div>\n\n   <h5 id=\"file-service-agent\">{{\"vsan.services.fileservices.wizard.ovf.title\" | localized}}</h5>\n   <div class=\"clr-row ovf-options\">\n      <vsan-file-services-ovf-settings id=\"ovf-settings\"\n                                       *ngIf=\"ovfSettings\"\n                                       #ovfFileSelector\n                                       [clusterRef]=\"clusterRef\"\n                                       [publicOvfProps]=\"publicOvfProps\"\n                                       [startUpload]=\"startUpload\"\n                                       [isInternetAccessEnabled]=\"isInternetAccessEnabled\"\n                                       [downloadTask]=\"downloadTask\"\n                                       [displayUseExistingOption]=\"canUseExistingOvf\"\n                                       [existingOvfVersion]=\"existingOvfVersion\"\n                                       [fsvmVersion]=\"fsvmVersion\"\n                                       [hostVersion]=\"hostVersion\"\n                                       [(ovfSettings)]=\"ovfSettings\"\n                                       (uploadComplete)=\"ovfUploadComplete()\"\n                                       (onCancel)=\"ovfUploadCancel()\"\n                                       (onError)=\"ovfUploadError($event)\">\n      </vsan-file-services-ovf-settings>\n   </div>\n</vsan-create-prompt>\n","/* Copyright 2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {InventoryBrowserModule} from \"@component/inventory/inventory-browser.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {FileServicesCommonModule} from \"../shared/file-services-common.module\";\nimport {EnableFileServiceComponent} from \"./enable-file-service.component\";\n\nconst routes: Routes = [\n   {\n      path: \"\",\n      component: EnableFileServiceComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      CommonPipeModule,\n      PromptModule,\n      ClarityModule,\n      InventoryBrowserModule,\n      FileServicesCommonModule,\n      ValidationModule,\n      RouterModule.forChild(routes),\n   ],\n   declarations: [\n      EnableFileServiceComponent,\n   ],\n})\nexport class EnableFileServiceModule {\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\n/*\n   Names to use in the Loader decorator\n */\nexport enum LoaderName {\n   ON_INIT = \"on-init\",\n   ON_CONFIRM = \"on-confirm\",\n   PERFORM_CHANGE = \"perform-change\",\n   REGISTER = \"register\",\n   UPGRADE = \"upgrade\",\n   MONITOR = \"monitor\",\n   DATA_EVACUATION = \"data-evacuation\",\n}\n"],"sourceRoot":"webpack:///"}