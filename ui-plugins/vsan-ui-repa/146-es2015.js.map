{"version":3,"sources":["./src/app/vsan/supportassist/upload-support-bundle.component.ts","./src/app/vsan/supportassist/upload-support-bundle.module.ts","./src/app/vsan/supportassist/upload-support-bundle.html"],"names":[],"mappings":"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","file":"146-es2015.js","sourcesContent":["/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ExternalProxySettingsConfig} from \"@generated/external-proxy-settings-config\";\nimport {VsanHealthPropertyProvider} from \"@generated/vsan-health-property-provider\";\nimport {VsanSupportMutationProvider} from \"@generated/vsan-support-mutation-provider\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"upload-support-bundle.html\",\n   styleUrls: [\"upload-support-bundle.scss\"],\n   selector: \"vsan-upload-support-bundle\",\n})\nexport class UploadSupportBundleComponent implements OnInit {\n\n   readonly SERVICE_REQUEST_ID: string = \"serviceRequestId\";\n\n   clusterRef: ManagedObject;\n\n   uploadSupportBundle: FormGroup;\n\n   proxySettings: ExternalProxySettingsConfig;\n   alerts: string[];\n   waitingForTask: boolean = false;\n\n   constructor(\n         private healthPropertyProvider: VsanHealthPropertyProvider,\n         private supportMutationProvider: VsanSupportMutationProvider, private formBuilder: FormBuilder) {\n\n      const controlsConfig: any = {};\n      controlsConfig[this.SERVICE_REQUEST_ID] = new FormControl(\"\",\n            [Validators.required, Validators.pattern(\"[A-za-z0-9]+\")]);\n      this.uploadSupportBundle = this.formBuilder.group(controlsConfig);\n   }\n\n   ngOnInit(): void {\n      this.clusterRef = ManagedObject.contextObject;\n      this.healthPropertyProvider.getExternalProxySettings(this.clusterRef)\n            .then(settings => {\n               this.proxySettings = settings;\n               this.alerts = this.validateProxySettings();\n            })\n            .catch(error => {\n               this.alerts = this.validateProxySettings();\n            });\n   }\n\n   get isApplyButtonBlocked(): boolean {\n      return this.waitingForTask || this.uploadSupportBundle.invalid;\n   }\n\n   uploadClicked(): void {\n      this.alerts = this.validateProxySettings();\n      if (!!this.alerts.length) {\n         return;\n      }\n      this.waitingForTask = true;\n\n      this.supportMutationProvider.attachVsanSupportBundleToSr(this.clusterRef, this.getServiceRequestId())\n            .then(task => VsanUiUtils.closeModalDialog())\n            .catch(error => this.alerts = [VsanUiUtils.getString(\"vsan.common.error.taskError\")])\n            .finally(() => this.waitingForTask = false);\n   }\n\n   private validateProxySettings(): string[] {\n      if (!this.proxySettings || !this.proxySettings.enableInternetAccess) {\n         return [VsanUiUtils.getString(\"vsan.cluster.uploadSupportBundle.validation.noInternetAccess\")];\n      }\n      return [];\n   }\n\n   private getServiceRequestId(): string {\n      if (!this.uploadSupportBundle) {\n         return null;\n      }\n      return this.uploadSupportBundle.get(this.SERVICE_REQUEST_ID).value.trim();\n   }\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {Routes, RouterModule} from \"@angular/router\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {UploadSupportBundleComponent} from \"./upload-support-bundle.component\";\n\nconst routes: Routes = [\n   {\n      path: \"\",\n      component: UploadSupportBundleComponent\n   }\n];\n\n@NgModule({\n   imports: [\n      PromptModule,\n      ClarityModule,\n      CommonPipeModule,\n      ReactiveFormsModule,\n      RouterModule.forChild(routes)\n   ],\n   declarations: [\n      UploadSupportBundleComponent\n   ]\n})\nexport class UploadSupportBundleModule {\n}","<!--Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-default-prompt\n      [title]=\"'vsan.cluster.uploadSupportBundle.dialogTitle' | localized\"\n      [confirmText]=\"'vsan.cluster.uploadSupportBundle.uploadButton' | localized\"\n      [blockButton]=\"isApplyButtonBlocked\"\n      [(alertMessages)]=\"alerts\"\n      (onConfirm)=\"uploadClicked()\">\n   <!-- TODO: (vasilevd) Extract link to the KB from the message -->\n   <div>{{\"vsan.cluster.uploadSupportBundle.info\" | localized}}</div>\n   <form [formGroup]=\"uploadSupportBundle\" clrForm clrLayout=\"horizontal\">\n      <clr-input-container>\n         <label for=\"sr-input\" class=\"clr-col-md-3\">\n            {{\"vsan.cluster.uploadSupportBundle.serviceRequestId\" | localized}}\n         </label>\n         <input type=\"text\"\n                id=\"sr-input\"\n                name=\"srInput\"\n                class=\"clr-col-md-9\"\n                clrInput\n                size=\"45\"\n                formControlName=\"{{SERVICE_REQUEST_ID}}\" />\n         <clr-control-error *clrIfError=\"'required'\">\n            {{\"vsan.cluster.uploadSupportBundle.validation.emptyServiceRequest\" | localized}}\n         </clr-control-error>\n         <clr-control-error *clrIfError=\"'pattern'\">\n            {{\"vsan.cluster.uploadSupportBundle.validation.invalid\" | localized}}\n         </clr-control-error>\n      </clr-input-container>\n   </form>\n</vsan-default-prompt>\n"],"sourceRoot":"webpack:///"}