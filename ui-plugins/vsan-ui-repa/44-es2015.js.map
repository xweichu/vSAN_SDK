{"version":3,"sources":["./src/app/vsan/common/component/placement-details/pipe/component-state-icon-class.pipe.ts","./src/app/vsan/common/component/placement-details/placement-details-path.component.ts","./src/app/vsan/common/component/placement-details/model/object-placement.ts","./src/app/vsan/common/component/placement-details/physical-placement-property-box.component.ts","./src/app/vsan/common/component/placement-details/placement-details-path.html","./src/app/vsan/common/component/placement-details/placement-details-util.ts","./src/app/vsan/common/component/placement-details/placement-details-flat.html","./src/app/vsan/common/component/placement-details/pipe/component-state-icon-shape.pipe.ts","./src/app/vsan/common/component/placement-details/physical-placement-property-box.html","./src/app/vsan/common/component/placement-details/model/managed-storage-object-placement.ts","./src/app/vsan/common/component/placement-details/model/vsan-object-placement.ts","./src/app/vsan/common/component/placement-details/placement-details-flat.component.ts","./src/app/vsan/common/component/placement-details/placement-details.module.ts"],"names":[],"mappings":"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","file":"44-es2015.js","sourcesContent":["/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {VsanComponentState} from \"@generated/vsan-component-state\";\nimport {Icon} from \"@util/icon\";\n\n@Pipe({\n   name: \"componentStateIconClass\"\n})\nexport class ComponentStateIconClassPipe implements PipeTransform {\n\n   public transform(state: VsanComponentState): string {\n      switch (state) {\n         case VsanComponentState.ACTIVE:\n            return Icon.CLR_SUCCESS_ICON_CLASS;\n         case VsanComponentState.ACTIVE_STALE:\n         case VsanComponentState.ABSENT:\n         case VsanComponentState.ABSENT_RESYNC:\n         case VsanComponentState.RECONFIG:\n            return Icon.CLR_WARN_ICON_CLASS;\n         case VsanComponentState.DEGRADED:\n            return Icon.CLR_ERROR_ICON_CLASS;\n         default:\n            return Icon.CLR_HIGHLIGHT_ICON_CLASS;\n      }\n   }\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {DisplayObjectType} from \"@generated/display-object-type\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\n\n@Component({\n   templateUrl: \"placement-details-path.html\",\n   selector: \"virtual-objects-placement-details-path\",\n   styleUrls: [\"placement-details-path.scss\"],\n})\nexport class PlacementDetailsPathComponent {\n\n   @Input()\n   path: VirtualObjectModel[];\n\n   @Input()\n   isTooltipVisible: boolean = true;\n\n   getIsNoPermissionsVm(item: VirtualObjectModel): boolean {\n      return item.vmRef !== null\n            && item.type.displayType === DisplayObjectType.VM\n            && !item.hasVmReadPermissions;\n   }\n\n}\n","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {VirtualObjectPlacementModel} from \"@generated/virtual-object-placement-model\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\nexport abstract class ObjectPlacement {\n\n   protected constructor(public datastoreType: DatastoreType) {\n   }\n\n   abstract get lastLevelComponents(): VirtualObjectPlacementModel[];\n\n   protected getNextLevelComponents(placement: VirtualObjectPlacementModel): VirtualObjectPlacementModel[] {\n      if (VsanUiUtils.isEmpty(placement.children)) {\n         return [placement];\n      }\n\n      const levelComponents: any[] = [];\n      placement.children.forEach(child => {\n         levelComponents.push(...this.getNextLevelComponents(child));\n      });\n      return levelComponents;\n   }\n}","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {VirtualObjectPlacementModel} from \"@generated/virtual-object-placement-model\";\nimport {VsanComponentState} from \"@generated/vsan-component-state\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\n\n@Component({\n   templateUrl: \"physical-placement-property-box.html\",\n   selector: \"physical-placement-property-box\",\n   styleUrls: [\"physical-placement-property-box.scss\"],\n})\nexport class PhysicalPlacementPropertyBoxComponent {\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   @Input()\n   model: VirtualObjectPlacementModel;\n\n   @Input()\n   allowNavigation: boolean = false;\n\n   navigateToHost(hostRef: ManagedObject) {\n      this.navigationService.navigateTo(PlatformExtension.HOST_SUMMARY, hostRef);\n   }\n\n   componentStateLabelKey(state: VsanComponentState): string {\n      switch (state) {\n         case VsanComponentState.ACTIVE:\n            return \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.state.active\";\n         case VsanComponentState.ACTIVE_STALE:\n            return \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.state.activeStale\";\n         case VsanComponentState.ABSENT:\n            return \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.state.absent\";\n         case VsanComponentState.ABSENT_RESYNC:\n            return \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.state.absentResync\";\n         case VsanComponentState.DEGRADED:\n            return \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.state.degraded\";\n         case VsanComponentState.RECONFIG:\n            return \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.state.reconfig\";\n         default:\n            return \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.state.unknown\";\n      }\n   }\n}","<div class=\"path\" *ngIf=\"path\">\n   <ng-container *ngFor=\"let item of path; let i = index\">\n      <vsan-vm-cell [item]=\"item\"\n                    [isTooltipVisible]=\"isTooltipVisible\"\n                    [isLink]=\"false\">\n      </vsan-vm-cell>\n      <clr-icon [attr.shape]=\"'caret right'\" *ngIf=\"i != path.length - 1\"></clr-icon>\n   </ng-container>\n</div>\n","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ManagedStorageObjectPlacement} from \"@component/placement-details/model/managed-storage-object-placement\";\nimport {ObjectPlacement} from \"@component/placement-details/model/object-placement\";\nimport {VsanObjectPlacement} from \"@component/placement-details/model/vsan-object-placement\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {VirtualObjectPlacementModel} from \"@generated/virtual-object-placement-model\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\nexport class PlacementDetailsUtil {\n   static getPlacement(\n         uuid: string,\n         components: VirtualObjectPlacementModel[],\n         virtualObjects: VirtualObjectModel[],\n         getPath: (uuid: string) => VirtualObjectModel[]): ObjectPlacement {\n      const datastoreType: DatastoreType = PlacementDetailsUtil.getPlacementsDatastoreType(components);\n\n      switch (datastoreType) {\n         case DatastoreType.VSAN:\n            const raidConfig: string = PlacementDetailsUtil.mergeSingleRaidConfig(components);\n            return new VsanObjectPlacement(uuid, getPath(uuid), raidConfig, components);\n         case DatastoreType.VSAN_DIRECT:\n            const iconId: string = PlacementDetailsUtil.getVirtualObjectByUid(components[0], virtualObjects).iconId;\n            const label: string = components[0].label;\n            return new ManagedStorageObjectPlacement(iconId, label, null, components[0], datastoreType);\n         case DatastoreType.PMEM:\n            return new ManagedStorageObjectPlacement(null, null, getPath(uuid), components[0], datastoreType);\n      }\n   }\n\n   static getGroupUuid(placement: VirtualObjectPlacementModel, isVsanMaxEnabled: boolean): string {\n      if (placement.datastoreType !== DatastoreType.VSAN) {\n         return placement.host.nodeUuid + \"_\" + placement.datastoreType.toString();\n      }\n\n      return isVsanMaxEnabled\n            ? placement.capacityDisk.nodeUuid\n            : placement.cacheDisk.nodeUuid;\n   }\n\n   private static getPlacementsDatastoreType(placements: VirtualObjectPlacementModel[]): DatastoreType {\n      if (placements.length > 1) {\n         return DatastoreType.VSAN;\n      }\n\n      if (!VsanUiUtils.isEmpty(placements[0].children)) {\n         return PlacementDetailsUtil.getPlacementsDatastoreType(placements[0].children);\n      }\n\n      return placements[0].datastoreType;\n   }\n\n   /**\n    * Looks through the placement model and if only a single RAID config is found,\n    * its children are flattened in the top level models to avoid unnecessary\n    * expanding the single item.\n    * Returns the raid config label if a single model is found or null in all other cases.\n    */\n   private static mergeSingleRaidConfig(models: VirtualObjectPlacementModel[]): string {\n      let configType: string;\n      let raidIdx: number = -1;\n      for (let i: number = 0; i < models.length; i++) {\n         if (models[i].children) {\n            if (raidIdx !== -1) {\n               // more than one RAID config, show as is\n               raidIdx = -1;\n               break;\n            } else {\n               raidIdx = i;\n            }\n         }\n      }\n\n      if (raidIdx !== -1) {\n         // Only 1 RAID config\n         configType = models[raidIdx].label;\n         models.splice(raidIdx, 1, ...models[raidIdx].children);\n      }\n\n      return configType;\n   }\n\n   private static getVirtualObjectByUid(\n         placement: VirtualObjectPlacementModel, virtualObjects: VirtualObjectModel[]): VirtualObjectModel {\n      return virtualObjects.find(vo => vo.uid === placement.nodeUuid);\n   }\n}","<!--Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<label id=\"header-label\">\n   {{\"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.virtualComponentsLabel\" | localized}}\n</label>\n\n<div *ngIf=\"!detailsProvider?.rootItems?.length\" class=\"spinner central-spinner\">{{\"vsan.loading\" | localized}}</div>\n\n<!-- ngIf is required to delay the initial rendering of the grid rows until all data is loaded. This grid has a couple\nof columns that are conditionally rendered and if Clarity allocates space for all columns, then we hide two of them, the\nalignment is messed up -->\n<clr-datagrid *ngIf=\"detailsProvider?.rootItems?.length\" id=\"details-grid\">\n   <clr-dg-column class=\"wide-column\">\n      <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n         {{\"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.type\" | localized}}\n      </ng-container>\n   </clr-dg-column>\n   <clr-dg-column class=\"medium-column\">\n      <ng-container *clrDgHideableColumn=\"{hidden: reducedColumns}\">\n         {{\"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.componentState\" | localized}}\n      </ng-container>\n   </clr-dg-column>\n   <clr-dg-column class=\"medium-column\">\n      <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n         {{\"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.host\" | localized}}\n      </ng-container>\n   </clr-dg-column>\n   <clr-dg-column class=\"medium-column\">\n      <ng-container *clrDgHideableColumn=\"{hidden: reducedColumns}\">\n         {{\"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.faultDomain\" | localized}}\n      </ng-container>\n   </clr-dg-column>\n   <clr-dg-column *ngIf=\"!isVsanMaxEnabled\"\n                  class=\"wide-column\">\n      <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n         {{\"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.cacheDisk\" | localized}}\n      </ng-container>\n   </clr-dg-column>\n   <clr-dg-column *ngIf=\"!isVsanMaxEnabled\"\n                  class=\"wide-column\">\n      <ng-container *clrDgHideableColumn=\"{hidden: reducedColumns}\">\n         {{\"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.cacheDiskUUID\" | localized}}\n      </ng-container>\n   </clr-dg-column>\n   <clr-dg-column class=\"wide-column\">\n      <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n         {{getDiskColumnLabel()}}\n      </ng-container>\n   </clr-dg-column>\n   <clr-dg-column class=\"wide-column\">\n      <ng-container *clrDgHideableColumn=\"{hidden: reducedColumns}\">\n         {{getDiskUUIDColumnLabel()}}\n      </ng-container>\n   </clr-dg-column>\n\n   <clr-dg-row *clrDgItems=\"let row of detailsProvider.rows\" [clrDgItem]=\"row.data\">\n      <clr-dg-cell vsan-show-title\n                   [copyToClipboard]=\"false\"\n                   class=\"wide-column\">\n         <div class=\"placement-type\"\n              [attr.title]=\"row.data.nodeUuid\">\n            <vsan-expand *ngIf=\"isExpandable(row)\"\n                         [row]=\"row\">\n            </vsan-expand>\n            <ng-container *ngIf=\"row.data.path\">\n               <virtual-objects-placement-details-path [path]=\"row.data.path\"></virtual-objects-placement-details-path>\n               <span *ngIf=\"row.data.raidConfig\"\n                     class=\"raid-label\">\n                  ({{row.data.raidConfig}})\n               </span>\n            </ng-container>\n            <ng-container *ngIf=\"!row.data.path\">\n               <clr-icon *ngIf=\"row.data.iconId\"\n                         [attr.shape]=\"row.data.iconId\">\n               </clr-icon>\n               <span>{{row.data.label}}</span>\n            </ng-container>\n         </div>\n      </clr-dg-cell>\n      <clr-dg-cell vsan-show-title class=\"medium-column\">\n         <ng-container *ngIf=\"row.data.state\">\n            <physical-placement-property-box [model]=\"row.data\"></physical-placement-property-box>\n         </ng-container>\n      </clr-dg-cell>\n      <clr-dg-cell vsan-show-title class=\"medium-column\">\n         <ng-container *ngIf=\"row.data.host\">\n            <physical-placement-property-box [model]=\"row.data.host\"></physical-placement-property-box>\n         </ng-container>\n      </clr-dg-cell>\n      <clr-dg-cell vsan-show-title class=\"medium-column\">\n         <ng-container *ngIf=\"row.data.host && row.data.host.faultDomain\">\n            {{row.data.host.faultDomain}}\n         </ng-container>\n      </clr-dg-cell>\n      <clr-dg-cell *ngIf=\"!isVsanMaxEnabled\" vsan-show-title class=\"wide-column\">\n         <ng-container *ngIf=\"row.data.cacheDisk\">\n            <physical-placement-property-box [model]=\"row.data.cacheDisk\"></physical-placement-property-box>\n         </ng-container>\n      </clr-dg-cell>\n      <clr-dg-cell *ngIf=\"!isVsanMaxEnabled\" vsan-show-title class=\"wide-column\">\n         <ng-container *ngIf=\"row.data.cacheDisk\">\n            {{row.data.cacheDisk.nodeUuid}}\n         </ng-container>\n      </clr-dg-cell>\n      <clr-dg-cell vsan-show-title class=\"wide-column\">\n         <ng-container *ngIf=\"row.data.capacityDisk\">\n            <physical-placement-property-box [model]=\"row.data.capacityDisk\"></physical-placement-property-box>\n         </ng-container>\n      </clr-dg-cell>\n      <clr-dg-cell vsan-show-title class=\"wide-column\">\n         <ng-container *ngIf=\"row.data.capacityDisk\">\n            {{row.data.capacityDisk.nodeUuid}}\n         </ng-container>\n      </clr-dg-cell>\n   </clr-dg-row>\n   <clr-dg-footer>\n      {{footerText}}\n      <clr-dg-pagination [clrDgPageSize]=\"20\"></clr-dg-pagination>\n   </clr-dg-footer>\n</clr-datagrid>\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {VsanComponentState} from \"@generated/vsan-component-state\";\nimport {Icon} from \"@util/icon\";\nimport {Logger} from \"@util/logger\";\n\n@Pipe({\n   name: \"componentStateIconShape\"\n})\nexport class ComponentStateIconShapePipe implements PipeTransform {\n\n   public transform(state: VsanComponentState): string {\n      switch (state) {\n         case VsanComponentState.ACTIVE:\n            return Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE;\n         case VsanComponentState.ACTIVE_STALE:\n         case VsanComponentState.ABSENT:\n         case VsanComponentState.ABSENT_RESYNC:\n         case VsanComponentState.RECONFIG:\n            return Icon.CLR_WARN_STANDARD_ICON_SHAPE;\n         case VsanComponentState.DEGRADED:\n            return Icon.CLR_ERROR_STANDARD_ICON_SHAPE;\n         default:\n            Logger.warn(\"Unknown VsanComponentState state: \" + state);\n            return Icon.CLR_INFO_STANDARD_ICON_SHAPE;\n      }\n   }\n}","<ng-container *ngIf=\"model\">\n   <ng-container *ngIf=\"model.state\">\n      <clr-icon [attr.shape]=\"model.state | componentStateIconShape\"\n                [ngClass]=\"model.state | componentStateIconClass\"\n                class=\"is-solid\">\n      </clr-icon>\n      <span class=\"state-label\">\n         {{componentStateLabelKey(model.state) | localized}}\n      </span>\n   </ng-container>\n\n   <ng-container *ngIf=\"!model.state\">\n      <clr-icon *ngIf=\"model.iconId\" [attr.shape]=\"model.iconId\"></clr-icon>\n      <span *ngIf=\"!model.navigationTarget || !allowNavigation\"\n            [title]=\"model.nodeUuid\"\n            [ngClass]=\"model.navigationTarget ? 'highlight-text' : ''\">\n         <ng-container *ngIf=\"!!model.label; else unknown_label\">{{model.label}}</ng-container>\n      </span>\n      <a href=\"javascript://\"\n         *ngIf=\"model.navigationTarget && allowNavigation\"\n         (click)=\"navigateToHost(model.navigationTarget)\">\n         <ng-container *ngIf=\"!!model.label; else unknown_label\">{{model.label}}</ng-container>\n      </a>\n   </ng-container>\n</ng-container>\n<ng-template #unknown_label>\n   {{\"vsan.common.unknown\" | localized}}\n</ng-template>","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ObjectPlacement} from \"@component/placement-details/model/object-placement\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {VirtualObjectPlacementModel} from \"@generated/virtual-object-placement-model\";\n\nexport class ManagedStorageObjectPlacement extends ObjectPlacement {\n   constructor(\n         public iconId: string,\n         public label: string,\n         public path: VirtualObjectModel[],\n         public child: VirtualObjectPlacementModel,\n         datastoreType: DatastoreType) {\n      super(datastoreType);\n   }\n\n   get lastLevelComponents(): VirtualObjectPlacementModel[] {\n      return this.getNextLevelComponents(this.child);\n   }\n\n   get host(): VirtualObjectPlacementModel {\n      return this.child.host;\n   }\n\n   get capacityDisk(): VirtualObjectPlacementModel {\n      return this.child.capacityDisk;\n   }\n}","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ObjectPlacement} from \"@component/placement-details/model/object-placement\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {VirtualObjectPlacementModel} from \"@generated/virtual-object-placement-model\";\n\nexport class VsanObjectPlacement extends ObjectPlacement {\n   constructor(\n         public vsanUuid: string,\n         public path: VirtualObjectModel[],\n         public raidConfig: string,\n         public children: VirtualObjectPlacementModel[]) {\n      super(DatastoreType.VSAN);\n   }\n\n   get lastLevelComponents(): VirtualObjectPlacementModel[] {\n      const lastLevelComponents: any[] = [];\n      this.children.forEach(child => {\n         lastLevelComponents.push(...this.getNextLevelComponents(child));\n      });\n      return lastLevelComponents;\n   }\n}","/* Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {TreeDatagrid} from \"@component/datagrid/tree-datagrid\";\nimport {ObjectPlacement} from \"@component/placement-details/model/object-placement\";\nimport {PlacementDetailsUtil} from \"@component/placement-details/placement-details-util\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {VirtualObjectPlacementModel} from \"@generated/virtual-object-placement-model\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"placement-details-flat.html\",\n   styleUrls: [\"placement-details-flat.scss\"],\n   selector: \"virtual-objects-placement-details-flat\",\n})\nexport class PlacementDetailsFlatComponent {\n\n   DatastoreType: typeof DatastoreType = DatastoreType;\n   detailsProvider: TreeDatagrid = new TreeDatagrid(item => item.children);\n   footerText: string = \"\";\n\n   @Input()\n   vmRef: ManagedObject;\n\n   @Input()\n   virtualObjects: VirtualObjectModel[];\n\n   private _data: Map<string, VirtualObjectPlacementModel[]>;\n\n   @Input()\n   set data(data: Map<string, VirtualObjectPlacementModel[]>) {\n      this._data = data;\n\n      if (!data) {\n         this.detailsProvider.rootItems = [];\n         this.footerText = \"\";\n         return;\n      }\n\n      const placements = this.constructPlacements(data);\n      this.detailsProvider.rootItems = placements;\n      this.footerText = this.getFooter(placements);\n   }\n\n   get data(): Map<string, VirtualObjectPlacementModel[]> {\n      return this._data;\n   }\n\n   @Input()\n   isVsanMaxEnabled: boolean;\n\n   /**\n    * Display only basic columns (e.g., when the component is used in a smaller view).\n    */\n   @Input()\n   reducedColumns: boolean;\n\n   private getFooter(placements: ObjectPlacement[]): string {\n      const vsanPlacementsSummary: VirtualObjectPlacementsSummary = new VirtualObjectPlacementsSummary(\n            \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.footer.vsan\");\n      const vsanDirectPlacementsSummary: VirtualObjectPlacementsSummary = new VirtualObjectPlacementsSummary(\n            \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.footer.vsanDirect\");\n      const pmemPlacementsSummary: VirtualObjectPlacementsSummary = new VirtualObjectPlacementsSummary(\n            \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.footer.pmem\");\n\n      placements.forEach(placement => {\n         switch (placement.datastoreType) {\n            case DatastoreType.VSAN:\n               vsanPlacementsSummary.count(placement.lastLevelComponents);\n               break;\n            case DatastoreType.VSAN_DIRECT:\n               vsanDirectPlacementsSummary.count(placement.lastLevelComponents);\n               break;\n            case DatastoreType.PMEM:\n               pmemPlacementsSummary.count(placement.lastLevelComponents);\n               break;\n         }\n      });\n\n      return [vsanPlacementsSummary, vsanDirectPlacementsSummary, pmemPlacementsSummary]\n            .filter(summary => summary.hasData)\n            .map(summary => summary.label)\n            .join(\", \");\n   }\n\n   private constructPlacements(data: Map<string, VirtualObjectPlacementModel[]>): any[] {\n      const placements: any[] = [];\n\n      for (const uuid of data.keys()) {\n         // deep clone the models, because the mergeSingleRaidConfig(invoked from getPlacement()) will move the\n         // raid config children to the upper level and\n         // we don't want to change the original data as well\n         const components: VirtualObjectPlacementModel[] = JSON.parse(JSON.stringify(data.get(uuid)));\n\n         placements.push(PlacementDetailsUtil.getPlacement(\n               uuid, components, this.virtualObjects, (id: string) => this.findPath(id)));\n      }\n\n      return placements;\n   }\n\n   /**\n    * Returns the path for the specified virtual objects.\n    * Sample result is [vmModel, diskModel]\n    */\n   private findPath(vsanUuid: string): VirtualObjectModel[] {\n      for (const model of this.virtualObjects) {\n         if (vsanUuid === model.uid) {\n            return [model];\n         }\n         if (model.children) {\n            for (const child of model.children) {\n               if (vsanUuid === child.uid) {\n                  if (this.vmRef) {\n                     return [child];\n                  } else {\n                     return [model, child];\n                  }\n               }\n            }\n         }\n      }\n      throw new Error(\"Virtual object not found: \" + vsanUuid);\n   }\n\n   /**\n    * vsan-expand renders depth padding, so it must always be placed except for\n    * non expandable items with depth 0 (e.g., vSAN Direct objects).\n    */\n   isExpandable(row: any): boolean {\n      return !row.data.datastoreType /* Nested rows (e.g., RAID config)*/ ||\n            row.data.datastoreType === DatastoreType.VSAN;\n   }\n\n   getDiskColumnLabel(): string {\n      return this.isVsanMaxEnabled\n            ? VsanUiUtils.getString(\n                  \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.vSANMaxDisk\")\n            : VsanUiUtils.getString(\n                  \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.capacityDisk\");\n   }\n\n   getDiskUUIDColumnLabel(): string {\n      return this.isVsanMaxEnabled\n            ? VsanUiUtils.getString(\n                  \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.vSANMaxDiskUUID\")\n            : VsanUiUtils.getString(\n                  \"vsan.monitor.cluster.virtualObjects.action.viewDetails.tabs.placement.capacityDiskUUID\");\n   }\n}\n\n/**\n * This class is being used only in this component.\n * It contains summary information for displayed object:\n *  - (components for vSAN) because one object could be stored on multiple disks\n *  - (objects for vSAN Direct) because one object is always stored on one disk\n *  and unique host counts\n */\nclass VirtualObjectPlacementsSummary {\n   private objects: number = 0;\n   private uniqueHosts: any = {};\n\n   constructor(private labelKey: string) {\n   }\n\n   count(objects: VirtualObjectPlacementModel[]): void {\n      objects.forEach(object => {\n         this.incrementCounts(object);\n         if (object.children) {\n            this.count(object.children);\n         }\n      });\n   }\n\n   get objectCount(): number {\n      return this.objects;\n   }\n\n   get hostCount(): number {\n      return Object.keys(this.uniqueHosts).length;\n   }\n\n   get hasData(): boolean {\n      return this.objectCount > 0 && this.hostCount > 0;\n   }\n\n   get label(): string {\n      return VsanUiUtils.getString(this.labelKey, this.objectCount, this.hostCount);\n   }\n\n   private incrementCounts(object: VirtualObjectPlacementModel): void {\n      if (object.nodeUuid) {\n         this.objects++;\n      }\n      if (object.host) {\n         this.uniqueHosts[object.host.nodeUuid] = {};\n      }\n   }\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {PhysicalPlacementPropertyBoxComponent} from \"@component/placement-details/physical-placement-property-box.component\";\nimport {ComponentStateIconClassPipe} from \"@component/placement-details/pipe/component-state-icon-class.pipe\";\nimport {ComponentStateIconShapePipe} from \"@component/placement-details/pipe/component-state-icon-shape.pipe\";\nimport {PlacementDetailsFlatComponent} from \"@component/placement-details/placement-details-flat.component\";\nimport {PlacementDetailsGroupedComponent} from \"@component/placement-details/placement-details-grouped.component\";\nimport {PlacementDetailsPathComponent} from \"@component/placement-details/placement-details-path.component\";\nimport {PlacementDetailsComponent} from \"@component/placement-details/placement-details.component\";\nimport {VirtualObjectsTableModule} from \"@component/virtual-objects-table/virtual-objects-table.module\";\nimport {VsanCommonModule} from \"app/vsan/common/vsan-common.module\";\n\n@NgModule({\n   imports: [\n      FormsModule,\n      CommonModule,\n      ClarityModule,\n      VsanCommonModule,\n      VirtualObjectsTableModule,\n   ],\n   declarations: [\n      ComponentStateIconClassPipe,\n      ComponentStateIconShapePipe,\n      PlacementDetailsComponent,\n      PlacementDetailsFlatComponent,\n      PlacementDetailsPathComponent,\n      PlacementDetailsGroupedComponent,\n      PhysicalPlacementPropertyBoxComponent,\n   ],\n   exports: [\n      PlacementDetailsComponent,\n      PlacementDetailsFlatComponent\n   ]\n})\nexport class PlacementDetailsModule {\n}\n"],"sourceRoot":"webpack:///"}