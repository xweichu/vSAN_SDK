{"version":3,"sources":["./src/app/vsan/health/config/historical-health-settings-dialog.component.ts","./src/app/vsan/health/config/health-config.module.ts","./src/app/vsan/health/config/historical-health-settings-dialog.html"],"names":[],"mappings":"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","file":"38-es2015.js","sourcesContent":["/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {HistoricalHealthConfig} from \"@generated/historical-health-config\";\nimport {HistoricalHealthConfigService} from \"@generated/historical-health-config-service\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\n\n@Component({\n   templateUrl: \"historical-health-settings-dialog.html\",\n   styleUrls: [\"historical-health-settings-dialog.scss\"],\n   selector: \"vsan-historical-health-settings-dialog\",\n})\nexport class HistoricalHealthSettingsDialogComponent implements OnInit {\n\n   VsanUiUtils: typeof VsanUiUtils = VsanUiUtils;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   clusterRef: ManagedObject;\n   clusterName: string;\n   alertMessages: string[];\n\n   historicalHealthConfig: HistoricalHealthConfig = HistoricalHealthConfig.Factory.create(false);\n   originalIsServiceEnabled: boolean;\n\n   enableService: boolean;\n\n   static openDialog(clusterRef: ManagedObject,\n         clusterName: string,\n         historicalHealthConfig: HistoricalHealthConfig): Promise<ManagedObject> {\n      return new ModalBuilder(\"healthConfig/historicalHealthSettingsDialog\")\n            .setSize(670, 280)\n            .open(new HistoricalHealthSettingsDialogContext(clusterRef, clusterName));\n   }\n\n   constructor(private configService: HistoricalHealthConfigService) {\n   }\n\n   @Loader({srMessage: \"vsan.services.historicalhealth.settings.title\", srMessageType: SrMessageType.PAGE_TITLE})\n   async ngOnInit(): Promise<void> {\n      const context: HistoricalHealthSettingsDialogContext = VsanUiUtils.getModalContext();\n      this.clusterRef = context.clusterRef;\n      this.clusterName = context.clusterName;\n\n      this.historicalHealthConfig = await this.configService.getConfig(this.clusterRef);\n      this.originalIsServiceEnabled = this.historicalHealthConfig.isEnabled;\n      this.enableService = true;\n   }\n\n   @Loader()\n   async edit(): Promise<void> {\n      this.alertMessages = [];\n      this.historicalHealthConfig.isEnabled = this.enableService;\n      const taskRef: any = await this.configService.setConfig(this.clusterRef, this.historicalHealthConfig);\n      VsanUiUtils.closeModalDialog(taskRef);\n   }\n\n   @ErrorHandler()\n   private handleError(error: string): void {\n      this.alertMessages = [error];\n   }\n}\n\nexport class HistoricalHealthSettingsDialogContext {\n   constructor(public clusterRef: ManagedObject,\n         public clusterName: string) {\n   }\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {HistoricalHealthSettingsDialogComponent} from \"./historical-health-settings-dialog.component\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\n\nconst configRoutes: Routes = [\n   {\n      path: \"historicalHealthSettingsDialog\",\n      component: HistoricalHealthSettingsDialogComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      FormsModule,\n      CommonModule,\n      ClarityModule,\n      CommonPipeModule,\n      PromptModule,\n      RouterModule.forChild(configRoutes),\n   ],\n   declarations: [\n      HistoricalHealthSettingsDialogComponent,\n   ],\n   exports: [\n      HistoricalHealthSettingsDialogComponent,\n   ],\n})\nexport class HealthConfigModule {\n\n}","<!--Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-edit-prompt\n      [title]=\"'vsan.services.historicalhealth.settings.title' | localized\"\n      [subtitle]=\"clusterName\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"loading\"\n      [(alertMessages)]=\"alertMessages\"\n      [confirmText]=\"VsanUiUtils.getEditServiceButtonText(originalIsServiceEnabled)\"\n      (onConfirm)=\"edit()\">\n   <div class=\"dialog-container\">\n      <clr-toggle-container *ngIf=\"originalIsServiceEnabled\">\n         <clr-toggle-wrapper>\n            <input type=\"checkbox\"\n                   id=\"service-enable-switch\"\n                   clrToggle\n                   [(ngModel)]=\"enableService\"/>\n            <label>{{\"vsan.services.historicalhealth.settings.switch\" | localized}}</label>\n         </clr-toggle-wrapper>\n      </clr-toggle-container>\n      <div id=\"historical-health-settings-info\">{{\"vsan.services.historicalhealth.settings.info\" | localized}}</div>\n   </div>\n</vsan-edit-prompt>"],"sourceRoot":"webpack:///"}