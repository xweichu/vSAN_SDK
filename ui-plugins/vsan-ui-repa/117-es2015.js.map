{"version":3,"sources":["./src/app/vsan/shared-witness/dialog/reassign-witness-precheck-dialog.html","./src/app/vsan/shared-witness/wizard/select-clusters-page.html","./src/app/vsan/shared-witness/wizard/ready-to-complete-page.component.ts","./src/app/vsan/shared-witness/wizard/select-host-and-clusters-page.component.ts","./src/app/vsan/shared-witness/dialog/reassign-witness-precheck-dialog.component.ts","./src/app/vsan/shared-witness/wizard/ready-to-complete-page.html","./src/app/vsan/shared-witness/wizard/reassign-witness-wizard.component.ts","./src/app/vsan/shared-witness/wizard/add-clusters-wizard.component.ts","./src/app/vsan/shared-witness/wizard/select-clusters-page.component.ts","./src/app/vsan/shared-witness/wizard/select-host-and-clusters-page.html","./src/app/vsan/shared-witness/dialog/add-clusters-precheck-dialog.html","./src/app/vsan/shared-witness/wizard/add-clusters-wizard.component.ts.AddClustersWizardComponent.html","./src/app/vsan/shared-witness/wizard/reassign-witness-wizard.component.ts.ReassignWitnessWizardComponent.html","./src/app/vsan/shared-witness/dialog/add-clusters-precheck-dialog.component.ts","./src/app/vsan/shared-witness/wizard/shared-witness-wizard.module.ts"],"names":[],"mappings":"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","file":"117-es2015.js","sourcesContent":["<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-info-prompt *ngIf=\"showPrecheck\"\n                  [(alertMessages)]=\"validationMessages\"\n                  [allowAlertClose]=\"false\"\n                  [blockContent]=\"loading\"\n                  [title]=\"'vsan.cluster.sharedWitness.reassignWitnessPrecheck.dialog.title' | localized\">\n</vsan-info-prompt>\n<vsan-assign-witness-wizard *ngIf=\"!showPrecheck\"\n                            [context]=\"reassignWizardContext\">\n</vsan-assign-witness-wizard>","<!-- Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-select-clusters [twoNodeClusters]=\"twoNodeClusters\"\n                      [clustersValidationData]=\"clustersValidationData\"\n                      (selectionChanged)=\"selectionChanged($event)\"\n                      (validateCompatibility)=\"validateCompatibility()\"\n                      [witnessLimits]=\"sharedWitnessLimits\">\n</vsan-select-clusters>","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {InputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanDiskMapping} from \"@generated/vsan-disk-mapping\";\nimport {DiskMgmtUtil} from \"@util/disk-mgmt.util\";\nimport {InventoryNode} from \"@generated/inventory-node\";\n\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.host.sharedWitness.reassign.wizard.summary.title\"),\n)\n@Component({\n   templateUrl: \"ready-to-complete-page.html\",\n   styleUrls: [\"ready-to-complete-page.scss\"],\n})\nexport class ReadyToCompletePageComponent {\n\n   @InputProperty()\n   selectedClusters: InventoryNode[];\n\n   @InputProperty()\n   witnessHost: ManagedObject;\n\n   @InputProperty()\n   witnessHostNode: InventoryNode;\n\n   @InputProperty(InputProperty.required(false))\n   witnessHostDiskMapping: VsanDiskMapping;\n\n   ngOnInit() {\n      this.selectedClusters = this.selectedClusters.sort((c1, c2) =>\n            c1.name.localeCompare(c2.name));\n   }\n\n   claimedCache(): number {\n      return DiskMgmtUtil.lbaToBytes(this.witnessHostDiskMapping.ssd.capacity);\n   }\n\n   claimedCapacity(): number {\n      return this.witnessHostDiskMapping.nonSsd.reduce((sum, disk) => sum += DiskMgmtUtil.lbaToBytes(disk.capacity), 0);\n   }\n}","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {InventoryNode} from \"@component/inventory/inventory-node\";\nimport {AlertType} from \"@component/validation/alert-type\";\nimport {InputProperty, OutputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {OnValidate, PageControls} from \"@component/wizard/flow-wizard.component\";\nimport {ConfigureSharedWitnessWorkflowBacking} from \"@generated/configure-shared-witness-workflow-backing\";\nimport {DiskManagementService} from \"@generated/disk-management-service\";\nimport {FilterContextKey} from \"@generated/filter-context-key\";\nimport {InventoryNode as InventoryNodeInfo} from \"@generated/inventory-node\";\nimport {SharedWitnessClusterValidationData} from \"@generated/shared-witness-cluster-validation-data\";\nimport {VsanClaimDisksData} from \"@generated/vsan-claim-disks-data\";\nimport {VsanDiskMapping} from \"@generated/vsan-disk-mapping\";\nimport {WitnessCandidateInventoryService} from \"@generated/witness-candidate-inventory-service\";\nimport {WitnessHostValidationResult} from \"@generated/witness-host-validation-result\";\nimport {ManagedObject, ManagedObjectUtils} from \"@service/managed-object\";\nimport {WitnessHostValidation, WitnessValidationService} from \"@service/witness-validation.service\";\nimport {DiskMgmtUtil} from \"@util/disk-mgmt.util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"select-host-and-clusters-page.html\",\n   styleUrls: [\"select-host-and-clusters-page.scss\"],\n})\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.host.sharedWitness.reassign.wizard.selectClusters.title\"),\n)\nexport class SelectHostAndClustersPageComponent implements OnInit, OnValidate {\n\n   inventoryRoot: ManagedObject[];\n   filterContext: Map<FilterContextKey, ManagedObject>;\n   validationMessages: string[] = [];\n   validationAlertType: AlertType = AlertType.SUCCESS;\n   componentsLimit: number;\n   clustersValidationData: Map<string, SharedWitnessClusterValidationData>;\n   assignedClustersCount: number = 0;\n   witnessAssignedClusters: ManagedObject[] = [];\n\n   // Selected clusters including ones witnessed by the current host\n   selectedClustersAll: InventoryNodeInfo[] = [];\n\n   // Flag to track if currently selected host & clusters have been validated against backend\n   private skipWitnessValidation: boolean = false;\n\n   @InputProperty()\n   private pageControls: PageControls;\n\n   @InputProperty(InputProperty.required(false))\n   currentWitnessHost: ManagedObject;\n\n   @InputProperty()\n   clustersData: InventoryNodeInfo[];\n\n   // Selected clusters excluding ones witnessed by the current host\n   @OutputProperty()\n   selectedClusters: InventoryNodeInfo[] = [];\n\n   @OutputProperty()\n   clustersRefs: ManagedObject[];\n\n   @OutputProperty(OutputProperty.ifNull(VsanUiUtils.getString(\n         \"vsan.host.sharedWitness.reassign.wizard.selectClusters.validation.selectWitnessHost\")))\n   witnessHost: ManagedObject;\n\n   @OutputProperty()\n   witnessHostNode: InventoryNodeInfo;\n\n   @OutputProperty()\n   hasDiskGroupsOnWitness: boolean = false;\n\n   /*\n      witnessHostDiskMapping property is set in ClaimDisksWitnessHostPage which, however, is conditional based on\n      whether the selected host has disk groups or not.\n      Since the property is required for 'startingTaskProperty' method we must always define it.\n    */\n   @OutputProperty()\n   witnessHostDiskMapping: VsanDiskMapping;\n\n   constructor(private witnessHostService: WitnessValidationService,\n         public hostInventoryService: WitnessCandidateInventoryService,\n         private sharedWitnessService: ConfigureSharedWitnessWorkflowBacking,\n         private diskManagementService: DiskManagementService) {\n   }\n\n   ngOnInit(): void {\n      this.inventoryRoot = [ManagedObject.vcRoot(ManagedObject.contextObject.serverGuid)];\n      this.setInventoryFilterContext();\n      // Preselect all clusters\n      this.selectedClustersAll = this.clustersData;\n   }\n\n   private setInventoryFilterContext(): void {\n      if (this.currentWitnessHost) {\n         const filterContext: Map<FilterContextKey, ManagedObject> = new Map();\n         filterContext.set(FilterContextKey.CURRENT_WITNESS_HOST_REF, this.currentWitnessHost);\n         this.filterContext = filterContext;\n      }\n   }\n\n   async hostSelected(event: any): Promise<void> {\n      this.closeHostSelectionDropDown();\n      const item: InventoryNode = event.node;\n      if (this.witnessHost === item.data.nodeRef) {\n         // The selected host is already selected, nothing to do.\n         return;\n      }\n      this.assignedClustersCount = 0;\n      this.componentsLimit = null;\n      this.setHostData(item);\n      await this.validateCompatibility(true);\n   }\n\n   private setHostData(item: InventoryNode): void {\n      if (this.isHost(item)) {\n         this.witnessHost = item.data.nodeRef;\n         this.witnessHostNode = InventoryNodeInfo.Factory.create(\n               item.data.nodeRef, item.data.name, item.data.iconShape);\n      } else {\n         this.witnessHost = null;\n         this.witnessHostNode = null;\n      }\n   }\n\n   async validate(): Promise<string[]> {\n      // Don't start validation if it has already passed and cluster/host selection hasn't been changed\n      if (this.skipWitnessValidation) {\n         return null;\n      }\n      await this.validateCompatibility(false);\n      if (this.hasValidationError()) {\n         // prevent the user from proceeding if the selected host had validation errors\n         return this.validationMessages;\n      }\n      return null;\n   }\n\n   async validateCompatibility(setPageControlErrors: boolean): Promise<void> {\n      this.resetValidation();\n      if (!this.witnessHost) {\n         this.validationAlertType = AlertType.DANGER;\n         this.validationMessages.push(VsanUiUtils.getString(\n               \"vsan.host.sharedWitness.reassign.wizard.selectClusters.validation.selectWitnessHost\"));\n      } else {\n         // Query assigned clusters and validate that non assigned clusters are selected\n         await this.setAssignedClusters();\n         if (!this.selectedClusters.length) {\n            this.validationAlertType = AlertType.DANGER;\n            this.validationMessages.push(VsanUiUtils.getString(\n                  \"vsan.host.sharedWitness.reassign.wizard.selectClusters.validation.clusters\"));\n         }\n      }\n      if (VsanUiUtils.isEmpty(this.validationMessages)) {\n         await this.validateSharedWitnessHost();\n      }\n      if (!this.hasValidationError()) {\n         this.skipWitnessValidation = true;\n      } else if (setPageControlErrors) {\n         this.pageControls.setValidationErrors(this.validationMessages);\n      }\n      this.pageControls.rebuildToc();\n   }\n\n   private async setAssignedClusters(): Promise<void> {\n      this.witnessAssignedClusters = await this.pageControls.collect(\"witnessAssignedClusters\");\n      this.assignedClustersCount =\n            !VsanUiUtils.isEmpty(this.witnessAssignedClusters) ? this.witnessAssignedClusters.length : 0;\n      this.selectedClusters = this.selectedClustersAll.filter(\n            selClsInfo => !this.isClusterWitnessedByCurrentHost(selClsInfo));\n      this.clustersRefs = this.selectedClusters.map(c => c.moRef);\n   }\n\n   isClusterWitnessedByCurrentHost(clsInfo: InventoryNodeInfo): boolean {\n      if (!VsanUiUtils.isEmpty(this.witnessAssignedClusters)) {\n         return this.witnessAssignedClusters.some(\n               assignedClsRef => ManagedObject.areEqual(clsInfo.moRef, assignedClsRef));\n      } else {\n         return false;\n      }\n   }\n\n   private async validateSharedWitnessHost(): Promise<void> {\n      this.pageControls.setBusyState();\n      let witnessHostValidation: WitnessHostValidation;\n      try {\n         let hostValidationResult: WitnessHostValidationResult;\n         let witnessClaimDisksData: VsanClaimDisksData;\n         [hostValidationResult, this.componentsLimit, witnessClaimDisksData] = await Promise.all([\n            this.sharedWitnessService.getValidateNewWitnessHost(this.clustersRefs, this.witnessHost),\n            this.sharedWitnessService.getMaxComponentsPerCluster(this.witnessHost),\n            this.diskManagementService.getHostDisksClaimingData(this.witnessHost, false),\n         ]);\n         this.hasDiskGroupsOnWitness = DiskMgmtUtil.hasDiskGroups(witnessClaimDisksData);\n         this.clustersValidationData = this.witnessHostService.updateClustersValidation(\n               hostValidationResult.witnessValidationResult, this.clustersValidationData, this.clustersData);\n         witnessHostValidation = this.witnessHostService.handleSharedWitnessHostValidationResult(hostValidationResult);\n      } catch (error) {\n         witnessHostValidation = this.witnessHostService.handleHostValidationError(error);\n         this.hasDiskGroupsOnWitness = false;\n      }\n      this.validationMessages = witnessHostValidation.validationMessages;\n      this.validationAlertType = witnessHostValidation.validationAlertType;\n      this.pageControls.clearBusyState();\n   }\n\n   clusterSelectionChanged(): void {\n      // Upon changing the clusters selection we need to call the backend for validation\n      this.resetValidation();\n   }\n\n   private isHost(item: InventoryNode): boolean {\n      return item.data.nodeRef.type === ManagedObjectUtils.HOST ||\n            item.data.nodeRef.type === ManagedObjectUtils.COMPUTE_RESOURCE;\n   }\n\n   private resetValidation(): void {\n      this.validationAlertType = AlertType.SUCCESS;\n      this.validationMessages = [];\n      this.skipWitnessValidation = false;\n      this.clustersRefs = [];\n      this.selectedClusters = [];\n      this.pageControls.clearValidationErrors();\n      this.pageControls.rebuildToc();\n   }\n\n   private hasValidationError(): boolean {\n      return this.validationMessages && this.validationMessages.length && this.validationAlertType === AlertType.DANGER;\n   }\n\n   private closeHostSelectionDropDown(): void {\n      // Close dropdown programmatically via element's click.\n      // *clrIfOpen=\"openDropDown\" cannot be used because dropdown's contents should always be rendered in order\n      // to access WitnessHostSelectionComponent\n      document.getElementById(\"shared-witness-select\").click();\n   }\n\n   // Get info labels for assigned cluster count and possible witness vLCM disablement\n   getInfoLabels(): string[] {\n      let assignedClustersMessage: string;\n      if (this.assignedClustersCount === 1) {\n         assignedClustersMessage = VsanUiUtils.getString(\n               \"vsan.host.sharedWitness.reassign.wizard.selectClusters.assignedClustersCount.one\",\n                     this.witnessHostNode.name);\n      } else {\n         assignedClustersMessage = VsanUiUtils.getString(\n               \"vsan.host.sharedWitness.reassign.wizard.selectClusters.assignedClustersCount.many\",\n               this.witnessHostNode.name,\n               this.assignedClustersCount);\n      }\n      if (this.validationAlertType === AlertType.INFO) {\n         return [assignedClustersMessage, this.validationMessages[0]];\n      } else {\n         return [assignedClustersMessage];\n      }\n   }\n\n   getComponentsLimitLabel(): string | number {\n      return VsanUiUtils.isNumericValue(this.componentsLimit) ?\n            this.componentsLimit : VsanUiUtils.getString(\"vsan.na.label\");\n   }\n}\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ConfigureSharedWitnessWorkflowBacking} from \"@generated/configure-shared-witness-workflow-backing\";\nimport {InventoryNode} from \"@generated/inventory-node\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {SharedWitnessConstants} from \"../common/shared-witness-constants\";\n\n@Component({\n   templateUrl: \"reassign-witness-precheck-dialog.html\",\n   selector: \"vsan-reassign-witness-precheck-dialog\",\n   styleUrls: [\"reassign-witness-precheck-dialog.scss\"],\n})\nexport class ReassignWitnessPrecheckDialogComponent implements OnInit {\n\n   loading: boolean = false;\n   showPrecheck: boolean = true;\n   validationMessages: string[] = [];\n   reassignWizardContext: any;\n\n   constructor(private configureSharedWitnessWorkflowBacking: ConfigureSharedWitnessWorkflowBacking) {\n   }\n\n   ngOnInit(): void {\n      const clustersRefs: ManagedObject[] = ManagedObject.contextObjects;\n      if (clustersRefs.length >= SharedWitnessConstants.MAX_NUMBER_OF_SHARED_CLUSTERS) {\n         this.validationMessages = [VsanUiUtils.getString(\n               \"vsan.cluster.sharedWitness.reassignWitnessPrecheck.dialog.validation.tooManyClusters\",\n               clustersRefs.length, SharedWitnessConstants.MAX_NUMBER_OF_SHARED_CLUSTERS)];\n         return;\n      }\n      // If there aren't any validation errors hide the current precheck dialog and show reassign witness wizard.\n      this.reassignWitness(clustersRefs);\n   }\n\n   async reassignWitness(clustersRefs: ManagedObject[]): Promise<void> {\n      let clustersData: InventoryNode[];\n      try {\n         this.loading = true;\n         clustersData = await this.configureSharedWitnessWorkflowBacking.getClustersNodes(clustersRefs);\n      } catch (e) {\n         this.validationMessages = [e];\n         return;\n      } finally {\n         this.loading = false;\n      }\n      this.reassignWizardContext = {clustersData: clustersData};\n      // SDK API allows to modify modal height only and therefore the max width of wizard and dialogs is initially set.\n      VsanUiUtils.setModalDialogHeight(700);\n      this.showPrecheck = false;\n   }\n}\n","<!-- Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div class=\"clr-row\">\n   <label class=\"clr-col-4 clr-control-label\">\n      {{\"vsan.host.sharedWitness.reassign.wizard.summary.clusters\" | localized}}\n   </label>\n   <div class=\"clr-col-8 clusters\">\n      <div *ngFor=\"let clusterData of selectedClusters\"\n            vsan-show-title>\n         <clr-icon [attr.shape]=\"clusterData.primaryIconId\"></clr-icon>\n         <span>\n            {{clusterData.name}}\n         </span>\n      </div>\n   </div>\n</div>\n<div class=\"clr-row\">\n   <label class=\"clr-col-4 clr-control-label\">\n      {{\"vsan.host.sharedWitness.reassign.wizard.summary.witnessHost\" | localized}}\n   </label>\n   <div class=\"clr-col-8\">\n      <span vsan-show-title\n            class=\"cell-value\">\n         <clr-icon [attr.shape]=\"witnessHostNode.primaryIconId\"></clr-icon>\n         {{witnessHostNode.name}}\n      </span>\n   </div>\n</div>\n<ng-container *ngIf=\"witnessHostDiskMapping\">\n   <div class=\"clr-row\">\n      <label class=\"clr-col-4 clr-control-label\">\n         {{\"vsan.host.sharedWitness.reassign.wizard.summary.claimedCache\" | localized}}\n      </label>\n      <div class=\"clr-col-8\">\n         <span >\n            {{claimedCache() | fileSize}}\n         </span>\n      </div>\n   </div>\n   <div class=\"clr-row\">\n      <label class=\"clr-col-4 clr-control-label\">\n         {{\"vsan.host.sharedWitness.reassign.wizard.summary.claimedCapacity\" | localized}}\n      </label>\n      <div class=\"clr-col-8\">\n         <span >\n            {{claimedCapacity() | fileSize}}\n         </span>\n      </div>\n   </div>\n</ng-container>","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {PageSet} from \"@component/wizard/flow-wizard.component\";\nimport {SelectHostAndClustersPageComponent} from \"./select-host-and-clusters-page.component\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ClaimDisksWitnessHostPage} from \"@component/wizard/shared-pages/claim-disks-witness-host-page.component\";\nimport {ReadyToCompletePageComponent} from \"./ready-to-complete-page.component\";\nimport {ConfigureSharedWitnessWorkflowBacking} from \"@generated/configure-shared-witness-workflow-backing\";\nimport {Logger} from \"@util/logger\";\n\n@Component({\n   selector: \"vsan-assign-witness-wizard\",\n   template: `\n      <vsan-flow-wizard\n            [title]=\"'vsan.host.sharedWitness.reassign.wizard.title' | localized\"\n            [pageSets]=\"pages\"\n            [contextProperties]=\"context\"\n            [startingTaskProperty]=\"'configureSharedWitnessHost'\"\n            [services]=\"services\">\n      </vsan-flow-wizard>`,\n})\nexport class ReassignWitnessWizardComponent implements OnInit {\n\n   /**\n    * Holds wizard context data, shared between all the pages. Context is provided via:\n    * * Input property when the wizard is defined declaratively (e.g., precheck dialog).\n    * * Modal context when the wizard is opened via ModalBuilder (e.g., two host clusters view).\n    */\n   @Input()\n   context: any;\n\n   readonly services: any[] = [ConfigureSharedWitnessWorkflowBacking];\n\n   ngOnInit(): void {\n      if (!this.context) {\n         this.context = VsanUiUtils.getModalContext();\n      }\n      if (!this.context || !this.context.clustersData)  {\n         // This shouldn't happen as dialog is opened only when clustersData is not empty.\n         Logger.error(\"No clusters found in wizard context!\");\n      }\n   }\n\n   readonly pages: PageSet[] = [\n      new PageSet([SelectHostAndClustersPageComponent]),\n      new PageSet([ClaimDisksWitnessHostPage], (hasDiskGroupsOnWitness) => !hasDiskGroupsOnWitness),\n      new PageSet([ReadyToCompletePageComponent]),\n   ];\n}","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component} from \"@angular/core\";\nimport {PageSet} from \"@component/wizard/flow-wizard.component\";\nimport {ClaimDisksWitnessHostPage} from \"@component/wizard/shared-pages/claim-disks-witness-host-page.component\";\nimport {ReadyToCompletePageComponent} from \"./ready-to-complete-page.component\";\nimport {ConfigureSharedWitnessWorkflowBacking} from \"@generated/configure-shared-witness-workflow-backing\";\nimport {SelectClustersPageComponent} from \"./select-clusters-page.component\";\nimport {ManagedObject} from \"@service/managed-object\";\n\n@Component({\n   selector: \"vsan-add-clusters-wizard\",\n   template: `\n      <vsan-flow-wizard\n            [title]=\"'vsan.host.sharedWitness.addClusters.wizard.title' | localized\"\n            [pageSets]=\"pages\"\n            [contextProperties]=\"context\"\n            [startingTaskProperty]=\"'configureSharedWitnessHost'\"\n            [services]=\"services\">\n      </vsan-flow-wizard>`,\n})\nexport class AddClustersWizardComponent {\n\n   /**\n    * Holds wizard context data, shared between all the pages.\n    */\n   // Pass hostRef from wizard as ManagedObject.contextObject is not available when requested from the wizard page\n   context: any = {hostRef: ManagedObject.contextObject};\n   readonly services: any[] = [ConfigureSharedWitnessWorkflowBacking];\n\n   readonly pages: PageSet[] = [\n      new PageSet([SelectClustersPageComponent]),\n      new PageSet([ClaimDisksWitnessHostPage]),\n      new PageSet([ReadyToCompletePageComponent]),\n   ];\n}","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {InputProperty, OutputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {OnValidate, PageControls} from \"@component/wizard/flow-wizard.component\";\nimport {AlertType} from \"@component/validation/alert-type\";\nimport {TwoHostClusterData} from \"@generated/two-host-cluster-data\";\nimport {WitnessHostValidationResult} from \"@generated/witness-host-validation-result\";\nimport {WitnessHostValidation, WitnessValidationService} from \"@service/witness-validation.service\";\nimport {SharedWitnessClusterValidationData} from \"@generated/shared-witness-cluster-validation-data\";\nimport {InventoryNode} from \"@generated/inventory-node\";\nimport {SharedWitnessLimits} from \"@generated/shared-witness-limits\";\n\n@Component({\n   templateUrl: \"select-clusters-page.html\",\n   styleUrls: [\"select-clusters-page.scss\"],\n})\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.host.sharedWitness.addClusters.wizard.selectClusters.title\"),\n)\nexport class SelectClustersPageComponent implements OnInit, OnValidate {\n\n   validationMessages: string[] = [];\n   validationAlertType: AlertType = AlertType.SUCCESS;\n   clustersValidationData: Map<string, SharedWitnessClusterValidationData>;\n\n   // Flag to track if currently selected host & clusters have been validated against backend\n   private skipWitnessValidation: boolean = false;\n\n   @InputProperty()\n   private pageControls: PageControls;\n\n   @InputProperty()\n   twoNodeClusters: TwoHostClusterData[] = [];\n\n   @InputProperty()\n   sharedWitnessLimits: SharedWitnessLimits;\n\n   // Selected clusters excluding ones witnessed by the current host\n   @OutputProperty()\n   selectedClusters: InventoryNode[] = [];\n\n   @OutputProperty(OutputProperty.ifEmpty(\n         VsanUiUtils.getString(\"vsan.host.sharedWitness.reassign.wizard.selectClusters.validation.clusters\")))\n   clustersRefs: ManagedObject[];\n\n   @OutputProperty(OutputProperty.named(\"witnessHost\"))\n   @InputProperty()\n   hostRef: ManagedObject;\n\n   constructor(private witnessHostService: WitnessValidationService) {\n   }\n\n   ngOnInit(): void {\n      this.twoNodeClusters = JSON.parse(JSON.stringify(this.twoNodeClusters));\n   }\n\n   async validate(): Promise<string[]> {\n      // Don't start validation if it has already passed and cluster/host selection hasn't been changed\n      if (this.skipWitnessValidation) {\n         return null;\n      }\n      await this.validateCompatibility(false);\n      if (this.hasValidationError()) {\n         // prevent the user from proceeding if the selected host had validation errors\n         return this.validationMessages;\n      }\n      return null;\n   }\n\n   async validateCompatibility(setPageControlErrors: boolean = true): Promise<void> {\n      this.resetValidation();\n      if (VsanUiUtils.isEmpty(this.validationMessages)) {\n         await this.validateSharedWitnessHost();\n      }\n      if (!this.hasValidationError()) {\n         this.skipWitnessValidation = true;\n      } else if (setPageControlErrors) {\n         this.pageControls.setValidationErrors(this.validationMessages);\n      }\n      this.pageControls.rebuildToc();\n   }\n\n   resetValidation(): void {\n      this.validationAlertType = AlertType.SUCCESS;\n      this.validationMessages = [];\n      this.skipWitnessValidation = false;\n      this.pageControls.clearValidationErrors();\n      this.pageControls.rebuildToc();\n   }\n\n   private async validateSharedWitnessHost(): Promise<void> {\n      this.pageControls.setBusyState();\n      let witnessHostValidation: WitnessHostValidation;\n      try {\n         const result: WitnessHostValidationResult = await this.pageControls.collect(\"validateCurrentWitnessHost\");\n         this.clustersValidationData = this.witnessHostService.updateClustersValidation(\n               result.witnessValidationResult, this.clustersValidationData, this.twoNodeClusters.map(i => i.cluster));\n         witnessHostValidation = this.witnessHostService.handleSharedWitnessHostValidationResult(result);\n      } catch (error) {\n         witnessHostValidation = this.witnessHostService.handleHostValidationError(error);\n      }\n      this.validationMessages = witnessHostValidation.validationMessages;\n      this.validationAlertType = witnessHostValidation.validationAlertType;\n      this.pageControls.clearBusyState();\n   }\n\n   selectionChanged(clustersRefs: ManagedObject[]): void {\n      // Upon changing the clusters selection we need to call the backend for validation\n      this.resetValidation();\n      this.clustersRefs = clustersRefs;\n      this.selectedClusters = clustersRefs.map(this.getClusterDataByRef.bind(this));\n      // TODO: pass all clusters\n   }\n\n   private getClusterDataByRef(clusterRef: ManagedObject): InventoryNode {\n      return this.twoNodeClusters.find(clusterData =>\n            ManagedObject.uid(clusterData.cluster.moRef) === ManagedObject.uid(clusterRef)).cluster;\n   }\n\n   private hasValidationError(): boolean {\n      return !VsanUiUtils.isEmpty(this.validationMessages) && this.validationAlertType === AlertType.DANGER;\n   }\n}\n","<!-- Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-witness-host-requirements [headerKey]=\"'vsan.host.sharedWitness.reassign.wizard.selectClusters.description'\">\n</vsan-witness-host-requirements>\n<!--Select shared witness host from inventory browser-->\n<div class=\"select-host-section\">\n   <span class=\"bold\">\n      {{\"vsan.host.sharedWitness.reassign.wizard.selectClusters.selectWitness.label\" | localized}}\n   </span>\n   <clr-dropdown id=\"shared-witness-select\"\n                 class=\"wide-item\">\n      <button type=\"button\"\n              class=\"dropdown-toggle btn btn-link\"\n              clrDropdownToggle>\n         <ng-container *ngIf=\"!witnessHost\">\n            {{\"vsan.host.sharedWitness.reassign.wizard.selectClusters.selectWitness.dropdown.label\" | localized}}\n         </ng-container>\n         <ng-container *ngIf=\"witnessHost\">\n            <clr-icon [attr.shape]=\"witnessHostNode?.primaryIconId\"\n                      class=\"inventory-node-icon\">\n            </clr-icon>\n            {{witnessHostNode?.name}}\n         </ng-container>\n         <clr-icon shape=\"caret down\"></clr-icon>\n      </button>\n      <clr-dropdown-menu clrPosition=\"bottom-left\"\n                         [attr.aria-label]=\"'vsan.common.srMessage.dropdownMenu.expanded.label' | localized:\n                              ('vsan.host.sharedWitness.reassign.wizard.selectClusters.selectWitness.label' | localized)\">\n         <!-- Inventory list -->\n         <vsan-inventory-browser\n               id=\"inventory-browser\"\n               [inventoryService]=\"hostInventoryService\"\n               [filterContext]=\"filterContext\"\n               [objRefs]=\"inventoryRoot\"\n               (nodeSelected)=\"hostSelected($event)\"\n               *ngIf=\"inventoryRoot\"\n               [searchInputAriaLabelKey]=\"'vsan.host.sharedWitness.reassign.wizard.selectClusters.selectWitness.searchInputAriaLabel'\">\n         </vsan-inventory-browser>\n      </clr-dropdown-menu>\n   </clr-dropdown>\n</div>\n<!--Components limit-->\n<div class=\"components-limit-section\">\n   <span class=\"bold\">\n      {{\"vsan.host.sharedWitness.reassign.wizard.selectClusters.componentsLimit\" | localized}}\n   </span>\n   <span>\n      {{getComponentsLimitLabel()}}\n   </span>\n</div>\n<!--Assigned clusters count-->\n<vsan-validation id=\"assigned-clusters-count\"\n                 alertType=\"info\"\n                 *ngIf=\"witnessHost && assignedClustersCount\"\n                 [alerts]=\"getInfoLabels()\"\n                 [alertsExpanded]=\"true\"\n                 [allowClose]=\"false\"\n                 [isSmall]=\"true\">\n</vsan-validation>\n<clr-datagrid id=\"witness-host-clusters-list\"\n              class=\"datagrid-compact\"\n              [(clrDgSelected)]=\"selectedClustersAll\"\n              (clrDgSelectedChange)=\"clusterSelectionChanged()\">\n   <clr-dg-column id=\"cluster-name-column\">\n      {{\"vsan.host.sharedWitness.reassign.wizard.selectClusters.cluster.name\" | localized}}\n   </clr-dg-column>\n   <clr-dg-column id=\"cluster-compatibility-column\">\n      {{\"vsan.host.sharedWitness.reassign.wizard.selectClusters.cluster.compatibility\" | localized}}\n   </clr-dg-column>\n   <clr-dg-row *clrDgItems=\"let clusterData of clustersData\"\n               [clrDgItem]=\"clusterData\"\n               [clrDgSelectable]=\"!isClusterWitnessedByCurrentHost(clusterData)\"\n               [clrDgSelected]=\"isClusterWitnessedByCurrentHost(clusterData)\"\n               [ngClass]=\"{'disable-action': isClusterWitnessedByCurrentHost(clusterData)}\">\n      <clr-dg-cell class=\"cluster-name-cell\">\n         <vsan-icon-item [label]=\"clusterData.name\"\n                         [shape]=\"clusterData.primaryIconId\">\n         </vsan-icon-item>\n      </clr-dg-cell>\n      <!-- Grid rows's height is expanded after triggering validation due to the icon's height reaching datagrid cell padding. -->\n      <clr-dg-cell class=\"cluster-compatibility-cell no-vertical-padding\">\n         <vsan-compatibility-cell vsan-show-title [copyToClipboard]=true\n                                  [isSelected]=\"selectedClustersAll.includes(clusterData)\"\n                                  [clusterValidationData]=\"clustersValidationData &&\n                                  clustersValidationData[clusterData.moRef.value]\"\n                                  [isClusterWitnessedByCurrentHost]=\"isClusterWitnessedByCurrentHost(clusterData)\">\n         </vsan-compatibility-cell>\n      </clr-dg-cell>\n   </clr-dg-row>\n   <clr-dg-footer></clr-dg-footer>\n</clr-datagrid>\n<clr-button-group class=\"btn-link\">\n   <clr-button id=\"validate-clusters-compatibility\"\n               name=\"validate-clusters-compatibility\"\n               type=\"button\"\n               class=\"btn btn-sm\"\n               (click)=\"validateCompatibility(true)\"\n               [disabled]=\"!witnessHost || !selectedClustersAll.length\">\n      {{\"vsan.host.sharedWitness.reassign.wizard.selectClusters.validateClusters.label\" | localized}}\n   </clr-button>\n</clr-button-group>\n","<!-- Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-info-prompt *ngIf=\"showPrecheck\"\n                  [(alertMessage)]=\"validationMessage\"\n                  [allowAlertClose]=\"false\"\n                  [blockContent]=\"loading\"\n                  [subtitle]=\"witnessHostName\"\n                  [title]=\"'vsan.host.sharedWitness.addClustersPrecheck.dialog.title' | localized\">\n</vsan-info-prompt>\n<ng-container *ngIf=\"!showPrecheck\">\n   <vsan-select-clusters-dialog *ngIf=\"hasDiskGroups\"></vsan-select-clusters-dialog>\n   <vsan-add-clusters-wizard *ngIf=\"!hasDiskGroups\"></vsan-add-clusters-wizard>\n</ng-container>\n","\n      <vsan-flow-wizard\n            [title]=\"'vsan.host.sharedWitness.addClusters.wizard.title' | localized\"\n            [pageSets]=\"pages\"\n            [contextProperties]=\"context\"\n            [startingTaskProperty]=\"'configureSharedWitnessHost'\"\n            [services]=\"services\">\n      </vsan-flow-wizard>","\n      <vsan-flow-wizard\n            [title]=\"'vsan.host.sharedWitness.reassign.wizard.title' | localized\"\n            [pageSets]=\"pages\"\n            [contextProperties]=\"context\"\n            [startingTaskProperty]=\"'configureSharedWitnessHost'\"\n            [services]=\"services\">\n      </vsan-flow-wizard>","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {SharedWitnessHostService} from \"@generated/shared-witness-host-service\";\nimport {SharedWitnessValidationService} from \"@generated/shared-witness-validation-service\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {VsanStretchedClusterService} from \"@generated/vsan-stretched-cluster-service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"add-clusters-precheck-dialog.html\",\n   selector: \"vsan-add-clusters-precheck-dialog\",\n   styleUrls: [\"add-clusters-precheck-dialog.scss\"],\n})\nexport class AddClustersPrecheckDialogComponent implements OnInit {\n   loading: boolean = false;\n   showPrecheck: boolean = true;\n   hasDiskGroups: boolean = false;\n   validationMessage: string;\n   witnessHostName: string = \"\";\n   private static DIALOG_HEIGHT_LARGE: number = 700;\n\n   constructor(private sharedWitnessValidationService: SharedWitnessValidationService,\n         private sharedWitnessHostService: SharedWitnessHostService,\n         private stretchedClusterService: VsanStretchedClusterService,\n         private vsanCapabilityProvider: VsanCapabilityProvider) {\n   }\n\n   async ngOnInit(): Promise<void> {\n      let witnessHostCompatibility: any;\n      try {\n         this.loading = true;\n         const isSharedWitnessSupported: boolean = await this.vsanCapabilityProvider.getIsSharedWitnessSupported(\n               ManagedObject.contextObject);\n         if (!isSharedWitnessSupported) {\n            this.validationMessage = VsanUiUtils.getString(\"vsan.sharedWitness.notSupported\");\n            return;\n         }\n         [witnessHostCompatibility, this.hasDiskGroups] = await Promise.all([\n            this.sharedWitnessValidationService.querySharedWitnessPrecheckCompatibility(ManagedObject.contextObject),\n            this.stretchedClusterService.hasDiskGroups(ManagedObject.contextObject),\n         ]);\n      } catch (e) {\n         this.validationMessage = e;\n         return;\n      } finally {\n         this.loading = false;\n      }\n      this.witnessHostName = Object.keys(witnessHostCompatibility)[0];\n      const validationError: string = witnessHostCompatibility[this.witnessHostName];\n      if (validationError) {\n         this.validationMessage = validationError;\n         return;\n      }\n\n      /*\n      If there aren't any validation errors hide the current precheck dialog and show add clusters dialog/wizard.\n      SDK API allows to modify modal height only and therefore the max width of wizard and dialogs is initially set.\n      */\n      VsanUiUtils.setModalDialogHeight(AddClustersPrecheckDialogComponent.DIALOG_HEIGHT_LARGE);\n      this.showPrecheck = false;\n   }\n}","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {DiskmgmtCommonModule} from \"@component/diskmgmt/diskmgmt-common.module\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\nimport {FlowWizardModule} from \"@component/wizard/flow-wizard.module\";\nimport {WizardSharedPagesModule} from \"@component/wizard/shared-pages/wizard-shared-pages.module\";\nimport {VsanCommonModule} from \"app/vsan/common/vsan-common.module\";\nimport {NgDragDropModule} from \"ng-drag-drop\";\nimport {SharedWitnessCommonModule} from \"../common/shared-witness-common.module\";\nimport {SharedWitnessRoutePaths} from \"../common/shared-witness-route-paths\";\nimport {AddClustersPrecheckDialogComponent} from \"../dialog/add-clusters-precheck-dialog.component\";\nimport {ReassignWitnessPrecheckDialogComponent} from \"../dialog/reassign-witness-precheck-dialog.component\";\nimport {AddClustersWizardComponent} from \"./add-clusters-wizard.component\";\nimport {ReadyToCompletePageComponent} from \"./ready-to-complete-page.component\";\nimport {ReassignWitnessWizardComponent} from \"./reassign-witness-wizard.component\";\nimport {SelectClustersPageComponent} from \"./select-clusters-page.component\";\nimport {SelectHostAndClustersPageComponent} from \"./select-host-and-clusters-page.component\";\n\nconst sharedWitnessHostWizardRoutes: Routes = [\n   {\n      path: SharedWitnessRoutePaths.REASSIGN_WITNESS_WIZARD,\n      component: ReassignWitnessWizardComponent,\n   },\n   {\n      path: SharedWitnessRoutePaths.ADD_CLUSTERS_WIZARD,\n      component: AddClustersWizardComponent,\n   },\n   {\n      path: SharedWitnessRoutePaths.ADD_CLUSTERS_PRECHECK_DIALOG,\n      component: AddClustersPrecheckDialogComponent,\n   },\n   {\n      path: SharedWitnessRoutePaths.REASSIGN_WITNESS_PRECHECK_DIALOG,\n      component: ReassignWitnessPrecheckDialogComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      ClarityModule,\n      NgDragDropModule,\n      VsanCommonModule,\n      FlowWizardModule,\n      DiskmgmtCommonModule,\n      WizardSharedPagesModule,\n      SharedWitnessCommonModule,\n      UnavailableViewModule,\n      RouterModule.forChild(sharedWitnessHostWizardRoutes),\n   ],\n   declarations: [\n      AddClustersPrecheckDialogComponent,\n      AddClustersWizardComponent,\n      ReassignWitnessPrecheckDialogComponent,\n      ReassignWitnessWizardComponent,\n      SelectClustersPageComponent,\n      SelectHostAndClustersPageComponent,\n      ReadyToCompletePageComponent,\n   ],\n   entryComponents: [\n      AddClustersPrecheckDialogComponent,\n      ReassignWitnessPrecheckDialogComponent,\n      SelectClustersPageComponent,\n      SelectHostAndClustersPageComponent,\n      ReadyToCompletePageComponent,\n   ],\n})\nexport class SharedWitnessWizardModule {\n}"],"sourceRoot":"webpack:///"}