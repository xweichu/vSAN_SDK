{"version":3,"sources":["webpack:///src/app/vsan/common/util/validation/validator.ts","webpack:///src/app/vsan/services/historical-health-settings.html","webpack:///src/app/vsan/cluster/configure/action/edit-advanced-options.component.ts","webpack:///src/app/vsan/services/network-options.component.ts","webpack:///src/app/vsan/services/services.component.ts","webpack:///src/app/vsan/cluster/configure/action/generate-encryption-keys.component.ts","webpack:///src/app/vsan/services/network-options.html","webpack:///src/app/vsan/services/data-services.component.ts","webpack:///src/app/vsan/common/service/navigation/model/documentation-id.ts","webpack:///src/app/vsan/cluster/configure/action/edit-vsan-config.component.ts","webpack:///src/app/vsan/cluster/configure/action/edit-network.html","webpack:///src/app/vsan/cluster/configure/action/edit-vsan-managed-disk-claim.component.ts","webpack:///src/app/vsan/services/advanced-options.html","webpack:///src/app/vsan/cluster/configure/action/generate-encryption-keys.component.html","webpack:///src/app/vsan/services/advanced-options.component.ts","webpack:///src/app/vsan/services/support-insight.component.ts","webpack:///src/app/vsan/services/cluster-power-state-change-progress.component.ts","webpack:///src/app/vsan/cluster/configure/action/edit-vsan-managed-disk-claim.html","webpack:///src/app/vsan/cluster/configure/action/large-scale-cluster-support-change-prompt.component.ts","webpack:///src/app/vsan/services/capacity-management-settings.component.ts","webpack:///src/app/vsan/common/util/validation/validators-group.ts","webpack:///src/app/vsan/cluster/configure/action/edit-iscsi-target-config.component.ts","webpack:///src/app/vsan/cluster/configure/action/edit-network.component.ts","webpack:///src/app/vsan/services/iscsi-target-settings.component.ts","webpack:///src/app/vsan/services/vsan-max-settings.component.ts","webpack:///src/app/vsan/cluster/configure/action/edit-iscsi-target-config.html","webpack:///src/app/vsan/services/cluster-power-state-change-progress.html","webpack:///src/app/vsan/common/component/card/status-card.component.ts","webpack:///src/app/vsan/services/performance-service.html","webpack:///src/app/vsan/services/services.html","webpack:///src/app/vsan/cluster/configure/action/edit-vsan-config.html","webpack:///src/app/vsan/services/iscsi-target-settings.html","webpack:///src/app/vsan/services/file-service.html","webpack:///src/app/vsan/services/data-services.html","webpack:///src/app/vsan/common/util/validation/action-available-status.ts","webpack:///src/app/vsan/cluster/configure/action/large-scale-cluster-support-change-prompt.component.ts.LargeScaleClusterSupportChangePromptComponent.html","webpack:///src/app/vsan/services/vsan-max-settings.html","webpack:///src/app/vsan/services/performance-service.component.ts","webpack:///src/app/vsan/services/capacity-management-settings.html","webpack:///src/app/vsan/common/util/version.ts","webpack:///src/app/vsan/services/support-insight.html","webpack:///src/app/generated/encryption-rekey-spec.ts","webpack:///src/app/generated/vsan-iscsi-config-edit-spec.ts","webpack:///src/app/vsan/cluster/configure/action/edit-advanced-options.html","webpack:///src/app/vsan/services/historical-health-settings.component.ts","webpack:///src/app/vsan/common/component/card/status-card.html","webpack:///src/app/vsan/services/file-service.component.ts","webpack:///src/app/vsan/services/services.module.ts"],"names":["Validator","errorCondition","errorMessage","instance","EditAdvancedOptionsComponent","advancedOptionsService","stretchedClusterService","rdmaService","formBuilder","alertMessages","objectRepairTimer","isSiteReadLocalityEnabled","isCustomizedSwapObjectEnabled","largeClusterSupportEnabled","isGuestTrimUnmapEnabled","isAutomaticRebalanceEnabled","rebalancingThreshold","handleInfoResult","result","advancedOptionsInfo","advancedSettings","get","setValue","isConfigDifferent","options","getConfiguredAdvancedOptionsInfo","isLargeScaleClusterSupportDifferent","confirm","setSize","open","then","performChange","close","taskRef","closeModalDialog","Factory","create","value","capacityReservationConfig","formSettings","required","min","MIN_OBJECT_REPAIR_TIMER","max","MAX_OBJECT_REPAIR_TIMER","group","context","getModalContext","clusterName","clusterRef","vcCapabilityData","clusterCapabilityData","isAutomaticRebalanceSupported","addControl","MIN_REBALANCING_THRESHOLD","MAX_REBALANCING_THRESHOLD","setModalDialogHeight","DIALOG_HEIGHT","Promise","all","getAdvancedOptionsInfo","getIsVsanStretchedCluster","isRdmaEnabled","results","isStretchedCluster","statusChanges","subscribe","setTimeout","isFormInvalid","error","loading","messages","push","getString","join","configureAdvancedOptions","name","ON_INIT","PERFORM_CHANGE","srMessage","srMessageType","PAGE_TITLE","NetworkOptionsComponent","editTaskStarted","geStatusLabel","vsanConfig","enableRdma","isRdmaSupported","editClusterPermission","isEmptyCluster","advancedOptions","isRdmaStretchedClusterSupported","isStretchedClusterUnsupported","isLargeClusterSupportEnabled","RDMA_DIALOG_WIDTH","RDMA_DIALOG_HEIGHT","emit","RDMA_DIALOG_HEIGHT_UNSUPPORTED_HOSTS","ServicesComponent","dataService","vsanGeneralConfigService","ceipSvc","taskService","quickstartStatusNotification","upgradeService","configService","csdService","navigationService","storageService","statusNotificationService","ClusterPowerStateUtils","SUPPORT_INSIGHT_CARD","PERFORMANCE_SERVICE_CARD","FILE_SERVICE_CARD","ISCSI_SERVICE_CARD","DATA_SERVICES_CARD","CAPACITY_RESERVE_CARD","ADVANCED_OPTIONS_CARD","NETWORK_OPTIONS_CARD","HISTORICAL_HEALTH_CARD","VSAN_MAX_CARD","EMPTY_SPACE","isHAEnabled","isDPMEnabled","globalSettingsPermissions","configureStoragePermission","clusterPowerPermission","unavailableViewActionPermission","errorMessages","successMessages","showCards","isVsanUpgradeVisible","isEnableOrDisableVsanTaskFailed","isClusterPowerStateChanged","awaitThenInvoke","callback","getAwaitResult","bind","e","getServicesViewCards","Map","set","LEFT","RIGHT","cardsView","SERVICES_VIEW","subscribeForStatusChangeStarted","VSAN_CLUSTER_POWER_ON","VSAN_CLUSTER_POWER_OFF","refresh","VSAN_SERVICE_ENABLED","VSAN_SERVICE_DISABLED","awaitVsanStatusChange","subscribeForStatusChangeCompleted","statusChangeData","handleVsanStatusChangeComplete","getClusterRefFromLocalStorage","contextObject","reset","queryVsanGeneralConfig","queryDataserviceProperties","isComputeOnlyCluster","fetchPerfServiceStatus","fetchCeipServiceEnabled","fetchStretchedClusterData","fetchIsStretchedCluster","getMountedDatastores","datastores","hasMountedRemoteDatastore","length","notifyClusterPowerStateChanged","isUnavailable","prepareDisabledSpec","fetchDisksUpgradeData","pageTitleFocused","registerQuickstartNotification","isClusterPoweredOff","clusterPowerState","isEnabled","pop","SERVICES_CONTEXT_KEY","unavailableViewSpec","upgradeData","ceipEnabled","processVsanStatusChange","originalIsVsanEnabled","originalIsComputeOnlyCluster","resolve","globalRefresh","getVsanGeneralConfigData","generalConfig","cloneVsanConfigSpec","clusterPermissions","vcPermissions","EDIT_CLUSTER","CONFIG_STORAGE","SHUTDOWN_CLUSTER","GLOBAL_SETTINGS","getProperties","host","configurationEx","dasConfig","enabled","dpmConfigInfo","dsProps","hostCount","clusterMode","COMPUTE","SERVICES_VIEW_CLUSTER_SHUT_DOWN","isClusterChangingPowerState","SERVICES_VIEW_COMPUTE_ONLY_CLUSTER_NO_HOSTS","SERVICES_VIEW_COMPUTE_ONLY_CLUSTER","SERVICES_VIEW_COMPUTE_ONLY_CLUSTER_NO_MOUNTED_REMOTE_DATASTORE","VSAN_DISABLED","VSAN_DISABLED_NO_HOSTS","triggerRecalculate","next","isVsanEnabled","clusterData","getUpgradeStatus","upgradeStatus","getNewInstance","getUpgradeData","data","getPerformanceStatus","perfSvsStatus","status","perfSvcConfig","details","perfSvcEnabled","ENABLED","getCeipServiceEnabled","supportInsightError","getAvailableDomains","availableDomains","CLUSTER_POWER_OFF_WIZARD","TURN_OFF_VSAN","isClusterPoweredOn","haDpmWarningMessages","warningMessages","concat","actionLinks","label","action","navigateTo","CLUSTER_DRS","CLUSTER_HA","taskStatus","ERROR","GenerateEncryptionKeysComponent","encryptionProvider","reEncryptData","allowReducedRedundancy","manageKeysPermission","eraseDisksBeforeUse","permissions","MANAGE_KEYS","spec","rekeyEncryptedCluster","errors","DataServicesComponent","spaceEfficiencyService","ServiceUtils","formatMinutesInDaysOrHours","formatMinutes","shallowRekeyPermission","SHALLOW_REKEY","isSpaceEfficiencySupported","enableDataAtRestEncryption","eventTarget","event","target","height","autoClaimDisks","setEventTarget","clusterId","uid","setTitle","DocumentationId","EditVsanConfigComponent","vsanConfigService","configureClusterMutationProvider","fileServiceConfigService","validationErrors","contextObjectName","contextHeight","fromUid","isFileServiceOweSupported","config","showFileServiceOweDescription","vsanConfigSpec","hasInitializationError","isConfigChanged","validateConfig","isEmpty","startTask","isFeatureSupportedOnRuntime","OWE","featureSupporteMap","configure","ON_CONFIRM","EditVsanManagedDiskClaim","vsanMaxSettingsService","getVsanConfigSpec","isDiskClaimVsanManaged","configureVsanMaxSettings","task","AdvancedOptionsComponent","getNavigationData","advancedOptionsExpanded","isExpanded","edit","SupportInsightComponent","Status","KnowledgeBaseId","navigateToCeip","navigateWithoutContextObject","CEIP_VIEW","ClusterPowerStateChangeProgressComponent","clusterPowerService","refWatcher","clusterPowerStateChanged","isVcOnVsan","localizedSteps","HA_DISABLED","SUPPORTED_VMS_POWERED_OFF","VC_VM_POWERED_OFF","VSAN_MEMBERSHIP_UPDATE_DISABLED","VSAN_DOM_PAUSE_ALL_CCPS_SET","INFRA_VM_RECORDED","HOST_INFRA_VMS_POWERED_OFF","HOSTS_IN_MM","HOSTS_POWER_OFF_INITIATED","CLUSTER_POWERED_OFF","HOSTS_OUT_OF_MM","VSAN_DOM_PAUSE_ALL_CCPS_UNSET","VSAN_MEMBERSHIP_UPDATE_ENABLED","HOST_INFRA_VMS_POWERED_ON","VC_VM_POWERED_ON","SUPPORTED_VMS_POWERED_ON","HA_ENABLED","CLUSTER_POWERED_ON","updatePowerStateProgress","getPowerState","checkForVcOnVsan","getInfo","taskInfo","REFRESH_INTERVAL_MS","resumePowerStateChange","isClusterShuttingDown","step","stepIndex","isStepCompleted","CLR_SUCCESS_ICON_CLASS","isStepFailed","CLR_ERROR_ICON_CLASS","CLR_SUCCESS_STANDARD_ICON_SHAPE","CLR_ERROR_STANDARD_ICON_SHAPE","EMPTY_ICON","getCurrentlyRunningStepIndex","isCurrentStep","inProgressStatuses","indexOf","currentOperation","includes","LargeScaleClusterSupportChangePromptComponent","CapacityManagementSettingsComponent","capacityManagementService","hasEditPermissions","fetch","isCapacityManagementDataLoaded","getCapacityManagementData","capacityManagementData","isCapacityReservationSupported","isReservationEditingApplicable","getCapacityManagementStatus","isCapacityCustomizableThresholdsSupportedOnVc","showOldFormatInfo","isUpgradeNeeded","isCapacityCustomizableThresholdsSupported","CAPACITY_MANAGEMENT","CAPACITY_MANAGEMENT_DIALOG","width","ValidatorsGroup","validators","entity","every","validator","validate","filter","map","getErrorMessage","find","IscsiTargetAuthType","EditIscsiTargetComponent","iscsiProvider","pbmProvider","iscsiMutationProvider","VsanUiUtils","handleConfig","iscsiConfig","network","port","DEFAULT_PORT","authSpec","originalIsServiceEnabled","isServiceEnabled","emptyCluster","authType","toString","outgoingUser","outgoingSecret","incomingUser","incomingSecret","policy","pickInitialPolicy","availableNetworks","iscsiSettings","TCP_PORT_MIN","TCP_PORT_MAX","policyValidator","validateControls","controls","handleAuthChange","type","CHAP","MIDDLE_HEIGHT","CHAP_Mutual","EXPANDED_HEIGHT","DEFAULT_HEIGHT","markAsTouched","clearAlert","updateValueAndValidity","invalid","iscsiSettingsForm","editSpec","NoAuth","editIscsiConfig","control","policyMessage","validatePolicy","chooseEmptyPolicyError","policyInvalid","handleMutationResult","getVsanIscsiTargetConfig","getHostsCommonVnicList","getStoragePolicies","availablePolicies","iSCSIConfig","initialPolicy","homeObjectStorageProfile","id","isDefault","touched","EditNetworkComponent","Icon","AlertType","documentationUrl","getVmwareHelpUrl","NETWORKING_URL","RDMA_DOCUMENTATION","hasSharedWitnessHost","getRdmaData","rdmaData","originalIsRdmaEnabled","showUnsupportedHosts","hasUnsupportedHosts","hasConfigLimitation","DANGER","SUCCESS","hostRef","HOST_PHYSICAL_ADAPTERS","configureVsanRdma","alertMessage","unsupportedHosts","IscsiTargetSettingsComponent","VsanIscsiUtil","queryIscsiTargetConfig","getIscsiTargetStatus","isUnset","readPoliciesPermission","READ_POLICIES","VsanMaxSettingsComponent","diskManagementActionAvailabilityService","vsanMaxStatus","isVsanMaxEnabled","Enabled","Disabled","checkAvailability","getActionValidationContext","available","message","actionId","EDIT_VSAN_MANAGED_DISK_CLAIM_ID","hasEditPermission","autoClaimMode","allHosts","clusterCapabilities","hasHostMaintenancePermission","spaceEfficiencyConfig","VSAN_DISK_CLAIM_ACTION_DIALOG","StatusCardComponent","isExpandedChange","_isExpanded","ENABLED_SERVICE_LABELS","Partial","PARTIAL_ENABLED_SERVICE_LABELS","DISABLED_SERVICE_LABELS","LABEL_CLASS","LABEL_SUCCESS_CLASS","LABEL_PARTIAL_CLASS","ActionAvailableStatus","PerformanceServiceComponent","size","serviceEnabled","PERF_SVC_EDIT_ACTION_DIALOG","PERF_SVC_ENABLE_ACTION_DIALOG","PERFORMANCE_CONFIG","storagePolicyId","navigateToVmStoragePoliciesView","Version","version","parts","split","build","parseInt","major","minor","revision","patchLevel","that","orderedFields","i","fieldName","versionStr","v1","v2","compare","ovfFilePathOrName","OVF_VERSION_PATTERN","exec","EncryptionRekeySpec","VsanIscsiConfigEditSpec","enableIscsiTargetService","HistoricalHealthSettingsComponent","openDialog","FileServiceComponent","fileService","ipSettings","fetchMethod","taskRefs","runningTasks","call","vcServerPermission","GLOBAL_VCSERVER","fileServiceData","vdfsConfig","isFsDomainMissing","domainConfig","fsvmVersion","precheckResult","vcVersion","hostVersion","adConfigSupported","activeDirectorySupported","affinitySiteSupported","largeScaleClusterSupported","advancedPreflightCheckSupported","getIpSettings","loadLastDomainFailureReport","updateOvfData","preflightCheckErrors","getLastDomainFailureReport","failureReport","lastFailedDomainConfig","adConfig","getPublicOvfProps","getOvfProps","ovfProps","url","latestOvfVersion","fromFilePathOrName","existingOvfVersion","ovfInstalled","hasLatestOvf","isSame","vdfsPrecheckIssue","isPerfServiceEnabled","isFileAnalyticsEnabled","hasOldHost","isLarger","oldDiskFormatVersion","latestDiskFmtVersion","minDiskFmtVersion","isLatestOvfVersionInstalled","isSeparatingFileServiceWorkflowSupported","precheck","mixedModeIssue","networkPartitionIssue","vsanDatastoreIssue","dvsConfigIssue","FILE_SERVICE_SHARES","vsanVdfsConfig","JSON","parse","stringify","enableDialogContext","setDimensions","DEFAULT_SIZE","isDisabled","enableFileService","isEdit","capabilityData","fileSharesCount","numberOfShares","hasLastestOvf","ovfVersion","hasAdConfigured","domain","lastDomainConfigErrors","WIZARD_XL","Array","fileShareCount","upgradeFsvmTask","DATA","servicesRoutes","path","component","ServicesModule"],"mappings":"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","file":"67-es5.js","sourcesContent":["/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\n/**\n * Validator accept two functions as constructor parameters:\n * 1. errorCondition - predicate which is telling us when the validation must fail.\n * 2. errorMessage - function which build error message OR error message when the errorCondition return TRUE.\n */\nexport class Validator<TEntity> {\n   constructor(\n         private readonly errorCondition: (entity: TEntity) => boolean,\n         private readonly errorMessage?: string | ((entity: TEntity) => string),\n   ) { }\n\n   validate(instance: TEntity): boolean {\n      return !this.errorCondition(instance);\n   }\n\n   getErrorMessage(instance: TEntity): string {\n      return typeof this.errorMessage === \"function\"\n            ? this.errorMessage(instance)\n            : this.errorMessage;\n   }\n}","<!-- Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-status-card [label]=\"'vsan.services.historicalhealth.title' | localized\"\n                  [allowDragging]=\"true\"\n                  [status]=\"getServiceStatus()\"\n                  [(isExpanded)]=\"isExpanded\">\n   <span id=\"loading-historical-health\"\n         *ngIf=\"!config\"\n         class=\"spinner spinner-md central-spinner\">\n   </span>\n   <div id=\"historical-health-info\">\n      {{\"vsan.services.historicalhealth.info\" | localized}}\n   </div>\n   <div class=\"card-footer\">\n      <clr-tooltip>\n         <span clrTooltipTrigger [vsan-ignore-focus]=\"!unavailableMessage\">\n            <!-- wrapped in span, because disabled element could not be clrTooltipTrigger for the tooltip -->\n            <button id=\"edit-health-service-config\"\n                    class=\"btn btn-sm btn-link\"\n                    aria-describedby=\"edit-health-service-config-description\"\n                    [disabled]=\"unavailableMessage\"\n                    (click)=\"editHistoricalHealthSettings()\">\n                     {{VsanUiUtils.getActionTitleByServiceStatus(getServiceStatus())}}\n            </button>\n         </span>\n         <clr-tooltip-content *ngIf=\"unavailableMessage\"\n                              id=\"edit-health-service-config-description\"\n                              clrPosition=\"top-right\"\n                              clrSize=\"md\">\n            {{unavailableMessage}}\n         </clr-tooltip-content>\n      </clr-tooltip>\n   </div>\n</vsan-status-card>","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {AdvancedOptionsService} from \"@generated/advanced-options-service\";\nimport {AdvancedOptionsInfo} from \"@generated/advanced-options-info\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {VsanStretchedClusterService} from \"@generated/vsan-stretched-cluster-service\";\nimport {VsanRdmaService} from \"@generated/vsan-rdma-service\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {LoaderName} from \"@service/flow/loader-name\";\n\n@Component({\n   templateUrl: \"edit-advanced-options.html\",\n   styleUrls: [\"edit-advanced-options.scss\"],\n   selector: \"vsan-edit-advanced-options\",\n})\nexport class EditAdvancedOptionsComponent implements OnInit {\n\n   static readonly MIN_OBJECT_REPAIR_TIMER: number = 0;\n   static readonly MAX_OBJECT_REPAIR_TIMER: number = 4294967295;\n   static readonly MIN_REBALANCING_THRESHOLD: number = 20;\n   static readonly MAX_REBALANCING_THRESHOLD: number = 75;\n\n   private static readonly DIALOG_HEIGHT: number = 520;\n\n   private advancedOptionsInfo: AdvancedOptionsInfo;\n\n   private isFormInvalid: boolean;\n\n   @LoadingIndicator({\n      name: [\n         LoaderName.ON_INIT, LoaderName.PERFORM_CHANGE],\n   })\n   loading: boolean;\n\n   alertMessages: string[] = [];\n\n   clusterRef: ManagedObject;\n   clusterName: string;\n\n   isStretchedCluster: boolean;\n   isRdmaEnabled: boolean;\n\n   clusterCapabilityData: VsanCapabilityData;\n   vcCapabilityData: VsanCapabilityData;\n\n   advancedSettings: FormGroup;\n   // Constants to use for the form fields\n   readonly objectRepairTimer: string = \"objectRepairTimer\";\n   readonly isSiteReadLocalityEnabled: string = \"isSiteReadLocalityEnabled\";\n   readonly isCustomizedSwapObjectEnabled: string = \"isCustomizedSwapObjectEnabled\";\n   readonly largeClusterSupportEnabled: string = \"largeClusterSupportEnabled\";\n   readonly isGuestTrimUnmapEnabled: string = \"isGuestTrimUnmapEnabled\";\n   readonly isAutomaticRebalanceEnabled: string = \"isAutomaticRebalanceEnabled\";\n   readonly rebalancingThreshold: string = \"rebalancingThreshold\";\n\n   constructor(private advancedOptionsService: AdvancedOptionsService,\n         private stretchedClusterService: VsanStretchedClusterService,\n         private rdmaService: VsanRdmaService,\n         private formBuilder: FormBuilder) {\n      const formSettings: any = {};\n      formSettings[this.objectRepairTimer] = new FormControl(\"\", [\n         Validators.required,\n         Validators.min(EditAdvancedOptionsComponent.MIN_OBJECT_REPAIR_TIMER),\n         Validators.max(EditAdvancedOptionsComponent.MAX_OBJECT_REPAIR_TIMER),\n      ]);\n      formSettings[this.isSiteReadLocalityEnabled] = \"\";\n      formSettings[this.isCustomizedSwapObjectEnabled] = \"\";\n      formSettings[this.largeClusterSupportEnabled] = \"\";\n      formSettings[this.isGuestTrimUnmapEnabled] = \"\";\n      this.advancedSettings = this.formBuilder.group(formSettings);\n   }\n\n   @Loader({\n      name: LoaderName.ON_INIT,\n      srMessage: \"vsan.services.advancedOptions.title\",\n      srMessageType: SrMessageType.PAGE_TITLE,\n   })\n   async ngOnInit(): Promise<void> {\n      const context: any = VsanUiUtils.getModalContext();\n      this.clusterName = context.clusterName;\n      this.clusterRef = context.clusterRef;\n      this.vcCapabilityData = context.vcCapabilityData;\n      this.clusterCapabilityData = context.clusterCapabilityData;\n\n      if (this.vcCapabilityData && this.vcCapabilityData.isAutomaticRebalanceSupported) {\n         this.advancedSettings.addControl(this.isAutomaticRebalanceEnabled, new FormControl(\"\"));\n         this.advancedSettings.addControl(this.rebalancingThreshold,\n               new FormControl(\"\", [\n                  Validators.required,\n                  Validators.min(EditAdvancedOptionsComponent.MIN_REBALANCING_THRESHOLD),\n                  Validators.max(EditAdvancedOptionsComponent.MAX_REBALANCING_THRESHOLD),\n               ]));\n         VsanUiUtils.setModalDialogHeight(EditAdvancedOptionsComponent.DIALOG_HEIGHT + 80);\n      }\n\n      const results: any[] = await Promise.all([\n         this.advancedOptionsService.getAdvancedOptionsInfo(this.clusterRef),\n         this.stretchedClusterService.getIsVsanStretchedCluster(this.clusterRef),\n         this.rdmaService.isRdmaEnabled(this.clusterRef)]);\n\n      this.handleInfoResult(results[0]);\n      this.isStretchedCluster = results[1];\n      this.isRdmaEnabled = results[2];\n\n\n      /*\n      * setTimeout prevents modal to get too early formStatus property because of checkbox asynchronous disable\n      * */\n      this.advancedSettings.statusChanges.subscribe(value => setTimeout(() => {\n         this.isFormInvalid = value === \"INVALID\";\n      }));\n   }\n\n   private handleInfoResult = (result: AdvancedOptionsInfo) => {\n      this.advancedOptionsInfo = result;\n      this.advancedSettings.get(this.objectRepairTimer).setValue(result.objectRepairTimer);\n      this.advancedSettings.get(this.isSiteReadLocalityEnabled).setValue(result.isSiteReadLocalityEnabled);\n      this.advancedSettings.get(this.isCustomizedSwapObjectEnabled).setValue(result.isCustomizedSwapObjectEnabled);\n      this.advancedSettings.get(this.largeClusterSupportEnabled).setValue(result.largeClusterSupportEnabled);\n      this.advancedSettings.get(this.isGuestTrimUnmapEnabled).setValue(result.isGuestTrimUnmapEnabled);\n      this.advancedSettings.get(this.isAutomaticRebalanceEnabled).setValue(result.isAutomaticRebalanceEnabled);\n      this.advancedSettings.get(this.rebalancingThreshold).setValue(result.rebalancingThreshold);\n   };\n\n   @ErrorHandler({name: LoaderName.ON_INIT})\n   private handleRequestError(error: string): void {\n      this.alertMessages = [error];\n   }\n\n   get blockApplyButton(): boolean {\n      return this.loading || this.isFormInvalid;\n   }\n\n   get rebalancingThresholdEnabled(): boolean {\n      return this.advancedSettings.get(this.isAutomaticRebalanceEnabled).value === true;\n   }\n\n   get largeClusterSupportMessage(): string {\n      const messages: string[] = [];\n      if (this.isRdmaEnabled) {\n         messages.push(VsanUiUtils.getString(\"vsan.services.advancedOptions.largeClusterSupport.signpost.rdmaEnabled\"));\n      }\n\n      messages.push(VsanUiUtils.getString(\"vsan.services.advancedOptions.largeClusterSupport.signpost\"));\n\n      return messages.join(\" \");\n   }\n\n   private isConfigDifferent = (): boolean => {\n      const options: AdvancedOptionsInfo = this.getConfiguredAdvancedOptionsInfo();\n      return this.advancedOptionsInfo.objectRepairTimer !== options.objectRepairTimer ||\n            this.advancedOptionsInfo.isSiteReadLocalityEnabled !== options.isSiteReadLocalityEnabled ||\n            this.advancedOptionsInfo.isCustomizedSwapObjectEnabled !== options.isCustomizedSwapObjectEnabled ||\n            this.advancedOptionsInfo.isGuestTrimUnmapEnabled !== options.isGuestTrimUnmapEnabled ||\n            this.advancedOptionsInfo.isAutomaticRebalanceEnabled !== options.isAutomaticRebalanceEnabled ||\n            (this.advancedOptionsInfo.isAutomaticRebalanceEnabled &&\n                  this.advancedOptionsInfo.rebalancingThreshold !== options.rebalancingThreshold) ||\n            this.isLargeScaleClusterSupportDifferent();\n   };\n\n   private isLargeScaleClusterSupportDifferent = (): boolean => {\n      return this.advancedOptionsInfo.largeClusterSupportEnabled !==\n            this.getConfiguredAdvancedOptionsInfo().largeClusterSupportEnabled;\n   };\n\n   confirm = () => {\n      if (this.isConfigDifferent()) {\n         if (this.isLargeScaleClusterSupportDifferent()) {\n            new ModalBuilder(\"services/editAdvancedOptionsConfirmation\")\n                  .setSize(400, 230)\n                  .open(null)\n                  .then(result => {\n                     this.performChange();\n                  });\n         } else {\n            this.performChange();\n         }\n      } else {\n         this.close();\n      }\n   };\n\n   @Loader({name: LoaderName.PERFORM_CHANGE})\n   private async performChange(): Promise<void> {\n      const taskRef: ManagedObject = await this.advancedOptionsService\n            .configureAdvancedOptions(this.clusterRef, this.getConfiguredAdvancedOptionsInfo());\n      this.close(taskRef);\n   }\n\n   @ErrorHandler({name: LoaderName.PERFORM_CHANGE})\n   private handlePerformChangeError(): void {\n      this.alertMessages = [VsanUiUtils.getString(\"vsan.services.advancedOptions.edit.error\")];\n      this.close();\n   }\n\n   private close = (taskRef?: ManagedObject) => {\n      VsanUiUtils.closeModalDialog(taskRef);\n   };\n\n   private getConfiguredAdvancedOptionsInfo = (): AdvancedOptionsInfo => {\n      return AdvancedOptionsInfo.Factory.create(\n            this.advancedSettings.get(this.objectRepairTimer).value,\n            this.advancedSettings.get(this.isSiteReadLocalityEnabled).value,\n            this.advancedSettings.get(this.isCustomizedSwapObjectEnabled).value,\n            this.advancedSettings.get(this.largeClusterSupportEnabled).value,\n            this.advancedSettings.get(this.isGuestTrimUnmapEnabled).value,\n            this.advancedSettings.get(this.isAutomaticRebalanceEnabled).value,\n            this.advancedSettings.get(this.rebalancingThreshold).value,\n            this.advancedOptionsInfo.capacityReservationConfig);\n   };\n}\n","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {VsanConfigSpec} from \"@generated/vsan-config-spec\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {ServiceUtils} from \"./service.utils\";\nimport {PersistedProperty} from \"@service/browser-storage.service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {EditNetworkContext} from \"@navigation/context/edit-network-context\";\n\n@Component({\n   selector: \"vsan-network-options\",\n   templateUrl: \"network-options.html\",\n   styleUrls: [\"network-options.scss\"],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NetworkOptionsComponent {\n\n   @Input()\n   vsanConfig: VsanConfigSpec;\n\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Input()\n   clusterName: string;\n\n   @Input()\n   clusterCapabilityData: VsanCapabilityData;\n\n   @Input()\n   editClusterPermission: boolean;\n\n   @Input()\n   isStretchedCluster: boolean;\n\n   @Input()\n   isEmptyCluster: boolean;\n\n   @Output()\n   editTaskStarted: EventEmitter<ManagedObject> = new EventEmitter<ManagedObject>();\n\n   @PersistedProperty(\"vsan-network-settings-card-expanded-state\")\n   isExpanded: boolean;\n\n   static readonly RDMA_DIALOG_HEIGHT_UNSUPPORTED_HOSTS: number = 490;\n   private static readonly RDMA_DIALOG_HEIGHT: number = 300;\n   private static readonly RDMA_DIALOG_WIDTH: number = 670;\n\n   get rdmaStatusLabel(): string {\n      return ServiceUtils.geStatusLabel(this.vsanConfig.enableRdma, this.clusterCapabilityData.isRdmaSupported);\n   }\n\n   get unavailableMessage(): string {\n      if (!this.editClusterPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      } else if (this.clusterCapabilityData && !this.clusterCapabilityData.isRdmaSupported) {\n         return VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupported\");\n      } else if (this.isEmptyCluster) {\n         return VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.emptyCluster\");\n      } else if (this.vsanConfig.advancedOptions.largeClusterSupportEnabled && !this.vsanConfig.enableRdma) {\n         return VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupportedLargeScaleCluster\");\n      } else if (this.isStretchedCluster && !this.clusterCapabilityData.isRdmaStretchedClusterSupported\n            && !this.vsanConfig.enableRdma ) {\n         return VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupportedStretchedCluster\");\n      }\n\n      return \"\";\n   }\n\n   edit(): void {\n      const context: EditNetworkContext = {\n         clusterRef: this.clusterRef,\n         clusterName: this.clusterName,\n         isStretchedClusterUnsupported: this.isStretchedCluster && !this.clusterCapabilityData.isRdmaStretchedClusterSupported,\n         isLargeClusterSupportEnabled: this.vsanConfig.advancedOptions.largeClusterSupportEnabled,\n      };\n\n      new ModalBuilder(\"services/editNetwork\")\n            .setSize(NetworkOptionsComponent.RDMA_DIALOG_WIDTH, NetworkOptionsComponent.RDMA_DIALOG_HEIGHT)\n            .open(context)\n            .then((taskRef: ManagedObject) => {\n               this.editTaskStarted.emit(taskRef);\n            });\n   }\n}\n","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit, QueryList, ViewChildren} from \"@angular/core\";\nimport {CardName, CardView} from \"@component/drag-and-drop/card-view\";\nimport {CardContainer, DragCardPosition} from \"@component/drag-and-drop/drag-card-position\";\nimport {DraggableCardDirective} from \"@component/drag-and-drop/draggable-card.directive\";\nimport {GeneralConfigData} from \"@component/general-settings/general-config.data\";\nimport {VsanGeneralConfigService} from \"@component/general-settings/vsan-general-config.service\";\nimport {UnavailableViewSpec} from \"@component/unavailable-view/unavailable-view-spec\";\nimport {UpgradeData} from \"@component/upgrade/upgrade.data\";\nimport {UpgradeService} from \"@component/upgrade/upgrade.service\";\nimport {AlertActionLink} from \"@component/validation/alert-action-link\";\nimport {CeipService} from \"@generated/ceip-service\";\nimport {ClusterMode} from \"@generated/cluster-mode\";\nimport {ClusterPowerState} from \"@generated/cluster-power-state\";\nimport {CsdService} from \"@generated/csd-service\";\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {MountedRemoteDatastore} from \"@generated/mounted-remote-datastore\";\nimport {PerfStatsObjectInfo} from \"@generated/perf-stats-object-info\";\nimport {Privileges} from \"@generated/privileges\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {VsanConfigService} from \"@generated/vsan-config-service\";\nimport {VsanConfigSpec} from \"@generated/vsan-config-spec\";\nimport {VsanServiceData} from \"@generated/vsan-service-data\";\nimport {VsanServiceStatus} from \"@generated/vsan-service-status\";\nimport {VsanStretchedClusterService} from \"@generated/vsan-stretched-cluster-service\";\nimport {InlineViewContextKey} from \"@model/inline-view-context-key.data\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {PersistentStorageService} from \"@service/browser-storage.service\";\nimport {ClusterComputeResource} from \"@service/client/dataservice/data-service-property\";\nimport {DataServiceClient} from \"@service/client/dataservice/data-service.service\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {StatusChangeType, VsanStatusChangeData} from \"@service/status-updates/vsan-status-change.data\";\nimport {VsanStatusNotificationService} from \"@service/status-updates/vsan-status-notification.service\";\nimport {TaskMonitorService, TaskStatus} from \"@service/task-monitor-service\";\nimport {ClusterPowerStateUtils} from \"@util/cluster-power-state-utils\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanRoutes} from \"../../vsan-routes\";\nimport {QuickstartNotificationService} from \"../hci/status/quickstart-notification.service\";\n\n@Component({\n   templateUrl: \"services.html\",\n   styleUrls: [\"services.scss\"],\n   selector: \"vsan-services\",\n})\nexport class ServicesComponent implements OnInit {\n\n   ClusterPowerStateUtils: typeof ClusterPowerStateUtils = ClusterPowerStateUtils;\n\n   // Service view cards\n   readonly SUPPORT_INSIGHT_CARD: string = \"supportInsight\";\n   readonly PERFORMANCE_SERVICE_CARD: string = \"performanceService\";\n   readonly FILE_SERVICE_CARD: string = \"fileService\";\n   readonly ISCSI_SERVICE_CARD: string = \"iscsiTargetService\";\n   readonly DATA_SERVICES_CARD: string = \"dataServices\";\n   readonly CAPACITY_RESERVE_CARD: string = \"capacityReserve\";\n   readonly ADVANCED_OPTIONS_CARD: string = \"advancedOptions\";\n   readonly NETWORK_OPTIONS_CARD: string = \"networkOptions\";\n   readonly HISTORICAL_HEALTH_CARD: string = \"historicalHealth\";\n   readonly VSAN_MAX_CARD: string = \"vsanMax\";\n   readonly EMPTY_SPACE: string = \" \";\n   cardsView: CardView;\n\n   // Common config data\n   vsanConfig: VsanConfigSpec;\n   clusterRef: ManagedObject;\n   clusterName: string;\n   hostCount: number;\n   upgradeData: UpgradeData;\n   ceipEnabled: boolean;\n   hasMountedRemoteDatastore: boolean;\n   clusterPowerState: ClusterPowerState;\n\n   // Permissions\n   clusterPermissions: Map<string, boolean>;\n   vcPermissions: Map<string, boolean>;\n   isHAEnabled: boolean = false;\n   isDPMEnabled: boolean = false;\n   editClusterPermission: boolean = false;\n   globalSettingsPermissions: boolean = false;\n   configureStoragePermission: boolean = false;\n   clusterPowerPermission: boolean = false;\n   unavailableViewActionPermission: boolean = false;\n\n   // Capabilities\n   vcCapabilityData: VsanCapabilityData;\n   clusterCapabilityData: VsanCapabilityData;\n\n   // Page properties\n   unavailableViewSpec: UnavailableViewSpec;\n   errorMessages: string[] = [];\n   successMessages: string[] = [];\n   supportInsightError: string;\n   pageTitleFocused: any;\n\n   // The service cards are defined inside templates, so they can be dragged\n   @ViewChildren(DraggableCardDirective) serviceTemplates: QueryList<DraggableCardDirective>;\n\n   availableDomains: DomainOrHostData[];\n   isStretchedCluster: boolean;\n   perfSvsStatus: VsanServiceStatus;\n   perfSvcConfig: PerfStatsObjectInfo;\n   perfSvcEnabled: boolean;\n\n   showCards: boolean = false;\n   isVsanUpgradeVisible: boolean = false;\n\n   @LoadingIndicator()\n   isLoading: boolean;\n\n   private isEnableOrDisableVsanTaskFailed: boolean = false;\n   isClusterPowerStateChanged: boolean = false;\n\n   constructor(private dataService: DataServiceClient,\n         private vsanGeneralConfigService: VsanGeneralConfigService,\n         private ceipSvc: CeipService,\n         private taskService: TaskMonitorService,\n         private quickstartStatusNotification: QuickstartNotificationService,\n         private upgradeService: UpgradeService,\n         private configService: VsanConfigService,\n         private stretchedClusterService: VsanStretchedClusterService,\n         private csdService: CsdService,\n         private navigationService: NavigationService,\n         private storageService: PersistentStorageService,\n         private statusNotificationService: VsanStatusNotificationService) {\n      this.cardsView = new CardView(CardName.SERVICES_VIEW, this.getServicesViewCards);\n      this.statusNotificationService.subscribeForStatusChangeStarted(\n            [StatusChangeType.VSAN_CLUSTER_POWER_ON, StatusChangeType.VSAN_CLUSTER_POWER_OFF],\n            () => this.refresh());\n      // Use this to make the services page in loading state as soon as vSAN is enabled/disabled\n      this.statusNotificationService.subscribeForStatusChangeStarted(\n            [StatusChangeType.VSAN_SERVICE_ENABLED, StatusChangeType.VSAN_SERVICE_DISABLED],\n            () => this.awaitVsanStatusChange(),\n      );\n      // PR 2786238: Make sure we show the up to date configuration info after vSAN is fully enabled.\n      this.statusNotificationService.subscribeForStatusChangeCompleted(\n            [StatusChangeType.VSAN_SERVICE_ENABLED, StatusChangeType.VSAN_SERVICE_DISABLED],\n            (statusChangeData) => this.handleVsanStatusChangeComplete(statusChangeData));\n   }\n\n   ngOnInit(): void {\n      this.clusterRef = this.getClusterRefFromLocalStorage() || ManagedObject.contextObject;\n      this.refresh();\n   }\n\n   @Loader({srMessage: \"manage.vsan.general\"})\n   @RefreshHandler\n   async refresh(): Promise<void> {\n      this.reset();\n      try {\n         await Promise.all([\n            this.queryVsanGeneralConfig(),\n            this.queryDataserviceProperties(),\n         ]);\n         if (!this.vsanConfig) {\n            this.errorMessages = [VsanUiUtils.getString(\"vsan.services.configuration.not.available\")];\n            return;\n         }\n\n         if (!this.isComputeOnlyCluster()) {\n            await Promise.all([\n               this.fetchPerfServiceStatus(),\n               this.fetchCeipServiceEnabled(),\n               this.fetchStretchedClusterData(),\n               this.fetchIsStretchedCluster(),\n            ]);\n         } else {\n            const datastores: MountedRemoteDatastore[] = await this.csdService.getMountedDatastores(this.clusterRef);\n            this.hasMountedRemoteDatastore = datastores.length > 0;\n         }\n\n         if (this.isClusterPowerStateChanged) {\n            this.notifyClusterPowerStateChanged();\n         }\n\n         this.showCards = !this.isUnavailable();\n         if (!this.showCards) {\n            this.prepareDisabledSpec();\n         } else if (!this.isComputeOnlyCluster()) {\n            this.fetchDisksUpgradeData();\n         }\n         // Focus page title via directive var. Object is passed to trigger model change on page refresh.\n         this.pageTitleFocused = {};\n      } catch (e) {\n         this.errorMessages = [e];\n      } finally {\n         this.registerQuickstartNotification();\n      }\n   }\n\n   private isUnavailable(): boolean {\n      return ClusterPowerStateUtils.isClusterPoweredOff(this.clusterPowerState)\n            || !this.vsanConfig.isEnabled\n            || this.isComputeOnlyCluster();\n   }\n\n   vsanUpgradeComplete(): void {\n      this.isVsanUpgradeVisible = true;\n      this.fetchDisksUpgradeData();\n   }\n\n   private getClusterRefFromLocalStorage(): ManagedObject {\n      return this.storageService.pop(InlineViewContextKey.SERVICES_CONTEXT_KEY);\n   }\n\n   /**\n    * Reset everything except vsanConfig due to PR 2710611. The refresh method could be excecuted by multiple trigger at\n    * the same time. If this happens, and we reset this.vsanConfig to null, the check at line 137 throws exception.\n    */\n   private reset(): void {\n      this.errorMessages = [];\n      this.successMessages = [];\n      this.unavailableViewSpec = null;\n      this.upgradeData = null;\n      this.ceipEnabled = true; // Use true to hide the card, while the data is loading.\n      this.isDPMEnabled = false;\n      this.isHAEnabled = false;\n   }\n\n   /**\n    * Using @Loader annotation on the \"processVsanStatusChange\" method makes the page change its loading state constantly\n    * as it completes multiple times, before the status gets changed. To fix this issue we need to move the\n    * @Loader annotation here, so that only when all promises of \"processVsanStatusChange\" get resolved,\n    * the loading indicator will be set to false.\n    */\n   @Loader()\n   private async awaitVsanStatusChange(): Promise<void> {\n      await this.processVsanStatusChange();\n   }\n\n   private async processVsanStatusChange(): Promise<void> {\n      const originalIsVsanEnabled: boolean = this.vsanConfig.isEnabled;\n      const originalIsComputeOnlyCluster: boolean = this.isComputeOnlyCluster();\n      // The task ended with an error, so the status will not change, stop waiting and resolve the promise.\n      if (this.isEnableOrDisableVsanTaskFailed) {\n         this.isEnableOrDisableVsanTaskFailed = false;\n         return Promise.resolve();\n      }\n\n      try {\n         await this.queryVsanGeneralConfig();\n         if (originalIsComputeOnlyCluster !== this.isComputeOnlyCluster() // vSAN HCI compute only was enabled or disabled\n               || originalIsVsanEnabled !== this.vsanConfig.isEnabled) { // vSAN was enabled/disabled\n            VsanUiUtils.globalRefresh();\n            return Promise.resolve();\n         }\n      } catch (e) {\n         this.errorMessages.push(e);\n         return Promise.resolve();\n      }\n\n      return new Promise((resolve) => {\n         setTimeout(() => {\n            resolve(this.processVsanStatusChange());\n         }, 1000);\n      });\n   }\n\n   async queryVsanGeneralConfig(): Promise<void> {\n      try {\n         const generalConfig: GeneralConfigData = await this.vsanGeneralConfigService.getVsanGeneralConfigData(\n               this.clusterRef);\n         this.vsanConfig = generalConfig.cloneVsanConfigSpec();\n         this.vcCapabilityData = generalConfig.vcCapabilityData;\n         this.clusterCapabilityData = generalConfig.clusterCapabilityData;\n         this.clusterPowerState = generalConfig.clusterPowerState;\n         this.clusterPermissions = generalConfig.clusterPermissions;\n         this.vcPermissions = generalConfig.vcPermissions;\n         this.editClusterPermission = this.clusterPermissions.get(Privileges.EDIT_CLUSTER());\n         this.configureStoragePermission = this.clusterPermissions.get(Privileges.CONFIG_STORAGE());\n         this.clusterPowerPermission = this.clusterPermissions.get(Privileges.SHUTDOWN_CLUSTER());\n         this.globalSettingsPermissions = this.vcPermissions.get(Privileges.GLOBAL_SETTINGS());\n      } catch (e) {\n         this.errorMessages.push(e);\n      }\n   }\n\n   private async queryDataserviceProperties(): Promise<void> {\n      try {\n         const dsProps: Map<string, any> = await this.dataService.getProperties([\n            ClusterComputeResource.name,\n            ClusterComputeResource.host.length,\n            ClusterComputeResource.configurationEx.dasConfig.enabled,\n            ClusterComputeResource.configurationEx.dpmConfigInfo.enabled,\n         ], this.clusterRef);\n         this.clusterName = dsProps.get(ClusterComputeResource.name);\n         this.hostCount = dsProps.get(ClusterComputeResource.host.length);\n         this.isHAEnabled = dsProps.get(ClusterComputeResource.configurationEx.dasConfig.enabled);\n         this.isDPMEnabled = dsProps.get(ClusterComputeResource.configurationEx.dpmConfigInfo.enabled);\n      } catch (e) {\n         this.errorMessages.push(e);\n      }\n   }\n\n   isComputeOnlyCluster(): boolean {\n      return this.vsanConfig?.clusterMode === ClusterMode.COMPUTE;\n   }\n\n   private prepareDisabledSpec(): void {\n      this.unavailableViewActionPermission = this.editClusterPermission;\n      if (ClusterPowerStateUtils.isClusterPoweredOff(this.clusterPowerState)) {\n         this.unavailableViewSpec = UnavailableViewSpec.SERVICES_VIEW_CLUSTER_SHUT_DOWN;\n         this.unavailableViewActionPermission = this.unavailableViewActionPermission && this.clusterPowerPermission;\n      } else if (this.isComputeOnlyCluster()) {\n         if (this.isClusterChangingPowerState) {\n            // If power-off/on is in progress, do not show the compute only view\n            return;\n         }\n         if (this.hostCount === 0) {\n            this.unavailableViewSpec = UnavailableViewSpec.SERVICES_VIEW_COMPUTE_ONLY_CLUSTER_NO_HOSTS;\n         } else if (this.hasMountedRemoteDatastore) {\n            this.unavailableViewSpec = UnavailableViewSpec.SERVICES_VIEW_COMPUTE_ONLY_CLUSTER;\n         } else {\n            this.unavailableViewSpec =\n                  UnavailableViewSpec.SERVICES_VIEW_COMPUTE_ONLY_CLUSTER_NO_MOUNTED_REMOTE_DATASTORE;\n         }\n      } else if (this.hostCount > 0) {\n         this.unavailableViewSpec = UnavailableViewSpec.VSAN_DISABLED;\n      } else {\n         this.unavailableViewSpec = UnavailableViewSpec.VSAN_DISABLED_NO_HOSTS;\n      }\n   }\n\n   private registerQuickstartNotification(): void {\n      try {\n         this.quickstartStatusNotification.triggerRecalculate.next({\n            isVsanEnabled: !!this.vsanConfig?.isEnabled,\n            clusterData: null,\n            clusterRef: this.clusterRef,\n         });\n      } catch (e) {\n         this.errorMessages.push(e);\n      }\n   }\n\n   fetchPrecheckUpgradeData(): void {\n      this.upgradeService.getUpgradeStatus(this.clusterRef)\n            .then(upgradeStatus => {\n               // Create a new instance to trigger the upgrade component's refresh\n               this.upgradeData = this.upgradeData.getNewInstance(upgradeStatus);\n            })\n            .catch(e => this.errorMessages.push(e));\n   }\n\n   fetchDisksUpgradeData(): void {\n      this.upgradeData = null;\n      this.upgradeService.getUpgradeData(this.clusterRef)\n            .then(data => this.upgradeData = data)\n            .catch(e => this.errorMessages.push(e));\n   }\n\n   private async fetchPerfServiceStatus(): Promise<void> {\n      try {\n         const result: VsanServiceData = await this.configService.getPerformanceStatus(this.clusterRef);\n         this.perfSvsStatus = result.status;\n         this.perfSvcConfig = result.details as PerfStatsObjectInfo;\n         this.perfSvcEnabled = result.status === VsanServiceStatus.ENABLED;\n      } catch (e) {\n         this.errorMessages.push(e);\n      }\n   }\n\n   private fetchCeipServiceEnabled(): Promise<any> {\n      return this.ceipSvc.getCeipServiceEnabled(this.clusterRef)\n            .then(result => this.ceipEnabled = result)\n            .catch(e => this.supportInsightError = e);\n   }\n\n   private fetchStretchedClusterData(): Promise<any> {\n      return this.stretchedClusterService.getAvailableDomains(this.clusterRef)\n            .then(result => this.availableDomains = result)\n            .catch(e => this.errorMessages.push(e));\n   }\n\n   private fetchIsStretchedCluster(): Promise<any> {\n      return this.stretchedClusterService.getIsVsanStretchedCluster(this.clusterRef)\n            .then(result => this.isStretchedCluster = result)\n            .catch(e => this.errorMessages.push(e));\n   }\n\n   shutdownCluster(): void {\n      new ModalBuilder(VsanRoutes.CLUSTER_POWER_OFF_WIZARD).setSize(950, 750).open();\n   }\n\n   turnOffVsan(): void {\n      new ModalBuilder(VsanRoutes.TURN_OFF_VSAN)\n            .setSize(600, 280)\n            .open({\n               clusterName: this.clusterName,\n               isComputeOnlyCluster: this.isComputeOnlyCluster(),\n            });\n   }\n\n   awaitThenInvoke = (taskRef: ManagedObject, callback: () => void) => {\n      if (!taskRef) {\n         callback();\n      } else {\n         this.taskService.getAwaitResult(taskRef)\n               .then(() => callback.bind(this)())\n               .catch(e => this.errorMessages.push(e));\n      }\n   };\n\n   get hasHaDpmWarnings(): boolean {\n      return !this.vsanConfig.isEnabled\n            && (!this.clusterPowerState || ClusterPowerStateUtils.isClusterPoweredOn(this.clusterPowerState))\n            && !this.isComputeOnlyCluster()\n            && this.haDpmWarningMessages.length > 0;\n   }\n\n   get haDpmWarningMessages(): string[] {\n      const warningMessages: string[] = [];\n      if (this.isDPMEnabled) {\n         warningMessages.push(VsanUiUtils.getString(\"vsan.services.unableToTurnOnVsan.reason.enabledDPM\")\n               .concat(this.EMPTY_SPACE,\n                     VsanUiUtils.getString(\"vsan.services.unableToTurnOnVsan.reason.enabledDPM.suggestedAction\")));\n      }\n      if (this.isHAEnabled) {\n         warningMessages.push(VsanUiUtils.getString(\"vsan.services.unableToTurnOnVsan.reason.enabledHA\")\n               .concat(this.EMPTY_SPACE,\n                     VsanUiUtils.getString(\"vsan.services.unableToTurnOnVsan.reason.enabledHA.suggestedAction\")));\n      }\n\n      return warningMessages;\n   }\n\n   getHaDpmActionLinks(): AlertActionLink[] {\n      const actionLinks: AlertActionLink[] = [];\n      if (this.isDPMEnabled) {\n         actionLinks.push({\n            label: VsanUiUtils.getString(\"vsan.services.unableToTurnOnVsan.actionLink.goToDRS\"),\n            action: () => this.navigationService.navigateTo(PlatformExtension.CLUSTER_DRS, this.clusterRef),\n         });\n      }\n      if (this.isHAEnabled) {\n         actionLinks.push({\n            label: VsanUiUtils.getString(\"vsan.services.unableToTurnOnVsan.actionLink.goToHA\"),\n            action: () => this.navigationService.navigateTo(PlatformExtension.CLUSTER_HA, this.clusterRef),\n         });\n      }\n\n      return actionLinks;\n   }\n\n   get isTurnOffVsanEnabled(): boolean {\n      return this.editClusterPermission\n            && (this.isComputeOnlyCluster() || (!this.isDPMEnabled && !this.isHAEnabled));\n   }\n\n   getTurnOffVsanDisabledReason(): string {\n      if (!this.editClusterPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      } else if (!this.isComputeOnlyCluster()) {\n         if (this.isHAEnabled && this.isDPMEnabled) {\n            return VsanUiUtils.getString(\"vsan.services.unableToTurnOffVsan.reason.enabledHAandDPM\");\n         } else if (this.isHAEnabled) {\n            return VsanUiUtils.getString(\"vsan.services.unableToTurnOffVsan.reason.enabledHA\");\n         } else if (this.isDPMEnabled) {\n            return VsanUiUtils.getString(\"vsan.services.unableToTurnOffVsan.reason.enabledDPM\");\n         }\n      }\n\n      return null;\n   }\n\n   get isShutdownActionAvailable(): boolean {\n      return ClusterPowerStateUtils.isClusterPoweredOn(this.clusterPowerState)\n            && this.hostCount > 0;\n   }\n\n   get isShutdownActionEnabled(): boolean {\n      return this.editClusterPermission\n            && this.clusterPowerPermission\n            && !this.isComputeOnlyCluster();\n   }\n\n   getShutdownDisabledReason(): string {\n      if (!this.editClusterPermission || !this.clusterPowerPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      } else if (this.isComputeOnlyCluster()) {\n         return VsanUiUtils.getString(\"vsan.cluster.shutdown.wizard.computeOnly.disabled.reason\");\n      }\n   }\n\n   get isClusterChangingPowerState(): boolean {\n      return ClusterPowerStateUtils.isClusterChangingPowerState(this.clusterPowerState);\n   }\n\n   private getServicesViewCards = (): Map<string, DragCardPosition> => {\n      const result: Map<string, DragCardPosition> = new Map<string, DragCardPosition>();\n      result.set(this.SUPPORT_INSIGHT_CARD, new DragCardPosition(CardContainer.LEFT, 0));\n      result.set(this.PERFORMANCE_SERVICE_CARD, new DragCardPosition(CardContainer.LEFT, 1));\n      result.set(this.FILE_SERVICE_CARD, new DragCardPosition(CardContainer.LEFT, 2));\n      result.set(this.NETWORK_OPTIONS_CARD, new DragCardPosition(CardContainer.LEFT, 3));\n      result.set(this.HISTORICAL_HEALTH_CARD, new DragCardPosition(CardContainer.LEFT, 4));\n      result.set(this.ISCSI_SERVICE_CARD, new DragCardPosition(CardContainer.RIGHT, 0));\n      result.set(this.DATA_SERVICES_CARD, new DragCardPosition(CardContainer.RIGHT, 1));\n      result.set(this.CAPACITY_RESERVE_CARD, new DragCardPosition(CardContainer.RIGHT, 2));\n      result.set(this.ADVANCED_OPTIONS_CARD, new DragCardPosition(CardContainer.RIGHT, 3));\n      return result;\n   };\n\n   clusterPowerStateChanged(): void {\n      this.isClusterPowerStateChanged = true;\n      VsanUiUtils.globalRefresh();\n   }\n\n   private notifyClusterPowerStateChanged(): void {\n      this.isClusterPowerStateChanged = false;\n      if (ClusterPowerStateUtils.isClusterPoweredOn(this.clusterPowerState)) {\n         this.successMessages.push(VsanUiUtils.getString(\"vsan.cluster.powerOn.message.success\"));\n      }\n   }\n\n   private handleVsanStatusChangeComplete(statusChangeData: VsanStatusChangeData): void {\n      this.isEnableOrDisableVsanTaskFailed = statusChangeData.taskStatus === TaskStatus.ERROR;\n      this.refresh();\n   }\n}\n","/* Copyright 2017-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {EncryptionRekeySpec} from \"@generated/encryption-rekey-spec\";\nimport {EncryptionMutationProvider} from \"@generated/encryption-mutation-provider\";\nimport {Privileges} from \"@generated/privileges\";\n\n@Component({\n   templateUrl: \"generate-encryption-keys.component.html\",\n   styleUrls: [\"generate-encryption-keys.component.scss\"],\n   selector: \"vsan-generate-encryption-keys\",\n})\nexport class GenerateEncryptionKeysComponent implements OnInit {\n\n   reEncryptData: boolean = false;\n   allowReducedRedundancy: boolean = false;\n   eraseDisksBeforeUse: boolean;\n   editClusterPermission: boolean = false;\n   manageKeysPermission: boolean = false;\n\n   private clusterRef: ManagedObject;\n\n   constructor(private encryptionProvider: EncryptionMutationProvider) {}\n\n   ngOnInit() {\n      this.clusterRef = ManagedObject.contextObject;\n      const context: any = VsanUiUtils.getModalContext();\n      this.eraseDisksBeforeUse = context != null ? context.eraseDisksBeforeUse : false;\n      const permissions: Map<string, boolean> = context.permissions;\n      this.editClusterPermission = permissions.get(Privileges.EDIT_CLUSTER());\n      this.manageKeysPermission = permissions.get(Privileges.MANAGE_KEYS());\n   }\n\n   ok(): void {\n      const spec: EncryptionRekeySpec =\n            EncryptionRekeySpec.Factory.create(this.reEncryptData, this.allowReducedRedundancy);\n      this.encryptionProvider.rekeyEncryptedCluster(this.clusterRef, spec).then(() => {\n         VsanUiUtils.closeModalDialog();\n      });\n   }\n\n   close(): void {\n      VsanUiUtils.closeModalDialog();\n   }\n\n   get rekeyAllowed(): boolean {\n      return this.editClusterPermission && this.manageKeysPermission;\n   }\n\n   get validationErrors(): string[] {\n      const errors: string[] = [];\n      if (this.reEncryptData) {\n         errors.push(VsanUiUtils.getString(\"vsan.encryption.rekey.dialog.reEncrypt.warning\"));\n         if (this.eraseDisksBeforeUse) {\n            errors.push(VsanUiUtils.getString(\"vsan.encryption.rekey.dialog.reEncrypt.eraseDisksBeforeUse.warning\"));\n         }\n      }\n      return errors;\n   }\n}","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-status-card\n      [label]=\"'vsan.services.network.title.label' | localized\"\n      [allowDragging]=\"true\"\n      [(isExpanded)]=\"isExpanded\">\n   <span id=\"loading-network-options\"\n         *ngIf=\"!clusterCapabilityData\"\n         class=\"spinner spinner-md central-spinner\">\n   </span>\n   <div *ngIf=\"clusterCapabilityData && vsanConfig\" class=\"column-flex-container\">\n      <div class=\"clr-row\" id=\"rdma-enabled\">\n         <label class=\"clr-col-5\">\n            {{\"vsan.services.network.rdmaSupport.label\" | localized}}\n         </label>\n         <div class=\"clr-col-7\">\n            {{rdmaStatusLabel}}\n         </div>\n      </div>\n   </div>\n   <div class=\"card-footer\">\n      <clr-tooltip>\n         <span clrTooltipTrigger [vsan-ignore-focus]=\"!unavailableMessage\">\n            <!-- wrapped in span, because disabled element could not be clrTooltipTrigger for the tooltip -->\n            <button id=\"edit-network-setting-button\"\n                    class=\"btn btn-sm btn-link\"\n                    aria-describedby=\"edit-rdma-description\"\n                    [disabled]=\"unavailableMessage\"\n                    (click)=\"edit()\">\n                     {{\"vsan.generalConfig.button.edit\" | localized}}\n            </button>\n         </span>\n         <clr-tooltip-content *ngIf=\"unavailableMessage\"\n                              id=\"edit-rdma-description\"\n                              clrPosition=\"top-right\"\n                              clrSize=\"md\">\n            {{unavailableMessage}}\n         </clr-tooltip-content>\n      </clr-tooltip>\n   </div>\n</vsan-status-card>","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {VsanConfigSpec} from \"@generated/vsan-config-spec\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {SpaceEfficiencyService} from \"@service/space-efficiency-service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {Privileges} from \"@generated/privileges\";\nimport {ServiceUtils} from \"./service.utils\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\nimport {PersistedProperty} from \"@service/browser-storage.service\";\n\n@Component({\n   selector: \"vsan-data-services\",\n   templateUrl: \"data-services.html\",\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DataServicesComponent implements OnInit {\n\n   ServiceUtils: typeof ServiceUtils = ServiceUtils;\n   formatMinutesInDaysOrHours: (minutes: number) => string = VsanDateTimeUtils.formatMinutes;\n\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Input()\n   clusterName: string;\n\n   @Input()\n   vsanConfig: VsanConfigSpec;\n\n   @Input()\n   clusterCapabilityData: VsanCapabilityData;\n\n   @Input()\n   permissions: Map<string, boolean>;\n\n   @Output()\n   editTaskStarted: EventEmitter<ManagedObject> = new EventEmitter<ManagedObject>();\n\n   @PersistedProperty(\"vsan-data-services-card-expanded-state\", true)\n   isExpanded: boolean;\n\n   private editClusterPermission: boolean;\n   private manageKeysPermission: boolean;\n   private shallowRekeyPermission: boolean;\n\n   constructor(private spaceEfficiencyService: SpaceEfficiencyService) {\n   }\n\n   ngOnInit(): void {\n      this.editClusterPermission = this.permissions.get(Privileges.EDIT_CLUSTER());\n      this.manageKeysPermission = this.permissions.get(Privileges.MANAGE_KEYS());\n      this.shallowRekeyPermission = this.permissions.get(Privileges.SHALLOW_REKEY());\n   }\n\n   get editDisabledTitle(): string {\n      if (!this.editClusterPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      } else if (!this.spaceEfficiencyService.isSpaceEfficiencySupported(this.clusterCapabilityData)) {\n         return VsanUiUtils.getString(\"vsan.services.not.supported\");\n      }\n      return \"\";\n   }\n\n   get generateEncryptionKeysTitle(): string {\n      if (!(this.editClusterPermission && this.manageKeysPermission || this.shallowRekeyPermission)) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      } else if (!this.vsanConfig.enableDataAtRestEncryption) {\n         return VsanUiUtils.getString(\"vsan.common.service.disabled\");\n      }\n      return \"\";\n   }\n\n   edit(): void {\n      const eventTarget: EventTarget = event.target;\n      const height: number = this.vsanConfig.autoClaimDisks ? 650 : 550;\n      new ModalBuilder(\"services/editGeneralConfig\")\n            .setSize(700, height)\n            .setEventTarget(eventTarget)\n            .open({\n               clusterId: ManagedObject.uid(this.clusterRef),\n               clusterName: this.clusterName,\n               height: height,\n            })\n            .then(taskRef => this.editTaskStarted.emit(taskRef));\n   }\n\n   generateEncryptionKeys(): void {\n      const permissions: Map<string, boolean> = new Map([\n         [Privileges.EDIT_CLUSTER(), this.editClusterPermission],\n         [Privileges.MANAGE_KEYS(), this.manageKeysPermission],\n      ]);\n      new ModalBuilder(\"services/generateEncryptionKeys\")\n            .setSize(700, 315)\n            .setTitle(VsanUiUtils.getString(\"vsan.encryption.rekey.dialog.title\"))\n            .open({\n               eraseDisksBeforeUse: this.vsanConfig.eraseDisksBeforeUse,\n               permissions: permissions,\n            });\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n/**\n * IDs used in external navigation to official documentation\n */\nexport enum DocumentationId {\n   RDMA_DOCUMENTATION = \"GUID-48154235-C557-4074-8BEB-AB9A7BD84A92\",\n   IO_INSIGHT_DOCUMENTATION = \"GUID-3ABCB8EA-1FC7-40A4-B834-C9FEDF02A902\",\n   ENFORCE_RESERVATION_DOCUMENTATION = \"GUID-CD510EAE-1A9F-45D2-BB66-E893C8AAF20A\",\n}","/* Copyright 2016-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {Logger} from \"@util/logger\";\nimport {GeneralConfigData} from \"@component/general-settings/general-config.data\";\nimport {VsanGeneralConfigService} from \"@component/general-settings/vsan-general-config.service\";\nimport {ConfigureVsanClusterMutationProvider} from \"@generated/configure-vsan-cluster-mutation-provider\";\nimport {VsanConfigSpec} from \"@generated/vsan-config-spec\";\nimport {VsanFileServiceConfigService} from \"@generated/vsan-file-service-config-service\";\nimport {FileServiceFeature} from \"@generated/file-service-feature\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {LoaderName} from \"@service/flow/loader-name\";\n\n@Component({\n   templateUrl: \"edit-vsan-config.html\",\n   styleUrls: [\"edit-vsan-config.scss\"],\n   selector: \"vsan-edit-config\",\n})\nexport class EditVsanConfigComponent implements OnInit {\n   contextObjectName: string;\n   contextHeight: number;\n   config: GeneralConfigData;\n   vsanConfigSpec: VsanConfigSpec;\n   validationErrors: string[] = [];\n\n   @LoadingIndicator({name: [LoaderName.ON_INIT, LoaderName.ON_CONFIRM]})\n   loading: boolean;\n   hasInitializationError: boolean;\n   showFileServiceOweDescription: boolean;\n   clusterRef: ManagedObject;\n\n   /**\n    * Inject dataService to make calls to DataService\n    */\n   constructor(private vsanConfigService: VsanGeneralConfigService,\n         private configureClusterMutationProvider: ConfigureVsanClusterMutationProvider,\n         private fileServiceConfigService: VsanFileServiceConfigService) {\n   }\n\n   /**\n    * Init the component's base data and fetch vsan config properties via dataService\n    */\n   @Loader({\n      name: LoaderName.ON_INIT,\n      srMessage: \"vsan.generalConfigDialog.title\",\n      srMessageType: SrMessageType.PAGE_TITLE,\n   })\n   async ngOnInit(): Promise<void> {\n      // Get the context object\n      const context: any = VsanUiUtils.getModalContext();\n      this.contextObjectName = context.clusterName;\n      this.contextHeight = +context.height;\n      if (!context.clusterId) {\n         Logger.error(\"Unable to determine object ID!\");\n         return;\n      }\n\n      // Get vSAN configuration properties\n      this.clusterRef = ManagedObject.fromUid(context.clusterId);\n      [this.config, this.showFileServiceOweDescription] = await Promise.all([\n         this.vsanConfigService.getVsanGeneralConfigData(this.clusterRef),\n         this.isFileServiceOweSupported(this.clusterRef),\n      ]);\n      this.vsanConfigSpec = this.config.cloneVsanConfigSpec();\n   }\n\n   @ErrorHandler({name: LoaderName.ON_INIT})\n   handleInitError(): void {\n      this.hasInitializationError = true;\n      this.validationErrors.push(VsanUiUtils.getString(\"vsan.common.error.dataExtraction\"));\n   }\n\n   ok(): void {\n      if (!this.config.isConfigChanged(this.vsanConfigSpec)) {\n         // Do nothing if there is no change\n         VsanUiUtils.closeModalDialog();\n         return;\n      }\n\n      // Check for validation errors and show them\n      this.validationErrors = this.config.validateConfig(this.vsanConfigSpec);\n      if (!VsanUiUtils.isEmpty(this.validationErrors)) {\n         // Do not proceed if there are any validation errors\n         return;\n      }\n\n      // Post the changes to the mutation controller\n      this.startTask();\n   }\n\n   private async isFileServiceOweSupported(clusterRef: ManagedObject): Promise<boolean> {\n      const featureSupporteMap: any =\n            await this.fileServiceConfigService.isFeatureSupportedOnRuntime(clusterRef,\n                  [FileServiceFeature.OWE]);\n      return featureSupporteMap[FileServiceFeature.OWE];\n   }\n\n   @Loader({name: LoaderName.ON_CONFIRM})\n   private async startTask(): Promise<void> {\n      const taskRef: any = await this.configureClusterMutationProvider.configure(this.clusterRef, this.vsanConfigSpec);\n      VsanUiUtils.closeModalDialog(taskRef);\n   }\n\n   // Display errors in the wizard\n   @ErrorHandler({name: LoaderName.ON_CONFIRM})\n   private handleStartTaskError(error: any): void {\n      this.validationErrors = [error];\n   }\n}\n","<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-edit-prompt\n      [title]=\"'vsan.services.network.title' | localized\"\n      [subtitle]=\"clusterName\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"loading || !isRdmaOptionEnabled\"\n      [(alertMessage)]=\"alertMessage\"\n      (onConfirm)=\"confirm()\">\n   <div *ngIf=\"!loading\" class=\"dialog-container\">\n      <span id=\"rdma-support-label\">{{\"vsan.services.network.rdmaSupport.signpost\" | localized}}</span>\n      <div class=\"clr-form-control\">\n         <div class=\"clr-toggle-wrapper\">\n            <input id=\"rdma-support\"\n                   name=\"rdma-support\"\n                   type=\"checkbox\"\n                   class=\"clr-toggle\"\n                   [(ngModel)]=\"rdmaData.isRdmaEnabled\"\n                   [disabled]=\"!isRdmaOptionEnabled\">\n            <label for=\"rdma-support\">\n               {{\"vsan.services.network.rdmaSupport.label\" | localized}}\n            </label>\n         </div>\n      </div>\n      <clr-alert id=\"vsan-network-rdma-alert-message\"\n                 [clrAlertType]=\"rdmaAlertType\"\n                 [clrAlertClosable]=\"false\"\n                 [clrAlertSizeSmall]=\"true\">\n         <clr-alert-item>\n            <div>\n               <span id=\"rdma-alert-message-text\">{{rdmaAlertMessage}}</span>\n               <a *ngIf=\"showUnsupportedHosts()\"\n                  id=\"rdma-learn-more-link\"\n                  [external-link]=\"'vsan.services.network.rdmaSupport.link' | localized\"\n                  [url]=\"documentationUrl\">\n               </a>\n            </div>\n         </clr-alert-item>\n      </clr-alert>\n      <table class=\"table table-compact table-flex-overflow\" *ngIf=\"showUnsupportedHosts()\">\n         <thead>\n            <tr>\n               <th>{{\"vsan.services.network.rdmaSupport.notSupportedHostsTable.column.hostName\" | localized}}</th>\n            </tr>\n         </thead>\n         <tbody>\n            <tr *ngFor=\"let host of rdmaData.unsupportedHosts\">\n               <td class=\"icon-name-container\">\n                  <clr-icon id=\"rdma-unsupported-host-icon\" [attr.shape]=\"host.primaryIconId\"></clr-icon>\n                  <a href=\"javascript://\" (click)=\"navigateToHost(host.moRef)\">{{host.name}}</a>\n               </td>\n            </tr>\n         </tbody>\n      </table>\n   </div>\n</vsan-edit-prompt>\n","/* Copyright 2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanConfigService} from \"@generated/vsan-config-service\";\nimport {VsanConfigSpec} from \"@generated/vsan-config-spec\";\nimport {VsanMaxSettingsService} from \"@generated/vsan-max-settings-service\";\nimport {EditVsanManagedDiskClaimContext} from \"@navigation/context/edit-vsan-managed-disk-claim-context\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {LoaderName} from \"@service/flow/loader-name\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"edit-vsan-managed-disk-claim.html\",\n   selector: \"vsan-edit-vsan-managed-disk-claim\",\n})\nexport class EditVsanManagedDiskClaim implements OnInit {\n\n   clusterName: string;\n   isDiskClaimVsanManaged: boolean;\n   vsanConfig: VsanConfigSpec;\n\n   @LoadingIndicator({name: [LoaderName.ON_INIT, LoaderName.ON_CONFIRM]})\n   loading: boolean;\n\n   @ErrorMessage({name: [LoaderName.ON_INIT, LoaderName.ON_CONFIRM]})\n   alertMessage: string;\n\n   constructor(private vsanConfigService: VsanConfigService, private vsanMaxSettingsService: VsanMaxSettingsService) {\n   }\n\n   @Loader({\n      name: LoaderName.ON_INIT,\n      srMessage: \"vsan.services.vsan.max.diskClaim.label\",\n      srMessageType: SrMessageType.PAGE_TITLE,\n   })\n   async ngOnInit(): Promise<void> {\n      const context: EditVsanManagedDiskClaimContext = VsanUiUtils.getModalContext();\n      this.clusterName = context.clusterName;\n      this.vsanConfig = await this.vsanConfigService.getVsanConfigSpec(ManagedObject.contextObject);\n      // Copy the value, so the config object can be used to check for changes to the value.\n      this.isDiskClaimVsanManaged = this.vsanConfig.isDiskClaimVsanManaged;\n   }\n\n   @Loader({name: LoaderName.ON_CONFIRM})\n   async confirm(): Promise<void> {\n      if (this.isDiskClaimVsanManaged === this.vsanConfig.isDiskClaimVsanManaged) {\n         VsanUiUtils.closeModalDialog();\n         return;\n      }\n      const task: ManagedObject = await this.vsanMaxSettingsService.configureVsanMaxSettings(\n            ManagedObject.contextObject,\n            this.isDiskClaimVsanManaged);\n      VsanUiUtils.closeModalDialog(task);\n   }\n\n}","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-status-card [label]=\"'vsan.services.advanced.options.label' | localized\"\n                  [allowDragging]=\"true\"\n                  [(isExpanded)]=\"isExpanded\">\n   <div class=\"column-flex-container\">\n      <div id=\"object-repair-timer\" class=\"clr-row\">\n         <label class=\"clr-col-5\">\n            {{\"vsan.services.advanced.options.repair.timer\" | localized}}\n         </label>\n         <div class=\"clr-col-7\" vsan-show-title>\n            {{\"vsan.common.minutes\" | localized : config.objectRepairTimer}}\n         </div>\n      </div>\n      <div id=\"site-read-locality\" class=\"clr-row\">\n         <label class=\"clr-col-5\">\n            {{\"vsan.services.advanced.options.read.locality\" | localized}}\n         </label>\n         <div class=\"clr-col-7\" vsan-show-title>\n            {{ServiceUtils.enabledStateLabel(config.isSiteReadLocalityEnabled)}}\n         </div>\n      </div>\n      <div id=\"thin-swap\" class=\"clr-row\">\n         <label class=\"clr-col-5\">\n            {{\"vsan.services.advanced.options.thin.swap\" | localized}}\n         </label>\n         <div class=\"clr-col-7\" vsan-show-title>\n            {{ServiceUtils.enabledStateLabel(config.isCustomizedSwapObjectEnabled)}}\n         </div>\n      </div>\n      <!-- Show setting for large cluster support (more than 32 hosts) if it is NOT supported natively -->\n      <div id=\"large-cluster-support\"\n           *ngIf=\"!clusterCapabilityData.isNativeLargeClusterSupported\"\n           class=\"clr-row\">\n         <label class=\"clr-col-5\">\n            {{\"vsan.services.advanced.options.large.cluster\" | localized}}\n         </label>\n         <div class=\"clr-col-7\" vsan-show-title>\n            {{ServiceUtils.enabledStateLabel(config.largeClusterSupportEnabled)}}\n         </div>\n      </div>\n      <div id=\"guest-trim-unmap\"\n           *ngIf=\"clusterCapabilityData.isGuestTrimUnmapSupported\"\n           class=\"clr-row\">\n         <label class=\"clr-col-5\">\n            {{\"vsan.services.advanced.options.guest.trim.unmap\" | localized}}\n         </label>\n         <div class=\"clr-col-7\" vsan-show-title>\n            {{ServiceUtils.enabledStateLabel(config.isGuestTrimUnmapEnabled)}}\n         </div>\n      </div>\n      <ng-container *ngIf=\"vcCapabilityData.isAutomaticRebalanceSupported\">\n         <div id=\"automatic-rebalance\" class=\"clr-row\">\n            <label class=\"clr-col-5\">\n               {{\"vsan.services.advanced.options.automatic.rebalance\" | localized}}\n            </label>\n            <div class=\"clr-col-7\" vsan-show-title>\n               {{ServiceUtils.enabledStateLabel(config.isAutomaticRebalanceEnabled)}}\n            </div>\n         </div>\n         <div id=\"rebalancing-threshold-label\"\n              *ngIf=\"config.isAutomaticRebalanceEnabled\"\n              class=\"clr-row\" >\n            <label class=\"clr-col-5\">\n               {{\"vsan.services.advanced.options.automatic.rebalance.threshold\" | localized}}\n            </label>\n            <div class=\"clr-col-7\" vsan-show-title>\n               {{\"vsan.common.percentage\" | localized : config.rebalancingThreshold}}\n            </div>\n         </div>\n      </ng-container>\n   </div>\n   <div class=\"card-footer\">\n     <clr-tooltip>\n         <span clrTooltipTrigger [vsan-ignore-focus]=\"!editDisabledTitle\">\n            <button id=\"edit-advanced-config\"\n                    class=\"btn btn-sm btn-link\"\n                    aria-describedby=\"edit-advanced-options-description\"\n                    [disabled]=\"editDisabledTitle\"\n                    (click)=\"edit()\">\n                     {{\"vsan.generalConfig.button.edit\" | localized}}\n            </button>\n         </span>\n         <clr-tooltip-content *ngIf=\"editDisabledTitle\"\n                              id=\"edit-advanced-options-description\"\n                              clrPosition=\"top-right\"\n                              clrSize=\"md\">\n            {{editDisabledTitle}}\n         </clr-tooltip-content>\n      </clr-tooltip>\n   </div>\n</vsan-status-card>","<!--Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-validation *ngIf=\"validationErrors\"\n                 [alerts]=\"validationErrors\"\n                 [allowClose]=\"false\"\n                 [alertsExpanded]=\"true\"\n                 [allowExpandCollapse]=\"false\">\n</vsan-validation>\n<div class=\"vsan-dialog-container\">\n   <div id=\"rekeyText\">{{ \"vsan.encryption.rekey.dialog.text\" | localized}}</div>\n   <div class=\"checkbox-tooltip-group\" [class.disable-action]=\"!rekeyAllowed\">\n      <clr-checkbox-wrapper>\n         <input type=\"checkbox\"\n                clrCheckbox\n                id=\"re-encrypt-data-check-box\"\n                name=\"re-encrypt-data-check-box\"\n                [(ngModel)]=\"reEncryptData\"/>\n         <label>{{\"vsan.encryption.rekey.dialog.reEncrypt.text\" | localized}}</label>\n      </clr-checkbox-wrapper>\n      <clr-signpost id=\"re-encrypt-help\"\n                    [vsan-signpost-title]=\"'vsan.encryption.rekey.dialog.reEncrypt.signpost.label' | localized\">\n         <clr-signpost-content *clrIfOpen clrPosition=\"bottom-left\">\n            {{\"vsan.encryption.rekey.dialog.reEncrypt.help\" | localized}}\n         </clr-signpost-content>\n      </clr-signpost>\n   </div>\n   <div class=\"checkbox-tooltip-group nested-group\" [class.disable-action]=\"!this.reEncryptData\">\n      <clr-checkbox-wrapper>\n         <input type=\"checkbox\"\n                clrCheckbox\n                id=\"allow-redundancy-check-box\"\n                name=\"allow-redundancy-check-box\"\n                [(ngModel)]=\"allowReducedRedundancy\"/>\n         <label>{{\"configureVsan.settings.allowReducedRedundancyCheckboxLabel\" | localized}}</label>\n      </clr-checkbox-wrapper>\n      <clr-signpost id=\"allow-redundancy-help\"\n                    [vsan-signpost-title]=\"'configureVsan.settings.allowReducedRedundancySignpostLabel' | localized\">\n         <clr-signpost-content *clrIfOpen clrPosition=\"right-middle\">\n            {{\"configureVsan.settings.allowReducedRedundancyDescription\" | localized}}\n         </clr-signpost-content>\n      </clr-signpost>\n   </div>\n\n   <button type=\"button\" class=\"btn btn-primary vsan-dialog-button\" id=\"ok-button\" (click)=\"ok()\">\n      {{'vsan.encryption.rekey.generate.button' | localized}}\n   </button>\n   <button type=\"button\" class=\"btn btn-outline vsan-dialog-button\" id=\"close-button\" (click)=\"close()\">\n      {{'vsan.common.cancel' | localized}}\n   </button>\n</div>\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {Privileges} from \"@generated/privileges\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {AdvancedOptionsInfo} from \"@generated/advanced-options-info\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {ServiceUtils} from \"./service.utils\";\nimport {PersistedProperty} from \"@service/browser-storage.service\";\n\n@Component({\n   selector: \"vsan-advanced-options\",\n   templateUrl: \"advanced-options.html\",\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AdvancedOptionsComponent {\n   ServiceUtils = ServiceUtils;\n\n   @Input()\n   config: AdvancedOptionsInfo;\n\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Input()\n   clusterName: string;\n\n   @Input()\n   vcCapabilityData: VsanCapabilityData;\n\n   @Input()\n   clusterCapabilityData: VsanCapabilityData;\n\n   @Input()\n   permissions: Map<string, boolean>;\n\n   @Output()\n   editTaskStarted: EventEmitter<ManagedObject> = new EventEmitter<ManagedObject>();\n\n   @PersistedProperty(\"vsan-advanced-options-card-expanded-state\")\n   isExpanded: boolean;\n\n   private editClusterPermission: boolean;\n\n   ngOnInit() {\n      this.editClusterPermission = this.permissions.get(Privileges.EDIT_CLUSTER());\n      // If the user navigates to this page from the Skyline Health page, open the Edit Advanced Options dialog.\n      // TODO dtsvetkova: confirm if this is actually needed.\n      // The health page can just open the edit dialog without navigating here.\n      const context: any = VsanUiUtils.getNavigationData();\n      if (context && context.advancedOptionsExpanded) {\n         this.isExpanded = context.advancedOptionsExpanded;\n         this.edit();\n      }\n   }\n\n   get editDisabledTitle(): string {\n      if (!this.editClusterPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      }\n      return \"\";\n   }\n\n   edit() {\n      new ModalBuilder(\"services/editAdvancedOptions\")\n            .setSize(800, 500)\n            .open({\n               clusterRef: this.clusterRef,\n               clusterName: this.clusterName,\n               vcCapabilityData: this.vcCapabilityData,\n               clusterCapabilityData: this.clusterCapabilityData,\n            })\n            .then(taskRef => this.editTaskStarted.emit(taskRef));\n   }\n}","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, Input} from \"@angular/core\";\nimport {Status} from \"@component/card/status\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {PersistedProperty} from \"@service/browser-storage.service\";\nimport {KnowledgeBaseId} from \"@navigation/model/knowledge-base-id\";\n\n@Component({\n   selector: \"vsan-support-insight\",\n   templateUrl: \"support-insight.html\",\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SupportInsightComponent {\n   Status: typeof Status = Status;\n   readonly KnowledgeBaseId: typeof KnowledgeBaseId = KnowledgeBaseId;\n\n   @Input()\n   editClusterPermission: boolean;\n\n   @PersistedProperty(\"vsan-support-insight-card-expanded-state\")\n   isExpanded: boolean;\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   navigateToCeip = () => {\n      this.navigationService.navigateWithoutContextObject(PlatformExtension.CEIP_VIEW);\n   };\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {ClusterPowerService} from \"@generated/cluster-power-service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ClusterPowerState} from \"@generated/cluster-power-state\";\nimport {ClusterPowerStatus} from \"@generated/cluster-power-status\";\nimport {Icon} from \"@util/icon\";\nimport {ClusterPowerStateUtils} from \"@util/cluster-power-state-utils\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ReferenceWatcher} from \"@util/reference-watcher\";\nimport {TaskService} from \"@generated/task-service\";\nimport {TaskInfoData} from \"@generated/task-info-data\";\n\n@Component({\n   selector: \"vsan-cluster-power-state-change-progress\",\n   templateUrl: \"cluster-power-state-change-progress.html\",\n   styleUrls: [\"cluster-power-state-change-progress.scss\"],\n   providers: [ReferenceWatcher],\n})\nexport class ClusterPowerStateChangeProgressComponent implements OnInit {\n\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Output()\n   clusterPowerStateChanged: EventEmitter<ClusterPowerState> = new EventEmitter<ClusterPowerState>();\n\n   clusterPowerState: ClusterPowerState;\n   taskInfo: TaskInfoData;\n\n   private isVcOnVsan: boolean = false;\n   private static readonly REFRESH_INTERVAL_MS: number = 2000;\n\n   localizedSteps: Map<ClusterPowerStatus, string> = new Map<ClusterPowerStatus, string>([\n      // Shutting down\n      [\n            ClusterPowerStatus.HA_DISABLED,\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.step.haDisabled\"),\n      ],\n      [\n            ClusterPowerStatus.SUPPORTED_VMS_POWERED_OFF,\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.step.supportedVMsPoweredOff\"),\n      ],\n      [\n            ClusterPowerStatus.VC_VM_POWERED_OFF,\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.step.vcVMPoweredOff\"),\n      ],\n      [\n            ClusterPowerStatus.VSAN_MEMBERSHIP_UPDATE_DISABLED,\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.step.vsanMemberShipUpdateDisabled\"),\n      ],\n      [\n            ClusterPowerStatus.VSAN_DOM_PAUSE_ALL_CCPS_SET,\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.step.vsanDOMPauseAllCCPsSet\"),\n      ],\n      [\n            ClusterPowerStatus.INFRA_VM_RECORDED,\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.step.infraVMsRecorded\"),\n      ],\n      [\n            ClusterPowerStatus.HOST_INFRA_VMS_POWERED_OFF,\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.step.infraVMsPoweredOff\"),\n      ],\n      [\n            ClusterPowerStatus.HOSTS_IN_MM,\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.step.hostsInMM\"),\n      ],\n      [\n            ClusterPowerStatus.HOSTS_POWER_OFF_INITIATED,\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.step.hostsPoweredOff\"),\n      ],\n      [\n            ClusterPowerStatus.CLUSTER_POWERED_OFF,\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.step.clusterPoweredOff\"),\n      ],\n      // Powering on\n      [\n            ClusterPowerStatus.HOSTS_OUT_OF_MM,\n            VsanUiUtils.getString(\"vsan.cluster.powerOn.step.hostsOutOfMM\"),\n      ],\n      [\n            ClusterPowerStatus.VSAN_DOM_PAUSE_ALL_CCPS_UNSET,\n            VsanUiUtils.getString(\"vsan.cluster.powerOn.step.vsanDOMPauseAllCCPsUnset\"),\n      ],\n      [\n            ClusterPowerStatus.VSAN_MEMBERSHIP_UPDATE_ENABLED,\n            VsanUiUtils.getString(\"vsan.cluster.powerOn.step.vsanMemberShipUpdateEnabled\"),\n      ],\n      [\n            ClusterPowerStatus.HOST_INFRA_VMS_POWERED_ON,\n            VsanUiUtils.getString(\"vsan.cluster.powerOn.step.infraVMsPoweredOn\"),\n      ],\n      [\n            ClusterPowerStatus.VC_VM_POWERED_ON,\n            VsanUiUtils.getString(\"vsan.cluster.powerOn.step.vcVMPoweredOn\"),\n      ],\n      [\n            ClusterPowerStatus.SUPPORTED_VMS_POWERED_ON,\n            VsanUiUtils.getString(\"vsan.cluster.powerOn.step.supportedVMsPoweredOn\"),\n      ],\n      [\n            ClusterPowerStatus.HA_ENABLED,\n            VsanUiUtils.getString(\"vsan.cluster.powerOn.step.haEnabled\"),\n      ],\n      [\n            ClusterPowerStatus.CLUSTER_POWERED_ON,\n            VsanUiUtils.getString(\"vsan.cluster.powerOn.step.clusterPoweredOn\"),\n      ],\n   ]);\n\n   constructor(private clusterPowerService: ClusterPowerService,\n         private refWatcher: ReferenceWatcher,\n         private taskService: TaskService) { }\n\n   async ngOnInit(): Promise<void> {\n      await this.updatePowerStateProgress();\n   }\n\n   private async updatePowerStateProgress(): Promise<void> {\n      this.clusterPowerState = await this.clusterPowerService.getPowerState(this.clusterRef);\n      this.isVcOnVsan = this.checkForVcOnVsan();\n\n      if (!ClusterPowerStateUtils.isClusterChangingPowerState(this.clusterPowerState)) {\n         // Cluster is no longer changing its state, so this component is no longer needed.\n         this.clusterPowerStateChanged.emit(this.clusterPowerState);\n         return;\n      }\n\n      if (this.clusterPowerState.taskRef) {\n         this.taskInfo = await this.taskService.getInfo(this.clusterPowerState.taskRef);\n         this.refWatcher.setTimeout(\n               async () => await this.updatePowerStateProgress(),\n               ClusterPowerStateChangeProgressComponent.REFRESH_INTERVAL_MS,\n         );\n      } else {\n         this.taskInfo = null;\n      }\n   }\n\n   async resume(): Promise<void> {\n      await this.clusterPowerService.resumePowerStateChange(this.clusterRef);\n      await this.updatePowerStateProgress();\n   }\n\n   get processLabel(): string {\n      if (!this.clusterPowerState) {\n         return \"\";\n      }\n\n      if (ClusterPowerStateUtils.isClusterShuttingDown(this.clusterPowerState)) {\n         return !this.clusterPowerState.taskRef\n            ? VsanUiUtils.getString(\"vsan.cluster.shutdown.label.paused\")\n            : VsanUiUtils.getString(\"vsan.cluster.shutdown.label.running\");\n      } else {\n         return !this.clusterPowerState.taskRef\n            ? VsanUiUtils.getString(\"vsan.cluster.powerOn.label.paused\")\n            : VsanUiUtils.getString(\"vsan.cluster.powerOn.label.running\");\n      }\n   }\n\n   get resumeLabel(): string {\n      return ClusterPowerStateUtils.isClusterShuttingDown(this.clusterPowerState)\n         ? VsanUiUtils.getString(\"vsan.cluster.shutdown.label.resume\")\n         : VsanUiUtils.getString(\"vsan.cluster.powerOn.label.resume\");\n   }\n\n   get resumeDescription(): string {\n      return ClusterPowerStateUtils.isClusterShuttingDown(this.clusterPowerState)\n         ? VsanUiUtils.getString(\"vsan.cluster.shutdown.description.resume\")\n         : VsanUiUtils.getString(\"vsan.cluster.powerOn.description.resume\");\n   }\n\n   getStatusLabel(step: ClusterPowerStatus): string {\n      if (step === ClusterPowerStatus.SUPPORTED_VMS_POWERED_OFF) {\n         // We have a different label for the VC on vSAN case, so the map above is not correct.\n         return this.isVcOnVsan ? VsanUiUtils.getString(\"vsan.cluster.shutdown.step.supportedVMsPoweredOff.vcOnVsan\")\n               :  VsanUiUtils.getString(\"vsan.cluster.shutdown.step.supportedVMsPoweredOff\");\n      }\n      return this.localizedSteps.get(step);\n   }\n\n   getStepIconClass(stepIndex: number): string {\n      if (this.isStepCompleted(stepIndex)) {\n         return Icon.CLR_SUCCESS_ICON_CLASS;\n      } else if (this.isStepFailed(stepIndex)) {\n         return Icon.CLR_ERROR_ICON_CLASS;\n      }\n   }\n\n   getStepIconShape(stepIndex: number): string {\n      if (this.isStepCompleted(stepIndex)) {\n         return Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE;\n      } else if (this.isStepFailed(stepIndex)) {\n         return Icon.CLR_ERROR_STANDARD_ICON_SHAPE;\n      } else {\n         return Icon.EMPTY_ICON;\n      }\n   }\n\n   isStepCompleted(stepIndex: number): boolean {\n      return stepIndex < this.getCurrentlyRunningStepIndex();\n   }\n\n   isStepFailed(stepIndex: number): boolean {\n      return this.isCurrentStep(stepIndex) && !!this.clusterPowerState?.errorMessage;\n   }\n\n   isStepInProgress(stepIndex: number): boolean {\n      return this.isCurrentStep(stepIndex) && !this.clusterPowerState?.errorMessage;\n   }\n\n   private isCurrentStep(stepIndex: number): boolean {\n      return this.getCurrentlyRunningStepIndex() === stepIndex;\n   }\n\n   private getCurrentlyRunningStepIndex(): number {\n      return this.clusterPowerState?.inProgressStatuses.indexOf(this.clusterPowerState?.currentOperation);\n   }\n\n   private checkForVcOnVsan(): boolean {\n      return this.clusterPowerState?.inProgressStatuses?.includes(ClusterPowerStatus.VC_VM_POWERED_OFF)\n         || this.clusterPowerState?.inProgressStatuses?.includes(ClusterPowerStatus.VC_VM_POWERED_ON);\n   }\n}","<!--Copyright 2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-edit-prompt\n      [title]=\"'vsan.services.vsan.max.diskClaim.title' | localized\"\n      [subtitle]=\"clusterName\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"loading\"\n      [(alertMessage)]=\"alertMessage\"\n      (onConfirm)=\"confirm()\">\n   <div *ngIf=\"!loading\" class=\"dialog-container\">\n      <span id=\"vsan-manadeg-disk-claim-info\">{{\"vsan.services.vsan.max.diskClaim.description\" | localized}}</span>\n      <div class=\"clr-form-control\">\n         <div class=\"clr-toggle-wrapper\">\n            <input id=\"vsan-manadeg-disk-claim\"\n                   name=\"vsan-manadeg-disk-claim\"\n                   type=\"checkbox\"\n                   class=\"clr-toggle\"\n                   [(ngModel)]=\"isDiskClaimVsanManaged\">\n            <label for=\"vsan-manadeg-disk-claim\">\n               {{\"vsan.services.vsan.max.diskClaim.label\" | localized}}\n            </label>\n         </div>\n      </div>\n   </div>\n</vsan-edit-prompt>","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component} from \"@angular/core\";\n\n@Component({\n   template: `\n      <vsan-question-prompt\n            title=\"{{'vsan.services.advancedOptions.largeClusterSupport.prompt.title' | localized}}\">\n         {{'vsan.services.advancedOptions.largeClusterSupport.prompt.text' | localized}}\n      </vsan-question-prompt>`,\n   selector: \"vsan-large-scale-cluster-support-change\",\n})\nexport class LargeScaleClusterSupportChangePromptComponent {\n}","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {CapacityManagementStatus, CapacityReservationUtil} from \"@util/capacity-reservation-util\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {UpgradeData} from \"@component/upgrade/upgrade.data\";\nimport {UpgradeService} from \"@component/upgrade/upgrade.service\";\nimport {CapacityManagementContext} from \"@navigation/context/capacity-management-context\";\nimport {Privileges} from \"@generated/privileges\";\nimport {PersistedProperty} from \"@service/browser-storage.service\";\nimport {VsanDialogUtil} from \"@util/vsan-dialog-util\";\nimport {CapacityManagementData} from \"@generated/capacity-management-data\";\nimport {CapacityManagementService} from \"@generated/capacity-management-service\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {VsanRoutes} from \"../../vsan-routes\";\n\n@Component({\n   templateUrl: \"capacity-management-settings.html\",\n   selector: \"vsan-capacity-management-settings\",\n})\nexport class CapacityManagementSettingsComponent implements OnInit {\n   @Input()\n   isSlackSpaceCapacitySupported: boolean;\n\n   @Input()\n   isCapacityCustomizableThresholdsSupportedOnVc: boolean;\n\n   @Input()\n   permissions: Map<string, boolean>;\n\n   @Input()\n   clusterName: string;\n\n   @Input()\n   upgradeData: UpgradeData;\n\n   @PersistedProperty(\"vsan-capacity-reserve-card-status\")\n   isExpanded: boolean;\n\n   errorMessages: string[] = [];\n\n   capacityManagementData: CapacityManagementData;\n\n   private hasEditPermissions: boolean;\n\n   private isCapacityManagementDataLoaded: boolean;\n\n   constructor(private upgradeService: UpgradeService,\n               private capacityManagementService: CapacityManagementService,\n               private taskService: TaskMonitorService) {\n   }\n\n   ngOnInit(): void {\n      this.hasEditPermissions = this.permissions.get(Privileges.EDIT_CLUSTER())\n            && this.permissions.get(Privileges.CONFIG_STORAGE());\n      this.fetch();\n   }\n\n   @RefreshHandler\n   fetch(): void {\n      this.isCapacityManagementDataLoaded = false;\n      this.capacityManagementService.getCapacityManagementData(ManagedObject.contextObject)\n          .then(result => this.capacityManagementData = result)\n          .catch(e => this.errorMessages.push(e))\n          .finally(() => { this.isCapacityManagementDataLoaded = true; });\n   }\n\n   // hide loading indicator when both CapacityManagementData and upgradeData are available\n   get loading(): boolean {\n      return !this.upgradeData || !this.isCapacityManagementDataLoaded;\n   }\n\n   get capacityManagementStatus(): CapacityManagementStatus {\n      if (this.loading) {\n         // The config is still loading\n         return new CapacityManagementStatus(false, false);\n      }\n\n      const isCapacityReservationSupported: boolean =\n            CapacityReservationUtil.isReservationEditingApplicable(\n                  this.capacityManagementData.capacityReservationConfig);\n\n      return CapacityReservationUtil.getCapacityManagementStatus(this.hasEditPermissions,\n            this.upgradeData, isCapacityReservationSupported, this.isCapacityCustomizableThresholdsSupportedOnVc);\n   }\n\n   edit(): void {\n      const context: CapacityManagementContext = {\n         clusterName: this.clusterName,\n         showOldFormatInfo: this.upgradeService.isUpgradeNeeded(this.upgradeData),\n         isCapacityCustomizableThresholdsSupported: this.isCapacityCustomizableThresholdsSupportedOnVc,\n      };\n      new ModalBuilder(VsanRoutes.CAPACITY_MANAGEMENT)\n            .setSize(VsanDialogUtil.CAPACITY_MANAGEMENT_DIALOG.width, VsanDialogUtil.CAPACITY_MANAGEMENT_DIALOG.height)\n            .open(context)\n            .then((taskRef: ManagedObject) => {\n               this.taskService.getAwaitResult(taskRef)\n                   .then(() => this.fetch())\n                   .catch(e => this.errorMessages.push(e));\n            });\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Validator} from \"@util/validation/validator\";\n\nexport class ValidatorsGroup<TEntity> {\n\n   constructor(private validators: Validator<TEntity>[]) { }\n\n   validate(entity: TEntity): boolean {\n      return this.validators\n            .every(validator => validator.validate(entity));\n   }\n\n   getAllErrors(entity: TEntity): string[] {\n      return this.validators\n            .filter(validator => !validator.validate(entity))\n            .map(validator => validator.getErrorMessage(entity));\n   }\n\n   getFirstError(entity: TEntity): string {\n      return this.validators\n            .find(validator => !validator.validate(entity))\n            ?.getErrorMessage(entity) || null;\n   }\n}\n","/* Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit, ViewChild} from \"@angular/core\";\nimport {\n   AbstractControl,\n   FormBuilder,\n   FormControl,\n   FormGroup,\n   ValidationErrors,\n   ValidatorFn,\n   Validators,\n} from \"@angular/forms\";\nimport {ClrForm} from \"@clr/angular\";\nimport {PbmDataProvider} from \"@generated/pbm-data-provider\";\nimport {StoragePolicyData} from \"@generated/storage-policy-data\";\nimport {VsanIscsiAuthSpec} from \"@generated/vsan-iscsi-auth-spec\";\nimport {VsanIscsiConfigEditSpec} from \"@generated/vsan-iscsi-config-edit-spec\";\nimport {VsanIscsiMutationProvider} from \"@generated/vsan-iscsi-mutation-provider\";\nimport {VsanIscsiPropertyProvider} from \"@generated/vsan-iscsi-property-provider\";\nimport {VsanIscsiTargetConfig} from \"@generated/vsan-iscsi-target-config\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {ReactiveFormUtil} from \"@util/reactive-form-util\";\nimport {VsanIscsiUtil} from \"@util/vsan-iscsi-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport IscsiTargetAuthType = VsanIscsiTargetConfig.IscsiTargetAuthType;\n\n@Component({\n   templateUrl: \"edit-iscsi-target-config.html\",\n   styleUrls: [\"edit-iscsi-target-config.scss\"],\n   selector: \"vsan-edit-iscsi-config\",\n})\nexport class EditIscsiTargetComponent implements OnInit {\n\n   VsanUiUtils: typeof VsanUiUtils = VsanUiUtils;\n\n   static readonly DEFAULT_HEIGHT: number = 400;\n   private static readonly MIDDLE_HEIGHT: number = 580;\n   private static readonly EXPANDED_HEIGHT: number = 680;\n\n   iscsiSettings: FormGroup;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   alertMessages: string[] = [];\n   clusterName: string;\n   policyMessage: string;\n\n   private isEmptyCluster: boolean;\n   availableNetworks: string[];\n   availablePolicies: StoragePolicyData[];\n\n   private clusterRef: ManagedObject;\n\n   originalIsServiceEnabled: boolean;\n\n   isServiceEnabled: boolean;\n\n   @ViewChild(ClrForm)\n   iscsiSettingsForm: ClrForm;\n\n   constructor(private iscsiProvider: VsanIscsiPropertyProvider,\n         private pbmProvider: PbmDataProvider,\n         private iscsiMutationProvider: VsanIscsiMutationProvider,\n         private formBuilder: FormBuilder) {\n   }\n\n   @Loader({\n      srMessage: \"vsan.iscsi.action.edit.title\",\n      srMessageType: SrMessageType.PAGE_TITLE,\n   })\n   async ngOnInit(): Promise<void> {\n      const context: any = VsanUiUtils.getModalContext();\n      this.clusterRef = context.clusterRef;\n      this.clusterName = context.clusterName;\n\n      let iscsiConfig: VsanIscsiTargetConfig;\n      [iscsiConfig, this.availableNetworks, this.availablePolicies] = await Promise.all([\n         this.iscsiProvider.getVsanIscsiTargetConfig(this.clusterRef),\n         this.iscsiProvider.getHostsCommonVnicList(this.clusterRef),\n         this.pbmProvider.getStoragePolicies(this.clusterRef),\n      ]);\n      if (VsanUiUtils.isEmpty(this.availableNetworks)) {\n         this.alertMessages.push(VsanUiUtils.getString(\"vsan.iscsi.network.none\"));\n      }\n      this.handleConfig(iscsiConfig);\n   }\n\n   private handleConfig = (iscsiConfig: VsanIscsiTargetConfig): void => {\n      let network: string = \"\";\n      let port: number = VsanIscsiUtil.DEFAULT_PORT;\n      let authSpec: VsanIscsiAuthSpec = null;\n\n      if (iscsiConfig) {\n         this.originalIsServiceEnabled = iscsiConfig.status;\n         this.isServiceEnabled = true;\n         network = iscsiConfig.network;\n         port = iscsiConfig.port || VsanIscsiUtil.DEFAULT_PORT;\n\n         this.isEmptyCluster = iscsiConfig.emptyCluster;\n         if (this.isEmptyCluster) {\n            this.alertMessages.push(VsanUiUtils.getString(\"vsan.iscsi.cluster.empty\"));\n         }\n\n         if (iscsiConfig.authType) {\n            authSpec = VsanIscsiAuthSpec.Factory.create(\n                  iscsiConfig.authType.toString(),\n                  iscsiConfig.outgoingUser,\n                  iscsiConfig.outgoingSecret,\n                  iscsiConfig.incomingUser,\n                  iscsiConfig.incomingSecret);\n         }\n      }\n\n      const policy: StoragePolicyData = this.pickInitialPolicy(iscsiConfig);\n\n      // Preselect the first network if no network configured for iscsi yet.\n      if (!network && this.availableNetworks && this.availableNetworks.length > 0) {\n         network = this.availableNetworks[0];\n      }\n\n      this.iscsiSettings = this.formBuilder.group({\n         network: new FormControl(network, [Validators.required]),\n         port: new FormControl(port, [\n            Validators.required,\n            Validators.min(VsanIscsiUtil.TCP_PORT_MIN),\n            Validators.max(VsanIscsiUtil.TCP_PORT_MAX),\n         ]),\n         authSpec: new FormControl(authSpec),\n         policy: new FormControl(policy, [this.policyValidator]),\n      });\n\n      ReactiveFormUtil.validateControls([this.iscsiSettings.controls.policy as FormControl]);\n   };\n\n   private pickInitialPolicy(iSCSIConfig: VsanIscsiTargetConfig): StoragePolicyData {\n      let initialPolicy: StoragePolicyData = null;\n\n      if (VsanUiUtils.isEmpty(this.availablePolicies)) {\n         return initialPolicy;\n      }\n\n      if (iSCSIConfig && iSCSIConfig.status) {\n         if (iSCSIConfig.homeObjectStorageProfile) {\n            initialPolicy = this.availablePolicies\n                  .find(policy => policy.id === iSCSIConfig.homeObjectStorageProfile.id);\n         }\n         // Don't preselect the default policy if the iSCSI target service is enabled but without home object.\n      } else {\n         // Preselect the default policy when there isn't iSCSI config or there is such one but the status is disabled.\n         initialPolicy = this.availablePolicies.find(policy => policy.isDefault);\n      }\n\n      return initialPolicy;\n   }\n\n   handleAuthChange = (type: IscsiTargetAuthType) => {\n      switch (type) {\n         case IscsiTargetAuthType.CHAP:\n            VsanUiUtils.setModalDialogHeight(EditIscsiTargetComponent.MIDDLE_HEIGHT);\n            break;\n         case IscsiTargetAuthType.CHAP_Mutual:\n            VsanUiUtils.setModalDialogHeight(EditIscsiTargetComponent.EXPANDED_HEIGHT);\n            break;\n         default:\n            VsanUiUtils.setModalDialogHeight(EditIscsiTargetComponent.DEFAULT_HEIGHT);\n      }\n      // After changing the authentication selection, the form has been touched, but sometimes its touched property\n      // has no chagne (for example, changing authentication from None to CHAP directly), so reset it manually.\n      this.iscsiSettings.markAsTouched();\n   };\n\n   confirm = () => {\n      this.clearAlert();\n      if (this.isEmptyCluster) {\n         this.alertMessages = [VsanUiUtils.getString(\"vsan.iscsi.cluster.empty\")];\n         return;\n      }\n\n      // For special case, when changing authentication from None to CHAP, and click APPLY button directly.\n      // It helps to display error and disable APPLY button.\n      this.iscsiSettings.get(\"authSpec\").updateValueAndValidity();\n      if (this.iscsiSettings.invalid) {\n         // Make sure any errors from policy preselection are displayed\n         this.iscsiSettingsForm.markAsTouched();\n         return;\n      }\n\n      let editSpec: VsanIscsiConfigEditSpec = null;\n      if (!this.isServiceEnabled) {\n         // Disable iSCSI target service\n         editSpec = VsanIscsiConfigEditSpec.Factory.create(false, null, null, null, null);\n      } else {\n         const authSpec: VsanIscsiAuthSpec = this.iscsiSettings.controls.authSpec.value\n               // A temporary workaround for https://bugzilla.eng.vmware.com/show_bug.cgi?id=2750778\n               || VsanIscsiAuthSpec.Factory.create(IscsiTargetAuthType.NoAuth.toString(), null, null, null, null);\n         // Edit iSCSI target service config\n         editSpec = VsanIscsiConfigEditSpec.Factory.create(true,\n               this.iscsiSettings.controls.network.value,\n               this.iscsiSettings.controls.port.value,\n               authSpec,\n               this.iscsiSettings.controls.policy.value);\n      }\n\n      this.editIscsiConfig(editSpec);\n   };\n\n   @Loader()\n   private async editIscsiConfig(editSpec: VsanIscsiConfigEditSpec): Promise<void> {\n      const taskRef: ManagedObject = await this.iscsiMutationProvider.editIscsiConfig(this.clusterRef, editSpec);\n      this.handleMutationResult(taskRef);\n   }\n\n   policyValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n      // The error must not prevent settings to be applied when the service is off.\n      if (!this.isServiceEnabled) {\n         return null;\n      }\n      this.policyMessage = VsanIscsiUtil.validatePolicy(control.value, this.chooseEmptyPolicyError());\n      if (this.policyMessage) {\n         return {policyInvalid: {value: control.value}};\n      }\n      return null;\n   };\n\n   private chooseEmptyPolicyError(): string {\n      return !this.originalIsServiceEnabled\n            ? VsanUiUtils.getString(\"vsan.iscsi.edit.storagePolicy.homeObject.enableWarning\")\n            : VsanUiUtils.getString(\"vsan.iscsi.edit.storagePolicy.homeObject.editWarning\");\n   }\n\n   get blockApplyButton(): boolean {\n      return this.loading\n            || this.alertMessages && this.alertMessages.length > 0\n            || this.isEmptyCluster\n            || this.isServiceEnabled && this.iscsiSettings && this.iscsiSettings.touched && this.iscsiSettings.invalid;\n   }\n\n   private handleMutationResult = (taskRef: ManagedObject) => {\n      this.close(taskRef);\n   };\n\n   @ErrorHandler()\n   private handleError(error: string): void {\n      this.alertMessages = [error];\n   }\n\n   private clearAlert = () => {\n      this.alertMessages = null;\n   };\n\n   private close = (taskRef: ManagedObject = null) => {\n      VsanUiUtils.closeModalDialog(taskRef);\n   };\n}\n","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {AlertType} from \"@component/validation/alert-type\";\nimport {RdmaData} from \"@generated/rdma-data\";\nimport {VsanRdmaService} from \"@generated/vsan-rdma-service\";\nimport {VsanStretchedClusterService} from \"@generated/vsan-stretched-cluster-service\";\nimport {EditNetworkContext} from \"@navigation/context/edit-network-context\";\nimport {DocumentationId} from \"@navigation/model/documentation-id\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {LoaderName} from \"@service/flow/loader-name\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {Icon} from \"@util/icon\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {NetworkOptionsComponent} from \"../../../services/network-options.component\";\n\n@Component({\n   templateUrl: \"edit-network.html\",\n   styleUrls: [\"edit-network.scss\"],\n   selector: \"vsan-edit-network\",\n})\nexport class EditNetworkComponent implements OnInit {\n   clusterName: string;\n   clusterRef: ManagedObject;\n\n   @LoadingIndicator({name: [LoaderName.ON_INIT, LoaderName.ON_CONFIRM]})\n   loading: boolean;\n\n   @ErrorMessage({name: LoaderName.ON_INIT})\n   alertMessage: string;\n\n   rdmaData: RdmaData;\n   originalIsRdmaEnabled: boolean;\n   hasSharedWitnessHost: boolean;\n   isStretchedClusterUnsupported: boolean;\n   isLargeClusterSupportEnabled: boolean;\n\n   documentationUrl: string;\n\n   Icon: Icon = Icon;\n   AlertType: typeof AlertType = AlertType;\n\n   constructor(private rdmaService: VsanRdmaService,\n         private stretchedClusterService: VsanStretchedClusterService,\n         private navigationService: NavigationService) {\n   }\n\n   @Loader({\n      name: LoaderName.ON_INIT,\n      srMessage: \"vsan.services.network.title\",\n      srMessageType: SrMessageType.PAGE_TITLE,\n   })\n   async ngOnInit(): Promise<void> {\n      this.documentationUrl = this.navigationService.getVmwareHelpUrl(NavigationService.NETWORKING_URL,\n            DocumentationId.RDMA_DOCUMENTATION);\n      const context: EditNetworkContext = VsanUiUtils.getModalContext();\n      this.clusterName = context.clusterName;\n      this.clusterRef = context.clusterRef;\n      this.isStretchedClusterUnsupported = context.isStretchedClusterUnsupported;\n      this.isLargeClusterSupportEnabled = context.isLargeClusterSupportEnabled;\n      [this.hasSharedWitnessHost, this.rdmaData] = await Promise.all([\n         this.stretchedClusterService.hasSharedWitnessHost(this.clusterRef),\n         this.rdmaService.getRdmaData(this.clusterRef),\n      ]);\n      this.originalIsRdmaEnabled = this.rdmaData.isRdmaEnabled;\n      // Increase the dialog height when unsupported hosts are listed and there are no other config limitations\n      if (this.showUnsupportedHosts()) {\n         VsanUiUtils.setModalDialogHeight(NetworkOptionsComponent.RDMA_DIALOG_HEIGHT_UNSUPPORTED_HOSTS);\n      }\n   }\n\n   get rdmaAlertMessage(): string {\n      if (this.hasSharedWitnessHost) {\n         return VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupportedSharedWitness\");\n      } else if (this.isStretchedClusterUnsupported) {\n         return VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupportedStretchedCluster\");\n      } else if (this.isLargeClusterSupportEnabled) {\n         return VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupportedLargeScaleCluster\");\n      } else if (this.hasUnsupportedHosts()) {\n         return VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupportedByHostsHardware\");\n      }\n\n      return VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.hostsHardwareRdmaRequirement\");\n   }\n\n   get rdmaAlertType(): string {\n      if (this.hasConfigLimitation() || this.hasUnsupportedHosts()) {\n         return AlertType.DANGER;\n      }\n\n      return AlertType.SUCCESS;\n   }\n\n   /**\n    * This is to decide if UI should enable the toggle.\n    */\n   get isRdmaOptionEnabled(): boolean {\n      // when isRdmaEnabled is already set to true but there is an unsupported cluster configuration,\n      // allow user to disable the option. Otherwise disable the toggle and list the unsupported hosts\n      return !this.hasUnsupportedHosts() && !this.hasConfigLimitation()\n            ? true\n            : this.rdmaData?.isRdmaEnabled;\n   }\n\n   showUnsupportedHosts(): boolean {\n      return this.hasUnsupportedHosts() && !this.hasConfigLimitation();\n   }\n\n   navigateToHost(hostRef: ManagedObject): void {\n      this.navigationService.navigateTo(PlatformExtension.HOST_PHYSICAL_ADAPTERS, hostRef);\n      VsanUiUtils.closeModalDialog();\n   }\n\n   @Loader({name: LoaderName.ON_CONFIRM})\n   async confirm(): Promise<void> {\n      if (this.rdmaData.isRdmaEnabled === this.originalIsRdmaEnabled) {\n         VsanUiUtils.closeModalDialog();\n         return;\n      }\n\n      const task: ManagedObject = await this.rdmaService.configureVsanRdma(\n            this.clusterRef, this.rdmaData.isRdmaEnabled);\n      VsanUiUtils.closeModalDialog(task);\n   }\n\n   @ErrorHandler({name: LoaderName.ON_CONFIRM})\n   private handleConfirmError(): void {\n      this.alertMessage = VsanUiUtils.getString(\"vsan.services.network.edit.error\");\n   }\n\n   // Check if any of the configurations that are not compatible with RDMA are enabled\n   private hasConfigLimitation(): boolean {\n      return this.isStretchedClusterUnsupported || this.hasSharedWitnessHost || this.isLargeClusterSupportEnabled;\n   }\n\n   private hasUnsupportedHosts(): boolean {\n      return !VsanUiUtils.isEmpty(this.rdmaData?.unsupportedHosts);\n   }\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ServiceUtils} from \"./service.utils\";\nimport {VsanServiceStatus} from \"@generated/vsan-service-status\";\nimport {VsanIscsiTargetConfig} from \"@generated/vsan-iscsi-target-config\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {VsanConfigService} from \"@generated/vsan-config-service\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {Privileges} from \"@generated/privileges\";\nimport {VsanIscsiUtil} from \"@util/vsan-iscsi-util\";\nimport IscsiTargetAuthType = VsanIscsiTargetConfig.IscsiTargetAuthType;\nimport {Icon} from \"@util/icon\";\nimport {NavigationService} from \"@navigation/navigation.service\";\nimport {PersistedProperty} from \"@service/browser-storage.service\";\n\n@Component({\n   selector: \"vsan-iscsi-target-settings\",\n   templateUrl: \"iscsi-target-settings.html\",\n})\nexport class IscsiTargetSettingsComponent implements OnInit {\n\n   ServiceUtils: typeof ServiceUtils = ServiceUtils;\n   Icon: typeof Icon = Icon;\n   VsanIscsiUtil: typeof VsanIscsiUtil = VsanIscsiUtil;\n\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Input()\n   clusterName: string;\n\n   @Input()\n   clusterPermissions: Map<string, boolean>;\n\n   @Input()\n   vcPermissions: Map<string, boolean>;\n\n   @PersistedProperty(\"vsan-iscsi-target-sevice-card-expanded-state\")\n   isExpanded: boolean;\n\n   status: VsanServiceStatus;\n   config: VsanIscsiTargetConfig;\n\n   editClusterPermission: boolean;\n   readPoliciesPermission: boolean;\n\n   errorMessage: string;\n\n   constructor(private configService: VsanConfigService,\n         private taskService: TaskMonitorService) {\n   }\n\n   ngOnInit(): void {\n      this.editClusterPermission = this.clusterPermissions.get(Privileges.EDIT_CLUSTER());\n      this.readPoliciesPermission = this.vcPermissions.get(Privileges.READ_POLICIES());\n      this.refresh();\n   }\n\n   @RefreshHandler\n   refresh(): void {\n      this.queryIscsiTargetConfig();\n   }\n\n   queryIscsiTargetConfig = () => {\n      this.config = null;\n      this.errorMessage = null;\n      this.configService.getIscsiTargetStatus(this.clusterRef)\n            .then(result => {\n               this.status = result.status;\n               this.config = result.details as VsanIscsiTargetConfig;\n               // Expand the card by default if the service is enabled\n               if (this.status === VsanServiceStatus.ENABLED && VsanUiUtils.isUnset(this.isExpanded)) {\n                  this.isExpanded = true;\n               }\n            }).catch(e => this.errorMessage = e);\n   };\n\n   get editTooltip(): string {\n      if (!this.config) {\n         // The config data is still loading\n         return \"\";\n      }\n      if (!this.editClusterPermission || !this.readPoliciesPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      }\n      if (this.config.emptyCluster) {\n         return VsanUiUtils.getString(\"vsan.iscsi.homeObject.host.version.warning.nohost.label\");\n      }\n      return \"\";\n   }\n\n   edit(): void {\n      new ModalBuilder(\"services/editIscsiTargetConfig\")\n            .setSize(800, 400)\n            .open({\n               clusterRef: this.clusterRef,\n               clusterName: this.clusterName,\n            })\n            .then(taskRef => this.awaitThenInvoke(taskRef));\n   }\n\n   private awaitThenInvoke = (taskRef: ManagedObject) => {\n      this.taskService.getAwaitResult(taskRef)\n            .then(() => this.queryIscsiTargetConfig())\n            .catch(e => this.errorMessage = e);\n   };\n}\n","/* Copyright 2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {Status} from \"@component/card/status\";\nimport {VsanConfigSpec} from \"@generated/vsan-config-spec\";\nimport {EditVsanManagedDiskClaimContext} from \"@navigation/context/edit-vsan-managed-disk-claim-context\";\nimport {PersistedProperty} from \"@service/browser-storage.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {VsanDialogUtil} from \"@util/vsan-dialog-util\";\nimport {VsanRoutes} from \"../../vsan-routes\";\nimport {DiskManagementActionAvailabilityService} from \"../disk-management/views/validation/disk-management-action-availability.service\";\nimport {DiskManagementActionContext} from \"../disk-management/views/validation/disk-management-action-context\";\nimport {ServiceUtils} from \"./service.utils\";\n\n@Component({\n   selector: \"vsan-max-settings\",\n   templateUrl: \"vsan-max-settings.html\",\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VsanMaxSettingsComponent implements OnInit {\n\n   @Input()\n   clusterName: string;\n\n   @Input()\n   vsanConfig: VsanConfigSpec;\n\n   @Input()\n   editClusterPermission: boolean;\n\n   @Input()\n   isEmptyCluster: boolean;\n\n   @Output()\n   editTaskStarted: EventEmitter<ManagedObject> = new EventEmitter<ManagedObject>();\n\n   @PersistedProperty(\"vsan-max-settings-card-expanded-state\")\n   isExpanded: boolean;\n\n   vsanMaxStatus: Status;\n   ServiceUtils: typeof ServiceUtils = ServiceUtils;\n\n   constructor(private diskManagementActionAvailabilityService: DiskManagementActionAvailabilityService) {\n   }\n\n   ngOnInit(): void {\n      this.vsanMaxStatus = this.vsanConfig?.isVsanMaxEnabled ? Status.Enabled : Status.Disabled;\n   }\n\n   isEditAllowed(): boolean {\n      return this.diskManagementActionAvailabilityService.checkAvailability(\n            this.getActionValidationContext()).available;\n   }\n\n   getDisabledEditReason(): string {\n      return this.diskManagementActionAvailabilityService.checkAvailability(this.getActionValidationContext()).message;\n   }\n\n   private getActionValidationContext(): DiskManagementActionContext {\n      return {\n         actionId: DiskManagementActionAvailabilityService.EDIT_VSAN_MANAGED_DISK_CLAIM_ID,\n         hasEditPermission: this.editClusterPermission,\n         vsanConfig: this.vsanConfig,\n         isEmptyCluster: this.isEmptyCluster,\n         autoClaimMode: null,\n         allHosts: null,\n         clusterCapabilities: null,\n         hasHostMaintenancePermission: null,\n         spaceEfficiencyConfig: null,\n      };\n   }\n\n   edit(): void {\n      const context: EditVsanManagedDiskClaimContext = {clusterName: this.clusterName};\n      new ModalBuilder(`${VsanRoutes.SERVICES_VIEW}/editVsanManagedDiskClaim`)\n            .setSize(VsanDialogUtil.VSAN_DISK_CLAIM_ACTION_DIALOG.width,\n                  VsanDialogUtil.VSAN_DISK_CLAIM_ACTION_DIALOG.height)\n            .open(context)\n            .then((taskRef: ManagedObject) => {\n               this.editTaskStarted.emit(taskRef);\n            });\n   }\n}","<!--Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-edit-prompt\n      [title]=\"'vsan.iscsi.action.edit.title' | localized\"\n      [subtitle]=\"clusterName\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"blockApplyButton\"\n      [confirmText]=\"VsanUiUtils.getEditServiceButtonText(originalIsServiceEnabled)\"\n      [(alertMessages)]=\"alertMessages\"\n      (onConfirm)=\"confirm()\">\n   <div class=\"dialog-container\">\n      <clr-toggle-container *ngIf=\"originalIsServiceEnabled\">\n         <clr-toggle-wrapper [class.has-error]=\"alertMessages?.length > 0 && isServiceEnabled\">\n            <input type=\"checkbox\"\n                   clrToggle\n                   id=\"enable-iscsi-service-toggle\"\n                   name=\"enableCheckbox\"\n                   [(ngModel)]=\"isServiceEnabled\" />\n            <label>{{'vsan.iscsi.action.edit.enableCheckbox' | localized}}</label>\n         </clr-toggle-wrapper>\n         <clr-control-helper>{{'vsan.iscsi.action.edit.enableCheckbox.tooltip' | localized}}</clr-control-helper>\n      </clr-toggle-container>\n      <form *ngIf=\"iscsiSettings\" clrForm clrLayout=\"horizontal\" [formGroup]=\"iscsiSettings\">\n         <!-- Default iSCSI network -->\n         <clr-select-container>\n            <label id=\"network-label\" class=\"clr-col-12 clr-col-md-4\">\n               {{'vsan.iscsi.action.edit.networkLabel' | localized}}\n            </label>\n            <select clrSelect\n                    id=\"network-selector\"\n                    class=\"clr-col-12 clr-col-md-8\"\n                    name=\"networkSelector\"\n                    formControlName=\"network\"\n                    [vsan-disable-form-control]=\"!isServiceEnabled\">\n               <option *ngFor=\"let availableNetwork of availableNetworks\"\n                       [ngValue]=\"availableNetwork\">\n                  {{availableNetwork}}\n               </option>\n            </select>\n            <clr-control-helper>\n               {{'vsan.iscsi.action.edit.networkSettingsInfo' | localized}}\n            </clr-control-helper>\n            <clr-control-error>\n               {{'vsan.iscsi.network.none' | localized}}\n            </clr-control-error>\n         </clr-select-container>\n         <!-- Default TCP port -->\n         <clr-input-container>\n            <label class=\"clr-col-12 clr-col-md-4\">\n               {{'vsan.iscsi.action.edit.portLabel' | localized}}\n            </label>\n            <input clrInput\n                   id=\"port-input\"\n                   class=\"clr-col-12 clr-col-md-8\"\n                   name=\"portSelector\"\n                   type=\"number\"\n                   formControlName=\"port\"\n                   [vsan-disable-form-control]=\"!isServiceEnabled\"/>\n            <clr-control-error>\n               {{'vsan.iscsi.edit.network.port.error' | localized}}\n            </clr-control-error>\n         </clr-input-container>\n         <!-- Authentication -->\n         <vsan-authentication formControlName=\"authSpec\"\n                              [vsan-disable-form-control]=\"!isServiceEnabled\"\n                              (authTypeChange)=\"handleAuthChange($event)\">\n         </vsan-authentication>\n\n         <!-- Storage policy for the home object -->\n         <clr-select-container>\n            <label class=\"clr-col-12 clr-col-md-4\">{{'vsan.iscsi.action.edit.policyLabel' | localized}}</label>\n            <select clrSelect\n                    id=\"policy-selector\"\n                    class=\"clr-col-12 clr-col-md-8\"\n                    name=\"policySelector\"\n                    formControlName=\"policy\"\n                    [vsan-disable-form-control]=\"!isServiceEnabled\">\n               <option *ngFor=\"let availPolicy of availablePolicies\"\n                       [ngValue]=\"availPolicy\">\n                  {{availPolicy.name}}\n               </option>\n            </select>\n            <clr-control-helper>\n               {{'vsan.iscsi.action.edit.policySettingsInfo' | localized}}\n            </clr-control-helper>\n            <clr-control-error>{{policyMessage}}</clr-control-error>\n         </clr-select-container>\n      </form>\n   </div>\n</vsan-edit-prompt>\n","<!-- Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<h6>{{processLabel}}</h6>\n\n<clr-progress-bar *ngIf=\"taskInfo\"\n                  [clrValue]=\"taskInfo.progress.toFixed(0)\"\n                  [clrMax]=\"100\"\n                  [clrLabeled]=\"true\">\n</clr-progress-bar>\n\n<div *ngIf=\"clusterPowerState?.errorMessage\" class=\"btn-group\">\n   <clr-tooltip>\n      <span clrTooltipTrigger>\n         <button id=\"resume\"\n                 class=\"btn btn-sm btn-link no-spacing\"\n                 (click)=\"resume()\">\n            {{resumeLabel}}\n         </button>\n      </span>\n      <clr-tooltip-content id=\"resume-description\" clrPosition=\"top-right\" clrSize=\"lg\">\n         {{resumeDescription}}\n      </clr-tooltip-content>\n   </clr-tooltip>\n</div>\n\n<div class=\"cluster-power-change-step\" *ngFor=\"let step of clusterPowerState?.inProgressStatuses; let stepIndex = index\">\n   <div *ngIf=\"localizedSteps.has(step)\" class=\"step-label-and-status\">\n      <clr-icon *ngIf=\"!isStepInProgress(stepIndex)\"\n                class=\"is-solid\"\n                [ngClass]=\"getStepIconClass(stepIndex)\"\n                [attr.shape]=\"getStepIconShape(stepIndex)\">\n      </clr-icon>\n      <span *ngIf=\"isStepInProgress(stepIndex)\" class=\"spinner spinner-inline\"></span>\n      <span>{{getStatusLabel(step)}}</span>\n   </div>\n   <vsan-validation *ngIf=\"isStepFailed(stepIndex)\"\n                    class=\"indent\"\n                    [alert]=\"clusterPowerState.errorMessage\"\n                    [allowClose]=\"false\"\n                    [alertsExpanded]=\"true\"\n                    [allowExpandCollapse]=\"false\">\n   </vsan-validation>\n</div>","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {\n   ChangeDetectionStrategy,\n   Component, EventEmitter,\n   Input, Output,\n} from \"@angular/core\";\nimport {Status} from \"@component/card/status\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * An expandable card component with a status label in the header. It provides:\n *  - expand/collapse of the content using vsan-card.\n *  - header with a status label. For example a service with status: Enabled/Disabled.\n *  - any footer with actions is projected.\n *  - Change detection OnPush, so no service calls should be made inside this component.\n */\n@Component({\n   selector: \"vsan-status-card\",\n   templateUrl: \"status-card.html\",\n   styleUrls: [ \"status-card.scss\"],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StatusCardComponent {\n\n   private static readonly LABEL_CLASS: string = \"label\";\n   private static readonly LABEL_SUCCESS_CLASS: string = \"label-success\";\n   private static readonly LABEL_PARTIAL_CLASS: string = \"label-warning\";\n\n   private static readonly ENABLED_SERVICE_LABELS: string[] = [\n         StatusCardComponent.LABEL_CLASS,\n         StatusCardComponent.LABEL_SUCCESS_CLASS,\n   ];\n\n   private static readonly DISABLED_SERVICE_LABELS: string[] = [\n      StatusCardComponent.LABEL_CLASS,\n   ];\n\n   private static readonly PARTIAL_ENABLED_SERVICE_LABELS: string[] = [\n         StatusCardComponent.LABEL_CLASS,\n         StatusCardComponent.LABEL_PARTIAL_CLASS,\n   ];\n\n   /*\n    * The service name. Should be localized.\n    */\n   @Input()\n   label: string;\n\n   /*\n    * No status means no label will be shown next to the service name.\n    * Otherwise we show a label with \"Enabled\"/\"Disabled\", depending on the passed value.\n    */\n   @Input()\n   status: Status;\n\n   /**\n    * If set to true, the card header will have cdkDragHeader attribute added, which\n    * shows a \"move\" cursor. This can be used in the context of drag lists.\n    */\n   @Input()\n   allowDragging: boolean;\n\n   private _isExpanded: boolean;\n\n   /*\n    * Whether to expand or collapse the service card.\n    */\n   @Input()\n   set isExpanded(value: boolean) {\n      if (this._isExpanded !== value) {\n         this._isExpanded = value;\n         this.isExpandedChange.emit(this._isExpanded);\n      }\n   }\n\n   get isExpanded(): boolean {\n      // Always coerce as non-set value /i.e., undefined/ is considered true.\n      // See https://bugzilla.eng.vmware.com/show_bug.cgi?id=2836825\n      return !!this._isExpanded;\n   }\n\n   @Output()\n   isExpandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n   get statusLabelClass(): string {\n      if (this.status === Status.Enabled) {\n         return StatusCardComponent.ENABLED_SERVICE_LABELS.join(\" \");\n      } else if (this.status === Status.Partial) {\n         return StatusCardComponent.PARTIAL_ENABLED_SERVICE_LABELS.join(\" \");\n      }\n      return StatusCardComponent.DISABLED_SERVICE_LABELS.join(\" \");\n   }\n\n   get statusLabel(): string {\n      if (this.status === Status.Enabled) {\n         return VsanUiUtils.getString(\"vsan.services.enabled\");\n      } else if (this.status === Status.Partial) {\n         return VsanUiUtils.getString(\"vsan.services.partial\");\n      }\n      return VsanUiUtils.getString(\"vsan.services.disabled\");\n   }\n}\n","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-status-card [label]=\"'vsan.services.performance.title.label' | localized\"\n                  [allowDragging]=\"true\"\n                  [status]=\"ServiceUtils.getServiceStatus(status)\"\n                  [(isExpanded)]=\"isExpanded\">\n   <perf-configuration [status]=\"status\"\n                       [vcCapabilityData]=\"vcCapabilityData\"\n                       [vcPermissions]=\"vcPermissions\"\n                       [errorMessage]=\"errorMessage\"\n                       [config]=\"config\">\n   </perf-configuration>\n   <div *ngIf=\"config && ServiceUtils.isSupported(status)\" class=\"card-footer\">\n      <clr-tooltip>\n         <span clrTooltipTrigger [vsan-ignore-focus]=\"!editTooltip\">\n            <button id=\"edit-perf-config\"\n                    class=\"btn btn-sm btn-link\"\n                    aria-describedby=\"edit-perf-service-description\"\n                    [disabled]=\"editTooltip\"\n                    (click)=\"edit()\">\n               {{ServiceUtils.getActionTitle(status)}}\n            </button>\n         </span>\n         <clr-tooltip-content *ngIf=\"editTooltip\"\n                              id=\"edit-perf-service-description\"\n                              clrPosition=\"top-right\"\n                              clrSize=\"md\">\n            {{editTooltip}}\n         </clr-tooltip-content>\n      </clr-tooltip>\n   </div>\n</vsan-status-card>\n","<!-- Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<!-- Loading indicator -->\n<span *ngIf=\"isLoading\" id=\"loading-indicator\" class=\"spinner central-spinner\"></span>\n\n<vsan-validation id=\"services-validation\"\n                 *ngIf=\"errorMessages.length > 0\"\n                 [allowClose]=\"false\"\n                 [(alerts)]=\"errorMessages\"\n                 (onClosed)=\"errorMessages = []\">\n</vsan-validation>\n\n<ng-container *ngIf=\"!isLoading\">\n\n   <vsan-validation id=\"services-ha-dpm-validation\"\n                    *ngIf=\"hasHaDpmWarnings\"\n                    [allowClose]=\"false\"\n                    [alertType]=\"'warning'\"\n                    [alerts]=\"haDpmWarningMessages\"\n                    [allowExpandCollapse]=\"false\"\n                    [alertsExpanded]=\"true\"\n                    [actionLinks]=\"getHaDpmActionLinks()\">\n   </vsan-validation>\n\n   <div id=\"vsan-info-container\" class=\"vsan-info-container\">\n      <h5 vsan-auto-focus>\n         {{\"vsan.services.header\" | localized}}\n      </h5>\n      <div *ngIf=\"vsanConfig.isEnabled || isComputeOnlyCluster()\" class=\"actions-container\">\n         <!-- Shutdown cluster action button -->\n         <clr-tooltip *ngIf=\"isShutdownActionAvailable\">\n            <span clrTooltipTrigger [vsan-ignore-focus]=\"isShutdownActionEnabled\">\n               <button id=\"shutdown-action\"\n                       class=\"btn btn-sm btn-link no-spacing\"\n                       aria-describedby=\"shutdown-cluster-disabled-description\"\n                       (click)=\"shutdownCluster()\"\n                       [disabled]=\"!isShutdownActionEnabled\">\n                  {{\"vsan.cluster.shutdown.wizard.title\" | localized}}\n               </button>\n            </span>\n            <clr-tooltip-content *ngIf=\"!isShutdownActionEnabled\"\n                                 id=\"shutdown-cluster-disabled-description\"\n                                 clrPosition=\"bottom-left\"\n                                 clrSize=\"lg\">\n               {{getShutdownDisabledReason()}}\n            </clr-tooltip-content>\n         </clr-tooltip>\n         <!-- Turn OFF vSAN action button -->\n         <clr-tooltip>\n            <span clrTooltipTrigger [vsan-ignore-focus]=\"isTurnOffVsanEnabled\">\n               <button id=\"turn-off-action\"\n                       class=\"btn btn-sm btn-link no-spacing\"\n                       aria-describedby=\"turn-off-vsan-disabled-description\"\n                       (click)=\"turnOffVsan()\"\n                       [disabled]=\"!isTurnOffVsanEnabled\">\n                  {{\"vsan.generalConfig.disableVsan.warning.title\" | localized}}\n               </button>\n            </span>\n            <clr-tooltip-content *ngIf=\"!isTurnOffVsanEnabled\"\n                                 id=\"turn-off-vsan-disabled-description\"\n                                 clrPosition=\"bottom-left\"\n                                 clrSize=\"lg\">\n               {{getTurnOffVsanDisabledReason()}}\n            </clr-tooltip-content>\n         </clr-tooltip>\n      </div>\n   </div>\n   <vsan-validation *ngIf=\"successMessages.length\"\n                    id=\"success-messages\"\n                    [alertType]=\"'success'\"\n                    [(alerts)]=\"successMessages\">\n   </vsan-validation>\n   <vsan-unavailable-view *ngIf=\"unavailableViewSpec\"\n                          [clusterRef]=\"clusterRef\"\n                          [unavailableViewSpec]=\"unavailableViewSpec\"\n                          [refreshAfterCompletion]=\"false\"\n                          [hasEditPrivilege]=\"unavailableViewActionPermission\">\n   </vsan-unavailable-view>\n   <vsan-cluster-power-state-change-progress *ngIf=\"!unavailableViewSpec && isClusterChangingPowerState\"\n                                             [clusterRef]=\"clusterRef\"\n                                             (clusterPowerStateChanged)=\"clusterPowerStateChanged()\">\n   </vsan-cluster-power-state-change-progress>\n   <!-- vSAN enabled -->\n   <ng-container *ngIf=\"!unavailableViewSpec && !isClusterChangingPowerState\">\n      <!-- Common upgrade component, only visible when old disks or old format objects exist. -->\n      <vsan-upgrade *ngIf=\"upgradeData\"\n                    [upgradeData]=\"upgradeData\"\n                    [hasUpgradePermission]=\"editClusterPermission && configureStoragePermission\"\n                    [showCompatibilityWarning]=\"true\"\n                    [visibleWhenUpToDate]=\"isVsanUpgradeVisible\"\n                    (precheckComplete)=\"fetchPrecheckUpgradeData()\"\n                    (upgradeComplete)=\"vsanUpgradeComplete()\">\n      </vsan-upgrade>\n      <!-- The services configuration cards -->\n      <vsan-drag-and-drop *ngIf=\"showCards\"\n                          [view]=\"cardsView\"\n                          [cardTemplates]=\"serviceTemplates\">\n      </vsan-drag-and-drop>\n   </ng-container>\n</ng-container>\n<!-- The service cards are defined in templates, which can be included inside column-card-container\n     as dragable items. -->\n<ng-template vsan-drag-service=\"{{VSAN_MAX_CARD}}\"\n             [visible]=\"clusterCapabilityData?.isVsanMaxSingleTierSupported\">\n   <vsan-max-settings\n         [clusterName]=\"clusterName\"\n         [vsanConfig]=\"vsanConfig\"\n         [editClusterPermission]=\"editClusterPermission\"\n         [isEmptyCluster]=\"!hostCount\"\n         (editTaskStarted)=\"awaitThenInvoke($event, queryVsanGeneralConfig)\">\n   </vsan-max-settings>\n</ng-template>\n<ng-template vsan-drag-service=\"{{SUPPORT_INSIGHT_CARD}}\"\n             [visible]=\"vcCapabilityData?.isSupportInsightSupported && !ceipEnabled && !isComputeOnlyCluster()\">\n   <!-- Support Insight -->\n   <vsan-support-insight [editClusterPermission]=\"editClusterPermission\">\n      <vsan-validation *ngIf=\"supportInsightError\"\n                       [alert]=\"supportInsightError\"\n                       [isSmall]=\"true\">\n      </vsan-validation>\n   </vsan-support-insight>\n</ng-template>\n<ng-template vsan-drag-service=\"{{PERFORMANCE_SERVICE_CARD}}\"\n             [visible]=\"!isComputeOnlyCluster()\">\n   <vsan-performance-service\n         [clusterRef]=\"clusterRef\"\n         [clusterName]=\"clusterName\"\n         [config]=\"perfSvcConfig\"\n         [status]=\"perfSvsStatus\"\n         [vcCapabilityData]=\"vcCapabilityData\"\n         [clusterPermissions]=\"clusterPermissions\"\n         [vcPermissions]=\"vcPermissions\">\n   </vsan-performance-service>\n</ng-template>\n<ng-template vsan-drag-service=\"{{FILE_SERVICE_CARD}}\"\n             [visible]=\"vcCapabilityData?.isFileServiceSupported && !isComputeOnlyCluster()\">\n   <vsan-file-service [clusterRef]=\"clusterRef\"\n                      [clusterName]=\"clusterName\"\n                      [vcCapabilityData]=\"vcCapabilityData\"\n                      [latestDiskFmtVersion]=\"upgradeData?.latestVersion\"\n                      [minDiskFmtVersion]=\"upgradeData?.upgradeDiskData?.minVersion\"\n                      [clusterPermissions]=\"clusterPermissions\"\n                      [availableDomains]=\"availableDomains\"\n                      [isStretchedCluster]=\"isStretchedCluster\"\n                      [vcPermissions]=\"vcPermissions\"\n                      [isPerfServiceEnabled]=\"perfSvcEnabled\">\n   </vsan-file-service>\n</ng-template>\n<ng-template vsan-drag-service=\"{{ISCSI_SERVICE_CARD}}\"\n             [visible]=\"!isComputeOnlyCluster()\">\n   <vsan-iscsi-target-settings\n         [clusterRef]=\"clusterRef\"\n         [clusterName]=\"clusterName\"\n         [clusterPermissions]=\"clusterPermissions\"\n         [vcPermissions]=\"vcPermissions\">\n   </vsan-iscsi-target-settings>\n</ng-template>\n\n<ng-template vsan-drag-service=\"{{DATA_SERVICES_CARD}}\"\n             [visible]=\"!isComputeOnlyCluster()\">\n   <vsan-data-services\n         [vsanConfig]=\"vsanConfig\"\n         [clusterRef]=\"clusterRef\"\n         [clusterName]=\"clusterName\"\n         [permissions]=\"clusterPermissions\"\n         [clusterCapabilityData]=\"clusterCapabilityData\"\n         (editTaskStarted)=\"awaitThenInvoke($event, queryVsanGeneralConfig)\">\n   </vsan-data-services>\n</ng-template>\n<ng-template vsan-drag-service=\"{{CAPACITY_RESERVE_CARD}}\"\n             [visible]=\"vcCapabilityData?.isSlackSpaceReservationSupported && !isComputeOnlyCluster()\">\n   <vsan-capacity-management-settings\n         [isSlackSpaceCapacitySupported]=\"clusterCapabilityData?.isSlackSpaceReservationSupported\"\n         [isCapacityCustomizableThresholdsSupportedOnVc]=\"vcCapabilityData?.isCapacityCustomizableThresholdsSupported\"\n         [permissions]=\"clusterPermissions\"\n         [clusterName]=\"clusterName\"\n         [upgradeData]=\"upgradeData\">\n   </vsan-capacity-management-settings>\n</ng-template>\n<ng-template vsan-drag-service=\"{{ADVANCED_OPTIONS_CARD}}\"\n             [visible]=\"vsanConfig?.advancedOptions && !isComputeOnlyCluster()\">\n   <vsan-advanced-options\n         [config]=\"vsanConfig.advancedOptions\"\n         [clusterRef]=\"clusterRef\"\n         [clusterName]=\"clusterName\"\n         [clusterCapabilityData]=\"clusterCapabilityData\"\n         [vcCapabilityData]=\"vcCapabilityData\"\n         [permissions]=\"clusterPermissions\"\n         (editTaskStarted)=\"awaitThenInvoke($event, queryVsanGeneralConfig)\">\n   </vsan-advanced-options>\n</ng-template>\n<ng-template vsan-drag-service=\"{{NETWORK_OPTIONS_CARD}}\"\n             [visible]=\"vcCapabilityData?.isRdmaSupported && !isComputeOnlyCluster()\">\n   <vsan-network-options\n         [clusterRef]=\"clusterRef\"\n         [clusterName]=\"clusterName\"\n         [vsanConfig]=\"vsanConfig\"\n         [clusterCapabilityData]=\"clusterCapabilityData\"\n         [editClusterPermission]=\"editClusterPermission\"\n         [isStretchedCluster]=\"isStretchedCluster\"\n         [isEmptyCluster]=\"!hostCount\"\n         (editTaskStarted)=\"awaitThenInvoke($event, queryVsanGeneralConfig)\">\n   </vsan-network-options>\n</ng-template>\n<ng-template vsan-drag-service=\"{{HISTORICAL_HEALTH_CARD}}\"\n             [visible]=\"vcCapabilityData?.isHistoricalHealthSupported && vsanConfig?.historicalHealthConfig\">\n   <vsan-historical-health-settings\n         [config]=\"vsanConfig.historicalHealthConfig\"\n         [clusterName]=\"clusterName\"\n         [clusterRef]=\"clusterRef\"\n         [editClusterPermission]=\"editClusterPermission\"\n         (editTaskStarted)=\"awaitThenInvoke($event, queryVsanGeneralConfig)\">\n   </vsan-historical-health-settings>\n</ng-template>\n","<!--Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-edit-prompt\n      [title]=\"'vsan.generalConfigDialog.title' | localized\"\n      [subtitle]=\"contextObjectName\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"loading  || hasInitializationError\"\n      [(alertMessages)]=\"validationErrors\"\n      (onConfirm)=\"ok()\">\n\n   <vsan-general-settings *ngIf=\"!loading\"\n                          [clusterRef]=\"clusterRef\"\n                          [config]=\"config\"\n                          [predefinedHeight]=\"contextHeight\"\n                          [showFileServiceOweDescription]=\"showFileServiceOweDescription\"\n                          (vsanConfigSpecChange)=\"vsanConfigSpec=$event\">\n   </vsan-general-settings>\n\n</vsan-edit-prompt>\n","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-status-card [label]=\"'vsan.iscsi.title' | localized\"\n                  [allowDragging]=\"true\"\n                  [status]=\"ServiceUtils.getServiceStatus(status)\"\n                  [(isExpanded)]=\"isExpanded\">\n   <!-- Await the configuration and show loading -->\n   <span id=\"loading-iscsi-settings\"\n         *ngIf=\"!config && !errorMessage\"\n         class=\"spinner spinner-md central-spinner\">\n   </span>\n   <iscsi-configuration *ngIf=\"config\"\n                        [errorMessage]=\"errorMessage\"\n                        [config]=\"config\"\n                        [status]=\"status\">\n   </iscsi-configuration>\n   <div *ngIf=\"config && ServiceUtils.isSupported(status)\" class=\"card-footer\">\n      <clr-tooltip>\n         <span clrTooltipTrigger [vsan-ignore-focus]=\"!editTooltip\">\n            <button id=\"edit-iscsi-config\"\n                    class=\"btn btn-sm btn-link\"\n                    aria-describedby=\"edit-iscsi-service-description\"\n                    [disabled]=\"editTooltip\"\n                    (click)=\"edit()\">\n               {{ServiceUtils.getActionTitle(status)}}\n            </button>\n         </span>\n         <clr-tooltip-content *ngIf=\"editTooltip\"\n                              id=\"edit-iscsi-service-description\"\n                              clrPosition=\"top-right\"\n                              clrSize=\"md\">\n            {{editTooltip}}\n         </clr-tooltip-content>\n      </clr-tooltip>\n   </div>\n</vsan-status-card>\n","<!-- Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-status-card [label]=\"'vsan.services.fileservices.title' | localized\"\n                  [allowDragging]=\"true\"\n                  [status]=\"ServiceUtils.getServiceStatus(status)\"\n                  [(isExpanded)]=\"isExpanded\">\n   <vsan-validation id=\"preflight-check-error\"\n                    *ngIf=\"preflightCheckErrors?.length\"\n                    [(alerts)]=\"preflightCheckErrors\">\n   </vsan-validation>\n   <file-service-configuration [clusterRef]=\"clusterRef\"\n                               [clusterName]=\"clusterName\"\n                               [errorMessage]=\"errorMessage\"\n                               [vcCapabilityData]=\"vcCapabilityData\"\n                               [isPerfServiceEnabled]=\"isPerfServiceEnabled\"\n                               [availableDomains]=\"availableDomains\"\n                               [isStretchedCluster]=\"isStretchedCluster\"\n                               [editClusterPermission]=\"editClusterPermission\"\n                               [upgradeFsvmTask]=\"upgradeFsvmTask\"\n                               (fileServiceStatusLoaded)=\"onFileServiceStatusLoaded($event)\">\n   </file-service-configuration>\n   <div *ngIf=\"!loading && status && ServiceUtils.isSupported(status)\" class=\"card-footer\">\n      <div class=\"btn-container\">\n         <clr-tooltip *ngIf=\"ServiceUtils.isDisabled(status)\">\n            <span clrTooltipTrigger [vsan-ignore-focus]=\"!enableBtnDisabled\">\n               <button id=\"enable-file-services\"\n                       class=\"btn btn-sm btn-link\"\n                       aria-describedby=\"enable-file-service-description\"\n                       [disabled]=\"enableBtnDisabled\"\n                       (click)=\"editFileServices()\">\n                  {{\"vsan.generalConfig.button.enable\" | localized}}\n               </button>\n            </span>\n            <clr-tooltip-content *ngIf=\"enableBtnDisabled\"\n                                 id=\"enable-file-service-description\"\n                                 clrPosition=\"top-right\"\n                                 clrSize=\"md\">\n               {{enableDisabledTitle}}\n            </clr-tooltip-content>\n         </clr-tooltip>\n         <ng-container *ngIf=\"!ServiceUtils.isDisabled(status)\">\n            <clr-tooltip>\n               <span clrTooltipTrigger [vsan-ignore-focus]=\"!commonDisabledTitle\">\n                  <button id=\"disable-file-services\"\n                          class=\"btn btn-sm btn-link\"\n                          aria-describedby=\"disable-file-service-description\"\n                          [disabled]=\"commonDisabledTitle\"\n                          (click)=\"disableFileServices()\">\n                     {{\"vsan.generalConfig.button.disable\" | localized}}\n                  </button>\n               </span>\n               <clr-tooltip-content *ngIf=\"commonDisabledTitle\"\n                                    id=\"disable-file-service-description\"\n                                    clrPosition=\"top-right\"\n                                    clrSize=\"md\">\n                  {{commonDisabledTitle}}\n               </clr-tooltip-content>\n            </clr-tooltip>\n            <clr-tooltip>\n               <span clrTooltipTrigger [vsan-ignore-focus]=\"!upgradeDisabledReason\">\n                  <button id=\"upgrade-file-services\"\n                          class=\"btn btn-sm btn-link\"\n                          aria-describedby=\"upgrade-file-service-description\"\n                          [disabled]=\"upgradeDisabledReason\"\n                          (click)=\"upgradeFileServices()\">\n                     {{\"vsan.fileservices.upgrade.button.check.label\" | localized}}\n                  </button>\n               </span>\n               <clr-tooltip-content *ngIf=\"upgradeDisabledReason\"\n                                    id=\"upgrade-file-service-description\"\n                                    clrPosition=\"top-right\"\n                                    clrSize=\"md\">\n                  {{upgradeDisabledReason}}\n               </clr-tooltip-content>\n            </clr-tooltip>\n            <!--TODO: [rogerw] remove this section after the separation is done-->\n            <ng-container *ngIf=\"!vcCapabilityData.isSeparatingFileServiceWorkflowSupported\">\n               <ng-container [ngTemplateOutlet]=\"editButton\"\n                             [ngTemplateOutletContext]=\"{labelKey: 'vsan.generalConfig.button.edit'}\">\n               </ng-container>\n            </ng-container>\n         </ng-container>\n      </div>\n      <!--TODO: [rogerw] refine this section after the separation is done-->\n      <div class=\"btn-container\">\n         <ng-container *ngIf=\"vcCapabilityData.isSeparatingFileServiceWorkflowSupported && !ServiceUtils.isDisabled(status) && isFsDomainMissing\"\n                        [ngTemplateOutlet]=\"editButton\"\n                       [ngTemplateOutletContext]=\"{labelKey: 'vsan.services.fileservices.domain.configure.label'}\">\n         </ng-container>\n         <button *ngIf=\"vcCapabilityData.isSeparatingFileServiceWorkflowSupported && !ServiceUtils.isDisabled(status) && !isFsDomainMissing\"\n                 id=\"go-to-shares-btn\"\n                 class=\"btn btn-sm btn-link\"\n                 (click)=\"navigateToShares()\">\n            {{\"vsan.services.fileservices.domain.navigate.shares.label\" | localized}}\n         </button>\n      </div>\n   </div>\n</vsan-status-card>\n<ng-template #editButton let-labelKey=\"labelKey\">\n   <clr-tooltip>\n      <span clrTooltipTrigger [vsan-ignore-focus]=\"!commonDisabledTitle\">\n         <button id=\"edit-file-services-domain\"\n                 class=\"btn btn-sm\"\n                 [class.btn-link]=\"!vcCapabilityData.isSeparatingFileServiceWorkflowSupported\"\n                 [class.btn-primary]=\"vcCapabilityData.isSeparatingFileServiceWorkflowSupported\"\n                 aria-describedby=\"edit-file-service-description\"\n                 [disabled]=\"commonDisabledTitle\"\n                 (click)=\"editFileServices()\">\n            {{labelKey | localized}}\n         </button>\n      </span>\n      <clr-tooltip-content *ngIf=\"commonDisabledTitle\"\n                           id=\"edit-file-service-description\"\n                           clrPosition=\"top-right\"\n                           clrSize=\"md\">\n         {{commonDisabledTitle}}\n      </clr-tooltip-content>\n   </clr-tooltip>\n</ng-template>\n","<!-- Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-status-card [label]=\"'vsan.services.data.management.label' | localized\"\n                  [allowDragging]=\"true\"\n                  [(isExpanded)]=\"isExpanded\">\n   <data-services-configuration [clusterRef]=\"clusterRef\"\n                               [clusterCapabilityData]=\"clusterCapabilityData\"\n                               [vsanConfig]=\"vsanConfig\">\n   </data-services-configuration>\n   <div class=\"card-footer\">\n      <clr-tooltip>\n         <span clrTooltipTrigger [vsan-ignore-focus]=\"!editDisabledTitle\">\n            <!-- wrapped in span, because disabled element could not be clrTooltipTrigger for the tooltip -->\n            <button id=\"edit-config\"\n                    class=\"btn btn-sm btn-link\"\n                    aria-describedby=\"edit-data-management-description\"\n                    [disabled]=\"editDisabledTitle\"\n                    (click)=\"edit()\">\n                     {{'vsan.generalConfig.button.edit' | localized}}\n            </button>\n         </span>\n         <clr-tooltip-content *ngIf=\"editDisabledTitle\"\n                              id=\"edit-data-management-description\"\n                              clrPosition=\"top-right\"\n                              clrSize=\"md\">\n            {{editDisabledTitle}}\n         </clr-tooltip-content>\n      </clr-tooltip>\n      <clr-tooltip>\n         <span clrTooltipTrigger [vsan-ignore-focus]=\"!generateEncryptionKeysTitle\">\n            <button id=\"generate-new-keys\"\n                    class=\"btn btn-sm btn-link\"\n                    aria-describedby=\"generate-encryption-keys-description\"\n                    [disabled]=\"generateEncryptionKeysTitle\"\n                    (click)=\"generateEncryptionKeys()\">\n               {{'vsan.actions.encryption.rekey.label' | localized}}\n            </button>\n         </span>\n         <clr-tooltip-content\n               *ngIf=\"generateEncryptionKeysTitle\"\n               id=\"generate-encryption-keys-description\"\n               clrPosition=\"top-right\"\n               clrSize=\"md\">\n            {{generateEncryptionKeysTitle}}\n         </clr-tooltip-content>\n      </clr-tooltip>\n   </div>\n</vsan-status-card>\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nexport class ActionAvailableStatus {\n   constructor(public available: boolean, public message: string) { }\n}","\n      <vsan-question-prompt\n            title=\"{{'vsan.services.advancedOptions.largeClusterSupport.prompt.title' | localized}}\">\n         {{'vsan.services.advancedOptions.largeClusterSupport.prompt.text' | localized}}\n      </vsan-question-prompt>","<!-- Copyright 2022 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-status-card\n      [label]=\"'vsan.services.vsan.max.title.label' | localized\"\n      [status]=\"vsanMaxStatus\"\n      [allowDragging]=\"true\"\n      [(isExpanded)]=\"isExpanded\">\n   <div *ngIf=\"vsanConfig\" class=\"column-flex-container\">\n      <div class=\"clr-row\" id=\"vsan-managed-disk-claim-enabled\">\n         <label class=\"clr-col-5\">\n            {{\"vsan.services.vsan.max.diskClaim.label\" | localized}}\n         </label>\n         <div class=\"clr-col-7\">\n            {{ServiceUtils.geStatusLabel(vsanConfig.isDiskClaimVsanManaged, true)}}\n         </div>\n      </div>\n   </div>\n   <div class=\"card-footer\">\n      <clr-tooltip>\n         <span clrTooltipTrigger [vsan-ignore-focus]=\"isEditAllowed()\">\n            <!-- wrapped in span, because disabled element could not be clrTooltipTrigger for the tooltip -->\n            <button id=\"edit-vsan-max-setting-button\"\n                    class=\"btn btn-sm btn-link\"\n                    aria-describedby=\"edit-vsan-setting-description\"\n                    [disabled]=\"!isEditAllowed()\"\n                    (click)=\"edit()\">\n               {{\"vsan.generalConfig.button.edit\" | localized}}\n            </button>\n         </span>\n         <clr-tooltip-content *ngIf=\"!isEditAllowed()\"\n                              id=\"edit-vsan-setting-description\"\n                              clrPosition=\"top-right\"\n                              clrSize=\"md\">\n            {{getDisabledEditReason()}}\n         </clr-tooltip-content>\n      </clr-tooltip>\n   </div>\n</vsan-status-card>","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanServiceStatus} from \"@generated/vsan-service-status\";\nimport {PerfStatsObjectInfo} from \"@generated/perf-stats-object-info\";\nimport {ServiceUtils} from \"./service.utils\";\nimport {Privileges} from \"@generated/privileges\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {VsanConfigService} from \"@generated/vsan-config-service\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {NavigationService} from \"@navigation/navigation.service\";\nimport {Icon} from \"@util/icon\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {PersistedProperty} from \"@service/browser-storage.service\";\nimport {VsanRoutes} from \"../../vsan-routes\";\nimport {VsanDialogProperties, VsanDialogUtil} from \"@util/vsan-dialog-util\";\n\n@Component({\n   selector: \"vsan-performance-service\",\n   templateUrl: \"performance-service.html\",\n})\nexport class PerformanceServiceComponent implements OnInit {\n\n   ServiceUtils: typeof ServiceUtils = ServiceUtils;\n   Icon: typeof Icon = Icon;\n\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Input()\n   clusterName: string;\n\n   @Input()\n   vcCapabilityData: VsanCapabilityData;\n\n   @PersistedProperty(\"vsan-perf-service-card-expanded-state\")\n   isExpanded: boolean;\n\n   @Input()\n   clusterPermissions: Map<string, boolean>;\n\n   @Input()\n   vcPermissions: Map<string, boolean>;\n\n   @Input()\n   status: VsanServiceStatus;\n\n   @Input()\n   config: PerfStatsObjectInfo;\n\n   editClusterPermission: boolean;\n   readPoliciesPermission: boolean;\n\n   errorMessage: string;\n\n   constructor(private configService: VsanConfigService,\n         private taskService: TaskMonitorService,\n         private navigationService: NavigationService) {\n   }\n\n   ngOnInit(): void {\n      this.editClusterPermission = this.clusterPermissions.get(Privileges.EDIT_CLUSTER());\n      this.readPoliciesPermission = this.vcPermissions.get(Privileges.READ_POLICIES());\n      // Expand the card by default if the service is enabled\n      if (this.status === VsanServiceStatus.ENABLED && VsanUiUtils.isUnset(this.isExpanded)) {\n         this.isExpanded = true;\n      }\n   }\n\n   @RefreshHandler\n   clearErrors(): void {\n      this.errorMessage = null;\n   }\n\n   get editTooltip(): string {\n      if (!this.config) {\n         // The config data is still loading\n         return \"\";\n      }\n      if (!this.editClusterPermission || !this.readPoliciesPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      }\n      return \"\";\n   }\n\n   edit(): void {\n      const size: VsanDialogProperties = this.config.serviceEnabled\n            ? VsanDialogUtil.PERF_SVC_EDIT_ACTION_DIALOG\n            : VsanDialogUtil.PERF_SVC_ENABLE_ACTION_DIALOG;\n      new ModalBuilder(VsanRoutes.PERFORMANCE_CONFIG)\n            .setSize(size.width, size.height)\n            .open({\n               clusterRef: this.clusterRef,\n               clusterName: this.clusterName,\n            })\n            .then(this.awaitThenInvoke);\n   }\n\n   onPolicyClicked(storagePolicyId: string): void {\n      this.navigationService.navigateToVmStoragePoliciesView(storagePolicyId);\n   }\n\n   private awaitThenInvoke = (taskRef: ManagedObject) => {\n      this.taskService.getAwaitResult(taskRef)\n            .then(() => VsanUiUtils.globalRefresh())\n            .catch(e => this.errorMessage = e);\n   };\n}\n","<!-- Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-status-card [label]=\"'vsan.services.enforcereservation.title' | localized\"\n                  [allowDragging]=\"true\"\n                  [(isExpanded)]=\"isExpanded\">\n   <!-- Await the configuration as well as the upgradeData -->\n   <span id=\"loading-capacity-reservation\" *ngIf=\"loading\" class=\"spinner spinner-md central-spinner\"></span>\n   <span id=\"no-supported-capacity-reservation\"\n         *ngIf=\"!isSlackSpaceCapacitySupported && !isCapacityCustomizableThresholdsSupportedOnVc\"\n         class=\"bold-no-selection\" >\n             {{\"vsan.services.not.supported\" | localized}}\n   </span>\n   <capacity-reservation-configuration *ngIf=\"!loading\"\n                                       [capacityManagementData]=\"capacityManagementData\"\n                                       [isCapacityCustomizableThresholdsSupportedOnVc]=\"isCapacityCustomizableThresholdsSupportedOnVc\"\n                                       [isSlackSpaceCapacitySupported]=\"isSlackSpaceCapacitySupported\">\n   </capacity-reservation-configuration>\n   <div class=\"card-footer\" *ngIf=\"isSlackSpaceCapacitySupported || isCapacityCustomizableThresholdsSupportedOnVc\">\n      <clr-tooltip>\n            <span clrTooltipTrigger [vsan-ignore-focus]=\"capacityManagementStatus.isAvailable\">\n               <button id=\"edit-reservation-config\"\n                       class=\"btn btn-sm btn-link\"\n                       aria-describedby=\"edit-capacity-reserve-description\"\n                       [disabled]=\"!capacityManagementStatus.isAvailable\"\n                       (click)=\"edit()\">\n                  {{\"vsan.generalConfig.button.edit\" | localized}}\n               </button>\n            </span>\n         <clr-tooltip-content\n               *ngIf=\"capacityManagementStatus.description\"\n               id=\"edit-capacity-reserve-description\"\n               clrPosition=\"top-right\"\n               clrSize=\"lg\">\n            {{capacityManagementStatus.description}}\n         </clr-tooltip-content>\n      </clr-tooltip>\n   </div>\n   <vsan-validation *ngIf=\"errorMessages.length\" [(alerts)]=\"errorMessages\"></vsan-validation>\n</vsan-status-card>\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * Parse version string to a comparable object\n * '7.0.1.1000-39027875' => 'major.minor.revision.patchLevel-build'\n */\nexport class Version {\n   static readonly OVF_VERSION_PATTERN: RegExp = /.+(\\d+\\.\\d+\\.\\d+\\.\\d+-\\d+)_.+\\.ovf/;\n\n   major: number;\n   minor: number;\n   revision: number;\n   patchLevel: number;\n   build: number;\n\n   constructor(version: string) {\n      if (VsanUiUtils.isEmpty(version)) {\n         return;\n      }\n      let parts: string[] = version.split(\"-\");\n      if (parts.length > 1) {\n         this.build = parseInt(parts[1], 0);\n      }\n      parts = parts[0].split(\".\");\n      this.major = parseInt(parts[0], 0);\n      if (parts.length > 1) {\n         this.minor = parseInt(parts[1], 0);\n         if (parts.length > 2) {\n            this.revision = parseInt(parts[2], 0);\n         }\n         if (parts.length > 3) {\n            this.patchLevel = parseInt(parts[3], 0);\n         }\n      }\n   }\n\n   static isLarger(v1: Version, v2: Version): boolean {\n      return !!v1 && v1.compare(v2) > 0;\n   }\n\n   static isSame(v1: Version, v2: Version): boolean {\n      return (!v1 && !v2) || (!!v1 && v1.compare(v2) === 0);\n   }\n\n   /**\n    * Check if the v1 version is newer major version than the v2 version.\n    * We don't compare the build number here because for major version it doesn't have build info.\n    */\n   static isNewMajorRelease(v1: Version, v2: Version): boolean {\n      return v1.major > v2.major || v1.minor > v2.minor || v1.revision > v2.revision;\n   }\n\n   /**\n    * Method to get the ovf file version from the file name or path\n    */\n   static fromFilePathOrName(ovfFilePathOrName: string): Version {\n      return new Version(this.OVF_VERSION_PATTERN.exec(ovfFilePathOrName)[1]);\n   }\n\n   compare(that: Version): number {\n      const orderedFields: string[] = [\"major\", \"minor\", \"revision\", \"patchLevel\", \"build\"];\n      for (let i: number = 0; i <= orderedFields.length; i++) {\n         const fieldName: string = orderedFields[i];\n         if (this[fieldName] !== that[fieldName]) {\n            return this[fieldName] > that[fieldName] ? 1 : -1;\n         }\n      }\n      return 0;\n   }\n\n   toString(): string {\n      let versionStr: string = `${this.major}.${this.minor}.${this.revision}`;\n      if (this.patchLevel) {\n         versionStr += `.${this.patchLevel}`;\n      }\n      if (this.build) {\n         versionStr += `-${this.build}`;\n      }\n      return versionStr;\n   }\n}\n","<vsan-status-card [label]=\"'vsan.service.supportInsight.name' | localized\"\n                  [(isExpanded)]=\"isExpanded\"\n                  [allowDragging]=\"true\"\n                  [status]=\"Status.Disabled\">\n   <ng-content select=\"vsan-validation\"></ng-content>\n   <div id=\"support-insight-disabled\">\n      <div>{{\"vsan.service.ceip.disabled.description\" | localized}}</div>\n      <a [external-link]=\"'vsan.service.ceip.link' | localized\" [articleId]=\"KnowledgeBaseId.SUPPORT_INSIGHT\"></a>\n   </div>\n   <div class=\"card-footer\">\n      <clr-tooltip>\n         <span clrTooltipTrigger [vsan-ignore-focus]=\"editClusterPermission\">\n            <button id=\"edit-support-insight-config\"\n                    class=\"btn btn-sm btn-link\"\n                    aria-describedby=\"enable-support-insight-description\"\n                    (click)=\"navigateToCeip()\"\n                    [disabled]=\"!editClusterPermission\">\n               {{\"vsan.service.ceip.disabled.configure\" | localized}}\n            </button>\n         </span>\n         <clr-tooltip-content *ngIf=\"!editClusterPermission\"\n                              id=\"enable-support-insight-description\"\n                              clrPosition=\"top-right\"\n                              clrSize=\"md\">\n            {{\"vsan.common.nopermissions\" | localized}}\n         </clr-tooltip-content>\n      </clr-tooltip>\n   </div>\n</vsan-status-card>","\nexport interface EncryptionRekeySpec {\n\n   reEncryptData: boolean;\n   allowReducedRedundancy: boolean;\n} //class EncryptionRekeySpec\n\nexport module EncryptionRekeySpec{\nexport class Factory {\n\n   static create = (reEncryptData: boolean, allowReducedRedundancy: boolean): EncryptionRekeySpec => {\n      return { reEncryptData: reEncryptData, allowReducedRedundancy: allowReducedRedundancy, };\n   }\n\n\n} //class Factory\n\n} //module EncryptionRekeySpec\n","import {VsanIscsiAuthSpec} from '@generated/vsan-iscsi-auth-spec';\nimport {StoragePolicyData} from '@generated/storage-policy-data';\n\nexport interface VsanIscsiConfigEditSpec {\n\n   enableIscsiTargetService: boolean;\n   network: string;\n   port: number;\n   authSpec: VsanIscsiAuthSpec;\n   policy: StoragePolicyData;\n} //class VsanIscsiConfigEditSpec\n\nexport module VsanIscsiConfigEditSpec{\nexport class Factory {\n\n   static create = (enableIscsiTargetService: boolean, network: string, port: number, authSpec: VsanIscsiAuthSpec, policy: StoragePolicyData): VsanIscsiConfigEditSpec => {\n      return { enableIscsiTargetService: enableIscsiTargetService, network: network, port: port, authSpec: authSpec, policy: policy, };\n   }\n\n\n} //class Factory\n\n} //module VsanIscsiConfigEditSpec\n","<!-- Copyright 2018-2021 VMware, Inc. All rights reserved. VMware Confidential -->\n<vsan-edit-prompt\n      [title]=\"'vsan.services.advancedOptions.title' | localized\"\n      [subtitle]=\"clusterName\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"blockApplyButton\"\n      [(alertMessages)]=\"alertMessages\"\n      (onConfirm)=\"confirm()\">\n   <form clrForm clrLayout=\"horizontal\" [formGroup]=\"advancedSettings\">\n      <clr-input-container>\n         <label id=\"object-repair-timer-label\" class=\"clr-col-12 clr-col-md-3\">\n            {{\"vsan.services.advancedOptions.objectRepairTimer.label\" | localized}}\n         </label>\n         <input clrInput\n                id=\"object-repair-timer\"\n                class=\"clr-col-12 clr-col-md-9\"\n                name=\"objectRepairTimer\"\n                type=\"number\"\n                [formControlName]=\"objectRepairTimer\"/>\n         <clr-control-helper>\n            {{\"vsan.services.advancedOptions.objectRepairTimer.signpost\" | localized}}\n         </clr-control-helper>\n         <clr-control-error>\n            {{\"vsan.services.advancedOptions.objectRepairTimer.wrongInput\" | localized}}\n         </clr-control-error>\n      </clr-input-container>\n\n      <clr-toggle-container>\n         <clr-toggle-wrapper>\n            <input type=\"checkbox\"\n                   clrToggle\n                   name=\"siteReadLocality\"\n                   [formControlName]=\"isSiteReadLocalityEnabled\"\n                  [vsan-disable-form-control]=\"!isStretchedCluster\" />\n            <label id=\"site-read-locality-label\">\n               {{\"vsan.services.advancedOptions.siteReadLocality.label\" | localized}}\n            </label>\n         </clr-toggle-wrapper>\n         <clr-control-helper>\n            {{\"vsan.services.advancedOptions.siteReadLocality.signpost\" | localized}}\n         </clr-control-helper>\n      </clr-toggle-container>\n\n      <clr-toggle-container>\n         <clr-toggle-wrapper>\n            <input type=\"checkbox\"\n                   clrToggle\n                   name=\"thinSwap\"\n                   [formControlName]=\"isCustomizedSwapObjectEnabled\"/>\n            <label id=\"thin-swap-label\">\n               {{\"vsan.services.advancedOptions.thinSwap.label\" | localized}}\n            </label>\n         </clr-toggle-wrapper>\n         <clr-control-helper>\n            {{\"vsan.services.advancedOptions.thinSwap.signpost\" | localized}}\n         </clr-control-helper>\n      </clr-toggle-container>\n\n      <!-- Show toggle setting for large cluster support (more than 32 hosts) if it is NOT supported natively -->\n      <clr-toggle-container *ngIf=\"!clusterCapabilityData.isNativeLargeClusterSupported\">\n         <clr-toggle-wrapper>\n            <input type=\"checkbox\"\n                   clrToggle\n                   name=\"largeClusterSupport\"\n                   [formControlName]=\"largeClusterSupportEnabled\"\n                   [vsan-disable-form-control]=\"isRdmaEnabled\"/>\n            <label id=\"large-cluster-support-label\">\n               {{\"vsan.services.advancedOptions.largeClusterSupport.label\" | localized}}\n            </label>\n         </clr-toggle-wrapper>\n         <clr-control-helper>\n            {{largeClusterSupportMessage}}\n         </clr-control-helper>\n      </clr-toggle-container>\n\n      <clr-toggle-container *ngIf=\"clusterCapabilityData?.isGuestTrimUnmapSupported\">\n         <clr-toggle-wrapper>\n            <input type=\"checkbox\"\n                   clrToggle\n                   name=\"guestTrimUnmap\"\n                   [formControlName]=\"isGuestTrimUnmapEnabled\"/>\n            <label id=\"guest-trim-unmap-label\">\n               {{\"vsan.services.advancedOptions.guestTrimUnmap.label\" | localized}}\n            </label>\n         </clr-toggle-wrapper>\n         <clr-control-helper>\n            {{\"vsan.services.advancedOptions.guestTrimUnmap.signpost\" | localized}}\n         </clr-control-helper>\n      </clr-toggle-container>\n\n      <ng-container *ngIf=\"vcCapabilityData?.isAutomaticRebalanceSupported\">\n         <clr-toggle-container>\n            <clr-toggle-wrapper>\n               <input type=\"checkbox\"\n                      clrToggle\n                      name=\"automaticRebalance\"\n                      [formControlName]=\"isAutomaticRebalanceEnabled\"/>\n               <label id=\"automatic-rebalance-label\">\n                  {{\"vsan.services.advancedOptions.automaticRebalance.label\" | localized}}\n               </label>\n            </clr-toggle-wrapper>\n            <clr-control-helper>\n               {{\"vsan.services.advancedOptions.automaticRebalance.signpost\" | localized}}\n            </clr-control-helper>\n         </clr-toggle-container>\n\n         <clr-input-container>\n            <label id=\"rebalancing-threshold-label\" class=\"clr-col-12 clr-col-md-3\">\n               {{\"vsan.services.advancedOptions.rebalancingThreshold.label\" | localized}}\n            </label>\n            <input clrInput\n                   id=\"rebalancing-threshold\"\n                   class=\"clr-col-12 clr-col-md-9\"\n                   name=\"rebalancingThreshold\"\n                   type=\"number\"\n                   [formControlName]=\"rebalancingThreshold\"\n                   [vsan-disable-form-control]=\"!rebalancingThresholdEnabled\"/>\n            <clr-control-helper>\n               {{\"vsan.services.advancedOptions.rebalancingThreshold.signpost\" | localized}}\n            </clr-control-helper>\n            <clr-control-error>\n               {{\"vsan.services.advancedOptions.rebalancingThreshold.error\" | localized}}\n            </clr-control-error>\n         </clr-input-container>\n      </ng-container>\n   </form>\n</vsan-edit-prompt>\n\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {PersistedProperty} from \"@service/browser-storage.service\";\nimport {Status} from \"@component/card/status\";\nimport {HistoricalHealthConfig} from \"@generated/historical-health-config\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {Icon} from \"@util/icon\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {HistoricalHealthSettingsDialogComponent} from \"../health/config/historical-health-settings-dialog.component\";\nimport {ServiceUtils} from \"./service.utils\";\n\n@Component({\n   selector: \"vsan-historical-health-settings\",\n   styleUrls: [\"historical-health-settings.scss\"],\n   templateUrl: \"historical-health-settings.html\",\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HistoricalHealthSettingsComponent implements OnInit {\n   Icon: typeof Icon = Icon;\n   VsanUiUtils: typeof VsanUiUtils = VsanUiUtils;\n\n   @Input()\n   config: HistoricalHealthConfig;\n\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Input()\n   clusterName: string;\n\n   @Input()\n   editClusterPermission: boolean;\n\n   @Output()\n   editTaskStarted: EventEmitter<ManagedObject> = new EventEmitter<ManagedObject>();\n\n   @PersistedProperty(\"vsan-historical-health-card-status\")\n   isExpanded: boolean;\n\n   ngOnInit(): void {\n      // Expand the card by default if the service is enabled\n      if (this.config.isEnabled && VsanUiUtils.isUnset(this.isExpanded)) {\n         this.isExpanded = true;\n      }\n   }\n\n   getServiceStatus(): Status {\n      return this.config.isEnabled ? Status.Enabled : Status.Disabled;\n   }\n\n   get unavailableMessage(): string {\n      return !this.editClusterPermission ? VsanUiUtils.getString(\"vsan.common.nopermissions\") : \"\";\n   }\n\n   editHistoricalHealthSettings(): void {\n      HistoricalHealthSettingsDialogComponent.openDialog(this.clusterRef, this.clusterName, this.config)\n         .then((taskRef: ManagedObject) => this.editTaskStarted.emit(taskRef));\n   }\n}","<!--Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"card\">\n   <clr-accordion>\n      <clr-accordion-panel [clrAccordionPanelOpen]=\"isExpanded\"\n                           (clrAccordionPanelOpenChange)=\"isExpanded = $event\">\n         <clr-accordion-title>\n            <div class=\"card-header\" *ngIf=\"allowDragging\" cdkDragHandle>\n               <ng-container *ngTemplateOutlet=\"header\"></ng-container>\n            </div>\n            <div class=\"card-header\" *ngIf=\"!allowDragging\">\n               <ng-container *ngTemplateOutlet=\"header\"></ng-container>\n            </div>\n         </clr-accordion-title>\n         <!-- This is added to prevent dragging the card by its body -->\n         <clr-accordion-content (mousedown)=\"$event.stopPropagation()\">\n            <ng-content></ng-content>\n         </clr-accordion-content>\n      </clr-accordion-panel>\n   </clr-accordion>\n   <ng-content select=\".card-footer\"></ng-content>\n</div>\n\n<ng-template #header>\n   <h6 class=\"card-title\" vsan-show-title>{{label}}</h6>\n   <!-- Do not use [ngClass] here as it doesn't seem to work when this content is projected by vsan-card -->\n   <span *ngIf= \"status\" class=\"{{statusLabelClass}}\">{{statusLabel}}</span>\n</ng-template>","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {VsanFileServiceDomain} from \"@generated/vsan-file-service-domain\";\nimport {VsanFileServiceLastDomainFailureReport} from \"@generated/vsan-file-service-last-domain-failure-report\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {VsanServiceData} from \"@generated/vsan-service-data\";\nimport {VsanServiceStatus} from \"@generated/vsan-service-status\";\nimport {VsanVdfsConfig} from \"@generated/vsan-vdfs-config\";\nimport {VsanFileServicePrecheckResult} from \"@generated/vsan-file-service-precheck-result\";\nimport {DisableFileServicesModalContext} from \"@navigation/context/disable-file-services-modal-context\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {FileServicesConfigureWizardModalContext} from \"@navigation/context/file-services-configure-wizard-modal-context.data\";\nimport {Privileges} from \"@generated/privileges\";\nimport {EnableFileServiceModalContext} from \"../file-services/enable-service/enable-file-service-modal-context.data\";\nimport {ServiceUtils} from \"./service.utils\";\nimport {VsanConfigService} from \"@generated/vsan-config-service\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {PersistedProperty} from \"@service/browser-storage.service\";\nimport {VsanFileServiceConfigService} from \"@generated/vsan-file-service-config-service\";\nimport {Version} from \"@util/version\";\nimport {FileServiceUtil} from \"../file-services/file-service-util\";\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {UpgradeFileServiceModalContext} from \"../file-services/upgrade/upgrade-file-service-modal-context\";\nimport {AlertType} from \"@component/validation/alert-type\";\nimport {VsanFileServiceOvfProps} from \"@generated/vsan-file-service-ovf-props\";\nimport {Logger} from \"@util/logger\";\nimport {IpSettingData} from \"@component/configurations/file-service-configuration.component\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\n\n@Component({\n   selector: \"vsan-file-service\",\n   templateUrl: \"file-service.html\",\n   styleUrls: [\"file-service.scss\"],\n})\nexport class FileServiceComponent implements OnInit {\n   ServiceUtils: typeof ServiceUtils = ServiceUtils;\n   AlertType: typeof AlertType = AlertType;\n\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Input()\n   clusterName: string;\n\n   @Input()\n   clusterPermissions: Map<string, boolean>;\n\n   @Input()\n   vcPermissions: Map<string, boolean>;\n\n   @Input()\n   vcCapabilityData: VsanCapabilityData;\n\n   @Input()\n   latestDiskFmtVersion: string;\n\n   @Input()\n   minDiskFmtVersion: string;\n\n   @Input()\n   availableDomains: DomainOrHostData[];\n\n   @Input()\n   isStretchedCluster: boolean;\n\n   @Input()\n   isPerfServiceEnabled: boolean;\n\n   @PersistedProperty(\"vsan-file-service-card-expanded-status\")\n   isExpanded: boolean;\n\n   status: VsanServiceStatus;\n   vdfsConfig: VsanVdfsConfig;\n   ipSettings: IpSettingData[] = [];\n   affinitySiteSupported: boolean;\n   adConfigSupported: boolean;\n   largeScaleClusterSupported: boolean;\n\n   @ErrorMessage()\n   errorMessage: string;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   isFsDomainMissing: boolean;\n   upgradeFsvmTask: ManagedObject;\n   // Keep this one public as it is passed down to the performance service validation banner.\n   editClusterPermission: boolean;\n   private vcServerPermission: boolean;\n   // hasLatestOvf is used to show/hide the ovf page in wizard\n   private hasLatestOvf: boolean;\n   private latestOvfVersion: Version;\n   private fsvmVersion: Version;\n   private vcVersion: Version;\n   private hostVersion: Version;\n\n   private lastFailedDomainConfig: VsanFileServiceDomain;\n   private advancedPreflightCheckSupported: boolean;\n\n   preflightCheckErrors: string[];\n\n   constructor(private configService: VsanConfigService,\n         private taskService: TaskMonitorService,\n         private fileService: VsanFileServiceConfigService,\n         private navigationService: NavigationService) {\n   }\n\n   ngOnInit(): void {\n      this.editClusterPermission = this.clusterPermissions.get(Privileges.EDIT_CLUSTER());\n      this.vcServerPermission = this.vcPermissions.get(Privileges.GLOBAL_VCSERVER());\n   }\n\n   @Loader({srMessage: \"vsan.services.fileservices.title\", srMessageType: SrMessageType.DATA})\n   async onFileServiceStatusLoaded(fileServiceData: VsanServiceData): Promise<void> {\n      if (this.status && fileServiceData.status !== this.status) {\n         // refresh the TOC view to show/hide the File Shares link in the left navigation\n         this.status = null;\n         VsanUiUtils.globalRefresh();\n         return;\n      }\n      this.status = fileServiceData.status;\n      // Expand the card by default if the service is enabled\n      if (this.status === VsanServiceStatus.ENABLED && VsanUiUtils.isUnset(this.isExpanded)) {\n         this.isExpanded = true;\n      }\n      this.vdfsConfig = fileServiceData.details as VsanVdfsConfig;\n      // this.vdfsConfig === null means the hosts in this cluster are low version, stop here to avoid UI errors\n      if (!this.vdfsConfig) {\n         return;\n      }\n      this.isFsDomainMissing = !this.vdfsConfig.config?.domainConfig;\n      this.fsvmVersion = this.vdfsConfig.precheckResult\n            ? new Version(this.vdfsConfig.precheckResult.fsvmVersion)\n            : null;\n      this.vcVersion = new Version(this.vdfsConfig.precheckResult.vcVersion);\n      this.hostVersion = new Version(this.vdfsConfig.precheckResult.hostVersion);\n      this.adConfigSupported = this.vdfsConfig.precheckResult.activeDirectorySupported;\n      this.affinitySiteSupported = this.vdfsConfig.precheckResult.affinitySiteSupported && this.isStretchedCluster;\n      this.largeScaleClusterSupported = this.vdfsConfig.precheckResult.largeScaleClusterSupported;\n      this.advancedPreflightCheckSupported = this.vdfsConfig.precheckResult.advancedPreflightCheckSupported;\n      this.ipSettings = FileServiceUtil.getIpSettings(this.vdfsConfig, this.availableDomains);\n      await Promise.all([\n            this.loadLastDomainFailureReport(),\n            this.updateOvfData(),\n      ]);\n   }\n\n   /**\n    * Check the capability and load the last failed domain config if API supports\n    */\n   private async loadLastDomainFailureReport(): Promise<void> {\n      if (!this.advancedPreflightCheckSupported) {\n         return;\n      }\n      this.preflightCheckErrors = [];\n      const failureReport: VsanFileServiceLastDomainFailureReport =\n            await this.fileService.getLastDomainFailureReport(this.clusterRef);\n      this.lastFailedDomainConfig = failureReport.domainConfig;\n      if (this.lastFailedDomainConfig) {\n         // In edit FS domain workflow, the adConfig is not saved if there is no AD change, so we have to set it back\n         this.lastFailedDomainConfig.adConfig = this.vdfsConfig.config.domainConfig?.adConfig;\n         // only set the message when there is a domain config failure\n         this.preflightCheckErrors = [\n               VsanUiUtils.getString(\"vsan.services.fileservices.wizard.preflightcheck.error\"),\n               failureReport.error,\n         ];\n      }\n   }\n\n   /**\n    * Load the OVF properties, and don't throw exception if any error occurs\n    * because this only impact the 'Check Upgrade' button\n    */\n   private async getOvfProps(): Promise<VsanFileServiceOvfProps> {\n      try {\n         return await this.fileService.getPublicOvfProps(this.clusterRef);\n      } catch (e) {\n         Logger.error(e);\n      }\n      return null;\n   }\n\n   /**\n    * Parse the latest Ovf download URL to get the OVF version, and compare\n    * with the current OVF version to determine if the OVF can be upgraded.\n    * Also set this.hasLatestOvf and use it to show/hide the ovf page in FS wizard.\n    */\n   private async updateOvfData(): Promise<void> {\n      const ovfProps: VsanFileServiceOvfProps = await this.getOvfProps();\n      if (ovfProps && !VsanUiUtils.isEmpty(ovfProps.url)) {\n         this.latestOvfVersion = Version.fromFilePathOrName(ovfProps.url);\n         const existingOvfVersion: Version = new Version(this.vdfsConfig.precheckResult.ovfInstalled);\n         this.hasLatestOvf = Version.isSame(this.latestOvfVersion, existingOvfVersion);\n      }\n   }\n\n   get enableBtnDisabled(): boolean {\n      return !this.editClusterPermission || !this.vcServerPermission || !!this.vdfsPrecheckIssue;\n   }\n\n   get showPerfEnableWarning(): boolean {\n      return !this.isPerfServiceEnabled &&\n            this.vdfsConfig && this.vdfsConfig.config && this.vdfsConfig.config.isFileAnalyticsEnabled;\n   }\n\n   get enableDisabledTitle(): string {\n      if (!this.vcServerPermission || !this.editClusterPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      }\n      return this.vdfsPrecheckIssue;\n   }\n\n   get commonDisabledTitle(): string {\n      if (!this.editClusterPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      }\n      return \"\";\n   }\n\n   get upgradeDisabledReason(): string {\n      // Don't allow user to upgrade the OVF if the FS domain contains old host\n      const hasOldHost: boolean = Version.isLarger(this.vcVersion, this.hostVersion);\n      // Don't allow user to upgrade the OVF if the disk format version is old to avoid some unexpected errors,\n      // this is a limitation from the backend API\n      const oldDiskFormatVersion: boolean =\n            parseInt(this.latestDiskFmtVersion, 0) > parseInt(this.minDiskFmtVersion, 0);\n\n      const isLatestOvfVersionInstalled: boolean = this.latestOvfVersion\n            && !Version.isLarger(this.latestOvfVersion, this.fsvmVersion);\n\n      if (!this.vcServerPermission || !this.editClusterPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      } else if (this.isFsDomainMissing && !this.vcCapabilityData.isSeparatingFileServiceWorkflowSupported) {\n         // TODO: [rogerw] remove this else if after this feature is tested\n         return VsanUiUtils.getString(\"vsan.fileservices.upgrade.noDomain.error\");\n      } else if (hasOldHost) {\n         return VsanUiUtils.getString(\"vsan.fileservices.upgrade.oldHost\");\n      } else if (oldDiskFormatVersion) {\n         return VsanUiUtils.getString(\"vsan.fileservices.upgrade.dfc\");\n      } else if (isLatestOvfVersionInstalled) {\n         return VsanUiUtils.getString(\"vsan.fileservices.upgrade.latest.desc\");\n      }\n      return null;\n   }\n\n   get vdfsPrecheckIssue(): string {\n      if (!this.vdfsConfig) {\n         return \"\";\n      }\n      const precheck: VsanFileServicePrecheckResult = this.vdfsConfig.precheckResult;\n      if (!precheck) {\n         return \"\";\n      } else if (precheck.mixedModeIssue) {\n         return precheck.mixedModeIssue;\n      } else if (precheck.networkPartitionIssue) {\n         return precheck.networkPartitionIssue;\n      } else if (precheck.vsanDatastoreIssue) {\n         return precheck.vsanDatastoreIssue;\n      } else if (precheck.dvsConfigIssue) {\n         return precheck.dvsConfigIssue;\n      } else {\n         return \"\";\n      }\n   }\n\n   navigateToShares(): void {\n      this.navigationService.navigateTo(PlatformExtension.FILE_SERVICE_SHARES);\n   }\n\n   enableFileService(): void {\n      const vsanVdfsConfig: VsanVdfsConfig = JSON.parse(JSON.stringify(this.vdfsConfig));\n      const enableDialogContext: EnableFileServiceModalContext = {\n         network: vsanVdfsConfig?.config?.network,\n         precheckResult: vsanVdfsConfig?.precheckResult,\n      } as EnableFileServiceModalContext;\n      new ModalBuilder(\"enableFileService\")\n            .setDimensions(ModalBuilder.DEFAULT_SIZE)\n            .open(enableDialogContext)\n            .then((taskRef: ManagedObject) => {\n               this.awaitThenInvoke(this.refresh, taskRef);\n            });\n   }\n\n   editFileServices(): void {\n      // TODO: [rogerw] remove this after this feature is tested\n      if (ServiceUtils.isDisabled(this.status) && this.vcCapabilityData.isSeparatingFileServiceWorkflowSupported) {\n         return this.enableFileService();\n      }\n\n      // We need a deep clone of the object so if the user cancels the wizard,\n      // no changes are saved in the original object.\n      const vsanVdfsConfig: VsanVdfsConfig = JSON.parse(JSON.stringify(this.vdfsConfig));\n      if (this.lastFailedDomainConfig) {\n         vsanVdfsConfig.config.domainConfig = this.lastFailedDomainConfig;\n      }\n      const context: FileServicesConfigureWizardModalContext = {\n         clusterRef: this.clusterRef,\n         config: vsanVdfsConfig ? vsanVdfsConfig.config : null,\n         isEdit: !ServiceUtils.isDisabled(this.status),\n         capabilityData: this.vcCapabilityData,\n         fileSharesCount: vsanVdfsConfig ? vsanVdfsConfig.numberOfShares : 0,\n         hasLastestOvf: this.hasLatestOvf,\n         ovfVersion: vsanVdfsConfig.precheckResult.ovfInstalled,\n         largeScaleClusterSupported: this.largeScaleClusterSupported,\n         hasAdConfigured: !!this.vdfsConfig?.config?.domainConfig?.adConfig?.domain,\n         lastDomainConfigErrors: this.preflightCheckErrors,\n      };\n\n      new ModalBuilder(\"configureFileServices\")\n            .setDimensions(ModalBuilder.WIZARD_XL)\n            .open(context)\n            .then((taskRefs: ManagedObject[] | ManagedObject) => {\n               // enable fs wizard returns a single task, but edit fs configuration wizard returns a task array\n               if (taskRefs instanceof Array) {\n                  this.awaitThenInvoke(this.refresh, ...taskRefs);\n               } else {\n                  this.awaitThenInvoke(this.refresh, taskRefs);\n               }\n            });\n   }\n\n   disableFileServices(): void {\n      const context: DisableFileServicesModalContext = {\n         clusterName: this.clusterName,\n         clusterRef: this.clusterRef,\n         isEnabled: true,\n         fileShareCount: this.vdfsConfig.numberOfShares,\n      };\n\n      new ModalBuilder(\"disableFileServices\")\n            .setSize(600, 350)\n            .open(context)\n            .then((taskRef: ManagedObject) => this.awaitThenInvoke(this.refresh, taskRef));\n   }\n\n   upgradeFileServices(): void {\n      const context: UpgradeFileServiceModalContext = {\n         domainConfig: this.vdfsConfig.config.domainConfig,\n         precheckResult: this.vdfsConfig.precheckResult,\n      };\n      new ModalBuilder(\"upgradeFileServices\")\n            .setSize(700, 550)\n            .open(context)\n            .then((taskRef: ManagedObject) => {\n               this.upgradeFsvmTask = taskRef;\n               this.awaitThenInvoke(this.refresh, taskRef);\n            });\n   }\n\n   private awaitThenInvoke = (fetchMethod: () => any, ...taskRefs: ManagedObject[]) => {\n      const runningTasks: Promise<any>[] =\n            [...taskRefs].map(taskRef => this.taskService.getAwaitResult(taskRef));\n      Promise.all(runningTasks)\n            .then(() => fetchMethod.call(this))\n            .catch(e => this.errorMessage = e);\n   };\n\n   private refresh = () => {\n      VsanUiUtils.globalRefresh();\n   };\n}\n","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CardModule} from \"@component/card/card.module\";\nimport {ConfigurationsModule} from \"@component/configurations/configurations.module\";\nimport {DragAndDropModule} from \"@component/drag-and-drop/drag-and-drop.module\";\nimport {GeneralSettingsModule} from \"@component/general-settings/general-settings.module\";\nimport {VsanGeneralConfigService} from \"@component/general-settings/vsan-general-config.service\";\nimport {IscsiAuthenticationModule} from \"@component/iscsi-authentication/authentication.module\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\nimport {UpgradeModule} from \"@component/upgrade/upgrade.module\";\nimport {PersistentStorageService} from \"@service/browser-storage.service\";\nimport {SpaceEfficiencyService} from \"@service/space-efficiency-service\";\nimport {EditAdvancedOptionsComponent} from \"../cluster/configure/action/edit-advanced-options.component\";\nimport {EditIscsiTargetComponent} from \"../cluster/configure/action/edit-iscsi-target-config.component\";\nimport {EditNetworkComponent} from \"../cluster/configure/action/edit-network.component\";\nimport {EditVsanConfigComponent} from \"../cluster/configure/action/edit-vsan-config.component\";\nimport {EditVsanManagedDiskClaim} from \"../cluster/configure/action/edit-vsan-managed-disk-claim.component\";\nimport {GenerateEncryptionKeysComponent} from \"../cluster/configure/action/generate-encryption-keys.component\";\nimport {LargeScaleClusterSupportChangePromptComponent} from \"../cluster/configure/action/large-scale-cluster-support-change-prompt.component\";\nimport {VsanCommonModule} from \"../common/vsan-common.module\";\nimport {DiskManagementActionAvailabilityService} from \"../disk-management/views/validation/disk-management-action-availability.service\";\nimport {HealthConfigModule} from \"../health/config/health-config.module\";\nimport {AdvancedOptionsComponent} from \"./advanced-options.component\";\nimport {CapacityManagementSettingsComponent} from \"./capacity-management-settings.component\";\nimport {ClusterPowerStateChangeProgressComponent} from \"./cluster-power-state-change-progress.component\";\nimport {DataServicesComponent} from \"./data-services.component\";\nimport {FileServiceComponent} from \"./file-service.component\";\nimport {HistoricalHealthSettingsComponent} from \"./historical-health-settings.component\";\nimport {IscsiTargetSettingsComponent} from \"./iscsi-target-settings.component\";\nimport {NetworkOptionsComponent} from \"./network-options.component\";\nimport {PerformanceServiceComponent} from \"./performance-service.component\";\nimport {ServicesComponent} from \"./services.component\";\nimport {SupportInsightComponent} from \"./support-insight.component\";\nimport {VsanMaxSettingsComponent} from \"./vsan-max-settings.component\";\n\nconst servicesRoutes: Routes = [\n   {\n      path: \"\",\n      component: ServicesComponent,\n   },\n   {\n      path: \"editGeneralConfig\",\n      component: EditVsanConfigComponent,\n   },\n   {\n      path: \"editIscsiTargetConfig\",\n      component: EditIscsiTargetComponent,\n   },\n   {\n      path: \"editAdvancedOptions\",\n      component: EditAdvancedOptionsComponent,\n   },\n   {\n      path: \"editAdvancedOptionsConfirmation\",\n      component: LargeScaleClusterSupportChangePromptComponent,\n   },\n   {\n      path: \"generateEncryptionKeys\",\n      component: GenerateEncryptionKeysComponent,\n   },\n   {\n      path: \"editNetwork\",\n      component: EditNetworkComponent,\n   },\n   {\n      path: \"editVsanManagedDiskClaim\",\n      component: EditVsanManagedDiskClaim,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      ClarityModule,\n      DragAndDropModule,\n      CardModule,\n      VsanCommonModule,\n      UnavailableViewModule,\n      GeneralSettingsModule,\n      IscsiAuthenticationModule,\n      UpgradeModule,\n      HealthConfigModule,\n      RouterModule.forChild(servicesRoutes),\n      ConfigurationsModule,\n   ],\n   declarations: [\n      ServicesComponent,\n      VsanMaxSettingsComponent,\n      DataServicesComponent,\n      AdvancedOptionsComponent,\n      CapacityManagementSettingsComponent,\n      FileServiceComponent,\n      IscsiTargetSettingsComponent,\n      PerformanceServiceComponent,\n      SupportInsightComponent,\n      NetworkOptionsComponent,\n      HistoricalHealthSettingsComponent,\n      EditVsanConfigComponent,\n      EditIscsiTargetComponent,\n      EditAdvancedOptionsComponent,\n      LargeScaleClusterSupportChangePromptComponent,\n      GenerateEncryptionKeysComponent,\n      EditNetworkComponent,\n      EditVsanManagedDiskClaim,\n      ClusterPowerStateChangeProgressComponent,\n   ],\n   providers: [\n      VsanGeneralConfigService,\n      SpaceEfficiencyService,\n      PersistentStorageService,\n      DiskManagementActionAvailabilityService,\n   ],\n})\nexport class ServicesModule {\n}\n"]}