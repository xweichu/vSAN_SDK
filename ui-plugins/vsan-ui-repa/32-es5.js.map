{"version":3,"sources":["webpack:///src/app/vsan/common/component/cell/health-mor-cell.html","webpack:///src/app/vsan/common/component/cell/health-mor-cell.component.ts"],"names":["HealthMorCellComponent","navigationService","COMMA_SEPARATOR","enableActionLink","navigateTo","objectId","navigateToAndCloseModal","LAST_VISITED_PAGE","_data","val","keys","data","size","getObjectTypeIcon","next","value","uid","missingNameLabel","moRef","fromUid","typeName","getObjectTypeName","getString","index"],"mappings":"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","file":"32-es5.js","sourcesContent":["<!--Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-icon *ngIf=\"shape\"\n          [attr.shape]=\"shape\"\n          size=\"18\">\n</clr-icon>\n<ng-container *ngFor=\"let key of keys; let index = index\">\n   <span *ngIf=\"!data.get(key)\" vsan-show-title>\n      {{getMissingEntityLabel(key)}}\n   </span>\n   <ng-container *ngIf=\"data.get(key)\">\n      <span *ngIf=\"!enableActionLink\">{{data.get(key)}}</span>\n      <a *ngIf=\"enableActionLink\"\n         (click)=\"navigateTo(key)\"\n         href=\"javascript://\"\n         vsan-show-title\n         [copyToClipboard]=\"true\">\n         {{data.get(key)}}\n         <span *ngIf=\"showComma(index)\" [outerHTML]=\"COMMA_SEPARATOR\"></span>\n      </a>\n   </ng-container>\n</ng-container>","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {ManagedObject, ManagedObjectUtils} from \"@service/managed-object\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {Icon} from \"@util/icon\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"health-mor-cell.html\",\n   styleUrls: [\"health-mor-cell.scss\"],\n   selector: \"vsan-health-mor-cell\",\n})\nexport class HealthMorCellComponent {\n   readonly COMMA_SEPARATOR: string = \",&nbsp;\";\n\n   // _data is a map containing (uid -> name) entries\n   private _data: Map<string, string>;\n\n   keys: IterableIterator<string>;\n\n   @Input()\n   missingNameLabel: string;\n\n   @Input()\n   set data(val: Map<string, string>) {\n      this._data = val;\n      this.keys = val.keys();\n   }\n\n   get data(): Map<string, string> {\n      return this._data;\n   }\n\n   @Input()\n   enableActionLink: boolean = true;\n\n   get shape(): string {\n      return this.data?.size === 1 ?\n            ManagedObjectUtils.getObjectTypeIcon(this.data.keys().next().value) :\n            \"\";\n   }\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   getMissingEntityLabel(uid: string): string {\n      if (!!this.missingNameLabel) {\n         return this.missingNameLabel;\n      }\n\n      const moRef: ManagedObject = ManagedObject.fromUid(uid);\n      const typeName: string = ManagedObjectUtils.getObjectTypeName(moRef);\n      return VsanUiUtils.getString(\"vsan.common.component.morcell.entity.missing.name\", typeName, moRef.value);\n   }\n\n   navigateTo = (objectId: string): void => {\n      // TODO akolov: when the client SDK introduce API for checking if the context is modal,\n      // use it to prevent the error log: API should be called within the context of a modal dialog\n      this.navigationService.navigateToAndCloseModal(PlatformExtension.LAST_VISITED_PAGE, objectId);\n   };\n\n   showComma(index: number): boolean {\n      return index < this.data.size - 1;\n   }\n}"]}