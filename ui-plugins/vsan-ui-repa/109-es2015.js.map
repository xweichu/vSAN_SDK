{"version":3,"sources":["./src/app/vsan/common/directive/clr-button-group/clr-button-base.directive.ts","./src/app/vsan/file-services/configure-wizard/file-services-network-page.component.ts","./src/app/vsan/file-services/file-service-util.ts","./src/app/vsan/file-services/configure-wizard/file-services-file-analytics-page.component.ts","./src/app/vsan/file-services/configure-wizard/file-services-ovf-page.component.ts","./src/app/vsan/common/service/navigation/model/ask-vmware-id.ts","./src/app/vsan/file-services/configure-wizard/file-services-network-page.html","./src/app/vsan/file-services/configure-wizard/file-services-review-page.html","./src/app/vsan/file-services/configure-wizard/file-services-introduction-page.component.ts","./src/app/vsan/file-services/configure-wizard/file-services-ovf-page.html","./src/app/vsan/file-services/configure-wizard/file-services-domain-page.html","./src/app/vsan/file-services/configure-wizard/file-services-configure-wizard.component.ts.FileServicesConfigureWizardComponent.html","./src/app/vsan/file-services/configure-wizard/domain-validation.service.ts","./src/app/vsan/file-services/configure-wizard/file-services-ip-pool-page.component.ts","./src/app/vsan/file-services/configure-wizard/file-services-ip-pool-page.html","./src/app/vsan/file-services/configure-wizard/file-services-wizard.module.ts","./src/app/vsan/file-services/configure-wizard/file-services-configure-wizard.component.ts","./src/app/vsan/file-services/configure-wizard/file-services-domain-page.component.ts","./src/app/vsan/file-services/configure-wizard/file-services-file-analytics-page.html","./src/app/vsan/common/directive/external-link/external-link.directive.ts","./src/app/vsan/file-services/configure-wizard/ip.data.ts","./src/app/vsan/common/directive/icon-title/icon-title.directive.ts","./src/app/vsan/file-services/configure-wizard/file-services-introduction-page.html","./src/app/vsan/file-services/configure-wizard/file-services-review-page.component.ts"],"names":[],"mappings":"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","file":"109-es2015.js","sourcesContent":["/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ClrButton} from \"@clr/angular\";\n\n/**\n * Use this class as base class for directive, which handles clr-button. It will help to link the rendered button with\n * the clr-button on which the directive is applied.\n */\nexport abstract class ClrButtonBaseDirective {\n\n   constructor(private clrButton: ClrButton) {\n      if (!clrButton) {\n         return;\n      }\n      // name should be set, if not provided in template - generate one. ClrButtom#name is used to generate the name\n      // attribute of the markup button. Later the name is used to match the generated markup with the directive.\n      if (!clrButton.name) {\n         clrButton.name = Math.random().toString();\n      }\n\n      const directiveHolder: DirectiveHolder = (clrButton as DirectiveHolder);\n      directiveHolder.directives = directiveHolder.directives || [];\n      directiveHolder.directives.push(this);\n   }\n\n   /**\n    * This method will be called when the actual html button is rendered.\n    */\n   abstract resolveButton(clrButton: ClrButton, button: HTMLButtonElement, index: number);\n}\n\nexport interface DirectiveHolder extends ClrButton {\n   directives: ClrButtonBaseDirective[];\n}","/* Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit, ViewChild} from \"@angular/core\";\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, ValidationErrors, ValidatorFn} from \"@angular/forms\";\nimport {ClrForm} from \"@clr/angular\";\nimport {InventorySelectionEvent} from \"@component/inventory/inventory-node\";\nimport {InputProperty, OutputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {OnValidate, PageControls} from \"@component/wizard/flow-wizard.component\";\nimport {PageItem} from \"@component/wizard/page-item\";\nimport {InventoryEntryData} from \"@generated/inventory-entry-data\";\nimport {NetworkInventoryService} from \"@generated/network-inventory-service\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {VsanFileServiceCommonConfig} from \"@generated/vsan-file-service-common-config\";\nimport {VsanFileServiceConfigService} from \"@generated/vsan-file-service-config-service\";\nimport {VsanFileServiceIpType} from \"@generated/vsan-file-service-ip-type\";\nimport {VsanFileServicePrecheckResult} from \"@generated/vsan-file-service-precheck-result\";\nimport {DataServiceClient} from \"@service/client/dataservice/data-service.service\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {IpParserService} from \"@service/ip-parser.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Icon} from \"@util/icon\";\nimport {ReferenceWatcher} from \"@util/reference-watcher\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {DomainValidationService} from \"./domain-validation.service\";\nimport {IP} from \"./ip.data\";\n\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.services.fileservices.wizard.ipPool.title\"),\n)\n@Component({\n   templateUrl: \"file-services-network-page.html\",\n   styleUrls: [\"file-services-network-page.scss\"],\n})\nexport class FileServicesNetworkPageComponent implements OnValidate, OnInit {\n   private readonly DOCKER_INTERNAL_IP_START: string = \"172.17.\";\n   readonly INVALID_GATEWAY_VALIDATION: string = \"invalidGateway\";\n\n   @InputProperty()\n   @OutputProperty()\n   fileServiceConfig: VsanFileServiceCommonConfig;\n\n   @InputProperty()\n   clusterRef: ManagedObject;\n\n   @InputProperty()\n   isEdit: boolean; // isEdit = true, when the user started the Edit workflow\n\n   @InputProperty()\n   pageControls: PageControls;\n\n   @InputProperty()\n   capabilityData: VsanCapabilityData;\n\n   @OutputProperty()\n   networkName: string;\n\n   @OutputProperty()\n   protocol: IP;\n\n   @ViewChild(ClrForm)\n   clrForm: ClrForm;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   objRefs: ManagedObject[];\n   preselectedNode: ManagedObject;\n   protocolList: IP[];\n   showNetworkBrowser: boolean = false;\n   displaySubnetConflictWarning: boolean = false;\n   selectedNetworkNode: InventoryEntryData;\n   numberOfHosts: number = 0;\n   Icon: typeof Icon = Icon;\n   IP: typeof IP = IP;\n   networkForm: FormGroup;\n\n   private ignoreSubnetConflict: boolean = false;\n   private precheckResult: VsanFileServicePrecheckResult;\n\n   constructor(private dataService: DataServiceClient,\n         private fileService: VsanFileServiceConfigService,\n         public networkInventoryService: NetworkInventoryService,\n         public validationService: DomainValidationService,\n         private formBuilder: FormBuilder,\n         private ipParser: IpParserService,\n         private refWatcher: ReferenceWatcher) {\n   }\n\n   async ngOnInit(): Promise<void> {\n      this.protocolList = [IP.v4, IP.v6];\n      this.objRefs = [this.clusterRef];\n      this.preselectedNode = this.fileServiceConfig.network;\n      this.networkName = \"\";\n      this.protocol = this.fileServiceConfig.domainConfig.ipType === VsanFileServiceIpType.V6 ? IP.v6 : IP.v4;\n      await this.getPrecheckResult();\n      this.initFormGroup();\n      if (!this.preselectedNode) {\n         return;\n      }\n      try {\n         this.pageControls.setBusyState();\n         this.networkName = await this.networkInventoryService.getNetworkName(this.preselectedNode);\n         // empty network name means the preselected network was removed,\n         // so we need to clear the network setting, so user can select a new one.\n         if (!this.networkName) {\n            this.fileServiceConfig.network = null;\n         }\n      } catch (error) {\n         this.pageControls.addValidationErrors([error]);\n      } finally {\n         this.pageControls.clearBusyState();\n      }\n   }\n\n   @Loader()\n   async getPrecheckResult(): Promise<void> {\n      this.pageControls.setBusyState();\n      this.precheckResult = await this.fileService.getPrecheckResult(this.clusterRef,\n            this.fileServiceConfig.domainConfig.name\n                  ? this.fileServiceConfig.domainConfig\n                  : null,\n            false);\n      this.pageControls.clearBusyState();\n   }\n\n   selectNode(event: InventorySelectionEvent): void {\n      if (event.node.data.isLeafNode) {\n         this.fileServiceConfig.network = event.node.data.nodeRef;\n         this.selectedNetworkNode = event.node.data;\n         this.networkName = this.selectedNetworkNode ? this.selectedNetworkNode.name : \"\";\n         this.showNetworkBrowser = false;\n         this.invalidate();\n      }\n   }\n\n   invalidate(): void {\n      this.pageControls.rebuildToc();\n   }\n\n   ipV6Supported(): boolean {\n      return this.precheckResult?.ipv6Supported;\n   }\n\n   getIpProtocolVersionText(protocol: IP): string {\n      return this.isIpv4(protocol)\n            ? VsanUiUtils.getString(\"vsan.services.fileservices.wizard.ipPool.input.vlan.protocol.ipv4\")\n            : VsanUiUtils.getString(\"vsan.services.fileservices.wizard.ipPool.input.vlan.protocol.ipv6\");\n   }\n\n   changeProtocol(value: string | IP): void {\n      if (typeof (value) === \"string\") {\n         this.protocol = IP.parse(value as string);\n      } else {\n         this.protocol = value as IP;\n      }\n\n      this.fileServiceConfig.domainConfig.ipType = this.protocol.toVsanIpVersion();\n      this.initFormGroup();\n      this.invalidate();\n   }\n\n   inlineValidate(): boolean {\n      this.clrForm.markAsTouched();\n      // Only for ipv4 because it's not a clr-input-container, and cannot be covered in the above line.\n      // If ipv6 the ipv6 gateway input is a standard clr-input-container element.\n      if (this.protocol === IP.v4) {\n         this.gatewayControl.markAsTouched();\n      }\n      return this.networkForm.valid;\n   }\n\n   validate(): string[] {\n      const validationError: string = this.validateNetwork();\n      return validationError ? [validationError] : null;\n   }\n\n   onSubmitConflictIgnored(): void {\n      this.ignoreSubnetConflict = true;\n      this.displaySubnetConflictWarning = false;\n      (this.pageControls as PageItem).nextButtonIsDisabled = false;\n   }\n\n   private validateNetwork(): string {\n      if (!this.fileServiceConfig.network) {\n         return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.ipPool.validation.network.empty\");\n      }\n\n      return null;\n   }\n\n   private initFormGroup(): void {\n      this.networkForm = this.getNetworkForm();\n      this.refWatcher.watchSubscriptionRef(this.networkForm.valueChanges.subscribe(() => this.invalidate()));\n      if (this.isIpv4()) {\n         this.refWatcher.watchSubscriptionRef(\n               this.maskControl.valueChanges.subscribe(value => this.fileServiceConfig.domainConfig.mask = value));\n         this.refWatcher.watchSubscriptionRef(\n               this.gatewayControl.valueChanges.subscribe(value => {\n                  this.fileServiceConfig.domainConfig.gatewayAddress = value;\n                  this.dockerInternalSubnetConflictCheck();\n               }));\n      } else {\n         this.refWatcher.watchSubscriptionRef(\n               this.prefixLengthControl.valueChanges\n                     .subscribe(value => this.fileServiceConfig.domainConfig.prefixLength = value));\n         this.refWatcher.watchSubscriptionRef(\n               this.gatewayControl.valueChanges.subscribe(value =>\n                     this.fileServiceConfig.domainConfig.ipv6GatewayAddress = value,\n               ));\n      }\n   }\n\n   private getNetworkForm(): FormGroup {\n      return this.isIpv4()\n            ? this.formBuilder.group({\n               protocol: new FormControl(this.fileServiceConfig.domainConfig.ipType),\n               gateway: new FormControl(\n                     this.fileServiceConfig.domainConfig.gatewayAddress, this.gatewayValidator),\n               mask: new FormControl(this.fileServiceConfig.domainConfig.mask, this.validationService.maskValidator),\n            })\n            : this.formBuilder.group({\n               protocol: new FormControl(this.fileServiceConfig.domainConfig.ipType),\n               gateway: new FormControl(\n                     this.fileServiceConfig.domainConfig.ipv6GatewayAddress, this.gatewayValidator),\n               prefixLength: new FormControl(\n                     this.fileServiceConfig.domainConfig.prefixLength,\n                     this.validationService.prefixLengthValidator),\n            });\n   }\n\n   /**\n    * Check if the configured network gateway and subnet mask has overlap with the docker internal network\n    */\n   private dockerInternalSubnetConflictCheck(): void {\n      // The docker internal network is 172.17.0.0/16 (172.17.0.1 to 172.17.255.255), which is hard-coded in docker.\n      // The easiest way to detect conflict is we just compare the first 2 octets.\n      if (!this.ignoreSubnetConflict\n            && this.fileServiceConfig.domainConfig.gatewayAddress.startsWith(this.DOCKER_INTERNAL_IP_START)) {\n         this.displaySubnetConflictWarning = true;\n         (this.pageControls as PageItem).nextButtonIsDisabled = true;\n         return;\n      }\n      this.displaySubnetConflictWarning = false;\n      (this.pageControls as PageItem).nextButtonIsDisabled = false;\n   }\n\n   private isIpv4(protocol?: IP): boolean {\n      return (protocol || this.protocol) === IP.v4;\n   }\n\n   get networkNameText(): string {\n      if (this.networkName) {\n         return this.networkName;\n      }\n      return VsanUiUtils.getString(\"vsan.common.select\");\n   }\n\n   get maskControl(): FormControl {\n      return this.networkForm.get(\"mask\") as FormControl;\n   }\n\n   get prefixLengthControl(): FormControl {\n      return this.networkForm.get(\"prefixLength\") as FormControl;\n   }\n\n   get gatewayControl(): FormControl {\n      return this.networkForm.get(\"gateway\") as FormControl;\n   }\n\n   get showGatewayControlError(): boolean {\n      return this.gatewayControl.touched && !!this.gatewayControl.errors;\n   }\n\n   private gatewayValidator: ValidatorFn = (control: AbstractControl): ValidationErrors => {\n      const gateway: string = control.value;\n      if (this.getGatewayValidationResult(gateway)) {\n         return {[this.INVALID_GATEWAY_VALIDATION]: {value: gateway}};\n      }\n      return null;\n   };\n\n   getGatewayValidationResult(gateway: string): string {\n      if (!gateway) {\n         return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.ipPool.validation.gateway.empty\");\n      }\n      const validator: (address: string) => boolean = this.protocol === IP.v4\n            ? this.ipParser.isIpv4AddressValid\n            : this.ipParser.isIpv6AddressValid;\n      if (!validator(gateway)) {\n         return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.ipPool.validation.gateway.invalid\");\n      }\n   }\n}\n","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AffinitySiteLocation} from \"@generated/affinity-site-location\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {IpSettingData} from \"@component/configurations/file-service-configuration.component\";\nimport {VsanFileServiceHostIpSettings} from \"@generated/vsan-file-service-host-ip-settings\";\nimport {VsanVdfsConfig} from \"@generated/vsan-vdfs-config\";\n\n/**\n * Holds the common properties and methods used for file service UI\n */\nexport class FileServiceUtil {\n   // properties used for API fileServiceConfigService.getFileShareAttributes\n   static readonly SHARE_NAME_PROPERTY: string = \"sharenames\";\n   static readonly SHARE_UUID_PROPERTY: string = \"shareuuids\";\n   static readonly SHARE_FILE_INDEXING_ENABLED_PROPERTY: string = \"fileIndexingEnabled\";\n\n   static getAffinitySiteLabel(site: AffinitySiteLocation, availableDomains: DomainOrHostData[]): string {\n      switch (site) {\n         case AffinitySiteLocation.PREFERRED_DOMAIN:\n            const preferredDomain: DomainOrHostData = availableDomains.find(domain => domain.isPreferred);\n            return preferredDomain ?\n                  VsanUiUtils.getString(\"vsan.fileservices.affinitySite.preferred.label\", preferredDomain.label):\n                  VsanUiUtils.getString(\"vsan.cluster.configure.summary.preferredFd\");\n         case AffinitySiteLocation.NON_PREFERRED_DOMAIN:\n            const secondaryDomain: DomainOrHostData =\n                  availableDomains.find(domain => !domain.isPreferred && !domain.isHost);\n            return secondaryDomain ?\n                  VsanUiUtils.getString(\"vsan.fileservices.affinitySite.nonPreferred.label\", secondaryDomain.label) :\n                  VsanUiUtils.getString(\"vsan.cluster.configure.summary.secondaryFd\");\n         default:\n            return VsanUiUtils.getString(\"vsan.fileservices.affinitySite.none.label\");\n      }\n   }\n\n   /**\n    * Returns the IP addresses from the File Service configuration in the form of a string, separated by commas.\n    */\n   static getIpSettings(vdfsConfig: VsanVdfsConfig, availableDomains: DomainOrHostData[]): IpSettingData[] {\n      if (!vdfsConfig\n            || !vdfsConfig.config\n            || !vdfsConfig.config.domainConfig\n            || !vdfsConfig.config.domainConfig.ipSettings) {\n         return [];\n      }\n\n      return vdfsConfig.config.domainConfig.ipSettings.map((ipSetting: VsanFileServiceHostIpSettings) => {\n         return {\n            ip: this.getIpLabel(ipSetting),\n            fqdn: ipSetting.dnsName,\n            affinitySite: FileServiceUtil.getAffinitySiteLabel(ipSetting.affinityLocation, availableDomains),\n         };\n      });\n   }\n\n   private static getIpLabel(ipSetting: VsanFileServiceHostIpSettings): string {\n      return ipSetting.isDefault\n            ? VsanUiUtils.getString(\"vsan.services.fileservices.primaryIp\", ipSetting.address)\n            : ipSetting.address;\n   }\n}\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component} from \"@angular/core\";\nimport {InputProperty, OutputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanFileServiceCommonConfig} from \"@generated/vsan-file-service-common-config\";\nimport {PageControls} from \"@component/wizard/flow-wizard.component\";\n\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.services.fileservices.wizard.fileAnalyticsPage.title\"),\n)\n@Component({\n   templateUrl: \"file-services-file-analytics-page.html\",\n   styleUrls: [\"file-services-file-analytics-page.scss\"],\n})\nexport class FileServicesFileAnalyticsPageComponent {\n   @InputProperty()\n   pageControls: PageControls;\n\n   @InputProperty()\n   isFileAnalyticsRuntimeSupported: boolean;\n\n   @InputProperty()\n   @OutputProperty()\n   fileServiceConfig: VsanFileServiceCommonConfig;\n\n   @InputProperty()\n   isEdit: boolean; // isEdit = true, when the user started the Edit workflow\n\n   invalidate(): void {\n      this.pageControls.rebuildToc();\n   }\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit, ViewChild} from \"@angular/core\";\nimport {InputProperty, OutputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {OnValidate, PageControls} from \"@component/wizard/flow-wizard.component\";\nimport {VsanFileServiceOvfProps} from \"@generated/vsan-file-service-ovf-props\";\nimport {VsanFileServiceConfigService} from \"@generated/vsan-file-service-config-service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanHealthPropertyProvider} from \"@generated/vsan-health-property-provider\";\nimport {ExternalProxySettingsConfig} from \"@generated/external-proxy-settings-config\";\nimport {OvfOption, OvfSettings} from \"../shared/file-services-ovf-settings.data\";\nimport {FileServicesOvfSettings} from \"../shared/file-services-ovf-settings.component\";\nimport {PageItem} from \"@component/wizard/page-item\";\nimport {VsanFileServicePrecheckResult} from \"@generated/vsan-file-service-precheck-result\";\nimport {Version} from \"@util/version\";\n\n@WizardPage(\n   VsanUiUtils.getString(\"vsan.services.fileservices.wizard.ovf.title\"),\n)\n@Component({\n   templateUrl: \"file-services-ovf-page.html\",\n})\nexport class FileServicesOvfPageComponent implements OnInit, OnValidate {\n\n   @InputProperty()\n   clusterRef: ManagedObject;\n\n   @InputProperty()\n   pageControls: PageControls;\n\n   @OutputProperty()\n   downloadTask: ManagedObject;\n\n   @OutputProperty()\n   ovfSettings: OvfSettings;\n\n   @OutputProperty()\n   ovfVersion: string;\n\n   @ViewChild(\"ovfFileSelector\")\n   ovfFileSelector: FileServicesOvfSettings;\n\n   publicOvfProps: VsanFileServiceOvfProps;\n\n   isInternetAccessEnabled: boolean;\n\n   currentOvfStatus: OvfUploadStatus;\n\n   OvfUploadStatus: typeof OvfUploadStatus = OvfUploadStatus;\n\n   displayUseExistingOption: boolean;\n   existingOvfVersion: Version;\n   fsvmVersion: Version;\n   hostVersion: Version;\n\n   constructor(private fileService: VsanFileServiceConfigService, private healthService: VsanHealthPropertyProvider) {\n   }\n\n   async ngOnInit(): Promise<void> {\n      let ovfProps: VsanFileServiceOvfProps = null;\n      let externalProxyData: ExternalProxySettingsConfig = null;\n      let precheckResult: VsanFileServicePrecheckResult = null;\n      this.pageControls.setBusyState();\n      try {\n         [ovfProps, externalProxyData, precheckResult] = await Promise.all([\n            this.fileService.getPublicOvfProps(this.clusterRef),\n            this.healthService.getExternalProxySettings(this.clusterRef),\n            this.fileService.getPrecheckResult(this.clusterRef, null, false),\n         ]);\n         this.publicOvfProps = ovfProps;\n         this.isInternetAccessEnabled = externalProxyData.enableInternetAccess;\n         this.ovfSettings = new OvfSettings(this.getRecommendedOvfOption(precheckResult), this.publicOvfProps);\n         this.displayUseExistingOption = this.ovfSettings.isUseExisting;\n         this.existingOvfVersion = new Version(precheckResult.ovfInstalled);\n         this.fsvmVersion = new Version(precheckResult.fsvmVersion);\n         this.hostVersion = new Version(precheckResult.hostVersion);\n         // PR 2694459, user downloaded the OVF in the wizard and then close and reopen the wizard w/o refresh the\n         // services view, the existing OVF version is not refreshed, and it's not displayed in the review page.\n         // Here we set the ovfVersion again with the latest result.\n         this.ovfVersion = precheckResult.ovfInstalled;\n         if (!ovfProps.url && this.isInternetAccessEnabled) {\n            this.pageControls.addValidationErrors(\n                  [VsanUiUtils.getString(\"vsan.services.fileservices.wizard.ovf.nourl\")]);\n         }\n      } catch (err) {\n         this.pageControls.addValidationErrors([err]);\n         this.ovfSettings = new OvfSettings(OvfOption.MANUAL, null);\n      } finally {\n         this.pageControls.clearBusyState();\n      }\n   }\n\n   private getRecommendedOvfOption(precheckResult: VsanFileServicePrecheckResult): OvfOption {\n      if (precheckResult.ovfInstalled) {\n         return OvfOption.EXISTING;\n      }\n      if (!this.isInternetAccessEnabled || VsanUiUtils.isEmpty(this.publicOvfProps.url)) {\n         return OvfOption.MANUAL;\n      }\n      return OvfOption.DOWNLOAD;\n   }\n\n   validate(): string[] | Promise<string[]> {\n      if (this.ovfSettings.isUseExisting) {\n         return null;\n      }\n      if (!this.ovfSettings.isManualDownload) {\n         return this.validateAutoDownloadOvfFiles();\n      }\n\n      // Start to validate the manual uploaded files\n      const validationResult: string[] | Promise<string[]> = this.ovfFileSelector.validate();\n      return (validationResult instanceof Promise)\n            ? this.monitorUploadOvfFiles(validationResult)\n            : validationResult;\n   }\n\n   onUploadError(errors: string[]): void {\n      this.currentOvfStatus = OvfUploadStatus.UPLOAD_ERROR;\n      (this.pageControls as PageItem).addValidationErrors(errors);\n      this.toggleNextButton(true);\n   }\n\n   onUploadCancel(): void {\n      this.currentOvfStatus = OvfUploadStatus.UPLOAD_CANCELLED;\n      this.toggleNextButton(true);\n   }\n\n   onUploadComplete(): void {\n      this.currentOvfStatus = OvfUploadStatus.UPLOAD_COMPLETED;\n   }\n\n   onOvfSettingsChange(): void {\n      this.pageControls.rebuildToc();\n   }\n\n   private validateAutoDownloadOvfFiles(): string[] | Promise<string[]> {\n      // We have to let user to accept the certificate, this is for security reasons\n      if (this.ovfSettings.isSecureUrlNotTrusted) {\n         return [VsanUiUtils.getString(\"vsan.services.fileservices.wizard.ovf.ssl.trust.error\")];\n      }\n      if (this.downloadTask) {\n         return null;\n      }\n      return this.startDownloadOvfFiles();\n   }\n\n   private startDownloadOvfFiles(): Promise<string[]> {\n      this.pageControls.setBusyState();\n      return this.registerOvfTask(this.fileService.downloadPublicOvf(this.clusterRef));\n   }\n\n   private monitorUploadOvfFiles(validationResult: Promise<string[]>): Promise<string[]> {\n      return validationResult.then((errors: string[]) => {\n         if (errors && errors.length) {\n            return errors;\n         }\n         // disable the next button to avoid user clicking it again\n         this.toggleNextButton(false);\n\n         this.startUploadOvfFiles();\n         return this.registerOvfTask(new Promise<any>((accept, reject) => {\n            // Check the upload progress every second until it completes\n            const intervalClock: number = window.setInterval(() => {\n               if (this.currentOvfStatus !== OvfUploadStatus.START_UPLOAD) {\n                  clearInterval(intervalClock);\n                  if (this.currentOvfStatus === OvfUploadStatus.UPLOAD_COMPLETED) {\n                     accept(null);\n                  } else if (this.currentOvfStatus === OvfUploadStatus.UPLOAD_ERROR) {\n                     reject(null);\n                  }\n               }\n            }, 1000);\n         }));\n      });\n   }\n\n   private toggleNextButton(enabled: boolean): void {\n      (this.pageControls as PageItem).nextButtonIsDisabled = !enabled;\n   }\n\n   private startUploadOvfFiles(): void {\n      this.currentOvfStatus = OvfUploadStatus.START_UPLOAD;\n   }\n\n   private registerOvfTask = (result: Promise<ManagedObject>): Promise<string[]> => {\n      return new Promise<string[]>((resolve, reject) => {\n         result.then((task: ManagedObject) => {\n            this.downloadTask = task; // task is null if the OVF file is uploaded from local computer\n            this.pageControls.clearBusyState();\n            resolve(null);\n         }).catch((error: string) => {\n            this.pageControls.clearBusyState();\n            reject([error]);\n         }).finally(() => this.toggleNextButton(true));\n      });\n   };\n}\n\nexport enum OvfUploadStatus {\n   START_UPLOAD,\n   UPLOAD_COMPLETED,\n   UPLOAD_CANCELLED,\n   UPLOAD_ERROR,\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n/**\n * IDs used in external navigation to Ask VMware pages\n */\nexport enum AskVmwareId {\n   CLUSTER_SHUTDOWN = \"com.vmware.vsan.clustershutdown.vmshutdown\",\n   FILE_SERVICE = \"fileservice.user.guide\",\n   FILE_SERVICE_IMBALANCE = \"com.vmware.vsan.fileservice.remediate.imbalance\",\n   TOP_CONTRIBUTORS = \"com.vmware.vsan.perf.graph.topn\",\n   OBFUSCATED_DATA = \"com.vmware.vsan.obfuscation.data.map\",\n   VM_CONSUMPTION_IOPS = \"com.vmware.vsan.perf.graph.cluster-domclient.iops\",\n}","<!--Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<form *ngIf=\"!loading\" clrForm clrLayout=\"horizontal\" [formGroup]=\"networkForm\">\n   <vsan-validation id=\"network-security-warning\"\n                    *ngIf=\"!isEdit\"\n                    [isSmall]=\"true\"\n                    [alertType]=\"'info'\"\n                    [allowClose]=\"false\"\n                    [alert]=\"'vsan.services.fileservices.wizard.ipPool.input.network.security.warning' | localized\">\n   </vsan-validation>\n   <div id=\"network-container\" class=\"clr-row clr-form-control\">\n      <label class=\"clr-control-label clr-col-md-4\" for=\"browse-network\">\n         {{\"vsan.services.fileservices.wizard.ipPool.input.network\"| localized}}\n      </label>\n      <div class=\"clr-control-container clr-col-md-8\" *ngIf=\"!isEdit || !networkName\">\n         <clr-dropdown [clrCloseMenuOnItemClick]=\"true\">\n            <button id=\"browse-network\"\n                    class=\"dropdown-toggle btn btn-link\"\n                    (click)=\"showNetworkBrowser = true;\"\n                    clrDropdownToggle>\n               <clr-icon *ngIf=\"networkName\"\n                         class=\"network-icon\"\n                         [attr.shape]=\"Icon.NETWORK\"></clr-icon>\n               {{networkNameText}}\n               <clr-icon shape=\"caret down\"></clr-icon>\n            </button>\n            <ng-template [(clrIfOpen)]=\"showNetworkBrowser\">\n               <clr-dropdown-menu clrPosition=\"bottom-left\"\n                                  [attr.aria-label]=\"'vsan.common.srMessage.dropdownMenu.expanded.label' | localized:\n                                       ('vsan.services.fileservices.wizard.ipPool.input.network' | localized)\">\n                     <vsan-inventory-browser #selector\n                                             [objRefs]=\"objRefs\"\n                                             [inventoryService]=\"networkInventoryService\"\n                                             [preselectedNodes]=\"[preselectedNode]\"\n                                             (nodeSelected)=\"selectNode($event)\"\n                                             [searchInputAriaLabelKey]=\"'vsan.services.fileservices.wizard.ipPool.input.network.searchInputAriaLabel'\">\n                     </vsan-inventory-browser>\n               </clr-dropdown-menu>\n            </ng-template>\n         </clr-dropdown>\n      </div>\n      <div *ngIf=\"isEdit && networkName\" class=\"clr-col-md-8\">{{networkName}}</div>\n   </div>\n   <clr-select-container *ngIf=\"ipV6Supported() && !isEdit\"\n                         id=\"protocol-container\"\n                         class=\"clr-row\">\n      <label class=\"clr-control-label clr-col-md-4\" for=\"protocol-input\">\n         {{\"vsan.services.fileservices.wizard.ipPool.input.protocol\"| localized}}\n      </label>\n      <select id=\"protocol-input\"\n              name=\"protocol\"\n              class=\"clr-col-md-8\"\n              clrSelect\n              (change)=\"changeProtocol($event?.target?.value)\"\n              formControlName=\"protocol\"\n              [value]=\"protocol.value\">\n         <option *ngFor=\"let p of protocolList\"\n                  value=\"{{p.value}}\"\n                  [selected]=\"protocol.value == p.value\">\n            {{getIpProtocolVersionText(p)}}\n         </option>\n      </select>\n   </clr-select-container>\n   <div *ngIf=\"!ipV6Supported() || isEdit\"\n        class=\"clr-form-control clr-row\"\n        id=\"protocol-container-readonly\">\n      <label class=\"clr-control-label clr-col-md-4\" for=\"protocol-input\">\n         {{\"vsan.services.fileservices.wizard.ipPool.input.protocol\"| localized}}\n      </label>\n      <div class=\"clr-col-md-8\">\n         {{getIpProtocolVersionText(protocol)}}\n      </div>\n   </div>\n   <clr-input-container *ngIf=\"protocol === IP.v4\"\n                        id=\"mask-container\"\n                        class=\"clr-row\">\n      <label class=\"clr-control-label clr-col-md-4\" for=\"mask-input\">\n         {{\"vsan.services.fileservices.wizard.ipPool.input.mask\"| localized}}\n      </label>\n      <input id=\"mask-input\"\n             clrInput\n             type=\"text\"\n             class=\"clr-col-md-8\"\n             formControlName=\"mask\">\n      <clr-control-error *clrIfError=\"validationService.INVALID_MASK_VALIDATION\">\n         {{validationService.getMaskValidationResult(maskControl.value)}}\n      </clr-control-error>\n   </clr-input-container>\n   <clr-input-container *ngIf=\"protocol === IP.v6\"\n                        id=\"prefix-container\"\n                        class=\"clr-row\">\n      <label class=\"clr-control-label clr-col-md-4\" for=\"mask-input\">\n         {{\"vsan.services.fileservices.wizard.ipPool.input.prefixLength\" | localized}}\n      </label>\n      <input id=\"prefix-length\"\n             clrInput\n             type=\"number\"\n             min=\"1\"\n             max=\"128\"\n             class=\"clr-col-md-8\"\n             formControlName=\"prefixLength\">\n      <clr-control-error *clrIfError=\"validationService.INVALID_PREFIX_LENGTH_VALIDATION\">\n         {{validationService.getPrefixLengthValidationResult(prefixLengthControl.value)}}\n      </clr-control-error>\n   </clr-input-container>\n\n   <clr-input-container *ngIf=\"protocol === IP.v6\"\n                        id=\"ipv6-gateway-container\"\n                        class=\"clr-row\">\n      <label class=\"clr-control-label clr-col-md-4\" for=\"ipv6-gateway-input\">\n         {{\"vsan.services.fileservices.wizard.ipPool.input.gateway\" | localized}}\n      </label>\n      <input id=\"ipv6-gateway-input\"\n             clrInput\n             type=\"text\"\n             class=\"clr-col-md-8\"\n             formControlName=\"gateway\">\n      <clr-control-error *clrIfError=\"INVALID_GATEWAY_VALIDATION\">\n         {{getGatewayValidationResult(gatewayControl.value)}}\n      </clr-control-error>\n   </clr-input-container>\n   <!--\n   We don't use clr-input-container here because it doesn't allow us to have a vsan-validation element\n   inside. This warning message comes from PR 2569516, we need to keep it align with the input element.\n   -->\n   <div *ngIf=\"protocol === IP.v4\"\n        id=\"gateway-container\"\n        class=\"clr-form-control clr-row\"\n        [ngClass]=\"{'clr-error': showGatewayControlError}\">\n      <label id=\"gateway-label\" class=\"clr-control-label clr-col-md-4\" for=\"gateway-input\">\n         {{\"vsan.services.fileservices.wizard.ipPool.input.gateway\" | localized}}\n      </label>\n      <div class=\"clr-control-container clr-col-md-8\">\n         <div class=\"clr-input-wrapper gateway-input-container\">\n            <input id=\"gateway-input\"\n                   type=\"text\"\n                   class=\"clr-input\"\n                   aria-describedby=\"gateway-input-error\"\n                   formControlName=\"gateway\">\n            <clr-icon *ngIf=\"showGatewayControlError\"\n                      aria-hidden=\"true\"\n                      role=\"none\"\n                      class=\"clr-validate-icon\"\n                      shape=\"exclamation-circle\">\n            </clr-icon>\n         </div>\n         <div *ngIf=\"showGatewayControlError\" id=\"gateway-input-error\" class=\"clr-subtext\">\n            {{getGatewayValidationResult(gatewayControl.value)}}\n         </div>\n         <vsan-validation id=\"docker-internal-ip-conflict-warning\"\n                          *ngIf=\"displaySubnetConflictWarning\"\n                          allowReload=\"true\"\n                          isSmall=\"true\"\n                          alertType=\"warning\"\n                          [allowClose]=\"false\"\n                          [actionLabel]=\"'vsan.services.fileservices.network.docker.internal.conflict.ignore.label' | localized\"\n                          [alert]=\"'vsan.services.fileservices.network.docker.internal.conflict.warning' | localized\"\n                          (onReload)=\"onSubmitConflictIgnored()\">\n         </vsan-validation>\n      </div>\n   </div>\n</form>\n","<!--Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-validation id=\"prelight-check-error\"\n                 *ngIf=\"error\"\n                 [allowClose]=\"false\"\n                 [isSmall]=\"true\"\n                 [alert]=\"error\">\n</vsan-validation>\n<vsan-validation id=\"prelight-check-warning\"\n                 *ngIf=\"showNtpWarning && warnings\"\n                 [alertType]=\"'warning'\"\n                 [allowClose]=\"false\"\n                 [isSmall]=\"true\"\n                 [(alerts)]=\"warnings\">\n</vsan-validation>\n<ng-container *ngIf=\"!isEdit\">\n   <h5>{{\"vsan.services.fileservices.wizard.ovf.title\"|localized}}</h5>\n   <ng-container *ngIf=\"!isUploadLocalOvf && downloadTask\">\n      <div class=\"clr-row\">\n         <div id=\"download-approach-label\" class=\"clr-col-4\">\n            {{\"vsan.services.fileservices.wizard.ovf.option\"|localized}}\n         </div>\n         <div id=\"download-approach-value\" class=\"clr-col-8\">\n            <ng-container *ngIf=\"downloadTaskInfoData?.progress; else loading_spinner\">\n               <div id=\"url-value\">{{ovfSettings?.props?.url}}</div>\n               <div class=\"progress labeled\" *ngIf=\"downloadTaskInfoData\">\n                  <progress max=\"100\" value=\"{{downloadTaskInfoData?.progress}}\"></progress>\n                  <span>\n                     {{downloadTaskInfoData?.progress}}%\n                  </span>\n               </div>\n            </ng-container>\n            <ng-template #loading_spinner>\n               <span class=\"spinner spinner-inline\"></span>\n               <span>{{\"vsan.loading\" | localized }}</span>\n            </ng-template>\n         </div>\n      </div>\n   </ng-container>\n\n   <vsan-validation id=\"download-task-status\"\n                    [alertType]=\"downloadTaskIcon\"\n                    [alert]=\"downloadTaskMessage\"\n                    [allowClose]=\"false\"\n                    [isSmall]=\"true\"\n                    class=\"indent\">\n   </vsan-validation>\n</ng-container>\n\n<ng-container *ngIf=\"fileServiceConfig\">\n   <h5 id=\"active-directory\">{{\"vsan.services.fileservices.wizard.activeDirectoryPage.title\"|localized}}</h5>\n   <vsan-validation id=\"re-enable-message\"\n                    *ngIf=\"isReEnable\"\n                    alertType=\"warning\"\n                    [alert]=\"'vsan.services.fileservices.wizard.activeDirectoryPage.reenableInfo' | localized\"\n                    [allowClose]=\"false\"\n                    [isSmall]=\"true\">\n   </vsan-validation>\n   <div class=\"clr-row\" *ngIf=\"!capabilityData?.isFileServiceKerberosSupported\">\n      <div id=\"security-mode-label\" class=\"clr-col-4\">\n         {{\"vsan.services.fileservices.wizard.activeDirectoryPage.security.label\"|localized}}\n      </div>\n      <div id=\"security-mode-value\" class=\"clr-col-8\">\n         {{'vsan.services.fileservices.wizard.activeDirectoryPage.security.authSys' | localized}}\n      </div>\n   </div>\n   <div class=\"clr-row\">\n      <div id=\"domain-name-label\" class=\"clr-col-4\">\n         {{\"vsan.services.fileservices.wizard.activeDirectoryPage.input.fsDomain\"|localized}}\n      </div>\n      <div id=\"domain-name-value\" class=\"clr-col-8\">{{fileServiceConfig.domainConfig.name}}</div>\n   </div>\n   <div class=\"clr-row\">\n      <div id=\"dns-server-label\" class=\"clr-col-4\">\n         {{\"vsan.services.fileservices.wizard.activeDirectoryPage.input.dnsServer\" | localized}}\n      </div>\n      <div id=\"dns-server-value\"\n           class=\"clr-col-8\">\n         {{fileServiceConfig.domainConfig.dnsServers || ('vsan.na.label' | localized)}}\n      </div>\n   </div>\n   <div class=\"clr-row\">\n      <div id=\"dns-suffix-label\" class=\"clr-col-4\">\n         {{\"vsan.services.fileservices.wizard.activeDirectoryPage.input.dnsSuffix\" | localized}}\n      </div>\n      <div id=\"dns-suffix-value\"\n           class=\"clr-col-8\">\n         {{fileServiceConfig.domainConfig.dnsSuffixes || ('vsan.na.label' | localized)}}\n      </div>\n   </div>\n   <ng-container *ngIf=\"capabilityData?.isFileServiceKerberosSupported\n                        && !isRemovingActiveDirectory\n                        && fileServiceConfig.domainConfig?.adConfig?.domain\">\n      <div class=\"clr-row\">\n         <div id=\"active-directory-label\" class=\"clr-col-4\">\n            {{\"vsan.services.fileservices.wizard.activeDirectoryPage.input.adDomain\"|localized}}\n         </div>\n         <div id=\"active-directory-value\" class=\"clr-col-8\">{{fileServiceConfig.domainConfig.adConfig.domain}}</div>\n      </div>\n      <div class=\"clr-row\">\n         <div id=\"organizational-unit-label\" class=\"clr-col-4\">\n            {{\"vsan.services.fileservices.ad.domain.organizationalUnit\"|localized}}\n         </div>\n         <div id=\"organizational-unit-value\" class=\"clr-col-8\">\n            {{fileServiceConfig.domainConfig.adConfig.organizationalUnit || (\"vsan.na.label\" | localized)}}\n         </div>\n      </div>\n      <div class=\"clr-row\">\n         <div id=\"username-label\" class=\"clr-col-4\">\n            {{\"vsan.services.fileservices.wizard.activeDirectoryPage.input.username\"|localized}}\n         </div>\n         <div id=\"username-value\" class=\"clr-col-8\">{{fileServiceConfig.domainConfig.adConfig.username}}</div>\n      </div>\n   </ng-container>\n</ng-container>\n\n<ng-container *ngIf=\"fileServiceConfig\">\n   <h5 id=\"ip-pool\">{{\"vsan.services.fileservices.wizard.ipPool.title\"|localized}}</h5>\n\n   <div class=\"clr-row\">\n      <div id=\"network-label\" class=\"clr-col-4\">\n         {{\"vsan.services.fileservices.wizard.ipPool.input.network\"|localized}}\n      </div>\n      <div id=\"network-value\" class=\"clr-col-8\">{{networkName}}</div>\n   </div>\n\n   <div class=\"clr-row\">\n      <div id=\"protocol-label\" class=\"clr-col-4\">\n         {{\"vsan.services.fileservices.wizard.ipPool.input.vlan.protocol\"|localized}}\n      </div>\n      <div id=\"protocol-value\" class=\"clr-col-8\">{{protocol.toString() | localized}}</div>\n   </div>\n\n   <ng-container *ngIf=\"protocol === IP.v4\">\n      <div class=\"clr-row\">\n         <div id=\"mask-label\" class=\"clr-col-4\">\n            {{\"vsan.services.fileservices.wizard.ipPool.input.mask\"|localized}}\n         </div>\n         <div id=\"mask-value\" class=\"clr-col-8\">{{fileServiceConfig.domainConfig.mask}}</div>\n      </div>\n\n      <div class=\"clr-row\">\n         <div id=\"gateway-label\" class=\"clr-col-4\">\n            {{\"vsan.services.fileservices.wizard.ipPool.input.gateway\"|localized}}\n         </div>\n         <div id=\"gateway-value\" class=\"clr-col-8\">{{fileServiceConfig.domainConfig.gatewayAddress}}</div>\n      </div>\n   </ng-container>\n\n   <ng-container *ngIf=\"protocol === IP.v6\">\n      <div class=\"clr-row\">\n         <div id=\"prefix-length-label\" class=\"clr-col-4\">\n            {{\"vsan.services.fileservices.wizard.ipPool.input.prefixLength\"|localized}}\n         </div>\n         <div id=\"prefix-length-value\" class=\"clr-col-8\">{{fileServiceConfig.domainConfig.prefixLength}}</div>\n      </div>\n\n      <div class=\"clr-row\">\n         <div id=\"ipv6-gateway-label\" class=\"clr-col-4\">\n            {{\"vsan.services.fileservices.wizard.ipPool.input.gateway\"|localized}}\n         </div>\n         <div id=\"ipv6-gateway-value\" class=\"clr-col-8\">{{fileServiceConfig.domainConfig.ipv6GatewayAddress}}</div>\n      </div>\n   </ng-container>\n\n   <table class=\"table\">\n      <thead>\n         <tr>\n            <th class=\"left\" scope=\"col\">{{'vsan.services.fileservices.wizard.ipPool.input.ipaddress.title' | localized}}</th>\n            <th class=\"left\" scope=\"col\">\n               {{\"vsan.services.fileservices.wizard.ipPool.input.dns.title\" | localized}}\n            </th>\n            <th *ngIf=\"affinitySiteSupported && isVsanStretchedCluster\"\n                class=\"left\"\n                scope=\"col\">\n               {{\"vsan.fileservices.affinitySite.label\" | localized}}\n            </th>\n         </tr>\n      </thead>\n      <tbody>\n         <tr id=\"ip-table-row-{{i}}\"\n             *ngFor=\"let hostData of fileServiceConfig.domainConfig.ipSettings; let i=index\">\n            <td class=\"left\">\n               <span>{{hostData.address}}</span>\n               <span *ngIf=\"hostData.isDefault\">\n                  {{'vsan.services.fileservices.wizard.rtc.default' | localized}}\n               </span>\n            </td>\n            <td class=\"left\">{{hostData.dnsName}}</td>\n            <td *ngIf=\"affinitySiteSupported && isVsanStretchedCluster\"\n                class=\"left\">\n               {{getAffinitySiteLabel(hostData.affinityLocation)}}\n            </td>\n         </tr>\n      </tbody>\n   </table>\n\n   <div *ngIf=\"capabilityData.isFileAnalyticsSupported\" class=\"clr-row\">\n      <div id=\"file-analytics-label\" class=\"clr-col-4\">\n         {{\"vsan.services.fileservices.wizard.fileAnalyticsPage.title\" | localized}}\n      </div>\n      <div id=\"file-analytics-value\" class=\"clr-col-8\">\n         {{getBooleanPropertyLabel(fileServiceConfig.isFileAnalyticsEnabled)}}\n      </div>\n   </div>\n</ng-container>\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component} from \"@angular/core\";\nimport {InputProperty, WizardPage} from \"../../common/component/wizard/flow-metadata\";\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {AskVmwareId} from '@service/navigation/model/ask-vmware-id';\n\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.services.fileservices.wizard.introduction.title\"),\n)\n@Component({\n   templateUrl: \"file-services-introduction-page.html\",\n   styleUrls: [\"file-services-introduction-page.scss\"],\n})\nexport class FileServicesIntroductionPageComponent {\n   readonly AskVmwareId: typeof AskVmwareId = AskVmwareId;\n\n   @InputProperty()\n   capabilityData: VsanCapabilityData;\n}\n","<!--Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-file-services-ovf-settings id=\"ovf-settings\"\n                                 *ngIf=\"ovfSettings\"\n                                 #ovfFileSelector\n                                 [clusterRef]=\"clusterRef\"\n                                 [publicOvfProps]=\"publicOvfProps\"\n                                 [startUpload]=\"currentOvfStatus === OvfUploadStatus.START_UPLOAD\"\n                                 [isInternetAccessEnabled]=\"isInternetAccessEnabled\"\n                                 [displayUseExistingOption]=\"displayUseExistingOption\"\n                                 [existingOvfVersion]=\"existingOvfVersion\"\n                                 [fsvmVersion]=\"fsvmVersion\"\n                                 [hostVersion]=\"hostVersion\"\n                                 [(ovfSettings)]=\"ovfSettings\"\n                                 (onError)=\"onUploadError($event)\"\n                                 (onCancel)=\"onUploadCancel()\"\n                                 (uploadComplete)=\"onUploadComplete()\"\n                                 (ovfSettingsChange)=\"onOvfSettingsChange()\">\n</vsan-file-services-ovf-settings>\n","<!--Copyright 2017-2021 VMware, Inc. All rights reserved. &#45;&#45; VMware Confidential-->\n<vsan-validation id=\"edit-warning\"\n                 *ngIf=\"isEdit\"\n                 alertType=\"warning\"\n                 [allowClose]=\"false\"\n                 [alert]=\"editDomainWarning\"\n                 [isSmall]=\"true\">\n</vsan-validation>\n\n<vsan-validation id=\"re-enable-info\"\n                 *ngIf=\"!isEdit && originalDomainName\"\n                 alertType=\"info\"\n                 [allowClose]=\"false\"\n                 [alert]=\"'vsan.services.fileservices.wizard.activeDirectoryPage.reenableInfo' | localized\"\n                 [isSmall]=\"true\">\n</vsan-validation>\n\n<form *ngIf=\"!loading\" clrForm clrLayout=\"horizontal\" [formGroup]=\"domainForm\">\n   <div *ngIf=\"!capabilityData?.isFileServiceKerberosSupported\" class=\"clr-form-control clr-row\">\n      <label class=\"clr-control-label clr-col-4\">\n         {{\"vsan.services.fileservices.wizard.activeDirectoryPage.security.label\" | localized}}\n      </label>\n      <div class=\"clr-col-7\">\n         {{\"vsan.services.fileservices.wizard.activeDirectoryPage.security.authSys\" | localized}}\n         <ng-container *ngTemplateOutlet=\"auth_sys_signpost\"></ng-container>\n      </div>\n   </div>\n\n   <clr-input-container>\n      <label class=\"clr-col-4\">\n         {{\"vsan.services.fileservices.wizard.activeDirectoryPage.input.fsDomain\" | localized}}\n      </label>\n      <input clrInput\n             id=\"{{DOMAIN_NAME_ELEMENT_NAME}}\"\n             class=\"clr-col-7\"\n             formControlName=\"{{DOMAIN_NAME_ELEMENT_NAME}}\"\n             autocomplete=\"off\"\n             vsan-auto-focus/>\n      <clr-control-helper>\n         {{\"vsan.services.fileservices.wizard.activeDirectoryPage.input.fsDomain.tooltip\" | localized}}\n      </clr-control-helper>\n      <clr-control-error *clrIfError=\"validationService.INVALID_NAME_VALIDATION\">\n         {{validationService.getDomainNameValidationResult(domainControl.value)}}\n      </clr-control-error>\n   </clr-input-container>\n\n   <clr-input-container *ngIf=\"dnsServerAvailable\">\n      <label class=\"clr-col-4\">\n         {{\"vsan.services.fileservices.wizard.activeDirectoryPage.input.dnsServer\" | localized}}\n      </label>\n      <input clrInput\n             id=\"{{DNS_SERVERS_ELEMENT_NAME}}\"\n             class=\"clr-col-7\"\n             formControlName=\"{{DNS_SERVERS_ELEMENT_NAME}}\"\n             autocomplete=\"off\"\n             autofocus/>\n      <clr-control-helper>\n         {{\"vsan.services.fileservices.wizard.activeDirectoryPage.input.dnsServer.tooltip\" | localized}}\n      </clr-control-helper>\n      <clr-control-error *clrIfError=\"validationService.INVALID_DNS_VALIDATION\">\n         {{validationService.getDnsServerValidationResult(dnsControl.value)}}\n      </clr-control-error>\n   </clr-input-container>\n\n   <clr-input-container *ngIf=\"dnsServerAvailable\">\n      <label class=\"clr-col-4\">\n         {{\"vsan.services.fileservices.wizard.activeDirectoryPage.input.dnsSuffix\" | localized}}\n      </label>\n      <input clrInput\n             id=\"{{DNS_SUFFIX_ELEMENT_NAME}}\"\n             class=\"clr-col-7\"\n             formControlName=\"{{DNS_SUFFIX_ELEMENT_NAME}}\"\n             autocomplete=\"off\"\n             autofocus/>\n      <clr-control-helper>\n         {{\"vsan.services.fileservices.wizard.activeDirectoryPage.input.dnsSuffix.tooltip\" | localized}}\n      </clr-control-helper>\n      <clr-control-error *clrIfError=\"validationService.INVALID_SUFFIX_VALIDATION\">\n         {{validationService.getDnsSuffixValiationResult(dnsSuffixControl.value)}}\n      </clr-control-error>\n   </clr-input-container>\n\n   <ng-container *ngIf=\"activeDirectorySupported\">\n      <div class=\"clr-form-control clr-row\">\n         <div class=\"clr-col-4 clr-control-label\">\n            {{\"vsan.services.fileservices.wizard.activeDirectoryPage.security.ad.label\" | localized}}\n            <clr-signpost [vsan-signpost-title]=\"'vsan.services.fileservices.wizard.activeDirectoryPage.security.ad.signpost.label' | localized\">\n               <clr-signpost-content *clrIfOpen clrPosition=\"bottom-right\">\n                  {{\"vsan.services.fileservices.domain.type.activedirectory.desc\" | localized}}\n               </clr-signpost-content>\n            </clr-signpost>\n         </div>\n         <div class=\"clr-col-7\">\n            <clr-checkbox-container>\n               <clr-checkbox-wrapper>\n                  <input type=\"checkbox\"\n                         clrCheckbox\n                         id=\"{{ENABLE_AD_ELEMENT_NAME}}\"\n                         formControlName=\"{{ENABLE_AD_ELEMENT_NAME}}\"/>\n                  <label>{{'vsan.services.fileservices.domain.type.activedirectory' | localized}}</label>\n               </clr-checkbox-wrapper>\n            </clr-checkbox-container>\n            <vsan-validation id=\"ad-info\"\n                             *ngIf=\"activeDirectoryEnabled\"\n                             [alertType]=\"'info'\"\n                             [isSmall]=\"true\"\n                             [alert]=\"'vsan.services.fileservices.domain.type.activedirectory.info' | localized\">\n            </vsan-validation>\n         </div>\n      </div>\n      <ng-container *ngIf=\"activeDirectoryEnabled\">\n         <clr-input-container>\n            <label class=\"clr-col-4 indent-label\">\n               {{\"vsan.services.fileservices.wizard.activeDirectoryPage.input.adDomain\" | localized}}\n            </label>\n            <input clrInput\n                   id=\"{{AD_DOMAIN_NAME_ELEMENT_NAME}}\"\n                   formControlName=\"{{AD_DOMAIN_NAME_ELEMENT_NAME}}\"\n                   class=\"clr-col-6\"\n                   [readonly]=\"hasAdConfigured\"\n                   autocomplete=\"off\"/>\n            <clr-control-error *clrIfError=\"validationService.INVALID_AD_DOMAIN_VALIDATION\">\n               {{getAdDomainValidationResult(adDomainNameControl.value)}}\n            </clr-control-error>\n         </clr-input-container>\n         <clr-input-container>\n            <label class=\"clr-col-4 indent-label\">\n               {{\"vsan.services.fileservices.wizard.activeDirectoryPage.input.adDomain.organizationalUnit\" | localized}}\n            </label>\n            <input clrInput\n                   id=\"{{OU_ELEMENT_NAME}}\"\n                   formControlName=\"{{OU_ELEMENT_NAME}}\"\n                   class=\"clr-col-6\"\n                   [readOnly]=\"isEdit && hasAdConfigured\"\n                   autocomplete=\"off\"/>\n            <clr-control-helper>\n               {{\"vsan.services.fileservices.ad.domain.organizationalUnit.desc\" | localized}}\n            </clr-control-helper>\n            <clr-control-error *clrIfError=\"validationService.INVALID_OU_VALIDATION\">\n               {{validationService.getOuValidationResult(organizationalUnitControl.value)}}\n            </clr-control-error>\n         </clr-input-container>\n         <clr-input-container>\n            <label class=\"clr-col-4 indent-label\">\n               {{\"vsan.services.fileservices.wizard.activeDirectoryPage.input.username\" | localized}}\n            </label>\n            <input clrInput\n                   id=\"{{AD_USERNAME_ELEMENT_NAME}}\"\n                   formControlName=\"{{AD_USERNAME_ELEMENT_NAME}}\"\n                   class=\"clr-col-6\"\n                   [readOnly]=\"isEdit && hasAdConfigured\"\n                   autocomplete=\"off\"/>\n            <clr-control-error *clrIfError=\"validationService.INVALID_USERNAME_VALIDATION\">\n               {{validationService.getUsernameValidationResult(adUsernameControl.value)}}\n            </clr-control-error>\n         </clr-input-container>\n         <clr-input-container>\n            <label class=\"clr-col-4 indent-label\">\n               {{\"vsan.services.fileservices.wizard.activeDirectoryPage.input.password\" | localized}}\n            </label>\n            <input clrInput\n                   id=\"{{AD_PASSWORD_ELEMENT_NAME}}\"\n                   formControlName=\"{{AD_PASSWORD_ELEMENT_NAME}}\"\n                   class=\"clr-col-6\"\n                   type=\"password\"\n                   [placeholder]=\"passwordPlaceholder\"\n                   autocomplete=\"off\"/>\n            <clr-control-error *clrIfError=\"'required'\">\n               {{\"vsan.services.fileservices.wizard.activeDirectoryPage.nopassword\" | localized}}\n            </clr-control-error>\n         </clr-input-container>\n      </ng-container>\n   </ng-container>\n</form>\n\n<ng-template #auth_sys_signpost>\n   <clr-signpost id=\"auth-sys-signpost\"\n                 [vsan-signpost-title]=\"'vsan.services.fileservices.wizard.activeDirectoryPage.security.authSys.signpost.label' | localized\">\n      <clr-signpost-content *clrIfOpen>\n         {{\"vsan.services.fileservices.wizard.activeDirectoryPage.security.authSys.info\" | localized}}\n      </clr-signpost-content>\n   </clr-signpost>\n</ng-template>\n","\n      <vsan-flow-wizard\n            [title]=\"title\"\n            [pageSets]=\"pages\"\n            [contextProperties]=\"context\"\n            [startingTaskProperty]=\"taskProperty\"\n            [services]=\"services\">\n      </vsan-flow-wizard>","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {Injectable} from \"@angular/core\";\nimport {IpParserService} from \"@service/ip-parser.service\";\nimport {VsanFileShareUtils} from \"../shares/file-share-util\";\nimport {AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\n/**\n * Service class which contains the validation logic used in the FileServicesDomainPageComponent\n */\n@Injectable()\nexport class DomainValidationService {\n   private readonly OU_SEPARATOR: string = \",\";\n   private readonly ORGANIZATIONAL_UNIT_HIERARCHICAL_SYMBOL: string = \"/\";\n   // The max allowed length of the whole ou input\n   private readonly ORGANIZATIONAL_UNIT_INPUT_MAXIMUM_LENGTH: number = 255;\n   // The max length of the value of ou part, for example if you user inputs `cn=something,ou=org,dc=example,dc=com`,\n   // the whole string cannot have more than 255 chars, the ou value cannot have more than 64 chars\n   private readonly ORGANIZATIONAL_UNIT_VALUE_MAXIMUM_LENGTH: number = 64;\n   private readonly DOMAIN_NAME_MAXIMUM_LENGTH: number = 80;\n   private readonly OU_PREFIX: string = \"ou=\";\n   private static readonly VALID_AD_CHARS: RegExp = /^[A-Za-z0-9\\-._]*$/;\n   private static readonly DNS_SEPARATOR: string = \",\";\n\n   private static readonly INVALID_DOMAIN_NAME_START: RegExp = /^[0-9-._]/;\n   private static readonly INVALID_DOMAIN_NAME_CHARS: RegExp = /[!\"#$%&'()*+,/:;<=>?@[\\]^`{|}~]/;\n\n   readonly INVALID_NAME_VALIDATION: string = \"invalidName\";\n   readonly INVALID_DNS_VALIDATION: string = \"invalidDnsServer\";\n   readonly INVALID_SUFFIX_VALIDATION: string = \"invalidSuffix\";\n   readonly INVALID_AD_DOMAIN_VALIDATION: string = \"invalidAdDomain\";\n   readonly INVALID_OU_VALIDATION: string = \"invalidOu\";\n   readonly INVALID_USERNAME_VALIDATION: string = \"invalidUsername\";\n   readonly INVALID_MASK_VALIDATION: string = \"invalidMask\";\n   readonly INVALID_PREFIX_LENGTH_VALIDATION: string = \"invalidPrefixLength\";\n\n   constructor(private ipParser: IpParserService) {}\n\n   domainNameValidator: ValidatorFn = (control: AbstractControl): ValidationErrors => {\n      const domainName: string = control.value;\n      if (this.getDomainNameValidationResult(domainName)) {\n         return {[this.INVALID_NAME_VALIDATION]: {value: domainName}};\n      }\n      return null;\n   };\n\n   getDomainNameValidationResult(domainName: string): string {\n      if (!domainName) {\n         return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.noname\");\n      }\n      if (domainName.length > this.DOMAIN_NAME_MAXIMUM_LENGTH) {\n         return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.domain.maxlength.error\");\n      }\n      if (DomainValidationService.INVALID_DOMAIN_NAME_START.test(domainName)) {\n         return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.domain.invalidStart\");\n      }\n      if (DomainValidationService.INVALID_DOMAIN_NAME_CHARS.test(domainName)) {\n         return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.domain.invalidChars\");\n      }\n      return null;\n   }\n\n   dnsServerValidator: ValidatorFn = (control: AbstractControl): ValidationErrors => {\n      const dnsServers: string = control.value;\n      if (this.getDnsServerValidationResult(dnsServers)) {\n         return {[this.INVALID_DNS_VALIDATION]: {value: dnsServers}};\n      }\n      return null;\n   };\n\n   getDnsServerValidationResult(dnsServerStr: string): string {\n      if (!dnsServerStr) {\n         return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.input.dnsServer.empty\");\n      }\n      const dnsServers: string[] = dnsServerStr.split(DomainValidationService.DNS_SEPARATOR);\n      const invalidDnsServers: string[] = dnsServers.filter(dns =>\n            !this.ipParser.isIpv4AddressValid(dns) && !this.ipParser.isIpv6AddressValid(dns));\n      if (!VsanUiUtils.isEmpty(invalidDnsServers)) {\n         return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.input.dnsServer.error\");\n      }\n      return null;\n   }\n\n   dnsSuffixValidator: ValidatorFn = (control: AbstractControl): ValidationErrors => {\n      const dnsSuffixes: string = control.value;\n      if (this.getDnsSuffixValiationResult(dnsSuffixes)) {\n         return {[this.INVALID_SUFFIX_VALIDATION]: {value: dnsSuffixes}};\n      }\n      return null;\n   };\n\n   getDnsSuffixValiationResult(dnsSuffixes: string): string {\n      if (!dnsSuffixes) {\n         return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.input.dnsSuffix.empty\");\n      }\n      const suffixes: string[] = dnsSuffixes.split(DomainValidationService.DNS_SEPARATOR)\n            .filter(suffix => suffix.trim()); // filter the empty dns suffix. User input could be 'example.com,'\n      const invalidSuffixes: string[] = suffixes.filter(suffix => !this.validateSingleSuffix(suffix.trim()));\n      if (!VsanUiUtils.isEmpty(invalidSuffixes)) {\n         return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.input.dnsSuffix.error\");\n      }\n      return null;\n   }\n\n   adDomainValidator: ValidatorFn = (control: AbstractControl): ValidationErrors => {\n      const adDomain: string = control.value;\n      if (this.getAdDomainValidationResult(adDomain)) {\n         return {[this.INVALID_AD_DOMAIN_VALIDATION]: {value: adDomain}};\n      }\n      return null;\n   };\n\n   getAdDomainValidationResult(adDomain: string): string {\n      if (!adDomain) {\n         return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.noAdDomain\");\n      }\n      if (!DomainValidationService.VALID_AD_CHARS.test(adDomain)) {\n         return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.adDomain.invalidChars\");\n      }\n      return null;\n   }\n\n   ouValidator: ValidatorFn = (control: AbstractControl): ValidationErrors => {\n      const ou: string = control.value;\n      if (this.getOuValidationResult(ou)) {\n         return {[this.INVALID_OU_VALIDATION]: {value: ou}};\n      }\n      return null;\n   };\n\n   getOuValidationResult(ou: string): string {\n      // ou is not a must have, it can be unset\n      if (!ou) {\n         return null;\n      }\n      if (ou.length > this.ORGANIZATIONAL_UNIT_INPUT_MAXIMUM_LENGTH) {\n         return VsanUiUtils.getString(\n               \"vsan.services.fileservices.wizard.activeDirectoryPage.organizationalUnit.wholeInput.error.maxLength\");\n      }\n      if (ou.startsWith(this.ORGANIZATIONAL_UNIT_HIERARCHICAL_SYMBOL)) {\n         return VsanUiUtils.getString(\n               \"vsan.services.fileservices.wizard.activeDirectoryPage.organizationalUnit.error.startWith\");\n      }\n      if (ou.endsWith(this.ORGANIZATIONAL_UNIT_HIERARCHICAL_SYMBOL)) {\n         return VsanUiUtils.getString(\n               \"vsan.services.fileservices.wizard.activeDirectoryPage.organizationalUnit.error.endWith\");\n      }\n      if (ou.includes(this.ORGANIZATIONAL_UNIT_HIERARCHICAL_SYMBOL)) {\n         // ou with sub-ou, 'vmware/cpbu'\n         const names: string[] = ou.split(this.ORGANIZATIONAL_UNIT_HIERARCHICAL_SYMBOL);\n         if (names.some(name => !name)) {\n            return VsanUiUtils.getString(\n                  \"vsan.services.fileservices.wizard.activeDirectoryPage.organizationalUnit.error.containSlash\");\n         }\n         if (names.some(name => VsanFileShareUtils.INVALID_OU_CHARS.test(name))) {\n            return VsanUiUtils.getString(\n                  \"vsan.services.fileservices.wizard.activeDirectoryPage.organizationalUnit.error.invalidChars\");\n         }\n      } else if (ou.includes(this.OU_SEPARATOR)) {\n         // ou with ad format, 'cn=something,ou=org,dc=example,dc=com'\n         const parts: string[] = ou.split(this.OU_SEPARATOR).map(part => part.toLowerCase());\n         const ouPart: string = parts.find(part => part.startsWith(this.OU_PREFIX));\n         if (!ouPart) {\n            return VsanUiUtils.getString(\n                  \"vsan.services.fileservices.wizard.activeDirectoryPage.organizationalUnit.error.notExists\");\n         }\n         const ouValue: string = ouPart.replace(this.OU_PREFIX, \"\");\n         if (VsanUiUtils.isEmpty(ouValue)) {\n            return VsanUiUtils.getString(\n                  \"vsan.services.fileservices.wizard.activeDirectoryPage.organizationalUnit.error.notExists\");\n         }\n         if (ouValue.length > this.ORGANIZATIONAL_UNIT_VALUE_MAXIMUM_LENGTH) {\n            return VsanUiUtils.getString(\n                  \"vsan.services.fileservices.wizard.activeDirectoryPage.organizationalUnit.error.maxLength\");\n         }\n         if (VsanFileShareUtils.INVALID_OU_CHARS.test(ouValue)) {\n            return VsanUiUtils.getString(\n                  \"vsan.services.fileservices.wizard.activeDirectoryPage.organizationalUnit.error.invalidChars\");\n         }\n      } else if (VsanFileShareUtils.INVALID_OU_CHARS.test(ou)) {\n         return VsanUiUtils.getString(\n               \"vsan.services.fileservices.wizard.activeDirectoryPage.organizationalUnit.error.invalidChars\");\n      }\n      return null;\n   }\n\n   usernameValidator: ValidatorFn = (control: AbstractControl): ValidationErrors => {\n      const username: string = control.value;\n      if (this.getUsernameValidationResult(username)) {\n         return {[this.INVALID_USERNAME_VALIDATION]: {value: username}};\n      }\n      return null;\n   };\n\n   getUsernameValidationResult(username: string): string {\n      if (!username) {\n         return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.nousername\");\n      }\n      if (!DomainValidationService.VALID_AD_CHARS.test(username)) {\n         return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.username.invalidChars\");\n      }\n      return null;\n   }\n\n   /**\n    * The suffix should be something like 'example.com' or 'eng.example.com'\n    * true if it follows the pattern, otherwise false\n    */\n   private validateSingleSuffix(suffix: string): boolean {\n      // we allow empty suffixes\n      if (suffix === \"\") {\n         return true;\n      }\n      const suffixValidator: RegExp = /^[\\w.-]+(?:\\.[\\w.-]+)+[\\w\\-._~]+$/;\n      return suffixValidator.test(suffix);\n   }\n\n   maskValidator: ValidatorFn = (control: AbstractControl): ValidationErrors => {\n      const mask: string = control.value;\n      if (this.getMaskValidationResult(mask)) {\n         return {[this.INVALID_MASK_VALIDATION]: {value: mask}};\n      }\n      return null;\n   };\n\n   prefixLengthValidator: ValidatorFn = (control: AbstractControl): ValidationErrors => {\n      const prefixLength: number = control.value;\n      if (this.getPrefixLengthValidationResult(prefixLength)) {\n         return {[this.INVALID_PREFIX_LENGTH_VALIDATION]: {value: prefixLength}};\n      }\n      return null;\n   };\n\n   getMaskValidationResult(mask: string): string {\n      if (!mask) {\n         return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.ipPool.validation.mask.empty\");\n      }\n      if (!this.ipParser.isSubnetMaskValid(mask)) {\n         return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.ipPool.validation.mask.invalid\");\n      }\n      return null;\n   }\n\n   getPrefixLengthValidationResult(prefixLength: number): string {\n      if (prefixLength < 1 || prefixLength > 128) {\n         return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.ipPool.validation.prefixLength.invalid\");\n      }\n      return null;\n   }\n}\n","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit, ViewChild} from \"@angular/core\";\nimport {InputProperty, OutputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {OnValidate, PageControls} from \"@component/wizard/flow-wizard.component\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Logger} from \"@util/logger\";\nimport {IP} from \"./ip.data\";\nimport {VsanFileServiceHostIpSettings} from \"@generated/vsan-file-service-host-ip-settings\";\nimport {VsanFileServiceCommonConfig} from \"@generated/vsan-file-service-common-config\";\nimport {IpAddressesRequestSpec} from \"@generated/ip-addresses-request-spec\";\nimport {NetworkService} from \"@generated/network-service\";\nimport {IpParserService} from \"@service/ip-parser.service\";\nimport {VsanFileServiceConfigService} from \"@generated/vsan-file-service-config-service\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {AffinitySiteLocation} from \"@generated/affinity-site-location\";\nimport {VsanStretchedClusterService} from \"@generated/vsan-stretched-cluster-service\";\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {FileServiceUtil} from \"../file-service-util\";\nimport {VsanFileServicePrecheckResult} from \"@generated/vsan-file-service-precheck-result\";\nimport {OvfOption, OvfSettings} from \"../shared/file-services-ovf-settings.data\";\nimport {Version} from \"@util/version\";\nimport {\n   AbstractControl,\n   FormArray,\n   FormBuilder,\n   FormControl,\n   FormGroup,\n   ValidationErrors,\n   ValidatorFn,\n   Validators} from \"@angular/forms\";\nimport {ClrForm} from \"@clr/angular\";\nimport {ReferenceWatcher} from \"@util/reference-watcher\";\n\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.services.fileservices.wizard.ipPool.input.pool.title\"),\n      null,\n      [VsanStretchedClusterService],\n)\n@Component({\n   templateUrl: \"file-services-ip-pool-page.html\",\n   styleUrls: [\"file-services-ip-pool-page.scss\"],\n})\nexport class FileServicesIpPoolPageComponent implements OnInit, OnValidate {\n   private static readonly DNS_SEPARATOR: string = \",\";\n   // At the first release, the max container limit is 8\n   private readonly MAX_CONTAINER_NUMBER_EARLY: number = 8;\n   // From 70U1, the limitation is extended to 32\n   private readonly MAX_CONTAINER_NUMBER_EXTEND: number = 32;\n   // From 70U2, the limitation is extended to 64 if largeScaleSupport is on\n   private readonly MAX_CONTAINER_NUMBER_LARGE_SCALE: number = 64;\n\n   private readonly AFFINITY_SITE_SUPPORTED_FS_VERSION: string = \"1.2.0\";\n\n   readonly ISDEFAULT_ELEMENT_NAME: string = \"primary\";\n   readonly IPADDRESS_ELEMENT_NAME: string = \"ipAddress\";\n   readonly DNSNAME_ELEMENT_NAME: string = \"dnsName\";\n   readonly AFFINITY_ELEMENT_NAME: string = \"affinityLocation\";\n\n   readonly REQUIRED_VALIDATION: string = \"required\";\n   readonly IPV4_VALIDATION: string = \"ipv4Required\";\n   readonly IPV6_VALIDATION: string = \"ipv6Required\";\n   readonly IP_INVALID_VALIDATION: string = \"ipInvalid\";\n   readonly IP_DUPLICATE_VALIDATION: string = \"ipDuplicate\";\n   readonly IP_SAME_NETWORK_VALIDATION: string = \"ipNotSameNetwork\";\n   readonly DNS_INVALID_VALIDATION: string = \"dnsInvalid\";\n   readonly DNS_DUPLICATE_VALIDATION: string = \"dnsDuplicate\";\n   readonly DNS_AD_VALIATION: string = \"dnsEndsWithAdDomain\";\n\n   @InputProperty()\n   @OutputProperty()\n   fileServiceConfig: VsanFileServiceCommonConfig;\n\n   @InputProperty()\n   clusterRef: ManagedObject;\n\n   @InputProperty()\n   isEdit: boolean; // isEdit = true, when the user started the Edit workflow\n\n   @InputProperty()\n   pageControls: PageControls;\n\n   @InputProperty()\n   protocol: IP;\n\n   // user can open the wizard to recreate the FS domain if it was not created successfully before.\n   @InputProperty()\n   isRecreateDomain: boolean;\n\n   @InputProperty()\n   numberOfHosts: number;\n\n   @InputProperty()\n   originalDomainName: string;\n\n   @InputProperty(InputProperty.required(false))\n   ovfSettings: OvfSettings;\n\n   @InputProperty()\n   capabilityData: VsanCapabilityData;\n\n   @InputProperty()\n   largeScaleClusterSupported: boolean;\n\n   @OutputProperty()\n   affinitySiteSupported: boolean;\n\n   @OutputProperty()\n   activeDirectorySupported: boolean;\n\n   @InputProperty()\n   @OutputProperty()\n   isVsanStretchedCluster: boolean;\n\n   @InputProperty()\n   @OutputProperty()\n   availableDomains: DomainOrHostData[];\n\n   @OutputProperty()\n   advancedPreflightCheckSupported: boolean;\n\n   @ViewChild(ClrForm)\n   clrForm: ClrForm;\n\n   affinitySites: AffinitySiteLocation[] = [\n         AffinitySiteLocation.PREFERRED_DOMAIN,\n         AffinitySiteLocation.NON_PREFERRED_DOMAIN,\n         AffinitySiteLocation.NONE];\n\n   originalNumOfIpSettings: number = 0;\n   isDnsNameWarningShown: boolean = false;\n   isAffinitySiteWarningShown: boolean = false;\n   ipSettingsForm: FormGroup;\n\n   private editPrimaryIpSupported: boolean;\n\n   constructor(private networkService: NetworkService,\n         private fileService: VsanFileServiceConfigService,\n         private ipParser: IpParserService,\n         private formBuilder: FormBuilder,\n         private refWatcher: ReferenceWatcher) {}\n\n   async ngOnInit(): Promise<void> {\n      this.originalNumOfIpSettings = this.ipSettings.length;\n      if (this.maxNumberOfContainers && !this.originalNumOfIpSettings) {\n         for (let i: number = 0; i < this.maxNumberOfContainers; ++i) {\n            this.ipSettings.push(\n                  VsanFileServiceHostIpSettings.Factory.create(\n                        false, \"\", \"\", AffinitySiteLocation.NONE));\n         }\n         this.originalNumOfIpSettings = this.maxNumberOfContainers;\n         // Make the first IP the default one\n         this.ipSettings[0].isDefault = true;\n      }\n      // We need to display as many IP inputs as the number of the hosts, if there are new hosts added\n      if (this.maxNumberOfContainers > this.originalNumOfIpSettings) {\n         const emptyIpSettings: VsanFileServiceHostIpSettings[] = [];\n         for (let i: number = this.ipSettings.length; i < this.maxNumberOfContainers; ++i) {\n            emptyIpSettings.push(VsanFileServiceHostIpSettings.Factory.create(\n                  false, \"\", \"\", AffinitySiteLocation.NONE));\n         }\n         this.fileServiceConfig.domainConfig.ipSettings = this.ipSettings.concat(emptyIpSettings);\n      }\n\n      try {\n         this.pageControls.setBusyState();\n         this.isAffinitySiteWarningShown = false;\n         const preflightCheckResult: VsanFileServicePrecheckResult =\n               await this.fileService.getPrecheckResult(\n                     ManagedObject.contextObject,\n                     this.isEdit && this.originalDomainName ? this.fileServiceConfig.domainConfig : null,\n                     false);\n         this.affinitySiteSupported = this.isAffinitySiteSupported(preflightCheckResult);\n         this.activeDirectorySupported = preflightCheckResult.activeDirectorySupported;\n         this.editPrimaryIpSupported = preflightCheckResult.editPrimaryIpSupported;\n         this.advancedPreflightCheckSupported = preflightCheckResult.advancedPreflightCheckSupported;\n         this.pageControls.rebuildToc();\n      } catch (err) {\n         Logger.error(err);\n         // Display an error banner on the UI to let user know that the affinity site selection is not available\n         // because of an error. And we should only display it when it's a stretched cluster with available domains,\n         // otherwise we don't display it even the API fails (because right now this check is for affinity site only)\n         this.isAffinitySiteWarningShown = this.isVsanStretchedCluster && !VsanUiUtils.isEmpty(this.availableDomains);\n         this.affinitySiteSupported = false;\n      } finally {\n         this.initFormGroup();\n         this.pageControls.clearBusyState();\n      }\n   }\n\n   invalidate(): void {\n      this.pageControls.rebuildToc();\n   }\n\n   generateIpAddresses = () => {\n      // If the new IP address is valid, populate the IP address for all\n      // consecutive hosts\n      const startingIP: string = this.ipSettingsFormGroups[0].get(this.IPADDRESS_ELEMENT_NAME).value;\n\n      if (!this.protocol.validateAddress(startingIP)) {\n         Logger.warn(\"Empty or invalid starting IP address.\");\n         return;\n      }\n\n      const ipv4RequestSpec: IpAddressesRequestSpec = IpAddressesRequestSpec.Factory.create(\n            startingIP,\n            this.fileServiceConfig.domainConfig.mask,\n            this.ipSettings.length);\n\n      this.pageControls.setBusyState();\n      this.networkService.getConsequentHostAddresses(ipv4RequestSpec)\n            .then((result: string[]) => {\n               this.ipSettingsFormGroups.filter((item: FormGroup, index: number) => index > 0)\n                     .forEach(ipSettings => ipSettings.get(this.IPADDRESS_ELEMENT_NAME).setValue(result.shift()));\n               this.invalidate();\n               this.pageControls.clearBusyState();\n            })\n            .catch((error: string) => {\n               this.pageControls.clearBusyState();\n               this.pageControls.addValidationErrors([error]);\n            });\n   };\n\n   isAddAllowed(): boolean {\n      return this.maxNumberOfContainers > this.ipSettingsFormGroups.length;\n   }\n\n   addIpConfig(): void {\n      const newItem: VsanFileServiceHostIpSettings = VsanFileServiceHostIpSettings.Factory.create(\n            false, \"\", \"\", AffinitySiteLocation.NONE);\n      this.ipSettingsFormControl.push(this.createIpSettingGroup(newItem));\n      this.ipSettings.push(newItem);\n   }\n\n   removeIpConfig(index: number): void {\n      this.ipSettingsFormControl.removeAt(index);\n      this.ipSettings.splice(index, 1);\n   }\n\n   /**\n    * The wizard framework calls this method to check if all the inputs are valid in the current reactive form\n    * This is required for the views which has inline validations. Otherwise you have to add an extra error\n    * message in the validate method to stop the wizard from going to next view.\n    */\n   inlineValidate(): boolean {\n      this.clrForm.markAsTouched();\n      return this.ipSettingsForm.valid;\n   }\n\n   validate(): string[] | Promise<string[]> {\n      this.pageControls.setBusyState();\n      return this.fileService.getPrecheckResult(ManagedObject.contextObject, this.fileServiceConfig.domainConfig, false)\n            .then(result => {\n               if (result.domainConfigIssue) {\n                  return [result.domainConfigIssue];\n               }\n               return null;\n            })\n            .catch(err => {\n               Logger.error(err, \"Failed to validate the configuration on cluster.\");\n               // we should not block the user action if this API fails here, because it could be a fake issue.\n               // If there is really something wrong, the reconfigure FS task eventually fails w/o data loss.\n               // return null here so user is able to go to the next page.\n               return null;\n            })\n            .finally(() => {\n               this.pageControls.clearBusyState();\n            });\n   }\n\n   canRemoveIp = (ipSettingsGroup: FormGroup, index: number): boolean => {\n      // Cannot remove the primary IP\n      const primaryIpControl: FormControl = this.ipSettingsForm.get(this.ISDEFAULT_ELEMENT_NAME) as FormControl;\n      if (primaryIpControl.value === index) {\n         return false;\n      }\n      // Allow this if backend API supports - it didn't in 7.0 release, but it does since 70u1\n      if (this.capabilityData.isIpRemovalInEditModeSupported) {\n         return true;\n      }\n\n      // Keep below checks for 7.0 in linked mode\n\n      // Allow user to remove IPs if the domain is not created successfully\n      if (this.isRecreateDomain) {\n         return true;\n      }\n      // In edit mode, we only allow to remove the ips for new added hosts\n      // The existing IPs are not removable because of the backend API limitation\n      return !(this.isEdit && index < this.originalNumOfIpSettings);\n   };\n\n   /**\n    * Use this method to decide if the ip input element should be displayed\n    */\n   isEditIpAllowed = (ipSettingsGroup: FormGroup, index: number): boolean => {\n      // We allow user to input the IP address when 1) configure the domain,\n      // or 2) edit the domain after adding a new host\n      // or 3) recreate the file service domain\n      // index >= this.originalNumOfIpSettings means this IP input is for the new host\n      if (this.isRecreateDomain) {\n         return true;\n      }\n\n      // In 8.0 we allow user to edit the primary IP of an existing fs domain\n      if (this.editPrimaryIpSupported) {\n         return true;\n      }\n      if (this.isEdit) {\n         // Cannot edit the primary IP in edit mode\n         if (ipSettingsGroup.get(this.ISDEFAULT_ELEMENT_NAME).value) {\n            return false;\n         }\n         // from 7.0 u1, the ip settings can be changed unless it's the primary IP\n         return this.capabilityData.isIpRemovalInEditModeSupported\n               || index >= this.originalNumOfIpSettings;\n      }\n      return true;\n   };\n\n   isChangePrimaryIpAllowed = (): boolean => {\n      // user can change the primary ip if there is no domain yet\n      // Start from 8.0 we allow user to change the primary IP of an existing FS domain\n      return this.editPrimaryIpSupported || this.isCreatingNewDomain;\n   };\n\n   get isCreatingNewDomain(): boolean {\n      return this.isRecreateDomain || !this.isEdit;\n   }\n\n   async lookupDnsNames(): Promise<void> {\n      if (this.hasInvalidIpAddress()) {\n         this.pageControls.addValidationErrors(\n               [VsanUiUtils.getString(\"vsan.services.fileservices.wizard.dnslookup.error\")]);\n         return;\n      }\n      this.pageControls.clearValidationErrors();\n      this.pageControls.setBusyState(VsanUiUtils.getString(\"vsan.loading\"));\n      try {\n         this.isDnsNameWarningShown = false;\n         const dnsNames: string[] =\n               await this.fileService.getDnsNames(this.clusterRef, this.ipAddresses, this.dnsServers);\n         // When the DNS name(s) cannot be obtained based on the IP addresses and DNS servers,\n         // a warning message is displayed.\n         this.isDnsNameWarningShown = VsanUiUtils.isEmpty(dnsNames) || dnsNames.every(name => !name);\n         if (this.isDnsNameWarningShown) {\n            return;\n         }\n\n         this.ipSettingsFormGroups.forEach(ipSettingsGroup => {\n            let fqdn: string = dnsNames.shift();\n            if (fqdn.endsWith(\".\")) {\n               fqdn = fqdn.substr(0, fqdn.length - 1);\n            }\n            ipSettingsGroup.get(this.DNSNAME_ELEMENT_NAME).setValue(fqdn);\n         });\n      } catch (error) {\n         this.isDnsNameWarningShown = true;\n         Logger.error(\"Unable to obtain FQDN based on IP addresses and DNS servers.\");\n      } finally {\n         this.pageControls.clearBusyState();\n      }\n   }\n\n   get dnsServers(): string[] {\n      return this.fileServiceConfig.domainConfig.dnsServers\n            .split(FileServicesIpPoolPageComponent.DNS_SEPARATOR)\n            .map(dns => dns.trim())\n            .filter(dns => dns);\n   }\n\n   isGenerateIpAddressesEnabled(): boolean {\n      // Don't allow 'auto fill' in edit mode unless it's recreating fs domain\n      return this.isCreatingNewDomain && this.isLookupDnsNameEnabled();\n   }\n\n   isLookupDnsNameEnabled(): boolean {\n      return this.ipSettingsFormGroups?.some(formGroup =>\n                  !VsanUiUtils.isEmpty(formGroup.get(this.IPADDRESS_ELEMENT_NAME).value));\n   }\n\n   getAffinitySiteLabel(site: AffinitySiteLocation): string {\n      return FileServiceUtil.getAffinitySiteLabel(site, this.availableDomains);\n   }\n\n   /**\n    * If the ovf file is existing or provided by user, the result from preflight check API is correct\n    * If the ovf file is auto-downloaded, we need to check the file service API version\n    */\n   private isAffinitySiteSupported(preflightCheckResult: VsanFileServicePrecheckResult): boolean {\n      if (this.isEdit\n            || !this.ovfSettings // ovfSettings is null means the current OVF file is latest\n            || [OvfOption.MANUAL, OvfOption.EXISTING].includes(this.ovfSettings.ovfOption)) {\n         return preflightCheckResult.affinitySiteSupported;\n      } else {\n         return new Version(preflightCheckResult.fileServiceVersion)\n               .compare(new Version(this.AFFINITY_SITE_SUPPORTED_FS_VERSION)) >= 0;\n      }\n   }\n\n   private get maxNumberOfContainers(): number {\n      return Math.min(this.numberOfHosts, this.maxSupportedNumberOfContainers);\n   }\n\n   private get maxSupportedNumberOfContainers(): number {\n      if (this.largeScaleClusterSupported) {\n         return this.MAX_CONTAINER_NUMBER_LARGE_SCALE;\n      } else if (this.activeDirectorySupported) {\n         return this.MAX_CONTAINER_NUMBER_EXTEND;\n      } else {\n         return this.MAX_CONTAINER_NUMBER_EARLY;\n      }\n   }\n\n   private initFormGroup(): void {\n      this.ipSettingsForm = this.formBuilder.group({\n         primary: this.ipSettings.findIndex(ipSetting => ipSetting.isDefault),\n         ipSettings: new FormArray(this.ipSettings.map(ipSetting => this.createIpSettingGroup(ipSetting))),\n      });\n      const primaryIpControl: FormControl = this.ipSettingsForm.get(this.ISDEFAULT_ELEMENT_NAME) as FormControl;\n      this.refWatcher.watchSubscriptionRef(primaryIpControl.valueChanges.subscribe(index => {\n         this.ipSettings.forEach(ipSetting => ipSetting.isDefault = false);\n         this.ipSettings[index].isDefault = true;\n         this.invalidate();\n      }));\n      this.ipSettingsFormGroups.forEach(groupControl => {\n         this.refWatcher.watchSubscriptionRef(groupControl.valueChanges.subscribe(values => {\n            // cannot use the index from the above '.forEach' because the index may be out of the array bounds.\n            // In my test, there are 2 groups. After I click the 'Lookup IP' button, it starts from 3.\n            const index: number = this.ipSettingsFormGroups.indexOf(groupControl);\n            this.ipSettings[index].address = values.ipAddress;\n            this.ipSettings[index].dnsName = values.dnsName;\n            if (this.affinitySiteSupported) {\n               this.ipSettings[index].affinityLocation = values.affinityLocation;\n            }\n            this.invalidate();\n         }));\n      });\n   }\n\n   /**\n    * Validate if the IPs are 1) valid ipv4 format, 2) is unique, and 3) is in the same network with gateway/mask\n    * Cannot move to domain-validation.service because 2) & 3) need other domain configurations, which will be\n    * unavailable in domain-validation.service\n    */\n   private ipValidator: ValidatorFn = (control: AbstractControl): ValidationErrors => {\n      if (VsanUiUtils.isEmpty(control.value)) {\n         return null;\n      }\n      if (!this.isIpValid(control.value)) {\n         return {[this.IP_INVALID_VALIDATION]: {value: control.value}};\n      }\n      if (!this.isUniqueIp(control.value)) {\n         return {[this.IP_DUPLICATE_VALIDATION]: {value: control.value}};\n      }\n      if (!this.isIpNetworkValid(control.value)) {\n         return {[this.IP_SAME_NETWORK_VALIDATION]: {value: control.value}};\n      }\n      return null;\n   };\n\n   /**\n    * Validate if the fqdn is 1) unique, 2)doesn't have invalid chars\n    * Cannot move to domain-validation.service because 1) needs other domain configurations, which will be\n    * unavailable in domain-validation.service\n    */\n   private dnsNameValidator: ValidatorFn = (control: AbstractControl): ValidationErrors => {\n      if (VsanUiUtils.isEmpty(control.value)) {\n         return null;\n      }\n      if (!this.isUniqueFqdn(control.value)) {\n         return {[this.DNS_DUPLICATE_VALIDATION]: {value: control.value}};\n      }\n      if (!this.isValidDnsName(control.value)) {\n         return {[this.DNS_INVALID_VALIDATION]: {value: control.value}};\n      }\n      return null;\n   };\n\n   private isIpValid(ip: string): boolean {\n      return this.protocol === IP.v4\n            ? this.ipParser.isIpv4AddressValid(ip)\n            : this.ipParser.isIpv6AddressValid(ip);\n   }\n\n   /**\n    * Check if the ip is unique in the given inputs\n    */\n   private isUniqueIp(ipAddress: string): boolean {\n      const count: number =\n            this.ipSettingsFormGroups\n                  ?.filter(formGroup => formGroup.get(this.IPADDRESS_ELEMENT_NAME).value === ipAddress).length;\n      return count === 1;\n   }\n\n   private isIpNetworkValid(ip: string): boolean {\n      if (this.protocol === IP.v6) {\n         // The network validation (UI and backend) for ipv6 addresses does not include validation for same ipv6 subnets.\n         // Return true to have consistent validations (UI and API), but keep the method to make an easy change if needed.\n         // More info in https://bugzilla.eng.vmware.com/show_bug.cgi?id=2583003\n         return true;\n      }\n      const mask: string = this.fileServiceConfig.domainConfig.mask.trim();\n      const gateway: string = this.fileServiceConfig.domainConfig.gatewayAddress.trim();\n      return this.ipParser.isSameIpv4Subnet(ip, gateway, mask);\n   }\n\n   /**\n    * Check if the fqdn is unique in the given inputs\n    */\n   private isUniqueFqdn(fqdn: string): boolean {\n      const count: number =\n            this.ipSettingsFormGroups\n                  ?.filter(formGroup => formGroup.get(this.DNSNAME_ELEMENT_NAME).value === fqdn).length;\n      return count === 1;\n   }\n\n   private get ipSettings(): VsanFileServiceHostIpSettings[] {\n      return this.fileServiceConfig.domainConfig.ipSettings;\n   }\n\n   private get adDomain(): string {\n      return this.fileServiceConfig.domainConfig.adConfig?.domain?.trim();\n   }\n\n   private static readonly DNS_NAME_REGEX: RegExp =\n         /(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{0,62}[a-zA-Z0-9]\\.)+[a-zA-Z]{2,63}$)/;\n\n   private isValidDnsName(dnsName: string): boolean {\n      return FileServicesIpPoolPageComponent.DNS_NAME_REGEX.test(dnsName);\n   }\n\n   private createIpSettingGroup(ipSettings: VsanFileServiceHostIpSettings): FormGroup {\n      const fields: any = {\n         [this.ISDEFAULT_ELEMENT_NAME]: [ipSettings.isDefault],\n         [this.IPADDRESS_ELEMENT_NAME]: [ipSettings.address, [Validators.required, this.ipValidator]],\n         [this.DNSNAME_ELEMENT_NAME]: [ipSettings.dnsName, [Validators.required, this.dnsNameValidator]],\n      };\n      if (this.affinitySiteSupported) {\n         fields[this.AFFINITY_ELEMENT_NAME] = [ipSettings.affinityLocation];\n      }\n      return this.formBuilder.group(fields);\n   }\n\n   get ipSettingsFormGroups(): FormGroup[] {\n      return this.ipSettingsFormControl?.controls as FormGroup[];\n   }\n\n   private hasInvalidIpAddress(): boolean {\n      return this.ipSettingsFormGroups?.some(formGroup => formGroup.get(this.IPADDRESS_ELEMENT_NAME).invalid);\n   }\n\n   private get ipSettingsFormControl(): FormArray {\n      return this.ipSettingsForm?.controls?.ipSettings as FormArray;\n   }\n\n   private get ipAddresses(): string[] {\n      return this.ipSettingsFormGroups?.map(ipSetting => ipSetting.get(this.IPADDRESS_ELEMENT_NAME).value.trim());\n   }\n}\n","<!--Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div id=\"ip-recommendation\">\n   {{\"vsan.services.fileservices.wizard.ipPool.input.pool.recommendation\" | localized}}\n</div>\n<vsan-validation id=\"ip-default\"\n                 alertType=\"info\"\n                 [allowClose]=\"false\"\n                 [isSmall]=\"true\"\n                 [alert]=\"'vsan.services.fileservices.wizard.ipPool.input.default.description' | localized\">\n</vsan-validation>\n<vsan-validation id=\"dns-name-warning\"\n                 *ngIf=\"isDnsNameWarningShown\"\n                 alertType=\"warning\"\n                 [allowClose]=\"false\"\n                 [isSmall]=\"true\"\n                 [alert]=\"'vsan.services.fileservices.wizard.ipPool.input.dns.lookup.warning' | localized\">\n</vsan-validation>\n<vsan-validation id=\"affinity-site-warning\"\n                 *ngIf=\"isAffinitySiteWarningShown\"\n                 alertType=\"warning\"\n                 [allowClose]=\"false\"\n                 [isSmall]=\"true\"\n                 [alert]=\"'vsan.services.fileservices.wizard.ipPool.input.affinitySite.warning' | localized\">\n</vsan-validation>\n<div class=\"clr-row header-row\">\n   <div *ngIf=\"isChangePrimaryIpAllowed()\"\n        class=\"clr-col-1\">\n      {{\"vsan.services.fileservices.wizard.ipPool.input.default.title\" | localized}}\n   </div>\n   <div class=\"header-cell\" [ngClass]=\"affinitySiteSupported && isVsanStretchedCluster? 'clr-col-3' : 'clr-col-5'\">\n      <span>{{\"vsan.services.fileservices.wizard.ipPool.input.ipaddress.title\" | localized}}</span>\n      <clr-signpost *ngIf=\"isGenerateIpAddressesEnabled()\"\n                    [vsan-signpost-title]=\"'vsan.services.fileservices.wizard.ipPool.input.ipaddress.autofill.signpost.label' | localized\">\n         <clr-signpost-content *clrIfOpen [clrPosition]=\"'left-middle'\">\n            {{\"vsan.services.fileservices.wizard.ipPool.input.ipaddress.autofill.description\" | localized}}\n         </clr-signpost-content>\n      </clr-signpost>\n      <button id=\"generate-ip-addresses\"\n              vsan-show-title\n              class=\"btn btn-link btn-sm\"\n              *ngIf=\"isGenerateIpAddressesEnabled()\"\n              (click)=\"generateIpAddresses()\">\n         {{\"vsan.services.fileservices.wizard.ipPool.input.ipaddress.autofill.title\" | localized}}\n      </button>\n   </div>\n   <div class=\"header-cell\" [ngClass]=\"affinitySiteSupported && isVsanStretchedCluster ? 'clr-col-4' : 'clr-col-5'\">\n      <span>{{\"vsan.services.fileservices.wizard.ipPool.input.dns.title\" | localized}}</span>\n      <clr-signpost *ngIf=\"isLookupDnsNameEnabled()\"\n                    [vsan-signpost-title]=\"'vsan.services.fileservices.wizard.ipPool.input.dns.lookup.signpost.label' | localized\">\n         <clr-signpost-content [clrPosition]=\"'left-middle'\" *clrIfOpen>\n            {{\"vsan.services.fileservices.wizard.ipPool.input.dns.lookup.description\" | localized}}\n         </clr-signpost-content>\n      </clr-signpost>\n      <button id=\"lookup-dns\"\n              vsan-show-title\n              class=\"btn btn-link btn-sm\"\n              *ngIf=\"isLookupDnsNameEnabled()\"\n              (click)=\"lookupDnsNames()\">\n         {{\"vsan.services.fileservices.wizard.ipPool.input.dns.lookup.title\" | localized}}\n      </button>\n   </div>\n   <div *ngIf=\"affinitySiteSupported && isVsanStretchedCluster\" class=\"header-cell clr-col-3\">\n      <span>{{\"vsan.fileservices.affinitySite.label\" | localized}}</span>\n      <clr-signpost [vsan-signpost-title]=\"'vsan.fileservices.affinitySite.signpost.label' | localized\">\n         <clr-signpost-content [clrPosition]=\"'left-middle'\" *clrIfOpen>\n            {{\"vsan.fileservices.configure.affinitySite.signpost\" | localized}}\n         </clr-signpost-content>\n      </clr-signpost>\n   </div>\n</div>\n<form *ngIf=\"ipSettingsForm\" [formGroup]=\"ipSettingsForm\" clrForm clrLayout=\"horizontal\">\n   <div *ngFor=\"let ipSettingsGroup of ipSettingsFormGroups; let i=index\"\n        id=\"ip-table-row-{{i}}\"\n        [attr.aria-label]=\"'vsan.services.fileservices.wizard.ipPool.input.ipaddress.title' | localized\"\n        role=\"group\"\n        class=\"clr-row\">\n      <clr-radio-wrapper *ngIf=\"isChangePrimaryIpAllowed()\"\n                         class=\"clr-col-1 primary-ip-selection\">\n         <input id=\"default-ip-{{i}}\"\n                clrRadio\n                type=\"radio\"\n                formControlName=\"{{ISDEFAULT_ELEMENT_NAME}}\"\n                [value]=\"i\"\n                [attr.aria-label]=\"'vsan.services.fileservices.primaryIp' | localized\"/>\n         <label for=\"default-ip-{{i}}\"></label>\n      </clr-radio-wrapper>\n      <div [ngClass]=\"affinitySiteSupported && isVsanStretchedCluster? 'clr-col-3' : 'clr-col-5'\"\n           [formGroup]=\"ipSettingsGroup\">\n         <clr-input-container *ngIf=\"isEditIpAllowed(ipSettingsGroup, i) else ip_text\"\n                              class=\"control-full-width\">\n            <input id=\"ip-{{i}}\"\n                   clrInput\n                   type=\"text\"\n                   formControlName=\"{{IPADDRESS_ELEMENT_NAME}}\"\n                   [attr.aria-label]=\"'vsan.services.fileservices.wizard.ipPool.input.ipaddress.title' | localized\"/>\n            <clr-control-error *clrIfError=\"REQUIRED_VALIDATION\">\n               {{\"vsan.services.fileservices.wizard.ipPool.validation.ipSettings.emptyAddress\" | localized}}\n            </clr-control-error>\n            <clr-control-error *clrIfError=\"IP_INVALID_VALIDATION\">\n               {{\"vsan.services.fileservices.wizard.ipPool.validation.ipSettings.invalidAddress\" | localized}}\n            </clr-control-error>\n            <clr-control-error *clrIfError=\"IP_DUPLICATE_VALIDATION\">\n               {{\"vsan.services.fileservices.wizard.ipPool.validation.ipSettings.duplicateAddresses\" | localized}}\n            </clr-control-error>\n            <clr-control-error *clrIfError=\"IP_SAME_NETWORK_VALIDATION\">\n               {{\"vsan.services.fileservices.wizard.ipPool.validation.ipSettings.differentNetworks\" | localized}}\n            </clr-control-error>\n         </clr-input-container>\n         <ng-template #ip_text>\n            <span *ngIf=\"!capabilityData?.isIpRemovalInEditModeSupported\"\n                  class=\"ip-index\">{{i + 1}}.</span>\n            <span class=\"ip-column ip-text\">{{ipSettingsGroup.get(IPADDRESS_ELEMENT_NAME).value}}</span>\n         </ng-template>\n         <span *ngIf=\"!isChangePrimaryIpAllowed() && ipSettingsGroup.get(ISDEFAULT_ELEMENT_NAME).value\">\n            {{\"vsan.services.fileservices.wizard.rtc.default\" | localized}}\n         </span>\n      </div>\n      <clr-input-container *ngIf=\"isEditIpAllowed(ipSettingsGroup, i) else fqdn_text\"\n                           [formGroup]=\"ipSettingsGroup\"\n                           class=\"control-full-width\"\n                           [ngClass]=\"affinitySiteSupported && isVsanStretchedCluster ? 'clr-col-4' : 'clr-col-5'\">\n         <input id=\"dns-{{i}}\"\n                clrInput\n                type=\"text\"\n                formControlName=\"dnsName\"/>\n         <clr-control-error *clrIfError=\"REQUIRED_VALIDATION\">\n            {{\"vsan.services.fileservices.wizard.ipPool.validation.ipSettings.emptyDNS\" | localized}}\n         </clr-control-error>\n         <clr-control-error *clrIfError=\"DNS_INVALID_VALIDATION\">\n            {{\"vsan.services.fileservices.wizard.ipPool.validation.ipSettings.invalidDns\" | localized}}\n         </clr-control-error>\n         <clr-control-error *clrIfError=\"DNS_DUPLICATE_VALIDATION\">\n            {{\"vsan.services.fileservices.wizard.ipPool.validation.ipSettings.duplicateDnsNames\" | localized}}\n         </clr-control-error>\n         <clr-control-error *clrIfError=\"DNS_AD_VALIATION\">\n            {{\"vsan.services.fileservices.wizard.ipPool.input.dns.domain.error\" | localized}}\n         </clr-control-error>\n      </clr-input-container>\n      <ng-template #fqdn_text>\n         <span class=\"clr-col-4 fqdn-text\">{{ipSettingsGroup.get(DNSNAME_ELEMENT_NAME).value}}</span>\n      </ng-template>\n      <ng-container *ngIf=\"affinitySiteSupported && isVsanStretchedCluster\">\n         <clr-select-container *ngIf=\"isEditIpAllowed(ipSettingsGroup, i) else affinitySite_text\"\n                               [formGroup]=\"ipSettingsGroup\"\n                               class=\"clr-col-3\">\n            <select clrSelect\n                    id=\"affinity-location-{{i}}\"\n                    formControlName=\"{{AFFINITY_ELEMENT_NAME}}\">\n               <option *ngFor=\"let site of affinitySites\"\n                       [ngValue]=\"site\">\n                  {{getAffinitySiteLabel(site)}}\n               </option>\n            </select>\n         </clr-select-container>\n         <ng-template #affinitySite_text>\n            <span class=\"clr-col-3 fqdn-text\">\n               {{getAffinitySiteLabel(ipSettingsGroup.get(AFFINITY_ELEMENT_NAME).value)}}\n            </span>\n         </ng-template>\n      </ng-container>\n      <div class=\"remove-ip-btn-container\">\n         <button id=\"remove-ip-config-{{i}}\"\n                 *ngIf=\"canRemoveIp(ipSettingsGroup, i)\"\n                 type=\"button\"\n                 class=\"btn btn-icon btn-link\"\n                 title=\"{{'vsan.common.remove' | localized}}\"\n                 (click)=\"removeIpConfig(i)\">\n            <clr-icon shape=\"times-circle\" [attr.alt]=\"'vsan.common.remove' | localized\"></clr-icon>\n         </button>\n      </div>\n   </div>\n   <button id=\"add-ip-config\"\n           type=\"button\"\n           *ngIf=\"isAddAllowed()\"\n           class=\"btn btn-icon btn-link clr-col-1\"\n           [class.btn-add-ip]=\"isCreatingNewDomain\"\n           title=\"{{'vsan.common.add' | localized}}\"\n           (click)=\"addIpConfig()\">\n      <clr-icon shape=\"plus-circle\" [attr.alt]=\"'vsan.common.add' | localized\"></clr-icon>\n   </button>\n</form>\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {FileServicesConfigureWizardComponent} from \"./file-services-configure-wizard.component\";\nimport {FlowWizardModule} from \"@component/wizard/flow-wizard.module\";\nimport {FileServicesIntroductionPageComponent} from \"./file-services-introduction-page.component\";\nimport {FileServicesDomainPageComponent} from \"./file-services-domain-page.component\";\nimport {FileServicesNetworkPageComponent} from \"./file-services-network-page.component\";\nimport {FileServicesIpPoolPageComponent} from \"./file-services-ip-pool-page.component\";\nimport {FileServicesFileAnalyticsPageComponent} from \"./file-services-file-analytics-page.component\";\nimport {FileServicesReviewPage} from \"./file-services-review-page.component\";\nimport {FileServicesOvfPageComponent} from \"./file-services-ovf-page.component\";\nimport {DomainValidationService} from \"./domain-validation.service\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {FileServicesCommonModule} from \"../shared/file-services-common.module\";\nimport {InventoryBrowserModule} from \"@component/inventory/inventory-browser.module\";\nimport {IpParserService} from \"@service/ip-parser.service\";\nimport {ReferenceWatcher} from \"@util/reference-watcher\";\n\nconst fileServicesRoutes: Routes = [\n   {\n      path: \"\",\n      component: FileServicesConfigureWizardComponent,\n   }];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      ClarityModule,\n      FlowWizardModule,\n      ValidationModule,\n      CommonPipeModule,\n      CommonDirectiveModule,\n      InventoryBrowserModule,\n      FileServicesCommonModule,\n      RouterModule.forChild(fileServicesRoutes),\n   ],\n   declarations: [\n      FileServicesConfigureWizardComponent,\n      FileServicesIntroductionPageComponent,\n      FileServicesDomainPageComponent,\n      FileServicesNetworkPageComponent,\n      FileServicesIpPoolPageComponent,\n      FileServicesOvfPageComponent,\n      FileServicesFileAnalyticsPageComponent,\n      FileServicesReviewPage,\n   ],\n   entryComponents: [\n      FileServicesIntroductionPageComponent,\n      FileServicesDomainPageComponent,\n      FileServicesNetworkPageComponent,\n      FileServicesIpPoolPageComponent,\n      FileServicesOvfPageComponent,\n      FileServicesFileAnalyticsPageComponent,\n      FileServicesReviewPage,\n   ],\n   providers: [\n      DomainValidationService,\n      IpParserService,\n      ReferenceWatcher,\n   ],\n})\nexport class FileServicesWizardModule {\n}\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {PageSet} from \"@component/wizard/flow-wizard.component\";\nimport {ActiveDirectoryConfig} from \"@generated/active-directory-config\";\nimport {FileAnalyticsConfigService} from \"@generated/file-analytics-config-service\";\nimport {VsanFileServiceCommonConfig} from \"@generated/vsan-file-service-common-config\";\nimport {VsanFileServiceConfigService} from \"@generated/vsan-file-service-config-service\";\nimport {VsanFileServiceDomain} from \"@generated/vsan-file-service-domain\";\nimport {VsanFileServiceIpType} from \"@generated/vsan-file-service-ip-type\";\nimport {VsanFileServiceOvf} from \"@generated/vsan-file-service-ovf\";\nimport {FileServicesConfigureWizardModalContext} from \"@navigation/context/file-services-configure-wizard-modal-context.data\";\nimport {Network} from \"@service/client/dataservice/data-service-property\";\nimport {DataServiceClient} from \"@service/client/dataservice/data-service.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {WebPlatform} from \"@util/platform\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {FileServicesDomainPageComponent} from \"./file-services-domain-page.component\";\nimport {FileServicesFileAnalyticsPageComponent} from \"./file-services-file-analytics-page.component\";\nimport {FileServicesIntroductionPageComponent} from \"./file-services-introduction-page.component\";\nimport {FileServicesIpPoolPageComponent} from \"./file-services-ip-pool-page.component\";\nimport {FileServicesNetworkPageComponent} from \"./file-services-network-page.component\";\nimport {FileServicesOvfPageComponent} from \"./file-services-ovf-page.component\";\nimport {FileServicesReviewPage} from \"./file-services-review-page.component\";\n\n@Component({\n   selector: \"vsan-file-services-wizard\",\n   template: `\n      <vsan-flow-wizard\n            [title]=\"title\"\n            [pageSets]=\"pages\"\n            [contextProperties]=\"context\"\n            [startingTaskProperty]=\"taskProperty\"\n            [services]=\"services\">\n      </vsan-flow-wizard>`,\n})\nexport class FileServicesConfigureWizardComponent implements OnInit {\n   private readonly DEFAULT_PREFIX_LENGTH: number = 64;\n\n   services: any[] = [VsanFileServiceConfigService, FileAnalyticsConfigService];\n   pages: PageSet[];\n   context: any = {};\n   title: string;\n   taskProperty: string = \"configureFileService\";\n\n   constructor(private fileService: VsanFileServiceConfigService,\n         private dataService: DataServiceClient) {\n   }\n\n   async ngOnInit(): Promise<void> {\n      const modalContext: FileServicesConfigureWizardModalContext =\n            VsanUiUtils.getModalContext() as FileServicesConfigureWizardModalContext;\n\n      let downloadingOvf: VsanFileServiceOvf;\n      if (!modalContext.isEdit && !modalContext.hasLastestOvf) {\n         downloadingOvf = await this.getDownloadingOvf(modalContext);\n      }\n      this.createInitialContext(modalContext, downloadingOvf ? downloadingOvf.downloadTask : null);\n      this.initWizardPages(modalContext, downloadingOvf);\n   }\n\n   private async getDownloadingOvf(modalContext: FileServicesConfigureWizardModalContext): Promise<VsanFileServiceOvf> {\n      try {\n         const ovfs: VsanFileServiceOvf[] = await this.fileService.getRegisteredOvfs(modalContext.clusterRef);\n         return ovfs.find(ovf => !!ovf.downloadTask);\n      } catch (err) {\n         return null;\n      }\n   }\n\n   private async initWizardPages(modalContext: FileServicesConfigureWizardModalContext,\n         downloadingOvf: VsanFileServiceOvf): Promise<void> {\n      const pageSet: any[] = [];\n      if (modalContext.isEdit) {\n         this.title = VsanUiUtils.getString(\"vsan.services.fileservices.wizard.edit.title\");\n         this.taskProperty = \"editFileServiceConfig\";\n      } else {\n         this.title = VsanUiUtils.getString(\"vsan.services.fileservices.wizard.configure.title\");\n         if (!this.context.isReEnable) {\n            pageSet.push(FileServicesIntroductionPageComponent);\n         }\n      }\n      // assign a11y title here due to additional title logic\n      WebPlatform.setAccessibilityTitle(this.title);\n      // Display the ovf page when the current OVF version is not the latest\n      if (!modalContext.isEdit && !downloadingOvf && !modalContext.hasLastestOvf) {\n         pageSet.push(FileServicesOvfPageComponent);\n      }\n      if (!this.context.isReEnable) {\n         pageSet.push(FileServicesNetworkPageComponent);\n         pageSet.push(FileServicesDomainPageComponent);\n         pageSet.push(FileServicesIpPoolPageComponent);\n      } else if (!await this.networkExists(modalContext.config.network)) {\n         pageSet.push(FileServicesNetworkPageComponent);\n      }\n      if (this.context.capabilityData.isFileAnalyticsSupported) {\n         pageSet.push(FileServicesFileAnalyticsPageComponent);\n      }\n      pageSet.push(FileServicesReviewPage);\n\n      this.pages = [new PageSet(pageSet)];\n   }\n\n   private createInitialContext(modalContext: FileServicesConfigureWizardModalContext,\n         ovfDownloadTask: ManagedObject = null): void {\n      let config: VsanFileServiceCommonConfig = modalContext.config;\n      if (!config) {\n         config = VsanFileServiceCommonConfig.Factory.create(null, null, false, false);\n      }\n\n      if (!config.domainConfig) {\n         config.domainConfig = this.createEmptyDomainConfig();\n      }\n      if (!config.domainConfig.adConfig) {\n         config.domainConfig.adConfig = this.createEmptyActiveDirectoryConfig();\n      }\n      this.context.clusterRef = modalContext.clusterRef;\n      this.context.fileServiceConfig = config;\n      this.context.isEdit = modalContext.isEdit;\n      this.context.capabilityData = modalContext.capabilityData;\n      this.context.isRecreateDomain = this.context.isEdit && !config.domainConfig.name;\n      if (ovfDownloadTask) {\n         this.context.downloadTask = ovfDownloadTask;\n      }\n      // Use this attr to indicate if we are going to enable file service w/ an existing FS domain\n      this.context.isReEnable = !this.context.isEdit\n            && !!config.domainConfig.name\n            && VsanUiUtils.isEmpty(modalContext.lastDomainConfigErrors);\n      this.context.fileSharesCount = modalContext.fileSharesCount;\n      this.context.ovfVersion = modalContext.ovfVersion;\n      this.context.largeScaleClusterSupported = modalContext.largeScaleClusterSupported;\n      this.context.hasAdConfigured = modalContext.hasAdConfigured;\n   }\n\n   private createEmptyDomainConfig(): VsanFileServiceDomain {\n      return VsanFileServiceDomain.Factory.create(\n            \"\",\n            null,\n            this.DEFAULT_PREFIX_LENGTH,\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            VsanFileServiceIpType.V4,\n            []);\n   }\n\n   private createEmptyActiveDirectoryConfig(): ActiveDirectoryConfig {\n      return ActiveDirectoryConfig.Factory.create(\"\", \"\", \"\", \"\");\n   }\n\n   /**\n    * SR 2664146: UI needs to check if the network still exists in the re-enable case.\n    * If not, UI will allow user to choose the network again\n    */\n   private async networkExists(networkRef: ManagedObject): Promise<boolean> {\n      if (!networkRef) {\n         return false;\n      }\n      const networkName: string = await this.dataService.getProperty(Network.name, networkRef);\n      return !!networkName;\n   }\n}\n","/* Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, ViewChild} from \"@angular/core\";\nimport {\n   AbstractControl,\n   FormBuilder,\n   FormControl,\n   FormGroup,\n   ValidationErrors,\n   ValidatorFn,\n   Validators,\n} from \"@angular/forms\";\nimport {ClrForm} from \"@clr/angular\";\nimport {InputProperty, OutputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {OnValidate, PageControls} from \"@component/wizard/flow-wizard.component\";\nimport {ActiveDirectoryConfig} from \"@generated/active-directory-config\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {VsanFileServiceCommonConfig} from \"@generated/vsan-file-service-common-config\";\nimport {VsanFileServiceConfigService} from \"@generated/vsan-file-service-config-service\";\nimport {VsanFileServicePrecheckResult} from \"@generated/vsan-file-service-precheck-result\";\nimport {IpParserService} from \"@service/ip-parser.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Logger} from \"@util/logger\";\nimport {ReferenceWatcher} from \"@util/reference-watcher\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {OvfOption, OvfSettings} from \"../shared/file-services-ovf-settings.data\";\nimport {DomainValidationService} from \"./domain-validation.service\";\n\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.title\"),\n)\n@Component({\n   templateUrl: \"file-services-domain-page.html\",\n   styleUrls: [\"file-services-domain-page.scss\"],\n})\nexport class FileServicesDomainPageComponent implements OnValidate {\n   private static readonly PASSWORD_PLACEHOLDER: string = \"********\";\n   private readonly AD_SUPPORTED_FS_VERSION: string = \"1.1.0\";\n\n   readonly DOMAIN_NAME_ELEMENT_NAME: string = \"domain-name\";\n   readonly DNS_SERVERS_ELEMENT_NAME: string = \"dns-servers\";\n   readonly DNS_SUFFIX_ELEMENT_NAME: string = \"dns-suffix\";\n   readonly ENABLE_AD_ELEMENT_NAME: string = \"enable-active-directory\";\n   readonly AD_DOMAIN_NAME_ELEMENT_NAME: string = \"ad-domain\";\n   readonly OU_ELEMENT_NAME: string = \"organizational-unit\";\n   readonly AD_USERNAME_ELEMENT_NAME: string = \"username\";\n   readonly AD_PASSWORD_ELEMENT_NAME: string = \"password\";\n\n   @InputProperty()\n   private fileSharesCount: number;\n\n   @InputProperty()\n   @OutputProperty()\n   fileServiceConfig: VsanFileServiceCommonConfig;\n\n   @InputProperty()\n   isEdit: boolean; // isEdit = true, when the user started the Edit workflow\n\n   @InputProperty()\n   pageControls: PageControls;\n\n   @InputProperty(InputProperty.required(false))\n   ovfSettings: OvfSettings;\n\n   @InputProperty()\n   capabilityData: VsanCapabilityData;\n\n   @InputProperty()\n   hasAdConfigured: boolean;\n\n   @OutputProperty()\n   originalDomainName: string;\n\n   @OutputProperty()\n   isAdCredentialChanged: boolean = false;\n\n   @OutputProperty()\n   activeDirectorySupported: boolean;\n\n   @OutputProperty()\n   get isRemovingActiveDirectory(): boolean {\n      return this.hasAdConfigured && !this.activeDirectoryEnabled;\n   }\n\n   @ViewChild(ClrForm)\n   clrForm: ClrForm;\n\n   dnsServerAvailable: boolean;\n\n   // Use this flag to control if user can change the checkbox and the domain input\n   allowEditActiveDirectory: boolean;\n\n   domainForm: FormGroup;\n\n   loading: boolean;\n\n   private adConfigBackup: ActiveDirectoryConfig;\n\n   get activeDirectoryEnabled(): boolean {\n      return this._activeDirectoryEnabled;\n   }\n\n   set activeDirectoryEnabled(val: boolean) {\n      this._activeDirectoryEnabled = val;\n      if (!val) {\n         this.adConfigBackup = this.fileServiceConfig.domainConfig.adConfig;\n         this.fileServiceConfig.domainConfig.adConfig = ActiveDirectoryConfig.Factory.create(\"\", \"\", \"\", \"\");\n      } else {\n         this.fileServiceConfig.domainConfig.adConfig = this.adConfigBackup;\n      }\n      this.resetAdInputValues();\n   }\n\n   private _activeDirectoryEnabled: boolean;\n\n   constructor(private ipParser: IpParserService,\n         private fileServiceConfigService: VsanFileServiceConfigService,\n         public validationService: DomainValidationService,\n         private formBuilder: FormBuilder,\n         private refWatcher: ReferenceWatcher) {\n   }\n\n   async ngOnInit(): Promise<void> {\n      this.pageControls.setBusyState();\n      this.originalDomainName = this.fileServiceConfig.domainConfig.name;\n      this.dnsServerAvailable = this.capabilityData.isNfsv3ProtocolSupported;\n      this.adConfigBackup = this.fileServiceConfig.domainConfig.adConfig;\n      this.activeDirectoryEnabled = !!this.adDomain;\n      this.allowEditActiveDirectory = !this.activeDirectoryEnabled || !this.fileSharesCount;\n      try {\n         this.loading = true;\n         const preflightCheckResult: VsanFileServicePrecheckResult =\n               await this.fileServiceConfigService.getPrecheckResult(\n                     ManagedObject.contextObject,\n                     this.isEdit && this.originalDomainName ? this.fileServiceConfig.domainConfig : null, false);\n         this.activeDirectorySupported = this.isActiveDirectorySupported(preflightCheckResult);\n      } catch (err) {\n         Logger.error(err);\n         this.activeDirectorySupported = false;\n      } finally {\n         this.pageControls.clearBusyState();\n         this.initFormGroup();\n         this.loading = false;\n      }\n   }\n\n   invalidate(): void {\n      this.pageControls.rebuildToc();\n   }\n\n   adCredentialChanged(): void {\n      this.isAdCredentialChanged = true;\n      this.addPasswordValidator();\n   }\n\n   get passwordPlaceholder(): string {\n      return this.isEdit && this.hasAdConfigured ?\n            FileServicesDomainPageComponent.PASSWORD_PLACEHOLDER : \"\";\n   }\n\n   /**\n    * The wizard framework calls this method to check if all the inputs are valid in the current reactive form\n    * This is required for the views which has inline validations. Otherwise you have to add an extra error\n    * message in the validate method to stop the wizard from going to next view.\n    */\n   inlineValidate(): boolean {\n      this.clrForm.markAsTouched();\n      return this.domainForm.valid;\n   }\n\n   validate(): string[] | Promise<string[]> {\n      // Return null directly because we only have inline validation in this view\n      return null;\n   }\n\n   get editDomainWarning(): string {\n      return this.originalDomainName\n            ? VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.warning\")\n            : VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.noDomain\");\n   }\n\n   private get adDomain(): string {\n      return this.fileServiceConfig.domainConfig.adConfig.domain;\n   }\n\n   private get adUsername(): string {\n      return this.fileServiceConfig.domainConfig.adConfig.username;\n   }\n\n   /**\n    * If the ovf file is existing or provided by user, the result from preflight check API is correct\n    * If the ovf file is auto-downloaded, we need to check the file service API version\n    */\n   private isActiveDirectorySupported(preflightCheckResult: VsanFileServicePrecheckResult): boolean {\n      if (this.isEdit\n            || !this.ovfSettings\n            || [OvfOption.MANUAL, OvfOption.EXISTING].includes(this.ovfSettings.ovfOption)) {\n         return preflightCheckResult.activeDirectorySupported;\n      } else {\n         return preflightCheckResult.fileServiceVersion >= this.AD_SUPPORTED_FS_VERSION;\n      }\n   }\n\n   private initFormGroup(): void {\n      const formSettings: any = {\n         [this.DOMAIN_NAME_ELEMENT_NAME]: new FormControl(\n               this.originalDomainName,\n               [this.validationService.domainNameValidator]),\n      };\n\n      if (this.dnsServerAvailable) {\n         formSettings[this.DNS_SERVERS_ELEMENT_NAME] = new FormControl(\n               this.fileServiceConfig.domainConfig.dnsServers,\n               [this.validationService.dnsServerValidator]);\n         formSettings[this.DNS_SUFFIX_ELEMENT_NAME] = new FormControl(\n               this.fileServiceConfig.domainConfig.dnsSuffixes,\n               [this.validationService.dnsSuffixValidator]);\n      }\n      if (this.activeDirectorySupported) {\n         formSettings[this.ENABLE_AD_ELEMENT_NAME] = new FormControl(\n               {disabled: !this.allowEditActiveDirectory, value: this.activeDirectoryEnabled});\n         formSettings[this.AD_DOMAIN_NAME_ELEMENT_NAME] = new FormControl(\n               {disabled: this.hasAdConfigured, value: this.adDomain},\n               [this.adDomainSuffixValidator]);\n         formSettings[this.OU_ELEMENT_NAME] = new FormControl(\n               {\n                  disabled: this.hasAdConfigured,\n                  value: this.fileServiceConfig.domainConfig.adConfig.organizationalUnit,\n               },\n               [Validators.maxLength(255), this.validationService.ouValidator]);\n         formSettings[this.AD_USERNAME_ELEMENT_NAME] = new FormControl(\n               {disabled: this.hasAdConfigured, value: this.fileServiceConfig.domainConfig.adConfig.username},\n               [this.validationService.usernameValidator]);\n         formSettings[this.AD_PASSWORD_ELEMENT_NAME] = new FormControl(\n               this.fileServiceConfig.domainConfig.adConfig.password,\n               this.hasAdConfigured ? null : [Validators.required]);\n      }\n      this.domainForm = this.formBuilder.group(formSettings);\n      this.bindControlValues();\n   }\n\n   private adDomainSuffixValidator: ValidatorFn = (control: AbstractControl): ValidationErrors => {\n      const adDomain: string = control.value;\n      if (this.getAdDomainValidationResult(adDomain)) {\n         return {[this.validationService.INVALID_AD_DOMAIN_VALIDATION]: {value: adDomain}};\n      }\n      return null;\n   };\n\n   getAdDomainValidationResult(adDomain: string): string {\n      const result: string = this.validationService.getAdDomainValidationResult(adDomain);\n      return result\n            ? result\n            : this.getAdDomainSuffixCheckResult(adDomain);\n   }\n\n   private getAdDomainSuffixCheckResult(adDomain: string): string {\n      if (this.fileServiceConfig.domainConfig.dnsSuffixes.split(\",\")\n            .map(suffix => suffix.trim())\n            .includes(adDomain)) {\n         return null;\n      }\n      return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.suffix.noAD\");\n   }\n\n   private toggleAdValidation(enabled: boolean): void {\n      if (!enabled) {\n         this.adDomainNameControl.disable();\n         this.organizationalUnitControl.disable();\n         this.adUsernameControl.disable();\n         this.adPasswordControl.disable();\n         this.adPasswordControl.setValidators([]);\n      } else if (!this.hasAdConfigured) {\n         // don't allow to change AD settings if it's original enabled\n         this.adDomainNameControl.enable();\n         this.organizationalUnitControl.enable();\n         this.adUsernameControl.enable();\n         this.adPasswordControl.enable();\n         this.addPasswordValidator();\n      }\n   }\n\n   private resetAdInputValues(): void {\n      if (!this.domainForm) {\n         return;\n      }\n      const adConfig: ActiveDirectoryConfig = this.fileServiceConfig.domainConfig.adConfig;\n      this.adDomainNameControl.setValue(adConfig.domain);\n      this.organizationalUnitControl.setValue(adConfig.organizationalUnit);\n      this.adUsernameControl.setValue(adConfig.username);\n      this.adPasswordControl.setValue(adConfig.password);\n\n   }\n\n   private addPasswordValidator(): void {\n      this.adPasswordControl.setValidators([Validators.required]);\n   }\n\n   private bindControlValues(): void {\n      this.refWatcher.watchSubscriptionRef(this.domainForm.valueChanges.subscribe(whatever => this.invalidate()));\n      this.refWatcher.watchSubscriptionRef(\n            this.domainControl.valueChanges.subscribe(val => this.fileServiceConfig.domainConfig.name = val));\n      if (this.dnsServerAvailable) {\n         this.refWatcher.watchSubscriptionRef(\n               this.dnsControl.valueChanges.subscribe(val => this.fileServiceConfig.domainConfig.dnsServers = val));\n         this.refWatcher.watchSubscriptionRef(\n               this.dnsSuffixControl.valueChanges.subscribe(val => this.fileServiceConfig.domainConfig.dnsSuffixes = val));\n      }\n      if (this.activeDirectorySupported) {\n         this.refWatcher.watchSubscriptionRef(\n               this.enableAdCheckboxControl.valueChanges.subscribe(checked => {\n                  this.activeDirectoryEnabled = checked;\n                  this.toggleAdValidation(checked);\n               }));\n         this.refWatcher.watchSubscriptionRef(\n               this.adDomainNameControl.valueChanges\n                     .subscribe(val => this.fileServiceConfig.domainConfig.adConfig.domain = val));\n         this.refWatcher.watchSubscriptionRef(\n               this.organizationalUnitControl.valueChanges\n                     .subscribe(val => {\n                        if (val !== this.fileServiceConfig.domainConfig.adConfig.organizationalUnit) {\n                           this.fileServiceConfig.domainConfig.adConfig.organizationalUnit = val;\n                           this.adCredentialChanged();\n                        }\n                     }));\n         this.refWatcher.watchSubscriptionRef(\n               this.adUsernameControl.valueChanges\n                     .subscribe(val => {\n                        if (val !== this.fileServiceConfig.domainConfig.adConfig.username) {\n                           this.fileServiceConfig.domainConfig.adConfig.username = val;\n                           this.adCredentialChanged();\n                        }\n                     }));\n         this.refWatcher.watchSubscriptionRef(\n               this.adPasswordControl.valueChanges\n                     .subscribe(val => {\n                        if (val) {\n                           this.fileServiceConfig.domainConfig.adConfig.password = val;\n                           this.adCredentialChanged();\n                        }\n                     }));\n      }\n   }\n\n   get domainControl(): FormControl {\n      return this.domainForm.get(this.DOMAIN_NAME_ELEMENT_NAME) as FormControl;\n   }\n\n   get dnsControl(): FormControl {\n      return this.domainForm.get(this.DNS_SERVERS_ELEMENT_NAME) as FormControl;\n   }\n\n   get dnsSuffixControl(): FormControl {\n      return this.domainForm.get(this.DNS_SUFFIX_ELEMENT_NAME) as FormControl;\n   }\n\n   get enableAdCheckboxControl(): FormControl {\n      return this.domainForm.get(this.ENABLE_AD_ELEMENT_NAME) as FormControl;\n   }\n\n   get adDomainNameControl(): FormControl {\n      return this.domainForm.get(this.AD_DOMAIN_NAME_ELEMENT_NAME) as FormControl;\n   }\n\n   get organizationalUnitControl(): FormControl {\n      return this.domainForm.get(this.OU_ELEMENT_NAME) as FormControl;\n   }\n\n   get adUsernameControl(): FormControl {\n      return this.domainForm.get(this.AD_USERNAME_ELEMENT_NAME) as FormControl;\n   }\n\n   get adPasswordControl(): FormControl {\n      return this.domainForm.get(this.AD_PASSWORD_ELEMENT_NAME) as FormControl;\n   }\n}\n","<!-- Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-edit-file-analytics [(fileServiceConfig)]=\"fileServiceConfig\"\n                          [isFileAnalyticsRuntimeSupported]=\"isFileAnalyticsRuntimeSupported\"\n                          [isEdit]=\"isEdit\"\n                          (fileServiceConfigChange)=\"invalidate()\">\n</vsan-edit-file-analytics>\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {\n   AfterViewInit,\n   ComponentFactoryResolver,\n   Directive,\n   ElementRef,\n   Host,\n   Input,\n   Optional,\n   Renderer2,\n   Self,\n} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {NavigationService} from \"@navigation/navigation.service\";\nimport {ClrButtonBaseDirective} from \"@directive/clr-button-group/clr-button-base.directive\";\nimport {ClrButton} from \"@clr/angular\";\n\n/**\n * Decorates a button or an anchor as external link. Requires one of the optional parameters articleId, helpId or url.\n *\n * @param external-link: Optional. Localization key of the text label of the external link. If omitted default label\n * will be used - \"Learn more\" for anchors or \"Ask VMWare\" for buttons.\n * @param articleId - Optional. Id of article in knowledge base.\n * @param helpId - Optional. Help id which will redirect to Knowledge Base.\n * @param url - Optional. External URL.\n */\n@Directive({\n   selector: \"a[external-link], button[external-link], clr-button[external-link]\",\n})\nexport class ExternalLinkDirective extends ClrButtonBaseDirective implements AfterViewInit {\n   private readonly ASK_VMWARE_DEFAULT_TEXT_KEY: string = \"vsan.common.askVMware\";\n   private readonly LEARN_MORE_DEFAULT_TEXT_KEY: string = \"vsan.common.learnMore\";\n\n   private readonly CONTAINER_CLASS: string = \"icon-name-container\";\n   private readonly NAVIGATION_EVENT_TYPE: string = \"click\";\n   private readonly LEAD_TO_NOWHERE_URL: string = \"javascript://\";\n   private readonly HTML_ELEMENT_SPAN_NAME: string = \"span\";\n   private readonly HTML_ELEMENT_ICON_NAME: string = \"clr-icon\";\n   private readonly HTML_ELEMENT_ROLE_ATTR_NAME: string = \"role\";\n   private readonly HTML_ELEMENT_ROLE_ATTR_VALUE: string = \"link\";\n   private readonly ICON_SHAPE_ATTR_NAME: string = \"shape\";\n   private readonly ICON_SHAPE_ATTR_VALUE: string = \"pop-out\";\n   private readonly ICON_SIZE_ATTR_NAME: string = \"size\";\n   private readonly ICON_SIZE_ATTR_VALUE: string = \"16\";\n   private readonly ICON_CLASS_ATTR_NAME: string = \"class\";\n   private readonly ICON_CLASS_ATTR_VALUE: string = \"link\";\n   private readonly ICON_TITLE_ATTR_NAME: string = \"title\";\n\n   private readonly KB_URL: string = \"http://kb.vmware.com/kb/\";\n\n   @Input(\"external-link\")\n   anchorText: string;\n\n   @Input()\n   articleId: string;\n\n   @Input()\n   helpId: string;\n\n   @Input()\n   url: string;\n\n   constructor(private el: ElementRef<HTMLElement>,\n         private resolver: ComponentFactoryResolver,\n         private renderer: Renderer2,\n         private navigationService: NavigationService,\n         // this variable will be initialized only if the host is clr-button\n         @Host() @Self() @Optional() clrButton: ClrButton) {\n      super(clrButton);\n   }\n\n   ngAfterViewInit(): void {\n      const element: HTMLElement = this.el.nativeElement;\n      // continue only if element is HTML link or button\n      if (!this.isLink(element) && !this.isButton(element)) {\n         // element is clr-button, wait until html button for it is resolved - handled by resloveButton\n         return;\n      }\n      this.prepareExternalLink(element);\n   }\n\n   resolveButton(clrButton: ClrButton, button: HTMLButtonElement, index: number): void {\n      // only if element is clr-button. At this point the html button is already resolved. Apply on it.\n      this.prepareExternalLink(button);\n   }\n\n   private prepareExternalLink(element: HTMLElement): void {\n      this.renderer.addClass(element, this.CONTAINER_CLASS);\n\n      this.setText(element);\n      if (this.isLink(element)) {\n         this.decorateLink(element);\n      } else {\n         this.addLinkRole(element);\n      }\n\n      this.initializeNavigationHandler(element);\n   }\n\n   private isButton(element: HTMLElement): boolean {\n      return element instanceof HTMLButtonElement;\n   }\n\n   private isLink(element: HTMLElement): boolean {\n      return element instanceof HTMLAnchorElement;\n   }\n\n   private setText(element: HTMLElement): void {\n      const span: HTMLSpanElement = this.renderer.createElement(this.HTML_ELEMENT_SPAN_NAME);\n      span.innerText = this.getText(element);\n      this.renderer.appendChild(element, span);\n\n      const icon: HTMLSpanElement = this.renderer.createElement(this.HTML_ELEMENT_ICON_NAME);\n      icon.setAttribute(this.ICON_SHAPE_ATTR_NAME, this.ICON_SHAPE_ATTR_VALUE);\n      icon.setAttribute(this.ICON_SIZE_ATTR_NAME, this.ICON_SIZE_ATTR_VALUE);\n      icon.setAttribute(this.ICON_CLASS_ATTR_NAME, this.ICON_CLASS_ATTR_VALUE);\n      // Set title of the icon for screen readers clarity\n      icon.setAttribute(this.ICON_TITLE_ATTR_NAME, VsanUiUtils.getString(\"vsan.screenReader.label.externalLink.icon\"));\n      this.renderer.appendChild(element, icon);\n   }\n\n   private getText(element: HTMLElement): string {\n      if (this.anchorText) {\n         return this.anchorText;\n      }\n      const key: string = this.isButton(element) ? this.ASK_VMWARE_DEFAULT_TEXT_KEY : this.LEARN_MORE_DEFAULT_TEXT_KEY;\n      return VsanUiUtils.getString(key);\n   }\n\n   private decorateLink(element: HTMLElement): void {\n      const linkElement: HTMLLinkElement = element as HTMLLinkElement;\n      // don't use href attribute. If omitted, the link will be not visualized properly.\n      linkElement.href = this.LEAD_TO_NOWHERE_URL;\n      // display link on same line\n      linkElement.style.display = \"inline-flex\";\n   }\n\n   private initializeNavigationHandler(element: HTMLElement): void {\n      element.addEventListener(this.NAVIGATION_EVENT_TYPE, () => {\n         if (this.helpId) {\n            this.navigationService.askVMware(this.helpId);\n            return;\n         }\n         if (this.articleId) {\n            this.navigationService.navigateToAddress(`${this.KB_URL}${this.articleId}`);\n            return;\n         }\n         if (this.url) {\n            this.navigationService.navigateToAddress(this.url);\n         }\n      });\n   }\n\n   // Indicate external navigation by assigning \"link\" role\n   private addLinkRole(element: HTMLElement): void {\n      this.renderer.setAttribute(element, this.HTML_ELEMENT_ROLE_ATTR_NAME, this.HTML_ELEMENT_ROLE_ATTR_VALUE);\n   }\n}","/* Copyright 2017-2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Logger} from \"../../common/util/logger\";\nimport {VsanFileServiceIpType} from \"@generated/vsan-file-service-ip-type\";\n\nexport class IP {\n   static readonly v4: IP = new IP(\"ipv4\",\n         \"vsan.services.fileservices.wizard.ipPool.input.vlan.protocol.ipv4\",\n         VsanFileServiceIpType.V4,\n         /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/);\n   static readonly v6: IP = new IP(\"ipv6\",\n         \"vsan.services.fileservices.wizard.ipPool.input.vlan.protocol.ipv6\",\n         VsanFileServiceIpType.V6,\n         /^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i);\n\n   constructor(private _value: string,\n         private keyToLabel: string,\n         private vsanIpType: VsanFileServiceIpType,\n         private matcher: RegExp) {\n   }\n\n   get value(): string {\n      return this._value;\n   }\n\n   toString(): string {\n      return this.keyToLabel;\n   }\n\n   static parse(val: string) {\n      switch (val) {\n         case IP.v4.value:\n            return IP.v4;\n         case IP.v6.value:\n            return IP.v6;\n         default:\n            Logger.warn(\"Unknown protocol: \" + val);\n            return null;\n      }\n   }\n\n   toVsanIpVersion() {\n      return this.vsanIpType;\n   }\n\n   validateAddress(address: string) {\n      return address && address != \"\" && this.matcher.test(address);\n   }\n}\n\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Directive, ElementRef, AfterViewInit, Input} from '@angular/core';\nimport {Icon} from \"@util/icon\";\n\n/**\n * Attribute directive for setting the title of clr-icon according to its shape.\n */\n@Directive({\n   selector: \"clr-icon\"\n})\nexport class IconTitleDirective implements AfterViewInit {\n\n   private readonly SHAPE_ATTRIBUTE: string = \"shape\";\n   private readonly TITLE_ATTRIBUTE: string = \"title\";\n\n   @Input(\"vsan-icon-title\")\n   iconTitle: string;\n\n   constructor(private el: ElementRef) { }\n\n   ngAfterViewInit() {\n      // Return if clr-icon already has title attribute.\n      if (this.el.nativeElement.getAttribute(this.TITLE_ATTRIBUTE)) {\n         return;\n      }\n\n      let title: string = this.iconTitle;\n      if (!title) {\n         const shape: string = this.el.nativeElement.getAttribute(this.SHAPE_ATTRIBUTE);\n         title = Icon.getDefaultVsanIconTitle(shape);\n      }\n      if (title) {\n         this.el.nativeElement.setAttribute(this.TITLE_ATTRIBUTE, title);\n      }\n   }\n}","<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div id=\"container\">\n   <div>{{\"vsan.services.fileservices.wizard.introduction.description\" | localized}}</div>\n   <div id=\"image\"></div>\n   <div id=\"description\">\n      <h6 id=\"subtitle1\">{{\"vsan.services.fileservices.wizard.introduction.description.subtitle1\" | localized}}</h6>\n      <div id=\"subtitle2\">{{\"vsan.services.fileservices.wizard.introduction.description.subtitle2\" | localized}}</div>\n      <ul>\n         <li [innerHTML]=\"'vsan.services.fileservices.wizard.introduction.description.item1' | localized\"></li>\n         <li [innerHTML]=\"'vsan.services.fileservices.wizard.introduction.description.item4' | localized\"></li>\n      </ul>\n      <ng-container *ngIf=\"capabilityData.isFileServiceKerberosSupported\">\n         <div id=\"ad-related-title\"\n              class=\"ad-settings-desc\">\n            {{\"vsan.services.fileservices.wizard.introduction.description.subtitle3\" | localized}}\n         </div>\n         <ul>\n            <li [innerHTML]=\"'vsan.services.fileservices.wizard.introduction.description.item5' | localized\"></li>\n         </ul>\n         <a id=\"learn-more-link\"\n            [external-link]=\"'vsan.services.fileservices.wizard.activeDirectoryPage.link' | localized\"\n            [helpId]=\"AskVmwareId.FILE_SERVICE\">\n         </a>\n      </ng-container>\n   </div>\n</div>\n","/* Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {InputProperty, OutputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {PageControls} from \"@component/wizard/flow-wizard.component\";\nimport {PageItem} from \"@component/wizard/page-item\";\nimport {AffinitySiteLocation} from \"@generated/affinity-site-location\";\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {NetworkInventoryService} from \"@generated/network-inventory-service\";\nimport {TaskInfoData} from \"@generated/task-info-data\";\nimport {TaskService} from \"@generated/task-service\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {VsanFileServiceCommonConfig} from \"@generated/vsan-file-service-common-config\";\nimport {VsanFileServiceConfigService} from \"@generated/vsan-file-service-config-service\";\nimport {VsanFileServiceDomain} from \"@generated/vsan-file-service-domain\";\nimport {VsanFileServicePrecheckResult} from \"@generated/vsan-file-service-precheck-result\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {TaskMonitorService, TaskStatus} from \"@service/task-monitor-service\";\nimport {Logger} from \"@util/logger\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {FileServiceUtil} from \"../file-service-util\";\nimport {OvfSettings} from \"../shared/file-services-ovf-settings.data\";\nimport {IP} from \"./ip.data\";\n\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.services.fileservices.wizard.rtc.title\"),\n)\n@Component({\n   templateUrl: \"file-services-review-page.html\",\n   styleUrls: [\"file-services-review-page.scss\"],\n})\nexport class FileServicesReviewPage implements OnInit {\n\n   @InputProperty()\n   @OutputProperty()\n   fileServiceConfig: VsanFileServiceCommonConfig;\n\n   @InputProperty()\n   networkName: string;\n\n   @InputProperty()\n   isRecreateDomain: boolean;\n\n   @InputProperty(InputProperty.required(false))\n   ovfSettings: OvfSettings;\n\n   @InputProperty(InputProperty.required(false))\n   downloadTask: ManagedObject;\n\n   @InputProperty()\n   protocol: IP = IP.v4;\n\n   @InputProperty()\n   capabilityData: VsanCapabilityData;\n\n   @InputProperty()\n   isEdit: boolean; // isEdit = true if user clicks the 'Edit' file service button\n\n   @InputProperty()\n   pageControls: PageControls;\n\n   @InputProperty()\n   isReEnable: boolean;\n\n   @InputProperty()\n   isAdCredentialChanged: boolean = false;\n\n   @InputProperty()\n   affinitySiteSupported: boolean;\n\n   @InputProperty()\n   isVsanStretchedCluster: boolean;\n\n   @InputProperty()\n   ovfVersion: string;\n\n   @InputProperty()\n   availableDomains: DomainOrHostData[];\n\n   @InputProperty()\n   isRemovingActiveDirectory: boolean;\n\n   @InputProperty()\n   advancedPreflightCheckSupported: boolean;\n\n   IP: typeof IP = IP;\n\n   downloadTaskIcon: string;\n   downloadTaskMessage: string;\n\n   error: string;\n   warnings: string[];\n   showNtpWarning: boolean;\n\n   downloadTaskInfoData: TaskInfoData;\n\n   constructor(private networkInventoryService: NetworkInventoryService,\n         private fileService: VsanFileServiceConfigService,\n         private taskService: TaskService,\n         private taskMonitorService: TaskMonitorService) {\n   }\n\n   async ngOnInit(): Promise<void> {\n      if (this.isAdvancedPreflightCheckAllowed()) {\n         (this.pageControls as PageItem).metadata.title =\n               VsanUiUtils.getString(\"vsan.services.fileservices.wizard.precheck.title\");\n      }\n      // display the npt warning only when AD is set.\n      this.showNtpWarning = !this.isRemovingActiveDirectory && !!this.fileServiceConfig.domainConfig?.adConfig?.domain;\n      // No OVFs are being downloaded during \"edit\" workflow\n      if (!this.isEdit) {\n         if (!this.isUploadLocalOvf && this.downloadTask) {\n            // disable the finish button first\n            this.toggleFinishButton(false);\n\n            // The OVF files are being downloaded to the VC, and we need to monitor this\n            // and update the UI accordingly. We only allow user to click the Finish button\n            // when the download task completes\n            const timer: number = window.setInterval(this.updateDownloadTaskStatus, 1000);\n\n            try {\n               await this.taskMonitorService.getAwaitResult(this.downloadTask);\n               this.onOvfDownloadComplete();\n               this.setDownloadResultInfo(\"success\",\n                     VsanUiUtils.getString(\"vsan.services.fileservices.rtc.download.succeeded\"));\n            } catch (error) {\n               Logger.warn(error);\n               // A completed task gets deleted in 10m or so. In case user gets this page 10+ minutes late after\n               // the OVF download completes, UI needs to run a preflight check to get the OVF files\n               this.checkOvfFiles();\n            } finally {\n               // stop refreshing the task after download completes\n               clearInterval(timer);\n            }\n         } else {\n            // The OVF files have already been downloaded on the VC so we need to show a static message\n            const message: string = this.isUploadLocalOvf\n                  ? VsanUiUtils.getString(\"vsan.services.fileservices.rtc.ovf.upload.present\")\n                  : VsanUiUtils.getString(\"vsan.services.fileservices.rtc.download.present\", this.ovfVersion);\n            this.setDownloadResultInfo(\"success\", message);\n         }\n      }\n\n      if (this.isEdit) {\n         if (!this.isAdvancedPreflightCheckAllowed()) {\n            return;\n         }\n         try {\n            this.pageControls.setBusyState();\n            this.toggleFinishButton(false);\n            await this.performPreflightCheck();\n         } finally {\n            // keep the Finish button disabled if the preflight check API returns any domain configure issue\n            if (!this.error) {\n               this.toggleFinishButton(true);\n            }\n            this.pageControls.clearBusyState();\n         }\n      }\n      await this.queryNetworkName();\n   }\n\n   /**\n    * In re-enable workflow, we don't have network page in the wizard, so the networkName is empty\n    */\n   private async queryNetworkName(): Promise<void> {\n      try {\n         const selectedNetwork: ManagedObject = this.fileServiceConfig.network;\n         if (!this.networkName && selectedNetwork) {\n            this.pageControls.setBusyState();\n            this.networkName = await this.networkInventoryService.getNetworkName(selectedNetwork);\n         }\n      } catch (error) {\n         this.pageControls.addValidationErrors([error]);\n      } finally {\n         this.pageControls.clearBusyState();\n      }\n   }\n\n   private async performPreflightCheck(): Promise<void> {\n      this.error = null;\n      this.warnings = null;\n      const warning: string[] = [];\n      const result: VsanFileServicePrecheckResult =\n            await this.fileService.getPrecheckResult(\n                  ManagedObject.contextObject, this.getDomainConfigForCheck(), true);\n      if (result.domainConfigIssue) {\n         this.error = result.domainConfigIssue;\n      }\n      if (result.domainConfigWarning) {\n         warning.push(result.domainConfigWarning);\n      }\n      if (result.ntpConfigWarning) {\n         warning.push(result.ntpConfigWarning);\n      }\n      if (!VsanUiUtils.isEmpty(warning)) {\n         this.warnings = warning;\n      }\n   }\n\n   private getDomainConfigForCheck(): VsanFileServiceDomain {\n      const domainConfig: VsanFileServiceDomain = JSON.parse(JSON.stringify(this.fileServiceConfig.domainConfig));\n      // avoid to check the AD settings in edit workflow unless user changes the AD password\n      if (this.isEdit && (!domainConfig.adConfig.password || this.isRemovingActiveDirectory)) {\n         domainConfig.adConfig = null;\n      }\n      return domainConfig;\n   }\n\n   private isAdvancedPreflightCheckAllowed(): boolean {\n      return this.advancedPreflightCheckSupported;\n   }\n\n   private updateDownloadTaskStatus = () => {\n      this.taskService.getInfo(this.downloadTask).then((taskInfoData: TaskInfoData) => {\n         this.downloadTaskInfoData = taskInfoData;\n         if (taskInfoData.progress < 100) {\n            this.toggleFinishButton(false);\n         }\n         switch (taskInfoData.status) {\n            case TaskStatus.PENDING:\n               this.setDownloadResultInfo(\"info\",\n                     VsanUiUtils.getString(\"vsan.services.fileservices.rtc.download.pending\"));\n               break;\n            case TaskStatus.RUNNING:\n               this.setDownloadResultInfo(\"info\",\n                     VsanUiUtils.getString(\"vsan.services.fileservices.rtc.download.running\"));\n               break;\n            case TaskStatus.SUCCESS:\n               this.setDownloadResultInfo(\"success\",\n                     VsanUiUtils.getString(\"vsan.services.fileservices.rtc.download.succeeded\"));\n               this.onOvfDownloadComplete();\n               break;\n            case TaskStatus.ERROR:\n               this.setDownloadResultInfo(\"danger\",\n                     VsanUiUtils.getString(\"vsan.services.fileservices.rtc.download.failed\"));\n               break;\n            default:\n               Logger.warn(\"Unknown status: \" + taskInfoData.status);\n               this.setDownloadResultInfo(\"warning\",\n                     VsanUiUtils.getString(\"vsan.services.fileservices.rtc.download.unknown\"));\n         }\n      }).catch(err => {\n         Logger.error(\"Cannot get task status: \" + err);\n         this.setDownloadResultInfo(\"warning\",\n               VsanUiUtils.getString(\"vsan.services.fileservices.rtc.download.unknown\"));\n      });\n   };\n\n   private onOvfDownloadComplete(): void {\n      // Create a fake taskInfoData because the task is deleted in 10 minutes after it is completed.\n      this.downloadTaskInfoData = this.downloadTaskInfoData ||\n            TaskInfoData.Factory.create(\"\", \"\", \"\", \"\", 0);\n      // There is a chance that the download task finishes between updateDownloadTaskStatus and getAwaitResult\n      // Here we should set the progress to 100 as it's already finished, by doing this we can fix PR 2378522\n      this.downloadTaskInfoData.progress = 100;\n      this.toggleFinishButton(true);\n   }\n\n   private async checkOvfFiles(): Promise<void> {\n      try {\n         this.pageControls.setBusyState();\n         const result: VsanFileServicePrecheckResult =\n               await this.fileService.getPrecheckResult(\n                     ManagedObject.contextObject, this.fileServiceConfig.domainConfig, false);\n         if (result.ovfInstalled) {\n            this.setDownloadResultInfo(\"success\",\n                  VsanUiUtils.getString(\"vsan.services.fileservices.rtc.download.present\", result.ovfInstalled));\n            this.onOvfDownloadComplete();\n         } else {\n            this.setDownloadResultInfo(\"danger\",\n                  VsanUiUtils.getString(\"vsan.services.fileservices.rtc.download.failed\"));\n         }\n      } catch (err) {\n         Logger.error(err);\n         this.setDownloadResultInfo(\"danger\", err);\n         this.toggleFinishButton(false);\n      } finally {\n         this.pageControls.clearBusyState();\n      }\n   }\n\n   private setDownloadResultInfo(icon: string, message: string): void {\n      this.downloadTaskIcon = icon;\n      this.downloadTaskMessage = message;\n   }\n\n   get isUploadLocalOvf(): boolean {\n      return this.ovfSettings && this.ovfSettings.isManualDownload;\n   }\n\n   private toggleFinishButton = (enabled: boolean) => {\n      (this.pageControls as PageItem).nextButtonIsDisabled = !enabled;\n   };\n\n   getAffinitySiteLabel(site: AffinitySiteLocation): string {\n      return FileServiceUtil.getAffinitySiteLabel(site, this.availableDomains);\n   }\n\n   getBooleanPropertyLabel = (property: boolean): string => {\n      return property ?\n            VsanUiUtils.getString(\"vsan.services.enabled\") :\n            VsanUiUtils.getString(\"vsan.services.disabled\");\n   };\n}\n"],"sourceRoot":"webpack:///"}