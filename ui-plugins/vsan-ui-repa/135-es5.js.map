{"version":3,"sources":["webpack:///src/app/vsan/common/directive/clr-button-group/clr-button-base.directive.ts","webpack:///src/app/vsan/common/service/performance-persistence.service.ts","webpack:///src/app/vsan/vm/io-diagnostics/dialog/io-vm-metrics-dialog.component.ts","webpack:///src/app/vsan/vm/io-diagnostics/dialog/io-vm-metrics-dialog.html","webpack:///src/app/vsan/common/util/vsan-dialog-util.ts","webpack:///src/app/vsan/common/directive/external-link/external-link.directive.ts","webpack:///src/app/vsan/vm/io-diagnostics/dialog/io-vm-metrics-dialog.module.ts","webpack:///src/app/vsan/support/model/perf-dashboard-vsan2-disk-scsifw.data.ts"],"names":["ClrButtonBaseDirective","clrButton","name","Math","random","toString","directiveHolder","directives","push","PersistedSelection","PerformancePersistenceService","storageService","CACHE_DURATION_IN_MS","HOUR_IN_MILLISECONDS","CACHE_KEY","timeRange","state","expiresIn","Date","getTime","fullTimeRangeData","savedObject","fullTimeRangeSelection","set","persistedSelection","get","isCacheExpired","clearCacheIfExpired","persistedTimeRange","getPersistedSelection","remove","nowTimestamp","IoVmMetricsDialogComponent","perfDataProvider","navigationService","perfPersistenceService","PerfForSupportUtil","DISK_GROUP_GRAPHS_IDS","PNIC_NETWORK_GRAPHS_IDS","VSAN2_DISK_SCSIFW_GRAPHS_IDS","displayEntityInfo","ALL","unavailableViewSpec","PERF_VIEW_NO_DATA","_historicalGraphMetricsByRefId","context","getModalContext","entityName","hostName","hostUuid","isHistoricalMode","isHistorical","startDate","endDate","clusterRef","type","NIC","DISK_GROUP","DISK","initializeNicPerformance","initializeDiskGroupPerformance","initializeDiskPerformance","entityRefId","split","title","getString","primaryActionLabel","primaryActionCallback","navigateToPerformance","dashboardView","PNIC","graphs","getGraphs","entityType","VSAN_PNIC_NET","getEntityPerfStateForWildcards","preparePerfSpec","entitiesStateData","hasMetrics","length","find","data","includes","metricsSeries","setNicPerformanceMode","ONLY_SUB_ENTITIES","filteredEntities","setHistoricalData","additionalActionLabel","additionalActionCallback","navigateToDiskManagement","VSAN2_DISK_SCSIFW_CHARTS","filter","chart","id","VSAN2_DISK_SCSIFW","setDiskGroupPerformanceMode","DISKGROUP","NONE","uuid","objectUuid","Map","forEach","displayGraphs","pivotalDashboard","PIVOTAL_DASHBOARDS","dashboard","view","children","c","isPivotalGraph","isEmpty","some","g","dashboardCategory","CATEGORIED_DASHBOARDS","category","d","Factory","create","perfTimeRange","roundToMinuteStart","saveSelection","CUSTOM_RANGE","navData","ADVANCED_PERFORMANCE","perfSelection","objectIdentifier","navigateToAndCloseModal","CLUSTER_SUPPORT","groupIdentifier","fromDiskGroupName","hostRef","diskGroup","isHostDetailsLevel","DISK_MANAGEMENT","VsanDialogUtil","CAPACITY_MANAGEMENT_DIALOG","width","height","DELETE_VOLUME_DIALOG","MIGRATE_VOLUME_DIALOG","REAPPLY_VOLUME_POLICY_DIALOG","DUPLICATE_PCI_ID_MODEL_SELECTION_DIALOG","HEALTH_RESTORE_ACTION_DIALOG","CLUSTER_POWER_ON_DIALOG","VM_IO_DIAGNOSTICS_METRICS_DIALOG","VM_IO_DIAGNOSTICS_LATENCY_DIALOG","VM_IO_DIAGNOSTICS_DOM_OWNER_LATENCY_DIALOG","PERF_SVC_EDIT_ACTION_DIALOG","PERF_SVC_ENABLE_ACTION_DIALOG","CLAIM_DISKS_ACTION_DIALOG","VSAN_DISK_CLAIM_ACTION_DIALOG","VsanDialogProperties","ExternalLinkDirective","el","resolver","renderer","ASK_VMWARE_DEFAULT_TEXT_KEY","LEARN_MORE_DEFAULT_TEXT_KEY","CONTAINER_CLASS","NAVIGATION_EVENT_TYPE","LEAD_TO_NOWHERE_URL","HTML_ELEMENT_SPAN_NAME","HTML_ELEMENT_ICON_NAME","HTML_ELEMENT_ROLE_ATTR_NAME","HTML_ELEMENT_ROLE_ATTR_VALUE","ICON_SHAPE_ATTR_NAME","ICON_SHAPE_ATTR_VALUE","ICON_SIZE_ATTR_NAME","ICON_SIZE_ATTR_VALUE","ICON_CLASS_ATTR_NAME","ICON_CLASS_ATTR_VALUE","ICON_TITLE_ATTR_NAME","KB_URL","element","nativeElement","isLink","isButton","prepareExternalLink","button","index","addClass","setText","decorateLink","addLinkRole","initializeNavigationHandler","HTMLButtonElement","HTMLAnchorElement","span","createElement","innerText","getText","appendChild","icon","setAttribute","anchorText","key","linkElement","href","style","display","addEventListener","helpId","askVMware","articleId","navigateToAddress","url","routes","path","component","IoVmMetricsDialogModule","PerfDashboardVsan2DiskScsifwData","createPerfGraph","RATE_BYTES_TYPE","TIME_MS_TYPE","upper"],"mappings":"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","file":"135-es5.js","sourcesContent":["/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ClrButton} from \"@clr/angular\";\n\n/**\n * Use this class as base class for directive, which handles clr-button. It will help to link the rendered button with\n * the clr-button on which the directive is applied.\n */\nexport abstract class ClrButtonBaseDirective {\n\n   constructor(private clrButton: ClrButton) {\n      if (!clrButton) {\n         return;\n      }\n      // name should be set, if not provided in template - generate one. ClrButtom#name is used to generate the name\n      // attribute of the markup button. Later the name is used to match the generated markup with the directive.\n      if (!clrButton.name) {\n         clrButton.name = Math.random().toString();\n      }\n\n      const directiveHolder: DirectiveHolder = (clrButton as DirectiveHolder);\n      directiveHolder.directives = directiveHolder.directives || [];\n      directiveHolder.directives.push(this);\n   }\n\n   /**\n    * This method will be called when the actual html button is rendered.\n    */\n   abstract resolveButton(clrButton: ClrButton, button: HTMLButtonElement, index: number);\n}\n\nexport interface DirectiveHolder extends ClrButton {\n   directives: ClrButtonBaseDirective[];\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {PerfTimeRangeData} from \"@generated/perf-time-range-data\";\nimport {Injectable} from \"@angular/core\";\nimport {FullTimeRangeSelectionData} from \"@model/full-time-range-selection.data\";\nimport {PersistentStorageService} from \"@service/browser-storage.service\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\nimport {RangePickerState} from \"@component/datetime-picker/time-range-picker/range-picker-state\";\n\nexport class PersistedSelection {\n   fullTimeRangeSelection: FullTimeRangeSelectionData;\n   expiresIn: number;\n}\n\n/**\n * Persist data which is needed between multiple performance views.\n */\n@Injectable()\nexport class PerformancePersistenceService {\n   /**\n    * Cached time range selection is kept for 1 hour.\n    */\n   private readonly CACHE_DURATION_IN_MS: number = VsanDateTimeUtils.HOUR_IN_MILLISECONDS;\n   private readonly CACHE_KEY: string = \"performance-timerange-selection\";\n\n   constructor(private storageService: PersistentStorageService) {\n   }\n\n   saveSelection(timeRange: PerfTimeRangeData, state: RangePickerState) {\n      const expiresIn: number =\n            new Date().getTime() + this.CACHE_DURATION_IN_MS;\n      const fullTimeRangeData: FullTimeRangeSelectionData = {\n         timeRange: timeRange,\n         state: state,\n      };\n      const savedObject: PersistedSelection = {\n         fullTimeRangeSelection: fullTimeRangeData,\n         expiresIn: expiresIn,\n      };\n      this.storageService.set(this.CACHE_KEY, savedObject);\n   }\n\n   getPersistedSelection(): FullTimeRangeSelectionData {\n      const persistedSelection: PersistedSelection =\n            this.storageService.get<PersistedSelection>(this.CACHE_KEY);\n\n      if (persistedSelection == null || persistedSelection.fullTimeRangeSelection == null) {\n         return null;\n      }\n\n      const isCacheExpired: boolean =\n            this.clearCacheIfExpired(persistedSelection);\n      if (isCacheExpired) {\n         return null;\n      }\n\n      return persistedSelection.fullTimeRangeSelection;\n   }\n\n   /**\n    * Check if deleted timeRange is persisted in the browser storage, if so then it should be removed as well.\n    */\n   onTimeRangeDeletion(timeRange: PerfTimeRangeData) {\n      const persistedTimeRange = this.getPersistedSelection();\n      if (persistedTimeRange != null && timeRange.name === persistedTimeRange.timeRange.name) {\n         this.storageService.remove(this.CACHE_KEY);\n      }\n   }\n\n   private clearCacheIfExpired(persistedSelection: PersistedSelection): boolean {\n      const nowTimestamp = new Date().getTime();\n      // If more then 1 hour has passed, then delete persisted selection\n      if (persistedSelection.expiresIn < nowTimestamp) {\n         this.storageService.remove(this.CACHE_KEY);\n         return true;\n      }\n\n      return false;\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {PerfQuerySpec} from \"@generated/perf-query-spec\";\nimport {VsanPerfPropertyProvider} from \"@generated/vsan-perf-property-provider\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {PerfEntityStateData} from \"@generated/perf-entity-state-data\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {PerfDashboardView} from \"../../../support/model/perf-dashboard-view.data\";\nimport {VsanPerfDashboardCategory, VsanPerfDashboardView} from \"../../../support/model/perf-dashboard.data\";\nimport {PerfGraph} from \"@component/chart/performance/perf-graph\";\nimport {HostSubEntitiesData} from \"../../../support/util/perf-dashboard-sub-entities-data-query.service\";\nimport {DisplayEntityInfoType} from \"../../../support/view/advanced-perf-sub-entity-dashboard.component\";\nimport {GraphNodeType} from \"../graph-view/model/graph-node-details\";\nimport {EntityRefType} from \"@generated/entity-ref-type\";\nimport {PerfSelectionData, SupportNavData, SupportView} from \"../../../support/model/navigation/support-nav.data\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {StorageGroupIdentifier} from \"@component/diskmgmt/model/storage-group-identifier\";\nimport {DiskManagementNavigationContext} from \"@navigation/context/disk-management-navigation-context\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {UnavailableViewSpec} from \"@component/unavailable-view/unavailable-view-spec\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\nimport {PerformancePersistenceService} from \"@service/performance-persistence.service\";\nimport {PerfTimeRangeData} from \"@generated/perf-time-range-data\";\nimport {RangePickerState} from \"@component/datetime-picker/time-range-picker/range-picker-state\";\nimport {GraphMetric} from \"@component/chart/performance/graph-metrics.data\";\nimport {PerfForSupportUtil} from \"../../../support/util/perf-for-support-util\";\nimport {PerfDashboardVsan2DiskScsifwData} from \"../../../support/model/perf-dashboard-vsan2-disk-scsifw.data\";\n\n@Component({\n   templateUrl: \"io-vm-metrics-dialog.html\",\n   selector: \"vsan-io-vm-metrics-dialog\",\n})\nexport class IoVmMetricsDialogComponent implements OnInit {\n   PerfForSupportUtil: typeof PerfForSupportUtil = PerfForSupportUtil;\n   private DISK_GROUP_GRAPHS_IDS: string[] = [\n      \"com.vmware.vsan.perf.graph.disk-group.iopsOverhead\",\n      \"com.vmware.vsan.perf.graph.disk-group.latencyOverhead\",\n   ];\n\n   private PNIC_NETWORK_GRAPHS_IDS: string[] = [\n      \"com.vmware.vsan.perf.graph.network.pnic.throughput\",\n      \"com.vmware.vsan.perf.graph.network.pnic.loss.rate\",\n   ];\n\n   private VSAN2_DISK_SCSIFW_GRAPHS_IDS: string[] = [\n      \"com.vmware.vsan.perf.graph.vsan2-disk-scsifw.iopsDev\",\n      \"com.vmware.vsan.perf.graph.vsan2-disk-scsifw.throughputDev\",\n      \"com.vmware.vsan.perf.graph.vsan2-disk-scsifw.latencyDev\",\n   ];\n\n   @LoadingIndicator()\n   isLoading: boolean;\n\n   @ErrorMessage()\n   errorMessage: string;\n\n   title: string;\n   entityName: string;\n   additionalActionLabel: string;\n   additionalActionCallback: () => void;\n   primaryActionLabel: string;\n   primaryActionCallback: () => void;\n\n   clusterRef: ManagedObject;\n   private hostName: string;\n   private hostUuid: string;\n   private entityType: string;\n   private startDate: number;\n   private endDate: number;\n   dashboardView: PerfDashboardView;\n   filteredEntities: HostSubEntitiesData[];\n   graphs: PerfGraph[];\n   entitiesStateData: PerfEntityStateData[];\n   displayEntityInfo: DisplayEntityInfoType = DisplayEntityInfoType.ALL;\n   unavailableViewSpec: UnavailableViewSpec = UnavailableViewSpec.PERF_VIEW_NO_DATA;\n   isHistoricalMode: boolean;\n   hasMetrics: boolean;\n\n   private _historicalGraphMetricsByRefId: Map<string, GraphMetric>;\n   get historicalGraphMetricsByRefId(): {[key: string]: GraphMetric } {\n      return this._historicalGraphMetricsByRefId as unknown as {[key: string]: GraphMetric};\n   }\n\n   constructor(private perfDataProvider: VsanPerfPropertyProvider,\n         private navigationService: NavigationService,\n         private perfPersistenceService: PerformancePersistenceService) {}\n\n   @Loader()\n   async ngOnInit(): Promise<void> {\n      const context: IoVmMetricsDialogContext = VsanUiUtils.getModalContext();\n      this.entityName = context.entityName;\n      this.hostName = context.hostName;\n      this.hostUuid = context.hostUuid;\n      this.isHistoricalMode = context.isHistorical;\n      this.startDate = context.startDate;\n      this.endDate = context.endDate;\n      this.clusterRef = context.clusterRef;\n\n      switch (context.type) {\n         case GraphNodeType.NIC:\n            await this.initializeNicPerformance();\n            break;\n         case GraphNodeType.DISK_GROUP:\n            await this.initializeDiskGroupPerformance();\n            break;\n         case GraphNodeType.DISK:\n            await this.initializeDiskPerformance();\n            break;\n      }\n   }\n\n   getPerfEntityName(entityRefId: string): string {\n      return entityRefId?.split(\"|\")[1];\n   }\n\n   @Loader()\n   private async initializeNicPerformance(): Promise<void> {\n      this.title = VsanUiUtils.getString(\"vsan.monitor.vm.iodiagnostics.metrics.pNicNetwork.label\");\n      this.primaryActionLabel =\n            VsanUiUtils.getString(\"vsan.monitor.vm.iodiagnostics.metrics.pNicNetwork.perfDetails\");\n      this.primaryActionCallback = this.navigateToPerformance;\n\n      this.dashboardView = PerfDashboardView.PNIC;\n      this.graphs = this.getGraphs(this.PNIC_NETWORK_GRAPHS_IDS);\n\n      this.entityType = EntityRefType.VSAN_PNIC_NET();\n      this.entitiesStateData =\n            await this.perfDataProvider.getEntityPerfStateForWildcards(this.clusterRef, [this.preparePerfSpec()]);\n      this.hasMetrics = !!this.graphs?.length && !!this.entitiesStateData?.length &&\n            !!this.entitiesStateData.find(data =>\n                  data?.entityRefId?.includes(this.hostUuid))?.metricsSeries?.length;\n      this.setNicPerformanceMode();\n   }\n\n   private setNicPerformanceMode(): void {\n      if (!this.isHistoricalMode) {\n         this.displayEntityInfo = DisplayEntityInfoType.ONLY_SUB_ENTITIES;\n         this.filteredEntities = [new HostSubEntitiesData(this.hostName, null)];\n      } else {\n         this.setHistoricalData(this.hostUuid);\n      }\n   }\n\n   @Loader()\n   private async initializeDiskPerformance(): Promise<void> {\n      this.title = VsanUiUtils.getString(\"vsan.monitor.vm.iodiagnostics.metrics.disk.label\");\n      this.primaryActionLabel =\n            VsanUiUtils.getString(\"vsan.monitor.vm.iodiagnostics.metrics.diskGroup.diagnostics\");\n      // TODO: (REPA) (vasilevd) Test navigation once graph is implemented in perf view\n      this.primaryActionCallback = this.navigateToPerformance;\n      this.additionalActionLabel = VsanUiUtils.getString(\"vsan.monitor.vm.iodiagnostics.metrics.diskGroup.view\");\n      this.additionalActionCallback = this.navigateToDiskManagement;\n\n      this.dashboardView = PerfDashboardView.DISK;\n      this.graphs = PerfDashboardVsan2DiskScsifwData.VSAN2_DISK_SCSIFW_CHARTS.filter(chart =>\n            this.VSAN2_DISK_SCSIFW_GRAPHS_IDS.includes(chart.id));\n\n      this.entityType = EntityRefType.VSAN2_DISK_SCSIFW();\n      this.entitiesStateData =\n            await this.perfDataProvider.getEntityPerfStateForWildcards(this.clusterRef, [this.preparePerfSpec()]);\n      this.hasMetrics = !!this.graphs?.length && !!this.entitiesStateData\n                  .find(data => data?.entityRefId?.includes(this.entityName))?.metricsSeries?.length;\n      this.setDiskGroupPerformanceMode();\n   }\n\n   @Loader()\n   private async initializeDiskGroupPerformance(): Promise<void> {\n      this.title = VsanUiUtils.getString(\"vsan.monitor.vm.iodiagnostics.metrics.diskGroup.label\");\n      this.primaryActionLabel =\n            VsanUiUtils.getString(\"vsan.monitor.vm.iodiagnostics.metrics.diskGroup.diagnostics\");\n      this.primaryActionCallback = this.navigateToPerformance;\n      this.additionalActionLabel = VsanUiUtils.getString(\"vsan.monitor.vm.iodiagnostics.metrics.diskGroup.view\");\n      this.additionalActionCallback = this.navigateToDiskManagement;\n\n      this.dashboardView = PerfDashboardView.DISKGROUP;\n      this.graphs = this.getGraphs(this.DISK_GROUP_GRAPHS_IDS);\n\n      this.entityType = EntityRefType.DISK_GROUP();\n      this.entitiesStateData =\n            await this.perfDataProvider.getEntityPerfStateForWildcards(this.clusterRef, [this.preparePerfSpec()]);\n      this.hasMetrics = !!this.graphs?.length && !!this.entitiesStateData?.length &&\n            !!this.entitiesStateData\n                  .find(data => data?.entityRefId?.includes(this.entityName))?.metricsSeries?.length;\n      this.setDiskGroupPerformanceMode();\n   }\n\n   private setDiskGroupPerformanceMode(): void {\n      if (!this.isHistoricalMode) {\n         this.displayEntityInfo = DisplayEntityInfoType.NONE;\n         this.filteredEntities = [new HostSubEntitiesData(this.hostName, [{\n            name: this.entityName,\n            uuid: this.entityName,\n         }])];\n      } else {\n         this.setHistoricalData(this.entityName);\n      }\n   }\n\n   private setHistoricalData(objectUuid: string = null): void {\n      this._historicalGraphMetricsByRefId = new Map<string, GraphMetric>();\n      this.entitiesStateData\n            .filter(data => !objectUuid || data.entityRefId.includes(objectUuid))\n            .forEach(data => {\n               this._historicalGraphMetricsByRefId.set(data?.entityRefId, new GraphMetric(data, this.graphs));\n            });\n   }\n\n   private getGraphs(displayGraphs: string[] = null): PerfGraph[] {\n      const pivotalDashboard: VsanPerfDashboardView = VsanPerfDashboardCategory.PIVOTAL_DASHBOARDS\n            .find(dashboard => dashboard.view === this.dashboardView);\n      if (pivotalDashboard) {\n         return pivotalDashboard.children.filter(c => c.isPivotalGraph &&\n               (VsanUiUtils.isEmpty(displayGraphs) || displayGraphs.some(g => g === c.id)));\n      }\n\n      const dashboardCategory: VsanPerfDashboardCategory = VsanPerfDashboardCategory.CATEGORIED_DASHBOARDS\n            .find(category => category.children.some(d => d.view === this.dashboardView));\n      if (dashboardCategory) {\n         return dashboardCategory.children.find(d => d.view === this.dashboardView)\n               .children.filter(c => c.isPivotalGraph &&\n                     (VsanUiUtils.isEmpty(displayGraphs) || displayGraphs.some(g => g === c.id)));\n      }\n\n      return null;\n   }\n\n   private preparePerfSpec(): PerfQuerySpec {\n      return PerfQuerySpec.Factory.create(\n            this.entityType,\n            \"*\", // wild card query, * to match all the entityIds\n            null, /* group:string, not used*/\n            this.startDate,\n            this.endDate,\n            null, /* interval:number , not used*/\n            null /* labels:string[], not used*/);\n   }\n\n   private navigateToPerformance(): void {\n      const perfTimeRange: PerfTimeRangeData =\n            PerfTimeRangeData.Factory.create(\n                  null,\n                  this.startDate,\n                  VsanDateTimeUtils.roundToMinuteStart(this.endDate),\n                  this.clusterRef);\n\n      this.perfPersistenceService.saveSelection(perfTimeRange, RangePickerState.CUSTOM_RANGE);\n\n      const navData: SupportNavData = new SupportNavData(SupportView.ADVANCED_PERFORMANCE,\n            new PerfSelectionData(this.dashboardView));\n      if (!this.isHistoricalMode && this.entityName) {\n         navData.perfSelection.objectIdentifier = this.entityName;\n      }\n\n      this.navigationService.navigateToAndCloseModal(PlatformExtension.CLUSTER_SUPPORT, this.clusterRef, navData);\n   }\n\n   private navigateToDiskManagement(): void {\n      const groupIdentifier: StorageGroupIdentifier = StorageGroupIdentifier.fromDiskGroupName(this.entityName);\n      const context: DiskManagementNavigationContext = {\n         hostRef: null,\n         hostName: !this.isHistoricalMode ? this.hostName : null,\n         diskGroup: !this.isHistoricalMode ? groupIdentifier : null,\n         isHostDetailsLevel: !this.isHistoricalMode,\n      };\n      this.navigationService.navigateToAndCloseModal(PlatformExtension.DISK_MANAGEMENT, this.clusterRef, context);\n   }\n}\n\nexport interface IoVmMetricsDialogContext {\n   clusterRef: ManagedObject;\n   entityName: string;\n   hostName: string;\n   hostUuid: string;\n   /**\n    * If the host is removed from the cluster, then only the hostUuid is going to be presented.\n    * Hence the handling the performance fetch for such historical entities would be different.\n    */\n   isHistorical: boolean;\n   type: GraphNodeType;\n   startDate: number;\n   endDate: number;\n}","<!-- Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-edit-prompt [title]=\"title\"\n                  [subtitle]=\"entityName\"\n                  [blockContent]=\"isLoading\"\n                  [blockButton]=\"isLoading || !hasMetrics\"\n                  [blockAdditionalButton]=\"isLoading || !hasMetrics\"\n                  [(alertMessage)]=\"errorMessage\"\n                  [confirmText]=\"primaryActionLabel\"\n                  (onConfirm)=\"primaryActionCallback()\"\n                  [additionalButtonText]=\"additionalActionLabel ? additionalActionLabel : null\"\n                  (onAdditionalAction)=\"additionalActionCallback()\">\n   <vsan-unavailable-view *ngIf=\"!isLoading && !hasMetrics\"\n                          [unavailableViewSpec]=\"unavailableViewSpec\">\n   </vsan-unavailable-view>\n   <ng-container *ngIf=\"hasMetrics\">\n      <vsan-advanced-perf-sub-entity-dashboard *ngIf=\"!isHistoricalMode\"\n                                               [clusterRef]=\"clusterRef\"\n                                               [showAllSupported]=\"false\"\n                                               [isNested]=\"false\"\n                                               [displayEntityInfo]=\"displayEntityInfo\"\n                                               [filterObjects]=\"filteredEntities\"\n                                               [displayedGraphs]=\"graphs\"\n                                               [perfEntitiesStateData]=\"entitiesStateData\"\n                                               [view]=\"dashboardView\"\n                                               [compactMode]=\"false\">\n      </vsan-advanced-perf-sub-entity-dashboard>\n      <ng-container *ngIf=\"isHistoricalMode\">\n         <ng-container *ngFor=\"let entity of historicalGraphMetricsByRefId | keyvalue\">\n            <div *ngIf=\"getPerfEntityName(entity?.key)\" class=\"sub-entity-info\">\n               <clr-icon [attr.shape]=\"PerfForSupportUtil.getEntityIcon(dashboardView)\" class=\"is-info\"></clr-icon>\n               <span class=\"entity-name\">{{getPerfEntityName(entity?.key)}}</span>\n            </div>\n            <vsan-perf-charts-container [data]=\"[entity?.value]\"\n                                        [isShowGraphDescription]=\"false\"\n                                        [isEmptyChartsVisible]=\"false\">\n            </vsan-perf-charts-container>\n         </ng-container>\n      </ng-container>\n   </ng-container>\n</vsan-edit-prompt>\n","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nexport class VsanDialogUtil {\n   static readonly CAPACITY_MANAGEMENT_DIALOG: VsanDialogProperties = {\n      width: 800,\n      height: 700,\n   };\n\n   static readonly DELETE_VOLUME_DIALOG: VsanDialogProperties = {\n      width: 500,\n      height: 250,\n   };\n\n   static readonly MIGRATE_VOLUME_DIALOG: VsanDialogProperties = {\n      width: 1030,\n      height: 710,\n   };\n\n   static readonly REAPPLY_VOLUME_POLICY_DIALOG: VsanDialogProperties = {\n      width: 700,\n      height: 250,\n   };\n\n   static readonly DUPLICATE_PCI_ID_MODEL_SELECTION_DIALOG: VsanDialogProperties = {\n      width: 800,\n      height: 500,\n   };\n\n   static readonly HEALTH_RESTORE_ACTION_DIALOG: VsanDialogProperties = {\n      width: 550,\n      height: 250,\n   };\n\n   // Keep in sync with plugin.xml extension point\n   static readonly CLUSTER_POWER_ON_DIALOG: VsanDialogProperties = {\n      width: 600,\n      height: 230,\n   };\n\n   static readonly VM_IO_DIAGNOSTICS_METRICS_DIALOG: VsanDialogProperties = {\n      width: 900,\n      height: 700,\n   };\n\n   static readonly VM_IO_DIAGNOSTICS_LATENCY_DIALOG: VsanDialogProperties = {\n      width: 1000,\n      height: 500,\n   };\n\n   static readonly VM_IO_DIAGNOSTICS_DOM_OWNER_LATENCY_DIALOG: VsanDialogProperties = {\n      width: 1000,\n      height: 400,\n   };\n\n   static readonly PERF_SVC_EDIT_ACTION_DIALOG: VsanDialogProperties = {\n      width: 800,\n      height: 450,\n   };\n\n   static readonly PERF_SVC_ENABLE_ACTION_DIALOG: VsanDialogProperties = {\n      width: 800,\n      height: 250,\n   };\n\n   static readonly CLAIM_DISKS_ACTION_DIALOG: VsanDialogProperties = {\n      width: 1200,\n      height: 650,\n   };\n\n   static readonly VSAN_DISK_CLAIM_ACTION_DIALOG: VsanDialogProperties = {\n      width: 670,\n      height: 300,\n   };\n}\n\nexport class VsanDialogProperties {\n   width: number;\n   height: number;\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {\n   AfterViewInit,\n   ComponentFactoryResolver,\n   Directive,\n   ElementRef,\n   Host,\n   Input,\n   Optional,\n   Renderer2,\n   Self,\n} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {NavigationService} from \"@navigation/navigation.service\";\nimport {ClrButtonBaseDirective} from \"@directive/clr-button-group/clr-button-base.directive\";\nimport {ClrButton} from \"@clr/angular\";\n\n/**\n * Decorates a button or an anchor as external link. Requires one of the optional parameters articleId, helpId or url.\n *\n * @param external-link: Optional. Localization key of the text label of the external link. If omitted default label\n * will be used - \"Learn more\" for anchors or \"Ask VMWare\" for buttons.\n * @param articleId - Optional. Id of article in knowledge base.\n * @param helpId - Optional. Help id which will redirect to Knowledge Base.\n * @param url - Optional. External URL.\n */\n@Directive({\n   selector: \"a[external-link], button[external-link], clr-button[external-link]\",\n})\nexport class ExternalLinkDirective extends ClrButtonBaseDirective implements AfterViewInit {\n   private readonly ASK_VMWARE_DEFAULT_TEXT_KEY: string = \"vsan.common.askVMware\";\n   private readonly LEARN_MORE_DEFAULT_TEXT_KEY: string = \"vsan.common.learnMore\";\n\n   private readonly CONTAINER_CLASS: string = \"icon-name-container\";\n   private readonly NAVIGATION_EVENT_TYPE: string = \"click\";\n   private readonly LEAD_TO_NOWHERE_URL: string = \"javascript://\";\n   private readonly HTML_ELEMENT_SPAN_NAME: string = \"span\";\n   private readonly HTML_ELEMENT_ICON_NAME: string = \"clr-icon\";\n   private readonly HTML_ELEMENT_ROLE_ATTR_NAME: string = \"role\";\n   private readonly HTML_ELEMENT_ROLE_ATTR_VALUE: string = \"link\";\n   private readonly ICON_SHAPE_ATTR_NAME: string = \"shape\";\n   private readonly ICON_SHAPE_ATTR_VALUE: string = \"pop-out\";\n   private readonly ICON_SIZE_ATTR_NAME: string = \"size\";\n   private readonly ICON_SIZE_ATTR_VALUE: string = \"16\";\n   private readonly ICON_CLASS_ATTR_NAME: string = \"class\";\n   private readonly ICON_CLASS_ATTR_VALUE: string = \"link\";\n   private readonly ICON_TITLE_ATTR_NAME: string = \"title\";\n\n   private readonly KB_URL: string = \"http://kb.vmware.com/kb/\";\n\n   @Input(\"external-link\")\n   anchorText: string;\n\n   @Input()\n   articleId: string;\n\n   @Input()\n   helpId: string;\n\n   @Input()\n   url: string;\n\n   constructor(private el: ElementRef<HTMLElement>,\n         private resolver: ComponentFactoryResolver,\n         private renderer: Renderer2,\n         private navigationService: NavigationService,\n         // this variable will be initialized only if the host is clr-button\n         @Host() @Self() @Optional() clrButton: ClrButton) {\n      super(clrButton);\n   }\n\n   ngAfterViewInit(): void {\n      const element: HTMLElement = this.el.nativeElement;\n      // continue only if element is HTML link or button\n      if (!this.isLink(element) && !this.isButton(element)) {\n         // element is clr-button, wait until html button for it is resolved - handled by resloveButton\n         return;\n      }\n      this.prepareExternalLink(element);\n   }\n\n   resolveButton(clrButton: ClrButton, button: HTMLButtonElement, index: number): void {\n      // only if element is clr-button. At this point the html button is already resolved. Apply on it.\n      this.prepareExternalLink(button);\n   }\n\n   private prepareExternalLink(element: HTMLElement): void {\n      this.renderer.addClass(element, this.CONTAINER_CLASS);\n\n      this.setText(element);\n      if (this.isLink(element)) {\n         this.decorateLink(element);\n      } else {\n         this.addLinkRole(element);\n      }\n\n      this.initializeNavigationHandler(element);\n   }\n\n   private isButton(element: HTMLElement): boolean {\n      return element instanceof HTMLButtonElement;\n   }\n\n   private isLink(element: HTMLElement): boolean {\n      return element instanceof HTMLAnchorElement;\n   }\n\n   private setText(element: HTMLElement): void {\n      const span: HTMLSpanElement = this.renderer.createElement(this.HTML_ELEMENT_SPAN_NAME);\n      span.innerText = this.getText(element);\n      this.renderer.appendChild(element, span);\n\n      const icon: HTMLSpanElement = this.renderer.createElement(this.HTML_ELEMENT_ICON_NAME);\n      icon.setAttribute(this.ICON_SHAPE_ATTR_NAME, this.ICON_SHAPE_ATTR_VALUE);\n      icon.setAttribute(this.ICON_SIZE_ATTR_NAME, this.ICON_SIZE_ATTR_VALUE);\n      icon.setAttribute(this.ICON_CLASS_ATTR_NAME, this.ICON_CLASS_ATTR_VALUE);\n      // Set title of the icon for screen readers clarity\n      icon.setAttribute(this.ICON_TITLE_ATTR_NAME, VsanUiUtils.getString(\"vsan.screenReader.label.externalLink.icon\"));\n      this.renderer.appendChild(element, icon);\n   }\n\n   private getText(element: HTMLElement): string {\n      if (this.anchorText) {\n         return this.anchorText;\n      }\n      const key: string = this.isButton(element) ? this.ASK_VMWARE_DEFAULT_TEXT_KEY : this.LEARN_MORE_DEFAULT_TEXT_KEY;\n      return VsanUiUtils.getString(key);\n   }\n\n   private decorateLink(element: HTMLElement): void {\n      const linkElement: HTMLLinkElement = element as HTMLLinkElement;\n      // don't use href attribute. If omitted, the link will be not visualized properly.\n      linkElement.href = this.LEAD_TO_NOWHERE_URL;\n      // display link on same line\n      linkElement.style.display = \"inline-flex\";\n   }\n\n   private initializeNavigationHandler(element: HTMLElement): void {\n      element.addEventListener(this.NAVIGATION_EVENT_TYPE, () => {\n         if (this.helpId) {\n            this.navigationService.askVMware(this.helpId);\n            return;\n         }\n         if (this.articleId) {\n            this.navigationService.navigateToAddress(`${this.KB_URL}${this.articleId}`);\n            return;\n         }\n         if (this.url) {\n            this.navigationService.navigateToAddress(this.url);\n         }\n      });\n   }\n\n   // Indicate external navigation by assigning \"link\" role\n   private addLinkRole(element: HTMLElement): void {\n      this.renderer.setAttribute(element, this.HTML_ELEMENT_ROLE_ATTR_NAME, this.HTML_ELEMENT_ROLE_ATTR_VALUE);\n   }\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\nimport {IoVmMetricsDialogComponent} from \"./io-vm-metrics-dialog.component\";\nimport {SupportPerfModule} from \"../../../support/support-perf.module\";\nimport {VsanChartModule} from \"@component/chart/chart.module\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\n\nconst routes: Routes = [\n   {\n      path: \"\",\n      component: IoVmMetricsDialogComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      PromptModule,\n      UnavailableViewModule,\n      RouterModule.forChild(routes),\n      VsanChartModule,\n      SupportPerfModule,\n   ],\n   declarations: [\n      IoVmMetricsDialogComponent,\n   ],\n})\nexport class IoVmMetricsDialogModule {\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {PerfGraph, PerfGraphMetrics} from \"../../common/component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"../../common/component/chart/performance/perf-chart-util\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfGraphThresholdDirection} from \"@generated/perf-graph-threshold-direction\";\n\nexport class PerfDashboardVsan2DiskScsifwData {\n   static readonly VSAN2_DISK_SCSIFW_CHARTS: PerfGraph[] = [\n      // Device IOPS\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.vsan2-disk-scsifw.iopsDev\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.deviceIOPS.label\"),\n            null,\n            [\n               new PerfGraphMetrics(\"iopsDevRead\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.deviceIOPS.iopsDevRead.label\")),\n               new PerfGraphMetrics(\"iopsDevWrite\",\n                     VsanUiUtils.getString(\n                           \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.deviceIOPS.iopsDevWrite.label\")),\n            ]),\n      // Device Throughput\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.vsan2-disk-scsifw.throughputDev\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devThroughput.label\"),\n            PerfChartUtil.RATE_BYTES_TYPE,\n            [\n               new PerfGraphMetrics(\"throughputDevRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devThroughput.throughputDevRead.label\")),\n               new PerfGraphMetrics(\"throughputDevWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devThroughput.throughputDevWrite.label\")),\n            ]),\n      // Device Latency\n      PerfGraph.createPerfGraph(\n            \"com.vmware.vsan.perf.graph.vsan2-disk-scsifw.latencyDev\",\n            VsanUiUtils.getString(\"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.label\"),\n            PerfChartUtil.TIME_MS_TYPE,\n            [\n               new PerfGraphMetrics(\"latencyDevRead\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevRead.label\")),\n               new PerfGraphMetrics(\"latencyDevWrite\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevWrite.label\")),\n               new PerfGraphMetrics(\"latencyDevGAvg\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevGAvg.label\")),\n               new PerfGraphMetrics(\"latencyDevDAvg\", VsanUiUtils.getString(\n                     \"vsan.perf.advanced.dashboards.dropdown.lsom.cache.devLatency.latencyDevDAvg.label\")),\n            ],\n            PerfGraphThreshold.Factory.create(\"\", \"\", 30000, 50000, PerfGraphThresholdDirection.upper)),\n   ];\n}"]}