{"version":3,"sources":["webpack:///src/app/vsan/update/hcl-database.component.ts","webpack:///src/app/vsan/common/directive/signpost-title/signpost-title.directive.ts","webpack:///src/app/vsan/update/update.html","webpack:///src/app/vsan/common/component/datagrid/tree-datagrid.module.ts","webpack:///src/app/vsan/common/service/flow/error-handler.decorator.ts","webpack:///src/app/vsan/update/release-catalog.component.ts","webpack:///src/app/vsan/update/update.module.ts","webpack:///src/app/vsan/common/component/popup-list/popup-list.module.ts","webpack:///src/app/vsan/common/component/navigation/vsan-breadcrumb.module.ts","webpack:///src/app/vsan/update/duplicate-pci-id-update-dialog.html","webpack:///src/app/vsan/common/component/cell/common-cells.module.ts","webpack:///src/app/vsan/common/component/inventory/inventory-browser.module.ts","webpack:///src/app/vsan/update/duplicate-pci-id-update-dialog.component.ts","webpack:///src/app/vsan/update/hcl-database.html","webpack:///src/app/vsan/update/release-catalog.html","webpack:///src/app/vsan/update/update.component.ts","webpack:///src/app/vsan/common/vsan-common.module.ts","webpack:///src/app/vsan/common/component/search/search.module.ts","webpack:///src/app/vsan/common/component/action-button/action-button.module.ts"],"names":["HclDatabaseComponent","updateDbService","hasEditPermissions","onError","handleLastUpdateResult","timestamp","now","Date","date","days","getTime","MILLISECONDS_PER_DAY","lastUpdated","getString","toFixed","toLocaleDateString","load","undefined","getHclLastUpdatedDate","contextObject","error","updateError","emit","srMessage","SignpostTitleDirective","el","renderer","BUTTON_TAG_NAME","CLR_ICON_TAG_NAME","TITLE_ATTRIBUTE","ARIA_EXPANDED_ATTRIBUTE","ARIA_LABEL_ATTRIBUTE","signpostTitle","signpostIcon","nativeElement","getElementsByTagName","item","setAttribute","button","TreeDatagridModule","ErrorHandler","props","targetClass","functionName","descriptor","name","errorHandler","value","ReleaseCatalogComponent","fetchData","getReleaseCatalogLastUpdatedDate","e","updateRoutes","path","component","UpdateModule","PopupListModule","VsanBreadcrumbModule","CommonCellsModule","InventoryBrowserModule","DuplicatePciIdUpdateDialogComponent","updateService","dataService","cdRef","Icon","CapacityUnit","StorageSizeBaseUnit","VsanUiUtils","context","getModalContext","clusterRef","clusterName","isOpenedFromHealthCheck","getProperty","fetch","getDuplicateDevices","clusterSelections","originalSelections","deepClone","isConfigurationChanged","setDuplicateDevices","closeModalDialog","some","s","index","currentSelection","sharedSelection","selectedModel","originalSelection","vcgId","clusterSelection","selectedVcgId","toNumber","models","find","m","onClusterDeviceSelection","selection","hostSelections","forEach","detectChanges","UpdateComponent","permissionService","capabilityService","isUpdateVumReleaseCatalogOfflineSupported","loadData","hasVcPermissions","GLOBAL_SETTINGS","getIsUpdateVumReleaseCatalogOfflineSupported","alertMessage","VsanCommonModule","SearchModule","ActionButtonModule"],"mappings":"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","file":"115-es5.js","sourcesContent":["/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {UpdateDbService} from \"@generated/update-db-service\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"hcl-database.html\",\n   selector: \"vsan-hcl-database\",\n})\nexport class HclDatabaseComponent implements OnInit {\n\n   private static readonly MILLISECONDS_PER_DAY: number = 86400000;\n\n   /**\n    * Whether the upload action is allowed\n    */\n   @Input()\n   hasEditPermissions: boolean = false;\n\n   /**\n    * Pass any errors to the parent container\n    */\n   @Output()\n   onError: EventEmitter<string> = new EventEmitter<string>();\n\n   clusterRef: ManagedObject;\n   lastUpdated: string;\n\n   @LoadingIndicator()\n   updatingIndicatorVisible: boolean;\n\n   constructor(private updateDbService: UpdateDbService) {\n   }\n\n   ngOnInit(): void {\n      this.load();\n   }\n\n   @RefreshHandler\n   @Loader({srMessage: \"vsan.vc.configure.hclDatabase.title\"})\n   async load(): Promise<void> {\n      this.lastUpdated = undefined;\n      const timestamp: number = await this.updateDbService.getHclLastUpdatedDate(ManagedObject.contextObject);\n      this.handleLastUpdateResult(timestamp);\n   }\n\n   private handleLastUpdateResult = (timestamp: number) => {\n      if (timestamp) {\n         const now: Date = new Date();\n         const date: Date = new Date(timestamp);\n         const days: number = (now.getTime() - date.getTime()) / HclDatabaseComponent.MILLISECONDS_PER_DAY;\n         this.lastUpdated = VsanUiUtils.getString(\"vsan.vc.configure.hclDatabase.value.lastUpdated\",\n               days.toFixed(0), date.toLocaleDateString());\n      } else {\n         this.lastUpdated = VsanUiUtils.getString(\"vsan.vc.configure.releaseCatalog.value.lastUpdated.unknown\");\n      }\n   };\n\n   @ErrorHandler()\n   handleError(error: string): void {\n      this.updateError(VsanUiUtils.getString(\"vsan.vc.configure.hclDatabase.error.noVersionInfo\"));\n   }\n\n   updateError(error: string): void {\n      this.onError.emit(error);\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterViewInit, Directive, ElementRef, Input, Renderer2} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * Attribute directive for setting a custom title to the clr-icon inside a clr-signpost.\n * It also adds aria-label with the same value and aria-expanded=\"false\" to the button, holding the icon.\n * Used for changing the title when a clr-icon is not explicitly added inside a clr-signpost.\n */\n@Directive({\n   selector: \"clr-signpost\",\n})\nexport class SignpostTitleDirective implements AfterViewInit {\n   private readonly BUTTON_TAG_NAME: string = \"button\";\n   private readonly CLR_ICON_TAG_NAME: string = \"clr-icon\";\n\n   private readonly TITLE_ATTRIBUTE: string = \"title\";\n   private readonly ARIA_EXPANDED_ATTRIBUTE: string = \"aria-expanded\";\n   private readonly ARIA_LABEL_ATTRIBUTE: string = \"aria-label\";\n\n   @Input(\"vsan-signpost-title\")\n   signpostTitle: string;\n\n   constructor(private el: ElementRef<HTMLElement>,\n         private renderer: Renderer2) {\n   }\n\n   ngAfterViewInit(): void {\n      if (!this.signpostTitle) {\n         return;\n      }\n\n      const signpostIcon: Element = this.el.nativeElement.getElementsByTagName(this.CLR_ICON_TAG_NAME).item(0);\n      if (signpostIcon) {\n         this.renderer.setAttribute(signpostIcon, this.TITLE_ATTRIBUTE, VsanUiUtils.getString(this.signpostTitle));\n      }\n      const button: Element = this.el.nativeElement.getElementsByTagName(this.BUTTON_TAG_NAME).item(0);\n      if (button) {\n         this.renderer.setAttribute(button, this.ARIA_EXPANDED_ATTRIBUTE, \"false\");\n         this.renderer.setAttribute(button, this.ARIA_LABEL_ATTRIBUTE, VsanUiUtils.getString(this.signpostTitle));\n      }\n   }\n}\n","<!--Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<h5>\n   {{\"vsan.vc.configure.update.title\" | localized}}\n</h5>\n<vsan-validation *ngIf=\"alertMessage\"\n                 (onClosed)=\"alertMessage = null\"\n                 [alert]=\"alertMessage\">\n</vsan-validation>\n\n<vsan-hcl-database [hasEditPermissions]=\"hasEditPermissions\"\n                   (onError)=\"setErrorMessage($event)\">\n</vsan-hcl-database>\n\n<vsan-release-catalog *ngIf=\"isUpdateVumReleaseCatalogOfflineSupported\"\n                      [hasEditPermissions]=\"hasEditPermissions\"\n                      (onError)=\"setErrorMessage($event)\">\n</vsan-release-catalog>","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {TreeExpanderComponent} from \"@component/datagrid/tree-expander.component\";\nimport {TreeColumnComponent} from \"@component/datagrid/tree-column.component\";\nimport {EnumeratedFilterComponent} from \"./filter/enumerated-filter.component\";\nimport {EnumeratedFilterItemComponent} from \"./filter/enumerated-filter-item.component\";\nimport {EnumFilterComponent} from \"@component/datagrid/filter/enum-filter.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n   ],\n   declarations: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumeratedFilterComponent,\n      EnumFilterComponent,\n   ],\n   exports: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumFilterComponent,\n   ],\n})\nexport class TreeDatagridModule {\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {LoadingFlowWrapper} from \"@service/flow/loading-flow-wrapper.data\";\n\n/**\n * This property decorator is supposed to be used along with the @Loader decorator.\n * If an exception is thrown during the execution of the method decorated with @Loader\n * the ErrorHandler method will be invoked. You can define as many ErrorHandlers as you want,\n * but they must be with different names. The name can be provided as input to the decorator.\n * If a name is set to the ErrorHandler it will handle only the errors thrown by Loader functions\n * with the same name. If no name is passed to the ErrorHandler, it will handle only the errors\n * from Loader functions with no name.\n *\n * <pre>\n * // Example 1:\n * @Loader()\n * loadSyncData(): any {\n *    throw new Error(\"Failed to load sync data\");\n * }\n *\n * @ErrorHandler()\n * handleError(err: any) {\n *    // handle the error.\n * }\n *...\n *\n * // Example 2\n *\n * @Loader({name: \"data-loading-flow})\n * async loadAsyncData(): Promise<any> {\n *    return Promise.reject(\"Failed to load async data\");\n * }\n *\n * @ErrorHandler({name: \"data-loading-flow})\n * handleError(err: any) {\n *    // handle the error.\n * }\n * ...\n * </pre>\n */\nexport function ErrorHandler(props?: ErrorHandlerProperties): MethodDecorator {\n   props = props || {};\n   return (targetClass: any, functionName: string, descriptor: PropertyDescriptor): void => {\n      (new LoadingFlowWrapper(targetClass, props.name)).errorHandler = descriptor.value;\n   };\n}\n\n/**\n * Properties of the ErrorHandler decorator.\n */\nexport interface ErrorHandlerProperties {\n\n   /**\n    * Indicates which @Loder should be handled by this @ErrorHandler\n    */\n   name?: string;\n}\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {UpdateDbService} from \"@generated/update-db-service\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"release-catalog.html\",\n   selector: \"vsan-release-catalog\",\n   styleUrls: [\"release-catalog.scss\"],\n})\nexport class ReleaseCatalogComponent implements OnInit {\n\n   /**\n    * Whether the upload action is allowed\n    */\n   @Input()\n   hasEditPermissions: boolean = false;\n\n   /**\n    * Pass any errors to the parent container\n    */\n   @Output()\n   onError: EventEmitter<string> = new EventEmitter<string>();\n\n   lastUpdated: string;\n\n   @LoadingIndicator()\n   updating: boolean;\n\n   private static readonly MILLISECONDS_PER_DAY: number = 86400000;\n\n   constructor(private updateDbService: UpdateDbService) {\n   }\n\n   ngOnInit(): void {\n      this.fetchData();\n   }\n\n   @RefreshHandler\n   @Loader({srMessage: \"vsan.vc.configure.releaseCatalog.title\"})\n   async fetchData(): Promise<void> {\n      const timestamp: number = await this.updateDbService.getReleaseCatalogLastUpdatedDate(ManagedObject.contextObject);\n      this.handleLastUpdateResult(timestamp);\n   }\n\n   private handleLastUpdateResult = (timestamp: number) => {\n      if (!timestamp) {\n         this.lastUpdated = null;\n         return;\n      }\n      const now: Date = new Date();\n      const date: Date = new Date(timestamp);\n\n      const days: number = (now.getTime() - date.getTime()) / ReleaseCatalogComponent.MILLISECONDS_PER_DAY;\n\n      this.lastUpdated = VsanUiUtils.getString(\"vsan.vc.configure.releaseCatalog.value.lastUpdated\",\n            days.toFixed(0), date.toLocaleDateString());\n   };\n\n   @ErrorHandler()\n   handleError(e: string): void {\n      this.onError.emit(e);\n   }\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {UpdateComponent} from \"./update.component\";\nimport {Routes, RouterModule} from \"@angular/router\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {HclDatabaseComponent} from \"./hcl-database.component\";\nimport {UpdateActionsModule} from \"./action/update-actions.module\";\nimport {ReleaseCatalogComponent} from \"./release-catalog.component\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {DuplicatePciIdUpdateDialogComponent} from \"./duplicate-pci-id-update-dialog.component\";\nimport {VsanCommonModule} from \"../common/vsan-common.module\";\nimport {FormsModule} from \"@angular/forms\";\n\nconst updateRoutes: Routes = [\n   {\n      path: \"\",\n      component: UpdateComponent,\n   },\n   {\n      path: \"updateDuplicatePciIdDevices\",\n      component: DuplicatePciIdUpdateDialogComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n      UpdateActionsModule,\n      CommonDirectiveModule,\n      VsanCommonModule,\n      FormsModule,\n      RouterModule.forChild(updateRoutes),\n   ],\n   declarations: [\n      UpdateComponent,\n      HclDatabaseComponent,\n      ReleaseCatalogComponent,\n      DuplicatePciIdUpdateDialogComponent,\n   ],\n})\nexport class UpdateModule {\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {PopupListComponent} from \"@component/popup-list/popup-list.component\";\nimport {PopupListItemDirective} from \"@component/popup-list/popup-list-item.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      CommonPipeModule\n   ],\n   declarations: [\n      PopupListComponent,\n      PopupListItemDirective\n   ],\n   exports: [\n      PopupListComponent,\n      PopupListItemDirective\n   ]\n})\nexport class PopupListModule {\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {VsanBreadcrumbNavComponent} from \"./vsan-breadcrumb-nav.component\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\n\n@NgModule({\n   imports: [CommonModule, ClarityModule, CommonDirectiveModule, CommonPipeModule],\n   declarations: [VsanBreadcrumbNavComponent],\n   exports: [\n      VsanBreadcrumbNavComponent,\n   ],\n})\nexport class VsanBreadcrumbModule {}\n","<!-- Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-edit-prompt\n      [title]=\"'vsan.cluster.duplicatePciIdDevices.dialog.title' | localized\"\n      [subtitle]=\"clusterName\"\n      [blockButton]=\"loading\"\n      [(alertMessage)]=\"errorMessage\"\n      (onConfirm)=\"ok()\">\n   <div class=\"dialog-content\">\n      <vsan-validation *ngIf=\"isOpenedFromHealthCheck\"\n                       [alertType]=\"'info'\"\n                       [alert]=\"'vsan.cluster.duplicatePciIdDevices.dialog.model.change.info' | localized\"\n                       [allowClose]=\"false\"\n                       [isSmall]=\"true\">\n      </vsan-validation>\n      <clr-datagrid id=\"model-selections-grid\"\n                    class=\"datagrid-compact\"\n                    [clrDgLoading]=\"loading\">\n         <!-- Datagrid Header -->\n         <clr-dg-column class=\"pci-id-column\">\n            {{\"vsan.cluster.duplicatePciIdDevices.dialog.pciId.label\" | localized}}\n         </clr-dg-column>\n\n         <clr-dg-column class=\"model-name-column\">\n            <span>{{\"vsan.cluster.duplicatePciIdDevices.dialog.model.label\" | localized}}</span>\n            <clr-signpost id=\"model-selection-signpost\">\n               <clr-signpost-content *clrIfOpen clrPosition=\"bottom-middle\">\n                  {{\"vsan.cluster.duplicatePciIdDevices.dialog.model.description\" | localized}}\n               </clr-signpost-content>\n            </clr-signpost>\n         </clr-dg-column>\n\n         <clr-dg-column class=\"product-id-column\">\n            {{\"vsan.cluster.duplicatePciIdDevices.dialog.productId.label\" | localized}}\n         </clr-dg-column>\n\n         <clr-dg-column class=\"capacity-column\">\n            {{\"vsan.cluster.duplicatePciIdDevices.dialog.capacity.label\" | localized}}\n         </clr-dg-column>\n\n         <clr-dg-column class=\"identifier-column\">\n            {{\"vsan.cluster.duplicatePciIdDevices.dialog.identifier.label\" | localized}}\n         </clr-dg-column>\n\n         <!-- Datagrid content -->\n         <clr-dg-row *clrDgItems=\"let clusterSelection of clusterSelections\"\n                     [clrDgItem]=\"clusterSelection\">\n\n            <!-- Top level cells -->\n            <clr-dg-cell vsan-show-title class=\"pci-id-cell datagrid-cell\">\n               {{VsanUiUtils.getPciIdLabel(clusterSelection?.sharedSelection?.deviceId?.pciId)}}\n            </clr-dg-cell>\n\n            <clr-dg-cell class=\"model-name-cell dropdown-cell\">\n               <select clrSelect\n                       [ngModel]=\"clusterSelection.sharedSelection.selectedModel?.vcgId\"\n                       (change)=\"onClusterModelChange(clusterSelection, $event.target.value)\">\n                  <option [ngValue]=\"null\" [disabled]=\"true\">\n                     {{\"vsan.cluster.duplicatePciIdDevices.dialog.model.placeholder\" | localized}}\n                  </option>\n                  <option *ngFor=\"let model of clusterSelection?.sharedSelection?.models\"\n                          [value]=\"model.vcgId\"\n                          [selected]=\"clusterSelection?.sharedSelection?.selectedModel?.vcgId == model?.vcgId\">\n                     {{model.vcgModelName}}\n                  </option>\n               </select>\n            </clr-dg-cell>\n\n            <clr-dg-cell vsan-show-title class=\"product-id-cell\">\n               {{clusterSelection?.sharedSelection?.deviceId?.productId}}\n            </clr-dg-cell>\n\n            <clr-dg-cell vsan-show-title class=\"capacity-cell right-align-cell\">\n               {{clusterSelection?.sharedSelection?.deviceId?.diskCapacity | fileSize: 0: CapacityUnit.BYTE: StorageSizeBaseUnit.VENDOR}}\n            </clr-dg-cell>\n\n            <clr-dg-cell vsan-show-title class=\"identifier-cell\"></clr-dg-cell>\n\n            <ng-container ngProjectAs=\"clr-dg-row-detail\"\n                          *ngFor=\"let hostSelection of clusterSelection?.hostSelections || []\">\n               <!--Inner cells-->\n               <clr-dg-row-detail *clrIfExpanded>\n                  <clr-dg-cell vsan-show-title class=\"pci-id-cell\">\n                     <div class=\"indent\">\n                        <clr-icon [attr.shape]=\"Icon.HOST\"></clr-icon>\n                        <span>{{hostSelection?.hostName}}</span>\n                     </div>\n                  </clr-dg-cell>\n\n                  <clr-dg-cell class=\"model-name-cell dropdown-cell\"></clr-dg-cell>\n                  <clr-dg-cell vsan-show-title class=\"product-id-cell\"></clr-dg-cell>\n                  <clr-dg-cell vsan-show-title class=\"capacity-cell\"></clr-dg-cell>\n\n                  <clr-dg-cell vsan-show-title class=\"identifier-cell\">\n                     {{clusterSelection?.sharedSelection?.identifierExtraInfo}}\n                  </clr-dg-cell>\n               </clr-dg-row-detail>\n            </ng-container>\n         </clr-dg-row>\n      </clr-datagrid>\n   </div>\n</vsan-edit-prompt>\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {HealthStatusCell} from \"@component/cell/health-status-cell.component\";\nimport {LabelCell} from \"@component/cell/label-cell.component\";\nimport {StoragePolicyCell} from \"@component/cell/storage-policy-cell.component\";\nimport {MorCell} from \"@component/cell/mor-cell.component\";\nimport {IconItemComponent} from \"@component/cell/icon-item.component\";\nimport {HealthStateItemComponent} from \"@component/cell/health-state-item.component\";\nimport {ListCell} from \"@component/cell/list-cell.component\";\nimport {PspHealthStateItemComponent} from \"@component/cell/psp-health-state-item.component\";\nimport {HealthTestValueComponent} from \"@component/cell/health-test-value.component\";\nimport {HealthLinkCellComponent} from \"@component/cell/health-link-cell.component\";\nimport {HealthMorCellComponent} from \"@component/cell/health-mor-cell.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n      CommonDirectiveModule,\n   ],\n   // TODO: (vasilevd) Move health specific components to a separate common health module\n   declarations: [\n      HealthStatusCell,\n      HealthTestValueComponent,\n      LabelCell,\n      StoragePolicyCell,\n      MorCell,\n      HealthMorCellComponent,\n      ListCell,\n      IconItemComponent,\n      HealthStateItemComponent,\n      PspHealthStateItemComponent,\n      HealthLinkCellComponent,\n   ],\n   exports: [\n      HealthStatusCell,\n      HealthTestValueComponent,\n      LabelCell,\n      StoragePolicyCell,\n      MorCell,\n      HealthMorCellComponent,\n      ListCell,\n      IconItemComponent,\n      HealthStateItemComponent,\n      PspHealthStateItemComponent,\n      HealthLinkCellComponent,\n   ],\n})\nexport class CommonCellsModule {\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {InventoryBrowserComponent} from \"@component/inventory/inventory-browser.component\";\nimport {InventoryNodeComponent} from \"@component/inventory/inventory-node.component\";\nimport {WitnessCandidateInventoryService} from \"@generated/witness-candidate-inventory-service\";\nimport {DatacenterInventoryService} from \"@generated/datacenter-inventory-service\";\nimport {NetworkInventoryService} from \"@generated/network-inventory-service\";\nimport {ComputeInventoryService} from \"@generated/compute-inventory-service\";\nimport {IoInsightInventoryService} from \"@generated/io-insight-inventory-service\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {TreeNodeComponent} from \"@component/inventory/tree-view/tree-node.component\";\nimport {TreeViewComponent} from \"@component/inventory/tree-view/tree-view.component\";\nimport {DropdownObjectSelectorComponent} from \"@component/inventory/dropdown-object-selector/dropdown-object-selector.component\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {InventoryNodesComponent} from \"@component/inventory/inventory-nodes.component\";\nimport {TreeNodesComponent} from \"@component/inventory/tree-view/tree-nodes.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule,\n      SearchModule,\n      CommonDirectiveModule,\n   ],\n   declarations: [\n      InventoryBrowserComponent,\n      InventoryNodesComponent,\n      InventoryNodeComponent,\n      TreeNodeComponent,\n      TreeNodesComponent,\n      TreeViewComponent,\n      DropdownObjectSelectorComponent,\n   ],\n   exports: [\n      InventoryBrowserComponent,\n      DropdownObjectSelectorComponent,\n      TreeViewComponent,\n   ],\n   providers: [\n      WitnessCandidateInventoryService,\n      DatacenterInventoryService,\n      NetworkInventoryService,\n      ComputeInventoryService,\n      IoInsightInventoryService,\n   ],\n})\nexport class InventoryBrowserModule {\n}","/* Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectorRef, Component, OnInit} from \"@angular/core\";\nimport {ClusterVcgDevicesSelection} from \"@generated/cluster-vcg-devices-selection\";\nimport {DeviceVcgEntry} from \"@generated/device-vcg-entry\";\nimport {UpdateDuplicatePciIdDevicesService} from \"@generated/update-duplicate-pci-id-devices-service\";\nimport {DuplicatePciIdUpdateDialogContext} from \"@navigation/context/duplicate-pci-id-update-context\";\nimport {ClusterComputeResource} from \"@service/client/dataservice/data-service-property\";\nimport {DataServiceClient} from \"@service/client/dataservice/data-service.service\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Icon} from \"@util/icon\";\nimport {CapacityUnit, StorageSizeBaseUnit, VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"duplicate-pci-id-update-dialog.html\",\n   styleUrls: [\"duplicate-pci-id-update-dialog.scss\"],\n   selector: \"vsan-duplicate-pci-id-update-dialog\",\n})\nexport class DuplicatePciIdUpdateDialogComponent implements OnInit {\n   Icon: typeof Icon = Icon;\n   CapacityUnit: typeof CapacityUnit = CapacityUnit;\n   StorageSizeBaseUnit: typeof StorageSizeBaseUnit = StorageSizeBaseUnit;\n   VsanUiUtils: typeof VsanUiUtils = VsanUiUtils;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   @ErrorMessage()\n   errorMessage: string;\n\n   clusterName: string;\n   clusterSelections: ClusterVcgDevicesSelection[];\n   originalSelections: ClusterVcgDevicesSelection[];\n   clusterRef: ManagedObject;\n   isOpenedFromHealthCheck: boolean;\n\n   constructor(private updateService: UpdateDuplicatePciIdDevicesService,\n         private dataService: DataServiceClient,\n         private cdRef: ChangeDetectorRef) {\n   }\n\n   @Loader({srMessage: \"vsan.cluster.duplicatePciIdDevices.dialog.title\"})\n   async ngOnInit(): Promise<void> {\n      const context: DuplicatePciIdUpdateDialogContext = VsanUiUtils.getModalContext();\n      this.clusterRef = context ? context.clusterRef : ManagedObject.contextObject;\n      this.clusterName = context?.clusterName;\n      this.isOpenedFromHealthCheck = !!context?.isOpenedFromHealthCheck;\n\n      if (!this.clusterName) {\n         this.clusterName =\n               await this.dataService.getProperty(ClusterComputeResource.name, ManagedObject.contextObject);\n      }\n\n      await this.fetch();\n   }\n\n   private async fetch(): Promise<void> {\n      this.clusterSelections = await this.updateService.getDuplicateDevices(this.clusterRef);\n      this.originalSelections = VsanUiUtils.deepClone(this.clusterSelections);\n   }\n\n   @Loader({srMessage: \"vsan.common.select\"})\n   async ok(): Promise<void> {\n      const isConfigurationChanged: boolean = this.isConfigurationChanged();\n      if (isConfigurationChanged) {\n         await this.updateService.setDuplicateDevices(this.clusterRef, this.clusterSelections);\n      }\n      VsanUiUtils.closeModalDialog(isConfigurationChanged);\n   }\n\n   private isConfigurationChanged(): boolean {\n      return this.clusterSelections.some((s, index) => {\n         const currentSelection: DeviceVcgEntry = s.sharedSelection.selectedModel;\n         const originalSelection: DeviceVcgEntry = this.originalSelections[index].sharedSelection.selectedModel;\n         return (currentSelection && !originalSelection)\n               || (currentSelection && currentSelection.vcgId !== originalSelection.vcgId);\n      });\n   }\n\n   onClusterModelChange(clusterSelection: ClusterVcgDevicesSelection, value: string): void {\n      const selectedVcgId: number = VsanUiUtils.toNumber(value);\n      clusterSelection.sharedSelection.selectedModel =\n            clusterSelection.sharedSelection.models.find(m => m.vcgId === selectedVcgId);\n      this.onClusterDeviceSelection(clusterSelection);\n   }\n\n   private onClusterDeviceSelection(selection: ClusterVcgDevicesSelection): void {\n      const selectedModel: DeviceVcgEntry = selection.sharedSelection.selectedModel;\n      // Set the cluster level selection to all of the hosts.\n      selection.hostSelections.forEach(s => {\n         s.sharedSelection.selectedModel = selectedModel;\n      });\n      this.cdRef.detectChanges();\n   }\n}\n","<!--Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-stack-view id=\"vsan-hcl-database\">\n   <clr-stack-header>\n      <span vsan-auto-focus>\n         {{\"vsan.vc.configure.hclDatabase.title\" | localized}}\n      </span>\n      <vsan-hcl-database-update-action\n            class=\"stack-action\"\n            [btnClasses]=\"'btn btn-link btn-sm'\"\n            [isDisabled]=\"!hasEditPermissions\"\n            (error)=\"updateError($event)\"\n            (updateComplete)=\"load()\">\n      </vsan-hcl-database-update-action>\n   </clr-stack-header>\n\n   <clr-stack-block id=\"last-updated-date-label\">\n      <clr-stack-label>{{\"vsan.vc.configure.hclDatabase.label.lastUpdated\" | localized}}</clr-stack-label>\n      <clr-stack-content>\n         <span id=\"hcl-last-updated-date\" *ngIf=\"!updatingIndicatorVisible\">\n            {{lastUpdated ? lastUpdated : \"vsan.na.label\" | localized}}\n         </span>\n         <span id=\"hcl-loading-indicator\" *ngIf=\"updatingIndicatorVisible\">\n            {{ \"vsan.loading\" | localized }}\n         </span>\n      </clr-stack-content>\n   </clr-stack-block>\n\n</clr-stack-view>","<!--Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-stack-view id=\"vsan-release-catalog\">\n   <clr-stack-header>\n      <span vsan-auto-focus>\n         {{\"vsan.vc.configure.releaseCatalog.title\" | localized}}\n      </span>\n      <vsan-release-catalog-update-action\n            class=\"stack-action\"\n            [btnClasses]=\"'btn btn-link btn-sm'\"\n            [hasEditPermissions]=\"hasEditPermissions\"\n            (updateComplete)=\"fetchData()\"\n            (error)=\"handleError($event)\">\n      </vsan-release-catalog-update-action>\n   </clr-stack-header>\n\n   <clr-stack-block id=\"last-updated-date-label\">\n      <clr-stack-label>{{\"vsan.vc.configure.releaseCatalog.label.date\" | localized}}</clr-stack-label>\n      <clr-stack-content>\n         <span id=\"loading-indicator\" *ngIf=\"updating\">{{ 'vsan.loading' | localized }}</span>\n         <span id=\"last-updated-date\" *ngIf=\"!updating\">{{lastUpdated ? lastUpdated : \"vsan.na.label\" | localized}}</span>\n      </clr-stack-content>\n   </clr-stack-block>\n\n</clr-stack-view>","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\n\n@Component({\n   templateUrl: \"update.html\",\n   selector: \"vsan-update\",\n   styleUrls: [\"update.scss\"],\n})\nexport class UpdateComponent implements OnInit {\n\n   alertMessage: string;\n   hasEditPermissions: boolean = false;\n   isUpdateVumReleaseCatalogOfflineSupported: boolean = false;\n\n   constructor(private permissionService: PermissionService,\n         private capabilityService: VsanCapabilityProvider) {\n   }\n\n   ngOnInit(): void {\n      this.loadData();\n   }\n\n   @Loader()\n   async loadData(): Promise<void> {\n      this.hasEditPermissions = await this.permissionService\n            .hasVcPermissions(ManagedObject.contextObject, [Privileges.GLOBAL_SETTINGS()]);\n      this.isUpdateVumReleaseCatalogOfflineSupported = await this.capabilityService\n            .getIsUpdateVumReleaseCatalogOfflineSupported(ManagedObject.contextObject);\n   }\n\n   @ErrorHandler()\n   setErrorMessage(error: string): void {\n      this.alertMessage = error;\n   }\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {ActionButtonModule} from \"@component/action-button/action-button.module\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {CommonCellsModule} from \"@component/cell/common-cells.module\";\nimport {InventoryBrowserModule} from \"@component/inventory/inventory-browser.module\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {TreeDatagridModule} from \"@component/datagrid/tree-datagrid.module\";\nimport {DatetimePickerModule} from \"@component/datetime-picker/datetime-picker.module\";\nimport {PopupListModule} from \"@component/popup-list/popup-list.module\";\nimport {VsanBreadcrumbModule} from \"@component/navigation/vsan-breadcrumb.module\";\n\n@NgModule({\n   imports: [\n         CommonDirectiveModule,\n         CommonPipeModule,\n         ValidationModule,\n         ActionButtonModule,\n         PromptModule,\n         CommonCellsModule,\n         InventoryBrowserModule,\n         SearchModule,\n         TreeDatagridModule,\n         DatetimePickerModule,\n         PopupListModule,\n         VsanBreadcrumbModule,\n   ],\n   exports: [\n      CommonDirectiveModule,\n      CommonPipeModule,\n      ValidationModule,\n      ActionButtonModule,\n      PromptModule,\n      CommonCellsModule,\n      InventoryBrowserModule,\n      SearchModule,\n      TreeDatagridModule,\n      DatetimePickerModule,\n      PopupListModule,\n      VsanBreadcrumbModule,\n   ],\n})\nexport class VsanCommonModule { }","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {SearchComponent} from \"@component/search/search.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule\n   ],\n   declarations: [\n      SearchComponent\n   ],\n   exports: [\n      SearchComponent\n   ],\n})\nexport class SearchModule {\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ActionButtonSeparatorComponent} from \"@component/action-button/action-button-separator.component\";\nimport {ButtonTitleDirective} from \"@component/action-button/button-title.directive\";\nimport {ButtonGroupDirective} from \"@component/action-button/button-group.directive\";\nimport {ButtonGroupWrapDirective} from \"@component/action-button/button-group-wrap.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n   ],\n   declarations: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ],\n   exports: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ]\n})\nexport class ActionButtonModule {\n}\n"]}