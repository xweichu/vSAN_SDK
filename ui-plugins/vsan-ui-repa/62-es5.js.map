{"version":3,"sources":["webpack:///src/app/vsan/common/util/storage-size-metric.ts","webpack:///src/app/vsan/common/pipe/virtual-objects/health-state-label.pipe.ts","webpack:///src/app/vsan/common/util/vsan-iscsi-util.ts","webpack:///src/app/vsan/common/pipe/virtual-objects/health-state-icon-shape.pipe.ts","webpack:///src/app/vsan/common/pipe/virtual-objects/health-state-icon-class.pipe.ts"],"names":["StorageSizeMetric","_value","_labelKey","getString","B","KB","MB","GB","TB","VirtualObjectHealthStateLabelPipe","state","getVsanObjectHealthStatusText","IscsiTargetAuthType","ObjectHealthStatus","VsanIscsiUtil","status","healthy","transitionalHealthy","transitionalUnhealthy","unhealthy","CLR_SUCCESS_STANDARD_ICON_SHAPE","CLR_ERROR_STANDARD_ICON_SHAPE","iqn","length","IQN_EXP","test","policy","emptyPolicyError","hasVsanNamespace","isCompatible","alias","getUtf8Length","MAX_ALIAS_BYTE_LENGTH","indexOf","lunId","LUN_ID_MIN","LUN_ID_MAX","String","size","unit","POSITIVE_INTEGER_EXP","toString","LUN_SIZE_MAX","minAllowedSize","maxAllowedSize","value","Online","Offline","complianceStatus","clrIconShapeClassMap","getComplianceShape","CLR_SOLID_ICON_CLASS","COMPLIANT","OUT_OF_DATE","CLR_WARN_STANDARD_ICON_SHAPE","NOT_COMPLIANT","NOT_APPLICABLE","UNKNOWN","CLR_CIRCLE_ICON_SHAPE","complianceResult","mismatch","anthType","CHAP","CHAP_Mutual","location","preferredDomainName","secondaryDomainName","PREFERRED_DOMAIN","NON_PREFERRED_DOMAIN","isGroup","AUTHENTICATION_TYPES","label","id","NoAuth","UNCHANGED_NEW_LUN_ID_VALUE","UNCHANGED_LUN_SIZE_VALUE","DEFAULT_PORT","TCP_PORT_MIN","TCP_PORT_MAX","VirtualObjectHealthStateIconShapePipe","getVsanObjectHealthStatusIconShape","VirtualObjectHealthStateIconClassPipe","getVsanObjectHealthStatusIconClass"],"mappings":"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","file":"62-es5.js","sourcesContent":["/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * The supported storage size metrics\n */\nexport class StorageSizeMetric {\n   static readonly B: StorageSizeMetric =\n         new StorageSizeMetric(1, \"vsan.common.bytes\");\n   static readonly KB: StorageSizeMetric =\n         new StorageSizeMetric(1024, \"vsan.common.kilobytes\");\n   static readonly MB: StorageSizeMetric =\n         new StorageSizeMetric(1024 * 1024, \"vsan.common.megabytes\");\n   static readonly GB: StorageSizeMetric =\n         new StorageSizeMetric(1024 * 1024 * 1024, \"vsan.common.gigabytes\");\n   static readonly TB: StorageSizeMetric =\n         new StorageSizeMetric(1024 * 1024 * 1024 * 1024, \"vsan.common.terabytes\");\n\n   private constructor(private _value: number, private _labelKey: string) {\n   }\n\n   get value(): number {\n      return this._value;\n   }\n\n   toString(): string {\n      return VsanUiUtils.getString(this._labelKey);\n   }\n}\n","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {BaseHealthState, VsanHealthUtil} from \"@util/vsan-health-util\";\n\n@Pipe({\n   name: \"healthStateLabel\",\n})\nexport class VirtualObjectHealthStateLabelPipe implements PipeTransform {\n   transform(state: BaseHealthState | string): string {\n      return VsanHealthUtil.getVsanObjectHealthStatusText(state);\n   }\n}","/* Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AffinitySiteLocation} from \"@generated/affinity-site-location\";\nimport {IscsiLunStatus} from \"@generated/iscsi-lun-status\";\nimport {StoragePolicyData} from \"@generated/storage-policy-data\";\nimport {VsanComplianceStatus} from \"@generated/vsan-compliance-status\";\nimport {VsanIscsiTargetConfig} from \"@generated/vsan-iscsi-target-config\";\nimport {Icon} from \"@util/icon\";\nimport {StorageSizeMetric} from \"@util/storage-size-metric\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport IscsiTargetAuthType = VsanIscsiTargetConfig.IscsiTargetAuthType;\nimport ObjectHealthStatus = VsanIscsiTargetConfig.ObjectHealthStatus;\n\n/**\n * vSAN iSCSI utilities.\n */\nexport class VsanIscsiUtil {\n   private static readonly IQN_EXP: RegExp = /^iqn\\.[0-9]{4}\\-(0[1-9]|1[0-2])\\.[a-z0-9\\-\\.]+(\\:[a-z0-9\\-\\.\\:]*)?$/;\n   static readonly POSITIVE_INTEGER_EXP: RegExp = /^\\+?[1-9][0-9]*$/;\n   static readonly AUTHENTICATION_TYPES: any[] = [\n      {\n         label: VsanUiUtils.getString(\"vsan.iscsi.target.authentication.none\"),\n         id: IscsiTargetAuthType.NoAuth,\n      },\n      {\n         label: VsanUiUtils.getString(\"vsan.iscsi.target.authentication.chap\"),\n         id: IscsiTargetAuthType.CHAP,\n      },\n      {\n         label: VsanUiUtils.getString(\"vsan.iscsi.target.authentication.mutualChap\"),\n         id: IscsiTargetAuthType.CHAP_Mutual,\n      },\n   ];\n\n   // Pass -1 to the backend when the LUN id doesn't change.\n   static readonly UNCHANGED_NEW_LUN_ID_VALUE: number = -1;\n   // Pass -1 to the backend when the LUN size doesn't change.\n   static readonly UNCHANGED_LUN_SIZE_VALUE: number = -1;\n\n   static readonly DEFAULT_PORT: number = 3260;\n   // The maximum length of the target alias and LUN alias\n   private static readonly MAX_ALIAS_BYTE_LENGTH: number = 127;\n   static readonly LUN_ID_MIN: number = 0;\n   static readonly LUN_ID_MAX: number = 255;\n   private static readonly LUN_SIZE_MAX: number = 62 * StorageSizeMetric.TB.value;\n\n   static readonly TCP_PORT_MIN: number = 1025;\n   static readonly TCP_PORT_MAX: number = 65535;\n\n   static getIscsiHomeLabel(status: VsanIscsiTargetConfig.ObjectHealthStatus): string {\n      if (!status) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n\n      switch (status) {\n         case VsanIscsiTargetConfig.ObjectHealthStatus.healthy:\n            return VsanUiUtils.getString(\"pbm.operationalState.healthy\");\n         case ObjectHealthStatus.transitionalHealthy:\n            return VsanUiUtils.getString(\"pbm.operationalState.healthyTransitional\");\n         case ObjectHealthStatus.transitionalUnhealthy:\n            return VsanUiUtils.getString(\"pbm.operationalState.unhealthyTransitional\");\n         case ObjectHealthStatus.unhealthy:\n            return VsanUiUtils.getString(\"pbm.operationalState.unhealthyDiskUnavailable\");\n         default:\n            return VsanUiUtils.getString(\"pbm.complianceStatus.unknown\");\n      }\n   }\n\n   static getIscsiHomeIcon(status: ObjectHealthStatus): string {\n      if (!status) {\n         return \"\";\n      }\n\n      switch (status) {\n         case ObjectHealthStatus.healthy:\n         case ObjectHealthStatus.transitionalHealthy:\n            return Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE;\n         case ObjectHealthStatus.transitionalUnhealthy:\n         case ObjectHealthStatus.unhealthy:\n         default:\n            return Icon.CLR_ERROR_STANDARD_ICON_SHAPE;\n      }\n   }\n\n   // Validate target iqn and initiator iqn.\n   static validateIqn(iqn: string): boolean {\n      // Target iqn can be empty, and the backend will generate an iqn for it.\n      if (!iqn) {\n         return true;\n      }\n      if (iqn.length > 224) {\n         return false;\n      }\n      return VsanIscsiUtil.IQN_EXP.test(iqn);\n   }\n\n   static validatePolicy(policy: StoragePolicyData, emptyPolicyError: string): string | null {\n      if (!policy) {\n         return emptyPolicyError;\n      }\n      if (!policy.hasVsanNamespace) {\n         return VsanUiUtils.getString(\"vsan.iscsi.edit.storagePolicy.homeObject.no.vsan.namespace\");\n      }\n      if (!policy.isCompatible) {\n         return VsanUiUtils.getString(\"vsan.iscsi.edit.storagePolicy.homeObject.notCompliant\");\n      }\n   }\n\n   /**\n    * Validate target alias and lun alias and return message.\n    */\n   static getAliasValidationMessage(alias: string): string {\n      if (VsanUiUtils.getUtf8Length(alias) > VsanIscsiUtil.MAX_ALIAS_BYTE_LENGTH) {\n         return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.target.dialog.alias.tooLong\");\n      }\n      if (alias.indexOf(\"\\\"\") > -1) {\n         return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.target.dialog.alias.notValid\");\n      }\n      return null;\n   }\n\n   static getLunIdValidationMessage(lunId: number): string {\n      if (lunId < VsanIscsiUtil.LUN_ID_MIN) {\n         return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.lun.dialog.id.negative\");\n      }\n      if (lunId > VsanIscsiUtil.LUN_ID_MAX) {\n         return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.lun.dialog.id.notValid\");\n      }\n      if (String(lunId).indexOf(\".\") > -1) {\n         return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.lun.dialog.id.not.integer\");\n      }\n      return null;\n   }\n\n   static getLunPolicyValidationMessage(policy: StoragePolicyData): string {\n      if (!policy.hasVsanNamespace) {\n         return VsanUiUtils.getString(\"vsan.iscsi.edit.storagePolicy.homeObject.no.vsan.namespace\");\n      }\n      if (!policy.isCompatible) {\n         return VsanUiUtils.getString(\"vsan.iscsi.edit.storagePolicy.homeObject.notCompliant\");\n      }\n      return null;\n   }\n\n   static getLunSizeValidationMessage(size: number, unit: number): string {\n      if (!size || !VsanIscsiUtil.POSITIVE_INTEGER_EXP.test(size.toString())) {\n         return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.lun.dialog.size.notPositive\");\n      }\n      if ((size * unit) > VsanIscsiUtil.LUN_SIZE_MAX) {\n         return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.lun.dialog.size.maximum\");\n      }\n      return null;\n   }\n\n   static getLunSizeHelperMessage(unit: StorageSizeMetric, minAllowedSize: number = 1): string {\n      const maxAllowedSize: number = (VsanIscsiUtil.LUN_SIZE_MAX) / unit.value;\n      return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.lun.dialog.size.helper\", minAllowedSize, maxAllowedSize,\n            unit);\n   }\n\n   static getLunStateLabel(status: IscsiLunStatus): string {\n      switch (status) {\n         case IscsiLunStatus.Online:\n            return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.lun.online.label\");\n         case IscsiLunStatus.Offline:\n            return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.lun.offline.label\");\n         default:\n            return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n   }\n\n   static getComplianceIconClass(complianceStatus: VsanComplianceStatus): string {\n      return Icon.clrIconShapeClassMap[VsanIscsiUtil.getComplianceShape(complianceStatus)]\n            + \" \" + Icon.CLR_SOLID_ICON_CLASS;\n   }\n\n   static getComplianceShape(complianceStatus: VsanComplianceStatus): string {\n      switch (complianceStatus) {\n         case VsanComplianceStatus.COMPLIANT:\n            return Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE;\n         case VsanComplianceStatus.OUT_OF_DATE:\n            return Icon.CLR_WARN_STANDARD_ICON_SHAPE;\n         case VsanComplianceStatus.NOT_COMPLIANT:\n            return Icon.CLR_ERROR_STANDARD_ICON_SHAPE;\n         case VsanComplianceStatus.NOT_APPLICABLE:\n         case VsanComplianceStatus.UNKNOWN:\n         default:\n            return Icon.CLR_CIRCLE_ICON_SHAPE;\n      }\n   }\n\n   static getComplianceLabel(complianceResult: any): string {\n      if (complianceResult.mismatch) {\n         return VsanUiUtils.getString(\"vsan.pbm.complianceStatus.outOfDate\");\n      }\n      return VsanUiUtils.getString(\"vsan.pbm.complianceStatus.\" + complianceResult.complianceStatus);\n   }\n\n   static getAuthenticationLabel(anthType: string): string {\n      switch (anthType) {\n         case IscsiTargetAuthType.CHAP.toString():\n            return VsanUiUtils.getString(\"vsan.iscsi.target.authentication.chap\");\n         case IscsiTargetAuthType.CHAP_Mutual.toString():\n            return VsanUiUtils.getString(\"vsan.iscsi.target.authentication.mutualChap\");\n         default:\n            return VsanUiUtils.getString(\"vsan.iscsi.target.authentication.none\");\n      }\n   }\n\n   static getTargetLocationLabel(location: AffinitySiteLocation,\n         preferredDomainName: string = null,\n         secondaryDomainName: string = null): string {\n      switch (location) {\n         case AffinitySiteLocation.PREFERRED_DOMAIN:\n            return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.target.dialog.location.option.preferred\",\n                  preferredDomainName ? preferredDomainName : VsanUiUtils.getString(\"vsan.na.label\"));\n         case AffinitySiteLocation.NON_PREFERRED_DOMAIN:\n            return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.target.dialog.location.option.secondary\",\n                  secondaryDomainName ? secondaryDomainName : VsanUiUtils.getString(\"vsan.na.label\"));\n         default:\n            return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.target.dialog.location.option.either\");\n      }\n   }\n\n   static getAllowedInitiatorsType(isGroup: boolean): string {\n      return isGroup ? VsanUiUtils.getString(\"vsan.configure.iscsiTargets.allowed.initiators.type.group\") :\n            VsanUiUtils.getString(\"vsan.configure.iscsiTargets.allowed.initiators.type.initiator\");\n   }\n}\n","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {VsanHealthUtil} from \"@util/vsan-health-util\";\nimport {VsanObjectHealthState} from \"@generated/vsan-object-health-state\";\n\n@Pipe({\n   name: \"healthStateIconShape\",\n})\nexport class VirtualObjectHealthStateIconShapePipe implements PipeTransform {\n   transform(state: VsanObjectHealthState | string): string {\n      return VsanHealthUtil.getVsanObjectHealthStatusIconShape(state);\n   }\n}","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {VsanHealthUtil} from \"@util/vsan-health-util\";\nimport {VsanObjectHealthState} from \"@generated/vsan-object-health-state\";\n\n@Pipe({\n   name: \"healthStateIconClass\",\n})\nexport class VirtualObjectHealthStateIconClassPipe implements PipeTransform {\n   transform(state: VsanObjectHealthState | string): string {\n      return VsanHealthUtil.getVsanObjectHealthStatusIconClass(state);\n   }\n}\n"]}