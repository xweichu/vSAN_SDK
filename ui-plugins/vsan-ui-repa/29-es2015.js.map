{"version":3,"sources":["./src/app/vsan/common/util/validation/validator.ts","./src/app/vsan/common/component/datagrid/tree-datagrid.module.ts","./src/app/vsan/common/component/popup-list/popup-list.module.ts","./src/app/vsan/common/component/virtual-objects-table/actions/validation/virtual-objects-action-availability.service.ts","./src/app/vsan/common/component/virtual-objects-table/virtual-objects-table.service.ts","./src/app/vsan/common/component/navigation/vsan-breadcrumb.module.ts","./src/app/vsan/common/util/validation/validators-group.ts","./src/app/vsan/common/component/virtual-objects-table/virtual-objects-table-state.service.ts","./src/app/vsan/common/component/virtual-objects-table/vm-cell.component.ts","./src/app/vsan/common/util/validation/action-available-status.ts","./src/app/vsan/common/component/virtual-objects-table/virtual-objects-table.module.ts","./src/app/vsan/common/vsan-common.module.ts","./src/app/vsan/common/component/action-button/action-button.module.ts","./src/app/vsan/common/component/export/export.module.ts","./src/app/vsan/common/component/virtual-objects-table/virtual-objects-type.util.ts","./src/app/vsan/common/component/virtual-objects-table/vm-cell.html"],"names":[],"mappings":"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","file":"29-es2015.js","sourcesContent":["/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\n/**\n * Validator accept two functions as constructor parameters:\n * 1. errorCondition - predicate which is telling us when the validation must fail.\n * 2. errorMessage - function which build error message OR error message when the errorCondition return TRUE.\n */\nexport class Validator<TEntity> {\n   constructor(\n         private readonly errorCondition: (entity: TEntity) => boolean,\n         private readonly errorMessage?: string | ((entity: TEntity) => string),\n   ) { }\n\n   validate(instance: TEntity): boolean {\n      return !this.errorCondition(instance);\n   }\n\n   getErrorMessage(instance: TEntity): string {\n      return typeof this.errorMessage === \"function\"\n            ? this.errorMessage(instance)\n            : this.errorMessage;\n   }\n}","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {TreeExpanderComponent} from \"@component/datagrid/tree-expander.component\";\nimport {TreeColumnComponent} from \"@component/datagrid/tree-column.component\";\nimport {EnumeratedFilterComponent} from \"./filter/enumerated-filter.component\";\nimport {EnumeratedFilterItemComponent} from \"./filter/enumerated-filter-item.component\";\nimport {EnumFilterComponent} from \"@component/datagrid/filter/enum-filter.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n   ],\n   declarations: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumeratedFilterComponent,\n      EnumFilterComponent,\n   ],\n   exports: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumFilterComponent,\n   ],\n})\nexport class TreeDatagridModule {\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {PopupListComponent} from \"@component/popup-list/popup-list.component\";\nimport {PopupListItemDirective} from \"@component/popup-list/popup-list-item.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      CommonPipeModule\n   ],\n   declarations: [\n      PopupListComponent,\n      PopupListItemDirective\n   ],\n   exports: [\n      PopupListComponent,\n      PopupListItemDirective\n   ]\n})\nexport class PopupListModule {\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Injectable} from \"@angular/core\";\nimport {Validator} from \"@util/validation/validator\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ValidatorsGroup} from \"@util/validation/validators-group\";\nimport {VirtualObjectsTypeUtil} from \"@component/virtual-objects-table/virtual-objects-type.util\";\nimport {VirtualObjectsActionContext} from \"@component/virtual-objects-table/actions/validation/virtual-objects-action-context\";\nimport {ActionAvailableStatus} from \"@util/validation/action-available-status\";\n\n@Injectable()\nexport class VirtualObjectsActionAvailabilityService {\n\n   static readonly VIEW_PLACEMENT_DETAILS_ID: string = \"view-placement-details\";\n   static readonly VIEW_PERFORMANCE_ID: string = \"view-performance\";\n   static readonly VIEW_VOLUME_ID: string = \"view-volumes\";\n   static readonly VIEW_FILE_SHARE: string = \"view-file-shares\";\n\n   private readonly isNotLoading: Validator<VirtualObjectsActionContext> = new Validator(\n         (context: VirtualObjectsActionContext): boolean => context.isLoading,\n         VsanUiUtils.getString(\"vsan.loading\"));\n\n   private readonly noneEmptySelection: Validator<VirtualObjectsActionContext> = new Validator(\n         (context: VirtualObjectsActionContext): boolean =>\n               VsanUiUtils.isEmpty(context.selectedObjects),\n         (context: VirtualObjectsActionContext): string => {\n            switch (context.actionId) {\n               case VirtualObjectsActionAvailabilityService.VIEW_PLACEMENT_DETAILS_ID:\n                  return VsanUiUtils.getString(\n                        \"vsan.monitor.cluster.virtualObjects.action.viewDetails.description.disabled.noSelection\");\n               case VirtualObjectsActionAvailabilityService.VIEW_PERFORMANCE_ID:\n                  return VsanUiUtils.getString(\n                        \"vsan.monitor.cluster.virtualObjects.action.viewPerformance.description.disabled.noSelection\");\n               case VirtualObjectsActionAvailabilityService.VIEW_VOLUME_ID:\n                  return VsanUiUtils.getString(\n                        \"vsan.monitor.cluster.virtualObjects.action.navigateToCnsVolumes.description.disabled.noSelection\");\n               case VirtualObjectsActionAvailabilityService.VIEW_FILE_SHARE:\n                  return VsanUiUtils.getString(\n                        \"vsan.monitor.cluster.virtualObjects.action.navigateToFileShares.description.disabled.noSelection\");\n            }\n         });\n\n   private readonly isSingleVolumeObject: Validator<VirtualObjectsActionContext> = new Validator(\n         (context: VirtualObjectsActionContext): boolean =>\n               !VsanUiUtils.isSingleElement(context.selectedObjects) ||\n               !VirtualObjectsTypeUtil.isVolume(context.selectedObjects[0]),\n         (context: VirtualObjectsActionContext) => {\n            if (!context.selectedObjects.some(vo => VirtualObjectsTypeUtil.isVolume(vo))) {\n               return VsanUiUtils.getString(\n                     \"vsan.monitor.cluster.virtualObjects.action.navigateToCnsVolumes.description.disabled.noSelection\");\n            } else {\n               return VsanUiUtils.getString(\n                     \"vsan.monitor.cluster.virtualObjects.action.navigateToCnsVolumes.description.disabled.multipleSelection\");\n            }\n         });\n\n   private readonly isSingleFileShareOrFileVolumeObject: Validator<VirtualObjectsActionContext> = new Validator(\n         (context: VirtualObjectsActionContext): boolean =>\n               !VsanUiUtils.isSingleElement(context.selectedObjects) ||\n               !VirtualObjectsTypeUtil.isFileShareOrFileVolume(context.selectedObjects[0]),\n         (context: VirtualObjectsActionContext) => {\n            if (!context.selectedObjects.some(vo => VirtualObjectsTypeUtil.isFileShareOrFileVolume(vo))) {\n               return VsanUiUtils.getString(\n                     \"vsan.monitor.cluster.virtualObjects.action.navigateToFileShares.description.disabled.noSelection\");\n            } else {\n               return VsanUiUtils.getString(\n                     \"vsan.monitor.cluster.virtualObjects.action.navigateToFileShares.description.disabled.multipleSelection\");\n            }\n         });\n\n   private readonly isSingleObjectWithSupportedPerformance: Validator<VirtualObjectsActionContext> = new Validator(\n         (context: VirtualObjectsActionContext): boolean =>\n               !VsanUiUtils.isSingleElement(context.selectedObjects) ||\n               !VirtualObjectsTypeUtil.isPerformanceSupported(context.selectedObjects[0]),\n         (context: VirtualObjectsActionContext) => {\n            if (!context.selectedObjects.some(vo => VirtualObjectsTypeUtil.isPerformanceSupported(vo))) {\n               return VsanUiUtils.getString(\n                     \"vsan.monitor.cluster.virtualObjects.action.viewPerformance.description.disabled.noSelection\");\n            } else {\n               return VsanUiUtils.getString(\n                     \"vsan.monitor.cluster.virtualObjects.action.viewPerformance.description.disabled.multipleSelection\");\n            }\n         });\n\n   checkAvailability(ctx: VirtualObjectsActionContext): any {\n      switch (ctx.actionId) {\n         case VirtualObjectsActionAvailabilityService.VIEW_PLACEMENT_DETAILS_ID:\n            return this.validate(this.viewPlacementDetailsAvailability, ctx,\n                  this.viewPlacementDetailsSuccessKey(ctx));\n         case VirtualObjectsActionAvailabilityService.VIEW_PERFORMANCE_ID:\n            return this.validate(this.viewPerformanceAvailability, ctx,\n                  \"vsan.monitor.cluster.virtualObjects.action.viewPerformance.description.one\");\n         case VirtualObjectsActionAvailabilityService.VIEW_VOLUME_ID:\n            return this.validate(this.viewVolumeAvailability, ctx,\n                  \"vsan.monitor.cluster.virtualObjects.action.navigateToCnsVolumes.description\");\n         case VirtualObjectsActionAvailabilityService.VIEW_FILE_SHARE:\n            return this.validate(this.viewFileShareOrFileVolumeAvailability, ctx,\n                  \"vsan.monitor.cluster.virtualObjects.action.navigateToFileShares.description\");\n      }\n   }\n\n   private validate(\n         validatorsGroup: ValidatorsGroup<VirtualObjectsActionContext>,\n         context: VirtualObjectsActionContext,\n         successMessageKey: string): ActionAvailableStatus {\n\n      const errorMessage: string = validatorsGroup.getFirstError(context);\n      const isActionAvailable: boolean = errorMessage === null;\n      const statusMessage: string = isActionAvailable ? VsanUiUtils.getString(successMessageKey) : errorMessage;\n\n      return new ActionAvailableStatus(isActionAvailable, statusMessage);\n   }\n\n   private readonly viewPlacementDetailsAvailability: ValidatorsGroup<VirtualObjectsActionContext> = new ValidatorsGroup([\n      this.isNotLoading,\n      this.noneEmptySelection,\n   ]);\n\n   private readonly viewPerformanceAvailability: ValidatorsGroup<VirtualObjectsActionContext> = new ValidatorsGroup([\n      this.isNotLoading,\n      this.noneEmptySelection,\n      this.isSingleObjectWithSupportedPerformance,\n   ]);\n\n   private readonly viewVolumeAvailability: ValidatorsGroup<VirtualObjectsActionContext> = new ValidatorsGroup([\n      this.isNotLoading,\n      this.noneEmptySelection,\n      this.isSingleVolumeObject,\n   ]);\n\n   private readonly viewFileShareOrFileVolumeAvailability:  ValidatorsGroup<VirtualObjectsActionContext> = new ValidatorsGroup([\n      this.isNotLoading,\n      this.noneEmptySelection,\n      this.isSingleFileShareOrFileVolumeObject,\n   ]);\n\n   private viewPlacementDetailsSuccessKey(context: VirtualObjectsActionContext): string {\n      return context.selectedObjects.length > 1\n            ? \"vsan.monitor.cluster.virtualObjects.action.viewDetails.description.many\"\n            : \"vsan.monitor.cluster.virtualObjects.action.viewDetails.description.one\";\n   }\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Injectable} from \"@angular/core\";\nimport {Observable, Subject} from \"rxjs\";\n\n@Injectable()\nexport class VirtualObjectsTableService {\n\n   private resetFiltersEvent: Subject<void> = new Subject<void>();\n   onResetFilters: Observable<void> = this.resetFiltersEvent.asObservable();\n\n   resetFilters(): void {\n      this.resetFiltersEvent.next();\n   }\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {VsanBreadcrumbNavComponent} from \"./vsan-breadcrumb-nav.component\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\n\n@NgModule({\n   imports: [CommonModule, ClarityModule, CommonDirectiveModule, CommonPipeModule],\n   declarations: [VsanBreadcrumbNavComponent],\n   exports: [\n      VsanBreadcrumbNavComponent,\n   ],\n})\nexport class VsanBreadcrumbModule {}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Validator} from \"@util/validation/validator\";\n\nexport class ValidatorsGroup<TEntity> {\n\n   constructor(private validators: Validator<TEntity>[]) { }\n\n   validate(entity: TEntity): boolean {\n      return this.validators\n            .every(validator => validator.validate(entity));\n   }\n\n   getAllErrors(entity: TEntity): string[] {\n      return this.validators\n            .filter(validator => !validator.validate(entity))\n            .map(validator => validator.getErrorMessage(entity));\n   }\n\n   getFirstError(entity: TEntity): string {\n      return this.validators\n            .find(validator => !validator.validate(entity))\n            ?.getErrorMessage(entity) || null;\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {Subject} from \"rxjs\";\nimport {Injectable} from \"@angular/core\";\n\n/**\n * Holds the state of each virtual object (selected/expanded/indeterminate) displayed in the virtual objects datagrid\n */\n@Injectable()\nexport class VirtualObjectsTableStateService {\n   /**\n    * Holds the IDs of the virtual objects that are manually expanded by the user\n    * E.g. User click to expand/collapse a parent item\n    */\n   private manuallyExpandedObjects: Set<string> = new Set<string>();\n\n   /**\n    * Holds the IDs of the virtual objects that are expanded because we have applied filter.\n    * E.g. Filtering by name, filtering by health state\n    */\n   private autoExpandedObjects: Set<string> = new Set<string>();\n\n   /**\n    * Holds the IDs of the virtual objects that are selected\n    */\n   private selectedObjects: Set<string> = new Set<string>();\n\n   selectionChanged: Subject<void> = new Subject<void>();\n\n   reset(): void {\n      this.manuallyExpandedObjects.clear();\n      this.autoExpandedObjects.clear();\n      this.selectedObjects.clear();\n      this.selectionChanged.next();\n   }\n\n   toggleManualExpand(virtualObject: VirtualObjectModel, isExpanded: boolean): void {\n      if (isExpanded) {\n         this.manuallyExpandedObjects.add(this.getKey(virtualObject));\n      } else {\n         this.manuallyExpandedObjects.delete(this.getKey(virtualObject));\n         // We need to do that because otherwise it still will be expanded because we check both\n         this.toggleAutoExpand(virtualObject, false);\n      }\n   }\n\n   toggleAutoExpand(virtualObject: VirtualObjectModel, isExpanded: boolean): void {\n      if (isExpanded) {\n         this.autoExpandedObjects.add(this.getKey(virtualObject));\n      } else {\n         this.autoExpandedObjects.delete(this.getKey(virtualObject));\n      }\n   }\n\n   toggleSelectionOnAll(virtualObjects: VirtualObjectModel[], value: boolean): void {\n      if (VsanUiUtils.isEmpty(virtualObjects)) {\n         return;\n      }\n      for (const virtualObject of virtualObjects) {\n         this.toggleSelection(virtualObject, value);\n         if (virtualObject.children) {\n            for (const child of virtualObject.children) {\n               this.toggleSelection(child, value);\n            }\n         }\n      }\n   }\n\n   toggleSelection(virtualObject: VirtualObjectModel, isSelected: boolean): void {\n      if (isSelected) {\n         this.select(virtualObject);\n      } else {\n         this.deselect(virtualObject);\n      }\n   }\n\n   private select(virtualObject: VirtualObjectModel): void {\n      if (this.isVirtualObject(virtualObject)) {\n         this.selectedObjects.add(this.getKey(virtualObject));\n      }\n      if (this.isParent(virtualObject)) {\n         virtualObject.children.forEach(child => this.select(child));\n      }\n      this.selectionChanged.next();\n   }\n\n   private deselect(virtualObject: VirtualObjectModel): void {\n      if (this.isVirtualObject(virtualObject)) {\n         this.selectedObjects.delete(this.getKey(virtualObject));\n      }\n      if (this.isParent(virtualObject)) {\n         virtualObject.children.forEach(child => this.deselect(child));\n      }\n      this.selectionChanged.next();\n   }\n\n   isExpanded(virtualObject: VirtualObjectModel): boolean {\n      return this.manuallyExpandedObjects.has(this.getKey(virtualObject)) ||\n            this.autoExpandedObjects.has(this.getKey(virtualObject));\n   }\n\n   areAllSelected(virtualObjects: VirtualObjectModel[]): boolean {\n      if (VsanUiUtils.isEmpty(virtualObjects)) {\n         return false;\n      }\n      for (const virtualObject of virtualObjects) {\n         if (!this.isSelected(virtualObject)) {\n            return false;\n         }\n         if (virtualObject.children) {\n            for (const child of virtualObject.children) {\n               if (!this.isSelected(child)) {\n                  return false;\n               }\n            }\n         }\n      }\n      return true;\n   }\n\n   getSelectedVirtualObjects(\n         virtualObjects: VirtualObjectModel[],\n         isMatchingTextSearch: (parent: VirtualObjectModel, child: VirtualObjectModel) => boolean): VirtualObjectModel[] {\n      const selectedVirtualObjects: VirtualObjectModel[] = [];\n      if (VsanUiUtils.isEmpty(virtualObjects)) {\n         return selectedVirtualObjects;\n      }\n      virtualObjects.forEach(virtualObject => {\n         if (virtualObject.uid && this.isSelected(virtualObject) && isMatchingTextSearch(virtualObject, null)) {\n            selectedVirtualObjects.push(virtualObject);\n         }\n         if (virtualObject.children) {\n            virtualObject.children.forEach(child => {\n               if (child.uid && this.isSelected(child) && isMatchingTextSearch(virtualObject, child)) {\n                  selectedVirtualObjects.push(child);\n               }\n            });\n         }\n      });\n      return selectedVirtualObjects;\n   }\n\n   isSelected(virtualObject: VirtualObjectModel): boolean {\n      if (!this.isVirtualObject(virtualObject) && !this.isParent(virtualObject)) {\n         return false;\n      }\n\n      const isSingleSelectedObject: boolean =\n            !this.isParent(virtualObject) && this.selectedObjects.has(this.getKey(virtualObject));\n\n      const isParentObjectWithSelectedChild: boolean =\n            this.isParent(virtualObject) && virtualObject.children.some(child => this.isSelected(child));\n\n      return isSingleSelectedObject || isParentObjectWithSelectedChild;\n   }\n\n   isIndeterminate(virtualObject: VirtualObjectModel): boolean {\n      if (!this.isParent(virtualObject)) {\n         return false;\n      }\n\n      return virtualObject.children.some(\n            (child, i, children) => this.isSelected(child) !== this.isSelected(children[0]));\n   }\n\n   /**\n    * Check if it is a real virtual object or a fake one (used to group multiple virtual objects - E.g. VM)\n    */\n   private isVirtualObject(virtualObject: VirtualObjectModel): boolean {\n      return !!virtualObject.uid;\n   }\n\n   /**\n    * Only objects that are not real objects and have children are parent items.\n    */\n   private isParent(virtualObject: VirtualObjectModel): boolean {\n      return !this.isVirtualObject(virtualObject) && !VsanUiUtils.isEmpty(virtualObject.children);\n   }\n\n   /**\n    * Unique id per virtual object\n    */\n   private getKey(virtualObject: VirtualObjectModel): string {\n      // most of the root items have no uid\n      return `${virtualObject.name}-${virtualObject.uid}${this.getChildrenKey(virtualObject)}`;\n   }\n\n   private getChildrenKey(virtualObject: VirtualObjectModel): string {\n      return this.isParent(virtualObject)\n         ? `-${virtualObject.children.map(child => this.getKey(child)).join(\"-\")}`\n         : \"\";\n   }\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {VirtualObjectsTypeUtil} from \"@component/virtual-objects-table/virtual-objects-type.util\";\nimport {DisplayObjectType} from \"@generated/display-object-type\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   selector: \"vsan-vm-cell\",\n   templateUrl: \"vm-cell.html\",\n   styleUrls: [\"vm-cell.scss\"],\n})\nexport class VsanVmCell {\n\n   @Input()\n   item: VirtualObjectModel;\n\n   @Input()\n   isLink: boolean;\n\n   @Input()\n   isTooltipVisible: boolean = true;\n\n   @Output()\n   linkClick: EventEmitter<VirtualObjectModel> = new EventEmitter<VirtualObjectModel>();\n\n   get displayName(): string {\n      return VirtualObjectsTypeUtil.getDisplayName(this.item);\n   }\n\n   get isNoPermissionVm(): boolean {\n      return !!this.item.vmRef\n            && !!this.item.type\n            && this.item.type.displayType === DisplayObjectType.VM\n            && !this.item.hasVmReadPermissions;\n   }\n\n   getTooltipText(vmRef: ManagedObject): string {\n      return VsanUiUtils.getString(\"vsan.monitor.cluster.virtualObjects.noReadPermissions\", vmRef.value);\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nexport class ActionAvailableStatus {\n   constructor(public available: boolean, public message: string) { }\n}","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {VirtualObjectsActionsComponent} from \"@component/virtual-objects-table/actions/virtual-objects-actions.component\";\nimport {CompositeHealthStatesFilterItemComponent} from \"@component/virtual-objects-table/filter/composite-health-states-filter-item.component\";\nimport {VirtualObjectsTypeFilterComponent} from \"@component/virtual-objects-table/filter/virtual-objects-type-filter.component\";\nimport {VirtualObjectsFilterableTableComponent} from \"@component/virtual-objects-table/virtual-objects-filterable-table.component\";\nimport {VirtualObjectsTableComponent} from \"@component/virtual-objects-table/virtual-objects-table.component\";\nimport {VirtualObjectsTableService} from \"@component/virtual-objects-table/virtual-objects-table.service\";\nimport {VsanVmCell} from \"@component/virtual-objects-table/vm-cell.component\";\nimport {VirtualObjectWhatIfStateIconClassPipe} from \"@component/virtual-objects-table/whatIf-state-icon-class.pipe\";\nimport {VirtualObjectWhatIfStateIconShapePipe} from \"@component/virtual-objects-table/whatIf-state-icon-shape.pipe\";\nimport {VirtualObjectWhatIfStateLabelPipe} from \"@component/virtual-objects-table/whatIf-state-label.pipe\";\nimport {ReferenceWatcher} from \"@util/reference-watcher\";\nimport {VsanCommonModule} from \"../../vsan-common.module\";\nimport {VirtualObjectsTableStateService} from \"@component/virtual-objects-table/virtual-objects-table-state.service\";\nimport {VirtualObjectsActionAvailabilityService} from \"@component/virtual-objects-table/actions/validation/virtual-objects-action-availability.service\";\nimport {ExportModule} from \"@component/export/export.module\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      VsanCommonModule,\n      ExportModule,\n   ],\n   declarations: [\n      VirtualObjectsActionsComponent,\n      VirtualObjectsTableComponent,\n      VirtualObjectsFilterableTableComponent,\n      VsanVmCell,\n      CompositeHealthStatesFilterItemComponent,\n      VirtualObjectsTypeFilterComponent,\n      VirtualObjectWhatIfStateLabelPipe,\n      VirtualObjectWhatIfStateIconShapePipe,\n      VirtualObjectWhatIfStateIconClassPipe,\n   ],\n   exports: [\n      VirtualObjectsTableComponent,\n      VirtualObjectsFilterableTableComponent,\n      VsanVmCell,\n   ],\n   providers: [\n      VirtualObjectsTableService,\n      VirtualObjectsTableStateService,\n      ReferenceWatcher,\n      VirtualObjectsActionAvailabilityService,\n   ],\n})\nexport class VirtualObjectsTableModule {\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {ActionButtonModule} from \"@component/action-button/action-button.module\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {CommonCellsModule} from \"@component/cell/common-cells.module\";\nimport {InventoryBrowserModule} from \"@component/inventory/inventory-browser.module\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {TreeDatagridModule} from \"@component/datagrid/tree-datagrid.module\";\nimport {DatetimePickerModule} from \"@component/datetime-picker/datetime-picker.module\";\nimport {PopupListModule} from \"@component/popup-list/popup-list.module\";\nimport {VsanBreadcrumbModule} from \"@component/navigation/vsan-breadcrumb.module\";\n\n@NgModule({\n   imports: [\n         CommonDirectiveModule,\n         CommonPipeModule,\n         ValidationModule,\n         ActionButtonModule,\n         PromptModule,\n         CommonCellsModule,\n         InventoryBrowserModule,\n         SearchModule,\n         TreeDatagridModule,\n         DatetimePickerModule,\n         PopupListModule,\n         VsanBreadcrumbModule,\n   ],\n   exports: [\n      CommonDirectiveModule,\n      CommonPipeModule,\n      ValidationModule,\n      ActionButtonModule,\n      PromptModule,\n      CommonCellsModule,\n      InventoryBrowserModule,\n      SearchModule,\n      TreeDatagridModule,\n      DatetimePickerModule,\n      PopupListModule,\n      VsanBreadcrumbModule,\n   ],\n})\nexport class VsanCommonModule { }","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ActionButtonSeparatorComponent} from \"@component/action-button/action-button-separator.component\";\nimport {ButtonTitleDirective} from \"@component/action-button/button-title.directive\";\nimport {ButtonGroupDirective} from \"@component/action-button/button-group.directive\";\nimport {ButtonGroupWrapDirective} from \"@component/action-button/button-group-wrap.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n   ],\n   declarations: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ],\n   exports: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ]\n})\nexport class ActionButtonModule {\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {ExportComponent} from \"@component/export/export.component\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\n\n@NgModule({\n   imports: [CommonModule, ClarityModule, CommonPipeModule],\n   declarations: [ExportComponent],\n   exports: [\n      ExportComponent,\n   ],\n})\nexport class ExportModule {}","/* Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {DisplayObjectType} from \"@generated/display-object-type\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {VirtualObjectType} from \"@generated/virtual-object-type\";\nimport {VsanObjectType} from \"@generated/vsan-object-type\";\nimport {VsanWhatIfComplianceStatus} from \"@generated/vsan-what-if-compliance-status\";\nimport {Logger} from \"@util/logger\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\nexport class VirtualObjectsTypeUtil {\n\n   private static readonly typeToLabelKey: Map<DisplayObjectType, string> = new Map([\n      [DisplayObjectType.CNS_VOLUME, \"vsan.monitor.cluster.virtualObjects.type.cns_volume\"],\n      [DisplayObjectType.DISK, \"vsan.monitor.cluster.virtualObjects.type.disk\"],\n      [DisplayObjectType.EXTENSION_APP, \"vsan.monitor.cluster.virtualObjects.type.extension_app\"],\n      [DisplayObjectType.FCD_DISK, \"vsan.monitor.cluster.virtualObjects.type.fcd_disk\"],\n      [DisplayObjectType.FILE_SHARE, \"vsan.monitor.cluster.virtualObjects.type.file_share\"],\n      [DisplayObjectType.FILE_SHARE_OBJECT, \"vsan.monitor.cluster.virtualObjects.type.file_share_object\"],\n      [DisplayObjectType.FILE_VOLUME, \"vsan.monitor.cluster.virtualObjects.type.file_volume\"],\n      [DisplayObjectType.FILE_VOLUME_OBJECT, \"vsan.monitor.cluster.virtualObjects.type.file_volume_object\"],\n      [DisplayObjectType.FOLDER, \"vsan.monitor.cluster.virtualObjects.type.folder\"],\n      [DisplayObjectType.ISCSI_LUN, \"vsan.monitor.cluster.virtualObjects.type.iscsi_lun\"],\n      [DisplayObjectType.ISCSI_TARGET, \"vsan.monitor.cluster.virtualObjects.type.iscsi_target\"],\n      [DisplayObjectType.OTHER, \"vsan.monitor.cluster.virtualObjects.type.other\"],\n      [DisplayObjectType.REPLICATION, \"vsan.monitor.cluster.virtualObjects.type.replication\"],\n      [DisplayObjectType.VM, \"vsan.monitor.cluster.virtualObjects.type.vm\"],\n      [DisplayObjectType.VM_MEMORY, \"vsan.monitor.cluster.virtualObjects.type.vm_memory\"],\n      [DisplayObjectType.VM_SWAP, \"vsan.monitor.cluster.virtualObjects.type.vm_swap\"],\n   ]);\n\n   static getVirtualObjectTypeFilter(displayType: DisplayObjectType, extensionId?: string, extensionName?: string):\n         VirtualObjectType {\n      return VirtualObjectType.Factory.create(null, displayType, extensionId, extensionName);\n   }\n\n   static getDisplayName(virtualObject: VirtualObjectModel): string {\n      return virtualObject.displayName\n            ? virtualObject.displayName\n            : virtualObject.name;\n   }\n\n   static getComplianceStatusLabel(status: VsanWhatIfComplianceStatus): string {\n      if (!status) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n      switch (status) {\n         case VsanWhatIfComplianceStatus.INACCESSIBLE:\n            return VsanUiUtils.getString(\"vsan.monitor.cluster.virtualObjects.whatIfResult.inaccessible\");\n         case VsanWhatIfComplianceStatus.NOT_COMPLIANT:\n            return VsanUiUtils.getString(\"vsan.monitor.cluster.virtualObjects.whatIfResult.incompliant\");\n         default:\n            Logger.warn(\"Unknown VsanWhatIfComplianceStatus status: \" + status);\n            return VsanUiUtils.getString(\"vsan.objectHealth.unknown\");\n      }\n   }\n\n   static getTypeLabel(type: VirtualObjectType): string {\n      return type.extendedTypeName\n            ? type.extendedTypeName\n            : VsanUiUtils.getString(VirtualObjectsTypeUtil.typeToLabelKey.get(type.displayType));\n   }\n\n   static isPerformanceSupported(item: VirtualObjectModel): boolean {\n      return VirtualObjectsTypeUtil.isAttachedBlockVolume(item) ||\n            VirtualObjectsTypeUtil.isFileShareOrFileVolume(item) ||\n            VirtualObjectsTypeUtil.isVmdkOrAttachedFCD(item);\n   }\n\n   static isVmWithAttachedVolume(item: VirtualObjectModel): boolean {\n      return item.vmRef &&\n            item.children &&\n            item.children.some(childItem => VirtualObjectsTypeUtil.isAttachedBlockVolume(childItem));\n   }\n\n   static isVolume(item: VirtualObjectModel): boolean {\n      return VirtualObjectsTypeUtil.isAttachedBlockVolume(item) ||\n            VirtualObjectsTypeUtil.isDetachedBlockVolume(item) ||\n            VirtualObjectsTypeUtil.isFileVolume(item);\n   }\n\n   static isAttachedBlockVolume(item: VirtualObjectModel): boolean {\n      return item.vmRef &&\n            (this.isExtensionBlockVolume(item) || item.type.vmodlType === VsanObjectType.attachedCnsVolBlock);\n   }\n\n   static isDetachedBlockVolume(item: VirtualObjectModel): boolean {\n      return !item.vmRef &&\n            (this.isExtensionBlockVolume(item) || item.type.vmodlType === VsanObjectType.detachedCnsVolBlock);\n   }\n\n   static isFileShareOrFileVolume(item: VirtualObjectModel): boolean {\n      return VirtualObjectsTypeUtil.isFileShare(item) ||\n            VirtualObjectsTypeUtil.isFileVolume(item);\n   }\n\n   static isFileShare(item: VirtualObjectModel): boolean {\n      return [DisplayObjectType.FILE_SHARE_OBJECT, DisplayObjectType.FILE_SHARE].includes(item.type.displayType);\n   }\n\n   static isFileVolume(item: VirtualObjectModel): boolean {\n      return !item.vmRef &&\n            [DisplayObjectType.FILE_VOLUME, DisplayObjectType.FILE_VOLUME_OBJECT].includes(item.type.displayType) &&\n            item.type.vmodlType === VsanObjectType.cnsVolFile;\n   }\n\n   private static isExtensionBlockVolume(item: VirtualObjectModel): boolean {\n      return item.type.displayType === DisplayObjectType.CNS_VOLUME &&\n            item.type.vmodlType === VsanObjectType.extension;\n   }\n\n   static isVmdkOrAttachedFCD(item: VirtualObjectModel): boolean {\n      return item.vmRef && [VsanObjectType.vdisk, VsanObjectType.improvedVirtualDisk].includes(item.type.vmodlType);\n   }\n}\n","<!-- Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<clr-icon *ngIf=\"item.iconId\" [attr.shape]=\"item.iconId\"></clr-icon>\n\n<clr-tooltip *ngIf=\"isNoPermissionVm; else other\" vsan-show-title>\n   <span clrTooltipTrigger class=\"no-read-permissions path-label\">{{item.name}}</span>\n   <clr-tooltip-content *ngIf=\"isTooltipVisible\"\n                        clrPosition=\"middle-right\"\n                        clrSize=\"md\">\n      {{getTooltipText(item.vmRef)}}\n   </clr-tooltip-content>\n</clr-tooltip>\n<ng-template #other>\n   <a *ngIf=\"isLink; else noLink\"\n      href=\"javascript://\"\n      (click)=\"linkClick.emit(item)\"\n      vsan-show-title>\n      {{displayName}}\n   </a>\n\n   <ng-template #noLink>\n      <span class=\"path-label\" vsan-show-title>{{displayName}}</span>\n   </ng-template>\n</ng-template>\n"],"sourceRoot":"webpack:///"}