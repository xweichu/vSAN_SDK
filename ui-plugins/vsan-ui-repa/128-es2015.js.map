{"version":3,"sources":["./src/app/vsan/common/directive/signpost-title/signpost-title.directive.ts","./src/app/vsan/virtualobjects/virtual-objects.component.ts","./src/app/vsan/common/service/navigation/model/knowledge-base-id.ts","./src/app/vsan/common/util/modal-builder.ts","./src/app/vsan/virtualobjects/view/placement-details-dialog.html","./src/app/vsan/virtualobjects/virtual-objects.module.ts","./src/app/vsan/common/directive/clr-button-group/clr-button-group-common.directive.ts","./src/app/vsan/performance/model/perf-monitor-view-type.model.ts","./src/app/vsan/virtualobjects/view/placement-details-dialog.component.ts","./src/app/vsan/virtualobjects/virtual-objects.html"],"names":[],"mappings":"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","file":"128-es2015.js","sourcesContent":["/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterViewInit, Directive, ElementRef, Input, Renderer2} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * Attribute directive for setting a custom title to the clr-icon inside a clr-signpost.\n * It also adds aria-label with the same value and aria-expanded=\"false\" to the button, holding the icon.\n * Used for changing the title when a clr-icon is not explicitly added inside a clr-signpost.\n */\n@Directive({\n   selector: \"clr-signpost\",\n})\nexport class SignpostTitleDirective implements AfterViewInit {\n   private readonly BUTTON_TAG_NAME: string = \"button\";\n   private readonly CLR_ICON_TAG_NAME: string = \"clr-icon\";\n\n   private readonly TITLE_ATTRIBUTE: string = \"title\";\n   private readonly ARIA_EXPANDED_ATTRIBUTE: string = \"aria-expanded\";\n   private readonly ARIA_LABEL_ATTRIBUTE: string = \"aria-label\";\n\n   @Input(\"vsan-signpost-title\")\n   signpostTitle: string;\n\n   constructor(private el: ElementRef<HTMLElement>,\n         private renderer: Renderer2) {\n   }\n\n   ngAfterViewInit(): void {\n      if (!this.signpostTitle) {\n         return;\n      }\n\n      const signpostIcon: Element = this.el.nativeElement.getElementsByTagName(this.CLR_ICON_TAG_NAME).item(0);\n      if (signpostIcon) {\n         this.renderer.setAttribute(signpostIcon, this.TITLE_ATTRIBUTE, VsanUiUtils.getString(this.signpostTitle));\n      }\n      const button: Element = this.el.nativeElement.getElementsByTagName(this.BUTTON_TAG_NAME).item(0);\n      if (button) {\n         this.renderer.setAttribute(button, this.ARIA_EXPANDED_ATTRIBUTE, \"false\");\n         this.renderer.setAttribute(button, this.ARIA_LABEL_ATTRIBUTE, VsanUiUtils.getString(this.signpostTitle));\n      }\n   }\n}\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectorRef, Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {Icon} from \"@util/icon\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VirtualObjectsService} from \"@generated/virtual-objects-service\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {DiskManagementService} from \"@generated/disk-management-service\";\nimport {Logger} from \"@util/logger\";\nimport {VirtualObjectsContext} from \"@navigation/context/virtual-objects-context\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\nimport {BaseHealthState} from \"@util/vsan-health-util\";\nimport {VirtualObjectType} from \"@generated/virtual-object-type\";\nimport {KnowledgeBaseId} from '@service/navigation/model/knowledge-base-id';\n\n@Component({\n   selector: \"vsan-virtual-objects\",\n   templateUrl: \"virtual-objects.html\",\n   styleUrls: [\"virtual-objects.scss\"],\n})\nexport class VirtualObjectsComponent implements OnInit {\n\n   readonly KnowledgeBaseId: typeof KnowledgeBaseId = KnowledgeBaseId;\n\n   virtualObjectsloading: boolean = true;\n\n   // Enable Enums for direct use in html template.\n   Icon: typeof Icon = Icon;\n   VsanUiUtils: typeof VsanUiUtils = VsanUiUtils;\n\n   // Shows a warning when there are disconnected hosts or network partitioning in the cluster\n   showWarning: boolean;\n\n   // data retrieval error\n   generalError: string;\n\n   allItems: VirtualObjectModel[];\n\n   objectIdentitiesSupported: boolean = false;\n   capabilityCheckLoading: boolean = true;\n\n   presentVirtualObjectUuids: string[];\n   initialNameFilter: string;\n   initialFilteredTypes: VirtualObjectType[];\n   initialFilteredHealthStates: BaseHealthState[];\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   constructor(\n         private service: VirtualObjectsService,\n         private diskMgmtService: DiskManagementService,\n         private capabilityProvider: VsanCapabilityProvider,\n         private changeDetector: ChangeDetectorRef) {\n   }\n\n   ngOnInit(): void {\n      this.fetch();\n   }\n\n   @RefreshHandler\n   async fetch(): Promise<void> {\n      this.preselectContextData();\n\n      await this.getCapabilities();\n      if (!this.objectIdentitiesSupported) {\n         return;\n      }\n\n      // Start loading the virtual objects data\n      try {\n         this.virtualObjectsloading = true;\n         const clusterRef: ManagedObject = ManagedObject.contextObject;\n         [this.allItems, this.showWarning] = await Promise.all([\n            this.service.listVirtualObjects(clusterRef, null),\n            this.diskMgmtService.hasNetworkPartitionsOrDisconnectedMembers(clusterRef),\n         ]);\n\n         this.srOnlyMessage = VsanUiUtils.getString(\"vsan.screenReader.message.page.loaded\",\n               VsanUiUtils.getString(\"vsan.monitor.virtualObjects\"));\n      } catch (error) {\n         this.handleDataError(error);\n      } finally {\n         this.virtualObjectsloading = false;\n         this.changeDetector.detectChanges();\n      }\n   }\n\n   private preselectContextData(): void {\n      const context: VirtualObjectsContext = VsanUiUtils.getNavigationData();\n      if (context) {\n         this.presentVirtualObjectUuids = context.presentVirtualObjectUuids;\n         this.initialNameFilter = context.filterName;\n         this.initialFilteredTypes = context.filterTypes;\n         this.initialFilteredHealthStates = context.filterHealthStates;\n      } else {\n         this.presentVirtualObjectUuids = null;\n         this.initialNameFilter = null;\n         this.initialFilteredTypes = null;\n         this.initialFilteredHealthStates = null;\n      }\n   }\n\n   private async getCapabilities(): Promise<void> {\n      this.capabilityCheckLoading = true;\n      try {\n         this.objectIdentitiesSupported = await this.capabilityProvider\n               .getIsObjectIdentitiesSupportedOnCluster(ManagedObject.contextObject);\n      } catch (error) {\n         this.handleDataError(error);\n      }\n      this.capabilityCheckLoading = false;\n   }\n\n   private handleDataError(error: string): void {\n      Logger.debug(\"Error loading virtual objects data: \" + error);\n      this.generalError = error;\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n/**\n * IDs used in external KB link navigation\n */\nexport enum KnowledgeBaseId {\n   PRECHECK_PCP = \"83954\",\n   VIRTUAL_OBJECTS = \"2108319\",\n   UPGRADE = \"2148493\",\n   PERFORMANCE_DIAGNOSTICS = \"2148770\",\n   SUPPORT_INSIGHT = \"60206\",\n}\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {environment} from \"@env/environment\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Logger} from \"./logger\";\nimport {WebPlatform} from \"./platform\";\nimport {VsanUiUtils} from \"./vsan-util\";\n\nexport class ModalBuilder {\n\n   static readonly WIDTH: number = 0;\n   static readonly HEIGHT: number = 1;\n\n   static readonly DEFAULT_SIZE: number[] = [1000, 530];\n   static readonly WIZARD_XL: number[] = [1200, 700];\n\n   static readonly APP_URL: string = (environment.repa && environment.repaExtension)\n         ? \"index.html\"\n         : \"/ui/h5-vsan-ui/\";\n\n   private size: number[] = ModalBuilder.DEFAULT_SIZE;\n\n   // When null, the modal dialog will be headless and the docked\n   // view is expected to provide a title bar.\n   private title: string = null;\n\n   private accessibilityTitle: string = null;\n\n   private urlParams: any = {};\n\n   private eventTarget: EventTarget;\n\n   constructor(private appId: string) {\n   }\n\n   setDimensions(dimensions: number[]): ModalBuilder {\n      if (!dimensions || dimensions.length !== 2) {\n         Logger.warn(\"invalid modal dimensions\", dimensions);\n         dimensions = ModalBuilder.DEFAULT_SIZE;\n      }\n      return this.setSize(dimensions[ModalBuilder.WIDTH], dimensions[ModalBuilder.HEIGHT]);\n   }\n\n   setSize(width: number, height: number): ModalBuilder {\n      this.size = [width, height];\n      return this;\n   }\n\n   setUrlParameters(params: any): ModalBuilder {\n      this.urlParams = params;\n      return this;\n   }\n\n   /**\n    * Set to null if the view provides its own title bar\n    */\n   setTitle(title: string): ModalBuilder {\n      this.title = title;\n      return this;\n   }\n\n   setAccessibilityTitle(accessibilityTitle: string): ModalBuilder {\n      this.accessibilityTitle = accessibilityTitle;\n      return this;\n   }\n\n   /**\n    * Set explicit event target if it is changed before opening the modal.\n    * For example when making a preceding request the event target is the XMLHttpRequest object.\n    */\n   setEventTarget(eventTarget: EventTarget): ModalBuilder {\n      this.eventTarget = eventTarget;\n      return this;\n   }\n\n   /**\n    * Opens a modal dialog and returns a promise to collect the result; On close the target element is focused.\n    * @param context - any JS data object, can be retrieved by WebPlatform.getModalContext()\n    * @returns {Promise<any>} - Invoked if the dialog invokes WebPlatform.closeModalDialog(arg)\n    *       with non-null arg. The promise is never rejected.\n    */\n   open(context?: any): Promise<any> {\n      return new Promise<any>((accept) => {\n         VsanUiUtils.pluginContext.targetElement = this.eventTarget ? this.eventTarget :\n               (event && event.target ? event.target : null);\n         VsanUiUtils.pluginContext.modalResultHandler = (data?: any) => {\n            if (typeof data !== \"undefined\") {\n               // Deep copy of the object was required to resolve an issue with object's prototype overriding when\n               // passing complex objects in IE11/Edge; Keep it for safety.\n               accept(JSON.parse(JSON.stringify(data)));\n            } else if (VsanUiUtils.pluginContext.targetElement && VsanUiUtils.pluginContext.targetElement.focus) {\n               // On cancel just focus the target element. Timeout is required as otherwise the focus may be\n               // consumed by the mouse click.\n               setTimeout(() => VsanUiUtils.pluginContext.targetElement.focus(), 100);\n            }\n         };\n\n         let actionUrl: string = `${ModalBuilder.APP_URL}?viewId=${this.appId}`;\n\n         let separator: string = \"?\";\n         for (const param in this.urlParams) {\n            actionUrl += separator + param + \"=\" + this.urlParams[param];\n            separator = \"&\";\n         }\n\n         WebPlatform.openModalDialog(this.title,\n               actionUrl,\n               ManagedObject.contextObjectUid,\n               this.size[0], this.size[1],\n               this.title != null,\n               VsanUiUtils.pluginContext.modalResultHandler /* onClose */,\n               context /* retrieve with Platform.getModalContext() */,\n               this.accessibilityTitle);\n      });\n   }\n\n}\n","<!--Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-info-prompt [title]=\"'vsan.monitor.cluster.virtualObjects.action.viewDetails.title' | localized\"\n                  [subtitle]=\"subtitle\"\n                  [(alertMessage)]=\"error\">\n   <div class=\"dialog-container\">\n      <vsan-validation id=\"host-netowrk-partitioning-warning\"\n                       *ngIf=\"hasNetworkPartitioning\"\n                       [alert]=\"'vsan.monitor.virtualDisks.networkPartitionLabel' | localized\"\n                       [alertType]=\"'warning'\"\n                       [allowClose]=\"false\">\n      </vsan-validation>\n      <vsan-placement-details\n            [loadingObjects]=\"virtualObjectsLoading\"\n            [clusterRef]=\"clusterRef\"\n            [selectedVirtualObjects]=\"selectedVirtualObjects\"\n            [virtualObjects]=\"virtualObjects\"\n            [isGrouped]=\"isGrouped\">\n      </vsan-placement-details>\n   </div>\n</vsan-info-prompt>\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {VsanCommonModule} from \"app/vsan/common/vsan-common.module\";\nimport {VirtualObjectsComponent} from \"./virtual-objects.component\";\nimport {PlacementDetailsDialogComponent} from \"./view/placement-details-dialog.component\";\nimport {PlacementDetailsModule} from \"@component/placement-details/placement-details.module\";\nimport {VirtualObjectsTableModule} from \"@component/virtual-objects-table/virtual-objects-table.module\";\n\nconst routes: Routes = [\n   {\n      path: \"\",\n      component: VirtualObjectsComponent,\n   },\n   {\n      path: \"physicalPlacementDialog\",\n      component: PlacementDetailsDialogComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      VsanCommonModule,\n      PlacementDetailsModule,\n      VirtualObjectsTableModule,\n      RouterModule.forChild(routes),\n   ],\n   declarations: [\n      VirtualObjectsComponent,\n      PlacementDetailsDialogComponent,\n   ],\n})\nexport class VirtualObjectsModule {\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterContentInit, ContentChildren, Directive, ElementRef} from \"@angular/core\";\nimport {ClrButton} from \"@clr/angular\";\nimport {ClrButtonBaseDirective, DirectiveHolder} from \"@directive/clr-button-group/clr-button-base.directive\";\n\n/**\n * Applies on every clr-button-group and help to link the clr-button with directive applieds on it,  which extends\n * {@link ClrButtonBaseDirective}, to the actual rendered html button.\n */\n@Directive({\n   selector: \"clr-button-group\",\n})\nexport class ClrButtonGroupCommonDirective implements AfterContentInit {\n\n   @ContentChildren(ClrButton, {descendants: true})\n   clrButtons: ClrButton[];\n\n   constructor(private elRef: ElementRef) {}\n\n   ngAfterContentInit(): void {\n      setTimeout(() => {\n         const allButtons: NodeListOf<HTMLButtonElement> = this.elRef.nativeElement.querySelectorAll(\"button\");\n         // match button with clrButton and notify directives\n         this.clrButtons.filter(clrButton => !!(clrButton as DirectiveHolder).directives)\n               .forEach((clrButton, index) => {\n                  const buttonFound: HTMLButtonElement = this.findButtonByName(clrButton.name, allButtons);\n                  if (buttonFound) {\n                     (clrButton as DirectiveHolder).directives.forEach(directive => {\n                        directive.resolveButton(clrButton, buttonFound, index);\n                     });\n                  }\n               });\n      });\n   }\n\n   private findButtonByName(name: string, buttons: NodeListOf<HTMLButtonElement>): HTMLButtonElement {\n      for (let i: number = 0; i < buttons.length; i++) {\n         if (buttons.item(i).name === name) {\n            return buttons.item(i);\n         }\n      }\n      return null;\n   }\n\n}","/* Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nexport enum PerfMonitorViewType {\n\n   // Cluster\n   CLUSTER_VM_CONSUMPTION,\n   CLUSTER_COMPUTE_ONLY_VM_REMOTE_CONSUMPTION,\n   CLUSTER_VM_REMOTE_CONSUMPTION,\n   CLUSTER_BACKEND,\n   CLUSTER_ISCSI,\n   CLUSTER_FILE_SERVICE,\n   CLUSTER_IO_INSIGHT,\n   CLUSTER_PMEM,\n   CLUSTER_VSAN_DIRECT,\n\n   // Host\n   HOST_VM_CONSUMPTION,\n   HOST_BACKEND,\n   HOST_DISK,\n   HOST_PHYSICAL_ADAPTER,\n   HOST_VIRTUAL_ADAPTER,\n   HOST_ISCSI,\n   HOST_IO_INSIGHT,\n   HOST_VSAN_DIRECT,\n   HOST_PMEM,\n\n   // Virtual Machine\n   VM_CONSUMPTION,\n   VM_VIRTUAL_DISK,\n}\n","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VirtualObjectsTypeUtil} from \"@component/virtual-objects-table/virtual-objects-type.util\";\nimport {DiskManagementService} from \"@generated/disk-management-service\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {VirtualObjectsService} from \"@generated/virtual-objects-service\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {PlacementDetailsDialogContext} from \"./placement-details-dialog-context\";\n\n@Component({\n   templateUrl: \"placement-details-dialog.html\",\n   selector: \"vsan-placement-details-dialog\",\n   styleUrls: [\"placement-details-dialog.scss\"],\n})\nexport class PlacementDetailsDialogComponent implements OnInit {\n\n   clusterRef: ManagedObject;\n   virtualObjects: VirtualObjectModel[] = [];\n   selectedVirtualObjects: VirtualObjectModel[] = [];\n   subtitle: string;\n   hasNetworkPartitioning: boolean;\n\n   @LoadingIndicator()\n   virtualObjectsLoading: boolean;\n\n   isGrouped: boolean = false;\n   selectedVirtualMachines: ManagedObject[] = [];\n\n   // data retrieval error\n   @ErrorMessage()\n   error: string;\n\n   constructor(private diskMgmtService: DiskManagementService,\n         private virtualObjectService: VirtualObjectsService) {\n   }\n\n   async ngOnInit(): Promise<void> {\n      // Modal window - get the data from modal context\n      const context: PlacementDetailsDialogContext = VsanUiUtils.getModalContext();\n      this.clusterRef = context.clusterRef;\n      this.virtualObjects = context.virtualObjects;\n      this.selectedVirtualObjects = context.selectedVirtualObjects;\n      this.isGrouped = context.isGrouped;\n      this.selectedVirtualMachines = context.selectedVirtualMachines;\n      await this.loadData();\n      this.updateSubTitle();\n   }\n\n   @Loader({\n      srMessage: \"vsan.monitor.cluster.virtualObjects.action.viewDetails.title\",\n      srMessageType: SrMessageType.PAGE_TITLE,\n   })\n   private async loadData(): Promise<void> {\n      const promises: any[] = [];\n      if (VsanUiUtils.isEmpty(this.virtualObjects)) {\n         const listVirtualObjectsPromise: Promise<void> = this.virtualObjectService\n               .listVirtualObjects(this.clusterRef, [])\n               .then(result => this.handleVirtualObjects(result));\n         promises.push(listVirtualObjectsPromise);\n      }\n      const hadNetworkPartitionsPromise: Promise<boolean> = this.diskMgmtService\n            .hasNetworkPartitionsOrDisconnectedMembers(this.clusterRef)\n            .then(result => this.hasNetworkPartitioning = result);\n      promises.push(hadNetworkPartitionsPromise);\n\n      await Promise.all(promises);\n   }\n\n   private handleVirtualObjects = (result: VirtualObjectModel[]) => {\n      if (!result) {\n         return;\n      }\n      this.virtualObjects = this.filterVMs(result);\n      this.selectedVirtualObjects = this.getSelectedVirtualObjects();\n   };\n\n   private filterVMs(virtualObjects: VirtualObjectModel[]): VirtualObjectModel[] {\n      if (!VsanUiUtils.isEmpty(this.selectedVirtualMachines)) {\n         return virtualObjects.filter(virtualObject => this.selectedVirtualMachines\n               .some(selectedVM => ManagedObject.areEqual(selectedVM, virtualObject.vmRef)));\n      }\n\n      return virtualObjects;\n   }\n\n   private getSelectedVirtualObjects(): VirtualObjectModel[] {\n      const result: VirtualObjectModel[] = [];\n      for (const virtualObject of this.virtualObjects) {\n         if (!!virtualObject.children) {\n            result.push(...virtualObject.children);\n         }\n      }\n      return result;\n   }\n\n   private updateSubTitle(): void {\n      if (this.selectedVirtualObjects.length === 1) {\n         this.subtitle = VirtualObjectsTypeUtil.getDisplayName(this.selectedVirtualObjects[0]);\n      } else {\n         this.subtitle = VsanUiUtils.getString(\"vsan.monitor.cluster.virtualObjects.action.viewDetails.subtitle\",\n               this.selectedVirtualObjects.length);\n      }\n   }\n}\n","<!-- Copyright 2017-2020 VMware, Inc. All rights reserved. VMware Confidential -->\n<h5 vsan-auto-focus>\n   {{\"vsan.monitor.virtualObjects\" | localized}}\n</h5>\n<vsan-validation id=\"validation-message\"\n                 *ngIf=\"generalError\"\n                 [alert]=\"generalError\"\n                 [allowReload]=\"true\"\n                 (onReload)=\"fetch()\"\n                 (onClosed)=\"generalError = null\">\n</vsan-validation>\n\n<vsan-validation id=\"host-error\"\n                 *ngIf=\"!generalError && showWarning\"\n                 [alert]=\"'vsan.monitor.virtualDisks.networkPartitionLabel' | localized\"\n                 [alertType]=\"'warning'\"\n                 [allowClose]=\"false\">\n</vsan-validation>\n\n<ng-container *ngIf=\"objectIdentitiesSupported\">\n   <span>\n      {{\"vsan.monitor.cluster.virtualObjects.header\" | localized}}\n      <a [external-link]=\"'vsan.monitor.cluster.virtualObjects.link' | localized\"\n         [articleId]=\"KnowledgeBaseId.VIRTUAL_OBJECTS\"></a>\n   </span>\n   <vsan-virtual-objects-filterable-table id=\"virtual-objects-table\"\n                                          [loading]=\"virtualObjectsloading\"\n                                          [presentVirtualObjectUuids]=\"presentVirtualObjectUuids\"\n                                          [initiallyFilteredName]=\"initialNameFilter\"\n                                          [initiallyFilteredTypes]=\"initialFilteredTypes\"\n                                          [initialFilteredHealthStates]=\"initialFilteredHealthStates\"\n                                          [virtualObjects]=\"allItems\">\n   </vsan-virtual-objects-filterable-table>\n</ng-container>\n<span class=\"spinner central-spinner\" *ngIf=\"capabilityCheckLoading\"></span>\n<!-- Not supported -->\n<span class=\"bold-no-selection\" *ngIf=\"!capabilityCheckLoading && !objectIdentitiesSupported\">\n   {{'vsan.monitor.cluster.virtualObjects.objectIdentitiesNotSupported' | localized}}\n</span>"],"sourceRoot":"webpack:///"}