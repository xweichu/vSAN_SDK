{"version":3,"sources":["./src/app/vsan/performance/io-insight/action/rerun-error-dialog.component.ts.RerunErrorDialogComponent.html","./src/app/vsan/performance/io-insight/io-insight-duration-input.component.ts","./src/app/vsan/performance/io-insight/action/rerun-instance-dialog.component.ts","./src/app/vsan/performance/io-insight/action/io-insight-actions.module.ts","./src/app/vsan/performance/io-insight/action/rerun-instance-dialog.html","./src/app/vsan/performance/io-insight/io-insight-duration-input.html","./src/app/vsan/performance/io-insight/action/rerun-error-dialog.component.ts","./src/app/vsan/performance/io-insight/action/instance-action-dialog.component.ts","./src/app/vsan/performance/io-insight/action/rename-instance-dialog.html","./src/app/vsan/performance/io-insight/action/instance-action-dialog.html","./src/app/vsan/performance/io-insight/action/rename-instance-dialog.component.ts"],"names":[],"mappings":"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","file":"79-es2015.js","sourcesContent":["\n      <vsan-info-prompt\n            [title]=\"'vsan.io.insight.instance.rerun.error.title' | localized\"\n            [confirmText]=\"'vsan.common.ok' | localized\">\n         <span>{{'vsan.io.insight.instance.rerun.error.info' | localized}}</span>\n      </vsan-info-prompt>\n   ","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {DurationUnit} from \"@pipe/DurationPipe\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\n\n@Component({\n   templateUrl: \"io-insight-duration-input.html\",\n   styleUrls: [\"io-insight-duration-input.scss\"],\n   selector: \"vsan-io-insight-duration-input\",\n})\nexport class IoInsightDurationInputComponent {\n   private static readonly MAX_HOURS_DURATION: number = 24;\n   private static readonly MAX_MINUTES_DURATION: number = VsanDateTimeUtils.convertTime(\n         IoInsightDurationInputComponent.MAX_HOURS_DURATION, DurationUnit.HOURS, DurationUnit.MINUTES);\n   maxDurationByUnit: Map<DurationUnit, number> = new Map<DurationUnit, number>([\n      [DurationUnit.HOURS, IoInsightDurationInputComponent.MAX_HOURS_DURATION],\n      [DurationUnit.MINUTES, IoInsightDurationInputComponent.MAX_MINUTES_DURATION],\n   ]);\n\n   DurationUnit = DurationUnit;\n\n   @Input()\n   duration: number;\n\n   @Input()\n   durationUnit: DurationUnit;\n\n   @Output()\n   durationChange: EventEmitter<number> = new EventEmitter();\n\n   @Output()\n   durationUnitChange: EventEmitter<DurationUnit> = new EventEmitter();\n\n   @Output()\n   onValidationErrors: EventEmitter<string[]> = new EventEmitter();\n\n   onChange() {\n      this.durationUnitChange.emit(this.durationUnit);\n      this.durationChange.emit(this.duration);\n      this.onValidationErrors.emit(this.validate());\n   }\n\n   validate(): string[] {\n      const validationMessages: string[] = [];\n\n      if (this.duration == null) {\n         validationMessages.push(VsanUiUtils.getString(\"vsan.io.insight.wizard.settingsPage.noDuration.error\"));\n      }\n\n      if (this.duration <= 0 || this.duration > this.maxDurationByUnit.get(this.durationUnit)) {\n         validationMessages.push(VsanUiUtils.getString(\"vsan.perf.chart.timerange.last.hourInterval.error\"));\n      }\n\n      if (VsanUiUtils.isDecimal(this.duration)) {\n         validationMessages.push(VsanUiUtils.getString(\"vsan.io.insight.wizard.settingsPage.duration.decimalError\"));\n      }\n\n      return validationMessages;\n   }\n}","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {IoInsightInstance} from \"@generated/io-insight-instance\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {InstanceActionContextData} from \"./instance-action-context.data\";\nimport {CreateIoInsightService} from \"@generated/create-io-insight-service\";\nimport {DateFormat, VsanDateFormatterPipe} from \"@pipe/VsanDateFormatterPipe\";\nimport {DurationUnit} from \"@pipe/DurationPipe\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\n\n@Component({\n   templateUrl: \"rerun-instance-dialog.html\",\n   selector: \"io-insight-rerun-instance-dialog\",\n   styleUrls: [\"rerun-instance-dialog.scss\"],\n})\nexport class RerunInstanceDialogComponent implements OnInit {\n   private static readonly DATE_FORMATTER: VsanDateFormatterPipe = new VsanDateFormatterPipe();\n   private static readonly SMALL_HEIGHT: number = 250;\n\n   readonly INSTANCE_NAME_MAX_LENGTH: number = 256;\n\n   instance: IoInsightInstance;\n   private clusterRef: ManagedObject;\n   errors: string[] = [];\n   loading: boolean;\n   validating: boolean;\n   areAllTargetsValid: boolean = true;\n\n   instanceName: string;\n\n   @Input()\n   duration: number = 10;\n\n   @Input()\n   durationUnit: DurationUnit = DurationUnit.MINUTES;\n\n   constructor(private createIoInsightService: CreateIoInsightService) {}\n\n   ngOnInit(): void {\n      this.instanceName = this.generateNewInstanceName();\n      this.initializeDuration();\n      this.validateTargets();\n   }\n\n   private generateNewInstanceName(): string {\n      const context: InstanceActionContextData = VsanUiUtils.getModalContext();\n      this.instance = context.instance;\n      this.clusterRef = context.clusterRef;\n\n      const now: Date = new Date();\n      return this.instance.name + \" - \" +\n            RerunInstanceDialogComponent.DATE_FORMATTER.transform(now, DateFormat.NO_SECONDS);\n   }\n\n   onDurationValidationErrors(durationErrors: string[]): void {\n      this.errors = durationErrors;\n   }\n\n   private initializeDuration(): void {\n      if (this.instance.timeRange.durationInMinutes < VsanDateTimeUtils.MINUTES_IN_HOUR) {\n         this.duration = this.instance.timeRange.durationInMinutes;\n         this.durationUnit = DurationUnit.MINUTES;\n      } else {\n         this.duration = VsanDateTimeUtils.convertTime(this.instance.timeRange.durationInMinutes,\n               DurationUnit.MINUTES, DurationUnit.HOURS);\n         this.durationUnit = DurationUnit.HOURS;\n      }\n   }\n\n   private getDurationInSeconds(): number {\n      return VsanDateTimeUtils.toSeconds(this.duration, this.durationUnit);\n   }\n\n   private async validateTargets(): Promise<void> {\n      this.loading = true;\n      try {\n         this.areAllTargetsValid = await this.createIoInsightService.areTargetsValid(this.instance, this.clusterRef);\n      } catch (error) {\n         this.errors = [error];\n      }\n      if (this.areAllTargetsValid) {\n         VsanUiUtils.setModalDialogHeight(RerunInstanceDialogComponent.SMALL_HEIGHT);\n      }\n      this.loading = false;\n   }\n\n   async confirm(): Promise<void> {\n      if (this.validating) {\n         return;\n      }\n      this.validating = true;\n      const instanceNameErrors: string[] =\n            await this.createIoInsightService.getIsInstanceNameValid(this.clusterRef, this.instanceName);\n      if (instanceNameErrors) {\n         this.errors.push(...instanceNameErrors);\n      }\n      this.validating = false;\n      if (this.errors.length) {\n         // Verify inputs when user opens the dialog and click Ok button directly.\n         return;\n      }\n\n      this.errors = [];\n      this.rerunIoInsightInstance();\n   }\n\n   private rerunIoInsightInstance(): void {\n      this.loading = true;\n      this.createIoInsightService\n            .rerunInstance(this.clusterRef, this.instance, this.instanceName, this.getDurationInSeconds())\n            .then((taskRef: ManagedObject) => VsanUiUtils.closeModalDialog(taskRef))\n            .catch(error => this.errors = [error])\n            .finally(() => {this.loading = false; });\n   }\n}\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {VsanCommonModule} from \"app/vsan/common/vsan-common.module\";\nimport {FlowWizardModule} from \"@component/wizard/flow-wizard.module\";\nimport {WizardSharedPagesModule} from \"@component/wizard/shared-pages/wizard-shared-pages.module\";\nimport {InstanceActionDialogComponent} from \"./instance-action-dialog.component\";\nimport {RenameInstanceDialogComponent} from \"./rename-instance-dialog.component\";\nimport {RerunInstanceDialogComponent} from \"./rerun-instance-dialog.component\";\nimport {RerunErrorDialogComponent} from \"./rerun-error-dialog.component\";\nimport {IoInsightDurationInputComponent} from \"../io-insight-duration-input.component\";\n\nconst routes: Routes = [\n   {\n      path: \"deleteInstance\",\n      component: InstanceActionDialogComponent,\n   },\n   {\n      path: \"renameInstance\",\n      component: RenameInstanceDialogComponent,\n   },\n   {\n      path: \"rerunInstance\",\n      component: RerunInstanceDialogComponent,\n   },\n   {\n      path: \"rerunError\",\n      component: RerunErrorDialogComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      ClarityModule,\n      VsanCommonModule,\n      FlowWizardModule,\n      WizardSharedPagesModule,\n      RouterModule.forChild(routes),\n   ],\n   declarations: [\n      InstanceActionDialogComponent,\n      RenameInstanceDialogComponent,\n      RerunInstanceDialogComponent,\n      RerunErrorDialogComponent,\n      IoInsightDurationInputComponent,\n   ],\n   exports: [\n      IoInsightDurationInputComponent\n   ]\n})\nexport class IoInsightActionsModule {\n}","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-edit-prompt\n      [title]=\"'vsan.io.insight.instance.rerun.title' | localized\"\n      [subtitle]=\"instance.name\"\n      [confirmText]=\"'vsan.common.ok' | localized\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"loading || validating\"\n      [(alertMessages)]=\"errors\"\n      (onConfirm)=\"confirm()\">\n   <vsan-validation *ngIf=\"!areAllTargetsValid\"\n                    [allowClose]=\"false\"\n                    [alert]=\"'vsan.io.insight.instance.rerun.missingTargets' | localized\"\n                    alertType=\"info\">\n   </vsan-validation>\n   <div>{{\"vsan.io.insight.instance.rerun.info\" | localized}}</div>\n   <form class=\"clr-form clr-form-horizontal\">\n      <div class=\"clr-form-control control-full-width clr-row\">\n         <label for=\"name-input\" class=\"clr-control-label clr-col-2\">\n            {{\"vsan.io.insight.wizard.settingsPage.name\" | localized}}\n         </label>\n         <div class=\"clr-control-container\">\n            <div class=\"clr-input-wrapper\">\n               <input id=\"name-input\"\n                      name=\"nameSelector\"\n                      class=\"clr-input clr-col-10\"\n                      type=\"text\"\n                      [(ngModel)]=\"instanceName\"\n                      [maxLength]=\"INSTANCE_NAME_MAX_LENGTH\"/>\n            </div>\n         </div>\n      </div>\n      <vsan-io-insight-duration-input (onValidationErrors)=\"onDurationValidationErrors($event)\"\n                                      [(duration)]=\"duration\"\n                                      [(durationUnit)]=\"durationUnit\">\n      </vsan-io-insight-duration-input>\n   </form>\n</vsan-edit-prompt>\n","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div class=\"clr-form-control clr-row\">\n   <label class=\"clr-control-label clr-col-2\">{{\"vsan.io.insight.wizard.settingsPage.duration\" | localized}}</label>\n   <div class=\"duration-control\">\n      <div class=\"clr-control-container\">\n         <div class=\"clr-input-wrapper\">\n            <input clrInput\n                   id=\"duration-input\"\n                   name=\"durationSelector\"\n                   type=\"number\"\n                   [(ngModel)]=\"duration\"\n                   (change)=\"onChange()\"\n                   min=\"1\"\n                   max=\"{{maxDurationByUnit.get(durationUnit)}}\"\n                   class=\"duration-value\"\n                   aria-describedby=\"duration-description\"/>\n         </div>\n      </div>\n      <div class=\"clr-control-container\">\n         <div class=\"clr-select-wrapper\">\n            <select id=\"duration-metric-input\"\n                    name=\"metricSelect\"\n                    clrSelect\n                    [(ngModel)]=\"durationUnit\"\n                    (change)=\"onChange()\"\n                    aria-describedby=\"duration-description\">\n               <option [ngValue]=\"DurationUnit.MINUTES\">\n                  {{\"vsan.io.insight.wizard.settingsPage.duration.min\" | localized}}\n               </option>\n               <option [ngValue]=\"DurationUnit.HOURS\">\n                  {{\"vsan.io.insight.wizard.settingsPage.duration.hour\" | localized}}\n               </option>\n            </select>\n         </div>\n      </div>\n      <label id=\"duration-description\">{{\"vsan.io.insight.wizard.settingsPage.maxduration\" | localized}}</label>\n   </div>\n</div>","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component} from \"@angular/core\";\n\n@Component({\n   template: `\n      <vsan-info-prompt\n            [title]=\"'vsan.io.insight.instance.rerun.error.title' | localized\"\n            [confirmText]=\"'vsan.common.ok' | localized\">\n         <span>{{'vsan.io.insight.instance.rerun.error.info' | localized}}</span>\n      </vsan-info-prompt>\n   `\n})\nexport class RerunErrorDialogComponent {\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {IoInsightService} from \"@generated/io-insight-service\";\nimport {IoInsightInstance} from \"@generated/io-insight-instance\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {InstanceActionContextData} from \"./instance-action-context.data\";\n\n@Component({\n   templateUrl: \"instance-action-dialog.html\",\n   selector: \"io-insight-instance-action-dialog\"\n})\nexport class InstanceActionDialogComponent implements OnInit {\n   loading: boolean;\n\n   instance: IoInsightInstance;\n   private clusterRef: ManagedObject;\n   errors: string[];\n   isDeleteOperation: boolean;\n\n   constructor(private ioInsightService: IoInsightService) {\n   }\n\n   ngOnInit() {\n      const context: InstanceActionContextData =\n            <InstanceActionContextData>VsanUiUtils.getModalContext();\n      this.instance = context.instance;\n      this.clusterRef = context.clusterRef;\n      this.isDeleteOperation = context.deleteOperation;\n   }\n\n   detailMessage(): string {\n      return this.isDeleteOperation ?\n            VsanUiUtils.getString('vsan.io.insight.instance.delete.text', this.instance.name) :\n            VsanUiUtils.getString('vsan.io.insight.instance.stop.text', this.instance.name);\n   }\n\n   confirm() {\n      this.errors = [];\n\n      if (this.isDeleteOperation) {\n         this.deleteIoInsightInstance();\n      } else {\n         this.stopIoInsightInstance();\n      }\n   }\n\n   private deleteIoInsightInstance() {\n      this.loading = true;\n      this.ioInsightService.deleteInstance(this.clusterRef, this.instance)\n            .then(() => VsanUiUtils.closeModalDialog(this.instance))\n            .catch(error => this.errors = [error])\n            .finally(() => {this.loading = false});\n   }\n\n   private stopIoInsightInstance() {\n      this.loading = true;\n      this.ioInsightService.stopInstance(this.clusterRef, this.instance)\n            .then((taskRef: ManagedObject) => VsanUiUtils.closeModalDialog(taskRef))\n            .catch(error => this.errors = [error])\n            .finally(() => {this.loading = false});\n   }\n}\n","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-edit-prompt\n      [title]=\"'vsan.io.insight.instance.rename.title' | localized\"\n      [subtitle]=\"instance.name\"\n      [confirmText]=\"'vsan.common.ok' | localized\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"loading\"\n      [(alertMessages)]=\"errors\"\n      (onConfirm)=\"confirm()\">\n   <form clrForm clrLayout=\"horizontal\" [formGroup]=\"instanceForm\">\n      <clr-input-container class=\"control-full-width\">\n         <label id=\"new-name-label\" for=\"name-label\" class=\"clr-col-sm-4\">\n            {{\"vsan.io.insight.instance.rename.newName.label\" | localized}}\n         </label>\n         <input clrInput\n                id=\"name-label\"\n                type=\"text\"\n                vsan-auto-focus\n                class=\"clr-col-sm-8\"\n                formControlName=\"{{INSTANCE_CONTROL_NAME}}\"\n                maxlength=\"{{INSTANCE_NAME_MAX_LENGTH}}\"/>\n         <clr-control-error *clrIfError=\"'required'\">\n            {{\"vsan.io.insight.instance.rename.newName.empty\" | localized}}\n         </clr-control-error>\n      </clr-input-container>\n   </form>\n</vsan-edit-prompt>","<!--Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-delete-prompt\n      [title]=\"(isDeleteOperation ? 'vsan.io.insight.instance.delete.title' : 'vsan.io.insight.instance.stop.title') | localized\"\n      [subtitle]=\"instance.name\"\n      [(alertMessages)]=\"errors\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"loading\"\n      [confirmText]=\"(isDeleteOperation ? 'vsan.io.insight.actions.delete' : 'vsan.io.insight.actions.stop') | localized\"\n      (onConfirm)=\"confirm()\">\n   <div class=\"dialog-container\">\n      <span [innerHTML]=\"detailMessage()\"></span>\n      <span>{{'vsan.common.confirm.question' | localized}}</span>\n   </div>\n</vsan-delete-prompt>","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {\n   AbstractControl,\n   FormBuilder,\n   FormControl,\n   FormGroup,\n   ValidationErrors,\n   ValidatorFn,\n   Validators,\n} from \"@angular/forms\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {IoInsightService} from \"@generated/io-insight-service\";\nimport {IoInsightInstance} from \"@generated/io-insight-instance\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {InstanceActionContextData} from \"./instance-action-context.data\";\n\n@Component({\n   templateUrl: \"rename-instance-dialog.html\",\n   selector: \"io-insight-rename-instance-dialog\"\n})\nexport class RenameInstanceDialogComponent implements OnInit {\n   readonly INSTANCE_CONTROL_NAME: string = \"instanceName\";\n   readonly INSTANCE_NAME_MAX_LENGTH: number = 256;\n\n   instance: IoInsightInstance;\n   private clusterRef: ManagedObject;\n   errors: string[];\n   loading: boolean;\n\n   instanceForm: FormGroup;\n\n   constructor(private formBuilder: FormBuilder, private ioInsightService: IoInsightService) {\n      this.instanceForm = this.formBuilder.group({\n         [this.INSTANCE_CONTROL_NAME]: new FormControl(null, [Validators.required, this.nameValidator]),\n      });\n   }\n\n   ngOnInit() {\n      const context: InstanceActionContextData =\n            <InstanceActionContextData>VsanUiUtils.getModalContext();\n      this.instance = context.instance;\n      this.clusterRef = context.clusterRef;\n      this.instanceForm.setValue({\n         [this.INSTANCE_CONTROL_NAME]: this.instance.name\n      });\n   }\n\n   private nameValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n      if (!this.getInstanceName() || this.getInstanceName().length > this.INSTANCE_NAME_MAX_LENGTH) {\n         return {\n            [this.INSTANCE_CONTROL_NAME]: {value: control.value}\n         };\n      }\n      return null;\n   };\n\n   private getInstanceName(): string {\n      return this.instanceForm ? this.instanceForm.get(this.INSTANCE_CONTROL_NAME).value : null;\n   }\n\n   confirm() {\n      if (this.instanceForm.invalid) {\n         // Verify inputs when user opens the dialog and click Ok button directly.\n         this.instanceForm.markAsTouched();\n         return;\n      }\n\n      this.errors = [];\n      this.renameIoInsightInstance();\n   }\n\n   private renameIoInsightInstance() {\n      this.loading = true;\n      this.ioInsightService.renameInstance(this.clusterRef, this.instance, this.getInstanceName())\n            .then(() => VsanUiUtils.closeModalDialog(this.instance))\n            .catch(error => this.errors = [error])\n            .finally(() => {this.loading = false});\n   }\n}\n"],"sourceRoot":"webpack:///"}