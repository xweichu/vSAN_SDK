{"version":3,"sources":["./src/app/vsan/support/view/advanced-perf-graphics.html","./src/app/vsan/support/view/vsan-support.component.ts","./src/app/vsan/support/support.module.ts","./src/app/vsan/support/view/advanced-perf-detailed-dashboard.component.ts","./src/app/vsan/support/view/advanced-perf-detailed-dashboard.html","./src/app/vsan/support/view/advanced-perf-graphics.component.ts","./src/app/vsan/support/view/vsan-support.html","./src/app/vsan/support/view/obfuscation-data-map.html","./src/app/vsan/support/view/obfuscation-data-map.component.ts","./src/app/vsan/support/view/advanced-perf-dashboard.html"],"names":[],"mappings":"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","file":"125-es2015.js","sourcesContent":["<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div *ngIf=\"loading\" class=\"spinner central-spinner\"></div>\n<vsan-unavailable-view *ngIf=\"!loading && !perfEnabled\"\n                       [unavailableViewSpec]=\"perfDisabledSpec\"\n                       [hasEditPrivilege]=\"hasEditPrivilege\"\n                       [clusterRef]=\"clusterRef\">\n</vsan-unavailable-view>\n<vsan-validation id=\"error-message\"\n                 *ngIf=\"errorMessage\"\n                 [alert]=\"errorMessage\"\n                 [allowReload]=\"false\"\n                 [allowClose]=\"false\">\n</vsan-validation>\n<vsan-advanced-perf-dashboard\n      *ngIf=\"!loading && managedObjectExInfo.length > 0\"\n      [managedObjectExInfo]=\"managedObjectExInfo\"\n      [verboseModeEnabled]=\"verboseModeEnabled\"\n      [preselectData]=\"preselectData\"\n      [isVsanMaxEnabled]=\"isVsanMaxEnabled\"\n      (onRefresh)=\"fetch()\">\n</vsan-advanced-perf-dashboard>\n\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Logger} from \"@util/logger\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {PerfSelectionData, SupportNavData, SupportView} from '../model/navigation/support-nav.data';\n\n@Component({\n   selector: \"vsan-support\",\n   templateUrl: \"vsan-support.html\",\n   styleUrls: [\"./vsan-support.scss\"],\n})\nexport class VsanSupportComponent implements OnInit {\n   SupportView: typeof SupportView = SupportView;\n\n   availViews: SupportView[];\n   currentSelectedView: SupportView = SupportView.OBFUSCATION;\n\n   perfPreselectData: PerfSelectionData;\n\n   constructor(private capabilityProvider: VsanCapabilityProvider) {}\n\n   ngOnInit(): void {\n      this.capabilityProvider.getClusterCapabilityData(ManagedObject.contextObject)\n            .then((capabilityData: VsanCapabilityData) => {\n               if (capabilityData.isAdvancedPerformanceSupported) {\n                  this.availViews = [SupportView.OBFUSCATION, SupportView.ADVANCED_PERFORMANCE];\n               }\n               this.preselectViews();\n            })\n            .catch((err) => {\n               Logger.error(err);\n            });\n   }\n\n   getViewSelectOptionLabel = (view: SupportView): string => {\n      switch (view) {\n         case SupportView.OBFUSCATION:\n            return VsanUiUtils.getString(\"vsan.support.obfuscation.label\");\n         case SupportView.ADVANCED_PERFORMANCE:\n            return VsanUiUtils.getString(\"vsan.support.perf.support.view.label\");\n      }\n   };\n\n   private preselectViews(): void {\n      const navData: SupportNavData = VsanUiUtils.getNavigationData() as SupportNavData;\n      if (!navData) {\n         return;\n      }\n\n      this.currentSelectedView = navData.view;\n\n      if (this.availViews.includes(SupportView.ADVANCED_PERFORMANCE)\n            && this.currentSelectedView === SupportView.ADVANCED_PERFORMANCE) {\n         this.perfPreselectData = navData.perfSelection;\n      }\n   }\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {VsanSupportComponent} from \"./view/vsan-support.component\";\nimport {ObfuscationDataMapComponent} from \"./view/obfuscation-data-map.component\";\nimport {VsanChartModule} from \"@component/chart/chart.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\nimport {DatetimePickerModule} from \"@component/datetime-picker/datetime-picker.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {PerfDashboardSubEntitiesDataQueryService} from \"./util/perf-dashboard-sub-entities-data-query.service\";\nimport {PerformancePersistenceService} from \"@service/performance-persistence.service\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {PersistentStorageService} from \"@service/browser-storage.service\";\nimport {SupportPerfModule} from \"./support-perf.module\";\n\nconst supportRoutes: Routes = [\n   {\n      path: \"\",\n      component: VsanSupportComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      RouterModule.forChild(supportRoutes),\n      FormsModule,\n      VsanChartModule,\n      UnavailableViewModule,\n      ValidationModule,\n      CommonPipeModule,\n      DatetimePickerModule,\n      CommonDirectiveModule,\n      SupportPerfModule,\n   ],\n   declarations: [\n      VsanSupportComponent,\n      ObfuscationDataMapComponent,\n   ],\n   providers: [\n      PerfDashboardSubEntitiesDataQueryService,\n      PerformancePersistenceService,\n      PersistentStorageService,\n   ],\n})\nexport class SupportModule {\n}\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output, ViewChild} from \"@angular/core\";\nimport {GraphMetric} from \"../../common/component/chart/performance/graph-metrics.data\";\nimport {ChartZoomOption} from \"@component/chart/performance/chart-zoom-option\";\n\n@Component({\n   selector: \"vsan-advanced-perf-detailed-dashboard\",\n   templateUrl: \"advanced-perf-detailed-dashboard.html\",\n   styleUrls: [\n         \"./advanced-perf-dashboard.scss\",\n         \"./advanced-perf-sub-entity-dashboard.scss\"],\n})\nexport class DetailedAdvancedPerfDashboard {\n   @Input()\n   entityName: string;\n\n   @Input()\n   entityIcon: string;\n\n   @Input()\n   graphData: GraphMetric[];\n\n   @Input()\n   parentHost: String;\n\n   @Input()\n   zoomOption: ChartZoomOption;\n\n   @Output()\n   zoom: EventEmitter<ChartZoomOption> = new EventEmitter<ChartZoomOption>();\n\n   @Output()\n   private showLessClicked: EventEmitter<void> = new EventEmitter<void>();\n\n   showLess = () => {\n      this.showLessClicked.emit();\n   };\n}","<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<nav class=\"sidenav\">\n   <section class=\"nav-group collapsible\">\n      <div class=\"nav-label vsan-actions\">\n         <input id=\"check-entity\" type=\"checkbox\">\n         <label for=\"check-entity\">\n         <span *ngIf=\"parentHost\">\n            <clr-icon class=\"is-info\" shape=\"vsphere-icon-host\"></clr-icon>\n            <span class=\"entity-name\">{{parentHost}}</span>\n         </span>\n            <span *ngIf=\"!parentHost\">\n            <clr-icon [attr.shape]=\"entityIcon\" class=\"is-info\"></clr-icon>\n            <span class=\"entity-name\">{{entityName}}</span>\n         </span>\n         </label>\n         <ng-container *ngIf=\"!parentHost\">\n            <ng-container *ngTemplateOutlet=\"showLessButton\"></ng-container>\n         </ng-container>\n         <div *ngIf=\"parentHost\">\n            <clr-icon [attr.shape]=\"entityIcon\" class=\"is-info\"></clr-icon>\n            <span class=\"entity-name\">{{entityName}}</span>\n            <ng-container *ngTemplateOutlet=\"showLessButton\"></ng-container>\n         </div>\n      </div>\n      <vsan-perf-charts-container id=\"charts-container\"\n                                  class=\"nav-content\"\n                                  [data]=\"graphData\"\n                                  [isShowAllLinkVisible]=\"false\"\n                                  [isShowGraphDescription]=\"false\"\n                                  [showHeaderSection]=\"false\"\n                                  [chartLegendPosition]=\"'right'\"\n                                  [zoomOutOptions]=\"zoomOption\"\n                                  (zoom)=\"zoom.emit($event)\">\n      </vsan-perf-charts-container>\n   </section>\n</nav>\n<ng-template #showLessButton>\n   <button id=\"show-less-btn\"\n           class=\"btn btn-sm btn-link\"\n           (click)=\"showLess()\">\n      {{\"vsan.perf.advanced.dashboards.entity.graphs.showLess.label\" | localized}}\n   </button>\n</ng-template>","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {VsanPerfPropertyProvider} from \"@generated/vsan-perf-property-provider\";\nimport {ServerObjectInfo} from \"@generated/server-object-info\";\nimport {UnavailableViewSpec} from \"@component/unavailable-view/unavailable-view-spec\";\nimport {PerfMonitorCommonPropsData} from \"@generated/perf-monitor-common-props-data\";\nimport {PerfSelectionData} from \"../model/navigation/support-nav.data\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\n\n@Component({\n   selector: \"vsan-advanced-perf-graphics\",\n   templateUrl: \"advanced-perf-graphics.html\",\n   styleUrls: [\"advanced-perf-graphics.scss\"],\n})\nexport class VsanAdvancedPerfGraphicsComponent implements OnInit {\n   clusterRef: ManagedObject = ManagedObject.contextObject;\n   managedObjectExInfo: ServerObjectInfo[] = [];\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   perfEnabled: boolean;\n   verboseModeEnabled: boolean = false;\n   hasEditPrivilege: boolean;\n   isVsanMaxEnabled: boolean;\n\n   @ErrorMessage({msg: \"vsan.perf.service.chart.common.error\"})\n   errorMessage: string;\n\n   perfDisabledSpec: UnavailableViewSpec = UnavailableViewSpec.PERF_DISABLED;\n\n   @Input()\n   preselectData: PerfSelectionData;\n\n   constructor(private perfPropertyProvider: VsanPerfPropertyProvider) {\n   }\n\n   async ngOnInit(): Promise<void> {\n      await this.fetch();\n   }\n\n   @RefreshHandler\n   @Loader({srMessage: \"vsan.support.perf.support.view.label\", srMessageType: SrMessageType.DATA})\n   async fetch(): Promise<void> {\n      // check the performance service status and the user permissions\n      const perfPropsData: PerfMonitorCommonPropsData =\n            await this.perfPropertyProvider.getPerfMonitorCommonPropsData(this.clusterRef);\n      this.perfEnabled = perfPropsData.isPerformanceServiceEnabled;\n      this.hasEditPrivilege = perfPropsData.hasEditPrivilege;\n      this.verboseModeEnabled = perfPropsData.isVerboseModeEnabled;\n      this.isVsanMaxEnabled = perfPropsData.isVsanMaxEnabled;\n      if (!perfPropsData.isPerformanceServiceEnabled) {\n         return;\n      }\n\n      /**\n       * Query the name/vsanUuid value for the cluster and its hosts.\n       * We will use them later in the child view.\n       */\n      this.managedObjectExInfo = await this.perfPropertyProvider.getEntitiesInfo(this.clusterRef);\n   }\n}\n","<!-- Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div *ngIf=\"availViews\"\n     role=\"tablist\"\n     class=\"btn-group btn-outline-primary btn-sm\"\n     [attr.aria-label]=\"'vsan.monitor.support.tablist.label' | localized\">\n   <button id=\"vsan-support-buttons-{{i}}\"\n           role=\"tab\"\n           class=\"btn\"\n           [attr.aria-controls]=\"'vsan-support-panels-' + i\"\n           (click)=\"currentSelectedView = availView\"\n           *ngFor=\"let availView of availViews; let i = index\"\n           [attr.aria-selected]=\"availView == currentSelectedView\"\n           [ngClass]=\"{'btn-primary': availView === currentSelectedView}\">\n      {{getViewSelectOptionLabel(availView)}}\n   </button>\n</div>\n<vsan-obfuscation id=\"vsan-support-panels-0\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"vsan-support-buttons-0\"\n                  *ngIf=\"currentSelectedView === SupportView.OBFUSCATION\">\n</vsan-obfuscation>\n<vsan-advanced-perf-graphics id=\"vsan-support-panels-1\"\n                             role=\"tabpanel\"\n                             aria-labelledby=\"vsan-support-buttons-1\"\n                             *ngIf=\"currentSelectedView === SupportView.ADVANCED_PERFORMANCE\"\n                             [preselectData]=\"perfPreselectData\">\n</vsan-advanced-perf-graphics>","<span *ngIf=\"loading\" class=\"spinner central-spinner\"></span>\n<ng-container *ngIf=\"!loading\">\n   <vsan-validation id=\"alerts\"\n                    *ngIf=\"alertMessage\"\n                    [alertType]=\"alertType\"\n                    [allowClose]=\"false\"\n                    [alert]=\"alertMessage\">\n   </vsan-validation>\n   <div>{{\"vsan.monitor.support.obfuscation.download.confirm\" | localized}}\n      <a [external-link]=\"'vsan.monitor.support.obfuscation.download.confirm.link' | localized\"\n         [helpId]=\"AskVmwareId.OBFUSCATED_DATA\"></a>\n   </div>\n   <clr-stack-view>\n      <clr-stack-header>\n         <button id=\"view-obfuscation-map\"\n                 [disabled]=\"!canView()\"\n                 type=\"button\"\n                 class=\"stack-action btn btn-sm btn-link\"\n                 (click)=\"getOnlineViewUrl()\">\n            {{\"vsan.monitor.support.obfuscation.download.viewOnline.label\" |\n            localized}}\n         </button>\n         <button id=\"download-obfuscation-map-btn\"\n                 [disabled]=\"!canView()\"\n                 type=\"button\"\n                 class=\"stack-action btn btn-sm btn-link\"\n                 (click)=\"download()\">\n            {{\"vsan.monitor.support.obfuscation.download.label\" | localized}}\n         </button>\n      </clr-stack-header>\n      <clr-stack-block>\n         <clr-stack-label id=\"support-tag-label\">\n            {{\"vsan.monitor.support.supportTag.label\" | localized}}\n         </clr-stack-label>\n         <clr-stack-content>{{getSupportTag()}}</clr-stack-content>\n      </clr-stack-block>\n      <clr-stack-block>\n         <clr-stack-label id=\"ceip-enabled-label\">\n            {{\"vsan.monitor.support.ceip.enabled.label\" | localized}}\n         </clr-stack-label>\n         <clr-stack-content>{{getCeipStatus()}}</clr-stack-content>\n      </clr-stack-block>\n   </clr-stack-view>\n</ng-container>","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectorRef, Component, OnInit} from \"@angular/core\";\nimport {ObfuscationService} from \"@generated/obfuscation-service\";\nimport {ObfuscationData} from \"@generated/obfuscation-data\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {WebPlatform} from \"@util/platform\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {Logger} from \"@util/logger\";\nimport {NavigationService} from \"@navigation/navigation.service\";\nimport {ScreenReaderAnnouncer, SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {AskVmwareId} from '@service/navigation/model/ask-vmware-id';\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\n\n@Component({\n   templateUrl: \"obfuscation-data-map.html\",\n   styleUrls: [\"obfuscation-data-map.scss\"],\n   selector: \"vsan-obfuscation\",\n})\nexport class ObfuscationDataMapComponent implements OnInit {\n   readonly AskVmwareId: typeof AskVmwareId = AskVmwareId;\n   private static readonly DOWNLOAD_URL_PREFIX: string = \"/rest/support/obfuscation\";\n\n   private clusterRef: ManagedObject = ManagedObject.contextObject;\n\n   obfuscationData: ObfuscationData;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   alertMessage: string;\n   hasPermissions: boolean = false;\n   alertType: string = \"warning\";\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   constructor(private dataService: ObfuscationService,\n         private permissionService: PermissionService,\n         private navigationService: NavigationService,\n         private changeDetector: ChangeDetectorRef,\n         private obfuscationService: ObfuscationService) {\n   }\n\n   ngOnInit(): void {\n      this.fetch();\n   }\n\n   @RefreshHandler\n   @Loader({srMessage: \"vsan.support.obfuscation.label\", srMessageType: SrMessageType.DATA})\n   private async fetch(): Promise<void> {\n      const data: (ObfuscationData | boolean)[] = await Promise.all([\n         this.dataService.getObfuscationData(this.clusterRef),\n         this.permissionService.hasPermissions(this.clusterRef, [Privileges.GLOBAL_SETTINGS()]),\n      ]);\n\n      this.handleResponse(data);\n\n      this.changeDetector.detectChanges();\n   }\n\n   private handleResponse = (data: any[]): void => {\n      this.obfuscationData = data[0];\n      this.hasPermissions = data[1];\n\n      this.alertMessage = null;\n      this.alertType = \"warning\";\n\n      if (!this.hasPermissions) {\n         this.alertMessage = VsanUiUtils.getString(\"vsan.cluster.uploadSupportBundle.nopermissions\");\n      } else if (!this.obfuscationData.obfuscationSupported) {\n         this.alertMessage = VsanUiUtils.getString(\"vsan.monitor.support.obfuscation.notSupported.warning\");\n      } else if (!this.obfuscationData.obfuscationMap) {\n         this.alertMessage = VsanUiUtils.getString(\"vsan.monitor.support.obfuscation.empty.warning.desc\");\n      } else if (!this.obfuscationData.ceipEnabled) {\n         this.alertMessage = VsanUiUtils.getString(\"vsan.monitor.support.obfuscation.empty.warning.ceip\");\n      }\n   };\n\n   @ErrorHandler()\n   private handleError(err: string): void {\n      this.alertType = \"danger\";\n      Logger.error(err);\n      this.alertMessage = VsanUiUtils.getString(\"vsan.common.error.dataExtraction\");\n   }\n\n   download = (): void => {\n      if (WebPlatform.isRepa()) {\n         this.obfuscationService.downloadObfuscationMap(ManagedObject.contextObject);\n      } else {\n         this.navigationService.navigateToAddress(this.getObfuscatedMapUrl(true));\n      }\n   };\n\n   getOnlineViewUrl = () => {\n      if (WebPlatform.isRepa()) {\n         this.obfuscationService.viewObfuscationMap(ManagedObject.contextObject);\n      } else {\n         this.navigationService.navigateToAddress(this.getObfuscatedMapUrl(false));\n      }\n   };\n\n   getObfuscatedMapUrl = (isDownload: boolean): string => {\n      return WebPlatform.webContextPath +\n            ObfuscationDataMapComponent.DOWNLOAD_URL_PREFIX +\n            (isDownload ? \"/download/\" : \"/view/\") +\n            ManagedObject.contextObjectUid;\n   };\n\n   canView = (): boolean => {\n      /**\n       * User can view the obfuscated map when:\n       *   1. ceip enabled\n       *   2. obfuscationSupported\n       *   3. the obfuscatied data is not empty\n       */\n      return this.hasPermissions\n            && this.obfuscationData.ceipEnabled\n            && this.obfuscationData.obfuscationSupported\n            && !!this.obfuscationData.obfuscationMap;\n   };\n\n   getSupportTag = (): string => {\n      return VsanUiUtils.getString(\"vsan.monitor.support.supportTag.pattern\",\n            this.clusterRef.serverGuid, this.obfuscationData.clusterVsanConfigUuid);\n   };\n\n   getCeipStatus = (): string => {\n      if (this.obfuscationData.ceipEnabled) {\n         return VsanUiUtils.getString(\"vsan.services.enabled\");\n      }\n      return VsanUiUtils.getString(\"vsan.services.disabled\");\n   };\n}\n","<!-- Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<span *ngIf=\"loading\" class=\"spinner central-spinner\"></span>\n\n<vsan-validation *ngIf=\"errorMessage\"\n                 [alert]=\"errorMessage\"\n                 [allowReload]=\"allowReloadWhenError\"\n                 (onReload)=\"onRefresh.emit()\"\n                 [allowClose]=\"false\">\n</vsan-validation>\n\n<div *ngIf=\"managedObjectExInfo\" class=\"dropdown-container\">\n   <label for=\"dashboard-dropdown\">{{\"vsan.perf.advanced.dashboards.dropdown.label\" | localized}}</label>\n   <clr-dropdown id=\"dashboard-dropdown\">\n      <button type=\"button\"\n              class=\"btn btn-sm btn-link\"\n              clrDropdownToggle>\n         {{currentDashboardLabel}}\n         <clr-icon shape=\"caret down\"></clr-icon>\n      </button>\n      <clr-dropdown-menu clrPosition=\"bottom-left\"\n                         [attr.aria-label]=\"'vsan.common.srMessage.dropdownMenu.expanded.label' | localized:\n                              ('vsan.perf.advanced.dashboards.dropdown.label' | localized)\">\n         <label class=\"dropdown-header\">{{\"vsan.perf.advanced.dashboards.dropdown.pivotal.label\" | localized}}</label>\n         <button *ngFor=\"let link of outlineDashboardLinks\"\n            class=\"btn btn-sm btn-link\"\n            (click)=\"selectDashboard(link, link.label)\"\n            clrDropdownItem>{{link.label}}</button>\n         <div class=\"dropdown-divider\"></div>\n         <label class=\"dropdown-header\">{{\"vsan.perf.advanced.dashboards.dropdown.more.label\" | localized}}</label>\n         <ng-container *ngFor=\"let category of dropdownDashboardCategories\">\n            <clr-dropdown *ngIf=\"category.children.length > 1\">\n               <button type=\"button\"\n                       class=\"btn btn-sm btn-link\"\n                       clrDropdownToggle>{{category.label}}</button>\n               <clr-dropdown-menu clrPosition=\"right-top\"\n                                  [attr.aria-label]=\"'vsan.common.srMessage.dropdownMenu.expanded.label' | localized: category.label\">\n                  <button type=\"button\"\n                          class=\"btn btn-sm btn-link\"\n                          *ngFor=\"let dashboard of category.children\"\n                          (click)=\"selectDashboard(dashboard, dashboard.label)\"\n                          clrDropdownItem>\n                     {{dashboard.label}}\n                  </button>\n               </clr-dropdown-menu>\n            </clr-dropdown>\n         </ng-container>\n         <ng-container *ngFor=\"let dashboard of dropdownDashboardCategories\">\n           <button *ngIf=\"dashboard.children.length == 1\"\n                   type=\"button\"\n                   class=\"btn btn-sm btn-link\"\n                   (click)=\"selectDashboard(dashboard.children[0], dashboard.label + ' ' + dashboard.children[0].label)\"\n                   clrDropdownItem>{{dashboard.label + \" \" + dashboard.children[0].label}}</button>\n         </ng-container>\n      </clr-dropdown-menu>\n   </clr-dropdown>\n</div>\n\n<vsan-time-range-picker id=\"vsan-time-range-picker\"\n                        role=\"group\"\n                        aria-labelledby=\"time-range-label\"\n                        [enabled]=\"!loading\"\n                        [clusterRef]=\"clusterRef\"\n                        (initRange)=\"onTimeRangeChange($event, true)\"\n                        (changeRange)=\"onTimeRangeChange($event, false)\">\n</vsan-time-range-picker>\n\n<ng-container *ngIf=\"!loading && !errorMessage\">\n   <vsan-unavailable-view *ngIf=\"noDataView\"\n                          [unavailableViewSpec]=\"noDataView\">\n   </vsan-unavailable-view>\n   <ng-container *ngIf=\"!noDataView\">\n      <ng-container *ngIf=\"hasGraphMetricsData\">\n         <ng-container *ngIf=\"!currentPerfEntityStateData\">\n            <ng-container *ngIf=\"graphsForClusterAndHosts?.length > 0\">\n               <div id=\"cluster-charts-label\">\n                  {{\"vsan.perf.advanced.dashboards.entity.graphs.filter.cluster.label\" | localized}}\n               </div>\n               <div class=\"chart-labels-container\">\n                  <clr-checkbox-wrapper *ngFor=\"let graph of graphsForClusterAndHosts; let i = index;\">\n                     <input type=\"checkbox\"\n                            clrCheckbox\n                            id=\"graphForCluster-{{i}}\"\n                            name=\"graphForCluster-{{i}}\"\n                            class=\"chart-toggle\"\n                            title=\"{{graph.label}}\"\n                            [ngModel]=\"isGraphDisplayed(graph.id)\"\n                            (change)=\"toggleGraphDisplay(graph)\"/>\n                     <label>{{graph.label}}</label>\n                  </clr-checkbox-wrapper>\n               </div>\n            </ng-container>\n            <ng-container *ngIf=\"graphsForHostsOnly.length > 0\">\n               <div id=\"host-charts-label\" *ngIf=\"graphsForClusterAndHosts.length > 0\">\n                  {{\"vsan.perf.advanced.dashboards.entity.graphs.filter.host.label\" | localized}}\n               </div>\n               <div id=\"no-host-charts-label\" *ngIf=\"graphsForClusterAndHosts.length == 0\">\n                  {{\"vsan.perf.advanced.dashboards.entity.graphs.filter.label\" | localized}}\n               </div>\n               <div class=\"chart-labels-container\">\n                  <clr-checkbox-wrapper *ngFor=\"let graph of graphsForHostsOnly; let i = index;\">\n                     <input type=\"checkbox\"\n                            clrCheckbox\n                            id=\"graphForHosts-{{i}}\"\n                            name=\"graphForHosts-{{i}}\"\n                            class=\"chart-toggle\"\n                            title=\"{{graph.label}}\"\n                            [ngModel]=\"isGraphDisplayed(graph.id)\"\n                            (change)=\"toggleGraphDisplay(graph)\"/>\n                     <label>{{graph.label}}</label>\n                  </clr-checkbox-wrapper>\n               </div>\n            </ng-container>\n         </ng-container>\n         <ng-container *ngIf=\"currentPerfEntityStateData\">\n            <div id=\"entity-charts-label\">\n               {{\"vsan.perf.advanced.dashboards.entity.graphs.filter.label\" | localized}}\n            </div>\n            <div class=\"chart-labels-container\">\n               <clr-checkbox-wrapper *ngFor=\"let graph of graphsForSelectedEntity; let i = index;\">\n                  <input type=\"checkbox\"\n                         clrCheckbox\n                         id=\"graphs-{{i}}\"\n                         name=\"graphs-{{i}}\"\n                         class=\"chart-toggle\"\n                         title=\"{{graph.label}}\"\n                         [ngModel]=\"isGraphDisplayed(graph.id)\"\n                         (change)=\"toggleGraphDisplay(graph)\"/>\n                  <label>{{graph.label}}</label>\n               </clr-checkbox-wrapper>\n            </div>\n         </ng-container>\n      </ng-container>\n      <div id=\"action-button-bar\"\n           *ngIf=\"isZoomed\">\n         <button id=\"zoom-btn\"\n                 (click)=\"onZoomOut()\"\n                 class=\"btn btn-sm btn-link\">\n            {{\"vsan.perf.chart.zoom\" | localized}}\n         </button>\n      </div>\n      <ng-container *ngIf=\"!currentPerfEntityStateData\">\n         <vsan-advanced-perf-sub-entity-dashboard\n               *ngIf=\"isNestedDashboard(currentDashboardView.view) && hasGraphMetricsData\"\n               [displayedGraphs]=\"displayedGraphs\"\n               [perfEntitiesStateData]=\"perfEntitiesStateData\"\n               [(preselectSubEntityName)]=\"preselectSubEntityName\"\n               [view]=\"currentDashboardView.view\"\n               [zoomOption]=\"zoomOption\"\n               (zoom)=\"onChartZoomIn($event)\"\n               (entitySelected)=\"onSubEntitySelected($event)\">\n         </vsan-advanced-perf-sub-entity-dashboard>\n         <ng-container *ngIf=\"!isNestedDashboard(currentDashboardView.view)\">\n            <nav class=\"sidenav\" *ngFor=\"let objectInfo of managedObjectExInfo; let i=index\">\n               <section class=\"nav-group collapsible\" *ngIf=\"getPerfStateData(objectInfo)\">\n                  <div class=\"nav-label vsan-actions\">\n                     <input id=\"check-{{i}}\" type=\"checkbox\">\n                     <label for=\"check-{{i}}\">\n                        <clr-icon [attr.shape]=\"objectInfo.icon\" class=\"is-info\"></clr-icon>\n                        <span class=\"entity-name\">{{objectInfo.name}}</span>\n                     </label>\n                     <button (click)=\"showAllCharts(objectInfo)\"\n                             *ngIf=\"getDashboardGraphs(currentDashboardView)?.length > 2\"\n                             class=\"btn btn-sm btn-link\"\n                             id=\"show-all-btn-{{i}}\">\n                        {{\"vsan.perf.advanced.dashboards.entity.graphs.showAll.label\" | localized}}\n                     </button>\n                  </div>\n                  <vsan-perf-charts-container id=\"charts-container-{{objectInfo.vsanUuid}}-{{i}}\"\n                                              class=\"nav-content\"\n                                              [data]=\"getGraphsByEntityData(getPerfStateData(objectInfo))\"\n                                              [isShowAllLinkVisible]=\"false\"\n                                              [isZoomButtonVisible]=\"false\"\n                                              [isShowGraphDescription]=\"false\"\n                                              [showHeaderSection]=\"false\"\n                                              [looseXAxisLabel]=\"true\"\n                                              [compactMode]=\"displayedGraphs?.length > 2\"\n                                              [zoomOutOptions]=\"zoomOption\"\n                                              (zoom)=\"onChartZoomIn($event)\"\n                                              [chartLegendPosition]=\"displayedGraphs?.length > 2 ? 'bottom': 'right'\"\n                                              [isEmptyChartsVisible]=\"!errorMessage\">\n                  </vsan-perf-charts-container>\n               </section>\n            </nav>\n         </ng-container>\n      </ng-container>\n      <vsan-advanced-perf-detailed-dashboard\n            *ngIf=\"currentPerfEntityStateData\"\n            [entityName]=\"selectedPerfEntityName\"\n            [entityIcon]=\"selectedPerfEntityIcon\"\n            [graphData]=\"getGraphsByEntityData(currentPerfEntityStateData)\"\n            [parentHost]=\"selectedPerfEntityParentHost\"\n            [zoomOption]=\"zoomOption\"\n            (zoom)=\"onChartZoomIn($event)\"\n            (showLessClicked)=\"showLessCharts()\">\n      </vsan-advanced-perf-detailed-dashboard>\n   </ng-container>\n</ng-container>\n"],"sourceRoot":"webpack:///"}