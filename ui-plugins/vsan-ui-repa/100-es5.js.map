{"version":3,"sources":["webpack:///src/app/vsan/iscsitargets/action/add-accessible-target.html","webpack:///src/app/vsan/iscsitargets/view/lun-list.html","webpack:///src/app/vsan/iscsitargets/action/edit-lun.html","webpack:///src/app/generated/initiator-group-initiator-addition-spec.ts","webpack:///src/app/vsan/common/directive/signpost-title/signpost-title.directive.ts","webpack:///src/app/vsan/iscsitargets/filters/compliance-result-filter.ts","webpack:///src/app/vsan/iscsitargets/view/iscsi-target-service.component.ts","webpack:///src/app/vsan/iscsitargets/filters/iqn-filter.ts","webpack:///src/app/vsan/iscsitargets/action/remove-target.component.ts","webpack:///src/app/vsan/iscsitargets/comparators/initiators-comparator.ts","webpack:///src/app/vsan/iscsitargets/comparators/is-group-comparator.ts","webpack:///src/app/vsan/iscsitargets/action/target-modification.html","webpack:///src/app/vsan/iscsitargets/action/remove-accessible-target.html","webpack:///src/app/vsan/iscsitargets/filters/lun-count-filter.ts","webpack:///src/app/vsan/common/component/datagrid/tree-datagrid.module.ts","webpack:///src/app/vsan/iscsitargets/view/accessible-targets.component.ts","webpack:///src/app/generated/target-initiator-spec.ts","webpack:///src/app/vsan/iscsitargets/view/initiator-groups-view.component.ts","webpack:///src/app/generated/target-initiator-edit-spec.ts","webpack:///src/app/vsan/iscsitargets/view/accessible-targets.html","webpack:///src/app/generated/target-operation-spec.ts","webpack:///src/app/generated/target-lun-remove-spec.ts","webpack:///src/app/vsan/common/util/modal-builder.ts","webpack:///src/app/vsan/iscsitargets/filters/target-location-filter.ts","webpack:///src/app/vsan/iscsitargets/action/edit-lun-state.component.ts","webpack:///src/app/vsan/iscsitargets/view/allowed-initiators.html","webpack:///src/app/generated/initiator-group-addition-spec.ts","webpack:///src/app/vsan/iscsitargets/action/remove-initiator.html","webpack:///src/app/vsan/iscsitargets/action/remove-initiator-group.component.ts","webpack:///src/app/vsan/iscsitargets/action/add-initiator-group.html","webpack:///src/app/vsan/iscsitargets/filters/lun-id-filter.ts","webpack:///src/app/vsan/iscsitargets/action/batch-policy-reapply.html","webpack:///src/app/vsan/iscsitargets/action/add-lun.html","webpack:///src/app/vsan/iscsitargets/filters/io-owner-host-filter.ts","webpack:///src/app/vsan/iscsitargets/action/remove-accessible-target.component.ts","webpack:///src/app/vsan/common/component/action-button/button-title.directive.ts","webpack:///src/app/vsan/iscsitargets/filters/lun-state-filter.ts","webpack:///src/app/vsan/common/component/popup-list/popup-list.module.ts","webpack:///src/app/vsan/iscsitargets/filters/lun-size-filter.ts","webpack:///src/app/vsan/common/directive/clr-button-group/clr-button-group-common.directive.ts","webpack:///src/app/vsan/iscsitargets/view/network-ip-settings.html","webpack:///src/app/generated/lun-operation-spec.ts","webpack:///src/app/vsan/iscsitargets/model/target-location.data.ts","webpack:///src/app/vsan/iscsitargets/action/remove-initiator.component.ts","webpack:///src/app/generated/initiator-group-initiator-remove-spec.ts","webpack:///src/app/vsan/iscsitargets/filters/is-group-filter.ts","webpack:///src/app/vsan/iscsitargets/view/initiator-list.component.ts","webpack:///src/app/vsan/iscsitargets/view/network-ip-settings.component.ts","webpack:///src/app/vsan/iscsitargets/action/add-initiators.html","webpack:///src/app/vsan/iscsitargets/action/target-modification.component.ts","webpack:///src/app/vsan/iscsitargets/filters/name-filter.ts","webpack:///src/app/vsan/common/component/navigation/vsan-breadcrumb.module.ts","webpack:///src/app/vsan/iscsitargets/action/edit-lun-state.html","webpack:///src/app/vsan/iscsitargets/comparators/target-location-comparator.ts","webpack:///src/app/vsan/iscsitargets/comparators/compliance-result-comparator.ts","webpack:///src/app/vsan/iscsitargets/view/initiator-list.html","webpack:///src/app/vsan/iscsitargets/filters/alias-filter.ts","webpack:///src/app/vsan/common/component/action-button/button-group.directive.ts","webpack:///src/app/vsan/iscsitargets/action/remove-target-initiator.component.ts","webpack:///src/app/vsan/iscsitargets/action/remove-target-initiator.html","webpack:///src/app/vsan/iscsitargets/action/remove-luns.component.ts","webpack:///src/app/vsan/iscsitargets/iscsi-targets.module.ts","webpack:///src/app/vsan/iscsitargets/action/add-target-initiator.html","webpack:///src/app/vsan/iscsitargets/filters/auth-type-filter.ts","webpack:///src/app/vsan/iscsitargets/view/iscsi-targets-view.component.ts","webpack:///src/app/vsan/iscsitargets/comparators/lun-state-comparator.ts","webpack:///src/app/vsan/iscsitargets/action/add-lun.component.ts","webpack:///src/app/vsan/iscsitargets/action/add-initiators-to-group.html","webpack:///src/app/vsan/iscsitargets/comparators/auth-type-comparator.ts","webpack:///src/app/vsan/iscsitargets/action/edit-lun.component.ts","webpack:///src/app/generated/target-initiator-remove-spec.ts","webpack:///src/app/generated/initiator-group-target-addition-spec.ts","webpack:///src/app/vsan/iscsitargets/comparators/io-owner-host-comparator.ts","webpack:///src/app/vsan/iscsitargets/action/remove-initiator-group.html","webpack:///src/app/vsan/iscsitargets/filters/initiators-filter.ts","webpack:///src/app/vsan/iscsitargets/filters/health-filter.ts","webpack:///src/app/vsan/iscsitargets/view/lun-list.component.ts","webpack:///src/app/vsan/iscsitargets/action/remove-target.html","webpack:///src/app/vsan/common/component/inventory/inventory-browser.module.ts","webpack:///src/app/vsan/iscsitargets/action/add-initiator-group.component.ts","webpack:///src/app/vsan/iscsitargets/view/allowed-initiators.component.ts","webpack:///src/app/vsan/iscsitargets/action/add-accessible-target.component.ts","webpack:///src/app/vsan/iscsitargets/action/remove-luns.html","webpack:///src/app/vsan/iscsitargets/filters/actual-size-filter.ts","webpack:///src/app/vsan/iscsitargets/action/add-initiators-to-group.component.ts","webpack:///src/app/vsan/iscsitargets/filters/storage-policy-filter.ts","webpack:///src/app/vsan/iscsitargets/filters/network-interface-filter.ts","webpack:///src/app/vsan/iscsitargets/view/iscsi-targets-view.html","webpack:///src/app/vsan/iscsitargets/action/batch-policy-reapply.component.ts","webpack:///src/app/vsan/common/vsan-common.module.ts","webpack:///src/app/vsan/iscsitargets/action/add-initiators.component.ts","webpack:///src/app/vsan/iscsitargets/view/initiator-groups-view.html","webpack:///src/app/vsan/common/component/search/search.module.ts","webpack:///src/app/vsan/iscsitargets/filters/port-filter.ts","webpack:///src/app/vsan/common/component/action-button/action-button.module.ts","webpack:///src/app/generated/initiator-group-target-remove-spec.ts","webpack:///src/app/vsan/iscsitargets/comparators/health-comparator.ts","webpack:///src/app/vsan/iscsitargets/action/add-target-initiator.component.ts","webpack:///src/app/vsan/iscsitargets/view/iscsi-target-service.html"],"names":["InitiatorGroupInitiatorAdditionSpec","Factory","create","initiatorGroupName","initiatorNames","SignpostTitleDirective","el","renderer","BUTTON_TAG_NAME","CLR_ICON_TAG_NAME","TITLE_ATTRIBUTE","ARIA_EXPANDED_ATTRIBUTE","ARIA_LABEL_ATTRIBUTE","signpostTitle","signpostIcon","nativeElement","getElementsByTagName","item","setAttribute","getString","button","ComplianceResultFilter","accepts","obj","search","getComplianceLabel","complianceResult","toLowerCase","indexOf","IscsiTargetServiceComponent","iscsiProvider","vsanService","permissionService","iscsiViews","currentViewIndex","loading","hasEditPrivilege","readPoliciesPermission","handleResponse","result","iscsiTargetConfig","emptyCluster","handleError","ex","error","alertMessage","handleConfigurationError","event","onViewSelected","viewIndex","fetch","Promise","all","getVsanIscsiTargetConfig","contextObject","hasPermissions","EDIT_CLUSTER","hasVcPermissions","READ_POLICIES","then","IqnFilter","target","iqn","RemoveTargetComponent","iscsiTargetMutationProvider","ok","isRemoving","removeTarget","clusterRef","targetAlias","close","alertMessages","taskRef","closeModalDialog","getModalContext","allowRemove","lunCount","InitiatorsComparator","compare","g1","g2","initiators","length","IsGroupComparator","s1","s2","getAllowedInitiatorsType","isGroup","localeCompare","LunCountFilter","toString","TreeDatagridModule","AccessibleTargetsComponent","VsanUiUtils","refreshGroupList","hasEditPermissions","iqnFilter","aliasFilter","selectAccessibleTarget","selectedAccessibleTarget","openRemoveAccessibleTargetDialog","setSize","open","groupName","alias","updateGroupList","emit","onAddAccessibleTarget","accessibleTargets","listUpdated","_accessibleTargets","targets","TargetInitiatorSpec","name","InitiatorGroupsViewComponent","iscsiInitiatorGroupProvider","nameFilter","initiatorCountFilter","initiatorCountComparator","getVsanIscsiInitiatorGroupList","data","initiatorGroupList","srOnlyMessage","selectGroup","group","selectedInitiatorGroup","openAddInitiatorGroupDialog","context","groupNames","getAllInitiatorGroupNames","map","openRemoveInitiatorGroupDialog","_initiatorGroupList","list","TargetInitiatorEditSpec","targetInitiatorNames","TargetOperationSpec","authSpec","networkInterface","newAlias","port","policyId","affinityLocation","TargetLunRemoveSpec","targetLunIds","ModalBuilder","appId","size","DEFAULT_SIZE","title","accessibilityTitle","urlParams","dimensions","warn","WIDTH","HEIGHT","width","height","params","eventTarget","accept","pluginContext","targetElement","modalResultHandler","JSON","parse","stringify","focus","setTimeout","actionUrl","APP_URL","separator","param","openModalDialog","contextObjectUid","WIZARD_XL","repa","repaExtension","TargetLocationFilter","preferredDomainName","secondaryDomainName","getTargetLocationLabel","EditLunStateComponent","targetMutationProvider","editSpec","status","Online","content","inProgress","editLun","task","tasks","refreshTargetList","aliasOfChangedTarget","InitiatorGroupAdditionSpec","RemoveInitiatorGroupComponent","initiatorGroupMutationProvider","removeInitiatorGroup","LunIdFilter","lun","lunId","IoOwnerHostFilter","addtionalData","get","ioOwnerHost","RemoveAccessibleTargetComponent","removeSpec","ButtonTitleDirective","host","titleChange","_title","value","next","asObservable","Math","random","unsubscribe","LunStateFilter","getLunStateLabel","PopupListModule","LunSizeFilter","formatFileSize","lunSize","ClrButtonGroupCommonDirective","elRef","allButtons","querySelectorAll","clrButtons","filter","clrButton","directives","forEach","index","buttonFound","findButtonByName","directive","resolveButton","buttons","i","LunOperationSpec","lunAlias","newLunId","TargetLocation","id","label","isVisible","RemoveInitiatorComponent","initiatorName","removeInitiator","InitiatorGroupInitiatorRemoveSpec","IsGroupFilter","spec","InitiatorListComponent","selectInitiator","initiator","selectedInitiator","openAddInitiatorsDialog","dialogData","existingInitiators","initiatorList","openRemoveInitiatorDialog","_initiatorList","IscsiNetworkIpSettingsComponent","networkIpSetting","ipV4Address","ipV6Address","IscsiTargetAuthType","TargetModificationComponent","iscsiTargetPropertyProvider","formBuilder","VsanIscsiUtil","IQN_CONTROL_NAME","PORT_CONTROL_NAME","ALIAS_CONTROL_NAME","POLICY_CONTROL_NAME","NETWORK_CONTROL_NAME","LOCATION_CONTROL_NAME","AUTH_SPEC_CONTROL_NAME","ALIAS_VALIDATION","IQN_VALIDATION","POLICY_VALIDATION","defaultHeight","chapHeight","chapMutualHeight","iqnConventionHeight","locationHeight","originalTarget","isTargetLocationSupported","locations","setLocations","domains","domain","isHost","isPreferred","NONE","PREFERRED_DOMAIN","NON_PREFERRED_DOMAIN","fillFormDefaults","network","authType","NoAuth","outgoingUser","outgoingSecret","incomingUser","incomingSecret","DEFAULT_PORT","availableNetworks","iscsiTarget","patchValue","getDefaultPolicy","addControl","fillFormWithExistingData","getPolicyByUuid","vmStoragePolicyUuid","onPolicyChange","siteLocation","getAffinitySiteLocation","getPolicy","locality","location","isPolicyWithLocality","updateLocationAlert","StoragePolicyLocality","PREFERRED","locationAlert","SECONDARY","getLocation","updateValueAndValidity","invalid","iscsiSettingsForm","markAsTouched","getAlias","targetLocation","getAuthSpec","getNetwork","getPort","editTarget","addSpec","getIqn","addTarget","iqnValidator","control","validateIqn","aliasValidator","aliasErrorMessage","getAliasValidationMessage","policyValidator","policyErrorMessage","validatePolicy","errorMessages","handleAuthChange","type","CHAP","setModalDialogHeight","CHAP_Mutual","markAllAsTouched","required","values","min","TCP_PORT_MIN","max","TCP_PORT_MAX","getTargetModificationData","availablePolicies","policies","networks","updateDialogHeights","e","policyUuid","find","policy","isDefault","touched","NameFilter","VsanBreadcrumbModule","TargetLocationComparator","t1","t2","ComplianceResultComparator","o1","o2","AliasFilter","ButtonGroupDirective","_maximumInlineActions","_buttonTitleDirectives","updateButtonTitles","getVisibleButtons","concat","getInMenuButtons","titleDirective","getAttribute","titleChangeEvent","subscribe","subscribeToggleButtonClick","btns","_btns","updateInMenuButtons","groupWithMenu","btn","inMenu","toggleButton","getToggleButton","onclick","Array","from","VISIBLE_BUTTON_ELEMENTS_SELECTOR","ownerDocument","IN_MENU_BUTTON_ELEMENTS_SELECTOR","querySelector","TOGGLE_MENU_BUTTON_SELECTOR","RemoveTargetInitiatorComponent","mutationProvider","buzy","apply","disallowInitiatorAccess","RemoveLunsComponent","lunIds","removeLun","dialogContent","routes","path","component","IscsiTargetsModule","AuthTypeFilter","getAuthenticationLabel","TargetsViewComponent","iscsiTargetProvider","ipDataProvider","taskSvc","Icon","selectedTargetChange","hasComputePrivileges","ipConfigDataMap","Map","ascSort","ASC","hostUidToHostIpMap","preferredDomainHosts","secondaryDomainHosts","lunCountFilter","networkInterfaceFilter","ioOwnerHostFilter","portFilter","healthFilter","storagePolicyFilter","complianceResultFilter","authTypeFilter","ioOwnerHostComparator","healthComparator","complianceResultComparator","authTypeComparator","queryVnicIpAddress","hostRefs","vnicNames","targetsOnConnectedHosts","targetList","isValidHost","push","fromUid","getIpSetting","networkIpSettings","setting","key","getTargetNetworkKey","set","selectTargetByName","currentTarget","selectTarget","selectedTarget","openAddTargetDialog","openTargetModificationDialog","openEditTargetDialog","updateTargetList","reapplyPolicy","targetSpec","batchReapplyPolicies","mismatchTargets","hasMismatchComplianceResult","targetObject","storagePolicy","mismatch","openRemoveTargetDialog","isArray","promises","t","getAwaitResult","handleDataFailed","updateTarget","getIscsiTarget","refreshedTarget","complianceResultVisible","signpostClicked","cancelBubble","stopPropagation","stopImmediatePropagation","split","_targetList","getTargetListData","Object","keys","hostUid","preferredDomainHostUids","secondaryDomainHostUids","targetLocationFilter","targetLocationComparator","getNavigationData","uuid","getIoOwnerHostUuid","some","CLR_INFO_STANDARD_ICON_SHAPE","isIoOwnerHostInDesiredDomain","CLR_SUCCESS_STANDARD_ICON_SHAPE","CLR_WARN_STANDARD_ICON_SHAPE","clrIconShapeClassMap","LunStateComparator","l1","l2","AddLunComponent","pbmProvider","availableUnits","MB","GB","TB","fillOutForm","defaultStoragePolicyUuid","iscsiLun","suggestedLunId","idValidator","idError","getLunIdValidationMessage","aliasError","selectedPolicy","policyError","getLunPolicyValidationMessage","sizeValidator","getSize","sizeUnit","getSizeUnit","sizeError","getLunSizeValidationMessage","invalidSizeError","setErrors","sizeAndUnits","validators","getStoragePolicies","lunSettingsForm","getId","UNCHANGED_NEW_LUN_ID_VALUE","getPolicyUuid","createLun","errorMessage","getLunSizeHelperMessage","AuthTypeComparator","EditLunComponent","capabilityProvider","IscsiLunStatus","isIscsiOnlineResizeSupported","ID_CONTROL_NAME","POLICY_UUID_CONTROL_NAME","SIZE_CONTROL_NAME","SIZE_UNIT_CONTROL_NAME","SIZE_AND_UNITS_GROUP_NAME","editingLun","Offline","idInvalid","alreadyUsedIds","existingId","undefined","aliasInvalid","policyInvalid","sizeControl","getSizeControl","currentSizeInBytes","ceil","retrieveData","fillOutFormWithLunData","getIsIscsiOnlineResizeSupported","sizeInBytes","setValue","UNCHANGED_LUN_SIZE_VALUE","initialLunSize","TargetInitiatorRemoveSpec","InitiatorGroupTargetAdditionSpec","targetAliases","IoOwnerHostComparator","InitiatorsFilter","HealthFilter","getVsanObjectHealthStatusText","healthState","LunListComponent","lunsOperationFailed","changeLunCount","selectedLuns","_luns","lunIdFilter","capacityFilter","usedCapacityFilter","stateFilter","stateComparator","fetchLunList","isUpdatingLuns","getVsanIscsiTargetLunList","lunList","luns","actionTitle","descriptionKey","openAddLunDialog","caculateSuggestedId","onLunsChanged","openEditLunDialog","usedIds","placeLunOnline","placeLunStatus","placeLunOffline","reapplyPolicies","mismatchLuns","runningTaskRefs","completedTasks","lunObject","openRemoveLunDialog","_targetAlias","ids","newStatus","ONLINE_DIALOG_HEIGHT","OFFLINE_DIALOG_HEIGHT","ONLINE_DIALOG_WIDTH","OFFLINE_DIALOG_WIDTH","InventoryBrowserModule","AddInitiatorGroupComponent","dataSvc","isCreatingGroup","existingGroupNames","addInitiatorGroup","valid","validateAllFormFields","getGroupName","createSpec","createInitiatorGroup","validate","ctrl","groupNameErrorMessage","getGroupNameErrorMessage","initiatorGroupNameExp","test","allDigitsExp","getProperty","clusterName","trim","AllowedInitiatorsComponent","taskService","operationFailed","typeFilter","typeComparator","updateAllowedInitiatorsList","getVsanIscsiTargetInitiatorList","allowedInitiators","EVERYONE_GROUP","onSelectionChange","initiatorSpec","disallowTargetAccess","removed","addInitiator","dataChanged","AddAccessibleTargetComponent","targetPropertyProvider","selectedTargets","currentListState","TargetListState","ALL_AVAILABLE","getIscsiTargets","allTargets","getTargetList","allowedTarget","SELECTED","Error","addTargetSpec","res","log","err","ActualSizeFilter","actualSize","AddInitiatorsToGroupComponent","isCreatingInitiators","additionSpec","initiatorsToAdd","addInitiators","initiatorGroups","includes","StoragePolicyFilter","NetworkInterfaceFilter","BatchPolicyReapplyComponent","specs","reapplying","batchPolicyReapply","total","VsanCommonModule","AddInitiatorsComponent","selectedInitiators","nameErrorMessage","isRequired","addAllowed","initiatorNameIsNotEmpty","removeAllowed","existingName","SearchModule","PortFilter","ActionButtonModule","InitiatorGroupTargetRemoveSpec","HealthComparator","AddTargetInitiatorComponent","propertyProvider","initiatorsInputStr","selectedInitiatorGroups","selectedInitiatorType","AllowedInitiatorType","EVERYONE","allowedType","getInitiatorsFromInput","allowInitiatorAccess","INITIATOR","iqns","invalidIQNs","join","GROUP"],"mappings":"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","file":"100-es5.js","sourcesContent":["<!--Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-create-prompt\n      [title]=\"'vsan.configure.iscsiTargets.accessibleTargets.add.dialog.title' | localized\"\n      [subtitle]=\"initiatorGroupName\"\n      [blockButton]=\"!validate()\"\n      [confirmText]=\"'vsan.common.add' | localized\"\n      [(alertMessages)]=\"alertMessages\"\n      (onConfirm)=\"ok()\">\n   <div class=\"filter-container\">\n      <clr-select-container class=\"horizontal-layout\">\n        <label for=\"target-list-state-selection\">\n           {{\"vsan.configure.iscsiTargets.accessibleTargets.add.dialog.target.list.filter.label\" | localized}}\n         </label>\n        <select clrSelect\n                id=\"target-list-state-selection\"\n                name=\"target-list-state-selection\"\n                [(ngModel)]=\"currentListState\">\n            <option [value]=\"TargetListState.ALL_AVAILABLE\">\n               {{\"vsan.configure.iscsiTargets.accessibleTargets.add.dialog.target.list.filter.all\" | localized}}\n            </option>\n            <option [value]=\"TargetListState.SELECTED\">\n               {{\"vsan.configure.iscsiTargets.accessibleTargets.add.dialog.target.list.filter.selected\" | localized}}\n            </option>\n         </select>\n      </clr-select-container>\n   </div>\n   <clr-datagrid [(clrDgSelected)]=\"selectedTargets\" [clrDgLoading]=\"loading\">\n      <clr-dg-column [clrDgField]=\"'iqn'\" class=\"name-column\">\n         {{\"vsan.configure.iscsiTargets.accessibleTargets.list.iqn\" | localized}}\n         <clr-dg-string-filter [clrDgStringFilter]=\"iqnFilter\"></clr-dg-string-filter>\n      </clr-dg-column>\n      <clr-dg-column [clrDgField]=\"'alias'\" class=\"name-column\">\n         {{\"vsan.configure.iscsiTargets.accessibleTargets.list.alias\" | localized}}\n         <clr-dg-string-filter [clrDgStringFilter]=\"aliasFilter\"></clr-dg-string-filter>\n      </clr-dg-column>\n      <clr-dg-column [clrDgSortBy]=\"authTypeComparator\">\n         {{\"vsan.configure.iscsiTargets.target.list.authentication\" | localized}}\n         <clr-dg-string-filter [clrDgStringFilter]=\"authTypeFilter\"></clr-dg-string-filter>\n      </clr-dg-column>\n      <clr-dg-row *clrDgItems=\"let target of getTargetList()\" [clrDgItem]=\"target\">\n         <!-- IQN -->\n         <clr-dg-cell vsan-show-title>{{target.iqn}}</clr-dg-cell>\n         <!-- Alias -->\n         <clr-dg-cell vsan-show-title>{{target.alias}}</clr-dg-cell>\n         <!-- Authentication -->\n         <clr-dg-cell>{{VsanIscsiUtil.getAuthenticationLabel(target.authType)}}</clr-dg-cell>\n      </clr-dg-row>\n   </clr-datagrid>\n</vsan-create-prompt>","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<h6 vsan-show-title>{{lunListTitle}}</h6>\n<clr-button-group [vsan-button-group]=\"4\" class=\"btn-link\">\n   <clr-button id=\"add-lun-action\"\n               name=\"add-lun-action\"\n               class=\"btn btn-sm\"\n               [disabled]=\"disableActions\"\n               (click)=\"openAddLunDialog()\"\n               [vsan-button-title]=\"actionTitle('vsan.configure.iscsiTargets.lun.add.description')\">\n      {{\"vsan.configure.iscsiTargets.lun.add.label\" | localized}}\n   </clr-button>\n   <clr-button id=\"edit-lun-action\"\n               name=\"edit-lun-action\"\n               *ngIf=\"selectedLuns.length === 1\"\n               (click)=\"openEditLunDialog()\"\n               class=\"btn btn-sm\"\n               [disabled]=\"disableActions\"\n               [vsan-button-title]=\"actionTitle('vsan.configure.iscsiTargets.lun.edit.description')\">\n      {{\"vsan.configure.iscsiTargets.lun.edit.label\" | localized}}\n   </clr-button>\n   <clr-button id=\"turn-online-action\"\n               name=\"turn-online-action\"\n               *ngIf=\"onlineActionVisible\"\n               (click)=\"placeLunOnline()\"\n               class=\"btn btn-sm\"\n               [disabled]=\"disableActions\"\n               [vsan-button-title]=\"actionTitle('vsan.configure.iscsiTargets.lun.online.description')\">\n      {{\"vsan.configure.iscsiTargets.lun.online.label\" | localized}}\n   </clr-button>\n   <clr-button id=\"turn-offline-action\"\n               name=\"turn-offline-action\"\n               *ngIf=\"offlineActionVisible\"\n               (click)=\"placeLunOffline()\"\n               class=\"btn btn-sm\"\n               [disabled]=\"disableActions\"\n               [vsan-button-title]=\"actionTitle('vsan.configure.iscsiTargets.lun.offline.description')\">\n      {{\"vsan.configure.iscsiTargets.lun.offline.label\" | localized}}\n   </clr-button>\n   <clr-button id=\"reapply-policy-action\"\n               name=\"reapply-policy-action\"\n               *ngIf=\"reapplyActionVisible\"\n               (click)=\"reapplyPolicies()\"\n               class=\"btn btn-sm\"\n               [disabled]=\"disableActions\"\n               [vsan-button-title]=\"actionTitle('vsan.configure.iscsiTargets.lun.reapply.description')\">\n      {{\"vsan.configure.iscsiTargets.lun.reapply.label\" | localized}}\n   </clr-button>\n   <clr-button id=\"remove-lun-action\"\n               name=\"remove-lun-action\"\n               *ngIf=\"selectedLuns.length != 0\"\n               class=\"btn btn-sm\"\n               [disabled]=\"disableActions\"\n               (click)=\"openRemoveLunDialog()\"\n               [vsan-button-title]=\"actionTitle('vsan.configure.iscsiTargets.lun.remove.description')\">\n      {{\"vsan.configure.iscsiTargets.lun.remove.label\" | localized}}\n   </clr-button>\n</clr-button-group>\n<clr-datagrid [(clrDgSelected)]=\"selectedLuns\" [clrDgLoading]=\"isUpdatingLuns\">\n   <clr-dg-column [clrDgField]=\"'lunId'\" class=\"name-column\">\n      {{\"vsan.configure.iscsiTargets.lun.id\" | localized}}\n      <clr-dg-string-filter [clrDgStringFilter]=\"lunIdFilter\"></clr-dg-string-filter>\n   </clr-dg-column>\n   <clr-dg-column [clrDgField]=\"'alias'\" class=\"info-column\">\n      {{\"vsan.configure.iscsiTargets.lun.alias\" | localized}}\n      <clr-dg-string-filter [clrDgStringFilter]=\"aliasFilter\"></clr-dg-string-filter>\n   </clr-dg-column>\n   <clr-dg-column [clrDgField]=\"'lunSize'\">\n      {{\"vsan.configure.iscsiTargets.lun.capacity\" | localized}}\n      <clr-dg-string-filter [clrDgStringFilter]=\"capacityFilter\"></clr-dg-string-filter>\n   </clr-dg-column>\n   <clr-dg-column [clrDgField]=\"'actualSize'\">\n      {{\"vsan.configure.iscsiTargets.lun.used.capacity\" | localized}}\n      <clr-dg-string-filter [clrDgStringFilter]=\"usedCapacityFilter\"></clr-dg-string-filter>\n   </clr-dg-column>\n   <clr-dg-column [clrDgSortBy]=\"stateComparator\" class=\"info-column\">\n      {{\"vsan.configure.iscsiTargets.lun.state\" | localized}}\n      <clr-dg-string-filter [clrDgStringFilter]=\"stateFilter\"></clr-dg-string-filter>\n   </clr-dg-column>\n   <clr-dg-column [clrDgSortBy]=\"healthComparator\" class=\"info-column\">\n      {{\"vsan.configure.iscsiTargets.lun.health\" | localized}}\n      <clr-dg-string-filter [clrDgStringFilter]=\"healthFilter\"></clr-dg-string-filter>\n   </clr-dg-column>\n   <clr-dg-column [clrDgField]=\"'storagePolicy'\" class=\"info-column\">\n      {{\"vsan.configure.iscsiTargets.lun.storage.policy\" | localized}}\n      <clr-dg-string-filter [clrDgStringFilter]=\"storagePolicyFilter\"></clr-dg-string-filter>\n   </clr-dg-column>\n   <clr-dg-column [clrDgSortBy]=\"complianceResultComparator\" class=\"info-column\">\n      {{\"vsan.configure.iscsiTargets.lun.compliance.status\" | localized}}\n      <clr-dg-string-filter [clrDgStringFilter]=\"complianceResultFilter\"></clr-dg-string-filter>\n   </clr-dg-column>\n   <clr-dg-row *clrDgItems=\"let lun of luns\" [clrDgItem]=\"lun\">\n         <!-- Id -->\n         <clr-dg-cell vsan-show-title>{{lun.lunId}}</clr-dg-cell>\n         <!-- Alias -->\n         <clr-dg-cell vsan-show-title>{{lun.alias}}</clr-dg-cell>\n         <!-- Capacity -->\n         <clr-dg-cell>{{lun.lunSize | fileSize}}</clr-dg-cell>\n         <!-- Used Capacity -->\n         <clr-dg-cell>{{lun.actualSize |fileSize}}</clr-dg-cell>\n         <!-- State -->\n         <clr-dg-cell vsan-show-title>{{VsanIscsiUtil.getLunStateLabel(lun.status)}}</clr-dg-cell>\n         <!-- Health -->\n         <clr-dg-cell>\n            <vsan-icon-item [label]=\"lun.healthState | healthStateLabel\"\n                            [iconClass]=\"lun.healthState | healthStateIconClass\"\n                            [shape]=\"lun.healthState | healthStateIconShape\">\n            </vsan-icon-item>\n         </clr-dg-cell>\n         <!-- Storage policy -->\n         <clr-dg-cell vsan-show-title>\n            <span *ngIf=\"!readPoliciesPermission\">{{\"vsan.common.hidden\" | localized}}</span>\n            <span *ngIf=\"!lun?.storagePolicy && readPoliciesPermission\">{{\"vsan.na.label\" | localized}}</span>\n            <div *ngIf=\"lun?.storagePolicy && readPoliciesPermission\" title=\"{{lun.storagePolicy}}\">\n               <clr-icon [attr.shape]=\"Icon.VM_STORAGE_PROFILE_IMAGE\" aria-hidden=\"true\"></clr-icon>\n               {{lun.storagePolicy}}\n            </div>\n         </clr-dg-cell>\n         <!-- Compliance status -->\n         <clr-dg-cell>\n            <span *ngIf=\"!complianceResultVisible(lun)\">{{\"vsan.na.label\" | localized}}</span>\n            <vsan-icon-item *ngIf=\"complianceResultVisible(lun)\"\n                            [label]=\"VsanIscsiUtil.getComplianceLabel(lun.complianceResult)\"\n                            [iconClass]=\"VsanIscsiUtil.getComplianceIconClass(lun?.complianceStatus)\"\n                            [shape]=\"VsanIscsiUtil.getComplianceShape(lun?.complianceStatus)\">\n            </vsan-icon-item>\n         </clr-dg-cell>\n   </clr-dg-row>\n   <clr-dg-footer>{{\"vsan.configure.iscsiTargets.lun.footer\" | localized: luns?.length}}</clr-dg-footer>\n</clr-datagrid>\n","<!--Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-edit-prompt\n      [title]=\"'vsan.configure.iscsiTargets.lun.dialog.edit.title' | localized\"\n      [subtitle]=\"targetAlias\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"blockApplyButton\"\n      [(alertMessage)]=\"errorMessage\"\n      (onConfirm)=\"ok()\">\n   <form clrForm clrLayout=\"horizontal\" [formGroup]=\"iscsiLun\">\n      <!-- ID -->\n      <clr-input-container>\n         <label id=\"id-label\" for=\"id\" class=\"clr-col-sm-4\">\n            {{\"vsan.configure.iscsiTargets.lun.dialog.id\" | localized}}\n         </label>\n         <input clrInput\n                id=\"id\"\n                name=\"id\"\n                type=\"number\"\n                class=\"clr-col-sm-8\"\n                formControlName=\"{{ID_CONTROL_NAME}}\"\n                [vsan-disable-form-control]=\"editingLun.status === IscsiLunStatus.Online\"/>\n         <clr-control-error *clrIfError=\"'required'\">\n            {{\"vsan.configure.iscsiTargets.lun.dialog.id.empty\" | localized}}\n         </clr-control-error>\n         <clr-control-error *clrIfError=\"'idInvalid'\">\n            {{idError}}\n         </clr-control-error>\n      </clr-input-container>\n      <!-- Alias -->\n      <clr-input-container>\n         <label id=\"alias-label\" for=\"alias\" class=\"clr-col-sm-4\">\n            {{\"vsan.configure.iscsiTargets.lun.dialog.alias\" | localized}}\n         </label>\n         <input clrInput\n                id=\"alias\"\n                name=\"alias\"\n                type=\"text\"\n                formControlName=\"{{ALIAS_CONTROL_NAME}}\"\n                class=\"clr-col-sm-8\"/>\n         <clr-control-error *clrIfError=\"'aliasInvalid'\">\n            {{aliasError}}\n         </clr-control-error>\n      </clr-input-container>\n      <!-- Storage policy -->\n      <clr-select-container>\n         <label id=\"policy-selector-label\" for=\"policy-selector\" class=\"clr-col-sm-4\">\n            {{\"vsan.configure.iscsiTargets.lun.dialog.storagepolicy\" | localized}}\n         </label>\n         <select clrSelect\n                 id=\"policy-selector\"\n                 name=\"policy-selector\"\n                 class=\"clr-col-sm-8\"\n                 formControlName=\"{{POLICY_UUID_CONTROL_NAME}}\">\n            <option *ngFor=\"let availPolicy of availablePolicies\"\n                    [ngValue]=\"availPolicy.id\">\n               {{availPolicy.name}}\n            </option>\n         </select>\n         <clr-control-error *clrIfError=\"'policyInvalid'\">\n            {{policyError}}\n         </clr-control-error>\n      </clr-select-container>\n      <!-- Size -->\n      <div formGroupName=\"sizeAndUnits\"\n           class=\"clr-form-control clr-row\"\n           role=\"group\">\n         <label id=\"size-label\"\n                for=\"size\"\n                class=\"clr-control-label clr-col-sm-4\"\n                [class.disable-action]=\"disableSizeInput\">\n            {{\"vsan.configure.iscsiTargets.lun.dialog.growSizeTo\" | localized}}\n         </label>\n         <div class=\"clr-control-container clr-col-sm-8 size-container no-label-input-container\">\n            <clr-input-container>\n               <input clrInput\n                      id=\"size\"\n                      name=\"size\"\n                      type=\"number\"\n                      formControlName=\"{{SIZE_CONTROL_NAME}}\"\n                      [vsan-disable-form-control]=\"disableSizeInput\"/>\n               <clr-control-helper>{{sizeHelperMessage}}</clr-control-helper>\n               <clr-control-error *clrIfError=\"'sizeInvalid'\">{{sizeError}}</clr-control-error>\n            </clr-input-container>\n            <clr-select-container>\n               <select clrSelect\n                       id=\"units\"\n                       name=\"units\"\n                       formControlName=\"{{SIZE_UNIT_CONTROL_NAME}}\"\n                       [vsan-disable-form-control]=\"disableSizeInput\">\n                  <option *ngFor=\"let availUnit of availableUnits\"\n                          [ngValue]=\"availUnit\">\n                     {{availUnit.toString()}}\n                  </option>\n               </select>\n            </clr-select-container>\n         </div>\n      </div>\n   </form>\n</vsan-edit-prompt>\n","\nexport interface InitiatorGroupInitiatorAdditionSpec {\n\n   initiatorGroupName: string;\n   initiatorNames: string[];\n} //class InitiatorGroupInitiatorAdditionSpec\n\nexport module InitiatorGroupInitiatorAdditionSpec{\nexport class Factory {\n\n   static create = (initiatorGroupName: string, initiatorNames: string[]): InitiatorGroupInitiatorAdditionSpec => {\n      return { initiatorGroupName: initiatorGroupName, initiatorNames: initiatorNames, };\n   }\n\n\n} //class Factory\n\n} //module InitiatorGroupInitiatorAdditionSpec\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterViewInit, Directive, ElementRef, Input, Renderer2} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * Attribute directive for setting a custom title to the clr-icon inside a clr-signpost.\n * It also adds aria-label with the same value and aria-expanded=\"false\" to the button, holding the icon.\n * Used for changing the title when a clr-icon is not explicitly added inside a clr-signpost.\n */\n@Directive({\n   selector: \"clr-signpost\",\n})\nexport class SignpostTitleDirective implements AfterViewInit {\n   private readonly BUTTON_TAG_NAME: string = \"button\";\n   private readonly CLR_ICON_TAG_NAME: string = \"clr-icon\";\n\n   private readonly TITLE_ATTRIBUTE: string = \"title\";\n   private readonly ARIA_EXPANDED_ATTRIBUTE: string = \"aria-expanded\";\n   private readonly ARIA_LABEL_ATTRIBUTE: string = \"aria-label\";\n\n   @Input(\"vsan-signpost-title\")\n   signpostTitle: string;\n\n   constructor(private el: ElementRef<HTMLElement>,\n         private renderer: Renderer2) {\n   }\n\n   ngAfterViewInit(): void {\n      if (!this.signpostTitle) {\n         return;\n      }\n\n      const signpostIcon: Element = this.el.nativeElement.getElementsByTagName(this.CLR_ICON_TAG_NAME).item(0);\n      if (signpostIcon) {\n         this.renderer.setAttribute(signpostIcon, this.TITLE_ATTRIBUTE, VsanUiUtils.getString(this.signpostTitle));\n      }\n      const button: Element = this.el.nativeElement.getElementsByTagName(this.BUTTON_TAG_NAME).item(0);\n      if (button) {\n         this.renderer.setAttribute(button, this.ARIA_EXPANDED_ATTRIBUTE, \"false\");\n         this.renderer.setAttribute(button, this.ARIA_LABEL_ATTRIBUTE, VsanUiUtils.getString(this.signpostTitle));\n      }\n   }\n}\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanObject} from \"@generated/vsan-object\";\nimport {VsanIscsiUtil} from \"../../common/util/vsan-iscsi-util\";\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\n\nexport class ComplianceResultFilter implements ClrDatagridStringFilterInterface<VsanObject> {\n   accepts = (obj: VsanObject, search: string): boolean => {\n      return VsanIscsiUtil.getComplianceLabel(obj.complianceResult).toLowerCase().indexOf(search) > -1;\n   };\n}","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanIscsiPropertyProvider} from \"@generated/vsan-iscsi-property-provider\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {Logger} from \"@util/logger\";\nimport {VsanPropertyProvider} from \"@generated/vsan-property-provider\";\nimport {VsanIscsiTargetConfig} from \"@generated/vsan-iscsi-target-config\";\nimport {IscsiTarget} from \"@generated/iscsi-target\";\n\n@Component({\n   templateUrl: \"iscsi-target-service.html\",\n   styleUrls: [\"./iscsi-target-service.scss\"],\n   selector: \"vsan-iscsi-targets\",\n})\nexport class IscsiTargetServiceComponent implements OnInit {\n   iscsiViews: string[] = [\n      VsanUiUtils.getString(\"vsan.configure.iscsiTargetService.targets\"),\n      VsanUiUtils.getString(\"vsan.configure.iscsiTargetService.initiator.groups\")];\n\n   currentViewIndex: number = 0;\n   loading: boolean = true;\n   hasEditPrivilege: boolean = false;\n   readPoliciesPermission: boolean = false;\n   alertMessage: string;\n\n   // Stores the selected target in order to pass it to children which are recreated on refresh\n   selectedIscsiTarget: IscsiTarget;\n\n   constructor(private iscsiProvider: VsanIscsiPropertyProvider,\n         private vsanService: VsanPropertyProvider,\n         private permissionService: PermissionService) {\n   }\n\n   ngOnInit() {\n      this.fetch();\n   }\n\n   @RefreshHandler\n   fetch() {\n      this.alertMessage = null;\n      this.loading = true;\n      Promise.all([\n         this.iscsiProvider.getVsanIscsiTargetConfig(ManagedObject.contextObject),\n         this.permissionService.hasPermissions(ManagedObject.contextObject, [Privileges.EDIT_CLUSTER()]),\n         this.permissionService.hasVcPermissions(ManagedObject.contextObject, [Privileges.READ_POLICIES()]),\n      ]).then(this.handleResponse).catch(this.handleError);\n   }\n\n   private handleResponse = (result: any[]) => {\n      this.loading = false;\n\n      const iscsiTargetConfig: VsanIscsiTargetConfig = result[0];\n      this.readPoliciesPermission = result[2];\n      this.hasEditPrivilege = result[1] && this.readPoliciesPermission && !iscsiTargetConfig.emptyCluster;\n   };\n\n   private handleError = (ex) => {\n      this.loading = false;\n      Logger.error(ex);\n      this.alertMessage = VsanUiUtils.getString(\"vsan.common.error.dataExtraction\");\n   };\n\n   handleConfigurationError = (event: any) => {\n      Logger.error(event);\n      this.alertMessage = event;\n   };\n\n   onViewSelected = (viewIndex: number): void => {\n      if (viewIndex === this.currentViewIndex) {\n         return;\n      }\n      this.currentViewIndex = viewIndex;\n   };\n}\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {IscsiTarget} from \"@generated/iscsi-target\";\nimport {InitiatorGroupTarget} from \"@generated/initiator-group-target\";\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\n\nexport class IqnFilter implements ClrDatagridStringFilterInterface<IscsiTarget | InitiatorGroupTarget> {\n   accepts = (target: IscsiTarget | InitiatorGroupTarget, search: string): boolean => {\n      return target.iqn.toLowerCase().indexOf(search) >= 0;\n   };\n}","/* Copyright 2017-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanIscsiTargetMutationProvider} from \"@generated/vsan-iscsi-target-mutation-provider\";\n\n@Component({\n   templateUrl: \"remove-target.html\",\n   selector: \"vsan-iscsi-remove-target\",\n})\nexport class RemoveTargetComponent implements OnInit {\n   private clusterRef: ManagedObject;\n   targetAlias: string;\n\n   isRemoving: boolean;\n   alertMessages: string[];\n   allowRemove: boolean;\n\n   constructor(private iscsiTargetMutationProvider: VsanIscsiTargetMutationProvider) {}\n\n   ngOnInit() {\n      this.clusterRef = ManagedObject.contextObject;\n      this.targetAlias = VsanUiUtils.getModalContext().targetAlias;\n      this.allowRemove = VsanUiUtils.getModalContext().lunCount === 0;\n   }\n\n   ok = (): void => {\n      this.isRemoving = true;\n      this.iscsiTargetMutationProvider.removeTarget(this.clusterRef, this.targetAlias)\n            .then(this.close)\n            .catch((error: string) => {\n               this.isRemoving = false;\n               this.alertMessages = [error];\n            });\n   };\n\n   close = (taskRef: ManagedObject = null): void => {\n      this.isRemoving = false;\n      VsanUiUtils.closeModalDialog(taskRef);\n   };\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {InitiatorGroup} from \"@generated/initiator-group\";\nimport {ClrDatagridComparatorInterface} from \"@clr/angular\";\n\nexport class InitiatorsComparator implements ClrDatagridComparatorInterface<InitiatorGroup> {\n   compare = (g1: InitiatorGroup, g2: InitiatorGroup): number => {\n      return g1.initiators.length - g2.initiators.length;\n   };\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanIscsiUtil} from \"../../common/util/vsan-iscsi-util\";\nimport {TargetInitiatorSpec} from \"@generated/target-initiator-spec\";\nimport {ClrDatagridComparatorInterface} from \"@clr/angular\";\n\nexport class IsGroupComparator implements ClrDatagridComparatorInterface<TargetInitiatorSpec> {\n   compare = (s1: TargetInitiatorSpec, s2: TargetInitiatorSpec): number => {\n      return VsanIscsiUtil.getAllowedInitiatorsType(s1.isGroup).localeCompare(\n            VsanIscsiUtil.getAllowedInitiatorsType(s2.isGroup));\n   };\n}","<vsan-edit-prompt\n      [title]=\"title\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"blockApplyButton\"\n      [(alertMessages)]=\"errorMessages\"\n      (onConfirm)=\"ok()\">\n   <div class=\"dialog-container\">\n      <form clrForm clrLayout=\"horizontal\" [formGroup]=\"iscsiTarget\">\n         <!-- IQN -->\n         <clr-input-container>\n            <label id=\"iqn-label\" class=\"clr-col-md-4\">\n               {{'vsan.configure.iscsiTargets.target.dialog.iqn' | localized}}\n            </label>\n            <input clrInput\n                   id=\"iqn\"\n                   class=\"clr-col-md-8 long-input\"\n                   name=\"iqn\"\n                   placeholder=\"{{'vsan.configure.iscsiTargets.target.dialog.iqn.placeholder' | localized}}\"\n                   formControlName=\"{{IQN_CONTROL_NAME}}\"\n                   [vsan-disable-form-control]=\"originalTarget\"/>\n            <clr-control-helper *ngIf=\"!originalTarget\">\n               <div id=\"iqn-convention\">{{\"vsan.configure.iscsiTargets.target.dialog.iqn.hint1\" | localized}}</div>\n               <div id=\"iqn-examples\">{{\"vsan.configure.iscsiTargets.target.dialog.iqn.hint2\" | localized}}</div>\n            </clr-control-helper>\n            <clr-control-error>\n               {{\"vsan.configure.iscsiTargets.target.dialog.iqn.invalid\" | localized}}\n               <ul class=\"list\">\n                  <li>{{\"vsan.configure.iscsiTargets.target.dialog.iqn.requirement1\" | localized}}</li>\n                  <li>{{\"vsan.configure.iscsiTargets.target.dialog.iqn.requirement2\" | localized}}</li>\n                  <li>{{\"vsan.configure.iscsiTargets.target.dialog.iqn.requirement3\" | localized}}</li>\n               </ul>\n            </clr-control-error>\n         </clr-input-container>\n         <!-- Alias -->\n         <clr-input-container>\n            <label id=\"alias-label\" class=\"clr-col-md-4 long-input\">\n               {{'vsan.configure.iscsiTargets.target.dialog.alias' | localized}}\n            </label>\n            <input clrInput\n                   id=\"alias\"\n                   class=\"clr-col-md-8\"\n                   name=\"alias\"\n                   formControlName=\"{{ALIAS_CONTROL_NAME}}\"/>\n            <clr-control-error *clrIfError=\"'required'\">\n               {{\"vsan.configure.iscsiTargets.target.dialog.alias.empty\" | localized}}\n            </clr-control-error>\n            <clr-control-error *clrIfError=\"ALIAS_VALIDATION\">\n               {{aliasErrorMessage}}\n            </clr-control-error>\n         </clr-input-container>\n         <!-- Storage policy -->\n         <clr-select-container>\n            <label id=\"storage-policy-label\" class=\"clr-col-md-4\">\n               {{'vsan.configure.iscsiTargets.target.dialog.policy' | localized}}\n            </label>\n            <select clrSelect\n                    id=\"policy-selector\"\n                    class=\"clr-col-md-8\"\n                    name=\"policy-selector\"\n                    formControlName=\"{{POLICY_CONTROL_NAME}}\"\n                    (change)=\"onPolicyChange()\">\n               <option *ngFor=\"let policy of availablePolicies\"\n                       [ngValue]=\"policy\">\n                  {{policy.name}}\n               </option>\n            </select>\n            <clr-control-error>{{policyErrorMessage}}</clr-control-error>\n         </clr-select-container>\n         <!-- Network -->\n         <clr-select-container>\n            <label id=\"network-label\" class=\"clr-col-md-4\">\n               {{'vsan.configure.iscsiTargets.target.dialog.network' | localized}}\n            </label>\n            <select clrSelect\n                    id=\"network-selector\"\n                    class=\"clr-col-md-8\"\n                    name=\"network-selector\"\n                    formControlName=\"{{NETWORK_CONTROL_NAME}}\">\n               <option *ngFor=\"let availableNetwork of availableNetworks\"\n                       [ngValue]=\"availableNetwork\">\n                  {{availableNetwork}}\n               </option>\n            </select>\n            <clr-control-error *ngIf=\"!originalTarget\">\n               {{\"vsan.configure.iscsiTargets.target.dialog.add.network.empty\" | localized}}\n            </clr-control-error>\n            <clr-control-error *ngIf=\"originalTarget\">\n               {{ \"vsan.configure.iscsiTargets.target.dialog.edit.network.empty\" | localized}}\n            </clr-control-error>\n         </clr-select-container>\n         <!-- TCP port -->\n         <clr-input-container>\n            <label class=\"clr-col-md-4 short-input\">\n               {{\"vsan.configure.iscsiTargets.target.dialog.port\" | localized}}\n            </label>\n            <input clrInput\n                   id=\"port-input\"\n                   class=\"clr-col-md-8\"\n                   name=\"port\"\n                   type=\"number\"\n                   formControlName=\"{{PORT_CONTROL_NAME}}\"/>\n            <clr-control-error>\n               {{\"vsan.configure.iscsiTargets.target.dialog.port.invalid\" | localized}}\n            </clr-control-error>\n         </clr-input-container>\n         <!-- Authentication -->\n         <vsan-authentication formControlName=\"authSpec\"\n                              (authTypeChange)=\"handleAuthChange($event)\">\n         </vsan-authentication>\n         <!-- Target location -->\n         <clr-select-container *ngIf=\"isTargetLocationSupported\">\n            <label id=\"target-location-label\" class=\"clr-col-md-4\">\n               {{\"vsan.configure.iscsiTargets.target.dialog.location\" | localized}}\n            </label>\n            <select clrSelect\n                    id=\"target-location\"\n                    class=\"clr-col-md-8\"\n                    name=\"target-location\"\n                    formControlName=\"{{LOCATION_CONTROL_NAME}}\"\n                    (change)=\"updateLocationAlert()\">\n               <option *ngFor=\"let location of locations\"\n                       [ngValue]=\"location.id\"\n                       [hidden]=\"!location.isVisible\">\n                  {{location.label}}\n               </option>\n            </select>\n            <clr-control-helper>\n               {{\"vsan.configure.iscsiTargets.target.dialog.location.helper\" | localized}}\n            </clr-control-helper>\n         </clr-select-container>\n         <vsan-validation id=\"target-location-alert\"\n                          [isSmall]=\"true\"\n                          [allowClose]=\"false\"\n                          [alert]=\"locationAlert\"\n                          alertType=\"info\">\n         </vsan-validation>\n      </form>\n   </div>\n</vsan-edit-prompt>","<vsan-delete-prompt id=\"remove-group-target-prompt\"\n                    [title]=\"'vsan.configure.iscsiTargets.accessibleTargets.remove.dialog.title' | localized\"\n                    [blockButton]=\"isRemoving\"\n                    [subtitle]=\"groupName\"\n                    [(alertMessages)]=\"alertMessages\"\n                    [confirmText]=\"'vsan.common.remove' | localized\"\n                    (onConfirm)=\"ok()\">\n   <div class=\"dialog-container\">\n      <div id=\"remove-group-target-confirmation\">\n         {{\"vsan.configure.iscsiTargets.accessibleTargets.remove.confirmation\" | localized}}\n      </div>\n      <div id=\"remove-group-target-confirm-question\">{{\"vsan.common.confirm.question\" | localized}}</div>\n   </div>\n</vsan-delete-prompt>\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {IscsiTarget} from \"@generated/iscsi-target\";\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\n\nexport class LunCountFilter implements ClrDatagridStringFilterInterface<IscsiTarget> {\n   accepts = (target: IscsiTarget, search: string): boolean => {\n      return target.lunCount.toString().indexOf(search) > -1;\n   };\n}","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {TreeExpanderComponent} from \"@component/datagrid/tree-expander.component\";\nimport {TreeColumnComponent} from \"@component/datagrid/tree-column.component\";\nimport {EnumeratedFilterComponent} from \"./filter/enumerated-filter.component\";\nimport {EnumeratedFilterItemComponent} from \"./filter/enumerated-filter-item.component\";\nimport {EnumFilterComponent} from \"@component/datagrid/filter/enum-filter.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n   ],\n   declarations: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumeratedFilterComponent,\n      EnumFilterComponent,\n   ],\n   exports: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumFilterComponent,\n   ],\n})\nexport class TreeDatagridModule {\n}\n","/* Copyright 2017-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {ModalBuilder} from \"../../common/util/modal-builder\";\nimport {InitiatorGroupTarget} from \"@generated/initiator-group-target\";\nimport {IqnFilter} from \"../filters/iqn-filter\";\nimport {AliasFilter} from \"../filters/alias-filter\";\nimport {VsanUiUtils} from \"app/vsan/common/util/vsan-util\";\n\n@Component({\n   selector: \"vsan-accessible-targets\",\n   templateUrl: \"accessible-targets.html\",\n   styleUrls: [\"accessible-targets.scss\", \"iscsi-common.scss\"],\n})\nexport class AccessibleTargetsComponent {\n\n   VsanUiUtils = VsanUiUtils;\n\n   @Output()\n   refreshGroupList: EventEmitter<void> = new EventEmitter<void>();\n\n   @Input()\n   initiatorGroupName: string;\n\n   @Input()\n   set accessibleTargets(targets: InitiatorGroupTarget[]) {\n      if (!targets || targets.length === 0) {\n         this._accessibleTargets = [];\n         this.selectedAccessibleTarget = null;\n      } else {\n         this._accessibleTargets = targets;\n         this.selectedAccessibleTarget = this._accessibleTargets[0];\n      }\n   }\n\n   get accessibleTargets(): InitiatorGroupTarget[] {\n      return this._accessibleTargets;\n   }\n\n   private _accessibleTargets: InitiatorGroupTarget[];\n\n   selectedAccessibleTarget: InitiatorGroupTarget;\n\n   @Input()\n   hasEditPermissions: boolean = false;\n\n   iqnFilter: IqnFilter = new IqnFilter();\n   aliasFilter: AliasFilter = new AliasFilter();\n\n   selectAccessibleTarget = (target: InitiatorGroupTarget): void => {\n      if (target === this.selectedAccessibleTarget) {\n         return;\n      }\n      this.selectedAccessibleTarget = target;\n   };\n\n   openRemoveAccessibleTargetDialog = (): void => {\n      new ModalBuilder(\"iscsiTargets/removeAccessibleTarget\")\n            .setSize(500, 220)\n            .open({\n               groupName: this.initiatorGroupName,\n               targetAlias: this.selectedAccessibleTarget.alias,\n            })\n            .then((updateGroupList: boolean) => {\n               if (updateGroupList) {\n                  this.refreshGroupList.emit();\n               }\n            });\n   };\n\n   onAddAccessibleTarget = (): void => {\n      new ModalBuilder(\"iscsiTargets/addAccessibleTarget\")\n            .setSize(720, 410)\n            .open({\n               initiatorGroupName: this.initiatorGroupName,\n               accessibleTargets: this.accessibleTargets,\n            })\n            .then((listUpdated: boolean): void => {\n               if (listUpdated) {\n                  this.refreshGroupList.emit();\n               }\n            });\n   };\n}","\nexport interface TargetInitiatorSpec {\n\n   name: string;\n   isGroup: boolean;\n} //class TargetInitiatorSpec\n\nexport module TargetInitiatorSpec{\nexport class Factory {\n\n   static create = (name: string, isGroup: boolean): TargetInitiatorSpec => {\n      return { name: name, isGroup: isGroup, };\n   }\n\n\n} //class Factory\n\n} //module TargetInitiatorSpec\n","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {VsanIscsiInitiatorGroupPropertyProvider} from \"@generated/vsan-iscsi-initiator-group-property-provider\";\nimport {InitiatorGroup} from \"@generated/initiator-group\";\nimport {NameFilter} from \"../filters/name-filter\";\nimport {InitiatorsFilter} from \"../filters/initiators-filter\";\nimport {InitiatorsComparator} from \"../comparators/initiators-comparator\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\n\n@Component({\n   selector: \"vsan-initiator-groups-view\",\n   templateUrl: \"initiator-groups-view.html\",\n   styleUrls: [\"initiator-groups-view.scss\", \"iscsi-common.scss\"],\n})\nexport class InitiatorGroupsViewComponent implements OnInit {\n   VsanUiUtils = VsanUiUtils;\n\n   loading: boolean = false;\n   alertMessage: string;\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   selectedInitiatorGroup: InitiatorGroup;\n\n   private _initiatorGroupList: InitiatorGroup[];\n\n   set initiatorGroupList(list: InitiatorGroup[]) {\n      if (!list || list.length === 0) {\n         this._initiatorGroupList = [];\n         this.selectedInitiatorGroup = null;\n      } else {\n         this._initiatorGroupList = list;\n         this.selectedInitiatorGroup = this.initiatorGroupList[0];\n      }\n   }\n\n   get initiatorGroupList(): InitiatorGroup[] {\n      return this._initiatorGroupList;\n   }\n\n   @Input()\n   hasEditPermissions: boolean = false;\n\n   nameFilter: NameFilter = new NameFilter();\n   initiatorCountFilter: InitiatorsFilter = new InitiatorsFilter();\n   initiatorCountComparator: InitiatorsComparator = new InitiatorsComparator();\n\n   constructor(private iscsiInitiatorGroupProvider: VsanIscsiInitiatorGroupPropertyProvider) {}\n\n   ngOnInit() {\n      this.fetch();\n   }\n\n   fetch() {\n      this.refreshGroupList();\n   }\n\n   refreshGroupList = () => {\n      this.loading = true;\n      this.iscsiInitiatorGroupProvider.getVsanIscsiInitiatorGroupList(ManagedObject.contextObject)\n            .then((data: InitiatorGroup[]) => {\n               this.loading = false;\n               this.initiatorGroupList = data;\n               this.srOnlyMessage = VsanUiUtils.getString(\"vsan.screenReader.message.page.loaded.andTabSelected\",\n                     VsanUiUtils.getString(\"vsan.iscsiTargets\"),\n                     VsanUiUtils.getString(\"vsan.configure.iscsiTargetService.initiator.groups\"));\n            })\n            .catch((error: string) => {\n               this.loading = false;\n               this.alertMessage =\n                     VsanUiUtils.getString(\"vsan.configure.iscsiTargets.initiatorGroups.list.query.error\");\n            });\n   };\n\n   selectGroup = (group: InitiatorGroup) => {\n      if (this.selectedInitiatorGroup === group) {\n         return;\n      }\n      this.selectedInitiatorGroup = group;\n   };\n\n   openAddInitiatorGroupDialog = () => {\n      const context: any = {\n         groupNames: this.getAllInitiatorGroupNames(),\n      };\n      new ModalBuilder(\"iscsiTargets/addInitiatorGroup\")\n            .setSize(650, 600)\n            .open(context)\n            .then(() => {\n               this.refreshGroupList();\n            });\n   };\n\n   private getAllInitiatorGroupNames = (): string[] => {\n      if (!this.initiatorGroupList || this.initiatorGroupList.length === 0) {\n         return [];\n      }\n      return this.initiatorGroupList.map(group => group.name);\n   };\n\n   openRemoveInitiatorGroupDialog = () => {\n      new ModalBuilder(\"iscsiTargets/removeInitiatorGroup\")\n            .setSize(500, 240)\n            .open({\n               groupName: this.selectedInitiatorGroup.name,\n            })\n            .then((updateGroupList: boolean) => {\n               if (updateGroupList) {\n                  this.refreshGroupList();\n               }\n            });\n   };\n}","\nexport interface TargetInitiatorEditSpec {\n\n   targetAlias: string;\n   targetInitiatorNames: string[];\n} //class TargetInitiatorEditSpec\n\nexport module TargetInitiatorEditSpec{\nexport class Factory {\n\n   static create = (targetAlias: string, targetInitiatorNames: string[]): TargetInitiatorEditSpec => {\n      return { targetAlias: targetAlias, targetInitiatorNames: targetInitiatorNames, };\n   }\n\n\n} //class Factory\n\n} //module TargetInitiatorEditSpec\n","<h6>{{\"vsan.configure.iscsiTargets.accessibleTargets.title\" | localized}}</h6>\n<clr-button-group vsan-button-group class=\"btn-link\">\n   <clr-button id=\"add-accessibleTargets-action\"\n               name=\"add-accessibleTargets-action\"\n               class=\"btn btn-sm\"\n               [disabled]=\"!hasEditPermissions\"\n               (click)=\"onAddAccessibleTarget()\"\n               [vsan-button-title]=\"VsanUiUtils.getActionTitle(hasEditPermissions,\n                     'vsan.configure.iscsiTargets.accessibleTargets.add.description')\">\n      {{\"vsan.configure.iscsiTargets.accessibleTargets.add.label\" | localized}}\n   </clr-button>\n   <clr-button id=\"remove-accessibleTargets-action\"\n               name=\"remove-accessibleTargets-action\"\n               *ngIf=\"selectedAccessibleTarget\"\n               [disabled]=\"!hasEditPermissions\"\n               class=\"btn btn-sm\"\n               (click)=\"openRemoveAccessibleTargetDialog()\"\n               [vsan-button-title]=\"VsanUiUtils.getActionTitle(hasEditPermissions,\n                     'vsan.configure.iscsiTargets.accessibleTargets.remove.description')\">\n      {{\"vsan.configure.iscsiTargets.accessibleTargets.remove.label\" | localized}}\n   </clr-button>\n</clr-button-group>\n<clr-datagrid [(clrDgSingleSelected)]=\"selectedAccessibleTarget\">\n   <clr-dg-column [clrDgField]=\"'iqn'\" class=\"name-column\">\n      {{\"vsan.configure.iscsiTargets.accessibleTargets.list.iqn\" | localized}}\n      <clr-dg-string-filter [clrDgStringFilter]=\"iqnFilter\"></clr-dg-string-filter>\n   </clr-dg-column>\n   <clr-dg-column [clrDgField]=\"'alias'\">\n      {{\"vsan.configure.iscsiTargets.accessibleTargets.list.alias\" | localized}}\n      <clr-dg-string-filter [clrDgStringFilter]=\"aliasFilter\"></clr-dg-string-filter>\n   </clr-dg-column>\n   <clr-dg-row *clrDgItems=\"let target of accessibleTargets\"\n               [clrDgItem]=\"target\"\n               (click)=\"selectAccessibleTarget(target)\">\n      <!-- Target IQN -->\n      <clr-dg-cell vsan-show-title>\n         {{ target.iqn }}\n      </clr-dg-cell>\n      <!-- Target Alias -->\n      <clr-dg-cell>\n         {{ target.alias }}\n      </clr-dg-cell>\n   </clr-dg-row>\n   <!-- Datagrid Footer -->\n   <clr-dg-footer>{{\"vsan.configure.iscsiTargets.accessibleTargets.footer\" | localized: accessibleTargets.length}}</clr-dg-footer>\n</clr-datagrid>","import {VsanIscsiAuthSpec} from '@generated/vsan-iscsi-auth-spec';\nimport {AffinitySiteLocation} from '@generated/affinity-site-location';\n\nexport interface TargetOperationSpec {\n\n   alias: string;\n   authSpec: VsanIscsiAuthSpec;\n   iqn: string;\n   networkInterface: string;\n   newAlias: string;\n   port: number;\n   policyId: string;\n   affinityLocation: AffinitySiteLocation;\n} //class TargetOperationSpec\n\nexport module TargetOperationSpec{\nexport class Factory {\n\n   static create = (alias: string, authSpec: VsanIscsiAuthSpec, iqn: string, networkInterface: string, newAlias: string, port: number, policyId: string, affinityLocation: AffinitySiteLocation): TargetOperationSpec => {\n      return { alias: alias, authSpec: authSpec, iqn: iqn, networkInterface: networkInterface, newAlias: newAlias, port: port, policyId: policyId, affinityLocation: affinityLocation, };\n   }\n\n\n} //class Factory\n\n} //module TargetOperationSpec\n","\nexport interface TargetLunRemoveSpec {\n\n   targetAlias: string;\n   targetLunIds: number[];\n} //class TargetLunRemoveSpec\n\nexport module TargetLunRemoveSpec{\nexport class Factory {\n\n   static create = (targetAlias: string, targetLunIds: number[]): TargetLunRemoveSpec => {\n      return { targetAlias: targetAlias, targetLunIds: targetLunIds, };\n   }\n\n\n} //class Factory\n\n} //module TargetLunRemoveSpec\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {environment} from \"@env/environment\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Logger} from \"./logger\";\nimport {WebPlatform} from \"./platform\";\nimport {VsanUiUtils} from \"./vsan-util\";\n\nexport class ModalBuilder {\n\n   static readonly WIDTH: number = 0;\n   static readonly HEIGHT: number = 1;\n\n   static readonly DEFAULT_SIZE: number[] = [1000, 530];\n   static readonly WIZARD_XL: number[] = [1200, 700];\n\n   static readonly APP_URL: string = (environment.repa && environment.repaExtension)\n         ? \"index.html\"\n         : \"/ui/h5-vsan-ui/\";\n\n   private size: number[] = ModalBuilder.DEFAULT_SIZE;\n\n   // When null, the modal dialog will be headless and the docked\n   // view is expected to provide a title bar.\n   private title: string = null;\n\n   private accessibilityTitle: string = null;\n\n   private urlParams: any = {};\n\n   private eventTarget: EventTarget;\n\n   constructor(private appId: string) {\n   }\n\n   setDimensions(dimensions: number[]): ModalBuilder {\n      if (!dimensions || dimensions.length !== 2) {\n         Logger.warn(\"invalid modal dimensions\", dimensions);\n         dimensions = ModalBuilder.DEFAULT_SIZE;\n      }\n      return this.setSize(dimensions[ModalBuilder.WIDTH], dimensions[ModalBuilder.HEIGHT]);\n   }\n\n   setSize(width: number, height: number): ModalBuilder {\n      this.size = [width, height];\n      return this;\n   }\n\n   setUrlParameters(params: any): ModalBuilder {\n      this.urlParams = params;\n      return this;\n   }\n\n   /**\n    * Set to null if the view provides its own title bar\n    */\n   setTitle(title: string): ModalBuilder {\n      this.title = title;\n      return this;\n   }\n\n   setAccessibilityTitle(accessibilityTitle: string): ModalBuilder {\n      this.accessibilityTitle = accessibilityTitle;\n      return this;\n   }\n\n   /**\n    * Set explicit event target if it is changed before opening the modal.\n    * For example when making a preceding request the event target is the XMLHttpRequest object.\n    */\n   setEventTarget(eventTarget: EventTarget): ModalBuilder {\n      this.eventTarget = eventTarget;\n      return this;\n   }\n\n   /**\n    * Opens a modal dialog and returns a promise to collect the result; On close the target element is focused.\n    * @param context - any JS data object, can be retrieved by WebPlatform.getModalContext()\n    * @returns {Promise<any>} - Invoked if the dialog invokes WebPlatform.closeModalDialog(arg)\n    *       with non-null arg. The promise is never rejected.\n    */\n   open(context?: any): Promise<any> {\n      return new Promise<any>((accept) => {\n         VsanUiUtils.pluginContext.targetElement = this.eventTarget ? this.eventTarget :\n               (event && event.target ? event.target : null);\n         VsanUiUtils.pluginContext.modalResultHandler = (data?: any) => {\n            if (typeof data !== \"undefined\") {\n               // Deep copy of the object was required to resolve an issue with object's prototype overriding when\n               // passing complex objects in IE11/Edge; Keep it for safety.\n               accept(JSON.parse(JSON.stringify(data)));\n            } else if (VsanUiUtils.pluginContext.targetElement && VsanUiUtils.pluginContext.targetElement.focus) {\n               // On cancel just focus the target element. Timeout is required as otherwise the focus may be\n               // consumed by the mouse click.\n               setTimeout(() => VsanUiUtils.pluginContext.targetElement.focus(), 100);\n            }\n         };\n\n         let actionUrl: string = `${ModalBuilder.APP_URL}?viewId=${this.appId}`;\n\n         let separator: string = \"?\";\n         for (const param in this.urlParams) {\n            actionUrl += separator + param + \"=\" + this.urlParams[param];\n            separator = \"&\";\n         }\n\n         WebPlatform.openModalDialog(this.title,\n               actionUrl,\n               ManagedObject.contextObjectUid,\n               this.size[0], this.size[1],\n               this.title != null,\n               VsanUiUtils.pluginContext.modalResultHandler /* onClose */,\n               context /* retrieve with Platform.getModalContext() */,\n               this.accessibilityTitle);\n      });\n   }\n\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {IscsiTarget} from \"@generated/iscsi-target\";\nimport {VsanIscsiUtil} from \"../../common/util/vsan-iscsi-util\";\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\n\nexport class TargetLocationFilter implements ClrDatagridStringFilterInterface<IscsiTarget> {\n   constructor(private preferredDomainName: string, private secondaryDomainName: string) {}\n\n   accepts = (target: IscsiTarget, search: string): boolean => {\n      return VsanIscsiUtil.getTargetLocationLabel(target.affinityLocation,\n            this.preferredDomainName, this.secondaryDomainName).toLowerCase().indexOf(search) >= 0;\n   };\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {IscsiLunStatus} from \"@generated/iscsi-lun-status\";\nimport {LunOperationSpec} from \"@generated/lun-operation-spec\";\nimport {VsanIscsiTargetMutationProvider} from \"@generated/vsan-iscsi-target-mutation-provider\";\nimport {EditLunStateContext} from \"@navigation/context/edit-lun-state-context\";\nimport {Logger} from \"@util/logger\";\n\n@Component({\n   templateUrl: \"edit-lun-state.html\",\n   selector: \"vsan-iscsi-edit-lun-state\",\n})\nexport class EditLunStateComponent implements OnInit {\n\n   title: string;\n   content: string;\n   inProgress: boolean;\n   editSpec: LunOperationSpec;\n   alertMessages: string[] = [];\n\n   constructor (private targetMutationProvider: VsanIscsiTargetMutationProvider) {}\n\n   ngOnInit() {\n      const context: EditLunStateContext = VsanUiUtils.getModalContext();\n      this.editSpec = context.editSpec;\n      if (this.editSpec.status === IscsiLunStatus.Online.toString()) {\n         this.title = VsanUiUtils.getString(\"vsan.configure.iscsiTargets.lun.dialog.online.title\");\n         this.content = VsanUiUtils.getString(\"vsan.configure.iscsiTargets.lun.dialog.online.content\");\n      } else {\n         this.title = VsanUiUtils.getString(\"vsan.configure.iscsiTargets.lun.dialog.offline.title\");\n         this.content = VsanUiUtils.getString(\"vsan.configure.iscsiTargets.lun.dialog.offline.content\");\n      }\n   }\n\n   async ok() {\n      try {\n         this.inProgress = true;\n         let task: ManagedObject =\n               await this.targetMutationProvider.editLun(ManagedObject.contextObject, this.editSpec);\n         VsanUiUtils.closeModalDialog({\n            tasks: [task],\n            refreshTargetList: false,\n            aliasOfChangedTarget: this.editSpec.targetAlias,\n         });\n      } catch (error) {\n         Logger.error(error);\n         this.alertMessages = [error];\n      } finally {\n         this.inProgress = false;\n      }\n   }\n\n   get onlineOperation(): boolean {\n      return this.editSpec.status === IscsiLunStatus.Online.toString();\n   }\n}","<h6>{{\"vsan.configure.iscsiTargets.allowed.initiators.title\" | localized}}</h6>\n<clr-button-group vsan-button-group class=\"btn-link\">\n   <clr-button id=\"add-initiator-action\"\n               name=\"add-initiator-action\"\n               (click)=\"addInitiator()\"\n               class=\"btn btn-sm\"\n               [disabled]=\"isAddActionDisabled\"\n               [vsan-button-title]=\"addInitiatorTitle\">\n      {{\"vsan.configure.iscsiTargets.allowed.initiators.add.label\" | localized}}\n   </clr-button>\n   <clr-button id=\"remove-initiator-action\"\n               name=\"remove-initiator-action\"\n               *ngIf=\"selectedInitiator\"\n               class=\"btn btn-sm\"\n               (click)=\"disallowTargetAccess()\"\n               [disabled]=\"isRemoveActionDisabled\"\n               [vsan-button-title]=\"removeAccessTitle\">\n      {{\"vsan.configure.iscsiTargets.allowed.initiators.remove.label\" | localized}}\n   </clr-button>\n</clr-button-group>\n<clr-datagrid id=\"allowed-initiators\" [clrDgLoading]=\"loading\">\n   <clr-dg-column [clrDgField]=\"'name'\" class=\"name-column\">\n      {{\"vsan.configure.iscsiTargets.allowed.initiators.name\" | localized}}\n      <clr-dg-string-filter [clrDgStringFilter]=\"nameFilter\"></clr-dg-string-filter>\n   </clr-dg-column>\n   <clr-dg-column [clrDgSortBy]=\"typeComparator\">\n      {{\"vsan.configure.iscsiTargets.allowed.initiators.type\" | localized}}\n      <clr-dg-string-filter [clrDgStringFilter]=\"typeFilter\"></clr-dg-string-filter>\n   </clr-dg-column>\n   <clr-dg-row *clrDgItems=\"let initiator of allowedInitiators\"\n               [clrDgItem]=\"initiator\"\n               [class.datagrid-selected]=\"initiator == selectedInitiator\"\n               (click)=\"onSelectionChange(initiator)\">\n      <clr-dg-cell vsan-show-title>{{initiator.name}}</clr-dg-cell>\n      <clr-dg-cell>{{VsanIscsiUtil.getAllowedInitiatorsType(initiator.isGroup)}}</clr-dg-cell>\n   </clr-dg-row>\n   <clr-dg-footer>\n      {{\"vsan.configure.iscsiTargets.allowed.initiators.footer\" | localized: allowedInitiators?.length}}\n   </clr-dg-footer>\n</clr-datagrid>","\nexport interface InitiatorGroupAdditionSpec {\n\n   initiatorGroupName: string;\n   initiatorNames: string[];\n} //class InitiatorGroupAdditionSpec\n\nexport module InitiatorGroupAdditionSpec{\nexport class Factory {\n\n   static create = (initiatorGroupName: string, initiatorNames: string[]): InitiatorGroupAdditionSpec => {\n      return { initiatorGroupName: initiatorGroupName, initiatorNames: initiatorNames, };\n   }\n\n\n} //class Factory\n\n} //module InitiatorGroupAdditionSpec\n","<vsan-delete-prompt id=\"remove-group-initiator-prompt\"\n                    [title]=\"'vsan.configure.iscsiTargets.initiators.remove.dialog.title' | localized\"\n                    [subtitle]=\"groupName\"\n                    [blockButton]=\"isRemoving\"\n                    [(alertMessages)]=\"alertMessages\"\n                    [confirmText]=\"'vsan.common.remove' | localized\"\n                    (onConfirm)=\"ok()\">\n   <span id=\"remove-group-initiator-confirmation\">\n      {{'vsan.configure.iscsiTargets.initiators.remove.confirmation' | localized}}\n   </span>\n</vsan-delete-prompt>\n","/* Copyright 2017 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanIscsiInitiatorGroupMutationProvider} from \"@generated/vsan-iscsi-initiator-group-mutation-provider\";\n\n@Component({\n   templateUrl: \"remove-initiator-group.html\",\n   selector: \"vsan-iscsi-remove-group\",\n})\n\nexport class RemoveInitiatorGroupComponent implements OnInit {\n   private groupName: string;\n   isRemoving: boolean = false;\n   alertMessages: string[];\n\n   constructor (private initiatorGroupMutationProvider: VsanIscsiInitiatorGroupMutationProvider) {}\n\n   ngOnInit() {\n      this.groupName = VsanUiUtils.getModalContext().groupName;\n   }\n\n   ok = (): void => {\n      this.isRemoving = true;\n      this.initiatorGroupMutationProvider.removeInitiatorGroup(ManagedObject.contextObject, this.groupName)\n            .then(() => {\n               this.isRemoving = false;\n               VsanUiUtils.closeModalDialog(true);\n            })\n            .catch((error: string) => {\n               this.isRemoving = false;\n               this.alertMessages = [error];\n            });\n   };\n}\n","<!--Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-create-prompt\n      id=\"add-initiator-group-prompt\"\n      [title]=\"'vsan.configure.iscsiTargets.initiatorGroups.add.dialog.title' | localized\"\n      [subtitle]=\"clusterName\"\n      [blockContent]=\"isCreatingGroup\"\n      [blockButton]=\"blockApplyButton\"\n      [(alertMessages)]=\"alertMessages\"\n      (onConfirm)=\"ok()\">\n   <div class=\"group-name-container\">\n      <form [formGroup]=\"addInitiatorGroup\">\n         <clr-input-container class=\"horizontal-layout label-auto-size\">\n            <label>\n               {{\"vsan.configure.iscsiTargets.initiatorGroups.add.group.name\" | localized}}\n            </label>\n            <input id=\"group-name\" autofocus formControlName=\"groupName\" clrInput name=\"group-name\" type=\"text\">\n            <clr-control-error *clrIfError=\"'validationError'\">\n               {{groupNameErrorMessage}}\n            </clr-control-error>\n         </clr-input-container>\n      </form>\n      <vsan-add-initiators [isRequired]=\"false\" (selectedInitiators)=\"updateSelection($event)\"></vsan-add-initiators>\n   </div>\n</vsan-create-prompt>","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {IscsiLun} from \"@generated/iscsi-lun\";\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\n\nexport class LunIdFilter implements ClrDatagridStringFilterInterface<IscsiLun> {\n   accepts = (lun: IscsiLun, search: string): boolean => {\n      return lun.lunId.toString().indexOf(search) > -1;\n   };\n}","<vsan-edit-prompt\n      [title]=\"'vsan.configure.iscsiTargets.target.batch.reapply.dialog.title' | localized\"\n      [blockButton]=\"!applyButtonEnabled\"\n      [(alertMessages)]=\"alertMessages\"\n      (onConfirm)=\"ok()\">\n   <div class=\"dialog-container\">\n      <div>{{content}}</div>\n      <clr-datagrid [(clrDgSelected)]=\"selectedTargets\">\n         <clr-dg-column class=\"name-column\">\n            {{\"vsan.configure.iscsiTargets.target.list.iqn\" | localized}}\n         </clr-dg-column>\n         <clr-dg-column class=\"name-column\">\n            {{\"vsan.configure.iscsiTargets.target.list.alias\" | localized}}\n         </clr-dg-column>\n         <clr-dg-column class=\"name-column\">\n            {{\"vsan.configure.iscsiTargets.target.list.storage.policy\" | localized}}\n         </clr-dg-column>\n         <clr-dg-row *clrDgItems=\"let target of targets\" [clrDgItem]=\"target\">\n            <!-- IQN -->\n            <clr-dg-cell vsan-show-title>{{target.iqn}}</clr-dg-cell>\n            <!-- Alias -->\n            <clr-dg-cell vsan-show-title>\n               <clr-icon [attr.shape]=\"Icon.ISCSI_TARGET\" aria-hidden=\"true\"></clr-icon>\n               <span>{{target.alias}}</span>\n            </clr-dg-cell>\n            <!-- Storage Policy -->\n            <clr-dg-cell vsan-show-title>\n               <clr-icon [attr.shape]=\"Icon.VM_STORAGE_PROFILE_IMAGE\" aria-hidden=\"true\"></clr-icon>\n               {{target.storagePolicy}}\n            </clr-dg-cell>\n         </clr-dg-row>\n         <clr-dg-footer>{{\"vsan.configure.iscsiTargets.target.footer\" | localized: targets.length}}</clr-dg-footer>\n      </clr-datagrid>\n   </div>\n</vsan-edit-prompt>\n","<!--Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-create-prompt\n      [title]=\"'vsan.configure.iscsiTargets.lun.dialog.add.title' | localized\"\n      [subtitle]=\"targetAlias\"\n      [blockButton]=\"blockApplyButton\"\n      [blockContent]=\"loading\"\n      [(alertMessage)]=\"errorMessage\"\n      [confirmText]=\"'vsan.common.add' | localized\"\n      (onConfirm)=\"ok()\">\n   <form clrForm clrLayout=\"horizontal\" [formGroup]=\"iscsiLun\">\n      <!-- ID -->\n      <clr-input-container>\n         <label id=\"id-label\" for=\"id\" class=\"clr-col-sm-4\">\n            {{\"vsan.configure.iscsiTargets.lun.dialog.id\" | localized}}\n         </label>\n         <input clrInput\n                id=\"id\"\n                name=\"id\"\n                type=\"number\"\n                class=\"clr-col-sm-8\"\n                formControlName=\"id\"/>\n         <clr-control-error *clrIfError=\"'required'\">\n            {{\"vsan.configure.iscsiTargets.lun.dialog.id.empty\" | localized}}\n         </clr-control-error>\n         <clr-control-error *clrIfError=\"'idInvalid'\">\n            {{idError}}\n         </clr-control-error>\n      </clr-input-container>\n      <!-- Alias -->\n      <clr-input-container>\n         <label id=\"alias-label\" for=\"alias\" class=\"clr-col-sm-4\">\n            {{\"vsan.configure.iscsiTargets.lun.dialog.alias\" | localized}}\n         </label>\n         <input clrInput\n                id=\"alias\"\n                name=\"alias\"\n                type=\"text\"\n                class=\"clr-col-sm-8\"\n                formControlName=\"alias\"/>\n         <clr-control-error *clrIfError=\"'aliasInvalid'\">\n            {{aliasError}}\n         </clr-control-error>\n      </clr-input-container>\n      <!-- Storage policy -->\n      <clr-select-container>\n         <label id=\"policy-selector-label\" for=\"policy-selector\" class=\"clr-col-sm-4\">\n            {{\"vsan.configure.iscsiTargets.lun.dialog.storagepolicy\" | localized}}\n         </label>\n         <select clrSelect\n                 id=\"policy-selector\"\n                 name=\"policy-selector\"\n                 class=\"clr-col-sm-8\"\n                 formControlName=\"policyUuid\">\n            <option *ngFor=\"let availPolicy of availablePolicies\"\n                    [ngValue]=\"availPolicy.id\">\n               {{availPolicy.name}}\n            </option>\n         </select>\n         <clr-control-error *clrIfError=\"'required'\">\n            {{\"vsan.configure.iscsiTargets.lun.dialog.add.policy.empty\" | localized}}\n         </clr-control-error>\n         <clr-control-error *clrIfError=\"'policyInvalid'\">\n            {{policyError}}\n         </clr-control-error>\n      </clr-select-container>\n      <!-- Size -->\n      <div formGroupName=\"sizeAndUnits\"\n           class=\"clr-form-control clr-row\"\n           role=\"group\"\n           aria-labelledby=\"size-label\">\n         <label id=\"size-label\" for=\"size\" class=\"clr-control-label clr-col-sm-4\">\n            {{\"vsan.configure.iscsiTargets.lun.dialog.size\" | localized}}\n         </label>\n         <div class=\"clr-control-container clr-col-sm-8 size-container no-label-input-container\">\n            <clr-input-container>\n               <input clrInput\n                      id=\"size\"\n                      name=\"size\"\n                      type=\"number\"\n                      formControlName=\"size\"/>\n               <clr-control-helper>{{sizeHelperMessage}}</clr-control-helper>\n               <clr-control-error *clrIfError=\"'sizeInvalid'\">{{sizeError}}</clr-control-error>\n            </clr-input-container>\n            <clr-select-container>\n               <select clrSelect\n                       id=\"units\"\n                       name=\"units\"\n                       formControlName=\"sizeUnit\">\n                  <option *ngFor=\"let availUnit of availableUnits\"\n                          [ngValue]=\"availUnit\">\n                     {{availUnit.toString()}}\n                  </option>\n               </select>\n            </clr-select-container>\n         </div>\n      </div>\n   </form>\n</vsan-create-prompt>\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {IscsiTarget} from \"@generated/iscsi-target\";\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\n\nexport class IoOwnerHostFilter implements ClrDatagridStringFilterInterface<IscsiTarget> {\n   constructor(private addtionalData: Map<string, string>) {}\n\n   accepts = (target: IscsiTarget, search: string): boolean => {\n      return !!this.addtionalData && this.addtionalData.get(target.ioOwnerHost).indexOf(search) > -1;\n   };\n}","/* Copyright 2017-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {InitiatorGroupTargetRemoveSpec} from '@generated/initiator-group-target-remove-spec';\nimport {VsanIscsiInitiatorGroupMutationProvider} from \"@generated/vsan-iscsi-initiator-group-mutation-provider\";\n\n@Component({\n   templateUrl: \"remove-accessible-target.html\",\n   selector: \"vsan-iscsi-remove-accessible-target\",\n   styleUrls: [\"remove-accessible-target.scss\"]\n})\n\nexport class RemoveAccessibleTargetComponent implements OnInit {\n   targetAlias: string;\n   groupName: string;\n   isRemoving: boolean;\n   alertMessages: string[];\n\n   constructor (private initiatorGroupMutationProvider: VsanIscsiInitiatorGroupMutationProvider) {}\n\n   ngOnInit() {\n      this.groupName = VsanUiUtils.getModalContext().groupName;\n      this.targetAlias = VsanUiUtils.getModalContext().targetAlias;\n   }\n\n   ok = (): void => {\n      let removeSpec: InitiatorGroupTargetRemoveSpec = InitiatorGroupTargetRemoveSpec.Factory.create(\n            this.groupName, this.targetAlias);\n      this.isRemoving = true;\n      this.initiatorGroupMutationProvider.removeTarget(ManagedObject.contextObject, removeSpec)\n            .then(() => {\n               this.isRemoving = false;\n               VsanUiUtils.closeModalDialog(true);\n            })\n            .catch((error: string) => {\n               this.isRemoving = false;\n               this.alertMessages = [error];\n            });\n   };\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Directive, Input, OnInit} from '@angular/core';\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {ClrButton} from \"@clr/angular\";\n\n/**\n * Attribute directive for detecting button title change and storing title.\n * Only used for clr-button in clr-button-group.\n * @title - The title of clr-button\n */\n@Directive({\n   selector: \"clr-button[vsan-button-title]\"\n})\nexport class ButtonTitleDirective implements OnInit {\n\n   constructor(public host: ClrButton) {}\n\n   private _title: string;\n\n   @Input(\"vsan-button-title\")\n   set title(value: string) {\n      if (this._title !== value) {\n         this.titleChange.next(value);\n      }\n      this._title = value;\n   }\n\n   get title(): string {\n      return this._title;\n   }\n\n   private titleChange: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n\n   get titleChangeEvent(): Observable<string> {\n      return this.titleChange.asObservable();\n   }\n\n   ngOnInit(): void {\n      // name should be set, if not provided in template - generate one. ClrButtom#name is used to generate the name\n      // attribute of the markup button. Later the name is used to match the generated markup with the directive.\n      if (!this.host.name) {\n         this.host.name = Math.random().toString();\n      }\n   }\n\n   ngOnDestroy() {\n      this.titleChange.unsubscribe();\n   }\n}","/* Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {IscsiLun} from \"@generated/iscsi-lun\";\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\nimport {VsanIscsiUtil} from \"@util/vsan-iscsi-util\";\n\nexport class LunStateFilter implements ClrDatagridStringFilterInterface<IscsiLun> {\n   accepts = (lun: IscsiLun, search: string): boolean => {\n      return VsanIscsiUtil.getLunStateLabel(lun.status).toLowerCase().indexOf(search) > -1;\n   };\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {PopupListComponent} from \"@component/popup-list/popup-list.component\";\nimport {PopupListItemDirective} from \"@component/popup-list/popup-list-item.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      CommonPipeModule\n   ],\n   declarations: [\n      PopupListComponent,\n      PopupListItemDirective\n   ],\n   exports: [\n      PopupListComponent,\n      PopupListItemDirective\n   ]\n})\nexport class PopupListModule {\n}\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {IscsiLun} from \"@generated/iscsi-lun\";\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\n\nexport class LunSizeFilter implements ClrDatagridStringFilterInterface<IscsiLun> {\n   accepts = (lun: IscsiLun, search: string): boolean => {\n      return VsanUiUtils.formatFileSize(lun.lunSize).toLowerCase().indexOf(search) > -1;\n   };\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterContentInit, ContentChildren, Directive, ElementRef} from \"@angular/core\";\nimport {ClrButton} from \"@clr/angular\";\nimport {ClrButtonBaseDirective, DirectiveHolder} from \"@directive/clr-button-group/clr-button-base.directive\";\n\n/**\n * Applies on every clr-button-group and help to link the clr-button with directive applieds on it,  which extends\n * {@link ClrButtonBaseDirective}, to the actual rendered html button.\n */\n@Directive({\n   selector: \"clr-button-group\",\n})\nexport class ClrButtonGroupCommonDirective implements AfterContentInit {\n\n   @ContentChildren(ClrButton, {descendants: true})\n   clrButtons: ClrButton[];\n\n   constructor(private elRef: ElementRef) {}\n\n   ngAfterContentInit(): void {\n      setTimeout(() => {\n         const allButtons: NodeListOf<HTMLButtonElement> = this.elRef.nativeElement.querySelectorAll(\"button\");\n         // match button with clrButton and notify directives\n         this.clrButtons.filter(clrButton => !!(clrButton as DirectiveHolder).directives)\n               .forEach((clrButton, index) => {\n                  const buttonFound: HTMLButtonElement = this.findButtonByName(clrButton.name, allButtons);\n                  if (buttonFound) {\n                     (clrButton as DirectiveHolder).directives.forEach(directive => {\n                        directive.resolveButton(clrButton, buttonFound, index);\n                     });\n                  }\n               });\n      });\n   }\n\n   private findButtonByName(name: string, buttons: NodeListOf<HTMLButtonElement>): HTMLButtonElement {\n      for (let i: number = 0; i < buttons.length; i++) {\n         if (buttons.item(i).name === name) {\n            return buttons.item(i);\n         }\n      }\n      return null;\n   }\n\n}","<div *ngIf=\"emptySetting\">\n   {{\"vsan.iscsi.target.network.ip.empty\" | localized}}\n</div>\n<ng-container *ngIf=\"!emptySetting\">\n   <ng-container *ngIf=\"networkIpSetting.ipV4Address\">\n      <div id=\"ipv4-address\">\n         <span class=\"label-text\">{{\"vsan.iscsi.target.network.ip.ipv4Address\" | localized}}</span>\n         <span>{{networkIpSetting.ipV4Address}}</span>\n      </div>\n   </ng-container>\n\n   <ng-container *ngIf=\"networkIpSetting.ipV6Address\">\n      <div id=\"ipv6-address\">\n         <span class=\"label-text\">{{\"vsan.iscsi.target.network.ip.ipv6Address\" | localized}}</span>\n         <span>{{networkIpSetting.ipV6Address}}</span>\n      </div>\n   </ng-container>\n</ng-container>","\nexport interface LunOperationSpec {\n\n   targetAlias: string;\n   lunAlias: string;\n   lunId: number;\n   lunSize: number;\n   newLunId: number;\n   status: string;\n   policyId: string;\n} //class LunOperationSpec\n\nexport module LunOperationSpec{\nexport class Factory {\n\n   static create = (targetAlias: string, lunAlias: string, lunId: number, lunSize: number, newLunId: number, status: string, policyId: string): LunOperationSpec => {\n      return { targetAlias: targetAlias, lunAlias: lunAlias, lunId: lunId, lunSize: lunSize, newLunId: newLunId, status: status, policyId: policyId, };\n   }\n\n\n} //class Factory\n\n} //module LunOperationSpec\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AffinitySiteLocation} from \"@generated/affinity-site-location\";\n\nexport class TargetLocation {\n   constructor(public id: AffinitySiteLocation, public label: string, public isVisible: boolean) {}\n}\n","/* Copyright 2017 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {InitiatorGroupInitiatorRemoveSpec} from '@generated/initiator-group-initiator-remove-spec';\nimport {VsanIscsiInitiatorGroupMutationProvider} from \"@generated/vsan-iscsi-initiator-group-mutation-provider\";\n\n@Component({\n   templateUrl: \"remove-initiator.html\",\n   selector: \"vsan-iscsi-remove-initiators\",\n})\n\nexport class RemoveInitiatorComponent implements OnInit {\n   isRemoving: boolean;\n   alertMessages: string[];\n   groupName: string;\n   initiatorName: string;\n\n   constructor (private initiatorGroupMutationProvider: VsanIscsiInitiatorGroupMutationProvider) {}\n\n   ngOnInit() {\n      this.groupName = VsanUiUtils.getModalContext().groupName;\n      this.initiatorName = VsanUiUtils.getModalContext().initiatorName;\n   }\n\n   ok = (): void => {\n      let removeSpec: InitiatorGroupInitiatorRemoveSpec = InitiatorGroupInitiatorRemoveSpec.Factory.create(\n            this.groupName, this.initiatorName);\n      this.isRemoving = true;\n      this.initiatorGroupMutationProvider.removeInitiator(ManagedObject.contextObject, removeSpec)\n            .then(() => {\n               this.isRemoving = false;\n               VsanUiUtils.closeModalDialog(true);\n            })\n            .catch((error: string) => {\n               this.isRemoving = false;\n               this.alertMessages = [error];\n            });\n   };\n}\n","\nexport interface InitiatorGroupInitiatorRemoveSpec {\n\n   initiatorGroupName: string;\n   initiatorName: string;\n} //class InitiatorGroupInitiatorRemoveSpec\n\nexport module InitiatorGroupInitiatorRemoveSpec{\nexport class Factory {\n\n   static create = (initiatorGroupName: string, initiatorName: string): InitiatorGroupInitiatorRemoveSpec => {\n      return { initiatorGroupName: initiatorGroupName, initiatorName: initiatorName, };\n   }\n\n\n} //class Factory\n\n} //module InitiatorGroupInitiatorRemoveSpec\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanIscsiUtil} from \"../../common/util/vsan-iscsi-util\";\nimport {TargetInitiatorSpec} from \"@generated/target-initiator-spec\";\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\n\nexport class IsGroupFilter implements ClrDatagridStringFilterInterface<TargetInitiatorSpec> {\n   accepts = (spec: TargetInitiatorSpec, search: string): boolean => {\n      return VsanIscsiUtil.getAllowedInitiatorsType(spec.isGroup).toLowerCase().indexOf(search) > -1;\n   };\n}","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {ModalBuilder} from \"../../common/util/modal-builder\";\nimport {InitiatorGroupInitiator} from \"@generated/initiator-group-initiator\";\nimport {NameFilter} from \"../filters/name-filter\";\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\n\n@Component({\n   selector: \"vsan-initiator-list\",\n   templateUrl: \"initiator-list.html\",\n   styleUrls: [\"initiator-list.scss\", \"iscsi-common.scss\"],\n})\nexport class InitiatorListComponent {\n\n   VsanUiUtils: typeof VsanUiUtils = VsanUiUtils;\n\n   @Input()\n   initiatorGroupName: string;\n\n   selectedInitiator: InitiatorGroupInitiator;\n\n   private _initiatorList: InitiatorGroupInitiator[];\n\n   @Input()\n   set initiatorList(list: InitiatorGroupInitiator[]) {\n      if (!list || list.length === 0) {\n         this._initiatorList = [];\n         this.selectedInitiator = null;\n      } else {\n         this._initiatorList = list;\n         this.selectedInitiator = this._initiatorList[0];\n      }\n   }\n\n   get initiatorList(): InitiatorGroupInitiator[] {\n      return this._initiatorList;\n   }\n\n   @Input()\n   hasEditPermissions: boolean;\n\n   @Output()\n   private refreshGroupList: EventEmitter<void> = new EventEmitter<void>();\n\n   nameFilter: NameFilter = new NameFilter();\n\n   selectInitiator = (initiator: InitiatorGroupInitiator): void => {\n      if (initiator === this.selectedInitiator) {\n         return;\n      }\n      this.selectedInitiator = initiator;\n   };\n\n   openAddInitiatorsDialog = (): void => {\n      const dialogData: any = {\n         groupName: this.initiatorGroupName,\n         existingInitiators: this.initiatorList,\n      };\n\n      new ModalBuilder(\"iscsiTargets/addInitiators\")\n            .setSize(580, 425)\n            .open(dialogData)\n            .then(() => {\n               this.refreshGroupList.emit();\n            });\n   };\n\n   openRemoveInitiatorDialog = (): void => {\n      new ModalBuilder(\"iscsiTargets/removeInitiator\")\n            .setSize(450, 200)\n            .open({\n               groupName: this.initiatorGroupName,\n               initiatorName: this.selectedInitiator.name,\n            })\n            .then((updateGroupList: boolean) => {\n               if (updateGroupList) {\n                  this.refreshGroupList.emit();\n               }\n            });\n   };\n}\n","/* Copyright 2017 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {NetworkIpSetting} from \"@generated/network-ip-setting\";\n\n@Component({\n   selector: \"iscsi-network-ip-settings\",\n   templateUrl: \"network-ip-settings.html\",\n   styleUrls: [\"network-ip-settings.scss\"],\n})\nexport class IscsiNetworkIpSettingsComponent {\n   @Input()\n   networkIpSetting: NetworkIpSetting;\n\n   get emptySetting(): boolean {\n      return !this.networkIpSetting.ipV4Address && !this.networkIpSetting.ipV6Address;\n   }\n}","<form [formGroup]=\"addInitiatorGroup\" class=\"initiator-name-container\">\n   <clr-input-container class=\"horizontal-layout label-auto-size\">\n      <label id=\"initiator-name-label\">\n         {{\"vsan.configure.iscsiTargets.initiators.add.dialog.name\" | localized}}\n      </label>\n      <input id=\"initiator-name\" clrInput formControlName=\"initiatorName\"\n             name=\"initiator-name\" (keyup.enter)=\"addInitiator()\">\n      <clr-control-error *clrIfError=\"'validationError'\">\n         {{ this.nameErrorMessage }}\n      </clr-control-error>\n      <clr-control-error class=\"name-rules-wrapper\" *clrIfError=\"'incorrectNameRules'\">\n         {{\"vsan.configure.iscsiTargets.target.dialog.iqn.invalid\" | localized}}\n         <ul class='list'>\n            <li>{{\"vsan.configure.iscsiTargets.target.dialog.iqn.requirement1\" | localized}}</li>\n            <li>{{\"vsan.configure.iscsiTargets.target.dialog.iqn.requirement2\" | localized}}</li>\n            <li>{{\"vsan.configure.iscsiTargets.target.dialog.iqn.requirement3\" | localized}}</li>\n         </ul>\n      </clr-control-error>\n   </clr-input-container>\n   <div class=\"add-btn-wrapper\">\n      <button [disabled]=\"!addAllowed()\" id=\"add-initiator-button\" class=\"btn btn-primary btn-sm\" (click)=\"addInitiator()\">\n         {{\"vsan.configure.iscsiTargets.initiators.add.dialog.add.button\" | localized}}\n      </button>\n   </div>\n</form>\n\n<clr-button-group vsan-button-group class=\"btn-link\">\n   <clr-button id=\"remove-initiator-button\"\n               name=\"remove-initiator-button\"\n               [disabled]=\"!removeAllowed()\"\n               (click)=\"removeInitiator()\"\n               class=\"btn btn-sm\"\n               [vsan-button-title]=\"'vsan.configure.iscsiTargets.initiators.add.dialog.remove.descption' | localized\">\n      {{\"vsan.configure.iscsiTargets.initiators.add.dialog.remove.label\" | localized}}\n   </clr-button>\n</clr-button-group>\n<clr-datagrid id=\"initiator-list\">\n   <clr-dg-column>{{\"vsan.configure.iscsiTargets.initiators.add.dialog.name\" | localized}}</clr-dg-column>\n   <clr-dg-row *clrDgItems=\"let initiator of initiators\"\n               [clrDgItem]=\"initiator\"\n               [class.datagrid-selected]=\"initiator == selectedInitiator\"\n               (click)=\"selectInitiator(initiator)\">\n      <clr-dg-cell>{{initiator}}</clr-dg-cell>\n   </clr-dg-row>\n   <clr-dg-footer>{{\"vsan.configure.iscsiTargets.initiators.footer\" | localized: initiators?.length}}</clr-dg-footer>\n</clr-datagrid>","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit, ViewChild} from \"@angular/core\";\nimport {ClrForm} from \"@clr/angular\";\nimport {\n   AbstractControl,\n   FormBuilder,\n   FormControl,\n   FormGroup,\n   ValidationErrors,\n   ValidatorFn,\n   Validators,\n} from \"@angular/forms\";\nimport {IscsiTarget} from \"@generated/iscsi-target\";\nimport {VsanIscsiTargetMutationProvider} from \"@generated/vsan-iscsi-target-mutation-provider\";\nimport {StoragePolicyData} from \"@generated/storage-policy-data\";\nimport {TargetOperationSpec} from \"@generated/target-operation-spec\";\nimport {VsanIscsiAuthSpec} from \"@generated/vsan-iscsi-auth-spec\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanIscsiUtil} from \"@util/vsan-iscsi-util\";\nimport {VsanIscsiTargetConfig} from \"@generated/vsan-iscsi-target-config\";\nimport IscsiTargetAuthType = VsanIscsiTargetConfig.IscsiTargetAuthType;\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {TargetLocation} from \"../model/target-location.data\";\nimport {VsanIscsiTargetPropertyProvider} from \"@generated/vsan-iscsi-target-property-provider\";\nimport {TargetModificationData} from \"@generated/target-modification-data\";\nimport {AffinitySiteLocation} from \"@generated/affinity-site-location\";\n\n/**\n * The component is used to add/edit an iscsi target object.\n */\n@Component({\n   selector: \"vsan-target-modification\",\n   templateUrl: \"target-modification.html\",\n   styleUrls: [\"target-modification.scss\"],\n})\nexport class TargetModificationComponent implements OnInit {\n   VsanIscsiUtil: typeof VsanIscsiUtil = VsanIscsiUtil;\n\n   readonly IQN_CONTROL_NAME: string = \"iqn\";\n   readonly PORT_CONTROL_NAME: string = \"port\";\n   readonly ALIAS_CONTROL_NAME: string = \"alias\";\n   readonly POLICY_CONTROL_NAME: string = \"policy\";\n   readonly NETWORK_CONTROL_NAME: string = \"network\";\n   readonly LOCATION_CONTROL_NAME: string = \"location\";\n   readonly AUTH_SPEC_CONTROL_NAME: string = \"authSpec\";\n   readonly ALIAS_VALIDATION: string = \"aliasInvalid\";\n   private readonly IQN_VALIDATION: string = \"iqnInvalid\";\n   private readonly POLICY_VALIDATION: string = \"policyInvalid\";\n\n   title: string;\n\n   private defaultHeight: number = 400;\n   private chapHeight: number = 580;\n   private chapMutualHeight: number = 680;\n   private iqnConventionHeight: number = 45;\n   private locationHeight: number = 75;\n\n   private clusterRef: ManagedObject;\n   loading: boolean = false;\n   originalTarget: IscsiTarget = null;\n\n   isTargetLocationSupported: boolean = false;\n   private domains: DomainOrHostData[];\n\n   locationAlert: string;\n   errorMessages: string[];\n   policyErrorMessage: string;\n   aliasErrorMessage: string;\n\n   private iscsiTargetConfig: VsanIscsiTargetConfig = null;\n   availableNetworks: string[];\n   availablePolicies: StoragePolicyData[];\n   locations: TargetLocation[] = [];\n\n   iscsiTarget: FormGroup;\n\n   @ViewChild(ClrForm, {static: true})\n   iscsiSettingsForm: ClrForm;\n\n   constructor(private targetMutationProvider: VsanIscsiTargetMutationProvider,\n         private iscsiTargetPropertyProvider: VsanIscsiTargetPropertyProvider,\n         private formBuilder: FormBuilder) {\n      this.iscsiTarget = this.formBuilder.group({\n         [this.IQN_CONTROL_NAME]: new FormControl(\"\", [this.iqnValidator]),\n         [this.ALIAS_CONTROL_NAME]: new FormControl(\"\", [Validators.required, this.aliasValidator]),\n         [this.POLICY_CONTROL_NAME]: new FormControl(\"\", [this.policyValidator]),\n         [this.NETWORK_CONTROL_NAME]: new FormControl(\"\", [Validators.required]),\n         [this.PORT_CONTROL_NAME]: new FormControl({ values: VsanIscsiUtil.DEFAULT_PORT}, [\n            Validators.required,\n            Validators.min(VsanIscsiUtil.TCP_PORT_MIN),\n            Validators.max(VsanIscsiUtil.TCP_PORT_MAX)]),\n         [this.AUTH_SPEC_CONTROL_NAME]: new FormControl(\"\"),\n      });\n   }\n\n   async ngOnInit(): Promise<void> {\n      this.clusterRef = ManagedObject.contextObject;\n      this.originalTarget = VsanUiUtils.getModalContext();\n\n      if (this.originalTarget) {\n         this.title = VsanUiUtils.getString(\"vsan.configure.iscsiTargets.target.dialog.edit.title\");\n      } else {\n         this.title = VsanUiUtils.getString(\"vsan.configure.iscsiTargets.target.dialog.add.title\");\n      }\n\n      this.loading = true;\n      this.iscsiTargetPropertyProvider.getTargetModificationData(this.clusterRef, !this.originalTarget)\n            .then((data: TargetModificationData) => {\n               this.loading = false;\n\n               this.domains = data.domains;\n               this.availablePolicies = data.policies;\n               this.availableNetworks = data.networks;\n               this.iscsiTargetConfig = data.iscsiTargetConfig;\n               this.isTargetLocationSupported = data.isTargetLocationSupported;\n\n               this.updateDialogHeights();\n\n               if (this.isTargetLocationSupported) {\n                  this.setLocations();\n               }\n\n               if (this.originalTarget) {\n                  this.fillFormWithExistingData(this.originalTarget);\n               } else {\n                  this.fillFormDefaults();\n               }\n               this.onPolicyChange();\n\n            }).catch(e => {\n               this.handleError(e);\n            });\n   }\n\n   private setLocations = () => {\n      let preferredDomainName: string;\n      let secondaryDomainName: string;\n      this.domains\n         .filter(domain => !domain.isHost)\n         .forEach(domain => {\n         if (domain.isPreferred) {\n            preferredDomainName = domain.label;\n         } else {\n            secondaryDomainName = domain.label;\n         }\n      });\n\n      this.locations = [\n         new TargetLocation(\n            AffinitySiteLocation.NONE,\n            VsanIscsiUtil.getTargetLocationLabel(AffinitySiteLocation.NONE),\n            true),\n         new TargetLocation(AffinitySiteLocation.PREFERRED_DOMAIN,\n            VsanIscsiUtil.getTargetLocationLabel(AffinitySiteLocation.PREFERRED_DOMAIN, preferredDomainName),\n            true),\n         new TargetLocation(AffinitySiteLocation.NON_PREFERRED_DOMAIN,\n            VsanIscsiUtil.getTargetLocationLabel(AffinitySiteLocation.NON_PREFERRED_DOMAIN, null, secondaryDomainName),\n            true,\n      )];\n   };\n\n   /**\n    * When the user adds a target, fill in the form using the default data.\n    */\n   private fillFormDefaults = (): void => {\n      let port: number;\n      let network: string;\n      let authSpec: VsanIscsiAuthSpec;\n\n      if (this.iscsiTargetConfig) {\n         port = this.iscsiTargetConfig.port;\n         network = this.iscsiTargetConfig.network;\n         authSpec = VsanIscsiAuthSpec.Factory.create(\n               this.iscsiTargetConfig.authType ?\n                     this.iscsiTargetConfig.authType.toString() : IscsiTargetAuthType.NoAuth.toString(),\n               this.iscsiTargetConfig.outgoingUser,\n               this.iscsiTargetConfig.outgoingSecret,\n               this.iscsiTargetConfig.incomingUser,\n               this.iscsiTargetConfig.incomingSecret);\n      } else {\n         port = VsanIscsiUtil.DEFAULT_PORT;\n         if (this.availableNetworks && this.availableNetworks.length > 0) {\n            network = this.availableNetworks[0];\n         }\n         authSpec = VsanIscsiAuthSpec.Factory.create(IscsiTargetAuthType.NoAuth.toString(), null, null, null,\n               null);\n      }\n\n      this.iscsiTarget.patchValue({\n         [this.PORT_CONTROL_NAME]: port,\n         [this.NETWORK_CONTROL_NAME]: network,\n         [this.AUTH_SPEC_CONTROL_NAME]: authSpec,\n         [this.POLICY_CONTROL_NAME]: this.getDefaultPolicy(),\n      });\n      if (this.isTargetLocationSupported) {\n         this.iscsiTarget.addControl(this.LOCATION_CONTROL_NAME, new FormControl(AffinitySiteLocation.NONE));\n      }\n   };\n\n   /**\n    * When the users edits a target, fill in the form using original target data.\n    */\n   private fillFormWithExistingData = (target: IscsiTarget): void => {\n      this.iscsiTarget.patchValue({\n         [this.IQN_CONTROL_NAME]: target.iqn,\n         [this.ALIAS_CONTROL_NAME]: target.alias,\n         [this.PORT_CONTROL_NAME]: target.port,\n         [this.NETWORK_CONTROL_NAME]: target.networkInterface,\n         [this.POLICY_CONTROL_NAME]: this.getPolicyByUuid(target.vmStoragePolicyUuid),\n         [this.AUTH_SPEC_CONTROL_NAME]: target.authSpec,\n      });\n      if (this.isTargetLocationSupported) {\n         this.iscsiTarget.addControl(this.LOCATION_CONTROL_NAME, new FormControl(target.affinityLocation));\n      }\n   };\n\n   onPolicyChange = () => {\n      if (!this.isTargetLocationSupported) {\n         return;\n      }\n\n      // Only display related site option when the selected policy locality is preferred or non-preferred.\n      const siteLocation: AffinitySiteLocation = this.getAffinitySiteLocation(this.getPolicy().locality);\n      this.locations.forEach(location => {\n         location.isVisible = this.isPolicyWithLocality ? location.id === siteLocation : true;\n      });\n\n      // Change target location to related site if the selected policy has locality.\n      if (this.isPolicyWithLocality) {\n         this.iscsiTarget.patchValue({\n            [this.LOCATION_CONTROL_NAME]: siteLocation,\n         });\n      }\n\n      this.updateLocationAlert();\n   };\n\n   /**\n    * Get the AffinitySiteLocation option for the the select element.\n    * We only need to check if the site configured in policy is preferred or secondary,\n    * and only display the preferred or secondary site according to the policy setting (PR 2713993).\n    * In other cases the select element is hidden or it displays all the 3 options\n    */\n   private getAffinitySiteLocation(locality: string): AffinitySiteLocation {\n      switch (locality) {\n         case StoragePolicyLocality.PREFERRED: return AffinitySiteLocation.PREFERRED_DOMAIN;\n         case StoragePolicyLocality.SECONDARY: return AffinitySiteLocation.NON_PREFERRED_DOMAIN;\n         default: return null;\n      }\n   }\n\n   updateLocationAlert = () => {\n      if (this.isPolicyWithLocality) {\n         switch (this.getPolicy().locality) {\n            case StoragePolicyLocality.PREFERRED:\n               this.locationAlert = VsanUiUtils.getString(\n                     \"vsan.configure.iscsiTargets.target.dialog.info.policyWithLocality.preferred\");\n               return;\n            case StoragePolicyLocality.SECONDARY:\n               this.locationAlert = VsanUiUtils.getString(\n                     \"vsan.configure.iscsiTargets.target.dialog.info.policyWithLocality.secondary\");\n               return;\n         }\n      } else if (this.getLocation() === AffinitySiteLocation.PREFERRED_DOMAIN ||\n            this.getLocation() === AffinitySiteLocation.NON_PREFERRED_DOMAIN) {\n         this.locationAlert = VsanUiUtils.getString(\"vsan.configure.iscsiTargets.target.dialog.info.sameSite\");\n      } else {\n         this.locationAlert = null;\n      }\n   };\n\n   get isPolicyWithLocality(): boolean {\n      return !!this.getPolicy() && this.getPolicy().locality &&\n            this.getPolicy().locality !== StoragePolicyLocality.NONE;\n   }\n\n   ok = () => {\n      this.iscsiTarget.get(this.AUTH_SPEC_CONTROL_NAME).updateValueAndValidity();\n      if (this.iscsiTarget.invalid) {\n         // Make sure any errors from policy preselection are displayed\n         this.iscsiSettingsForm.markAsTouched();\n         return;\n      }\n\n      this.loading = true;\n      if (this.originalTarget) {\n         const newAlias: string = (this.getAlias() === this.originalTarget.alias) ? null : this.getAlias();\n         const targetLocation: AffinitySiteLocation =\n               this.isTargetLocationSupported && this.getLocation() !== this.originalTarget.affinityLocation ?\n                     this.getLocation() : null;\n         const editSpec: TargetOperationSpec = TargetOperationSpec.Factory.create(\n               this.originalTarget.alias,\n               this.getAuthSpec(),\n               this.originalTarget.iqn,\n               this.getNetwork(),\n               newAlias,\n               this.getPort(),\n               this.getPolicy().id,\n               targetLocation,\n         );\n         this.targetMutationProvider.editTarget(this.clusterRef, editSpec).then(this.close).catch(this.handleError);\n      } else {\n         // When selecting None option from dialog, use \"null\" as the location to create a new iSCSI target,\n         // use \"None\" only when changing location from preferred or non-preferred to None\n         // because \"None\" will trigger the target location cleanup in backend, but \"null\" won't.\n         const targetLocation: AffinitySiteLocation =\n               this.isTargetLocationSupported && this.getLocation() !== AffinitySiteLocation.NONE ?\n                     this.getLocation() : null;\n         const addSpec: TargetOperationSpec = TargetOperationSpec.Factory.create(\n               this.getAlias(),\n               this.getAuthSpec(),\n               this.getIqn(),\n               this.getNetwork(),\n               null,\n               this.getPort(),\n               this.getPolicy().id,\n               targetLocation,\n         );\n         this.targetMutationProvider.addTarget(this.clusterRef, addSpec).then(this.close).catch(this.handleError);\n      }\n   };\n\n   private getAlias(): string {\n      return this.iscsiTarget && this.iscsiTarget.get(this.ALIAS_CONTROL_NAME).value;\n   }\n\n   private getAuthSpec(): VsanIscsiAuthSpec {\n      return this.iscsiTarget && this.iscsiTarget.get(this.AUTH_SPEC_CONTROL_NAME).value;\n   }\n\n   private getIqn(): string {\n      return this.iscsiTarget && this.iscsiTarget.get(this.IQN_CONTROL_NAME).value;\n   }\n\n   private getNetwork(): string {\n      return this.iscsiTarget && this.iscsiTarget.get(this.NETWORK_CONTROL_NAME).value;\n   }\n\n   private getPort(): number {\n      return this.iscsiTarget && this.iscsiTarget.get(this.PORT_CONTROL_NAME).value;\n   }\n\n   private getPolicy(): StoragePolicyData {\n      return this.iscsiTarget && this.iscsiTarget.get(this.POLICY_CONTROL_NAME).value;\n   }\n\n   private getLocation(): AffinitySiteLocation {\n      return this.iscsiTarget && this.iscsiTarget.get(this.LOCATION_CONTROL_NAME) &&\n            this.iscsiTarget.get(this.LOCATION_CONTROL_NAME).value;\n   }\n\n   private iqnValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n      if (!this.iscsiTarget) {\n         return null;\n      }\n      // When editing target, the target iqn is not editable, do not need to verify it.\n      if (this.originalTarget) {\n         return null;\n      }\n      // If the user is adding a target, verify the target iqn.\n      if (!VsanIscsiUtil.validateIqn(control.value)) {\n         return {[this.IQN_VALIDATION]: {value: control.value}};\n      }\n      return null;\n   };\n\n   private aliasValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n      if (!this.iscsiTarget) {\n         return null;\n      }\n\n      this.aliasErrorMessage = VsanIscsiUtil.getAliasValidationMessage(control.value);\n      if (this.aliasErrorMessage) {\n         return {[this.ALIAS_VALIDATION]: {value: control.value}};\n      }\n   };\n\n   private policyValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n      if (!this.iscsiTarget) {\n         return null;\n      }\n      this.policyErrorMessage = VsanIscsiUtil.validatePolicy(control.value,\n            VsanUiUtils.getString(\"vsan.configure.iscsiTargets.target.dialog.edit.policy.empty\"));\n      if (this.policyErrorMessage) {\n         return {[this.POLICY_VALIDATION]: {value: control.value}};\n      }\n      return null;\n   };\n\n   private getPolicyByUuid(policyUuid: string): StoragePolicyData {\n      if (!policyUuid) {\n         return null;\n      }\n\n      return this.availablePolicies.find(policy => {\n         return policy.id === policyUuid;\n      });\n   }\n\n   private getDefaultPolicy(): StoragePolicyData {\n      return this.availablePolicies.find(policy => {\n         return policy.isDefault;\n      });\n   }\n\n   private handleError = (error: string): void => {\n      this.errorMessages = [error];\n      this.loading = false;\n   };\n\n   get blockApplyButton(): boolean {\n      return this.loading\n            || this.errorMessages && this.errorMessages.length > 0\n            || (this.iscsiTarget.touched && this.iscsiTarget.invalid);\n   }\n\n   handleAuthChange = (type: IscsiTargetAuthType): void => {\n      // Change the dialog height according to the authentication type.\n      switch (type) {\n         case IscsiTargetAuthType.CHAP:\n            VsanUiUtils.setModalDialogHeight(this.chapHeight);\n            break;\n         case IscsiTargetAuthType.CHAP_Mutual:\n            VsanUiUtils.setModalDialogHeight(this.chapMutualHeight);\n            break;\n         default:\n            VsanUiUtils.setModalDialogHeight(this.defaultHeight);\n      }\n      // After changing the authentication selection, the form has been touched, but sometimes its touched property\n      // has no chagne (for example, changing authentication from None to CHAP directly), so reset it manually.\n      this.iscsiTarget.markAllAsTouched();\n   };\n\n   private updateDialogHeights(): void {\n      if (!this.originalTarget) {\n         this.defaultHeight += this.iqnConventionHeight;\n         this.chapHeight += this.iqnConventionHeight;\n         this.chapMutualHeight += this.iqnConventionHeight;\n      }\n      if (this.isTargetLocationSupported) {\n         this.defaultHeight += this.locationHeight;\n         this.chapHeight += this.locationHeight;\n         this.chapMutualHeight += this.locationHeight;\n      }\n   }\n\n   private close = (taskRef: ManagedObject = null) => {\n      VsanUiUtils.closeModalDialog(taskRef);\n   };\n}\n\nexport enum StoragePolicyLocality {\n   NONE = \"None\",\n   PREFERRED = \"Preferred Fault Domain\",\n   SECONDARY = \"Secondary Fault Domain\",\n}\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {InitiatorGroup} from \"@generated/initiator-group\";\nimport {TargetInitiatorSpec} from \"@generated/target-initiator-spec\";\nimport {InitiatorGroupInitiator} from \"@generated/initiator-group-initiator\";\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\n\nexport class NameFilter implements ClrDatagridStringFilterInterface<InitiatorGroup | TargetInitiatorSpec | InitiatorGroupInitiator> {\n   accepts = (obj: InitiatorGroup | TargetInitiatorSpec | InitiatorGroupInitiator, search: string): boolean => {\n      return obj.name !== null && obj.name.toLowerCase().indexOf(search) >= 0;\n   };\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {VsanBreadcrumbNavComponent} from \"./vsan-breadcrumb-nav.component\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\n\n@NgModule({\n   imports: [CommonModule, ClarityModule, CommonDirectiveModule, CommonPipeModule],\n   declarations: [VsanBreadcrumbNavComponent],\n   exports: [\n      VsanBreadcrumbNavComponent,\n   ],\n})\nexport class VsanBreadcrumbModule {}\n","<!--Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-question-prompt [title]=\"title\"\n                      [blockButton]=\"inProgress\"\n                      [subtitle]=\"editSpec.targetAlias\"\n                      [(alertMessages)]=\"alertMessages\"\n                      [confirmStyle]=\"(onlineOperation ? 'btn-success' : 'btn-danger')\"\n                      (onConfirm)=\"ok()\">\n   <div class=\"dialog-container\">\n      <div>{{content}}</div>\n      <div *ngIf=\"!onlineOperation\">{{'vsan.common.confirm.question' | localized}}</div>\n   </div>\n</vsan-question-prompt>\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ClrDatagridComparatorInterface} from \"@clr/angular\";\nimport {IscsiTarget} from \"@generated/iscsi-target\";\nimport {VsanIscsiUtil} from \"@util/vsan-iscsi-util\";\n\nexport class TargetLocationComparator implements ClrDatagridComparatorInterface<IscsiTarget> {\n   constructor(private preferredDomainName: string, private secondaryDomainName: string) {}\n\n   compare = (t1: IscsiTarget, t2: IscsiTarget): number => {\n      return VsanIscsiUtil.getTargetLocationLabel(t1.affinityLocation, this.preferredDomainName,\n            this.secondaryDomainName).localeCompare(\n                  VsanIscsiUtil.getTargetLocationLabel(t2.affinityLocation, this.preferredDomainName,\n                        this.secondaryDomainName));\n   };\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanObject} from \"@generated/vsan-object\";\nimport {VsanIscsiUtil} from \"@util/vsan-iscsi-util\";\nimport {ClrDatagridComparatorInterface} from \"@clr/angular\";\n\nexport class ComplianceResultComparator implements ClrDatagridComparatorInterface<VsanObject> {\n   compare = (o1: VsanObject, o2: VsanObject): number => {\n      return VsanIscsiUtil.getComplianceLabel(o1.complianceResult).localeCompare(\n            VsanIscsiUtil.getComplianceLabel(o2.complianceResult));\n   };\n}","<h6>{{\"vsan.configure.iscsiTargets.initiators.title\" | localized}}</h6>\n<clr-button-group vsan-button-group class=\"btn-link\">\n   <clr-button id=\"add-initiators-action\"\n               name=\"add-initiators-action\"\n               class=\"btn btn-sm\"\n               [disabled]=\"!hasEditPermissions\"\n               (click)=\"openAddInitiatorsDialog()\"\n               [vsan-button-title]=\"VsanUiUtils.getActionTitle(hasEditPermissions,\n                     'vsan.configure.iscsiTargets.initiators.add.description')\">\n      {{\"vsan.configure.iscsiTargets.initiators.add.label\" | localized}}\n   </clr-button>\n   <clr-button id=\"remove-initiators-action\"\n               name=\"remove-initiators-action\"\n               *ngIf=\"selectedInitiator\"\n               [disabled]=\"!hasEditPermissions\"\n               class=\"btn btn-sm\"\n               (click)=\"openRemoveInitiatorDialog()\"\n               [vsan-button-title]=\"VsanUiUtils.getActionTitle(hasEditPermissions,\n                     'vsan.configure.iscsiTargets.initiators.remove.description')\">\n      {{\"vsan.configure.iscsiTargets.initiators.remove.label\" | localized}}\n   </clr-button>\n</clr-button-group>\n<clr-datagrid [(clrDgSingleSelected)]=\"selectedInitiator\">\n   <clr-dg-column [clrDgField]=\"'name'\" class=\"name-column\">\n      {{\"vsan.configure.iscsiTargets.initiators.list.name\" | localized}}\n      <clr-dg-string-filter [clrDgStringFilter]=\"nameFilter\"></clr-dg-string-filter>\n   </clr-dg-column>\n   <clr-dg-row *clrDgItems=\"let initiator of initiatorList\"\n               [clrDgItem]=\"initiator\"\n               (click)=\"selectInitiator(initiator)\">\n      <!-- Initiator Name -->\n      <clr-dg-cell vsan-show-title>\n         {{ initiator.name }}\n      </clr-dg-cell>\n   </clr-dg-row>\n   <!-- Datagrid Footer -->\n   <clr-dg-footer>{{\"vsan.configure.iscsiTargets.initiators.footer\" | localized: initiatorList.length}}</clr-dg-footer>\n</clr-datagrid>","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {IscsiLun} from \"@generated/iscsi-lun\";\nimport {IscsiTarget} from \"@generated/iscsi-target\";\nimport {InitiatorGroupTarget} from \"@generated/initiator-group-target\";\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\n\nexport class AliasFilter implements ClrDatagridStringFilterInterface<IscsiLun | IscsiTarget | InitiatorGroupTarget> {\n   accepts = (obj: IscsiLun | IscsiTarget | InitiatorGroupTarget, search: string): boolean => {\n      return obj.alias !== null && obj.alias.toLowerCase().indexOf(search) >= 0;\n   };\n}","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ContentChildren, Directive, ElementRef, Input} from \"@angular/core\";\nimport {ClrButton} from \"@clr/angular\";\nimport {ButtonTitleDirective} from \"./button-title.directive\";\n\n/**\n * Attribute directive used to dynamically arrange child buttons, align some horizontally and\n * put the others into the drop-down list, this directive also add title attribute to the buttons.\n * It can only used on clr-button-group and there should be clr-button in the button group.\n * @maximumInlineActions - The maximum value of inline buttons.\n */\n@Directive({\n   selector: \"clr-button-group[vsan-button-group]\",\n})\nexport class ButtonGroupDirective {\n\n   private static readonly TOGGLE_MENU_BUTTON_SELECTOR: string = \"button.btn.dropdown-toggle\";\n   private static readonly VISIBLE_BUTTON_ELEMENTS_SELECTOR: string = \"button\";\n   private static readonly IN_MENU_BUTTON_ELEMENTS_SELECTOR: string = \"div.clr-button-group-menu > button\";\n\n   // Set the maximum value to 10 to display all buttons inline when there is enough space.\n   private _maximumInlineActions: number = 10;\n\n   @Input(\"vsan-button-group\")\n   set maximumInlineActions(value: number) {\n      if (!!value) {\n         this._maximumInlineActions = value;\n      }\n   }\n\n   private _buttonTitleDirectives: ButtonTitleDirective[] = [];\n\n   @ContentChildren(ButtonTitleDirective, {descendants: true})\n   set buttons(value: ButtonTitleDirective[]) {\n      this._buttonTitleDirectives = value;\n      this._buttonTitleDirectives.forEach(titleDirective => {\n         // Update button title when its title in directive changes.\n         titleDirective.titleChangeEvent.subscribe(() => {\n            setTimeout(this.updateButtonTitles);\n         });\n      });\n\n      // when action buttons with directive are changed (added / removed) some of them may go to the menu with\n      // additional actions. There is no other way found to handle toggle menu event, but click on the toggle button.\n      this.subscribeToggleButtonClick();\n   }\n\n   private _btns: ClrButton[];\n\n   @ContentChildren(ClrButton, {descendants: true})\n   set clrButtons(btns: ClrButton[]) {\n      this._btns = btns;\n      this.updateInMenuButtons();\n   }\n\n   constructor(private elRef: ElementRef) {\n   }\n\n   private updateInMenuButtons(): void {\n      const groupWithMenu: boolean = this._btns.length > this._maximumInlineActions;\n      this._btns.forEach((btn, index) => {\n         if (groupWithMenu) {\n            // When the number of buttons exceeds the maximum and the button overflows, place the button in the menu.\n            btn.inMenu = index >= this._maximumInlineActions - 1;\n         } else {\n            btn.inMenu = false;\n         }\n      });\n   }\n\n   private updateButtonTitles = (): void => {\n      const allButtons: HTMLButtonElement[] = this.getVisibleButtons().concat(this.getInMenuButtons());\n      if (!allButtons.length) {\n         return;\n      }\n\n      // if there is a rendered button for the directive - update its title.\n      this._buttonTitleDirectives.forEach(titleDirective => {\n         allButtons.forEach((button: HTMLElement) => {\n            if (button.getAttribute(\"name\") === titleDirective.host.name) {\n               button.title = titleDirective.title;\n            }\n         });\n      });\n   };\n\n   private subscribeToggleButtonClick(): void {\n      // If there is menu with additional buttons, find the toggle button and update button names on click.\n      setTimeout(() => {\n         const toggleButton: HTMLElement | null = this.getToggleButton();\n\n         // if there is a toggle button set function to handle the click event only once.\n         if (toggleButton && !toggleButton.onclick) {\n            toggleButton.onclick = this.updateButtonTitles;\n         }\n      });\n   }\n\n   // the buttons are visible buttons in button group, toggle menu button\n   private getVisibleButtons(): HTMLButtonElement[] {\n      return Array.from(this.elRef.nativeElement.querySelectorAll(\n            ButtonGroupDirective.VISIBLE_BUTTON_ELEMENTS_SELECTOR));\n   }\n\n   // inMenu buttons are rendered outside of the elRef, get them directly from the document\n   private getInMenuButtons(): HTMLButtonElement[] {\n      return Array.from(this.elRef.nativeElement.ownerDocument.querySelectorAll(\n            ButtonGroupDirective.IN_MENU_BUTTON_ELEMENTS_SELECTOR));\n   }\n\n   private getToggleButton(): HTMLElement | null {\n      return this.elRef.nativeElement.querySelector(ButtonGroupDirective.TOGGLE_MENU_BUTTON_SELECTOR);\n   }\n}","/* Copyright 2017-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanIscsiTargetMutationProvider} from \"@generated/vsan-iscsi-target-mutation-provider\";\nimport {TargetInitiatorSpec} from \"@generated/target-initiator-spec\";\nimport {TargetInitiatorRemoveSpec} from \"@generated/target-initiator-remove-spec\";\n\n@Component({\n   templateUrl: \"remove-target-initiator.html\",\n   selector: \"vsan-iscsi-remove-allowed-initiator\",\n})\nexport class RemoveTargetInitiatorComponent implements OnInit {\n   initiator: TargetInitiatorSpec;\n   targetAlias: string;\n\n   alertMessages: string[] = null;\n   buzy: boolean = false;\n\n   constructor(private mutationProvider: VsanIscsiTargetMutationProvider) {}\n\n   ngOnInit(): void {\n      this.initiator = VsanUiUtils.getModalContext().initiator;\n      this.targetAlias = VsanUiUtils.getModalContext().targetAlias;\n   }\n\n   apply = (): void => {\n      let clusterRef: ManagedObject = ManagedObject.contextObject;\n      let removeSpec: TargetInitiatorRemoveSpec =\n            TargetInitiatorRemoveSpec.Factory.create(this.targetAlias, [this.initiator.name]);\n      this.buzy = true;\n      this.mutationProvider.disallowInitiatorAccess(clusterRef, removeSpec)\n            .then(() => VsanUiUtils.closeModalDialog(true))\n            .catch(this.handleError);\n   }\n\n   private handleError = (error: any) => {\n      this.buzy = false;\n      this.alertMessages = [error];\n   }\n}","<vsan-delete-prompt\n      [title]=\"'vsan.configure.iscsiTargets.allowed.initiators.remove.dlg.title' | localized\"\n      [subtitle]=\"targetAlias\"\n      [confirmText]=\"'vsan.configure.iscsiTargets.allowed.initiators.remove.label' | localized\"\n      [blockButton]=\"buzy\"\n      [(alertMessages)]=\"alertMessages\"\n      [confirmText]=\"'vsan.common.remove' | localized\"\n      (onConfirm)=\"apply()\">\n   <div id=\"confirmation\">\n      {{'vsan.configure.iscsiTargets.allowed.initiators.remove.confirm' | localized}}\n   </div>\n</vsan-delete-prompt>\n","/* Copyright 2017-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {TargetLunRemoveSpec} from '@generated/target-lun-remove-spec';\nimport {VsanIscsiTargetMutationProvider} from \"@generated/vsan-iscsi-target-mutation-provider\";\n\n@Component({\n   templateUrl: \"remove-luns.html\",\n   styleUrls: [\"remove-luns.scss\"],\n   selector: \"vsan-iscsi-remove-luns\",\n})\nexport class RemoveLunsComponent implements OnInit {\n   isRemoving: boolean;\n   alertMessage: string;\n   dialogContent: string;\n   targetAlias: string;\n   lunIds: number[];\n\n   constructor (private targetMutationProvider: VsanIscsiTargetMutationProvider) {}\n\n   ngOnInit() {\n      this.targetAlias = VsanUiUtils.getModalContext().targetAlias;\n      this.lunIds = VsanUiUtils.getModalContext().lunIds;\n      if (this.lunIds.length === 1) {\n         this.dialogContent =\n               VsanUiUtils.getString(\"vsan.configure.iscsiTargets.lun.remove.dialog.confirmation.singular\");\n      } else {\n         this.dialogContent =\n               VsanUiUtils.getString(\"vsan.configure.iscsiTargets.lun.remove.dialog.confirmation.plural\",\n                     this.lunIds.length);\n      }\n   }\n\n   ok = (): void => {\n      let removeSpec: TargetLunRemoveSpec = TargetLunRemoveSpec.Factory.create(this.targetAlias, this.lunIds);\n      this.isRemoving = true;\n      this.targetMutationProvider.removeLun(ManagedObject.contextObject, removeSpec)\n            .then(this.close)\n            .catch((error: string) => {\n               this.isRemoving = false;\n               this.alertMessage = error;\n            });\n   };\n\n   close = (tasks: ManagedObject[] = null): void => {\n      this.isRemoving = false;\n      VsanUiUtils.closeModalDialog({\n            \"tasks\": tasks,\n            \"refreshTargetList\": true,\n            \"aliasOfChangedTarget\": this.targetAlias});\n   };\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {IscsiTargetServiceComponent} from \"./view/iscsi-target-service.component\";\nimport {AddAccessibleTargetComponent} from \"./action/add-accessible-target.component\";\nimport {AddTargetInitiatorComponent} from \"./action/add-target-initiator.component\";\nimport {AddInitiatorGroupComponent} from \"./action/add-initiator-group.component\";\nimport {AddInitiatorsToGroupComponent} from \"./action/add-initiators-to-group.component\";\nimport {AddLunComponent} from \"./action/add-lun.component\";\nimport {EditLunComponent} from \"./action/edit-lun.component\";\nimport {RemoveAccessibleTargetComponent} from \"./action/remove-accessible-target.component\";\nimport {RemoveTargetInitiatorComponent} from \"./action/remove-target-initiator.component\";\nimport {RemoveInitiatorGroupComponent} from \"./action/remove-initiator-group.component\";\nimport {RemoveInitiatorComponent} from \"./action/remove-initiator.component\";\nimport {RemoveLunsComponent} from \"./action/remove-luns.component\";\nimport {RemoveTargetComponent} from \"./action/remove-target.component\";\nimport {TargetModificationComponent} from \"./action/target-modification.component\";\nimport {BatchPolicyReapplyComponent} from \"./action/batch-policy-reapply.component\";\nimport {VsanCommonModule} from \"../common/vsan-common.module\";\nimport {AddInitiatorsComponent} from \"./action/add-initiators.component\";\nimport {EditLunStateComponent} from \"./action/edit-lun-state.component\";\nimport {IscsiNetworkIpSettingsComponent} from \"./view/network-ip-settings.component\";\nimport {LunListComponent} from \"./view/lun-list.component\";\nimport {AllowedInitiatorsComponent} from \"./view/allowed-initiators.component\";\nimport {TargetsViewComponent} from \"./view/iscsi-targets-view.component\";\nimport {InitiatorListComponent} from \"./view/initiator-list.component\";\nimport {AccessibleTargetsComponent} from \"./view/accessible-targets.component\";\nimport {InitiatorGroupsViewComponent} from \"./view/initiator-groups-view.component\";\nimport {IscsiAuthenticationModule} from \"@component/iscsi-authentication/authentication.module\";\n\nconst routes: Routes = [\n   {\n      path: \"\",\n      component: IscsiTargetServiceComponent\n   },\n   {\n      path: \"addAccessibleTarget\",\n      component: AddAccessibleTargetComponent\n   },\n   {\n      path: \"addAllowedInitiator\",\n      component: AddTargetInitiatorComponent\n   },\n   {\n      path: \"addInitiatorGroup\",\n      component: AddInitiatorGroupComponent\n   },\n   {\n      path: \"addInitiators\",\n      component: AddInitiatorsToGroupComponent\n   },\n   {\n      path: \"editLunState\",\n      component: EditLunStateComponent\n   },\n   {\n      path: \"addLun\",\n      component: AddLunComponent\n   },\n   {\n      path: \"editLun\",\n      component: EditLunComponent\n   },\n   {\n      path: \"removeLuns\",\n      component: RemoveLunsComponent\n   },\n   {\n      path: \"removeAccessibleTarget\",\n      component: RemoveAccessibleTargetComponent\n   },\n   {\n      path: \"removeAllowedInitiator\",\n      component: RemoveTargetInitiatorComponent\n   },\n   {\n      path: \"removeInitiatorGroup\",\n      component: RemoveInitiatorGroupComponent\n   },\n   {\n      path: \"removeInitiator\",\n      component: RemoveInitiatorComponent\n   },\n   {\n      path: \"removeTarget\",\n      component: RemoveTargetComponent\n   },\n   {\n      path: \"targetModification\",\n      component: TargetModificationComponent\n   },\n   {\n      path: \"batchPolicyReapply\",\n      component: BatchPolicyReapplyComponent\n   }];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      ClarityModule,\n      VsanCommonModule,\n      IscsiAuthenticationModule,\n      RouterModule.forChild(routes),\n   ],\n   declarations: [\n      IscsiTargetServiceComponent,\n      AddAccessibleTargetComponent,\n      AddTargetInitiatorComponent,\n      AddInitiatorGroupComponent,\n      AddInitiatorsToGroupComponent,\n      AddLunComponent,\n      EditLunComponent,\n      EditLunStateComponent,\n      RemoveAccessibleTargetComponent,\n      RemoveTargetInitiatorComponent,\n      RemoveInitiatorGroupComponent,\n      RemoveInitiatorComponent,\n      RemoveLunsComponent,\n      RemoveTargetComponent,\n      TargetModificationComponent,\n      BatchPolicyReapplyComponent,\n      IscsiTargetServiceComponent,\n      InitiatorGroupsViewComponent,\n      AccessibleTargetsComponent,\n      InitiatorListComponent,\n      TargetsViewComponent,\n      AllowedInitiatorsComponent,\n      LunListComponent,\n      IscsiNetworkIpSettingsComponent,\n      AddInitiatorsComponent,\n   ],\n})\nexport class IscsiTargetsModule {\n}","<!-- Copyright 2017-2022 VMware, Inc. All rights reserved. VMware Confidential -->\n<vsan-create-prompt\n      [title]=\"'vsan.configure.iscsiTargets.allowed.initiators.add.dlg.title' | localized : targetAlias\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"loading\"\n      [confirmText]=\"'vsan.common.add' | localized\"\n      [(alertMessages)]=\"alertMessages\"\n      (onConfirm)=\"ok()\" >\n   <div class=\"add-allowed-initiators\">\n      <div>\n         <clr-radio-wrapper>\n            <input id=\"everyone-access\"\n                   clrRadio\n                   type=\"radio\"\n                   name=\"initiator-type\"\n                   [(ngModel)]=\"selectedInitiatorType\"\n                   [value]=\"allowedType.EVERYONE\"\n                   checked />\n            <label id=\"everyone-access-label\"\n                   for=\"everyone-access\">\n               {{\"vsan.configure.iscsiTargets.allowed.initiators.type.everyone\" | localized}}\n            </label>\n         </clr-radio-wrapper>\n         <clr-control-helper class=\"nested-control\">\n            {{\"vsan.configure.iscsiTargets.allowed.initiators.type.everyone.desc\" | localized}}\n         </clr-control-helper>\n      </div>\n\n      <div>\n         <clr-radio-wrapper>\n            <input id=\"initiator-access\"\n                   #addInitiatorRadioBtn\n                   clrRadio\n                   type=\"radio\"\n                   name=\"initiator-type\"\n                   [(ngModel)]=\"selectedInitiatorType\"\n                   [value]=\"allowedType.INITIATOR\">\n            <label id=\"initiator-access-label\"\n                   for=\"initiator-access\">\n               {{\"vsan.configure.iscsiTargets.allowed.initiators.type.initiator\" | localized}}\n            </label>\n         </clr-radio-wrapper>\n         <clr-input-container class=\"nested-control horizontal-layout control-full-width label-auto-size\">\n            <input clrInput\n                   id=\"initiators-input\"\n                   name=\"initiators-input\"\n                   maxlength=\"256\"\n                   title=\"{{'vsan.configure.iscsiTargets.allowed.initiators.type.initiator.desc' | localized}}\"\n                   [(ngModel)]=\"initiatorsInputStr\"\n                   [disabled]=\"selectedInitiatorType != allowedType.INITIATOR\"\n                   [vsan-auto-focus]=\"addInitiatorRadioBtn.checked\">\n            <clr-control-helper>\n               {{\"vsan.configure.iscsiTargets.allowed.initiators.type.initiator.label\" | localized}}\n            </clr-control-helper>\n         </clr-input-container>\n      </div>\n\n      <div id=\"initiator-grid-wrapper\">\n         <clr-radio-wrapper>\n            <input id=\"initator-group-access\"\n                   clrRadio\n                   type=\"radio\"\n                   name=\"initiator-type\"\n                   [(ngModel)]=\"selectedInitiatorType\"\n                   [value]=\"allowedType.GROUP\">\n            <label id=\"initator-group-access-label\"\n                   for=\"initator-group-access\">\n               {{\"vsan.configure.iscsiTargets.allowed.initiators.type.group.full\" | localized}}\n            </label>\n         </clr-radio-wrapper>\n         <clr-datagrid id=\"initiator-groups\"\n                       [ngClass]=\"{'disable-action': selectedInitiatorType != allowedType.GROUP}\"\n                       [clrDgLoading]=\"loading\"\n                       [(clrDgSelected)]=\"selectedInitiatorGroups\">\n            <clr-dg-column>\n               {{\"vsan.configure.iscsiTargets.initiatorGroups.list.name\" | localized}}\n            </clr-dg-column>\n            <clr-dg-column>\n               {{\"vsan.configure.iscsiTargets.initiatorGroups.list.count\" | localized}}\n            </clr-dg-column>\n            <clr-dg-row *clrDgItems=\"let group of initiatorGroupList\"\n                        [clrDgItem]=\"group\">\n               <clr-dg-cell>{{group.name}}</clr-dg-cell>\n               <clr-dg-cell>{{group.initiators.length}}</clr-dg-cell>\n            </clr-dg-row>\n            <clr-dg-footer>\n               {{\"vsan.configure.iscsiTargets.initiatorGroups.footer\" | localized:\n                (initiatorGroupList && initiatorGroupList.length) ? initiatorGroupList.length.toString() :\"0\"}}\n            </clr-dg-footer>\n         </clr-datagrid>\n      </div>\n   </div>\n</vsan-create-prompt>","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {IscsiTarget} from \"@generated/iscsi-target\";\nimport {VsanIscsiUtil} from \"../../common/util/vsan-iscsi-util\";\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\n\nexport class AuthTypeFilter implements ClrDatagridStringFilterInterface<IscsiTarget> {\n   accepts = (target: IscsiTarget, search: string): boolean => {\n      return VsanIscsiUtil.getAuthenticationLabel(target.authType).toLowerCase().indexOf(search) >= 0;\n   };\n}","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {Icon} from \"@util/icon\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {VsanIscsiUtil} from \"@util/vsan-iscsi-util\";\nimport {VsanObject} from \"@generated/vsan-object\";\nimport {IscsiTarget} from \"@generated/iscsi-target\";\nimport {NetworkIpSetting} from \"@generated/network-ip-setting\";\nimport {TargetOperationSpec} from \"@generated/target-operation-spec\";\nimport {IscsiContext} from \"@navigation/context/iscsi-context\";\nimport {VsanIscsiTargetPropertyProvider} from \"@generated/vsan-iscsi-target-property-provider\";\nimport {VsanIscsiTargetMutationProvider} from \"@generated/vsan-iscsi-target-mutation-provider\";\nimport {NetworkIpConfigProvider} from \"@generated/network-ip-config-provider\";\nimport {Logger} from \"@util/logger\";\n// Import filters\nimport {IqnFilter} from \"../filters/iqn-filter\";\nimport {AliasFilter} from \"../filters/alias-filter\";\nimport {LunCountFilter} from \"../filters/lun-count-filter\";\nimport {NetworkInterfaceFilter} from \"../filters/network-interface-filter\";\nimport {IoOwnerHostFilter} from \"../filters/io-owner-host-filter\";\nimport {PortFilter} from \"../filters/port-filter\";\nimport {HealthFilter} from \"../filters/health-filter\";\nimport {StoragePolicyFilter} from \"../filters/storage-policy-filter\";\nimport {ComplianceResultFilter} from \"../filters/compliance-result-filter\";\nimport {AuthTypeFilter} from \"../filters/auth-type-filter\";\nimport {TargetLocationFilter} from \"../filters/target-location-filter\";\nimport {ClrDatagridSortOrder} from \"@clr/angular\";\n// Import comparators\nimport {IoOwnerHostComparator} from \"../comparators/io-owner-host-comparator\";\nimport {HealthComparator} from \"../comparators/health-comparator\";\nimport {ComplianceResultComparator} from \"../comparators/compliance-result-comparator\";\nimport {AuthTypeComparator} from \"../comparators/auth-type-comparator\";\nimport {TargetLocationComparator} from \"../comparators/target-location-comparator\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {TargetListData} from \"@generated/target-list-data\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\nimport {AffinitySiteLocation} from \"@generated/affinity-site-location\";\n\n@Component({\n   selector: \"vsan-iscsi-targets-view\",\n   templateUrl: \"iscsi-targets-view.html\",\n   styleUrls: [\"iscsi-targets-view.scss\", \"iscsi-common.scss\"],\n})\nexport class TargetsViewComponent implements OnInit {\n   Icon: typeof Icon = Icon;\n   VsanUiUtils: typeof VsanUiUtils = VsanUiUtils;\n   VsanIscsiUtil: typeof VsanIscsiUtil = VsanIscsiUtil;\n\n   loading: boolean = false;\n   alertMessage: string;\n\n   @Input()\n   selectedTarget: IscsiTarget;\n\n   @Output()\n   selectedTargetChange: EventEmitter<IscsiTarget> = new EventEmitter<IscsiTarget>();\n\n   @Input()\n   hasComputePrivileges: boolean = false;\n\n   @Input()\n   readPoliciesPermission: boolean = false;\n   // cache the ipSettings\n   ipConfigDataMap: Map<string, NetworkIpSetting> = new Map<string, NetworkIpSetting>();\n\n   ascSort: ClrDatagridSortOrder = ClrDatagridSortOrder.ASC;\n\n   isTargetLocationSupported: boolean;\n   private clusterRef: ManagedObject;\n   private hostUidToHostIpMap: Map<string, string> = new Map<string, string>();\n   private preferredDomainName: string;\n   private secondaryDomainName: string;\n   private preferredDomainHosts: string[] = [];\n   private secondaryDomainHosts: string[] = [];\n\n   private _targetList: IscsiTarget[];\n\n   set targetList(list: IscsiTarget[]) {\n      if (!list || list.length === 0) {\n         this._targetList = [];\n      } else {\n         this._targetList = list;\n      }\n   }\n\n   get targetList(): IscsiTarget[] {\n      return this._targetList;\n   }\n\n   // iSCSI target list filter\n   iqnFilter: IqnFilter = new IqnFilter();\n   aliasFilter: AliasFilter = new AliasFilter();\n   lunCountFilter: LunCountFilter = new LunCountFilter();\n   networkInterfaceFilter: NetworkInterfaceFilter = new NetworkInterfaceFilter();\n   ioOwnerHostFilter: IoOwnerHostFilter = new IoOwnerHostFilter(this.hostUidToHostIpMap);\n   portFilter: PortFilter = new PortFilter();\n   healthFilter: HealthFilter = new HealthFilter();\n   storagePolicyFilter: StoragePolicyFilter = new StoragePolicyFilter();\n   complianceResultFilter: ComplianceResultFilter = new ComplianceResultFilter();\n   authTypeFilter: AuthTypeFilter = new AuthTypeFilter();\n   targetLocationFilter: TargetLocationFilter;\n\n   // iSCSI target list comparator\n   ioOwnerHostComparator: IoOwnerHostComparator = new IoOwnerHostComparator(this.hostUidToHostIpMap);\n   healthComparator: HealthComparator = new HealthComparator();\n   complianceResultComparator: ComplianceResultComparator = new ComplianceResultComparator();\n   authTypeComparator: AuthTypeComparator = new AuthTypeComparator();\n   targetLocationComparator: TargetLocationComparator;\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   constructor(private iscsiTargetProvider: VsanIscsiTargetPropertyProvider,\n         private targetMutationProvider: VsanIscsiTargetMutationProvider,\n         private ipDataProvider: NetworkIpConfigProvider,\n         private taskSvc: TaskMonitorService) {\n   }\n\n   ngOnInit(): void {\n      this.clusterRef = ManagedObject.contextObject;\n      this.fetch();\n   }\n\n   fetch(): void {\n      this.loading = true;\n      this.iscsiTargetProvider.getTargetListData(this.clusterRef).then((data: TargetListData) => {\n         this.loading = false;\n         this.targetList = data.targets || [];\n\n         Object.keys(data.hostUidToHostIpMap).map(hostUid => {\n            this.hostUidToHostIpMap.set(hostUid, data.hostUidToHostIpMap[hostUid]);\n         });\n\n         this.isTargetLocationSupported = data.isTargetLocationSupported;\n         if (this.isTargetLocationSupported) {\n            this.preferredDomainName = data.preferredDomainName;\n            this.secondaryDomainName = data.secondaryDomainName;\n            this.preferredDomainHosts = data.preferredDomainHostUids;\n            this.secondaryDomainHosts = data.secondaryDomainHostUids;\n\n            this.targetLocationFilter = new TargetLocationFilter(this.preferredDomainName, this.secondaryDomainName);\n            this.targetLocationComparator =\n                  new TargetLocationComparator(this.preferredDomainName, this.secondaryDomainName);\n         }\n\n         if (this.targetList.length) {\n            this.queryVnicIpAddress();\n\n            const context: IscsiContext = VsanUiUtils.getNavigationData();\n            if (context && context.targetAlias) {\n               // Target is passed from context, select it\n               this.selectTargetByName(context.targetAlias);\n            } else if (this.selectedTarget && this.selectedTarget.alias) {\n               // Update selected target reference on refresh\n               this.selectTargetByName(this.selectedTarget.alias);\n            } else {\n               // Select first target on initial load\n               this.selectTarget(this.targetList[0]);\n            }\n         } else {\n            this.selectTarget(null);\n         }\n\n         this.srOnlyMessage = VsanUiUtils.getString(\"vsan.screenReader.message.page.loaded.andTabSelected\",\n               VsanUiUtils.getString(\"vsan.iscsiTargets\"),\n               VsanUiUtils.getString(\"vsan.configure.iscsiTargetService.targets\"));\n      }).catch((error: string) => {\n         this.loading = false;\n         this.targetList = [];\n         this.alertMessage = VsanUiUtils.getString(\"vsan.common.error.dataExtraction\");\n         Logger.error(\"Unable to fetch data: \" + error);\n      });\n   }\n\n   private queryVnicIpAddress = () => {\n      const hostRefs: ManagedObject[] = [];\n      const vnicNames: string[] = [];\n      const targetsOnConnectedHosts: IscsiTarget[] =\n            this.targetList.filter(target => this.isValidHost(target.ioOwnerHost));\n      if (targetsOnConnectedHosts.length === 0) {\n         return;\n      }\n\n      targetsOnConnectedHosts.forEach((target) => {\n         const ioOwnerHost: string = target.ioOwnerHost;\n         hostRefs.push(ManagedObject.fromUid(ioOwnerHost));\n         vnicNames.push(target.networkInterface);\n      });\n\n      this.ipDataProvider.getIpSetting(hostRefs, vnicNames).then((networkIpSettings: NetworkIpSetting[]) => {\n         if (networkIpSettings.length > 0) {\n            networkIpSettings.forEach((setting, index) => {\n               const key: string = this.getTargetNetworkKey(targetsOnConnectedHosts[index]);\n               this.ipConfigDataMap.set(key, setting);\n            });\n         }\n      }).catch((error) => {\n         this.alertMessage = VsanUiUtils.getString(\"vsan.common.error.dataExtraction\");\n         Logger.error(\"Unable to query the network ip settings: \" + error);\n      });\n   };\n\n   selectTargetByName = (targetAlias: string) => {\n      if (!this.targetList || !this.targetList.length) {\n         return;\n      }\n      // The previously selectedTarget might be removed from the view, so check if it is still in the targets list.\n      const target: IscsiTarget = this.targetList.find(currentTarget => currentTarget.alias === targetAlias);\n      this.selectTarget(target ? target : this.targetList[0]);\n   };\n\n   selectTarget = (target: IscsiTarget) => {\n      this.selectedTarget = target;\n      this.selectedTargetChange.emit(this.selectedTarget);\n   };\n\n   getIoOwnerHostUuid(target: IscsiTarget): string {\n      return this.isValidHost(target.ioOwnerHost) ? target.ioOwnerHost : null;\n   }\n\n   getIoOwnerHostName(target: IscsiTarget): string {\n      const uuid: string = this.getIoOwnerHostUuid(target);\n      return this.hostUidToHostIpMap.get(uuid);\n   }\n\n   openAddTargetDialog = () => {\n      this.openTargetModificationDialog(true);\n   };\n\n   openEditTargetDialog = () => {\n      this.openTargetModificationDialog(false);\n   };\n\n   private openTargetModificationDialog = (addTarget: boolean) => {\n      let target: IscsiTarget = null;\n      if (addTarget) {\n         // Open add target dialog.\n      } else {\n         // Open edit target dialog.\n         target = this.selectedTarget;\n      }\n      new ModalBuilder(\"iscsiTargets/targetModification\")\n            .setSize(800, 400)\n            .open(target)\n            .then(this.updateTargetList);\n   };\n\n   get reapplyActionEnabled(): boolean {\n      return this.hasComputePrivileges && this.hasMismatchComplianceResult(this.selectedTarget);\n   }\n\n   get reapplyActionTitle(): string {\n      if (!this.hasComputePrivileges) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      } else if (!this.hasMismatchComplianceResult(this.selectedTarget)) {\n         return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.target.reapply.disabled.description\");\n      } else {\n         return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.target.reapply.description\");\n      }\n   }\n\n   get batchReapplyActionEnabled(): boolean {\n      return this.hasComputePrivileges && this.targetList.some(target => this.hasMismatchComplianceResult(target));\n   }\n\n   get batchReapplyActionTitle(): string {\n      if (!this.hasComputePrivileges) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      }\n      if (!this.targetList.some(target => this.hasMismatchComplianceResult(target))) {\n         return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.target.batch.reapply.disabled.description\");\n      }\n      return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.target.batch.reapply.description\");\n   }\n\n   /**\n    * Reapply storage policy to the iSCSI target.\n    */\n   reapplyPolicy = () => {\n      const targetSpec: TargetOperationSpec = TargetOperationSpec.Factory.create(this.selectedTarget.alias, null, null,\n            null, null, null, this.selectedTarget.vmStoragePolicyUuid, null);\n      this.targetMutationProvider.editTarget(this.clusterRef, targetSpec).then(this.updateTargetList)\n            .catch((error: string) => {\n               this.alertMessage = VsanUiUtils.getString(\"vsan.configure.iscsiTargets.target.reapply.error\");\n            });\n   };\n\n   /**\n    * Reapply storage policy to the iSCSI targets by batch.\n    */\n   batchReapplyPolicies = () => {\n      const mismatchTargets: IscsiTarget[] = this.targetList.filter(target => this.hasMismatchComplianceResult(target));\n      new ModalBuilder(\"iscsiTargets/batchPolicyReapply\")\n            .setSize(700, 388)\n            .open({\n               targets: mismatchTargets,\n            })\n            .then(this.updateTargetList);\n   };\n\n   private hasMismatchComplianceResult = (target: any): boolean => {\n      const targetObject: VsanObject = target as VsanObject;\n      return targetObject && targetObject.storagePolicy && targetObject.complianceResult &&\n            targetObject.complianceResult.mismatch;\n   };\n\n   openRemoveTargetDialog = () => {\n      new ModalBuilder(\"iscsiTargets/removeTarget\")\n            .setSize(500, 190)\n            .open({\n               targetAlias: this.selectedTarget.alias,\n               lunCount: this.selectedTarget.lunCount,\n            })\n            .then(this.updateTargetList);\n   };\n\n   updateTargetList = (tasks: ManagedObject | ManagedObject[]) => {\n      if (!tasks) {\n         return;\n      }\n      if (Array.isArray(tasks)) {\n         if (tasks.length === 0) {\n            return;\n         }\n      } else {\n         tasks = [tasks];\n      }\n      const promises: Promise<any>[] = tasks.map(t => this.taskSvc.getAwaitResult(t));\n      Promise.all(promises).then(() => this.fetch()).catch((error: string) => {\n         this.alertMessage = error;\n      });\n   };\n\n   handleDataFailed = (error: string) => {\n      this.alertMessage = error;\n   };\n\n   /**\n    * Update the LUNs of specified target after adding or removing luns.\n    */\n   updateTarget = (aliasOfChangedTarget: string) => {\n      this.iscsiTargetProvider.getIscsiTarget(this.clusterRef, aliasOfChangedTarget)\n            .then((refreshedTarget: IscsiTarget) => {\n               this.targetList.forEach((target: IscsiTarget) => {\n                  if (target.iqn === refreshedTarget.iqn) {\n                     target.lunCount = refreshedTarget.lunCount;\n                  }\n               });\n            })\n            .catch((error: string) => {\n               this.alertMessage = VsanUiUtils.getString(\"vsan.common.error.dataExtraction\");\n               Logger.error(\"Unable to query a specific iSCSI target with name \" + aliasOfChangedTarget + \": \" + error);\n            });\n   };\n\n   complianceResultVisible = (target: any): boolean => {\n      return target.storagePolicy && target.complianceResult;\n   };\n\n   getDomainName(ioOwnerHost: string): string {\n      if (this.preferredDomainHosts.indexOf(ioOwnerHost) > -1) {\n         return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.target.list.io.owner.preferred\");\n      }\n      if (this.secondaryDomainHosts.indexOf(ioOwnerHost) > -1) {\n         return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.target.list.io.owner.host.secondary\");\n      }\n      return null;\n   }\n\n   isIoOwnerHostInDesiredDomain(target: IscsiTarget): boolean {\n      switch (target.affinityLocation) {\n         case AffinitySiteLocation.PREFERRED_DOMAIN:\n            return this.preferredDomainHosts.indexOf(target.ioOwnerHost) > -1;\n         case AffinitySiteLocation.NON_PREFERRED_DOMAIN:\n            return this.secondaryDomainHosts.indexOf(target.ioOwnerHost) > -1;\n         default:\n            return false;\n      }\n   }\n\n   getTargetLocationShape(target: IscsiTarget): Icon {\n      if (target.affinityLocation === AffinitySiteLocation.NONE) {\n         return Icon.CLR_INFO_STANDARD_ICON_SHAPE;\n      }\n      return this.isIoOwnerHostInDesiredDomain(target) ?\n            Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE : Icon.CLR_WARN_STANDARD_ICON_SHAPE;\n   }\n\n   getTargetLocationLabel(location: AffinitySiteLocation): string {\n      return VsanIscsiUtil.getTargetLocationLabel(location, this.preferredDomainName, this.secondaryDomainName);\n   }\n\n   getTargetLocationIconClass(target: IscsiTarget): Icon {\n      if (target.affinityLocation === AffinitySiteLocation.NONE) {\n         return null;\n      }\n      return this.isIoOwnerHostInDesiredDomain(target) ?\n            Icon.clrIconShapeClassMap[Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE] :\n            Icon.clrIconShapeClassMap[Icon.CLR_WARN_STANDARD_ICON_SHAPE];\n   }\n\n   getTargetLocationTooltip(location: AffinitySiteLocation): string {\n      if (location === AffinitySiteLocation.NONE) {\n         return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.target.list.location.tooltip.either\");\n      }\n      return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.target.list.location.tooltip.mismatch\");\n   }\n\n   signpostClicked = (event: MouseEvent) => {\n      /**\n       * Stops the event bubble so checking the signpost content won't change the dagrid selection\n       */\n      if (event) {\n         event.cancelBubble = true;\n         event.stopPropagation();\n         event.stopImmediatePropagation();\n      }\n   };\n\n   /**\n    * Host can have several vnics, so we should use host and the vnic as the key\n    */\n   getTargetNetworkKey = (target: IscsiTarget): string => {\n      return target.ioOwnerHost + \":\" + target.networkInterface;\n   };\n\n   isValidHost = (ioOwnerHost: string): boolean => {\n      /**\n       * ioOwnerHost is uid of a ManagedObject,\n       * for example \"urn:vmomi:HostSystem:host-15:10c24de3-e917-4a6a-abcd-7a03bf226f0c\"\n       * if a host is disconnected, the ioOwnerHost is a uuid, for example \"10c24de3-e917-4a6a-abcd-7a03bf226f0c\"\n       * in this case this is not a valid host because we cannot get the detailed host information\n       */\n      if (ioOwnerHost) {\n         return ioOwnerHost.split(\":\").length === 5;\n      }\n      return false;\n   };\n}\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {IscsiLun} from \"@generated/iscsi-lun\";\nimport {ClrDatagridComparatorInterface} from \"@clr/angular\";\n\nexport class LunStateComparator implements ClrDatagridComparatorInterface<IscsiLun> {\n   compare = (l1: IscsiLun, l2: IscsiLun): number => {\n      return l1.status.toString().localeCompare(l2.status.toString());\n   };\n}","/* Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit, ViewChild} from \"@angular/core\";\nimport {\n   AbstractControl,\n   FormBuilder,\n   FormControl,\n   FormGroup,\n   ValidationErrors,\n   ValidatorFn,\n   Validators,\n} from \"@angular/forms\";\nimport {ClrForm} from \"@clr/angular\";\nimport {IscsiLunStatus} from \"@generated/iscsi-lun-status\";\nimport {LunOperationSpec} from \"@generated/lun-operation-spec\";\nimport {PbmDataProvider} from \"@generated/pbm-data-provider\";\nimport {StoragePolicyData} from \"@generated/storage-policy-data\";\nimport {VsanIscsiTargetMutationProvider} from \"@generated/vsan-iscsi-target-mutation-provider\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {StorageSizeMetric} from \"@util/storage-size-metric\";\nimport {VsanIscsiUtil} from \"@util/vsan-iscsi-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"add-lun.html\",\n   styleUrls: [\"lun-operation-dialog.scss\"],\n   selector: \"vsan-iscsi-add-lun\",\n})\nexport class AddLunComponent implements OnInit {\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   @ErrorMessage()\n   errorMessage: string;\n\n   targetAlias: string;\n   availableUnits: StorageSizeMetric[] = [StorageSizeMetric.MB, StorageSizeMetric.GB, StorageSizeMetric.TB];\n   availablePolicies: StoragePolicyData[];\n   iscsiLun: FormGroup;\n   idError: string;\n   sizeError: string;\n   aliasError: string;\n   policyError: string;\n\n   private suggestedLunId: number;\n   private clusterRef: ManagedObject;\n\n   @ViewChild(ClrForm, {static: true})\n   lunSettingsForm: ClrForm;\n\n   constructor(private formBuilder: FormBuilder,\n         private pbmProvider: PbmDataProvider,\n         private targetMutationProvider: VsanIscsiTargetMutationProvider) {\n      this.iscsiLun = this.formBuilder.group({\n         id: new FormControl(null, [Validators.required, this.idValidator]),\n         alias: new FormControl(\"\", [this.aliasValidator]),\n         policyUuid: new FormControl(\"\", [Validators.required, this.policyValidator]),\n         sizeAndUnits: this.formBuilder.group({\n            size: new FormControl(null, Validators.required),\n            sizeUnit: new FormControl(StorageSizeMetric.GB),\n         }, {validators: this.sizeValidator}),\n      });\n   }\n\n   @Loader()\n   async ngOnInit(): Promise<void> {\n      this.clusterRef = ManagedObject.contextObject;\n      this.targetAlias = VsanUiUtils.getModalContext().targetAlias;\n      this.suggestedLunId = VsanUiUtils.getModalContext().suggestedLunId;\n      this.availablePolicies = await this.pbmProvider.getStoragePolicies(this.clusterRef);\n      this.fillOutForm();\n   }\n\n   private fillOutForm = () => {\n      const defaultStoragePolicyUuid: string = this.availablePolicies?.find(policy => policy.isDefault)?.id;\n\n      this.iscsiLun.patchValue({\n         id: this.suggestedLunId,\n         policyUuid: defaultStoragePolicyUuid,\n      });\n   };\n\n   @Loader()\n   async ok(): Promise<void> {\n      if (this.iscsiLun.invalid) {\n         // Verify inputs when user opens the dialog and click Add button directly.\n         this.lunSettingsForm.markAsTouched();\n         return;\n      }\n\n      const addSpec: LunOperationSpec = LunOperationSpec.Factory.create(\n            this.targetAlias,\n            this.getAlias(),\n            this.getId(),\n            this.getSize().value * this.getSizeUnit().value.value,\n            VsanIscsiUtil.UNCHANGED_NEW_LUN_ID_VALUE,\n            IscsiLunStatus.Online.toString(),\n            this.getPolicyUuid());\n\n      const task: ManagedObject = await this.targetMutationProvider.createLun(this.clusterRef, addSpec);\n      this.close(task);\n   }\n\n   close = (task: ManagedObject = null) => {\n      VsanUiUtils.closeModalDialog({\n         \"tasks\": [task],\n         \"refreshTargetList\": true,\n         \"aliasOfChangedTarget\": this.targetAlias,\n      });\n   };\n\n   get blockApplyButton(): boolean {\n      return this.loading\n            || !!this.errorMessage\n            || (this.iscsiLun && this.iscsiLun.touched && this.iscsiLun.invalid);\n   }\n\n   get sizeHelperMessage(): string {\n      return VsanIscsiUtil.getLunSizeHelperMessage(this.getSizeUnit().value);\n   }\n\n   private getId(): number {\n      return this.iscsiLun && this.iscsiLun.get(\"id\").value;\n   }\n\n   private getAlias(): string {\n      return this.iscsiLun && this.iscsiLun.get(\"alias\").value;\n   }\n\n   private getPolicyUuid(): string {\n      return this.iscsiLun && this.iscsiLun.get(\"policyUuid\").value;\n   }\n\n   private getSize(): AbstractControl {\n      return this.iscsiLun?.get(\"sizeAndUnits\")?.get(\"size\");\n   }\n\n   private getSizeUnit(): AbstractControl {\n      return this.iscsiLun?.get(\"sizeAndUnits\")?.get(\"sizeUnit\");\n   }\n\n   private idValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n      if (!this.iscsiLun) {\n         return null;\n      }\n\n      this.idError = VsanIscsiUtil.getLunIdValidationMessage(control.value);\n      if (this.idError) {\n         return {\"idInvalid\": {value: control.value}};\n      }\n      return null;\n   };\n\n   private aliasValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n      if (!this.iscsiLun) {\n         return null;\n      }\n\n      // LUN alias can be empty.\n      if (control.value) {\n         this.aliasError = VsanIscsiUtil.getAliasValidationMessage(control.value);\n         if (this.aliasError) {\n            return {\"aliasInvalid\": {value: control.value}};\n         }\n      }\n\n      return null;\n   };\n\n   private policyValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n      if (!this.iscsiLun || !this.availablePolicies || this.availablePolicies.length === 0) {\n         return null;\n      }\n\n      const selectedPolicy: StoragePolicyData = this.availablePolicies.find(policy => {\n         return policy.id === control.value;\n      });\n      if (selectedPolicy) {\n         this.policyError = VsanIscsiUtil.getLunPolicyValidationMessage(selectedPolicy);\n         if (this.policyError) {\n            return {\"policyInvalid\": {value: control.value}};\n         }\n      }\n   };\n\n   private sizeValidator: ValidatorFn = (): ValidationErrors | null => {\n      if (!this.iscsiLun) {\n         return null;\n      }\n\n      const size: AbstractControl = this.getSize();\n      const sizeUnit: AbstractControl = this.getSizeUnit();\n      this.sizeError = VsanIscsiUtil.getLunSizeValidationMessage(size.value, sizeUnit.value.value);\n      if (this.sizeError) {\n         const invalidSizeError: ValidationErrors = {\n            \"sizeInvalid\": {value: size.value},\n         };\n\n         // Set error to the size form control in order to show the error with <clr-control-error> element\n         size.setErrors(invalidSizeError);\n         return invalidSizeError;\n      } else {\n         // Remove error from size form control to hide the <clr-control-error> element\n         size.setErrors(null);\n         return null;\n      }\n   };\n}\n","<vsan-create-prompt\n      id=\"add-initiators-prompt\"\n      [title]=\"'vsan.configure.iscsiTargets.initiators.add.dialog.title' | localized\"\n      [subtitle]=\"groupName\"\n      [confirmText]=\"'vsan.common.add' | localized\"\n      [blockButton]=\"blockFinishButton\"\n      [blockContent]=\"isCreatingInitiators\"\n      [(alertMessages)]=\"alertMessages\"\n      (onConfirm)=\"ok()\">\n   <vsan-add-initiators\n         [isRequired]=\"true\"\n         [existingInitiators]=\"existingInitiators\"\n         (selectedInitiators)=\"updateSelection($event)\">\n   </vsan-add-initiators>\n</vsan-create-prompt>","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ClrDatagridComparatorInterface} from \"@clr/angular\";\nimport {IscsiTarget} from \"@generated/iscsi-target\";\nimport {VsanIscsiUtil} from \"@util/vsan-iscsi-util\";\n\nexport class AuthTypeComparator implements ClrDatagridComparatorInterface<IscsiTarget> {\n   compare = (t1: IscsiTarget, t2: IscsiTarget): number => {\n      return VsanIscsiUtil.getAuthenticationLabel(t1.authType).localeCompare(\n            VsanIscsiUtil.getAuthenticationLabel(t2.authType));\n   };\n}","/* Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit, ViewChild} from \"@angular/core\";\nimport {\n   AbstractControl,\n   FormBuilder,\n   FormControl,\n   FormGroup,\n   ValidationErrors,\n   ValidatorFn,\n   Validators,\n} from \"@angular/forms\";\nimport {ClrForm} from \"@clr/angular\";\nimport {IscsiLun} from \"@generated/iscsi-lun\";\nimport {IscsiLunStatus} from \"@generated/iscsi-lun-status\";\nimport {LunOperationSpec} from \"@generated/lun-operation-spec\";\nimport {PbmDataProvider} from \"@generated/pbm-data-provider\";\nimport {StoragePolicyData} from \"@generated/storage-policy-data\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {VsanIscsiTargetMutationProvider} from \"@generated/vsan-iscsi-target-mutation-provider\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {StorageSizeMetric} from \"@util/storage-size-metric\";\nimport {VsanIscsiUtil} from \"@util/vsan-iscsi-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"edit-lun.html\",\n   styleUrls: [\"lun-operation-dialog.scss\"],\n   selector: \"vsan-iscsi-edit-lun\",\n})\nexport class EditLunComponent implements OnInit {\n   IscsiLunStatus: typeof IscsiLunStatus = IscsiLunStatus;\n\n   clusterRef: ManagedObject;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   @ErrorMessage()\n   errorMessage: string;\n\n   targetAlias: string;\n   editingLun: IscsiLun;\n   private alreadyUsedIds: number[];\n\n   iscsiLun: FormGroup;\n   availableUnits: StorageSizeMetric[] = [StorageSizeMetric.MB, StorageSizeMetric.GB, StorageSizeMetric.TB];\n   availablePolicies: StoragePolicyData[];\n   isIscsiOnlineResizeSupported: boolean = false;\n\n   // Control the validation message for the input fileds.\n   idError: string;\n   aliasError: string;\n   sizeError: string;\n   policyError: string;\n\n   @ViewChild(ClrForm, {static: true})\n   lunSettingsForm: ClrForm;\n\n   readonly ID_CONTROL_NAME: string = \"id\";\n   readonly ALIAS_CONTROL_NAME: string = \"alias\";\n   readonly POLICY_UUID_CONTROL_NAME: string = \"policyUuid\";\n   readonly SIZE_CONTROL_NAME: string = \"size\";\n   readonly SIZE_UNIT_CONTROL_NAME: string = \"sizeUnit\";\n   readonly SIZE_AND_UNITS_GROUP_NAME: string = \"sizeAndUnits\";\n\n   constructor(private formBuilder: FormBuilder,\n         private pbmProvider: PbmDataProvider,\n         private capabilityProvider: VsanCapabilityProvider,\n         private targetMutationProvider: VsanIscsiTargetMutationProvider) {\n      this.iscsiLun = this.formBuilder.group({\n         [this.ID_CONTROL_NAME]: new FormControl(null, [Validators.required, this.idValidator]),\n         [this.ALIAS_CONTROL_NAME]: new FormControl(\"\", [this.aliasValidator]),\n         [this.POLICY_UUID_CONTROL_NAME]: new FormControl(\"\", [this.policyValidator]),\n         [this.SIZE_AND_UNITS_GROUP_NAME]: this.formBuilder.group({\n            [this.SIZE_CONTROL_NAME]: new FormControl(null, Validators.required),\n            [this.SIZE_UNIT_CONTROL_NAME]: new FormControl(StorageSizeMetric.GB),\n         }, {validators: this.sizeValidator}),\n      });\n   }\n\n   @Loader()\n   async ngOnInit(): Promise<void> {\n      this.clusterRef = ManagedObject.contextObject;\n      const context: any = VsanUiUtils.getModalContext();\n      this.editingLun = context.lun;\n      this.targetAlias = context.targetAlias;\n      this.alreadyUsedIds = context.alreadyUsedIds;\n\n      await this.retrieveData();\n      this.fillOutFormWithLunData();\n   }\n\n   private async retrieveData(): Promise<void> {\n      [this.availablePolicies, this.isIscsiOnlineResizeSupported] = await Promise.all([\n         this.pbmProvider.getStoragePolicies(this.clusterRef),\n         this.capabilityProvider.getIsIscsiOnlineResizeSupported(this.clusterRef),\n      ]);\n   }\n\n   private fillOutFormWithLunData(): void {\n      let size: number;\n      let sizeUnit: StorageSizeMetric;\n      const sizeInBytes: number = this.editingLun.lunSize;\n      if (sizeInBytes % StorageSizeMetric.TB.value === 0) {\n         sizeUnit = StorageSizeMetric.TB;\n         size = Math.ceil(sizeInBytes / StorageSizeMetric.TB.value);\n      } else if (sizeInBytes % StorageSizeMetric.GB.value === 0) {\n         sizeUnit = StorageSizeMetric.GB;\n         size = Math.ceil(sizeInBytes / StorageSizeMetric.GB.value);\n      } else {\n         sizeUnit = StorageSizeMetric.MB;\n         size = Math.ceil(sizeInBytes / StorageSizeMetric.MB.value);\n      }\n\n      const defaultStoragePolicyUuid: string = this.availablePolicies?.find(policy => policy.isDefault)?.id;\n\n      this.iscsiLun.setValue({\n         [this.ID_CONTROL_NAME]: this.editingLun.lunId,\n         [this.ALIAS_CONTROL_NAME]: this.editingLun.alias,\n         [this.POLICY_UUID_CONTROL_NAME]: this.editingLun.vmStoragePolicyUuid || defaultStoragePolicyUuid,\n         [this.SIZE_AND_UNITS_GROUP_NAME]: {\n            [this.SIZE_CONTROL_NAME]: size,\n            [this.SIZE_UNIT_CONTROL_NAME]: sizeUnit,\n         },\n      });\n\n      // Make sure any errors from policy preselection are displayed.\n      this.lunSettingsForm.markAsTouched();\n   }\n\n   @Loader()\n   async ok(): Promise<void> {\n      const editSpec: LunOperationSpec = LunOperationSpec.Factory.create(\n            this.targetAlias,\n            this.getAlias(),\n            this.editingLun.lunId,\n            VsanIscsiUtil.UNCHANGED_LUN_SIZE_VALUE,\n            VsanIscsiUtil.UNCHANGED_NEW_LUN_ID_VALUE,\n            this.editingLun.status.toString(),\n            this.editingLun.vmStoragePolicyUuid);\n      if (this.getPolicyUuid() && this.getPolicyUuid() !== this.editingLun.vmStoragePolicyUuid) {\n         editSpec.policyId = this.getPolicyUuid();\n      }\n      if (this.editingLun.status === IscsiLunStatus.Offline && this.getId() !== this.editingLun.lunId) {\n         editSpec.newLunId = this.getId();\n      }\n      if (this.isIscsiOnlineResizeSupported || this.editingLun.status === IscsiLunStatus.Offline) {\n         const currentSizeInBytes: number = this.getSizeControl().value * this.getSizeUnit().value;\n         if (currentSizeInBytes > this.editingLun.lunSize) {\n            editSpec.lunSize = currentSizeInBytes;\n         }\n      }\n\n      const task: ManagedObject = await this.targetMutationProvider.editLun(this.clusterRef, editSpec);\n      this.close(task);\n   }\n\n   close(task: ManagedObject = null): void {\n      VsanUiUtils.closeModalDialog({\n         tasks: [task],\n         refreshTargetList: false,\n         aliasOfChangedTarget: this.targetAlias,\n      });\n   }\n\n   get sizeHelperMessage(): string {\n      const initialLunSize: number = Math.ceil(this.editingLun.lunSize / this.getSizeUnit().value);\n      return VsanIscsiUtil.getLunSizeHelperMessage(this.getSizeUnit(), initialLunSize);\n   }\n\n   get blockApplyButton(): boolean {\n      return this.loading\n            || !!this.errorMessage\n            || (this.iscsiLun && this.iscsiLun.touched && this.iscsiLun.invalid);\n   }\n\n   /**\n    * The LUN size cannot be edited when the LUN status is Online and iSCSI online resize is not supported.\n    */\n   get disableSizeInput(): boolean {\n      return this.editingLun.status === IscsiLunStatus.Online && !this.isIscsiOnlineResizeSupported;\n   }\n\n   private getId(): number {\n      return this.iscsiLun && this.iscsiLun.get(this.ID_CONTROL_NAME).value;\n   }\n\n   private getAlias(): string {\n      return this.iscsiLun && this.iscsiLun.get(this.ALIAS_CONTROL_NAME).value;\n   }\n\n   private getPolicyUuid(): string {\n      return this.iscsiLun && this.iscsiLun.get(this.POLICY_UUID_CONTROL_NAME).value;\n   }\n\n   private getSizeControl(): AbstractControl {\n      return this.iscsiLun?.get(this.SIZE_AND_UNITS_GROUP_NAME)?.get(this.SIZE_CONTROL_NAME);\n   }\n\n   private getSizeUnit(): StorageSizeMetric {\n      return this.iscsiLun?.get(this.SIZE_AND_UNITS_GROUP_NAME)?.get(this.SIZE_UNIT_CONTROL_NAME).value;\n   }\n\n   private idValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n      if (!this.iscsiLun) {\n         return null;\n      }\n\n      // The LUN id can be edited when the LUN status is Offline.\n      if (this.editingLun.status === IscsiLunStatus.Offline) {\n         if (this.getId() !== this.editingLun.lunId) {\n            this.idError = VsanIscsiUtil.getLunIdValidationMessage(this.getId());\n            if (this.idError) {\n               return {idInvalid: {value: control.value}};\n            }\n         }\n\n         if (this.alreadyUsedIds) {\n            const existingId: number = this.alreadyUsedIds.find((id: number) => id === this.getId());\n            if (existingId !== undefined && existingId !== this.editingLun.lunId) {\n               this.idError = VsanUiUtils.getString(\"vsan.configure.iscsiTargets.lun.dialog.id.alreadyUsed\");\n               return {idInvalid: {value: control.value}};\n            }\n         }\n      }\n   };\n\n   private aliasValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n      if (!this.iscsiLun) {\n         return null;\n      }\n\n      // LUN alias can be empty.\n      if (control.value) {\n         this.aliasError = VsanIscsiUtil.getAliasValidationMessage(control.value);\n         if (this.aliasError) {\n            return {aliasInvalid: {value: control.value}};\n         }\n      }\n   };\n\n   private policyValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n      if (!this.iscsiLun || !this.availablePolicies || this.availablePolicies.length === 0) {\n         return null;\n      }\n\n      const selectedPolicy: StoragePolicyData = this.availablePolicies.find(policy => {\n         return policy.id === control.value;\n      });\n      if (selectedPolicy) {\n         this.policyError = VsanIscsiUtil.getLunPolicyValidationMessage(selectedPolicy);\n         if (this.policyError) {\n            return {policyInvalid: {value: control.value}};\n         }\n      } else {\n         this.policyError = VsanUiUtils.getString(\"vsan.configure.iscsiTargets.lun.dialog.edit.policy.empty\");\n         return {policyInvalid: {value: control.value}};\n      }\n   };\n\n   private sizeValidator: ValidatorFn = (): ValidationErrors | null => {\n      if (!this.iscsiLun) {\n         return null;\n      }\n\n      const sizeControl: AbstractControl = this.getSizeControl();\n      const sizeUnit: StorageSizeMetric = this.getSizeUnit();\n      // The LUN size can be edited when iSCSI online resize is supported or the LUN status is Offline.\n      if (this.isIscsiOnlineResizeSupported || this.editingLun.status === IscsiLunStatus.Offline) {\n         this.sizeError = VsanIscsiUtil.getLunSizeValidationMessage(sizeControl.value, sizeUnit.value);\n         if (this.sizeError) {\n            const invalidSizeError: ValidationErrors = {\n               \"sizeInvalid\": {value: sizeControl.value},\n            };\n            sizeControl.setErrors(invalidSizeError);\n            return invalidSizeError;\n         }\n\n         // The LUN size cannot be changed to a smaller value.\n         const currentSizeInBytes: number = sizeControl.value * sizeUnit.value;\n         if (currentSizeInBytes < this.editingLun.lunSize) {\n            this.sizeError = VsanUiUtils.getString(\"vsan.configure.iscsiTargets.lun.dialog.edit.growSizeTo.doNotShrink\",\n                  Math.ceil(this.editingLun.lunSize / sizeUnit.value), sizeUnit);\n            const invalidSizeError: ValidationErrors = {\n               \"sizeInvalid\": {value: sizeControl.value},\n            };\n            sizeControl.setErrors(invalidSizeError);\n            return invalidSizeError;\n         }\n         // Remove error from size form control to hide the <clr-control-error> element\n         sizeControl.setErrors(null);\n         return null;\n      }\n   };\n}\n","\nexport interface TargetInitiatorRemoveSpec {\n\n   targetAlias: string;\n   targetInitiatorNames: string[];\n} //class TargetInitiatorRemoveSpec\n\nexport module TargetInitiatorRemoveSpec{\nexport class Factory {\n\n   static create = (targetAlias: string, targetInitiatorNames: string[]): TargetInitiatorRemoveSpec => {\n      return { targetAlias: targetAlias, targetInitiatorNames: targetInitiatorNames, };\n   }\n\n\n} //class Factory\n\n} //module TargetInitiatorRemoveSpec\n","\nexport interface InitiatorGroupTargetAdditionSpec {\n\n   initiatorGroupName: string;\n   targetAliases: string[];\n} //class InitiatorGroupTargetAdditionSpec\n\nexport module InitiatorGroupTargetAdditionSpec{\nexport class Factory {\n\n   static create = (initiatorGroupName: string, targetAliases: string[]): InitiatorGroupTargetAdditionSpec => {\n      return { initiatorGroupName: initiatorGroupName, targetAliases: targetAliases, };\n   }\n\n\n} //class Factory\n\n} //module InitiatorGroupTargetAdditionSpec\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {IscsiTarget} from \"@generated/iscsi-target\";\nimport {ClrDatagridComparatorInterface} from \"@clr/angular\";\n\nexport class IoOwnerHostComparator implements ClrDatagridComparatorInterface<IscsiTarget> {\n   constructor(private addtionalData: Map<string, string>) {}\n\n   compare = (t1: IscsiTarget, t2: IscsiTarget): number => {\n      return this.addtionalData.get(t1.ioOwnerHost).localeCompare(this.addtionalData.get(t2.ioOwnerHost));\n   };\n}","<vsan-delete-prompt id=\"remove-initiator-group-prompt\"\n                    [title]=\"'vsan.configure.iscsiTargets.initiatorGroups.remove.dialog.title' | localized\"\n                    [blockButton]=\"isRemoving\"\n                    [(alertMessages)]=\"alertMessages\"\n                    [confirmText]=\"'vsan.common.remove' | localized\"\n                    (onConfirm)=\"ok()\">\n   <span id=\"remove-initiator-group-confirmation\">\n      {{'vsan.configure.iscsiTargets.initiatorGroups.remove.confirmation' | localized}}\n   </span>\n</vsan-delete-prompt>\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {InitiatorGroup} from \"@generated/initiator-group\";\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\n\nexport class InitiatorsFilter implements ClrDatagridStringFilterInterface<InitiatorGroup> {\n   accepts = (group: InitiatorGroup, search: string): boolean => {\n      return group.initiators.length.toString().indexOf(search) > -1;\n   };\n}","/* Copyright 2018-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\nimport {VsanHealthUtil} from \"@util/vsan-health-util\";\nimport {VsanObject} from \"@generated/vsan-object\";\n\nexport class HealthFilter implements ClrDatagridStringFilterInterface<VsanObject> {\n   accepts = (obj: VsanObject, search: string): boolean => {\n      return VsanHealthUtil.getVsanObjectHealthStatusText(obj.healthState).toLowerCase().indexOf(search) > -1;\n   };\n}","/* Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {Icon} from \"@util/icon\";\nimport {IscsiLun} from \"@generated/iscsi-lun\";\nimport {VsanObject} from \"@generated/vsan-object\";\nimport {VsanIscsiUtil} from \"@util/vsan-iscsi-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {IscsiLunStatus} from \"@generated/iscsi-lun-status\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanIscsiTargetPropertyProvider} from \"@generated/vsan-iscsi-target-property-provider\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {LunOperationSpec} from \"@generated/lun-operation-spec\";\nimport {VsanIscsiTargetMutationProvider} from \"@generated/vsan-iscsi-target-mutation-provider\";\n// Import filters\nimport {LunIdFilter} from \"../filters/lun-id-filter\";\nimport {AliasFilter} from \"../filters/alias-filter\";\nimport {LunSizeFilter} from \"../filters/lun-size-filter\";\nimport {ActualSizeFilter} from \"../filters/actual-size-filter\";\nimport {LunStateFilter} from \"../filters/lun-state-filter\";\nimport {HealthFilter} from \"../filters/health-filter\";\nimport {StoragePolicyFilter} from \"../filters/storage-policy-filter\";\nimport {ComplianceResultFilter} from \"../filters/compliance-result-filter\";\n// Import comparators\nimport {LunStateComparator} from \"../comparators/lun-state-comparator\";\nimport {HealthComparator} from \"../comparators/health-comparator\";\nimport {ComplianceResultComparator} from \"../comparators/compliance-result-comparator\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {EditLunStateContext} from \"@navigation/context/edit-lun-state-context\";\n\n@Component({\n   selector: \"vsan-lun-list\",\n   templateUrl: \"lun-list.html\",\n   styleUrls: [\"lun-list.scss\", \"iscsi-common.scss\"],\n})\nexport class LunListComponent {\n\n   private static ONLINE_DIALOG_WIDTH: number = 540;\n   private static ONLINE_DIALOG_HEIGHT: number = 200;\n   private static OFFLINE_DIALOG_WIDTH: number = 550;\n   private static OFFLINE_DIALOG_HEIGHT: number = 240;\n\n   @Output()\n   lunsOperationFailed: EventEmitter<string> = new EventEmitter<string>();\n\n   @Output()\n   changeLunCount: EventEmitter<string> = new EventEmitter<string>();\n\n   Icon = Icon;\n   VsanIscsiUtil = VsanIscsiUtil;\n\n   isUpdatingLuns: boolean;\n   selectedLuns: IscsiLun[] = [];\n\n   private _targetAlias: string;\n\n   @Input()\n   set targetAlias(alias: string) {\n      if (this._targetAlias === alias) {\n         return;\n      }\n      this._targetAlias = alias;\n      this.fetchLunList();\n   }\n\n   get targetAlias(): string {\n      return this._targetAlias;\n   }\n\n   private _luns: IscsiLun[] = [];\n\n   set luns(value: IscsiLun[]) {\n      if (!value || value.length === 0) {\n         this._luns = [];\n         this.selectedLuns = [];\n         return;\n      }\n      this._luns = value;\n      const ids: number[] = this.selectedLuns.map(lun => {\n         return lun.lunId;\n      });\n      this.selectedLuns = ids.map(id => this.luns.find(lun => {\n         return lun.lunId === id;\n      }));\n   }\n\n   get luns(): IscsiLun[] {\n      return this._luns;\n   }\n\n   @Input()\n   hasComputePrivileges: boolean = false;\n\n   @Input()\n   readPoliciesPermission: boolean = false;\n\n   // iSCSI LUN list filter\n   lunIdFilter: LunIdFilter = new LunIdFilter();\n   aliasFilter: AliasFilter = new AliasFilter();\n   capacityFilter: LunSizeFilter = new LunSizeFilter();\n   usedCapacityFilter: ActualSizeFilter = new ActualSizeFilter();\n   stateFilter: LunStateFilter = new LunStateFilter();\n   healthFilter: HealthFilter = new HealthFilter();\n   storagePolicyFilter: StoragePolicyFilter = new StoragePolicyFilter();\n   complianceResultFilter: ComplianceResultFilter = new ComplianceResultFilter();\n\n   // iSCSI LUN list comparator\n   stateComparator: LunStateComparator = new LunStateComparator();\n   healthComparator: HealthComparator = new HealthComparator();\n   complianceResultComparator: ComplianceResultComparator = new ComplianceResultComparator();\n\n   constructor(private taskSvc: TaskMonitorService,\n         private iscsiTargetProvider: VsanIscsiTargetPropertyProvider,\n         private targetMutationProvider: VsanIscsiTargetMutationProvider) {\n   }\n\n   private fetchLunList = (): void => {\n      this.isUpdatingLuns = true;\n      this.iscsiTargetProvider.getVsanIscsiTargetLunList(ManagedObject.contextObject, this.targetAlias)\n            .then((lunList: IscsiLun[]) => {\n               this.luns = lunList;\n               this.isUpdatingLuns = false;\n            })\n            .catch((error: string) => {\n               this.luns = [];\n               this.isUpdatingLuns = false;\n               this.lunsOperationFailed.emit(error);\n            });\n   };\n\n   get disableActions(): boolean {\n      return this.isUpdatingLuns || !this.hasComputePrivileges;\n   }\n\n   get onlineActionVisible(): boolean {\n      return this.selectedLuns.length === 1 && this.selectedLuns[0] &&\n            this.selectedLuns[0].status === IscsiLunStatus.Offline;\n   }\n\n   get offlineActionVisible(): boolean {\n      return this.selectedLuns.length === 1 && this.selectedLuns[0] &&\n            this.selectedLuns[0].status === IscsiLunStatus.Online;\n   }\n\n   get lunListTitle(): string {\n      return this.targetAlias ? VsanUiUtils.getString(\"vsan.configure.iscsiTargets.lun.title\", this.targetAlias) :\n            VsanUiUtils.getString(\"vsan.configure.iscsiTargets.no.target.lun.title\");\n   }\n\n   get reapplyActionVisible(): boolean {\n      return this.selectedLuns.some((lun: IscsiLun) => {\n         return this.hasMismatchComplianceResult(lun);\n      });\n   }\n\n   actionTitle = (descriptionKey: string): string => {\n      return VsanUiUtils.getString(!this.hasComputePrivileges ? \"vsan.common.nopermissions\" : descriptionKey);\n   };\n\n   complianceResultVisible = (lun: any): boolean => {\n      return lun.storagePolicy && lun.complianceResult;\n   };\n\n   openAddLunDialog = (): void => {\n      const suggestedLunId: number = this.caculateSuggestedId();\n      if (suggestedLunId === -1) {\n         this.lunsOperationFailed\n               .emit(VsanUiUtils.getString(\"vsan.configure.iscsiTargets.lun.dialog.id.cannotSuggest\"));\n         return;\n      }\n      new ModalBuilder(\"iscsiTargets/addLun\")\n            .setSize(620, 340)\n            .open({\n               targetAlias: this.targetAlias,\n               suggestedLunId: suggestedLunId,\n            }).then(this.onLunsChanged);\n   };\n\n   openEditLunDialog = (): void => {\n      new ModalBuilder(\"iscsiTargets/editLun\")\n            .setSize(620, 340)\n            .open({\n               lun: this.selectedLuns[0],\n               targetAlias: this.targetAlias,\n               alreadyUsedIds: this.luns.map(lun => {\n                  return lun.lunId;\n               }),\n            }).then(this.onLunsChanged);\n   };\n\n   private caculateSuggestedId = (): number => {\n      // The maximum number of LUN is 256.\n      if (this.luns.length >= 256) {\n         return -1;\n      }\n      const usedIds: number[] = this.luns.map((lun: IscsiLun) => {\n         return lun.lunId;\n      });\n      for (let index: number = 0; index < 256; index++) {\n         if (usedIds.indexOf(index) === -1) {\n            return index;\n         }\n      }\n      return -1;\n   };\n\n   placeLunOnline = () => {\n      this.placeLunStatus(IscsiLunStatus.Online);\n   };\n\n   placeLunOffline = () => {\n      this.placeLunStatus(IscsiLunStatus.Offline);\n   };\n\n   private placeLunStatus(newStatus: IscsiLunStatus) {\n      const height: number = newStatus === IscsiLunStatus.Online ?\n            LunListComponent.ONLINE_DIALOG_HEIGHT : LunListComponent.OFFLINE_DIALOG_HEIGHT;\n      const width: number = newStatus === IscsiLunStatus.Online ?\n            LunListComponent.ONLINE_DIALOG_WIDTH : LunListComponent.OFFLINE_DIALOG_WIDTH;\n\n      const lun: IscsiLun = this.selectedLuns[0];\n      const editSpec: LunOperationSpec = LunOperationSpec.Factory.create(\n            this.targetAlias,\n            lun.alias,\n            lun.lunId,\n            VsanIscsiUtil.UNCHANGED_LUN_SIZE_VALUE,\n            VsanIscsiUtil.UNCHANGED_NEW_LUN_ID_VALUE,\n            newStatus.toString(),\n            lun.vmStoragePolicyUuid);\n      const context: EditLunStateContext = {\n         editSpec: editSpec\n      };\n\n      new ModalBuilder(\"iscsiTargets/editLunState\")\n            .setSize(width, height)\n            .open(context)\n            .then(this.onLunsChanged)\n            .catch((error: string) => {\n               this.lunsOperationFailed.emit(error);\n               this.fetchLunList();\n            });\n   }\n\n   /**\n    * Reapply out of date storage policies to the selected LUNs.\n    */\n   reapplyPolicies = (): void => {\n      const mismatchLuns: IscsiLun[] = this.selectedLuns.filter((lun: IscsiLun) => {\n         return this.hasMismatchComplianceResult(lun);\n      });\n      if (mismatchLuns.length === 0) {\n         return;\n      }\n\n      const promises: Array<Promise<ManagedObject>> = mismatchLuns.map((lun: IscsiLun) => {\n         return this.targetMutationProvider.editLun(ManagedObject.contextObject, LunOperationSpec.Factory.create(\n               this.targetAlias,\n               lun.alias,\n               lun.lunId,\n               VsanIscsiUtil.UNCHANGED_LUN_SIZE_VALUE,\n               VsanIscsiUtil.UNCHANGED_NEW_LUN_ID_VALUE,\n               lun.status.toString(),\n               lun.vmStoragePolicyUuid));\n      });\n      Promise.all(promises).then((runningTaskRefs: ManagedObject[]) => {\n         const completedTasks: Array<Promise<ManagedObject>> =\n               runningTaskRefs.map(task => this.taskSvc.getAwaitResult(task));\n         Promise.all(completedTasks)\n               .then(this.fetchLunList)\n               .catch((error) => {\n                  this.fetchLunList();\n                  this.lunsOperationFailed.emit(error);\n               });\n      });\n   };\n\n   private hasMismatchComplianceResult = (lun: any): boolean => {\n      const lunObject: VsanObject = lun as VsanObject;\n      return lunObject && lunObject.storagePolicy && lunObject.complianceResult && lunObject.complianceResult.mismatch;\n   };\n\n   openRemoveLunDialog = (): void => {\n      const lunIds: number[] = this.selectedLuns.map((lun: IscsiLun) => {\n         return lun.lunId;\n      });\n      if (lunIds.length === 0) {\n         return;\n      }\n      new ModalBuilder(\"iscsiTargets/removeLuns\")\n            .setSize(530, 260)\n            .open({\n               lunIds: lunIds,\n               targetAlias: this.targetAlias,\n            })\n            .then(this.onLunsChanged)\n            .catch((error: string) => {\n               this.lunsOperationFailed.emit(error);\n            });\n   };\n\n   private onLunsChanged = (param: any): void => {\n      const tasks: ManagedObject[] = param.tasks;\n      const refreshTargetList: boolean = param.refreshTargetList;\n      const aliasOfChangedTarget: string = param.aliasOfChangedTarget;\n\n      if (!tasks || tasks.length === 0 || tasks.filter(t => !!t).length === 0 || !aliasOfChangedTarget) {\n         return;\n      }\n      const promises: Array<Promise<any>> = tasks.map(t => this.taskSvc.getAwaitResult(t));\n      Promise.all(promises).then(() => {\n         if (refreshTargetList) {\n            this.changeLunCount.emit(aliasOfChangedTarget);\n         }\n         if (aliasOfChangedTarget === this.targetAlias) {\n            this.fetchLunList();\n         }\n      }).catch((error: string) => {\n         this.lunsOperationFailed.emit(error);\n      });\n   };\n}","<!--Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<!-- The selected target can be removed -->\n<vsan-delete-prompt [title]=\"'vsan.configure.iscsiTargets.target.remove.title' | localized\"\n                    [subtitle]=\"targetAlias\"\n                    [blockButton]=\"isRemoving || !allowRemove\"\n                    [(alertMessages)]=\"alertMessages\"\n                    [confirmText]=\"'vsan.common.remove' | localized\"\n                    (onConfirm)=\"ok()\">\n   <div id=\"remove-target-confirmation\" *ngIf=\"allowRemove\">\n      {{\"vsan.configure.iscsiTargets.target.remove.confirmation\" | localized}}\n   </div>\n   <div id=\"not-empty-label\" *ngIf=\"!allowRemove\">\n      <clr-icon shape=\"error-standard\" class=\"is-error is-solid\"></clr-icon>\n      {{\"vsan.configure.iscsiTargets.target.remove.not.empty\" | localized}}\n   </div>\n</vsan-delete-prompt>","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {InventoryBrowserComponent} from \"@component/inventory/inventory-browser.component\";\nimport {InventoryNodeComponent} from \"@component/inventory/inventory-node.component\";\nimport {WitnessCandidateInventoryService} from \"@generated/witness-candidate-inventory-service\";\nimport {DatacenterInventoryService} from \"@generated/datacenter-inventory-service\";\nimport {NetworkInventoryService} from \"@generated/network-inventory-service\";\nimport {ComputeInventoryService} from \"@generated/compute-inventory-service\";\nimport {IoInsightInventoryService} from \"@generated/io-insight-inventory-service\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {TreeNodeComponent} from \"@component/inventory/tree-view/tree-node.component\";\nimport {TreeViewComponent} from \"@component/inventory/tree-view/tree-view.component\";\nimport {DropdownObjectSelectorComponent} from \"@component/inventory/dropdown-object-selector/dropdown-object-selector.component\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {InventoryNodesComponent} from \"@component/inventory/inventory-nodes.component\";\nimport {TreeNodesComponent} from \"@component/inventory/tree-view/tree-nodes.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule,\n      SearchModule,\n      CommonDirectiveModule,\n   ],\n   declarations: [\n      InventoryBrowserComponent,\n      InventoryNodesComponent,\n      InventoryNodeComponent,\n      TreeNodeComponent,\n      TreeNodesComponent,\n      TreeViewComponent,\n      DropdownObjectSelectorComponent,\n   ],\n   exports: [\n      InventoryBrowserComponent,\n      DropdownObjectSelectorComponent,\n      TreeViewComponent,\n   ],\n   providers: [\n      WitnessCandidateInventoryService,\n      DatacenterInventoryService,\n      NetworkInventoryService,\n      ComputeInventoryService,\n      IoInsightInventoryService,\n   ],\n})\nexport class InventoryBrowserModule {\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, ValidationErrors, ValidatorFn,} from \"@angular/forms\";\nimport {InitiatorGroupAdditionSpec} from \"@generated/initiator-group-addition-spec\";\nimport {VsanIscsiInitiatorGroupMutationProvider} from \"@generated/vsan-iscsi-initiator-group-mutation-provider\";\nimport {ClusterComputeResource} from \"@service/client/dataservice/data-service-property\";\nimport {DataServiceClient} from \"@service/client/dataservice/data-service.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ReactiveFormUtil} from \"@util/reactive-form-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"add-initiator-group.html\",\n   styleUrls: [\"add-initiator-group.scss\"],\n   selector: \"vsan-iscsi-add-initiator-group\",\n})\n\nexport class AddInitiatorGroupComponent implements OnInit {\n   private static readonly initiatorGroupNameExp: RegExp = /^[a-zA-Z0-9:._-]+$/;\n   private static readonly allDigitsExp: RegExp = /^[0-9]+$/;\n\n   addInitiatorGroup: FormGroup;\n   clusterName: string;\n   groupNameErrorMessage: string;\n\n   alertMessages: string[];\n   isCreatingGroup: boolean = false;\n   private existingGroupNames: string[] = [];\n   private initiators: string[];\n\n   constructor(private initiatorGroupMutationProvider: VsanIscsiInitiatorGroupMutationProvider,\n         private dataSvc: DataServiceClient,\n         private formBuilder: FormBuilder) {\n      this.addInitiatorGroup = this.formBuilder.group({\n         groupName: new FormControl(\"\", [this.validate]),\n      });\n   }\n\n   async ngOnInit(): Promise<void> {\n      this.existingGroupNames = VsanUiUtils.getModalContext().groupNames;\n      this.clusterName = await this.dataSvc.getProperty(ClusterComputeResource.name, ManagedObject.contextObject);\n   }\n\n   updateSelection(value: string[]): void {\n      this.initiators = value;\n   }\n\n   get blockApplyButton(): boolean {\n      return this.isCreatingGroup\n            || (this.alertMessages && this.alertMessages.length > 0)\n            || (this.addInitiatorGroup && this.addInitiatorGroup.touched && this.addInitiatorGroup.invalid);\n   }\n\n   ok = (): void => {\n      this.alertMessages = null;\n\n      if (!this.addInitiatorGroup.valid) {\n         ReactiveFormUtil.validateAllFormFields(this.addInitiatorGroup);\n         return;\n      }\n\n      const groupName: string = this.getGroupName();\n\n      const createSpec: InitiatorGroupAdditionSpec = InitiatorGroupAdditionSpec.Factory.create(\n            groupName, this.initiators);\n      this.isCreatingGroup = true;\n      this.initiatorGroupMutationProvider.createInitiatorGroup(ManagedObject.contextObject, createSpec)\n            .then(() => {\n               this.isCreatingGroup = false;\n               VsanUiUtils.closeModalDialog(true);\n            })\n            .catch((error: string) => {\n               this.isCreatingGroup = false;\n               this.alertMessages = [error];\n            });\n   };\n\n   private getGroupName(): string {\n      return this.addInitiatorGroup.get(\"groupName\").value.trim();\n   }\n\n   validate: ValidatorFn = (ctrl: AbstractControl): ValidationErrors | null => {\n      this.groupNameErrorMessage = this.getGroupNameErrorMessage(ctrl.value);\n      if (!this.groupNameErrorMessage) {\n         return null;\n      }\n\n      return {'validationError': {value: this.groupNameErrorMessage}};\n   };\n\n   /**\n    * Validate initiator group name and return the corresponding error message.\n    *\n    * Rules:\n    * 1. Cannot be empty.\n    * 2. Allowed characters are A-Z, a-z, 0-9, \".\", \":\", \"-\", \"_\"\n    * 3. The name cannot start with \"iqn.\" or \"eui.\"\n    * 4. Cannot be all digits.\n    * 5. Cannot be repeated with an existing name.\n    */\n   private getGroupNameErrorMessage = (name: string): string => {\n      if (!name) {\n         return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.initiatorGroups.group.name.isNull\");\n      }\n      if (!AddInitiatorGroupComponent.initiatorGroupNameExp.test(name)) {\n         return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.initiatorGroups.group.name.invalidCharacters\");\n      }\n      if (name.indexOf(\"iqn.\") === 0 || name.indexOf(\"eui.\") === 0) {\n         return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.initiatorGroups.group.name.invalidPrefix\");\n      }\n      if (AddInitiatorGroupComponent.allDigitsExp.test(name)) {\n         return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.initiatorGroups.group.name.allDigits\");\n      }\n      if (this.existingGroupNames.indexOf(name) > -1) {\n         return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.initiatorGroups.group.name.alreadyExists\");\n      }\n      return null;\n   };\n}\n","/* Copyright 2017-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {VsanIscsiUtil} from \"@util/vsan-iscsi-util\";\nimport {TargetInitiatorSpec} from \"@generated/target-initiator-spec\";\nimport {VsanIscsiTargetPropertyProvider} from \"@generated/vsan-iscsi-target-property-provider\";\nimport {TaskService} from \"@generated/task-service\";\nimport {NameFilter} from \"../filters/name-filter\";\nimport {IsGroupFilter} from \"../filters/is-group-filter\";\nimport {IsGroupComparator} from \"../comparators/is-group-comparator\";\n\n@Component({\n   selector: \"vsan-allowed-initiators\",\n   templateUrl: \"allowed-initiators.html\",\n   styleUrls: [\"allowed-initiators.scss\", \"iscsi-common.scss\"],\n})\nexport class AllowedInitiatorsComponent {\n   VsanIscsiUtil = VsanIscsiUtil;\n\n   private static readonly EVERYONE_GROUP: string =\n         VsanUiUtils.getString(\"vsan.configure.iscsiTargets.allowed.initiators.type.everyone\");\n\n   loading: boolean;\n   allowedInitiators: TargetInitiatorSpec[];\n   selectedInitiator: TargetInitiatorSpec;\n\n   @Output()\n   private operationFailed: EventEmitter<string> = new EventEmitter<string>();\n\n   private _targetAlias: string;\n\n   @Input()\n   set targetAlias(alias: string) {\n      if (this.targetAlias === alias) {\n         return;\n      }\n      this._targetAlias = alias;\n      this.updateAllowedInitiatorsList();\n   }\n\n   get targetAlias(): string {\n      return this._targetAlias;\n   }\n\n   @Input()\n   hasComputePrivileges: boolean;\n\n   nameFilter: NameFilter = new NameFilter();\n   typeFilter: IsGroupFilter = new IsGroupFilter();\n   typeComparator: IsGroupComparator = new IsGroupComparator();\n\n   constructor(private iscsiTargetProvider: VsanIscsiTargetPropertyProvider,\n         private taskService: TaskService) {\n   }\n\n   updateAllowedInitiatorsList = (): void => {\n      this.loading = true;\n      this.selectedInitiator = null;\n      this.iscsiTargetProvider.getVsanIscsiTargetInitiatorList(ManagedObject.contextObject, this.targetAlias)\n            .then((initiators: TargetInitiatorSpec[]) => {\n               this.loading = false;\n               if (initiators.length > 0) {\n                  this.allowedInitiators = initiators;\n               } else {\n                  // display everyone as a default initiator group\n                  this.allowedInitiators = [TargetInitiatorSpec.Factory.create(\n                        AllowedInitiatorsComponent.EVERYONE_GROUP, true),\n                  ];\n               }\n            }).catch((error: string) => {\n               this.loading = false;\n               this.operationFailed.emit(error);\n            });\n   };\n\n   get isAddActionDisabled(): boolean {\n      return this.loading || !this.hasComputePrivileges || !this.targetAlias;\n   }\n\n   get addInitiatorTitle(): string {\n      if (!this.hasComputePrivileges) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      }\n      if (!this.targetAlias) {\n         return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.notargetselected\");\n      }\n      return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.allowed.initiators.add.description\");\n   }\n\n   get isRemoveActionDisabled(): boolean {\n      return this.loading || !this.hasComputePrivileges ||\n            this.selectedInitiator.name === AllowedInitiatorsComponent.EVERYONE_GROUP;\n   }\n\n   get removeAccessTitle(): string {\n      if (!this.hasComputePrivileges) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      }\n      if (this.selectedInitiator.name === AllowedInitiatorsComponent.EVERYONE_GROUP) {\n         return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.allowed.initiators.remove.disabled.reason\",\n               this.selectedInitiator.name);\n      }\n      return VsanUiUtils.getString(\"vsan.configure.iscsiTargets.allowed.initiators.remove.description\");\n   }\n\n   onSelectionChange = (initiatorSpec: TargetInitiatorSpec): void => {\n      this.selectedInitiator = initiatorSpec;\n   };\n\n   disallowTargetAccess = (): void => {\n      new ModalBuilder(\"iscsiTargets/removeAllowedInitiator\")\n            .setSize(500, 190)\n            .open({\n               targetAlias: this.targetAlias,\n               initiator: this.selectedInitiator,\n            })\n            .then((removed: boolean): void => {\n               if (removed) {\n                  this.selectedInitiator = null;\n                  this.updateAllowedInitiatorsList();\n               }\n            })\n            .catch(error => this.operationFailed.emit(error));\n   };\n\n   addInitiator = (): void => {\n      new ModalBuilder(\"iscsiTargets/addAllowedInitiator\")\n            .setSize(720, 580)\n            .open({\n               targetAlias: this.targetAlias,\n               allowedInitiators: this.allowedInitiators.map(initiator => initiator.name),\n            })\n            .then((dataChanged: boolean): void => {\n               if (dataChanged) {\n                  this.updateAllowedInitiatorsList();\n               }\n            })\n            .catch(error => this.operationFailed.emit(error));\n   };\n}","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Logger} from \"@util/logger\";\nimport {VsanIscsiUtil} from \"@util/vsan-iscsi-util\";\nimport {InitiatorGroupTarget} from \"@generated/initiator-group-target\";\nimport {IscsiTarget} from \"@generated/iscsi-target\";\nimport {VsanIscsiInitiatorGroupMutationProvider} from \"@generated/vsan-iscsi-initiator-group-mutation-provider\";\nimport {VsanIscsiTargetPropertyProvider} from \"@generated/vsan-iscsi-target-property-provider\";\nimport {InitiatorGroupTargetAdditionSpec} from \"@generated/initiator-group-target-addition-spec\";\nimport {IqnFilter} from \"../filters/iqn-filter\";\nimport {AliasFilter} from \"../filters/alias-filter\";\nimport {AuthTypeFilter} from \"../filters/auth-type-filter\";\nimport {AuthTypeComparator} from \"../comparators/auth-type-comparator\";\n\n@Component({\n   templateUrl: \"add-accessible-target.html\",\n   styleUrls: [\"add-accessible-target.scss\"],\n   selector: \"vsan-iscsi-add-target\",\n})\nexport class AddAccessibleTargetComponent implements OnInit {\n   VsanIscsiUtil: typeof VsanIscsiUtil = VsanIscsiUtil;\n\n   accessibleTargets: InitiatorGroupTarget[];\n   initiatorGroupName: string;\n\n   allTargets: IscsiTarget[];\n   selectedTargets: IscsiTarget[] = [];\n   alertMessages: string[];\n   loading: boolean;\n   clusterRef: ManagedObject;\n\n   currentListState: TargetListState = TargetListState.ALL_AVAILABLE;\n   TargetListState: typeof TargetListState = TargetListState;\n\n   iqnFilter: IqnFilter = new IqnFilter();\n   aliasFilter: AliasFilter = new AliasFilter();\n   authTypeFilter: AuthTypeFilter = new AuthTypeFilter();\n   authTypeComparator: AuthTypeComparator = new AuthTypeComparator();\n\n   constructor(private targetPropertyProvider: VsanIscsiTargetPropertyProvider,\n         private initiatorGroupMutationProvider: VsanIscsiInitiatorGroupMutationProvider) {}\n\n   ngOnInit(): void {\n      this.clusterRef = ManagedObject.contextObject;\n\n      this.accessibleTargets = VsanUiUtils.getModalContext().accessibleTargets;\n      this.initiatorGroupName = VsanUiUtils.getModalContext().initiatorGroupName;\n\n      this.fetch();\n   }\n\n   private fetch = (): void => {\n      this.loading = true;\n      this.targetPropertyProvider.getIscsiTargets(this.clusterRef)\n            .then(this.handleResponse)\n            .catch(this.handleError);\n   };\n\n   private handleResponse = (targets: IscsiTarget[]): void => {\n      this.loading = false;\n      this.allTargets = targets;\n   };\n\n   private handleError = (error: string): void => {\n      this.loading = false;\n      Logger.error(error);\n      this.alertMessages = [error || VsanUiUtils.getString(\"vsan.common.error.dataExtraction\")];\n   };\n\n   getTargetList = (): IscsiTarget[] => {\n      switch (+this.currentListState) {\n         case TargetListState.ALL_AVAILABLE:\n            /**\n             * all available = all targets - allowed targets\n             */\n            if (this.allTargets == null) {\n               return null;\n            }\n            return this.allTargets.filter(target =>\n                  !this.accessibleTargets.some(allowedTarget => allowedTarget.alias === target.alias));\n         case TargetListState.SELECTED:\n            return this.selectedTargets;\n         default:\n            throw new Error(\"Unsupported target list state: \" + this.currentListState);\n      }\n   };\n\n   ok = (): void => {\n      const addTargetSpec: InitiatorGroupTargetAdditionSpec = InitiatorGroupTargetAdditionSpec.Factory.create(\n         this.initiatorGroupName,\n         this.selectedTargets.map(target => target.alias),\n      );\n      this.initiatorGroupMutationProvider.addTarget(this.clusterRef, addTargetSpec)\n            .then((res) => {\n               Logger.log(\"success\", res);\n               VsanUiUtils.closeModalDialog(true);\n            })\n            .catch((err) => {\n               Logger.log(\"error\", err);\n               this.handleError(err);\n            });\n   };\n\n   validate = (): boolean => !!this.selectedTargets?.length;\n}\n\nexport enum TargetListState {\n   ALL_AVAILABLE, SELECTED,\n}","<!-- The selected target can be removed -->\n<vsan-delete-prompt id=\"remove-luns-prompt\"\n                    [title]=\"'vsan.configure.iscsiTargets.lun.remove.dialog.title' | localized\"\n                    [blockButton]=\"isRemoving\"\n                    [subtitle]=\"targetAlias\"\n                    [confirmText]=\"'vsan.common.remove' | localized\"\n                    (onConfirm)=\"ok()\">\n   <div class=\"dialog-container\">\n      <div>{{dialogContent}}</div>\n      <div>{{\"vsan.common.confirm.question\" | localized : lunIds.length}}</div>\n   </div>\n</vsan-delete-prompt>","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {IscsiLun} from \"@generated/iscsi-lun\";\nimport {VsanUiUtils} from \"../../common/util/vsan-util\";\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\n\nexport class ActualSizeFilter implements ClrDatagridStringFilterInterface<IscsiLun> {\n   accepts = (lun: IscsiLun, search: string): boolean => {\n      return VsanUiUtils.formatFileSize(lun.actualSize).toLowerCase().indexOf(search) > -1;\n   };\n}","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {InitiatorGroupInitiator} from \"@generated/initiator-group-initiator\";\nimport {InitiatorGroupInitiatorAdditionSpec} from '@generated/initiator-group-initiator-addition-spec';\nimport {VsanIscsiInitiatorGroupMutationProvider} from \"@generated/vsan-iscsi-initiator-group-mutation-provider\";\n\n@Component({\n   selector: \"vsan-add-initiators-to-group\",\n   templateUrl: \"add-initiators-to-group.html\",\n})\nexport class AddInitiatorsToGroupComponent implements OnInit {\n\n   alertMessages: string[];\n   isCreatingInitiators: boolean = false;\n\n   groupName: string;\n   existingInitiators: string[];\n\n   private initiatorsToAdd: string[];\n\n   constructor(private initiatorGroupMutationProvider: VsanIscsiInitiatorGroupMutationProvider) {\n   }\n\n   ngOnInit(): void {\n      this.groupName = VsanUiUtils.getModalContext().groupName;\n      const initiatorGroups: InitiatorGroupInitiator[] = VsanUiUtils.getModalContext().existingInitiators || [];\n      this.existingInitiators = initiatorGroups.map(initiator => initiator.name);\n   }\n\n   updateSelection(value: string[]): void {\n      // Only leave new initiators in the updated list for add\n      this.initiatorsToAdd = value.filter(initiator =>\n            !this.existingInitiators ||\n            !this.existingInitiators.includes(initiator));\n   }\n\n   ok = (): void => {\n      const additionSpec: InitiatorGroupInitiatorAdditionSpec = InitiatorGroupInitiatorAdditionSpec.Factory.create(\n            this.groupName, this.initiatorsToAdd);\n      this.isCreatingInitiators = true;\n      this.initiatorGroupMutationProvider.addInitiators(ManagedObject.contextObject, additionSpec)\n            .then(() => {\n               this.isCreatingInitiators = false;\n               VsanUiUtils.closeModalDialog(true);\n            })\n            .catch((error: string) => {\n               this.isCreatingInitiators = false;\n               this.alertMessages = [error];\n            });\n   };\n\n   get blockFinishButton(): boolean {\n      return this.isCreatingInitiators || !this.initiatorsToAdd || this.initiatorsToAdd.length === 0;\n   }\n}\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanObject} from \"@generated/vsan-object\";\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\n\nexport class StoragePolicyFilter implements ClrDatagridStringFilterInterface<VsanObject> {\n   accepts = (obj: VsanObject, search: string): boolean => {\n      return obj.storagePolicy !== null && obj.storagePolicy.toLowerCase().indexOf(search) > -1;\n   };\n}","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {IscsiTarget} from \"@generated/iscsi-target\";\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\n\nexport class NetworkInterfaceFilter implements ClrDatagridStringFilterInterface<IscsiTarget> {\n   accepts = (target: IscsiTarget, search: string): boolean => {\n      return target.networkInterface !== null && target.networkInterface.indexOf(search) > -1;\n   };\n}","<!--Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div *ngIf=\"loading\" class=\"central-spinner\">\n   <div class=\"spinner\"></div>\n</div>\n\n<vsan-validation id=\"iscsi-targets-view-validation\"\n                 *ngIf=\"alertMessage\"\n                 [alert]=\"alertMessage\"\n                 (onClosed)=\"alertMessage = null\">\n</vsan-validation>\n\n<ng-container *ngIf=\"!loading\">\n   <!-- iSCSI targets -->\n   <h6 vsan-auto-focus>\n      {{\"vsan.configure.iscsiTargets.target.title\" | localized}}\n   </h6>\n   <clr-button-group vsan-button-group class=\"btn-link\">\n      <clr-button id=\"add-target-action\"\n                  name=\"add-target-action\"\n                  class=\"btn btn-sm\"\n                  [disabled]=\"!hasComputePrivileges\"\n                  (click)=\"openAddTargetDialog()\"\n                  [vsan-button-title]=\"VsanUiUtils.getActionTitle(hasComputePrivileges,\n                        'vsan.configure.iscsiTargets.target.add.description')\">\n         {{\"vsan.configure.iscsiTargets.target.add.label\" | localized}}\n      </clr-button>\n      <clr-button id=\"edit-target-action\"\n                  name=\"edit-target-action\"\n                  *ngIf=\"selectedTarget\"\n                  [disabled]=\"!hasComputePrivileges\"\n                  class=\"btn btn-sm\"\n                  (click)=\"openEditTargetDialog()\"\n                  [vsan-button-title]=\"VsanUiUtils.getActionTitle(hasComputePrivileges,\n                        'vsan.configure.iscsiTargets.target.edit.description')\">\n         {{\"vsan.configure.iscsiTargets.target.edit.label\" | localized}}\n      </clr-button>\n      <clr-button id=\"reapply-policy-action\"\n                  name=\"reapply-policy-action\"\n                  [disabled]=\"!reapplyActionEnabled\"\n                  class=\"btn btn-sm\"\n                  (click)=\"reapplyPolicy()\"\n                  [vsan-button-title]=\"reapplyActionTitle\">\n         {{\"vsan.configure.iscsiTargets.target.reapply.label\" | localized}}\n      </clr-button>\n      <clr-button id=\"batch-reapply-action\"\n                  name=\"batch-reapply-action\"\n                  class=\"btn btn-sm\"\n                  [disabled]=\"!batchReapplyActionEnabled\"\n                  (click)=\"batchReapplyPolicies()\"\n                  [vsan-button-title]=\"batchReapplyActionTitle\">\n         {{\"vsan.configure.iscsiTargets.target.batch.reapply.label\" | localized}}\n      </clr-button>\n      <clr-button id=\"remove-target-action\"\n                  name=\"remove-target-action\"\n                  *ngIf=\"selectedTarget\"\n                  class=\"btn btn-sm\"\n                  [disabled]=\"!hasComputePrivileges\"\n                  (click)=\"openRemoveTargetDialog()\"\n                  [vsan-button-title]=\"VsanUiUtils.getActionTitle(hasComputePrivileges,\n                        'vsan.configure.iscsiTargets.target.remove.description')\">\n         {{\"vsan.configure.iscsiTargets.target.remove.label\" | localized}}\n      </clr-button>\n   </clr-button-group>\n   <div class=\"view-container\">\n      <!-- iSCSI targets datagrid -->\n      <clr-datagrid [(clrDgSingleSelected)]=\"selectedTarget\">\n         <clr-dg-column [clrDgField]=\"'iqn'\" class=\"name-column\">\n            {{\"vsan.configure.iscsiTargets.target.list.iqn\" | localized}}\n            <clr-dg-string-filter [clrDgStringFilter]=\"iqnFilter\"></clr-dg-string-filter>\n         </clr-dg-column>\n         <clr-dg-column [clrDgField]=\"'alias'\"\n                        [clrDgSortOrder]=\"ascSort\"\n                        class=\"info-column\">\n            {{\"vsan.configure.iscsiTargets.target.list.alias\" | localized}}\n            <clr-dg-string-filter [clrDgStringFilter]=\"aliasFilter\"></clr-dg-string-filter>\n         </clr-dg-column>\n         <clr-dg-column [clrDgField]=\"'lunCount'\">\n            {{\"vsan.configure.iscsiTargets.target.list.luns\" | localized}}\n            <clr-dg-string-filter [clrDgStringFilter]=\"lunCountFilter\"></clr-dg-string-filter>\n         </clr-dg-column>\n         <clr-dg-column [clrDgField]=\"'networkInterface'\">\n            {{\"vsan.configure.iscsiTargets.target.list.network\" | localized}}\n            <clr-dg-string-filter [clrDgStringFilter]=\"networkInterfaceFilter\"></clr-dg-string-filter>\n         </clr-dg-column>\n         <clr-dg-column [clrDgSortBy]=\"ioOwnerHostComparator\" class=\"info-column\">\n            {{\"vsan.configure.iscsiTargets.target.list.io.owner.host\" | localized}}\n            <clr-dg-string-filter [clrDgStringFilter]=\"ioOwnerHostFilter\"></clr-dg-string-filter>\n         </clr-dg-column>\n         <clr-dg-column *ngIf=\"isTargetLocationSupported\" [clrDgSortBy]=\"targetLocationComparator\">\n            {{\"vsan.configure.iscsiTargets.target.list.location\" | localized}}\n            <clr-dg-string-filter [clrDgStringFilter]=\"targetLocationFilter\"></clr-dg-string-filter>\n         </clr-dg-column>\n         <clr-dg-column [clrDgField]=\"'port'\">\n            {{\"vsan.configure.iscsiTargets.target.list.tcp.port\" | localized}}\n            <clr-dg-string-filter [clrDgStringFilter]=\"portFilter\"></clr-dg-string-filter>\n         </clr-dg-column>\n         <clr-dg-column [clrDgSortBy]=\"healthComparator\" class=\"info-column\">\n            {{\"vsan.configure.iscsiTargets.target.list.health\" | localized}}\n            <clr-dg-string-filter [clrDgStringFilter]=\"healthFilter\"></clr-dg-string-filter>\n         </clr-dg-column>\n         <clr-dg-column [clrDgField]=\"'storagePolicy'\" class=\"info-column\">\n            {{\"vsan.configure.iscsiTargets.target.list.storage.policy\" | localized}}\n            <clr-dg-string-filter [clrDgStringFilter]=\"storagePolicyFilter\"></clr-dg-string-filter>\n         </clr-dg-column>\n         <clr-dg-column [clrDgSortBy]=\"complianceResultComparator\" class=\"info-column\">\n            {{\"vsan.configure.iscsiTargets.target.list.compliance.status\" | localized}}\n            <clr-dg-string-filter [clrDgStringFilter]=\"complianceResultFilter\"></clr-dg-string-filter>\n         </clr-dg-column>\n         <clr-dg-column [clrDgSortBy]=\"authTypeComparator\">\n            {{\"vsan.configure.iscsiTargets.target.list.authentication\" | localized}}\n            <clr-dg-string-filter [clrDgStringFilter]=\"authTypeFilter\"></clr-dg-string-filter>\n         </clr-dg-column>\n         <clr-dg-row *clrDgItems=\"let target of targetList\"\n                     [clrDgItem]=\"target\"\n                     (click)=\"selectTarget(target)\">\n            <!-- IQN -->\n            <clr-dg-cell vsan-show-title>\n               {{target.iqn}}\n            </clr-dg-cell>\n            <!-- Alias -->\n            <clr-dg-cell vsan-show-title>\n               <clr-icon [attr.shape]=\"Icon.ISCSI_TARGET\" aria-hidden=\"true\"></clr-icon>\n               <span>{{target.alias}}</span>\n            </clr-dg-cell>\n            <!-- LUNs -->\n            <clr-dg-cell>{{target.lunCount}}</clr-dg-cell>\n            <!-- Network -->\n            <clr-dg-cell>\n               <span (click)=\"signpostClicked($event)\" *ngIf=\"isValidHost(target.ioOwnerHost)\">\n                  <clr-signpost [vsan-signpost-title]=\"'vsan.configure.iscsiTargets.target.list.network.signpost.label' | localized: target.networkInterface\">\n                     <button class=\"btn btn-link\" clrSignpostTrigger>{{target.networkInterface}}</button>\n                     <clr-signpost-content *clrIfOpen clrPosition=\"bottom-middle\">\n                        <div class=\"spinner spinner-inline\"\n                             *ngIf=\"!ipConfigDataMap.get(getTargetNetworkKey(target))\"></div>\n                        <iscsi-network-ip-settings *ngIf=\"ipConfigDataMap.get(getTargetNetworkKey(target))\"\n                                                   [networkIpSetting]=\"ipConfigDataMap.get(getTargetNetworkKey(target))\">\n                        </iscsi-network-ip-settings>\n                     </clr-signpost-content>\n                  </clr-signpost>\n               </span>\n            </clr-dg-cell>\n            <!-- I/O Owner Host -->\n            <clr-dg-cell>\n               <vsan-mor-cell *ngIf=\"getIoOwnerHostUuid(target)\"\n                              [shape]=\"Icon.HOST\"\n                              [name]=\"getIoOwnerHostName(target)\"\n                              [suffix]=\"isTargetLocationSupported ? getDomainName(target.ioOwnerHost) : ''\"\n                              [objectId]=\"getIoOwnerHostUuid(target)\">\n               </vsan-mor-cell>\n            </clr-dg-cell>\n            <!-- Target Location -->\n            <clr-dg-cell *ngIf=\"isTargetLocationSupported\">\n               <vsan-icon-item *ngIf=\"isIoOwnerHostInDesiredDomain(target); else mismatched\"\n                               [label]=\"getTargetLocationLabel(target.affinityLocation)\"\n                               [shape]=\"getTargetLocationShape(target)\"\n                               [iconClass]=\"getTargetLocationIconClass(target)\">\n               </vsan-icon-item>\n               <ng-template #mismatched>\n                  <div id=\"locationWithTooltip\"\n                       role=\"tooltip\"\n                       aria-haspopup=\"true\"\n                       class=\"tooltip tooltip-md tooltip-right\">\n                     <vsan-icon-item [label]=\"getTargetLocationLabel(target.affinityLocation)\"\n                                     [shape]=\"getTargetLocationShape(target)\"\n                                     [iconClass]=\"getTargetLocationIconClass(target)\">\n                     </vsan-icon-item>\n                     <span class=\"tooltip-content\">{{getTargetLocationTooltip(target.affinityLocation)}}</span>\n                  </div>\n               </ng-template>\n            </clr-dg-cell>\n            <!-- TCP Port -->\n            <clr-dg-cell>\n               {{target.port}}\n            </clr-dg-cell>\n            <!-- Health -->\n            <clr-dg-cell>\n               <vsan-icon-item [label]=\"target.healthState | healthStateLabel\"\n                               [iconClass]=\"target.healthState | healthStateIconClass\"\n                               [shape]=\"target.healthState | healthStateIconShape\">\n               </vsan-icon-item>\n            </clr-dg-cell>\n            <!-- Storage Policy -->\n            <clr-dg-cell vsan-show-title>\n               <span *ngIf=\"!readPoliciesPermission\">{{\"vsan.common.hidden\" | localized}}</span>\n               <span *ngIf=\"!target?.storagePolicy && readPoliciesPermission\">{{\"vsan.na.label\" | localized}}</span>\n               <div *ngIf=\"target?.storagePolicy && readPoliciesPermission\" title=\"{{target.storagePolicy}}\">\n                  <clr-icon [attr.shape]=\"Icon.VM_STORAGE_PROFILE_IMAGE\" aria-hidden=\"true\"></clr-icon>\n                  {{target.storagePolicy}}\n               </div>\n            </clr-dg-cell>\n            <!-- Compliance Status -->\n            <clr-dg-cell>\n               <span *ngIf=\"!complianceResultVisible(target)\">{{\"vsan.na.label\" | localized}}</span>\n               <vsan-icon-item *ngIf=\"complianceResultVisible(target)\"\n                               [label]=\"VsanIscsiUtil.getComplianceLabel(target.complianceResult)\"\n                               [iconClass]=\"VsanIscsiUtil.getComplianceIconClass(target?.complianceStatus)\"\n                               [shape]=\"VsanIscsiUtil.getComplianceShape(target?.complianceStatus)\">\n               </vsan-icon-item>\n            </clr-dg-cell>\n            <!-- Authentication-->\n            <clr-dg-cell>{{VsanIscsiUtil.getAuthenticationLabel(target.authType)}}</clr-dg-cell>\n         </clr-dg-row>\n         <!-- Datagrid Footer -->\n         <clr-dg-footer>{{\"vsan.configure.iscsiTargets.target.footer\" | localized: targetList.length}}</clr-dg-footer>\n      </clr-datagrid>\n      <!-- Luns and Allowed initiators -->\n      <div class=\"details-container\">\n         <ng-container *ngIf=\"selectedTarget\">\n            <vsan-lun-list class=\"child-datagrid\"\n                           [targetAlias]=\"selectedTarget?.alias\"\n                           [hasComputePrivileges]=\"hasComputePrivileges\"\n                           [readPoliciesPermission]=\"readPoliciesPermission\"\n                           (changeLunCount)=\"updateTarget($event)\"\n                           (lunsOperationFailed)=\"handleDataFailed($event)\">\n            </vsan-lun-list>\n            <vsan-allowed-initiators class=\"right-child-datagrid child-datagrid\"\n                                     [targetAlias]=\"selectedTarget?.alias\"\n                                     [hasComputePrivileges]=\"hasComputePrivileges\"\n                                     (getAllowedInitiatorsFailed)=\"handleDataFailed($event)\">\n            </vsan-allowed-initiators>\n         </ng-container>\n      </div>\n   </div>\n</ng-container>\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {Icon} from \"@util/icon\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {IscsiTarget} from \"@generated/iscsi-target\";\nimport {TargetOperationSpec} from \"@generated/target-operation-spec\";\nimport {VsanIscsiTargetMutationProvider} from \"@generated/vsan-iscsi-target-mutation-provider\";\n\n@Component({\n   selector: \"vsan-batch-reapply\",\n   templateUrl: \"batch-policy-reapply.html\",\n   styleUrls: [\"../view/iscsi-common.scss\"],\n})\nexport class BatchPolicyReapplyComponent implements OnInit {\n   Icon = Icon;\n\n   reapplying: boolean;\n   alertMessages: string[] = [];\n   content: string;\n   selectedTargets: IscsiTarget[] = [];\n   targets: IscsiTarget[] = [];\n\n   constructor(private targetMutationProvider: VsanIscsiTargetMutationProvider) {}\n\n   ngOnInit() {\n      this.targets = VsanUiUtils.getModalContext().targets;\n\n      const total: number = this.targets.length;\n      if (total === 1) {\n         this.content = VsanUiUtils.getString(\n               \"vsan.configure.iscsiTargets.target.batch.reapply.dialog.content.singular\");\n      } else {\n         this.content = VsanUiUtils.getString(\n               \"vsan.configure.iscsiTargets.target.batch.reapply.dialog.content.plural\", total);\n      }\n   }\n\n   get applyButtonEnabled(): boolean {\n      return !this.reapplying && this.selectedTargets.length > 0;\n   }\n\n   ok = (): void => {\n      this.alertMessages = [];\n\n      const specs: TargetOperationSpec[] = this.selectedTargets.map((target: IscsiTarget) => {\n         return TargetOperationSpec.Factory.create(target.alias, null, null, null, null, null,\n               target.vmStoragePolicyUuid, null);\n      });\n\n      this.reapplying = true;\n      this.targetMutationProvider.batchPolicyReapply(ManagedObject.contextObject, specs).then(this.close)\n            .catch((error: string) => {\n               this.reapplying = false;\n               this.alertMessages.push(error);\n            });\n   };\n\n   private close = (tasks: ManagedObject[] = null): void => {\n      this.reapplying = false;\n      VsanUiUtils.closeModalDialog(tasks);\n   };\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {ActionButtonModule} from \"@component/action-button/action-button.module\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {CommonCellsModule} from \"@component/cell/common-cells.module\";\nimport {InventoryBrowserModule} from \"@component/inventory/inventory-browser.module\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {TreeDatagridModule} from \"@component/datagrid/tree-datagrid.module\";\nimport {DatetimePickerModule} from \"@component/datetime-picker/datetime-picker.module\";\nimport {PopupListModule} from \"@component/popup-list/popup-list.module\";\nimport {VsanBreadcrumbModule} from \"@component/navigation/vsan-breadcrumb.module\";\n\n@NgModule({\n   imports: [\n         CommonDirectiveModule,\n         CommonPipeModule,\n         ValidationModule,\n         ActionButtonModule,\n         PromptModule,\n         CommonCellsModule,\n         InventoryBrowserModule,\n         SearchModule,\n         TreeDatagridModule,\n         DatetimePickerModule,\n         PopupListModule,\n         VsanBreadcrumbModule,\n   ],\n   exports: [\n      CommonDirectiveModule,\n      CommonPipeModule,\n      ValidationModule,\n      ActionButtonModule,\n      PromptModule,\n      CommonCellsModule,\n      InventoryBrowserModule,\n      SearchModule,\n      TreeDatagridModule,\n      DatetimePickerModule,\n      PopupListModule,\n      VsanBreadcrumbModule,\n   ],\n})\nexport class VsanCommonModule { }","/* Copyright 2017-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanIscsiUtil} from \"@util/vsan-iscsi-util\";\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, ValidationErrors, ValidatorFn} from \"@angular/forms\";\nimport {ReactiveFormUtil} from \"@util/reactive-form-util\";\n\n@Component({\n   selector: \"vsan-add-initiators\",\n   templateUrl: \"add-initiators.html\",\n   styleUrls: [\"../view/iscsi-common.scss\", \"add-initiators.scss\"],\n})\nexport class AddInitiatorsComponent implements OnInit {\n   addInitiatorGroup: FormGroup;\n   selectedInitiator: string;\n   initiators: string[] = [];\n   nameErrorMessage: string;\n\n   @Input()\n   isRequired: boolean;\n\n   @Input()\n   existingInitiators: string[];\n\n   @Output()\n   selectedInitiators: EventEmitter<string[]> = new EventEmitter<string[]>();\n\n   constructor(private formBuilder: FormBuilder) {\n      this.addInitiatorGroup = this.formBuilder.group({\n         initiatorName: new FormControl(\"\", [this.validate])\n      });\n   }\n\n   ngOnInit() {\n      if (this.existingInitiators) {\n         // Copy into new array to avoid changing the original array\n         this.initiators = this.existingInitiators.map( initiator => initiator);\n      }\n   }\n\n   validate: ValidatorFn = (ctrl: AbstractControl): ValidationErrors | null => {\n         const initiatorName: string = ctrl.value;\n         this.nameErrorMessage = null;\n\n         if (this.isRequired && !initiatorName.trim()) {\n            this.nameErrorMessage = VsanUiUtils.getString(\"vsan.configure.iscsiTargets.initiators.name.isNull\");\n         }\n         // Verify that the name matches the rules.\n         else if (!VsanIscsiUtil.validateIqn(initiatorName)) {\n            return {'incorrectNameRules': {value: initiatorName}};\n         }\n         // Verify that the name is duplicated.\n         else if (this.initiators.length > 0 && this.initiators.includes(initiatorName)) {\n            this.nameErrorMessage = VsanUiUtils.getString(\"vsan.configure.iscsiTargets.initiators.name.exist\");\n         }\n         // Verify that the name doesn't exist in the already added initiators from the initiator group.\n         else if(this.existingInitiators && this.existingInitiators.includes(initiatorName)) {\n            this.nameErrorMessage = VsanUiUtils.getString(\"vsan.configure.iscsiTargets.initiators.name.exist\");\n         }\n\n         if (!this.nameErrorMessage) {\n            return null;\n         }\n\n         return {'validationError': {value: this.nameErrorMessage}};\n   };\n\n   selectInitiator = (initiator: string): void => {\n      if (this.selectedInitiator == initiator) {\n         return;\n      }\n      this.selectedInitiator = initiator;\n   };\n\n   addInitiator = (): void => {\n      ReactiveFormUtil.validateAllFormFields(this.addInitiatorGroup);\n\n      if (!this.addInitiatorGroup.valid) {\n         return;\n      }\n\n      const control = this.addInitiatorGroup.get(\"initiatorName\");\n      this.initiators.push(control.value);\n      this.selectedInitiators.emit(this.initiators);\n      control.patchValue(\"\");\n      this.nameErrorMessage = null;\n   };\n\n   addAllowed = (): boolean => {\n      if (this.isRequired) {\n         // When initiators are required all check are included in the form validation.\n         return this.addInitiatorGroup.valid && this.addInitiatorGroup.touched;\n      } else {\n         // When initiators aren't required this check is not included in the form validation.\n         const initiatorNameIsNotEmpty = this.addInitiatorGroup.get(\"initiatorName\").value.trim().length > 0;\n         return this.addInitiatorGroup.valid && this.addInitiatorGroup.touched && initiatorNameIsNotEmpty;\n      }\n   };\n\n   // Only allow remove on initiators added during the dialog, but not ones that existed before that\n   removeAllowed = (): boolean => {\n      // If no selection, not allowed\n      if (!this.selectedInitiator) {\n         return false;\n      }\n      // The are no existing initiators, so nothing more to check\n      if (!this.existingInitiators) {\n         return true;\n      }\n      // Finally check that the selected one is not from existing ones\n      return !this.existingInitiators.includes(this.selectedInitiator);\n   };\n\n   removeInitiator = (): void => {\n      this.initiators = this.initiators.filter(existingName => {return existingName != this.selectedInitiator});\n      this.selectedInitiators.emit(this.initiators);\n      this.selectedInitiator = null;\n   };\n}\n","<!--Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div *ngIf=\"loading\" class=\"central-spinner spinner\"></div>\n\n<vsan-validation id=\"iscsi-initiator-groups-view-validation\"\n                 *ngIf=\"alertMessage\"\n                 [alert]=\"alertMessage\"\n                 (onClosed)=\"alertMessage = null\">\n</vsan-validation>\n\n<ng-container *ngIf=\"!loading\">\n   <h6 vsan-auto-focus>\n      {{\"vsan.configure.iscsiTargets.initiatorGroups.title\" | localized}}\n   </h6>\n   <clr-button-group vsan-button-group class=\"btn-link\">\n      <clr-button id=\"add-initiator-groups-action\"\n                  name=\"add-initiator-groups-action\"\n                  (click)=\"openAddInitiatorGroupDialog()\"\n                  class=\"btn btn-sm\"\n                  [disabled]=\"!hasEditPermissions\"\n                  [vsan-button-title]=\"VsanUiUtils.getActionTitle(hasEditPermissions,\n                        'vsan.configure.iscsiTargets.initiatorGroups.add.description')\">\n         {{\"vsan.configure.iscsiTargets.initiatorGroups.add.label\" | localized}}\n      </clr-button>\n      <clr-button id=\"remove-initiatorGroups-action\"\n                  name=\"remove-initiatorGroups-action\"\n                  *ngIf=\"selectedInitiatorGroup\"\n                  (click)=\"openRemoveInitiatorGroupDialog()\"\n                  class=\"btn btn-sm\"\n                  [disabled]=\"!hasEditPermissions\"\n                  [vsan-button-title]=\"VsanUiUtils.getActionTitle(hasEditPermissions,\n                        'vsan.configure.iscsiTargets.initiatorGroups.remove.description')\">\n         {{\"vsan.configure.iscsiTargets.initiatorGroups.remove.label\" | localized}}\n      </clr-button>\n   </clr-button-group>\n\n   <div class=\"view-container\">\n      <clr-datagrid [(clrDgSingleSelected)]=\"selectedInitiatorGroup\">\n         <clr-dg-column [clrDgField]=\"'name'\" class=\"name-column\">\n            {{\"vsan.configure.iscsiTargets.initiatorGroups.list.name\" | localized}}\n            <clr-dg-string-filter [clrDgStringFilter]=\"nameFilter\"></clr-dg-string-filter>\n         </clr-dg-column>\n         <clr-dg-column [clrDgSortBy]=\"initiatorCountComparator\">\n            {{\"vsan.configure.iscsiTargets.initiatorGroups.list.count\" | localized}}\n            <clr-dg-string-filter [clrDgStringFilter]=\"initiatorCountFilter\"></clr-dg-string-filter>\n         </clr-dg-column>\n         <clr-dg-row *clrDgItems=\"let group of initiatorGroupList\"\n                     [clrDgItem]=\"group\"\n                     (click)=\"selectGroup(group)\">\n            <!-- Group Name -->\n            <clr-dg-cell vsan-show-title>\n               {{ group.name }}\n            </clr-dg-cell>\n            <!-- Initiator Count -->\n            <clr-dg-cell>\n               {{group.initiators.length}}\n            </clr-dg-cell>\n         </clr-dg-row>\n         <!-- Datagrid Footer -->\n         <clr-dg-footer>{{\"vsan.configure.iscsiTargets.initiatorGroups.footer\" | localized: initiatorGroupList.length}}\n         </clr-dg-footer>\n      </clr-datagrid>\n\n      <div class=\"details-container\">\n         <ng-container *ngIf=\"selectedInitiatorGroup\">\n            <vsan-initiator-list [initiatorGroupName]=\"selectedInitiatorGroup.name\"\n                                 [initiatorList]=\"selectedInitiatorGroup.initiators\"\n                                 [hasEditPermissions]=\"hasEditPermissions\"\n                                 (refreshGroupList)=\"refreshGroupList()\">\n            </vsan-initiator-list>\n            <vsan-accessible-targets [initiatorGroupName]=\"selectedInitiatorGroup.name\"\n                                     [accessibleTargets]=\"selectedInitiatorGroup.targets\"\n                                     [hasEditPermissions]=\"hasEditPermissions\"\n                                     (refreshGroupList)=\"refreshGroupList()\">\n            </vsan-accessible-targets>\n         </ng-container>\n      </div>\n   </div>\n</ng-container>","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {SearchComponent} from \"@component/search/search.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule\n   ],\n   declarations: [\n      SearchComponent\n   ],\n   exports: [\n      SearchComponent\n   ],\n})\nexport class SearchModule {\n}\n","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {IscsiTarget} from \"@generated/iscsi-target\";\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\n\nexport class PortFilter implements ClrDatagridStringFilterInterface<IscsiTarget> {\n   accepts = (target: IscsiTarget, search: string): boolean => {\n      return target.port.toString().indexOf(search) > -1;\n   };\n}","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ActionButtonSeparatorComponent} from \"@component/action-button/action-button-separator.component\";\nimport {ButtonTitleDirective} from \"@component/action-button/button-title.directive\";\nimport {ButtonGroupDirective} from \"@component/action-button/button-group.directive\";\nimport {ButtonGroupWrapDirective} from \"@component/action-button/button-group-wrap.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n   ],\n   declarations: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ],\n   exports: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ]\n})\nexport class ActionButtonModule {\n}\n","\nexport interface InitiatorGroupTargetRemoveSpec {\n\n   initiatorGroupName: string;\n   targetAlias: string;\n} //class InitiatorGroupTargetRemoveSpec\n\nexport module InitiatorGroupTargetRemoveSpec{\nexport class Factory {\n\n   static create = (initiatorGroupName: string, targetAlias: string): InitiatorGroupTargetRemoveSpec => {\n      return { initiatorGroupName: initiatorGroupName, targetAlias: targetAlias, };\n   }\n\n\n} //class Factory\n\n} //module InitiatorGroupTargetRemoveSpec\n","/* Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ClrDatagridComparatorInterface} from \"@clr/angular\";\nimport {VsanHealthUtil} from \"@util/vsan-health-util\";\nimport {VsanObject} from \"@generated/vsan-object\";\n\nexport class HealthComparator implements ClrDatagridComparatorInterface<VsanObject> {\n   compare = (o1: VsanObject, o2: VsanObject): number => {\n      return VsanHealthUtil.getVsanObjectHealthStatusText(o1.healthState).localeCompare(\n            VsanHealthUtil.getVsanObjectHealthStatusText(o2.healthState));\n   };\n}","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanIscsiUtil} from \"@util/vsan-iscsi-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanIscsiTargetMutationProvider} from \"@generated/vsan-iscsi-target-mutation-provider\";\nimport {TargetInitiatorEditSpec} from \"@generated/target-initiator-edit-spec\";\nimport {InitiatorGroup} from \"@generated/initiator-group\";\nimport {TargetInitiatorRemoveSpec} from \"@generated/target-initiator-remove-spec\";\nimport {VsanIscsiInitiatorGroupPropertyProvider} from \"@generated/vsan-iscsi-initiator-group-property-provider\";\n\n@Component({\n   templateUrl: \"add-target-initiator.html\",\n   styleUrls: [\"./add-target-initiator.scss\"],\n   selector: \"vsan-iscsi-add-allowed-initiator\"\n})\nexport class AddTargetInitiatorComponent implements OnInit {\n   targetAlias: string;\n   private allowedInitiators: string[];\n\n   initiatorsInputStr: string = \"\";\n   initiatorGroupList: InitiatorGroup[];\n   selectedInitiatorGroups: InitiatorGroup[] = [];\n\n   selectedInitiatorType: AllowedInitiatorType = AllowedInitiatorType.EVERYONE;\n   allowedType = AllowedInitiatorType;\n\n   loading: boolean = false;\n   alertMessages: string[];\n\n   constructor(private propertyProvider: VsanIscsiInitiatorGroupPropertyProvider,\n      private mutationProvider: VsanIscsiTargetMutationProvider) {}\n\n   ngOnInit() {\n      this.targetAlias = VsanUiUtils.getModalContext().targetAlias;\n      this.allowedInitiators = VsanUiUtils.getModalContext().allowedInitiators;\n      if (this.allowedInitiators.length === 1) {\n         this.allowedInitiators = this.allowedInitiators.filter(\n               initiator => initiator !=\n                     VsanUiUtils.getString(\"vsan.configure.iscsiTargets.allowed.initiators.type.everyone\"));\n      }\n\n      this.loading = true;\n      let clusterRef: ManagedObject = ManagedObject.contextObject;\n      this.propertyProvider.getVsanIscsiInitiatorGroupList(clusterRef)\n            .then((list): void => {\n               this.loading = false;\n               // Include only initiators that are not already in the allowed initiators list.\n               this.initiatorGroupList = (list === null) ? [] : list.filter(group => {\n                  return this.allowedInitiators.indexOf(group.name) === -1;\n               });\n            }).catch(this.handleError)\n   }\n\n   ok = () => {\n      if (!this.validate()) {\n         return;\n      }\n      let clusterRef: ManagedObject = ManagedObject.contextObject;\n      /**\n       * everyone access means we need to remove all the allowed initiators\n       */\n      if (this.selectedInitiatorType === AllowedInitiatorType.EVERYONE) {\n         if (this.allowedInitiators.length === 0) {\n            //the target was everyone access, do nothing\n            VsanUiUtils.closeModalDialog(false);\n            return;\n         }\n         const removeSpec: TargetInitiatorRemoveSpec =\n            TargetInitiatorRemoveSpec.Factory.create(this.targetAlias, this.allowedInitiators);\n         this.mutationProvider.disallowInitiatorAccess(clusterRef, removeSpec)\n            .then(() => {\n               /**\n                * mutationProvider.disallowInitiatorAccess doesn't create a backend task, so we just pass true\n                */\n               VsanUiUtils.closeModalDialog(true);\n            })\n            .catch(this.handleError);\n         return;\n      }\n\n      const spec: TargetInitiatorEditSpec = TargetInitiatorEditSpec.Factory.create(\n            this.targetAlias, this.getInitiatorsFromInput());\n      this.mutationProvider.allowInitiatorAccess(clusterRef, spec)\n            .then(() => {\n               /**\n                * mutationProvider.allowInitiatorAccess doesn't create a backend task, so we just pass true\n                */\n               VsanUiUtils.closeModalDialog(true);\n            })\n            .catch(this.handleError);\n   };\n\n   close = () => {\n      VsanUiUtils.closeModalDialog(false);\n   };\n\n   private validate = (): boolean => {\n      switch(this.selectedInitiatorType) {\n         case AllowedInitiatorType.INITIATOR:\n            let iqns: string[] = this.getInitiatorsFromInput();\n            if (iqns.length == 0) {\n               this.alertMessages =\n                     [VsanUiUtils.getString(\"vsan.configure.iscsiTargets.allowed.initiators.type.initiator.iqn.empty.error\")];\n               return false;\n            }\n            if (iqns.some(iqn => !VsanIscsiUtil.validateIqn(iqn.trim()))) {\n               this.alertMessages =\n                     [VsanUiUtils.getString(\"vsan.configure.iscsiTargets.allowed.initiators.type.initiator.iqn.error\")];\n               return false;\n            }\n            // Display an error message when the entered IQN already exists in the target.\n            const invalidIQNs: string[] = iqns.filter(iqn => {\n               return this.allowedInitiators.indexOf(iqn) > -1;\n            });\n            if (invalidIQNs.length === 1) {\n               this.alertMessages = [VsanUiUtils.getString(\n                     \"vsan.configure.iscsiTargets.allowed.initiators.type.initiator.iqn.repeated.singular\",\n                     invalidIQNs[0], this.targetAlias)];\n               return false;\n            } else if (invalidIQNs.length > 1) {\n               this.alertMessages = [VsanUiUtils.getString(\n                  \"vsan.configure.iscsiTargets.allowed.initiators.type.initiator.iqn.repeated.plural\",\n                  invalidIQNs.join(\", \"), this.targetAlias)];\n               return false;\n            }\n            break;\n         case AllowedInitiatorType.GROUP:\n            if (this.selectedInitiatorGroups.length == 0) {\n               this.alertMessages=\n                  [VsanUiUtils.getString(\"vsan.configure.iscsiTargets.allowed.initiators.type.group.notSelected.error\")];\n               return false;\n            }\n            break;\n         default:\n            this.alertMessages = null;\n            return true;\n      }\n      return true;\n   };\n\n   private handleError = (error: any) => {\n      this.loading = false;\n      this.alertMessages = [error];\n   };\n\n   private getInitiatorsFromInput = (): string[] => {\n      switch(this.selectedInitiatorType) {\n         case AllowedInitiatorType.EVERYONE:\n            return [];\n         case AllowedInitiatorType.INITIATOR:\n            return this.initiatorsInputStr.trim().split(\",\")\n                  .filter(iqn => !!iqn.trim()) //remove the blank string\n                  .map(iqn => iqn.trim()); //trim the iqn string\n         case AllowedInitiatorType.GROUP:\n            return this.selectedInitiatorGroups.map(group => group.name);\n         default:\n            throw new Error(\"Unsupported value found: \" + this.selectedInitiatorType);\n      }\n   };\n}\n\nexport enum AllowedInitiatorType {\n   EVERYONE, INITIATOR, GROUP\n}","<!--Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<h5 vsan-auto-focus>\n   {{\"vsan.iscsiTargets\" | localized}}\n</h5>\n<div *ngIf=\"loading\" class=\"central-spinner\">\n   <div class=\"spinner\"></div>\n</div>\n\n<vsan-validation id=\"configuration-falied-message\"\n                 *ngIf=\"alertMessage\"\n                 [alert]=\"alertMessage\"\n                 [allowReload]=\"false\"\n                 [allowClose]=\"false\">\n</vsan-validation>\n\n<ng-container *ngIf=\"!loading\">\n   <div role=\"tablist\"\n        class=\"btn-group btn-outline-primary btn-sm\"\n        [attr.aria-label]=\"'vsan.iscsiTargets.tablist.label'|localized\">\n      <button id=\"iscsi-target-service-{{index}}\"\n              role=\"tab\"\n              class=\"btn\"\n              (click)=\"onViewSelected(index)\"\n              [attr.aria-selected]=\"index == currentViewIndex\"\n              [ngClass]=\"{'btn-primary': index == currentViewIndex}\"\n              *ngFor=\"let availView of iscsiViews; let index = index\"\n              [attr.aria-controls]=\"'iscsi-target-service-panel-'+index\">\n         {{availView}}\n      </button>\n   </div>\n   <vsan-iscsi-targets-view id=\"iscsi-target-service-panel-0\"\n                            *ngIf=\"currentViewIndex == 0\"\n                            role=\"tabpanel\"\n                            aria-labelledby=\"iscsi-target-service-0\"\n                            [hasComputePrivileges]=\"hasEditPrivilege\"\n                            [readPoliciesPermission]=\"readPoliciesPermission\"\n                            [(selectedTarget)]=\"selectedIscsiTarget\">\n   </vsan-iscsi-targets-view>\n   <vsan-initiator-groups-view id=\"iscsi-target-service-panel-1\"\n                               *ngIf=\"currentViewIndex == 1\"\n                               role=\"tabpanel\"\n                               aria-labelledby=\"iscsi-target-service-1\"\n                               [hasEditPermissions]=\"hasEditPrivilege\">\n   </vsan-initiator-groups-view>\n</ng-container>\n"]}