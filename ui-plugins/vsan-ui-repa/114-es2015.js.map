{"version":3,"sources":["./src/app/vsan/common/directive/clr-button-group/clr-button-base.directive.ts","./src/app/vsan/common/component/datagrid/tree-datagrid.module.ts","./src/app/vsan/common/service/navigation/model/ask-vmware-id.ts","./src/app/vsan/common/component/popup-list/popup-list.module.ts","./src/app/vsan/cluster-power/wizard/summary-page.html","./src/app/vsan/common/component/navigation/vsan-breadcrumb.module.ts","./src/app/vsan/cluster-power/wizard/precheck-page.html","./src/app/vsan/common/pipe/virtual-objects/health-state-label.pipe.ts","./src/app/vsan/cluster-power/wizard/vcenter-server-notice-page.html","./src/app/vsan/common/component/inventory/inventory-browser.module.ts","./src/app/vsan/common/service/status-updates/vsan-status-change.data.ts","./src/app/vsan/cluster-power/wizard/cluster-shutdown-wizard.html","./src/app/vsan/cluster-power/wizard/vcenter-server-notice-page.component.ts","./src/app/vsan/cluster-power/wizard/cluster-shutdown-wizard.component.ts","./src/app/vsan/common/directive/external-link/external-link.directive.ts","./src/app/vsan/cluster-power/wizard/cluster-shutdown-wizard.module.ts","./src/app/vsan/common/vsan-common.module.ts","./src/app/vsan/common/component/search/search.module.ts","./src/app/vsan/cluster-power/wizard/precheck-page.component.ts","./src/app/vsan/common/component/action-button/action-button.module.ts","./src/app/vsan/cluster-power/wizard/summary-page.component.ts"],"names":[],"mappings":"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","file":"114-es2015.js","sourcesContent":["/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ClrButton} from \"@clr/angular\";\n\n/**\n * Use this class as base class for directive, which handles clr-button. It will help to link the rendered button with\n * the clr-button on which the directive is applied.\n */\nexport abstract class ClrButtonBaseDirective {\n\n   constructor(private clrButton: ClrButton) {\n      if (!clrButton) {\n         return;\n      }\n      // name should be set, if not provided in template - generate one. ClrButtom#name is used to generate the name\n      // attribute of the markup button. Later the name is used to match the generated markup with the directive.\n      if (!clrButton.name) {\n         clrButton.name = Math.random().toString();\n      }\n\n      const directiveHolder: DirectiveHolder = (clrButton as DirectiveHolder);\n      directiveHolder.directives = directiveHolder.directives || [];\n      directiveHolder.directives.push(this);\n   }\n\n   /**\n    * This method will be called when the actual html button is rendered.\n    */\n   abstract resolveButton(clrButton: ClrButton, button: HTMLButtonElement, index: number);\n}\n\nexport interface DirectiveHolder extends ClrButton {\n   directives: ClrButtonBaseDirective[];\n}","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {TreeExpanderComponent} from \"@component/datagrid/tree-expander.component\";\nimport {TreeColumnComponent} from \"@component/datagrid/tree-column.component\";\nimport {EnumeratedFilterComponent} from \"./filter/enumerated-filter.component\";\nimport {EnumeratedFilterItemComponent} from \"./filter/enumerated-filter-item.component\";\nimport {EnumFilterComponent} from \"@component/datagrid/filter/enum-filter.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n   ],\n   declarations: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumeratedFilterComponent,\n      EnumFilterComponent,\n   ],\n   exports: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumFilterComponent,\n   ],\n})\nexport class TreeDatagridModule {\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n/**\n * IDs used in external navigation to Ask VMware pages\n */\nexport enum AskVmwareId {\n   CLUSTER_SHUTDOWN = \"com.vmware.vsan.clustershutdown.vmshutdown\",\n   FILE_SERVICE = \"fileservice.user.guide\",\n   FILE_SERVICE_IMBALANCE = \"com.vmware.vsan.fileservice.remediate.imbalance\",\n   TOP_CONTRIBUTORS = \"com.vmware.vsan.perf.graph.topn\",\n   OBFUSCATED_DATA = \"com.vmware.vsan.obfuscation.data.map\",\n   VM_CONSUMPTION_IOPS = \"com.vmware.vsan.perf.graph.cluster-domclient.iops\",\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {PopupListComponent} from \"@component/popup-list/popup-list.component\";\nimport {PopupListItemDirective} from \"@component/popup-list/popup-list-item.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      CommonPipeModule\n   ],\n   declarations: [\n      PopupListComponent,\n      PopupListItemDirective\n   ],\n   exports: [\n      PopupListComponent,\n      PopupListItemDirective\n   ]\n})\nexport class PopupListModule {\n}\n","<!-- Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div class=\"section-container\">\n   <div>{{\"vsan.cluster.shutdown.wizard.summaryPage.description\" | localized}}</div>\n   <div class=\"indent shutdown-steps\">\n      <ul>\n         <li>\n            <span>{{powerOffVmsMessage}}</span>\n            <vsan-validation [allowClose]=\"false\"\n                             [alert]=\"'vsan.cluster.shutdown.wizard.summaryPage.steps.powerOffVms.warning' | localized\"\n                             alertType=\"warning\">\n            </vsan-validation>\n         </li>\n         <li>{{\"vsan.cluster.shutdown.wizard.summaryPage.steps.turnOffDrsAndHa\" | localized}}</li>\n         <li>{{\"vsan.cluster.shutdown.wizard.summaryPage.steps.disableClusterMember\" | localized}}</li>\n         <li>{{\"vsan.cluster.shutdown.wizard.summaryPage.steps.disableAllCCPs\" | localized}}</li>\n         <li *ngIf=\"isVcOnVsan\">{{\"vsan.cluster.shutdown.wizard.summaryPage.steps.powerOffVcVm\" | localized}}</li>\n         <li>{{\"vsan.cluster.shutdown.wizard.summaryPage.steps.hostsInMaintenanceMode\" | localized}}</li>\n         <li>{{\"vsan.cluster.shutdown.wizard.summaryPage.steps.powerOffHosts\" | localized}}</li>\n      </ul>\n   </div>\n   <div>{{\"vsan.cluster.shutdown.wizard.summaryPage.steps.final\" | localized}}</div>\n</div>\n<div class=\"section-container-full\">\n   <clr-select-container>\n      <label for=\"shutdown-reason\">\n         {{\"vsan.cluster.shutdown.wizard.summaryPage.shutDownReason.label\" | localized}}\n      </label>\n      <select id=\"shutdown-reason\"\n              [(ngModel)]=\"selectedReason\"\n              (change)=\"shutdownReasonChanged()\"\n              clrSelect>\n         <option *ngFor=\"let reason of reasonKeys\"\n                 value=\"{{reason}}\">\n            {{reasons.get(reason) | localized}}</option>\n      </select>\n   </clr-select-container>\n   <clr-textarea-container class=\"control-full-width\"\n                           *ngIf=\"isCustomReasonSelected\">\n      <textarea id=\"manual-reason-input\"\n                class=\"reason-input\"\n                clrTextarea\n                vsan-auto-focus\n                [(ngModel)]=\"customReason\"\n                (keyup)=\"shutdownReasonChanged()\"\n                (keydown)=\"shutdownReasonChanged()\"\n                (keypress)=\"shutdownReasonChanged()\">\n      </textarea>\n   </clr-textarea-container>\n</div>","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {VsanBreadcrumbNavComponent} from \"./vsan-breadcrumb-nav.component\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\n\n@NgModule({\n   imports: [CommonModule, ClarityModule, CommonDirectiveModule, CommonPipeModule],\n   declarations: [VsanBreadcrumbNavComponent],\n   exports: [\n      VsanBreadcrumbNavComponent,\n   ],\n})\nexport class VsanBreadcrumbModule {}\n","<!-- Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div class=\"precheck-tests-container\">\n   <div *ngIf=\"!shutdownPrecheckFailedTests.length\" class=\"icon-name-container\">\n      <clr-icon class=\"is-solid\"\n                size=\"18\"\n                [ngClass]=[getHealthIconClass(VsanHealthStatus.green)]\n                [attr.shape]=\"getHealthIconShape(VsanHealthStatus.green)\">\n      </clr-icon>\n      <span>{{\"vsan.cluster.shutdown.wizard.precheckPage.allTestsGreen\" | localized}}</span>\n   </div>\n   <ng-container *ngIf=\"shutdownPrecheckFailedTests.length\">\n      <div *ngFor=\"let test of shutdownPrecheckFailedTests\" class=\"precheck-test\">\n         <div class=\"icon-name-container\">\n            <clr-icon class=\"is-solid\"\n                      size=\"18\"\n                      [ngClass]=[getHealthIconClass(test.status)]\n                      [attr.shape]=\"getHealthIconShape(test.status)\">\n            </clr-icon>\n            <span>{{test.testName}}</span>\n         </div>\n         <div class=\"test-body indent\">\n            <div *ngIf=\"isVmsShutdownTest(test)\">\n               <div>{{getVmsShutdownTestAlert()}}</div>\n               <a id=\"learn-more-link\"\n                  [external-link]=\"'vsan.cluster.shutdown.wizard.precheckPage.vms.not.shutdown.link' | localized\"\n                  [helpId]=\"AskVmwareId.CLUSTER_SHUTDOWN\">\n               </a>\n            </div>\n            <div class=\"infrastructure-vm-option\">\n               <ng-container *ngIf=\"isVmsShutdownTest(test) && showInfrastructureVmsOption()\">\n                  <clr-checkbox-container>\n                     <clr-checkbox-wrapper>\n                        <input type=\"checkbox\"\n                               clrCheckbox\n                               id=\"mark-infrastructure-vms\"\n                               name=\"mark-infrastructure-vms\"\n                               (change)=\"markInfrastructureVms($event.target)\"/>\n                        <label for=\"mark-infrastructure-vms\">\n                           {{\"vsan.cluster.shutdown.wizard.precheckPage.infrastructure.vms\" | localized}}\n                        </label>\n                     </clr-checkbox-wrapper>\n                  </clr-checkbox-container>\n                  <vsan-validation *ngIf=\"infrastructureVMs?.length\"\n                                   [alertType]=\"'warning'\"\n                                   [allowClose]=\"false\"\n                                   [alert]=\"'vsan.cluster.shutdown.wizard.precheckPage.vms.not.shutdown.error.self.contain.cluster.warning' | localized\">\n                  </vsan-validation>\n               </ng-container>\n               <clr-datagrid *ngIf=\"showTestDetails(test)\"\n                             id=\"{{test.testId}}\">\n                  <clr-dg-column *ngFor=\"let column of test.details[0]?.columns\"\n                                 [ngClass]=\"{'string-column': column.columnType === 'string'}\">\n                     {{column.columnLabel}}\n                  </clr-dg-column>\n\n                  <clr-dg-row *ngFor=\"let row of test.details[0]?.rows; let rowIndex = index\">\n                     <clr-dg-cell id=\"cell-{{rowIndex}}-{{cellIndex}}\"\n                                  *ngFor=\"let cell of row?.rowValues; let cellIndex = index\"\n                                  vsan-show-title>\n                        <vsan-health-test-value [valueCell]=\"cell\"\n                                                [isVirtualObjectsLinkShown]=\"false\"\n                                                [enableActionLink]=\"false\">\n                        </vsan-health-test-value>\n                     </clr-dg-cell>\n                  </clr-dg-row>\n                  <clr-dg-footer *ngIf=\"test.details[0].rows?.length == 1\">\n                     {{\"vsan.common.datagrid.item\" | localized: test.details[0].rows?.length}}\n                  </clr-dg-footer>\n                  <clr-dg-footer *ngIf=\"test.details[0].rows?.length != 1\">\n                     {{\"vsan.common.datagrid.items\" | localized: test.details[0].rows ? test.details[0].rows.length : 0}}\n                  </clr-dg-footer>\n               </clr-datagrid>\n            </div>\n         </div>\n      </div>\n   </ng-container>\n</div>\n","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {BaseHealthState, VsanHealthUtil} from \"@util/vsan-health-util\";\n\n@Pipe({\n   name: \"healthStateLabel\",\n})\nexport class VirtualObjectHealthStateLabelPipe implements PipeTransform {\n   transform(state: BaseHealthState | string): string {\n      return VsanHealthUtil.getVsanObjectHealthStatusText(state);\n   }\n}","<!-- Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div>{{\"vsan.cluster.shutdown.vcOnVsan.label\" | localized}}</div>\n<ul>\n   <li>{{\"vsan.cluster.shutdown.vcOnVsan.services.unavailable.label\" | localized}}</li>\n   <li>{{\"vsan.cluster.shutdown.vcOnVsan.ui.unavailable.label\" | localized}}</li>\n</ul>\n<div class=\"not-responding-image\"></div>\n<div>{{\"vsan.cluster.shutdown.vcOnVsan.poweron.label\" | localized}}</div>\n<div class=\"highlight\">\n   {{\"vsan.cluster.shutdown.vcOnVsan.masterhost.label\" | localized}}\n</div>\n<vsan-icon-item [shape]=\"'host'\"\n                [label]=\"masterHost\"\n                [isIconSolid]=\"false\">\n</vsan-icon-item>","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {InventoryBrowserComponent} from \"@component/inventory/inventory-browser.component\";\nimport {InventoryNodeComponent} from \"@component/inventory/inventory-node.component\";\nimport {WitnessCandidateInventoryService} from \"@generated/witness-candidate-inventory-service\";\nimport {DatacenterInventoryService} from \"@generated/datacenter-inventory-service\";\nimport {NetworkInventoryService} from \"@generated/network-inventory-service\";\nimport {ComputeInventoryService} from \"@generated/compute-inventory-service\";\nimport {IoInsightInventoryService} from \"@generated/io-insight-inventory-service\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {TreeNodeComponent} from \"@component/inventory/tree-view/tree-node.component\";\nimport {TreeViewComponent} from \"@component/inventory/tree-view/tree-view.component\";\nimport {DropdownObjectSelectorComponent} from \"@component/inventory/dropdown-object-selector/dropdown-object-selector.component\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {InventoryNodesComponent} from \"@component/inventory/inventory-nodes.component\";\nimport {TreeNodesComponent} from \"@component/inventory/tree-view/tree-nodes.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule,\n      SearchModule,\n      CommonDirectiveModule,\n   ],\n   declarations: [\n      InventoryBrowserComponent,\n      InventoryNodesComponent,\n      InventoryNodeComponent,\n      TreeNodeComponent,\n      TreeNodesComponent,\n      TreeViewComponent,\n      DropdownObjectSelectorComponent,\n   ],\n   exports: [\n      InventoryBrowserComponent,\n      DropdownObjectSelectorComponent,\n      TreeViewComponent,\n   ],\n   providers: [\n      WitnessCandidateInventoryService,\n      DatacenterInventoryService,\n      NetworkInventoryService,\n      ComputeInventoryService,\n      IoInsightInventoryService,\n   ],\n})\nexport class InventoryBrowserModule {\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ManagedObject} from \"@service/managed-object\";\nimport {TaskStatus} from \"@service/task-monitor-service\";\n\n/**\n * Holds info for a status change initiated by the current user on the vSAN cluster.\n * This data is stored in the Browser local storage, check <code>VsanStatusService</code>\n * and is accessible across iframes.\n */\nexport class VsanStatusChangeData {\n\n   /**\n    * A cluster managed object reference associated with this status change\n    */\n   clusterRef: ManagedObject;\n\n   /**\n    * A task moref, that is changing the status of the vSAN cluster.\n    */\n   taskRef: ManagedObject;\n\n   /**\n    * Enum value, holding information about what status change is happening with the vSAN cluster exactly.\n    */\n   changeType: StatusChangeType;\n\n   /**\n    * Upon completion of the task will hold either SUCCESS or ERROR, which could be used by subscribers.\n    */\n   taskStatus: TaskStatus;\n\n   constructor(taskRef: ManagedObject, status: StatusChangeType,\n         clusterRef: ManagedObject = ManagedObject.contextObject) {\n      this.taskRef = taskRef;\n      this.changeType = status;\n      this.clusterRef = clusterRef;\n   }\n}\n\n/**\n * Enum with codes, used to differentiate different vSAN configuration events like\n * vSAN enabled, cluster shutdown, etc.\n */\nexport enum StatusChangeType {\n   /**\n    * A cluster has had the vSAN service enabled.\n    */\n   VSAN_SERVICE_ENABLED,\n   /**\n    * A cluster has had the vSAN service disabled.\n    */\n   VSAN_SERVICE_DISABLED,\n   /**\n    * A vSAN cluster has been powered on.\n    */\n   VSAN_CLUSTER_POWER_ON,\n   /**\n    * A vSAN cluster has been shut down.\n    */\n   VSAN_CLUSTER_POWER_OFF,\n}","<!-- Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-validation *ngIf=\"errorMessage\" [alert]=\"errorMessage\" [allowClose]=\"false\"></vsan-validation>\n<vsan-flow-wizard\n      [title]=\"'vsan.cluster.shutdown.wizard.title' | localized\"\n      [pageSets]=\"pages\"\n      [contextProperties]=\"context\"\n      startingTaskProperty=\"shutdownCluster\"\n      [services]=\"services\"\n      [finishButtonText]=\"'vsan.cluster.shutdown.wizard.finishButton' | localized\"\n      [finishButtonStyle]=\"'btn-warning'\"\n      (onFinish)=\"onConfigureFinish($event)\">\n</vsan-flow-wizard>\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component} from \"@angular/core\";\nimport {InputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.cluster.shutdown.wizard.vcenterServerNotificationPage.title\"),\n)\n@Component({\n   templateUrl: \"vcenter-server-notice-page.html\",\n   styleUrls: [\"vcenter-server-notice-page.scss\"],\n})\nexport class VcenterServerNoticePageComponent {\n\n   /**\n    * The master host of the vSAN cluster.\n    */\n   @InputProperty()\n   masterHost: string;\n\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {PageSet} from \"@component/wizard/flow-wizard.component\";\nimport {PrecheckPageComponent} from \"./precheck-page.component\";\nimport {VcenterServerNoticePageComponent} from \"./vcenter-server-notice-page.component\";\nimport {SummaryPageComponent} from \"./summary-page.component\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ClusterShutdownService} from \"@generated/cluster-shutdown-service\";\nimport {VsanStatusService} from \"@service/status-updates/vsan-status.service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {StatusChangeType, VsanStatusChangeData} from \"@service/status-updates/vsan-status-change.data\";\n\n@Component({\n   templateUrl: \"cluster-shutdown-wizard.html\",\n   selector: \"cluster-shutdown-wizard\",\n})\nexport class ClusterShutdownWizardComponent implements OnInit {\n   /**\n    * Holds wizard context data, shared between all the pages.\n    */\n   context: any;\n   errorMessage: string;\n   services: any[] = [ClusterShutdownService];\n\n   constructor(private vsanStatusService: VsanStatusService) {\n   }\n\n   ngOnInit(): void {\n      this.setWizardContext();\n   }\n\n   private setWizardContext(): void {\n      this.context = {\n         clusterRef: ManagedObject.contextObject,\n      };\n   }\n\n   pages: PageSet[] = [\n      new PageSet([PrecheckPageComponent]),\n      new PageSet([VcenterServerNoticePageComponent], (isVcOnVsan) => isVcOnVsan),\n      new PageSet([SummaryPageComponent]),\n   ];\n\n   onConfigureFinish(taskRef: ManagedObject): void {\n      this.vsanStatusService.storeChange(new VsanStatusChangeData(taskRef, StatusChangeType.VSAN_CLUSTER_POWER_OFF));\n      VsanUiUtils.closeModalDialog();\n   }\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {\n   AfterViewInit,\n   ComponentFactoryResolver,\n   Directive,\n   ElementRef,\n   Host,\n   Input,\n   Optional,\n   Renderer2,\n   Self,\n} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {NavigationService} from \"@navigation/navigation.service\";\nimport {ClrButtonBaseDirective} from \"@directive/clr-button-group/clr-button-base.directive\";\nimport {ClrButton} from \"@clr/angular\";\n\n/**\n * Decorates a button or an anchor as external link. Requires one of the optional parameters articleId, helpId or url.\n *\n * @param external-link: Optional. Localization key of the text label of the external link. If omitted default label\n * will be used - \"Learn more\" for anchors or \"Ask VMWare\" for buttons.\n * @param articleId - Optional. Id of article in knowledge base.\n * @param helpId - Optional. Help id which will redirect to Knowledge Base.\n * @param url - Optional. External URL.\n */\n@Directive({\n   selector: \"a[external-link], button[external-link], clr-button[external-link]\",\n})\nexport class ExternalLinkDirective extends ClrButtonBaseDirective implements AfterViewInit {\n   private readonly ASK_VMWARE_DEFAULT_TEXT_KEY: string = \"vsan.common.askVMware\";\n   private readonly LEARN_MORE_DEFAULT_TEXT_KEY: string = \"vsan.common.learnMore\";\n\n   private readonly CONTAINER_CLASS: string = \"icon-name-container\";\n   private readonly NAVIGATION_EVENT_TYPE: string = \"click\";\n   private readonly LEAD_TO_NOWHERE_URL: string = \"javascript://\";\n   private readonly HTML_ELEMENT_SPAN_NAME: string = \"span\";\n   private readonly HTML_ELEMENT_ICON_NAME: string = \"clr-icon\";\n   private readonly HTML_ELEMENT_ROLE_ATTR_NAME: string = \"role\";\n   private readonly HTML_ELEMENT_ROLE_ATTR_VALUE: string = \"link\";\n   private readonly ICON_SHAPE_ATTR_NAME: string = \"shape\";\n   private readonly ICON_SHAPE_ATTR_VALUE: string = \"pop-out\";\n   private readonly ICON_SIZE_ATTR_NAME: string = \"size\";\n   private readonly ICON_SIZE_ATTR_VALUE: string = \"16\";\n   private readonly ICON_CLASS_ATTR_NAME: string = \"class\";\n   private readonly ICON_CLASS_ATTR_VALUE: string = \"link\";\n   private readonly ICON_TITLE_ATTR_NAME: string = \"title\";\n\n   private readonly KB_URL: string = \"http://kb.vmware.com/kb/\";\n\n   @Input(\"external-link\")\n   anchorText: string;\n\n   @Input()\n   articleId: string;\n\n   @Input()\n   helpId: string;\n\n   @Input()\n   url: string;\n\n   constructor(private el: ElementRef<HTMLElement>,\n         private resolver: ComponentFactoryResolver,\n         private renderer: Renderer2,\n         private navigationService: NavigationService,\n         // this variable will be initialized only if the host is clr-button\n         @Host() @Self() @Optional() clrButton: ClrButton) {\n      super(clrButton);\n   }\n\n   ngAfterViewInit(): void {\n      const element: HTMLElement = this.el.nativeElement;\n      // continue only if element is HTML link or button\n      if (!this.isLink(element) && !this.isButton(element)) {\n         // element is clr-button, wait until html button for it is resolved - handled by resloveButton\n         return;\n      }\n      this.prepareExternalLink(element);\n   }\n\n   resolveButton(clrButton: ClrButton, button: HTMLButtonElement, index: number): void {\n      // only if element is clr-button. At this point the html button is already resolved. Apply on it.\n      this.prepareExternalLink(button);\n   }\n\n   private prepareExternalLink(element: HTMLElement): void {\n      this.renderer.addClass(element, this.CONTAINER_CLASS);\n\n      this.setText(element);\n      if (this.isLink(element)) {\n         this.decorateLink(element);\n      } else {\n         this.addLinkRole(element);\n      }\n\n      this.initializeNavigationHandler(element);\n   }\n\n   private isButton(element: HTMLElement): boolean {\n      return element instanceof HTMLButtonElement;\n   }\n\n   private isLink(element: HTMLElement): boolean {\n      return element instanceof HTMLAnchorElement;\n   }\n\n   private setText(element: HTMLElement): void {\n      const span: HTMLSpanElement = this.renderer.createElement(this.HTML_ELEMENT_SPAN_NAME);\n      span.innerText = this.getText(element);\n      this.renderer.appendChild(element, span);\n\n      const icon: HTMLSpanElement = this.renderer.createElement(this.HTML_ELEMENT_ICON_NAME);\n      icon.setAttribute(this.ICON_SHAPE_ATTR_NAME, this.ICON_SHAPE_ATTR_VALUE);\n      icon.setAttribute(this.ICON_SIZE_ATTR_NAME, this.ICON_SIZE_ATTR_VALUE);\n      icon.setAttribute(this.ICON_CLASS_ATTR_NAME, this.ICON_CLASS_ATTR_VALUE);\n      // Set title of the icon for screen readers clarity\n      icon.setAttribute(this.ICON_TITLE_ATTR_NAME, VsanUiUtils.getString(\"vsan.screenReader.label.externalLink.icon\"));\n      this.renderer.appendChild(element, icon);\n   }\n\n   private getText(element: HTMLElement): string {\n      if (this.anchorText) {\n         return this.anchorText;\n      }\n      const key: string = this.isButton(element) ? this.ASK_VMWARE_DEFAULT_TEXT_KEY : this.LEARN_MORE_DEFAULT_TEXT_KEY;\n      return VsanUiUtils.getString(key);\n   }\n\n   private decorateLink(element: HTMLElement): void {\n      const linkElement: HTMLLinkElement = element as HTMLLinkElement;\n      // don't use href attribute. If omitted, the link will be not visualized properly.\n      linkElement.href = this.LEAD_TO_NOWHERE_URL;\n      // display link on same line\n      linkElement.style.display = \"inline-flex\";\n   }\n\n   private initializeNavigationHandler(element: HTMLElement): void {\n      element.addEventListener(this.NAVIGATION_EVENT_TYPE, () => {\n         if (this.helpId) {\n            this.navigationService.askVMware(this.helpId);\n            return;\n         }\n         if (this.articleId) {\n            this.navigationService.navigateToAddress(`${this.KB_URL}${this.articleId}`);\n            return;\n         }\n         if (this.url) {\n            this.navigationService.navigateToAddress(this.url);\n         }\n      });\n   }\n\n   // Indicate external navigation by assigning \"link\" role\n   private addLinkRole(element: HTMLElement): void {\n      this.renderer.setAttribute(element, this.HTML_ELEMENT_ROLE_ATTR_NAME, this.HTML_ELEMENT_ROLE_ATTR_VALUE);\n   }\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {VsanCommonModule} from \"app/vsan/common/vsan-common.module\";\nimport {FlowWizardModule} from \"@component/wizard/flow-wizard.module\";\nimport {PrecheckPageComponent} from \"./precheck-page.component\";\nimport {ClusterShutdownWizardComponent} from \"./cluster-shutdown-wizard.component\";\nimport {VcenterServerNoticePageComponent} from \"./vcenter-server-notice-page.component\";\nimport {SummaryPageComponent} from \"./summary-page.component\";\nimport {FormsModule} from \"@angular/forms\";\n\nconst routes: Routes = [\n   {\n      path: \"\",\n      component: ClusterShutdownWizardComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      VsanCommonModule,\n      FlowWizardModule,\n      FormsModule,\n      RouterModule.forChild(routes),\n   ],\n   declarations: [\n      ClusterShutdownWizardComponent,\n      PrecheckPageComponent,\n      VcenterServerNoticePageComponent,\n      SummaryPageComponent,\n   ],\n   entryComponents: [\n      PrecheckPageComponent,\n      VcenterServerNoticePageComponent,\n      SummaryPageComponent,\n   ],\n})\nexport class ClusterShutdownWizardModule {\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {ActionButtonModule} from \"@component/action-button/action-button.module\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {CommonCellsModule} from \"@component/cell/common-cells.module\";\nimport {InventoryBrowserModule} from \"@component/inventory/inventory-browser.module\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {TreeDatagridModule} from \"@component/datagrid/tree-datagrid.module\";\nimport {DatetimePickerModule} from \"@component/datetime-picker/datetime-picker.module\";\nimport {PopupListModule} from \"@component/popup-list/popup-list.module\";\nimport {VsanBreadcrumbModule} from \"@component/navigation/vsan-breadcrumb.module\";\n\n@NgModule({\n   imports: [\n         CommonDirectiveModule,\n         CommonPipeModule,\n         ValidationModule,\n         ActionButtonModule,\n         PromptModule,\n         CommonCellsModule,\n         InventoryBrowserModule,\n         SearchModule,\n         TreeDatagridModule,\n         DatetimePickerModule,\n         PopupListModule,\n         VsanBreadcrumbModule,\n   ],\n   exports: [\n      CommonDirectiveModule,\n      CommonPipeModule,\n      ValidationModule,\n      ActionButtonModule,\n      PromptModule,\n      CommonCellsModule,\n      InventoryBrowserModule,\n      SearchModule,\n      TreeDatagridModule,\n      DatetimePickerModule,\n      PopupListModule,\n      VsanBreadcrumbModule,\n   ],\n})\nexport class VsanCommonModule { }","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {SearchComponent} from \"@component/search/search.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule\n   ],\n   declarations: [\n      SearchComponent\n   ],\n   exports: [\n      SearchComponent\n   ],\n})\nexport class SearchModule {\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {InputProperty, OutputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanHealthData} from \"@generated/vsan-health-data\";\nimport {VsanHealthStatus} from \"@generated/vsan-health-status\";\nimport {VsanHealthUtil} from \"@util/vsan-health-util\";\nimport {VsanTestData} from \"@generated/vsan-test-data\";\nimport {PageItem} from \"@component/wizard/page-item\";\nimport {PageControls} from \"@component/wizard/flow-wizard.component\";\nimport {Logger} from \"@util/logger\";\nimport {AskVmwareId} from '@service/navigation/model/ask-vmware-id';\nimport {ManagedObject} from \"@service/managed-object\";\n\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.cluster.shutdown.wizard.precheckPage.title\"),\n)\n@Component({\n   templateUrl: \"precheck-page.html\",\n   styleUrls: [\"precheck-page.scss\"],\n})\nexport class PrecheckPageComponent implements OnInit {\n   readonly AskVmwareId: typeof AskVmwareId = AskVmwareId;\n\n   private static readonly VC_ON_VSAN_TEST_ID: string = \"com.vmware.vsan.health.test.vconvsan\";\n   private static readonly VMS_SHUTDOWN_TEST_ID: string = \"com.vmware.vsan.health.test.allvmsshutdown\";\n   private static readonly MAX_POWERED_ON_VMS: number = 10;\n\n   getHealthIconClass: (val: VsanHealthStatus) => string = VsanHealthUtil.getHealthStatusClass;\n   getHealthIconShape: (val: VsanHealthStatus) => string = VsanHealthUtil.getHealthStatusShape;\n\n   VsanHealthStatus: typeof VsanHealthStatus = VsanHealthStatus;\n\n   @InputProperty()\n   private pageControls: PageControls;\n\n   @InputProperty()\n   shutdownPrecheckFailedTests: VsanTestData[];\n\n   @InputProperty(\"clusterPowerSelfContainSupported\")\n   isClusterPowerSelfContainSupported: boolean;\n\n   @OutputProperty()\n   isVcOnVsan: boolean = false;\n\n   @OutputProperty()\n   masterHost: string;\n\n   @OutputProperty()\n   infrastructureVMs?: ManagedObject[];\n\n   vmsShutdownTest: VsanTestData;\n\n   private redPrechecksCount: number;\n\n   ngOnInit(): void {\n      if (VsanUiUtils.isEmpty(this.shutdownPrecheckFailedTests)) {\n         return;\n      }\n\n      const vcOnVsanTest: VsanTestData = this.shutdownPrecheckFailedTests.find(test => this.isVcOnVsanTest(test));\n      this.isVcOnVsan = !!vcOnVsanTest;\n      if (this.isVcOnVsan) {\n         this.masterHost = this.getMasterHost(vcOnVsanTest);\n         // Rebuild the wizard's TOC to show the VC notice page\n         this.pageControls.rebuildToc();\n      }\n      this.vmsShutdownTest = this.shutdownPrecheckFailedTests.find(test => this.isVmsShutdownTest(test));\n      this.redPrechecksCount = this.getRedPrechecksCount();\n\n      (this.pageControls as PageItem).nextButtonIsDisabled = this.isNextButtonDisabled();\n   }\n\n   private isVcOnVsanTest(test: VsanTestData): boolean {\n      return test.testId === PrecheckPageComponent.VC_ON_VSAN_TEST_ID;\n   }\n\n   isVmsShutdownTest(test: VsanTestData): boolean {\n      return test.testId === PrecheckPageComponent.VMS_SHUTDOWN_TEST_ID;\n   }\n\n   private isNextButtonDisabled(): boolean {\n      return this.redPrechecksCount > 0 && !this.vmsShutdownTest\n            || this.redPrechecksCount > 1\n            || this.vmsShutdownTest && VsanUiUtils.isEmpty(this.infrastructureVMs);\n   }\n\n   private getRedPrechecksCount(): number {\n      if (VsanUiUtils.isEmpty(this.shutdownPrecheckFailedTests)) {\n        return 0;\n      }\n      const redChecks: VsanTestData[] = this.shutdownPrecheckFailedTests.filter(test => test.status === VsanHealthStatus.red);\n      return redChecks ? redChecks.length : 0;\n   }\n\n   /**\n    * When the VC is on vSAN we need info for the master host, to show it in the vCenter server notice page\n    */\n   private getMasterHost(vcOnVsanTest: VsanTestData): string {\n      if (!vcOnVsanTest\n            || VsanUiUtils.isEmpty(vcOnVsanTest.details)\n            || VsanUiUtils.isEmpty(vcOnVsanTest.details[0].rows)\n            || VsanUiUtils.isEmpty(vcOnVsanTest.details[0].rows[0].rowValues)\n            || !vcOnVsanTest.details[0].rows[0].rowValues[0].cellValue) {\n         Logger.warn(\"Couldn't find master host for VC on vSAN cluster!\");\n         return null;\n      }\n      return vcOnVsanTest.details[0].rows[0].rowValues[0].cellValue.objectName;\n   }\n\n   getVmsShutdownTestAlert(): string {\n      return this.showInfrastructureVmsOption()\n            ? VsanUiUtils.getString(\"vsan.cluster.shutdown.wizard.precheckPage.vms.not.shutdown.error.self.contain.cluster\")\n            : VsanUiUtils.getString(\"vsan.cluster.shutdown.wizard.precheckPage.vms.not.shutdown.error\");\n   }\n\n   /**\n    * The infrastructure VMs option should be visible if the capability is set and the VC is on vSAN, but it should be\n    * hidden if not powered off VMs are more than 10\n    */\n   showInfrastructureVmsOption(): boolean {\n      return this.isClusterPowerSelfContainSupported && this.isVcOnVsan && this.showTestDetails(this.vmsShutdownTest);\n   }\n\n   markInfrastructureVms(target: any): void {\n      if (target.checked) {\n         this.infrastructureVMs = this.vmsShutdownTest.details[0].rows\n               .map(row => ManagedObject.create(\n                     row.rowValues[0]?.cellValue.object.type,\n                     row.rowValues[0]?.cellValue.object.value,\n                     row.rowValues[0]?.cellValue.object.serverGuid));\n      } else {\n         this.infrastructureVMs = null;\n      }\n\n      (this.pageControls as PageItem).nextButtonIsDisabled = this.isNextButtonDisabled();\n   }\n\n   showTestDetails(test: VsanTestData): boolean {\n      if (VsanUiUtils.isEmpty(test.details)) {\n         return false;\n      }\n\n      // TODO bbambalo [VSANCORE-7763] Check whether the limit of max visualized entities should be applied to the other\n      //  tests as well\n      return this.isVmsShutdownTest(test)\n            ? test.details[0].rows.length <= PrecheckPageComponent.MAX_POWERED_ON_VMS\n            : true;\n   }\n}","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ActionButtonSeparatorComponent} from \"@component/action-button/action-button-separator.component\";\nimport {ButtonTitleDirective} from \"@component/action-button/button-title.directive\";\nimport {ButtonGroupDirective} from \"@component/action-button/button-group.directive\";\nimport {ButtonGroupWrapDirective} from \"@component/action-button/button-group-wrap.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n   ],\n   declarations: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ],\n   exports: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ]\n})\nexport class ActionButtonModule {\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {InputProperty, OutputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {PageControls} from \"@component/wizard/flow-wizard.component\";\nimport {PageItem} from \"@component/wizard/page-item\";\nimport {StringUtil} from \"@util/string-util\";\n\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.cluster.shutdown.wizard.summaryPage.title\"),\n)\n@Component({\n   templateUrl: \"summary-page.html\",\n   styleUrls: [\"summary-page.scss\"],\n})\nexport class SummaryPageComponent implements OnInit {\n\n   reasons: Map<string, string> = new Map<string, string>([\n      [\"custom\", \"vsan.cluster.shutdown.wizard.summaryPage.shutDownReason.custom.label\"],\n      [\"maintenance\", \"vsan.cluster.shutdown.wizard.summaryPage.shutDownReason.maintenance.label\"],\n      [\"troubleshoot\", \"vsan.cluster.shutdown.wizard.summaryPage.shutDownReason.troubleshoot.label\"],\n      [\"upgrade\", \"vsan.cluster.shutdown.wizard.summaryPage.shutDownReason.upgrade.label\"],\n   ]);\n   reasonKeys: string[] = [...this.reasons.keys()];\n\n   @InputProperty()\n   private pageControls: PageControls;\n\n   @InputProperty()\n   isVcOnVsan: boolean;\n\n   @OutputProperty(OutputProperty.ifEmpty(VsanUiUtils.getString(\n         \"vsan.cluster.shutdown.wizard.summaryPage.emptyReason.error\")))\n   get shutdownReason(): string {\n      return this.isCustomReasonSelected ?\n            this.customReason :\n            VsanUiUtils.getString(this.reasons.get(this.selectedReason));\n   }\n\n   selectedReason: string;\n   customReason: string;\n\n   async ngOnInit(): Promise<void> {\n      // by default select the type custom reason\n      this.selectedReason = this.reasons.keys().next().value;\n      (this.pageControls as PageItem).nextButtonIsDisabled = true;\n   }\n\n   get isCustomReasonSelected(): boolean {\n      return this.selectedReason === this.reasons.keys().next().value;\n   }\n\n   get powerOffVmsMessage(): string {\n      return this.isVcOnVsan ?\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.wizard.summaryPage.steps.powerOffVms.vcOnVsan\") :\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.wizard.summaryPage.steps.powerOffVms\");\n   }\n\n   shutdownReasonChanged(): void {\n      (this.pageControls as PageItem).nextButtonIsDisabled = this.shutdownReason === undefined ||\n            this.shutdownReason.trim() === \"\";\n   }\n}\n"],"sourceRoot":"webpack:///"}