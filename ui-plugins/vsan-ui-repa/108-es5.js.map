{"version":3,"sources":["webpack:///src/app/vsan/common/directive/flex-expand/flex-expandable.directive.ts","webpack:///src/app/vsan/common/directive/signpost-title/signpost-title.directive.ts","webpack:///src/app/vsan/common/component/datagrid/tree-datagrid.module.ts","webpack:///src/app/vsan/common/util/modal-builder.ts","webpack:///src/app/vsan/common/directive/flex-expand/flex-expandable-anchor.component.ts","webpack:///src/app/vsan/supervisorservices/edit/eula-page.component.ts","webpack:///src/app/vsan/common/component/action-button/button-title.directive.ts","webpack:///src/app/vsan/common/component/popup-list/popup-list.module.ts","webpack:///src/app/vsan/common/directive/clr-button-group/clr-button-group-common.directive.ts","webpack:///src/app/vsan/supervisorservices/edit/edit-supervisor-service-wizard.component.ts.EditSupervisorServiceWizardComponent.html","webpack:///src/app/vsan/supervisorservices/disable/disable-supervisor-service.component.ts","webpack:///src/app/vsan/supervisorservices/disable/disable-supervisor-service.html","webpack:///src/app/vsan/supervisorservices/edit/eula-page.html","webpack:///src/app/vsan/common/component/navigation/vsan-breadcrumb.module.ts","webpack:///src/app/vsan/common/component/action-button/button-group.directive.ts","webpack:///src/app/vsan/supervisorservices/supervisor-services.module.ts","webpack:///src/app/vsan/supervisorservices/list/supervisor-services.component.ts","webpack:///src/app/vsan/supervisorservices/edit/settings-page.component.ts","webpack:///src/app/vsan/supervisorservices/edit/edit-supervisor-service.component.ts","webpack:///src/app/vsan/common/component/inventory/inventory-browser.module.ts","webpack:///src/app/vsan/supervisorservices/edit/edit-supervisor-service-wizard.component.ts","webpack:///src/app/vsan/supervisorservices/edit/edit-supervisor-service.html","webpack:///src/app/vsan/supervisorservices/edit/settings-page.html","webpack:///src/app/generated/advanced-setting.ts","webpack:///src/app/vsan/supervisorservices/list/supervisor-services.html","webpack:///src/app/vsan/common/vsan-common.module.ts","webpack:///src/app/vsan/common/component/search/search.module.ts","webpack:///src/app/vsan/common/component/action-button/action-button.module.ts"],"names":["FlexExpandableDirective","viewContainerRef","el","resolver","renderer","expand","doExpand","nativeElement","style","flex","initialFlexValue","setTimeout","isOverflow","scrollHeight","clientHeight","addAnchor","factory","resolveComponentFactory","anchorRef","createComponent","anchor","instance","expandState","subscribe","isExpanded","appendChild","element","SignpostTitleDirective","BUTTON_TAG_NAME","CLR_ICON_TAG_NAME","TITLE_ATTRIBUTE","ARIA_EXPANDED_ATTRIBUTE","ARIA_LABEL_ATTRIBUTE","signpostTitle","signpostIcon","getElementsByTagName","item","setAttribute","getString","button","TreeDatagridModule","ModalBuilder","appId","size","DEFAULT_SIZE","title","accessibilityTitle","urlParams","dimensions","length","warn","setSize","WIDTH","HEIGHT","width","height","params","eventTarget","context","Promise","accept","pluginContext","targetElement","event","target","modalResultHandler","data","JSON","parse","stringify","focus","actionUrl","APP_URL","separator","param","openModalDialog","contextObjectUid","WIZARD_XL","repa","repaExtension","FlexExpandableAnchorComponent","_isExpanded","isCollapsedContainer","isExpandedContainer","value","emit","EulaPageComponent","isEulaAccepted","ButtonTitleDirective","host","titleChange","_title","next","asObservable","name","Math","random","toString","unsubscribe","PopupListModule","ClrButtonGroupCommonDirective","elRef","allButtons","querySelectorAll","clrButtons","filter","clrButton","directives","forEach","index","buttonFound","findButtonByName","directive","resolveButton","buttons","i","DisableSupervisorServiceComponent","supervisorNamespaceService","alertMessages","loading","apply","supervisorService","isEnabled","updateSupervisorService","clusterRef","then","closeModalDialog","handleError","error","getModalContext","clusterName","VsanBreadcrumbModule","ButtonGroupDirective","_maximumInlineActions","_buttonTitleDirectives","updateButtonTitles","getVisibleButtons","concat","getInMenuButtons","titleDirective","getAttribute","titleChangeEvent","subscribeToggleButtonClick","btns","_btns","updateInMenuButtons","groupWithMenu","btn","inMenu","toggleButton","getToggleButton","onclick","Array","from","VISIBLE_BUTTON_ELEMENTS_SELECTOR","ownerDocument","IN_MENU_BUTTON_ELEMENTS_SELECTOR","querySelector","TOGGLE_MENU_BUTTON_SELECTOR","supervisorServicesRoutes","path","component","SupervisorServicesModule","SupervisorServicesComponent","supervisorServicesService","permissionService","capabilityService","dataService","Icon","PRIVILEGES","NAMESPACES_CONFIGURE","NAMESPACES_MANAGE","isAirGapSupported","contextObject","loadClusterProps","loadCapabilities","loadPermissions","loadServices","getProperty","isPersistenceServiceAirGapSupportedOnVc","hasPermissions","result","hasEditPrivileges","list","services","key","selectedService","setDimensions","open","EDIT_DIALOG_WIDTH","EDIT_DIALOG_HEIGHT","availableVersions","srMessage","SettingsPageComponent","navigationService","KB_PSP_SERVICE_SETTINGS","SETTING_KEY_MAX_LENGTH","SETTING_VALUE_MAX_LENGTH","version","desiredVersion","errorKeys","username","isEmpty","repo","push","password","incompleteSettings","advancedSettings","some","setting","map","pageControls","rebuildToc","MAX_SETTINGS","isAddAllowed","Factory","create","invalidate","debug","splice","EditSupervisorServiceComponent","clone","deepClone","indexOf","InventoryBrowserModule","EditSupervisorServiceWizardComponent","pages","navigationContext","AdvancedSetting","VsanCommonModule","SearchModule","ActionButtonModule"],"mappings":"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","file":"108-es5.js","sourcesContent":["/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {\n   AfterContentInit,\n   ComponentFactory,\n   ComponentFactoryResolver,\n   ComponentRef,\n   Directive,\n   ElementRef,\n   Renderer2,\n   ViewContainerRef\n} from \"@angular/core\";\nimport {FlexExpandableAnchorComponent} from \"./flex-expandable-anchor.component\";\n\n/**\n * When applied on container in flex parent - expands it to fill the parent. If there is content which stays hidden\n * because lack of space displays \"show more...\" link. Clicking on the link the container expands in order to show all\n * content. \"show less...\" link also appears with possibility to collapse the container back to initial state.\n *\n */\n@Directive({\n   selector: \"[vsan-flex-expandable]\",\n   host: {\n      \"[style.overflow]\": \"'hidden'\",\n      \"[style.flex]\": \"'1 1 auto'\",\n      \"[style.position]\": \"'relative'\",\n   }\n})\nexport class FlexExpandableDirective implements AfterContentInit {\n\n   private isOverflow: boolean;\n\n   private initialFlexValue: string;\n\n   constructor(private viewContainerRef: ViewContainerRef,\n         private el:ElementRef<HTMLElement>,\n         private resolver: ComponentFactoryResolver,\n         private renderer: Renderer2) {\n   }\n\n   ngAfterContentInit(): void {\n      setTimeout(() => {\n         // cache the initial flex property value in order to restore them on collapsing\n         this.initialFlexValue = this.el.nativeElement.style.flex;\n         // calculate if there is hidden content\n         this.isOverflow = this.el.nativeElement.scrollHeight > this.el.nativeElement.clientHeight;\n         if (this.isOverflow) {\n            this.addAnchor();\n         }\n      });\n   }\n\n   expand = (doExpand: boolean) => {\n      this.el.nativeElement.style.flex = doExpand ? '0 0 auto' : this.initialFlexValue;\n   }\n\n   private addAnchor(): void {\n      const factory: ComponentFactory<FlexExpandableAnchorComponent> =\n            this.resolver.resolveComponentFactory(FlexExpandableAnchorComponent);\n      const anchorRef: ComponentRef<FlexExpandableAnchorComponent> = this.viewContainerRef.createComponent(factory);\n      const anchor: FlexExpandableAnchorComponent = anchorRef.instance;\n      anchor.expandState.subscribe(isExpanded => this.expand(isExpanded));\n      this.renderer.appendChild(this.el.nativeElement, anchor.element.nativeElement);\n   }\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterViewInit, Directive, ElementRef, Input, Renderer2} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * Attribute directive for setting a custom title to the clr-icon inside a clr-signpost.\n * It also adds aria-label with the same value and aria-expanded=\"false\" to the button, holding the icon.\n * Used for changing the title when a clr-icon is not explicitly added inside a clr-signpost.\n */\n@Directive({\n   selector: \"clr-signpost\",\n})\nexport class SignpostTitleDirective implements AfterViewInit {\n   private readonly BUTTON_TAG_NAME: string = \"button\";\n   private readonly CLR_ICON_TAG_NAME: string = \"clr-icon\";\n\n   private readonly TITLE_ATTRIBUTE: string = \"title\";\n   private readonly ARIA_EXPANDED_ATTRIBUTE: string = \"aria-expanded\";\n   private readonly ARIA_LABEL_ATTRIBUTE: string = \"aria-label\";\n\n   @Input(\"vsan-signpost-title\")\n   signpostTitle: string;\n\n   constructor(private el: ElementRef<HTMLElement>,\n         private renderer: Renderer2) {\n   }\n\n   ngAfterViewInit(): void {\n      if (!this.signpostTitle) {\n         return;\n      }\n\n      const signpostIcon: Element = this.el.nativeElement.getElementsByTagName(this.CLR_ICON_TAG_NAME).item(0);\n      if (signpostIcon) {\n         this.renderer.setAttribute(signpostIcon, this.TITLE_ATTRIBUTE, VsanUiUtils.getString(this.signpostTitle));\n      }\n      const button: Element = this.el.nativeElement.getElementsByTagName(this.BUTTON_TAG_NAME).item(0);\n      if (button) {\n         this.renderer.setAttribute(button, this.ARIA_EXPANDED_ATTRIBUTE, \"false\");\n         this.renderer.setAttribute(button, this.ARIA_LABEL_ATTRIBUTE, VsanUiUtils.getString(this.signpostTitle));\n      }\n   }\n}\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {TreeExpanderComponent} from \"@component/datagrid/tree-expander.component\";\nimport {TreeColumnComponent} from \"@component/datagrid/tree-column.component\";\nimport {EnumeratedFilterComponent} from \"./filter/enumerated-filter.component\";\nimport {EnumeratedFilterItemComponent} from \"./filter/enumerated-filter-item.component\";\nimport {EnumFilterComponent} from \"@component/datagrid/filter/enum-filter.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n   ],\n   declarations: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumeratedFilterComponent,\n      EnumFilterComponent,\n   ],\n   exports: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumFilterComponent,\n   ],\n})\nexport class TreeDatagridModule {\n}\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {environment} from \"@env/environment\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Logger} from \"./logger\";\nimport {WebPlatform} from \"./platform\";\nimport {VsanUiUtils} from \"./vsan-util\";\n\nexport class ModalBuilder {\n\n   static readonly WIDTH: number = 0;\n   static readonly HEIGHT: number = 1;\n\n   static readonly DEFAULT_SIZE: number[] = [1000, 530];\n   static readonly WIZARD_XL: number[] = [1200, 700];\n\n   static readonly APP_URL: string = (environment.repa && environment.repaExtension)\n         ? \"index.html\"\n         : \"/ui/h5-vsan-ui/\";\n\n   private size: number[] = ModalBuilder.DEFAULT_SIZE;\n\n   // When null, the modal dialog will be headless and the docked\n   // view is expected to provide a title bar.\n   private title: string = null;\n\n   private accessibilityTitle: string = null;\n\n   private urlParams: any = {};\n\n   private eventTarget: EventTarget;\n\n   constructor(private appId: string) {\n   }\n\n   setDimensions(dimensions: number[]): ModalBuilder {\n      if (!dimensions || dimensions.length !== 2) {\n         Logger.warn(\"invalid modal dimensions\", dimensions);\n         dimensions = ModalBuilder.DEFAULT_SIZE;\n      }\n      return this.setSize(dimensions[ModalBuilder.WIDTH], dimensions[ModalBuilder.HEIGHT]);\n   }\n\n   setSize(width: number, height: number): ModalBuilder {\n      this.size = [width, height];\n      return this;\n   }\n\n   setUrlParameters(params: any): ModalBuilder {\n      this.urlParams = params;\n      return this;\n   }\n\n   /**\n    * Set to null if the view provides its own title bar\n    */\n   setTitle(title: string): ModalBuilder {\n      this.title = title;\n      return this;\n   }\n\n   setAccessibilityTitle(accessibilityTitle: string): ModalBuilder {\n      this.accessibilityTitle = accessibilityTitle;\n      return this;\n   }\n\n   /**\n    * Set explicit event target if it is changed before opening the modal.\n    * For example when making a preceding request the event target is the XMLHttpRequest object.\n    */\n   setEventTarget(eventTarget: EventTarget): ModalBuilder {\n      this.eventTarget = eventTarget;\n      return this;\n   }\n\n   /**\n    * Opens a modal dialog and returns a promise to collect the result; On close the target element is focused.\n    * @param context - any JS data object, can be retrieved by WebPlatform.getModalContext()\n    * @returns {Promise<any>} - Invoked if the dialog invokes WebPlatform.closeModalDialog(arg)\n    *       with non-null arg. The promise is never rejected.\n    */\n   open(context?: any): Promise<any> {\n      return new Promise<any>((accept) => {\n         VsanUiUtils.pluginContext.targetElement = this.eventTarget ? this.eventTarget :\n               (event && event.target ? event.target : null);\n         VsanUiUtils.pluginContext.modalResultHandler = (data?: any) => {\n            if (typeof data !== \"undefined\") {\n               // Deep copy of the object was required to resolve an issue with object's prototype overriding when\n               // passing complex objects in IE11/Edge; Keep it for safety.\n               accept(JSON.parse(JSON.stringify(data)));\n            } else if (VsanUiUtils.pluginContext.targetElement && VsanUiUtils.pluginContext.targetElement.focus) {\n               // On cancel just focus the target element. Timeout is required as otherwise the focus may be\n               // consumed by the mouse click.\n               setTimeout(() => VsanUiUtils.pluginContext.targetElement.focus(), 100);\n            }\n         };\n\n         let actionUrl: string = `${ModalBuilder.APP_URL}?viewId=${this.appId}`;\n\n         let separator: string = \"?\";\n         for (const param in this.urlParams) {\n            actionUrl += separator + param + \"=\" + this.urlParams[param];\n            separator = \"&\";\n         }\n\n         WebPlatform.openModalDialog(this.title,\n               actionUrl,\n               ManagedObject.contextObjectUid,\n               this.size[0], this.size[1],\n               this.title != null,\n               VsanUiUtils.pluginContext.modalResultHandler /* onClose */,\n               context /* retrieve with Platform.getModalContext() */,\n               this.accessibilityTitle);\n      });\n   }\n\n}\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {Component, ElementRef, EventEmitter, HostBinding, Output} from \"@angular/core\";\n\n/**\n * Helper component used by flex-expandable.directive.ts. Displays an anchor for expand / collapse functionality.\n */\n@Component({\n   templateUrl: \"flex-expandable-anchor.html\",\n   styleUrls: [\"flex-expandable-anchor.scss\"],\n   selector: \"vsan-flex-expandable-anchor\",\n})\nexport class FlexExpandableAnchorComponent {\n\n   private _isExpanded: boolean = false;\n   set isExpanded( value: boolean) {\n      this._isExpanded = value;\n      this.isCollapsedContainer = !value;\n      this.isExpandedContainer = value;\n   }\n\n   get isExpanded(): boolean {\n      return this._isExpanded;\n   }\n\n   @HostBinding(\"class.collapsed-state\")\n   isCollapsedContainer: boolean = !this.isExpanded;\n\n   @HostBinding(\"class.expanded-state\")\n   isExpandedContainer: boolean = this.isExpanded;\n\n   @Output()\n   expandState: EventEmitter<boolean> = new EventEmitter();\n\n   constructor(public element: ElementRef) {}\n\n   expand(isExpanded: boolean): void {\n      this.expandState.emit(isExpanded);\n      this.isExpanded = isExpanded;\n   }\n\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {SupervisorService} from \"@generated/supervisor-service\";\nimport {OnValidate} from \"@component/wizard/flow-wizard.component\";\nimport {InputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\n\n@WizardPage(VsanUiUtils.getString(\"vsan.config.ss.edit.eula.title\"))\n@Component({\n   templateUrl: \"eula-page.html\",\n   styleUrls: [\"eula-page.scss\"]\n})\nexport class EulaPageComponent implements OnValidate {\n\n   @InputProperty()\n   supervisorService: SupervisorService;\n\n   isEulaAccepted: boolean;\n\n   validate(): string[] | Promise<string[]> {\n      return this.isEulaAccepted\n            ? null\n            : [VsanUiUtils.getString(\"vsan.persistence.enable.acceptEula.error\")];\n   }\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Directive, Input, OnInit} from '@angular/core';\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {ClrButton} from \"@clr/angular\";\n\n/**\n * Attribute directive for detecting button title change and storing title.\n * Only used for clr-button in clr-button-group.\n * @title - The title of clr-button\n */\n@Directive({\n   selector: \"clr-button[vsan-button-title]\"\n})\nexport class ButtonTitleDirective implements OnInit {\n\n   constructor(public host: ClrButton) {}\n\n   private _title: string;\n\n   @Input(\"vsan-button-title\")\n   set title(value: string) {\n      if (this._title !== value) {\n         this.titleChange.next(value);\n      }\n      this._title = value;\n   }\n\n   get title(): string {\n      return this._title;\n   }\n\n   private titleChange: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n\n   get titleChangeEvent(): Observable<string> {\n      return this.titleChange.asObservable();\n   }\n\n   ngOnInit(): void {\n      // name should be set, if not provided in template - generate one. ClrButtom#name is used to generate the name\n      // attribute of the markup button. Later the name is used to match the generated markup with the directive.\n      if (!this.host.name) {\n         this.host.name = Math.random().toString();\n      }\n   }\n\n   ngOnDestroy() {\n      this.titleChange.unsubscribe();\n   }\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {PopupListComponent} from \"@component/popup-list/popup-list.component\";\nimport {PopupListItemDirective} from \"@component/popup-list/popup-list-item.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      CommonPipeModule\n   ],\n   declarations: [\n      PopupListComponent,\n      PopupListItemDirective\n   ],\n   exports: [\n      PopupListComponent,\n      PopupListItemDirective\n   ]\n})\nexport class PopupListModule {\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterContentInit, ContentChildren, Directive, ElementRef} from \"@angular/core\";\nimport {ClrButton} from \"@clr/angular\";\nimport {ClrButtonBaseDirective, DirectiveHolder} from \"@directive/clr-button-group/clr-button-base.directive\";\n\n/**\n * Applies on every clr-button-group and help to link the clr-button with directive applieds on it,  which extends\n * {@link ClrButtonBaseDirective}, to the actual rendered html button.\n */\n@Directive({\n   selector: \"clr-button-group\",\n})\nexport class ClrButtonGroupCommonDirective implements AfterContentInit {\n\n   @ContentChildren(ClrButton, {descendants: true})\n   clrButtons: ClrButton[];\n\n   constructor(private elRef: ElementRef) {}\n\n   ngAfterContentInit(): void {\n      setTimeout(() => {\n         const allButtons: NodeListOf<HTMLButtonElement> = this.elRef.nativeElement.querySelectorAll(\"button\");\n         // match button with clrButton and notify directives\n         this.clrButtons.filter(clrButton => !!(clrButton as DirectiveHolder).directives)\n               .forEach((clrButton, index) => {\n                  const buttonFound: HTMLButtonElement = this.findButtonByName(clrButton.name, allButtons);\n                  if (buttonFound) {\n                     (clrButton as DirectiveHolder).directives.forEach(directive => {\n                        directive.resolveButton(clrButton, buttonFound, index);\n                     });\n                  }\n               });\n      });\n   }\n\n   private findButtonByName(name: string, buttons: NodeListOf<HTMLButtonElement>): HTMLButtonElement {\n      for (let i: number = 0; i < buttons.length; i++) {\n         if (buttons.item(i).name === name) {\n            return buttons.item(i);\n         }\n      }\n      return null;\n   }\n\n}","\n      <vsan-flow-wizard\n            [title]=\"'vsan.config.ss.supervisorServices.action.enable.title' | localized\"\n            [pageSets]=\"pages\"\n            [contextProperties]=\"context\"\n            [startingTaskProperty]=\"'updateSupervisorService'\"\n            [services]=\"services\">\n      </vsan-flow-wizard>","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {SupervisorServiceContext} from \"../model/supervisor-service-context\";\nimport {SupervisorService} from \"@generated/supervisor-service\";\nimport {SupervisorNamespaceService} from \"@generated/supervisor-namespace-service\";\n\n@Component({\n   templateUrl: \"disable-supervisor-service.html\",\n   styleUrls: [\"disable-supervisor-service.scss\"],\n   selector: \"vsan-disable-supervisor-service\"\n})\nexport class DisableSupervisorServiceComponent implements OnInit {\n\n   alertMessages: string[] = null;\n   loading: boolean = false;\n   clusterRef: ManagedObject;\n   clusterName: string;\n   supervisorService: SupervisorService;\n\n   constructor(private supervisorNamespaceService: SupervisorNamespaceService) {\n   }\n\n   ngOnInit(): void {\n      const context: SupervisorServiceContext = VsanUiUtils.getModalContext() as SupervisorServiceContext;\n      this.clusterRef = context.clusterRef;\n      this.clusterName = context.clusterName;\n      this.supervisorService = context.supervisorService;\n   }\n\n   apply = () => {\n      this.loading = true;\n      this.supervisorService.isEnabled = false;\n      this.supervisorNamespaceService\n            .updateSupervisorService(this.clusterRef, this.supervisorService)\n            .then(VsanUiUtils.closeModalDialog)\n            .catch(this.handleError);\n   };\n\n   handleError = (error: any) => {\n      this.loading = false;\n      this.alertMessages = [error];\n   };\n}\n","<!-- Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-delete-prompt\n      [title]=\"'vsan.persistence.disable.title' | localized\"\n      [subtitle]=\"clusterName\"\n      [blockButton]=\"loading\"\n      [(alertMessages)]=\"alertMessages\"\n      [confirmText]=\"'vsan.persistence.disable.confirm' | localized\"\n      (onConfirm)=\"apply()\">\n   <div class=\"dialog-container\">\n      <div>{{'vsan.persistence.disable.info' | localized: supervisorService.name}}</div>\n      <div>{{'vsan.persistence.disable.confirmation' | localized: supervisorService.name}}</div>\n   </div>\n</vsan-delete-prompt>\n","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<textarea id=\"eula\"\n          [(ngModel)]=\"supervisorService.eula\"\n          readonly>\n            </textarea>\n<clr-checkbox-wrapper>\n   <input id=\"eula-accept\"\n          type=\"checkbox\"\n          clrCheckbox\n          [(ngModel)]=\"isEulaAccepted\"/>\n   <label>{{'vsan.persistence.enable.acceptEula'|localized}}</label>\n</clr-checkbox-wrapper>\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {VsanBreadcrumbNavComponent} from \"./vsan-breadcrumb-nav.component\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\n\n@NgModule({\n   imports: [CommonModule, ClarityModule, CommonDirectiveModule, CommonPipeModule],\n   declarations: [VsanBreadcrumbNavComponent],\n   exports: [\n      VsanBreadcrumbNavComponent,\n   ],\n})\nexport class VsanBreadcrumbModule {}\n","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ContentChildren, Directive, ElementRef, Input} from \"@angular/core\";\nimport {ClrButton} from \"@clr/angular\";\nimport {ButtonTitleDirective} from \"./button-title.directive\";\n\n/**\n * Attribute directive used to dynamically arrange child buttons, align some horizontally and\n * put the others into the drop-down list, this directive also add title attribute to the buttons.\n * It can only used on clr-button-group and there should be clr-button in the button group.\n * @maximumInlineActions - The maximum value of inline buttons.\n */\n@Directive({\n   selector: \"clr-button-group[vsan-button-group]\",\n})\nexport class ButtonGroupDirective {\n\n   private static readonly TOGGLE_MENU_BUTTON_SELECTOR: string = \"button.btn.dropdown-toggle\";\n   private static readonly VISIBLE_BUTTON_ELEMENTS_SELECTOR: string = \"button\";\n   private static readonly IN_MENU_BUTTON_ELEMENTS_SELECTOR: string = \"div.clr-button-group-menu > button\";\n\n   // Set the maximum value to 10 to display all buttons inline when there is enough space.\n   private _maximumInlineActions: number = 10;\n\n   @Input(\"vsan-button-group\")\n   set maximumInlineActions(value: number) {\n      if (!!value) {\n         this._maximumInlineActions = value;\n      }\n   }\n\n   private _buttonTitleDirectives: ButtonTitleDirective[] = [];\n\n   @ContentChildren(ButtonTitleDirective, {descendants: true})\n   set buttons(value: ButtonTitleDirective[]) {\n      this._buttonTitleDirectives = value;\n      this._buttonTitleDirectives.forEach(titleDirective => {\n         // Update button title when its title in directive changes.\n         titleDirective.titleChangeEvent.subscribe(() => {\n            setTimeout(this.updateButtonTitles);\n         });\n      });\n\n      // when action buttons with directive are changed (added / removed) some of them may go to the menu with\n      // additional actions. There is no other way found to handle toggle menu event, but click on the toggle button.\n      this.subscribeToggleButtonClick();\n   }\n\n   private _btns: ClrButton[];\n\n   @ContentChildren(ClrButton, {descendants: true})\n   set clrButtons(btns: ClrButton[]) {\n      this._btns = btns;\n      this.updateInMenuButtons();\n   }\n\n   constructor(private elRef: ElementRef) {\n   }\n\n   private updateInMenuButtons(): void {\n      const groupWithMenu: boolean = this._btns.length > this._maximumInlineActions;\n      this._btns.forEach((btn, index) => {\n         if (groupWithMenu) {\n            // When the number of buttons exceeds the maximum and the button overflows, place the button in the menu.\n            btn.inMenu = index >= this._maximumInlineActions - 1;\n         } else {\n            btn.inMenu = false;\n         }\n      });\n   }\n\n   private updateButtonTitles = (): void => {\n      const allButtons: HTMLButtonElement[] = this.getVisibleButtons().concat(this.getInMenuButtons());\n      if (!allButtons.length) {\n         return;\n      }\n\n      // if there is a rendered button for the directive - update its title.\n      this._buttonTitleDirectives.forEach(titleDirective => {\n         allButtons.forEach((button: HTMLElement) => {\n            if (button.getAttribute(\"name\") === titleDirective.host.name) {\n               button.title = titleDirective.title;\n            }\n         });\n      });\n   };\n\n   private subscribeToggleButtonClick(): void {\n      // If there is menu with additional buttons, find the toggle button and update button names on click.\n      setTimeout(() => {\n         const toggleButton: HTMLElement | null = this.getToggleButton();\n\n         // if there is a toggle button set function to handle the click event only once.\n         if (toggleButton && !toggleButton.onclick) {\n            toggleButton.onclick = this.updateButtonTitles;\n         }\n      });\n   }\n\n   // the buttons are visible buttons in button group, toggle menu button\n   private getVisibleButtons(): HTMLButtonElement[] {\n      return Array.from(this.elRef.nativeElement.querySelectorAll(\n            ButtonGroupDirective.VISIBLE_BUTTON_ELEMENTS_SELECTOR));\n   }\n\n   // inMenu buttons are rendered outside of the elRef, get them directly from the document\n   private getInMenuButtons(): HTMLButtonElement[] {\n      return Array.from(this.elRef.nativeElement.ownerDocument.querySelectorAll(\n            ButtonGroupDirective.IN_MENU_BUTTON_ELEMENTS_SELECTOR));\n   }\n\n   private getToggleButton(): HTMLElement | null {\n      return this.elRef.nativeElement.querySelector(ButtonGroupDirective.TOGGLE_MENU_BUTTON_SELECTOR);\n   }\n}","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {VsanCommonModule} from \"../common/vsan-common.module\";\nimport {SupervisorServicesComponent} from \"./list/supervisor-services.component\";\nimport {EditSupervisorServiceComponent} from \"./edit/edit-supervisor-service.component\";\nimport {DisableSupervisorServiceComponent} from \"./disable/disable-supervisor-service.component\";\nimport {EditSupervisorServiceWizardComponent} from \"./edit/edit-supervisor-service-wizard.component\";\nimport {EulaPageComponent} from \"./edit/eula-page.component\";\nimport {FlowWizardModule} from \"@component/wizard/flow-wizard.module\";\nimport {SettingsPageComponent} from \"./edit/settings-page.component\";\n\nconst supervisorServicesRoutes: Routes = [\n   {\n      path: \"\",\n      component: SupervisorServicesComponent\n   },\n   {\n      path: \"editDialog\",\n      component: EditSupervisorServiceComponent\n   },\n   {\n      path: \"editWizard\",\n      component: EditSupervisorServiceWizardComponent\n   },\n   {\n      path: \"disable\",\n      component: DisableSupervisorServiceComponent\n   },\n];\n\n@NgModule({\n   imports: [\n      FormsModule,\n      CommonModule,\n      ClarityModule,\n      FlowWizardModule,\n      VsanCommonModule,\n      RouterModule.forChild(supervisorServicesRoutes)\n   ],\n   declarations: [\n      SupervisorServicesComponent,\n      EditSupervisorServiceComponent,\n      EditSupervisorServiceWizardComponent,\n      SettingsPageComponent,\n      EulaPageComponent,\n      DisableSupervisorServiceComponent,\n   ],\n   entryComponents: [\n      EditSupervisorServiceComponent,\n      SettingsPageComponent,\n      EulaPageComponent,\n   ]\n})\nexport class SupervisorServicesModule {\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {SupervisorService} from \"@generated/supervisor-service\";\nimport {SupervisorServicesService} from \"@generated/supervisor-services-service\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {ClusterComputeResource} from \"@service/client/dataservice/data-service-property\";\nimport {DataServiceClient} from \"@service/client/dataservice/data-service.service\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Icon} from \"@util/icon\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {SupervisorServiceContext} from \"../model/supervisor-service-context\";\n\n@Component({\n   templateUrl: \"supervisor-services.html\",\n   styleUrls: [\"supervisor-services.scss\"],\n   selector: \"vsan-all-supervisor-services\",\n})\nexport class SupervisorServicesComponent implements OnInit {\n   Icon: typeof Icon = Icon;\n\n   private static readonly EDIT_DIALOG_WIDTH: number = 670;\n   private static readonly EDIT_DIALOG_HEIGHT: number = 505;\n   private readonly PRIVILEGES: string[] = [Privileges.NAMESPACES_CONFIGURE(), Privileges.NAMESPACES_MANAGE()];\n\n   @LoadingIndicator()\n   loading: boolean;\n   clusterRef: ManagedObject;\n   clusterName: string;\n   selectedService: SupervisorService;\n   services: SupervisorService[];\n   @ErrorMessage()\n   error: string;\n   hasEditPrivileges: boolean;\n\n   private isAirGapSupported: boolean = false;\n\n   constructor(private supervisorServicesService: SupervisorServicesService,\n         private permissionService: PermissionService,\n         private capabilityService: VsanCapabilityProvider,\n         private dataService: DataServiceClient) {\n   }\n\n   ngOnInit(): void {\n      this.clusterRef = ManagedObject.contextObject;\n\n      this.loadClusterProps();\n      this.loadCapabilities();\n      this.loadPermissions();\n      this.loadServices();\n   }\n\n   @Loader()\n   private async loadClusterProps(): Promise<void> {\n      this.clusterName = await this.dataService.getProperty(ClusterComputeResource.name, this.clusterRef);\n   }\n\n   @Loader()\n   private async loadCapabilities(): Promise<void> {\n      this.isAirGapSupported = await this.capabilityService.isPersistenceServiceAirGapSupportedOnVc(this.clusterRef);\n   }\n\n   @Loader()\n   private loadPermissions(): Promise<boolean> {\n      return this.permissionService.hasPermissions(this.clusterRef, this.PRIVILEGES)\n            .then((result: boolean) => this.hasEditPrivileges = result)\n            .catch(() => this.hasEditPrivileges = true);\n   }\n\n   @RefreshHandler\n   @Loader({srMessage: \"vsan.config.ss.supervisorServices\"})\n   private async loadServices(): Promise<void> {\n      this.services = await this.supervisorServicesService.list(this.clusterRef);\n   }\n\n   getStatusLabel(isEnabled: boolean): string {\n      const key: string = isEnabled ? \"vsan.config.ss.supervisorServices.header.status.enabled\" :\n            \"vsan.config.ss.supervisorServices.header.status.disabled\";\n      return VsanUiUtils.getString(key);\n   }\n\n   enable(): void {\n      const context: SupervisorServiceContext = {\n         supervisorService: this.selectedService,\n         clusterRef: this.clusterRef,\n         clusterName: this.clusterName,\n      };\n      if (this.isAirGapSupported) {\n         new ModalBuilder(\"supervisorServices/editWizard\")\n               .setDimensions(ModalBuilder.WIZARD_XL)\n               .open(context)\n               .then(() => this.loadServices());\n      } else {\n         new ModalBuilder(\"supervisorServices/editDialog\")\n               .setSize(SupervisorServicesComponent.EDIT_DIALOG_WIDTH, SupervisorServicesComponent.EDIT_DIALOG_HEIGHT)\n               .open(context)\n               .then(() => this.loadServices());\n      }\n   }\n\n   disable(): void {\n      const context: SupervisorServiceContext = {\n         supervisorService: this.selectedService,\n         clusterRef: this.clusterRef,\n         clusterName: this.clusterName,\n      };\n      new ModalBuilder(\"supervisorServices/disable\")\n            .setSize(600, 260)\n            .open(context)\n            .then(() => this.loadServices());\n   }\n\n   isEnableButtonDisabled(): boolean {\n      return this.selectedService == null\n            || this.selectedService.availableVersions == null\n            || this.selectedService.availableVersions.length === 0\n            || !this.hasEditPrivileges;\n   }\n\n   getEnableButtonTitle(): string {\n      if (!this.hasEditPrivileges) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      }\n\n      if (this.selectedService.availableVersions != null && this.selectedService.availableVersions.length > 0) {\n         return VsanUiUtils.getString(\"vsan.config.ss.supervisorServices.action.enable.title\");\n      }\n\n      return VsanUiUtils.getString(\"vsan.config.ss.supervisorServices.action.enable.title.noVersions\");\n   }\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {SupervisorService} from \"@generated/supervisor-service\";\nimport {InputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {OnValidate, PageControls} from \"@component/wizard/flow-wizard.component\";\nimport {AdvancedSetting} from \"@generated/advanced-setting\";\nimport {Logger} from \"@util/logger\";\nimport {NavigationService} from \"@navigation/navigation.service\";\n\n@WizardPage(VsanUiUtils.getString(\"vsan.config.ss.edit.general.title\"))\n@Component({\n   templateUrl: \"settings-page.html\",\n   styleUrls: [\"settings-page.scss\"],\n})\nexport class SettingsPageComponent implements OnInit, OnValidate {\n\n   readonly KB_PSP_SERVICE_SETTINGS: string = \"https://docs.vmware.com/\";\n   readonly SETTING_KEY_MAX_LENGTH: number = 1048;\n   readonly SETTING_VALUE_MAX_LENGTH: number = 1048;\n   private static readonly MAX_SETTINGS: number = 12;\n\n   @InputProperty()\n   supervisorService: SupervisorService;\n\n   @InputProperty()\n   pageControls: PageControls;\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   ngOnInit() {\n      if (!this.supervisorService.version) {\n         this.supervisorService.version = this.supervisorService.desiredVersion;\n      }\n   }\n\n   validate(): string[] | Promise<string[]> {\n      const errorKeys: string[] = [];\n      if (this.supervisorService.username && VsanUiUtils.isEmpty(this.supervisorService.repo)) {\n         errorKeys.push(\"vsan.persistence.enable.noRepo\");\n      }\n      if (this.supervisorService.password && VsanUiUtils.isEmpty(this.supervisorService.username)) {\n         errorKeys.push(\"vsan.persistence.enable.noUsername\");\n      }\n      const incompleteSettings: boolean = this.supervisorService.advancedSettings\n            .some(setting => VsanUiUtils.isEmpty(setting.key) || VsanUiUtils.isEmpty(setting.value));\n      if (incompleteSettings) {\n         errorKeys.push(\"vsan.persistence.enable.incompleteSettings\");\n      }\n\n      return errorKeys.length\n            ? errorKeys.map(key => VsanUiUtils.getString(key))\n            : null;\n   }\n\n   invalidate() {\n      this.pageControls.rebuildToc();\n   }\n\n   get isAddAllowed(): boolean {\n      return this.supervisorService.advancedSettings.length < SettingsPageComponent.MAX_SETTINGS;\n   }\n\n   get addButtonTooltip(): string {\n      return this.isAddAllowed\n            ? VsanUiUtils.getString(\"vsan.persistence.enable.add.allowed\")\n            : VsanUiUtils.getString(\"vsan.persistence.enable.add.disabled\");\n   }\n\n   addSetting() {\n      if (this.isAddAllowed) {\n         this.supervisorService.advancedSettings.push(AdvancedSetting.Factory.create(\"\", \"\"));\n         this.invalidate();\n      } else {\n         Logger.debug(\"Adding more advanced settings is not allowed.\");\n      }\n   }\n\n   removeSetting(index: number) {\n      this.supervisorService.advancedSettings.splice(index, 1);\n      this.invalidate();\n   }\n}\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {SupervisorServiceContext} from \"../model/supervisor-service-context\";\nimport {SupervisorService} from \"@generated/supervisor-service\";\nimport {SupervisorNamespaceService} from \"@generated/supervisor-namespace-service\";\n\n@Component({\n   templateUrl: \"edit-supervisor-service.html\",\n   styleUrls: [\"edit-supervisor-service.scss\"],\n   selector: \"vsan-edit-supervisor-service\"\n})\nexport class EditSupervisorServiceComponent implements OnInit {\n\n   alertMessages: string[] = null;\n   loading: boolean = false;\n   clusterRef: ManagedObject;\n   clusterName: string;\n   supervisorService: SupervisorService;\n   isEulaAccepted: boolean;\n   version: string;\n\n   constructor(private supervisorNamespaceService: SupervisorNamespaceService) {\n   }\n\n   ngOnInit(): void {\n      const context: SupervisorServiceContext = VsanUiUtils.getModalContext() as SupervisorServiceContext;\n      this.clusterRef = context.clusterRef;\n      this.clusterName = context.clusterName;\n      this.supervisorService = context.supervisorService;\n      if (this.supervisorService.availableVersions.indexOf(this.supervisorService.desiredVersion) !== -1) {\n         // If the desired version is present in the available versions list, preselect it\n         this.version = this.supervisorService.desiredVersion;\n      } else {\n         // Otherwise - preselect the latest one from the list\n         this.version = this.supervisorService.availableVersions[this.supervisorService.availableVersions.length - 1];\n      }\n   }\n\n   apply = () => {\n      this.loading = true;\n      const clone: SupervisorService = VsanUiUtils.deepClone(this.supervisorService);\n      clone.isEnabled = true;\n      clone.version = this.version;\n      this.supervisorNamespaceService\n            .updateSupervisorService(this.clusterRef, clone)\n            .then(VsanUiUtils.closeModalDialog)\n            .catch(this.handleError);\n   };\n\n   handleError = (error: any) => {\n      this.loading = false;\n      this.alertMessages = [error];\n   };\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {InventoryBrowserComponent} from \"@component/inventory/inventory-browser.component\";\nimport {InventoryNodeComponent} from \"@component/inventory/inventory-node.component\";\nimport {WitnessCandidateInventoryService} from \"@generated/witness-candidate-inventory-service\";\nimport {DatacenterInventoryService} from \"@generated/datacenter-inventory-service\";\nimport {NetworkInventoryService} from \"@generated/network-inventory-service\";\nimport {ComputeInventoryService} from \"@generated/compute-inventory-service\";\nimport {IoInsightInventoryService} from \"@generated/io-insight-inventory-service\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {TreeNodeComponent} from \"@component/inventory/tree-view/tree-node.component\";\nimport {TreeViewComponent} from \"@component/inventory/tree-view/tree-view.component\";\nimport {DropdownObjectSelectorComponent} from \"@component/inventory/dropdown-object-selector/dropdown-object-selector.component\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {InventoryNodesComponent} from \"@component/inventory/inventory-nodes.component\";\nimport {TreeNodesComponent} from \"@component/inventory/tree-view/tree-nodes.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule,\n      SearchModule,\n      CommonDirectiveModule,\n   ],\n   declarations: [\n      InventoryBrowserComponent,\n      InventoryNodesComponent,\n      InventoryNodeComponent,\n      TreeNodeComponent,\n      TreeNodesComponent,\n      TreeViewComponent,\n      DropdownObjectSelectorComponent,\n   ],\n   exports: [\n      InventoryBrowserComponent,\n      DropdownObjectSelectorComponent,\n      TreeViewComponent,\n   ],\n   providers: [\n      WitnessCandidateInventoryService,\n      DatacenterInventoryService,\n      NetworkInventoryService,\n      ComputeInventoryService,\n      IoInsightInventoryService,\n   ],\n})\nexport class InventoryBrowserModule {\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {PageSet} from \"@component/wizard/flow-wizard.component\";\nimport {SupervisorNamespaceService} from \"@generated/supervisor-namespace-service\";\nimport {SupervisorServiceContext} from \"../model/supervisor-service-context\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {EulaPageComponent} from \"./eula-page.component\";\nimport {SupervisorServiceWizardContext} from \"../model/supervisor-service-wizard-context\";\nimport {SettingsPageComponent} from \"./settings-page.component\";\nimport {SupervisorService} from \"@generated/supervisor-service\";\n\n@Component({\n   selector: \"vsan-edit-supervisor-service-wizard\",\n   template: `\n      <vsan-flow-wizard\n            [title]=\"'vsan.config.ss.supervisorServices.action.enable.title' | localized\"\n            [pageSets]=\"pages\"\n            [contextProperties]=\"context\"\n            [startingTaskProperty]=\"'updateSupervisorService'\"\n            [services]=\"services\">\n      </vsan-flow-wizard>`,\n})\nexport class EditSupervisorServiceWizardComponent implements OnInit {\n\n   context: SupervisorServiceWizardContext;\n   readonly services: any[] = [SupervisorNamespaceService];\n\n   readonly pages: PageSet[] = [\n      new PageSet([SettingsPageComponent]),\n      new PageSet([EulaPageComponent]),\n   ];\n\n   ngOnInit(): void {\n      const navigationContext: SupervisorServiceContext = VsanUiUtils.getModalContext() as SupervisorServiceContext;\n      if (!navigationContext.supervisorService.advancedSettings) {\n         navigationContext.supervisorService.advancedSettings = [];\n      }\n\n      const clone: SupervisorService = VsanUiUtils.deepClone(navigationContext.supervisorService);\n      clone.isEnabled = true;\n\n      this.context = {\n         clusterRef: navigationContext.clusterRef,\n         supervisorService: clone,\n      };\n   }\n}\n","<!-- Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-default-prompt\n      [title]=\"'vsan.persistence.enable.title' | localized\"\n      [subtitle]=\"clusterName\"\n      [blockButton]=\"loading || !isEulaAccepted || !version\"\n      [(alertMessages)]=\"alertMessages\"\n      (onConfirm)=\"apply()\">\n   <div class=\"dialog-container\">\n      <h4>{{supervisorService.name}}</h4>\n      <div vsan-flex-expandable class=\"description-section\">\n         {{supervisorService.description}}\n      </div>\n      <section class=\"version-section\">\n         <label for=\"version\" class=\"clr-control-label\">{{'vsan.persistence.enable.version'|localized}}</label>\n         <div class=\"select clr-select-wrapper\">\n            <select id=\"version\"\n                    name=\"version\"\n                    class=\"clr-select\"\n                    [(ngModel)]=\"version\">\n               <option *ngFor=\"let v of supervisorService.availableVersions\" [value]=\"v\">{{v}}</option>\n            </select>\n         </div>\n      </section>\n      <section class=\"eula-section\">\n            <label for=\"eula\">{{'vsan.persistence.enable.eula'|localized}}</label>\n            <textarea id=\"eula\"\n                      [(ngModel)]=\"supervisorService.eula\"\n                      readonly>\n            </textarea>\n            <clr-checkbox-wrapper>\n               <input id=\"eula-accept\"\n                      type=\"checkbox\"\n                      clrCheckbox\n                      [(ngModel)]=\"isEulaAccepted\" />\n               <label>{{'vsan.persistence.enable.acceptEula'|localized}}</label>\n            </clr-checkbox-wrapper>\n      </section>\n   </div>\n</vsan-default-prompt>\n","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<form clrForm clrLayout=\"horizontal\">\n   <clr-select-container>\n      <label class=\"clr-col-3 clr-col-sm-3\">{{'vsan.persistence.enable.version'|localized}}</label>\n      <select clrSelect\n              id=\"version\"\n              class=\"clr-col-9 clr-col-sm-9\"\n              name=\"version\"\n              (change)=\"invalidate()\"\n              [(ngModel)]=\"supervisorService.version\">\n         <option *ngFor=\"let v of supervisorService.availableVersions\" [value]=\"v\">{{v}}</option>\n      </select>\n   </clr-select-container>\n\n   <!--   TODO [kaleksandrov] Update vsan-validation component to support external links and switch back to it after the cut off-->\n   <div class=\"alert alert-info\" role=\"alert\">\n      <div class=\"alert-items\">\n         <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n               <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">{{'vsan.persistence.enable.security.warning'|localized}}</span>\n            <div class=\"alert-actions\">\n               <a [external-link] href=\"KB_PSP_SERVICE_SETTINGS\" class=\"alert-action\"></a>\n            </div>\n         </div>\n      </div>\n   </div>\n\n   <clr-input-container>\n      <label class=\"clr-col-3 clr-col-sm-3\">{{'vsan.persistence.enable.repo'|localized}}</label>\n      <input id=\"repo-input\"\n             class=\"clr-col-9 clr-col-sm-9 text-input\"\n             clrInput\n             name=\"repo\"\n             (change)=\"invalidate()\"\n             [(ngModel)]=\"supervisorService.repo\"/>\n   </clr-input-container>\n\n   <clr-input-container>\n      <label class=\"clr-col-3 clr-col-sm-3\">{{'vsan.persistence.enable.username'|localized}}</label>\n      <input id=\"username-input\"\n             clrInput\n             class=\"clr-col-9 clr-col-sm-9 text-input\"\n             name=\"username\"\n             (change)=\"invalidate()\"\n             [(ngModel)]=\"supervisorService.username\"/>\n   </clr-input-container>\n\n   <clr-input-container>\n      <label class=\"clr-col-3 clr-col-sm-3\">{{'vsan.persistence.enable.password'|localized}}</label>\n      <input id=\"password-input\"\n             clrInput\n             type=\"password\"\n             class=\"clr-col-9 clr-col-sm-9 text-input\"\n             name=\"password\"\n             (change)=\"invalidate()\"\n             [(ngModel)]=\"supervisorService.password\"/>\n   </clr-input-container>\n\n   <clr-input-container>\n      <label id=\"advanced-settings-label\"\n             class=\"clr-control-label clr-col-12 clr-col-sm-12\">\n         {{'vsan.persistence.enable.labels'|localized}}\n         <clr-signpost id=\"advanced-settings-signpost\">\n            <clr-signpost-content clrPosition=\"right-top\" *clrIfOpen>\n               {{'vsan.persistence.enable.labels.signpost'|localized}}\n            </clr-signpost-content>\n         </clr-signpost>\n      </label>\n   </clr-input-container>\n</form>\n\n<div class=\"clr-row header-row\">\n   <div class=\"clr-col-5\">\n      {{'vsan.persistence.enable.key' | localized}}\n   </div>\n   <div class=\"clr-col-5\">\n      {{'vsan.persistence.enable.value' | localized}}\n   </div>\n</div>\n\n<div *ngFor=\"let setting of supervisorService.advancedSettings; let i=index\"\n     id=\"row-setting-{{i}}\"\n     class=\"clr-row\">\n\n   <div class=\"clr-col-5\">\n      <clr-input-container>\n         <input id=\"key-{{i}}\"\n                clrInput\n                type=\"text\"\n                name=\"key-{{i}}\"\n                class=\"text-input\"\n                [maxlength]=\"SETTING_KEY_MAX_LENGTH\"\n                [(ngModel)]=\"setting.key\"\n                (ngModelChange)=\"invalidate()\"/>\n      </clr-input-container>\n   </div>\n   <clr-input-container class=\"clr-col-5\">\n      <input id=\"value-{{i}}\"\n             clrInput\n             type=\"text\"\n             name=\"value-{{i}}\"\n             class=\"text-input\"\n             [maxlength]=\"SETTING_VALUE_MAX_LENGTH\"\n             [(ngModel)]=\"setting.value\"\n             (ngModelChange)=\"invalidate()\"/>\n   </clr-input-container>\n\n   <button id=\"remove-setting-{{i}}\"\n           type=\"button\"\n           class=\"btn btn-icon btn-link clr-col-1\"\n           title=\"{{'vsan.common.remove' | localized}}\"\n           (click)=\"removeSetting(i)\">\n      <clr-icon shape=\"times-circle\" [attr.alt]=\"'vsan.common.remove' | localized\"></clr-icon>\n   </button>\n</div>\n<button id=\"add-setting\"\n        type=\"button\"\n        [disabled]=\"!isAddAllowed\"\n        [title]=\"addButtonTooltip\"\n        class=\"btn btn-icon btn-link\"\n        title=\"{{'vsan.common.add' | localized}}\"\n        (click)=\"addSetting()\">\n   <clr-icon shape=\"plus-circle\" [attr.alt]=\"'vsan.common.add' | localized\"></clr-icon>\n</button>\n","\nexport interface AdvancedSetting {\n\n   key: string;\n   value: string;\n} //class AdvancedSetting\n\nexport module AdvancedSetting{\nexport class Factory {\n\n   static create = (key: string, value: string): AdvancedSetting => {\n      return { key: key, value: value, };\n   }\n\n\n} //class Factory\n\n} //module AdvancedSetting\n","<!-- Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<h5 vsan-auto-focus>\n   {{\"vsan.config.ss.supervisorServices\" | localized}}\n</h5>\n\n<vsan-validation *ngIf=\"error\" [alert]=\"error\"></vsan-validation>\n\n<clr-button-group vsan-button-group class=\"btn-link\">\n   <clr-button id=\"enable-action\"\n               *ngIf=\"selectedService && !selectedService?.isEnabled\"\n               name=\"enable-action\"\n               class=\"btn btn-sm\"\n               [disabled]=\"isEnableButtonDisabled()\"\n               [vsan-button-title]= \"getEnableButtonTitle()\"\n               (click)=\"enable()\">\n      {{\"vsan.config.ss.supervisorServices.action.enable\" | localized}}\n   </clr-button>\n   <clr-button id=\"disable-action\"\n               *ngIf=\"selectedService && selectedService?.isEnabled\"\n               name=\"disable-action\"\n               class=\"btn btn-sm\"\n               [disabled]=\"!hasEditPrivileges\"\n               [vsan-button-title]=\"'vsan.common.nopermissions' | localized\"\n               (click)=\"disable()\">\n      {{\"vsan.config.ss.supervisorServices.action.disable\" | localized}}\n   </clr-button>\n</clr-button-group>\n\n<clr-datagrid id=\"supervisor-services-grid\"\n              class=\"supervisor-services-grid\"\n              [(clrDgSingleSelected)]=\"selectedService\"\n              [clrDgRowSelection]=\"true\"\n              [clrDgLoading]=\"loading\">\n   <clr-dg-column class=\"content-title\" [clrDgField]=\"'name'\">\n      {{\"vsan.config.ss.supervisorServices.header.service\" | localized}}\n   </clr-dg-column>\n   <clr-dg-column class=\"content-short\" [clrDgField]=\"'isEnabled'\">\n      {{\"vsan.config.ss.supervisorServices.header.status\" | localized}}\n      <clr-dg-filter>\n         <vsan-enumerated-filter vsanDgField=\"isEnabled\">\n            <vsan-enumerated-filter-item [iconClass]=\"Icon.CLR_SUCCESS_ICON_CLASS\"\n                                         [iconShape]=\"Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE\"\n                                         [label]=\"getStatusLabel(true)\"\n                                         [value]=\"true\"></vsan-enumerated-filter-item>\n            <vsan-enumerated-filter-item [iconClass]=\"Icon.CLR_DISABLED_ICON_CLASS\"\n                                         [iconShape]=\"Icon.CLR_MINUS_CIRCLE_ICON_SHAPE\"\n                                         [label]=\"getStatusLabel(false)\"\n                                         [value]=\"false\"></vsan-enumerated-filter-item>\n         </vsan-enumerated-filter>\n      </clr-dg-filter>\n   </clr-dg-column>\n   <clr-dg-column class=\"content-short\" [clrDgField]=\"'version'\">\n      {{\"vsan.config.ss.supervisorServices.header.currentVersion\" | localized}}\n   </clr-dg-column>\n   <clr-dg-column class=\"content-short\">\n      {{\"vsan.config.ss.supervisorServices.header.desiredVersion\" | localized}}\n   </clr-dg-column>\n\n   <clr-dg-placeholder>{{\"vsan.config.ss.supervisorServices.no.installed.services\" | localized}}</clr-dg-placeholder>\n\n   <clr-dg-row *clrDgItems=\"let service of services\" [clrDgItem]=\"service\">\n      <clr-dg-cell vsan-show-title>\n         {{service.name}}\n      </clr-dg-cell>\n      <clr-dg-cell>\n         <vsan-icon-item\n               iconClass=\"{{service.isEnabled ? Icon.CLR_SUCCESS_ICON_CLASS : Icon.CLR_DISABLED_ICON_CLASS}}\"\n               [shape]=\"service.isEnabled ? Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE : Icon.CLR_MINUS_CIRCLE_ICON_SHAPE\"\n               [label]=\"getStatusLabel(service.isEnabled)\">\n         </vsan-icon-item>\n      </clr-dg-cell>\n      <clr-dg-cell>{{service.version | notEmpty}}</clr-dg-cell>\n      <clr-dg-cell>{{service.desiredVersion | notEmpty}}</clr-dg-cell>\n      <clr-dg-row-detail *clrIfExpanded>\n         {{service.description}}\n      </clr-dg-row-detail>\n   </clr-dg-row>\n   <clr-dg-footer>\n      {{\"vsan.config.ss.supervisorServices.footer.items\" | localized: services?.length.toString() }}\n   </clr-dg-footer>\n</clr-datagrid>\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {ActionButtonModule} from \"@component/action-button/action-button.module\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {CommonCellsModule} from \"@component/cell/common-cells.module\";\nimport {InventoryBrowserModule} from \"@component/inventory/inventory-browser.module\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {TreeDatagridModule} from \"@component/datagrid/tree-datagrid.module\";\nimport {DatetimePickerModule} from \"@component/datetime-picker/datetime-picker.module\";\nimport {PopupListModule} from \"@component/popup-list/popup-list.module\";\nimport {VsanBreadcrumbModule} from \"@component/navigation/vsan-breadcrumb.module\";\n\n@NgModule({\n   imports: [\n         CommonDirectiveModule,\n         CommonPipeModule,\n         ValidationModule,\n         ActionButtonModule,\n         PromptModule,\n         CommonCellsModule,\n         InventoryBrowserModule,\n         SearchModule,\n         TreeDatagridModule,\n         DatetimePickerModule,\n         PopupListModule,\n         VsanBreadcrumbModule,\n   ],\n   exports: [\n      CommonDirectiveModule,\n      CommonPipeModule,\n      ValidationModule,\n      ActionButtonModule,\n      PromptModule,\n      CommonCellsModule,\n      InventoryBrowserModule,\n      SearchModule,\n      TreeDatagridModule,\n      DatetimePickerModule,\n      PopupListModule,\n      VsanBreadcrumbModule,\n   ],\n})\nexport class VsanCommonModule { }","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {SearchComponent} from \"@component/search/search.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule\n   ],\n   declarations: [\n      SearchComponent\n   ],\n   exports: [\n      SearchComponent\n   ],\n})\nexport class SearchModule {\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ActionButtonSeparatorComponent} from \"@component/action-button/action-button-separator.component\";\nimport {ButtonTitleDirective} from \"@component/action-button/button-title.directive\";\nimport {ButtonGroupDirective} from \"@component/action-button/button-group.directive\";\nimport {ButtonGroupWrapDirective} from \"@component/action-button/button-group-wrap.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n   ],\n   declarations: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ],\n   exports: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ]\n})\nexport class ActionButtonModule {\n}\n"]}