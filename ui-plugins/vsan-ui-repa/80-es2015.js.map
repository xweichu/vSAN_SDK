{"version":3,"sources":["./src/app/vsan/common/component/virtual-objects-table/filter/composite-health-states-filter.ts","./src/app/vsan/common/component/virtual-objects-table/virtual-objects-filterable-table.component.ts","./src/app/vsan/common/directive/state-change.directive.ts","./src/app/vsan/common/component/virtual-objects-table/filter/composite-health-states-filter-item.component.ts","./src/app/vsan/common/component/virtual-objects-table/virtual-objects-filterable-table.html","./src/app/vsan/common/component/virtual-objects-table/actions/virtual-objects-actions.component.ts","./src/app/vsan/common/component/virtual-objects-table/actions/virtual-objects-actions.html","./src/app/vsan/file-services/shares/filters/file-share-type-filter-options.ts","./src/app/vsan/common/component/virtual-objects-table/filter/composite-health-states-filter-item.html"],"names":[],"mappings":"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","file":"80-es2015.js","sourcesContent":["/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {VsanObjectHealthState} from \"@generated/vsan-object-health-state\";\nimport {ObjectHealthComplianceState} from \"@generated/object-health-compliance-state\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanObjectCompositeHealth} from \"@generated/vsan-object-composite-health\";\nimport {BaseHealthState} from \"@util/vsan-health-util\";\n\n/**\n * Filter by health states for parent and children objects. There are two types of usage:\n * - Single selection - a single filter can applied (all filter states are mutually exclusive).\n * The following condition should be met:\n * -- Parent object should contain at least one child with the selected filter.\n * - Multiple selection - covers the health V2 use case of different health categories\n * in which one or more statuses can be selected. The following conditions should be met:\n * -- Parent object should satisfy all selected filters. Each of filtered children should satisfy at least one of\n * selected filters.\n * -- Parent has a child which status satisfy all selected filters. Each of filtered children should satisfy all of the\n * selected children.\n */\nexport class CompositeHealthStatesFilter {\n   private readonly NON_FILTERABLE_STATES: BaseHealthState[] = [ObjectHealthComplianceState.NON_COMPLIANT];\n\n   filteredVirtualObjects: VirtualObjectModel[] = [];\n   filterItems: HealthStateFilterItem[] = [];\n\n   constructor(private virtualObjects: VirtualObjectModel[] = [],\n         private readonly preselectedStates: BaseHealthState[] = [],\n         private hasMultiSelection: boolean = false) {\n      if (VsanUiUtils.isEmpty(this.preselectedStates)) {\n         this.preselectedStates = [];\n      }\n      this.initFilterItems();\n      this.applySelection();\n   }\n\n   toggleHealthState(healthState: BaseHealthState): void {\n      const filterItem: HealthStateFilterItem = this.filterItems.find(item => item.healthState === healthState);\n      if (!filterItem) {\n         // the state is not from available filters\n         return;\n      }\n\n      this.toggleFilters(filterItem, healthState);\n\n      this.applySelection();\n   }\n\n   private toggleFilters(filterItem: HealthStateFilterItem, healthState: BaseHealthState): void {\n      // when multi-selection is applicable, health state filter acts like a checkbox\n      if (this.hasMultiSelection) {\n         filterItem.selected = !filterItem.selected;\n         return;\n      }\n\n      // when single-selection is applicable, health state filter acts like a radio-button\n      this.filterItems.forEach(item => {\n         if (item.healthState === healthState) {\n            item.selected = !item.selected;\n         } else {\n            item.selected = false;\n         }\n      });\n   }\n\n   private initFilterItems(): void {\n      this.filterItems = [];\n\n      if (VsanUiUtils.isEmpty(this.virtualObjects)) {\n         return;\n      }\n\n      this.generateFilterItems(this.virtualObjects);\n   }\n\n   private generateFilterItems(virtualObjects: VirtualObjectModel[]): void {\n      if (VsanUiUtils.isEmpty(virtualObjects)) {\n         return;\n      }\n\n      virtualObjects.forEach(obj => {\n         this.updateFilterItemsFromVirtualObject(obj);\n         this.generateFilterItems(obj.children);\n      });\n   }\n\n   private updateFilterItemsFromVirtualObject(obj: VirtualObjectModel): void {\n      const isAggregationObject: boolean = !obj.uid;\n      if (obj.compositeHealth) {\n         this.processStateToFilterItems(obj.compositeHealth.complianceState, !isAggregationObject);\n         this.processStateToFilterItems(obj.compositeHealth.incomplianceReason, !isAggregationObject);\n         this.processStateToFilterItems(obj.compositeHealth.rebuildState, !isAggregationObject);\n         this.processStateToFilterItems(obj.compositeHealth.policyState, !isAggregationObject);\n      } else {\n         this.processStateToFilterItems(obj.healthState, !isAggregationObject);\n      }\n   }\n\n   private processStateToFilterItems(state: BaseHealthState, increaseCount: boolean): void {\n      if (!state || this.NON_FILTERABLE_STATES.some(nonFilterable => nonFilterable === state)) {\n         return;\n      }\n\n      let filterItem: HealthStateFilterItem = this.filterItems.find(item => item.healthState === state);\n      if (!filterItem) {\n         filterItem = {\n            healthState: state,\n            elementsCount: 0,\n            enabled: true, // filters are enabled at initialization,\n            selected: this.preselectedStates.some(preselectedState => preselectedState === state),\n         };\n         this.filterItems.push(filterItem);\n      }\n      if (increaseCount) {\n         filterItem.elementsCount++;\n      }\n   }\n\n   private applySelection(): void {\n      const selectedFilters: HealthStateFilterItem[] = this.getSelectedFilterItems();\n      if (!this.virtualObjects) {\n         this.filteredVirtualObjects = [];\n         return;\n      }\n      this.filteredVirtualObjects = JSON.parse(JSON.stringify(this.virtualObjects));\n      if (!VsanUiUtils.isEmpty(selectedFilters)) {\n         // filter root objects\n         this.filteredVirtualObjects = this.filteredVirtualObjects.filter(parentObject =>\n               this.isSelectionApplicableForParentObject(parentObject, true));\n      }\n      // the health status of root is built from statuses of children. Show only children which are accountable for\n      // current parent status\n      this.filteredVirtualObjects.forEach(parent => {\n         if (!VsanUiUtils.isEmpty(parent.children)) {\n            parent.children = parent.children.filter(child => this.matchesAnyOfSelected(child));\n         }\n      });\n\n      if (this.hasMultiSelection) {\n         // disable statuses that are from the same health category\n         this.changeFilterItemsAvailability();\n      }\n   }\n\n   private getSelectedFilterItems(): HealthStateFilterItem[] {\n      if (VsanUiUtils.isEmpty(this.filterItems)) {\n         return [];\n      }\n      return this.filterItems.filter(item => item.selected);\n   }\n\n   private isSelectionApplicableForParentObject(parentObject: VirtualObjectModel, checkChildren: boolean): boolean {\n      // 1. root object should have all selected states\n      if (this.matchesFullSelection(parentObject)) {\n         return true;\n      }\n      if (checkChildren) {\n         // 2. a child of the parent object should have all selected states\n         return !VsanUiUtils.isEmpty(parentObject.children) &&\n               parentObject.children.some(child => this.matchesFullSelection(child));\n      }\n   }\n\n   private matchesFullSelection(virtualObject: VirtualObjectModel): boolean {\n      const selectedFilters: HealthStateFilterItem[] = this.getSelectedFilterItems();\n      if (VsanUiUtils.isEmpty(selectedFilters)) {\n         return true;\n      }\n      return selectedFilters.every(selectedFilter =>\n            this.hasHealthMatch(selectedFilter.healthState, virtualObject.compositeHealth, virtualObject.healthState));\n   }\n\n   private matchesAnyOfSelected(virtualObject: VirtualObjectModel): boolean {\n      const selectedFilters: HealthStateFilterItem[] = this.getSelectedFilterItems();\n      if (VsanUiUtils.isEmpty(selectedFilters)) {\n         return true;\n      }\n      return selectedFilters.some(selectedFilter =>\n            this.hasHealthMatch(selectedFilter.healthState, virtualObject.compositeHealth, virtualObject.healthState));\n   }\n\n   private hasHealthMatch(baseState: BaseHealthState,\n         compositeHealth: VsanObjectCompositeHealth,\n         healthState: VsanObjectHealthState): boolean {\n      if (!compositeHealth) {\n         return baseState === healthState;\n      }\n\n      return baseState === compositeHealth.complianceState ||\n            baseState === compositeHealth.incomplianceReason ||\n            baseState === compositeHealth.rebuildState ||\n            baseState === compositeHealth.policyState;\n   }\n\n   private changeFilterItemsAvailability(): void {\n      const filteredRootsWithoutChildren: VirtualObjectModel[] = this.filteredVirtualObjects.filter(filteredObject =>\n            this.isSelectionApplicableForParentObject(filteredObject, false));\n      this.filterItems.forEach(filterItem => {\n         filterItem.enabled = filterItem.selected || filteredRootsWithoutChildren.some(virtualObject =>\n               this.hasHealthMatch(filterItem.healthState, virtualObject.compositeHealth, virtualObject.healthState));\n      });\n   }\n\n}\n\nexport interface HealthStateFilterItem {\n   healthState: BaseHealthState;\n   elementsCount: number;\n   enabled: boolean;\n   selected: boolean;\n}","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectorRef, Component, EventEmitter, Input} from \"@angular/core\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {\n   CompositeHealthStatesFilter,\n   HealthStateFilterItem,\n} from \"@component/virtual-objects-table/filter/composite-health-states-filter\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ObjectHealthComplianceState} from \"@generated/object-health-compliance-state\";\nimport {BaseHealthState, VsanHealthUtil} from \"@util/vsan-health-util\";\nimport {VsanObjectHealthState} from \"@generated/vsan-object-health-state\";\nimport {VirtualObjectsTableService} from \"@component/virtual-objects-table/virtual-objects-table.service\";\nimport {VirtualObjectType} from \"@generated/virtual-object-type\";\n\n@Component({\n   selector: \"vsan-virtual-objects-filterable-table\",\n   templateUrl: \"virtual-objects-filterable-table.html\",\n   styleUrls: [\"virtual-objects-filterable-table.scss\"],\n})\nexport class VirtualObjectsFilterableTableComponent {\n\n   selectedVirtualObjects: VirtualObjectModel[] = [];\n   private healthFilter: CompositeHealthStatesFilter = new CompositeHealthStatesFilter();\n   private _initialFilteredHealthStates: BaseHealthState[] = [];\n   private _virtualObjects: VirtualObjectModel[];\n   private hasAppliedFilters: boolean;\n\n   clearFiltersTrigger: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n   @Input()\n   set virtualObjects(value: VirtualObjectModel[]) {\n      if (this._virtualObjects === value) {\n         return;\n      }\n      this._virtualObjects = value;\n      this.healthFilter = new CompositeHealthStatesFilter(this._virtualObjects, this._initialFilteredHealthStates,\n            this.hasCompositeHealth());\n   }\n\n   get virtualObjects(): VirtualObjectModel[] {\n      return this._virtualObjects;\n   }\n\n   @Input()\n   set initialFilteredHealthStates(value: BaseHealthState[]) {\n      this._initialFilteredHealthStates = VsanUiUtils.isEmpty(value) ? [] : value;\n      if (!VsanUiUtils.isEmpty(value) && !VsanUiUtils.isEmpty(this._virtualObjects)) {\n         this.healthFilter = new CompositeHealthStatesFilter(this._virtualObjects, this._initialFilteredHealthStates,\n               this.hasCompositeHealth());\n      }\n   }\n\n   @Input()\n   initiallyFilteredName: string;\n\n   @Input()\n   initiallyFilteredTypes: VirtualObjectType[];\n\n   @Input()\n   presentVirtualObjectUuids: string[];\n\n   @Input()\n   loading: boolean;\n\n   constructor(private virtualObjectsTableService: VirtualObjectsTableService,\n         private changeDetector: ChangeDetectorRef) {}\n\n   get filteredVirtualObjects(): VirtualObjectModel[] {\n      return this.healthFilter.filteredVirtualObjects;\n   }\n\n   get filterItems(): HealthStateFilterItem[] {\n      return this.healthFilter.filterItems.sort(this.healthFilterItemCompare);\n   }\n\n   toggleHealthState(healthState: BaseHealthState): void {\n      this.healthFilter.toggleHealthState(healthState);\n   }\n\n   areFiltersVisible(): boolean {\n      if (!this.healthFilter || VsanUiUtils.isEmpty(this.healthFilter.filterItems)) {\n         return false;\n      }\n      // if there is only one filter, it shouldn't be \"Healthy\"\n      return this.healthFilter.filterItems && this.healthFilter.filterItems.length &&\n            (this.healthFilter.filterItems.length > 1 ||\n                  this.healthFilter.filterItems[0].healthState !== ObjectHealthComplianceState.COMPLIANT &&\n                  this.healthFilter.filterItems[0].healthState !== VsanObjectHealthState.HEALTHY);\n   }\n\n   appliedHealthStateFilters(): BaseHealthState[] {\n      return this.healthFilter.filterItems.filter(item => item.selected).map(item => item.healthState);\n   }\n\n   isClearHealthFiltersActionDisabled(): boolean {\n      return !this.hasAppliedFilters && !this.appliedHealthStateFilters?.length;\n   }\n\n   hasCompositeHealth(): boolean {\n      return this.virtualObjects?.some(object => !!object.compositeHealth);\n   }\n\n   clearHealthFilters(): void {\n      this.healthFilter = new CompositeHealthStatesFilter(this._virtualObjects, [], this.hasCompositeHealth());\n      this.virtualObjectsTableService.resetFilters();\n   }\n\n   onSelectionChanged(value: VirtualObjectModel[]): void {\n      this.selectedVirtualObjects = value;\n   }\n\n   onFilterChanged(hasAppliedFilters: boolean): void {\n      if (hasAppliedFilters === this.hasAppliedFilters) {\n         return;\n      }\n      this.hasAppliedFilters = hasAppliedFilters;\n      // avoid ExpressionChangedAfterItHasBeenCheckedError on click of \"Clear filters\" button, if there are applied\n      // filters in the datagrid columns\n      this.changeDetector.detectChanges();\n   }\n\n   private healthFilterItemCompare(a: HealthStateFilterItem, b: HealthStateFilterItem): number {\n      let indexA: number = VsanHealthUtil.HEALTH_STATES_ORDER.indexOf(a.healthState);\n      indexA = indexA ? indexA : VsanHealthUtil.HEALTH_STATES_ORDER.length;\n      let indexB: number = VsanHealthUtil.HEALTH_STATES_ORDER.indexOf(b.healthState);\n      indexB = indexB ? indexB : VsanHealthUtil.HEALTH_STATES_ORDER.length;\n      return indexA - indexB;\n   }\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Directive, ElementRef, Input} from \"@angular/core\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * Attribute directive for notifying screen reader users when the element state changes(enable or disable)\n */\n@Directive({\n   selector: \"[vsan-state-change]\",\n})\nexport class StateChangeDirective {\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   constructor(private el: ElementRef) {}\n\n   @Input(\"disabled\") set disabled(value: boolean) {\n      this.el.nativeElement.disabled = value;\n\n      const elementId: string = this.el.nativeElement.id;\n      if (elementId && document.getElementById(elementId)) {\n         const buttonText: string = document.getElementById(elementId).innerText;\n         this.srOnlyMessage = !value ?\n               VsanUiUtils.getString(\"vsan.common.srMessage.enable.button\", buttonText) :\n               VsanUiUtils.getString(\"vsan.common.srMessage.disable.button\", buttonText);\n      }\n   }\n}\n","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {HealthStateFilterItem} from \"@component/virtual-objects-table/filter/composite-health-states-filter\";\nimport {BaseHealthState, VsanHealthUtil} from \"@util/vsan-health-util\";\n\n@Component({\n   selector: \"vsan-composite-health-states-filter-item\",\n   templateUrl: \"composite-health-states-filter-item.html\",\n   styleUrls: [\"composite-health-states-filter-item.scss\"],\n})\nexport class CompositeHealthStatesFilterItemComponent {\n\n   @Input()\n   item: HealthStateFilterItem;\n\n   @Output()\n   onItemClicked: EventEmitter<BaseHealthState> = new EventEmitter<BaseHealthState>();\n\n   getEnabledItemClass(): string {\n      return VsanHealthUtil.getHealthStateLabelClass(this.item.healthState);\n   }\n\n   getBadgeColor(): string {\n      if (!this.item.enabled) {\n         return \"badge-disabled\";\n      }\n      if (VsanHealthUtil.isDangerHealthState(this.item.healthState)) {\n         return \"badge-danger\";\n      }\n      if (VsanHealthUtil.isWarningHealthState(this.item.healthState)) {\n         return \"badge-warning\";\n      }\n      if (VsanHealthUtil.isSuccessHealthState(this.item.healthState)) {\n         return \"badge-success\";\n      }\n   }\n\n}","<!-- Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div *ngIf=\"areFiltersVisible()\">\n   <vsan-composite-health-states-filter-item *ngFor=\"let item of filterItems\"\n                                             id=\"{{item.healthState}}\"\n                                             [item]=\"item\"\n                                             (onItemClicked)=\"toggleHealthState($event)\">\n   </vsan-composite-health-states-filter-item>\n</div>\n\n<div class=\"vsan-actions virtual-objects-action-buttons\">\n   <vsan-virtual-objects-actions [allItems]=\"virtualObjects\"\n                                 [selectedVirtualObjects]=\"selectedVirtualObjects\"\n                                 [loading]=\"loading\">\n   </vsan-virtual-objects-actions>\n   <clr-button-group class=\"btn-link\">\n      <clr-button id=\"clear-filters\"\n                  name=\"clear-filters\"\n                  class=\"btn btn-sm\"\n                  vsan-state-change\n                  [disabled]=\"isClearHealthFiltersActionDisabled()\"\n                  (click)=\"clearHealthFilters()\">\n         {{'vsan.monitor.cluster.virtualObjects.objects.clearFilters' | localized}}\n      </clr-button>\n   </clr-button-group>\n</div>\n\n<vsan-virtual-objects-table id=\"virtual-objects-table\"\n                            [allVirtualObjects]=\"virtualObjects\"\n                            [virtualObjects]=\"filteredVirtualObjects\"\n                            [appliedHealthStateFilters]=\"appliedHealthStateFilters()\"\n                            [nameFilterValue]=\"initiallyFilteredName\"\n                            [typeFilterValue]=\"initiallyFilteredTypes\"\n                            [presentVirtualObjectUuids]=\"presentVirtualObjectUuids\"\n                            [loading]=\"loading\"\n                            (selectionChanged)=\"onSelectionChanged($event)\"\n                            (filterChanged)=\"onFilterChanged($event)\">\n</vsan-virtual-objects-table>\n","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {\n   VirtualObjectsActionAvailabilityService,\n} from \"@component/virtual-objects-table/actions/validation/virtual-objects-action-availability.service\";\nimport {VirtualObjectsTypeUtil} from \"@component/virtual-objects-table/virtual-objects-type.util\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {PerformanceContext} from \"@navigation/context/performance-context\";\nimport {SharesContext} from \"@navigation/context/shares-context\";\nimport {VolumesContext} from \"@navigation/context/volumes-context\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {ActionAvailableStatus} from \"@util/validation/action-available-status\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VirtualObjectsUtil} from \"@vspherejsservices/virtual-objects/virtual-object-util\";\nimport {FileShareTypeFilterOptions} from \"../../../../file-services/shares/filters/file-share-type-filter-options\";\nimport {PerfMonitorViewType} from \"../../../../performance/model/perf-monitor-view-type.model\";\nimport {PlacementDetailsDialogContext} from \"../../../../virtualobjects/view/placement-details-dialog-context\";\n\n@Component({\n   selector: \"vsan-virtual-objects-actions\",\n   templateUrl: \"virtual-objects-actions.html\",\n   styleUrls: [\"virtual-objects-actions.scss\"],\n})\nexport class VirtualObjectsActionsComponent {\n\n   VirtualObjectsActionAvailabilityService: typeof VirtualObjectsActionAvailabilityService = VirtualObjectsActionAvailabilityService;\n\n   @Input()\n   loading: boolean;\n\n   @Input()\n   allItems: VirtualObjectModel[];\n\n   @Input()\n   selectedVirtualObjects: VirtualObjectModel[];\n\n   constructor(private navigationService: NavigationService,\n         private virtualObjectsActionAvailabilityService: VirtualObjectsActionAvailabilityService) {\n   }\n\n   actionDisabled(actionId: string): boolean {\n      return !this.getActionStatus(actionId).available;\n   }\n\n   getActionButtonTitle(actionId: string): string {\n      return this.getActionStatus(actionId).message;\n   }\n\n   private getActionStatus(actionId: string): ActionAvailableStatus {\n      return this.virtualObjectsActionAvailabilityService.checkAvailability({\n         actionId: actionId,\n         isLoading: this.loading,\n         selectedObjects: this.selectedVirtualObjects,\n      });\n   }\n\n   // View Physical Placement Details\n   viewPhysicalPlacementDetails(): void {\n      const placementDetailsContext: PlacementDetailsDialogContext = {\n         clusterRef: ManagedObject.contextObject,\n         virtualObjects: this.allItems,\n         selectedVirtualObjects: this.selectedVirtualObjects,\n      };\n      new ModalBuilder(\"virtualObjects/physicalPlacementDialog\")\n            .setDimensions(ModalBuilder.WIZARD_XL)\n            .open(placementDetailsContext);\n   }\n\n   // View Performance\n   hasObjectWithSupportedPerformance(): boolean {\n      return !VsanUiUtils.isEmpty(this.allItems)\n            && this.allItems.some(item =>\n                  VirtualObjectsTypeUtil.isVolume(item) ||\n                  VirtualObjectsTypeUtil.isVmWithAttachedVolume(item) ||\n                  VirtualObjectsTypeUtil.isFileShareOrFileVolume(item) ||\n                  VirtualObjectsTypeUtil.isVmdkOrAttachedFCD(item));\n   }\n\n   navigateToPerformanceView(selectedItem: VirtualObjectModel): void {\n      if (VirtualObjectsTypeUtil.isAttachedBlockVolume(selectedItem) ||\n            VirtualObjectsTypeUtil.isVmdkOrAttachedFCD(selectedItem)) {\n         this.navigateToVmPerfView(selectedItem);\n      } else {\n         this.navigateToFileSharesPerfView(selectedItem);\n      }\n   }\n\n   private navigateToVmPerfView(selectedItem: VirtualObjectModel): void {\n      const vmPerfContext: PerformanceContext = {\n         viewType: PerfMonitorViewType[PerfMonitorViewType.VM_VIRTUAL_DISK],\n         selectedEntityName: selectedItem.name,\n      };\n      this.navigationService.navigateTo(PlatformExtension.VM_PERFORMANCE, selectedItem.vmRef, vmPerfContext);\n   }\n\n   private navigateToFileSharesPerfView(selectedFileShare: VirtualObjectModel): void {\n      const selectedObjectName: string = this.getNavigationObjectName(\n            selectedFileShare, VirtualObjectsTypeUtil.isFileShare(selectedFileShare));\n\n      const fileSharePerfContext: PerformanceContext = {\n         viewType: PerfMonitorViewType[PerfMonitorViewType.CLUSTER_FILE_SERVICE],\n         selectedEntityName: selectedObjectName,\n      };\n      this.navigationService.navigateTo(PlatformExtension.CLUSTER_PERFORMANCE, null, fileSharePerfContext);\n   }\n\n   // View Volume\n   hasVolumeObject(): boolean {\n      return !VsanUiUtils.isEmpty(this.allItems) &&\n            this.allItems.some(item =>\n                  VirtualObjectsTypeUtil.isVmWithAttachedVolume(item) ||\n                  VirtualObjectsTypeUtil.isVolume(item));\n   }\n\n   navigateToVolumesView(): void {\n      const selectedObject: VirtualObjectModel = this.selectedVirtualObjects.find(\n            virtualObject => VirtualObjectsTypeUtil.isVolume(virtualObject));\n      const selectedObjectName: string = this.getNavigationObjectName(\n            selectedObject, VirtualObjectsTypeUtil.isFileVolume(selectedObject));\n\n      const cnsVolumesContext: VolumesContext = {\n         volumeName: selectedObjectName,\n      };\n      this.navigationService.navigateTo(PlatformExtension.CLUSTER_CNS_VOLUMES, null, cnsVolumesContext);\n   }\n\n   // View File Share\n   hasFileShareOrFileVolumeObject(): boolean {\n      return !VsanUiUtils.isEmpty(this.allItems) &&\n            this.allItems.some(item => VirtualObjectsTypeUtil.isFileShareOrFileVolume(item));\n   }\n\n   navigateToFileSharesView(): void {\n      const selectedObject: VirtualObjectModel = this.selectedVirtualObjects.find(\n            virtualObject => VirtualObjectsTypeUtil.isFileShareOrFileVolume(virtualObject));\n      const selectedObjectName: string = this.getNavigationObjectName(\n            selectedObject, VirtualObjectsTypeUtil.isFileShare(selectedObject));\n\n      const fileServiceSharesContext: SharesContext = {\n         preselectedShareName: selectedObjectName,\n         shareTypeFilter: VirtualObjectsTypeUtil.isFileShare(selectedObject)\n               ? FileShareTypeFilterOptions.FILE_SHARE\n               : FileShareTypeFilterOptions.CNS_VOLUME,\n      };\n      this.navigationService.navigateTo(PlatformExtension.FILE_SERVICE_SHARES, null, fileServiceSharesContext);\n   }\n\n   private getNavigationObjectName(object: VirtualObjectModel, searchInChildren: boolean): string {\n      const objectToGet: VirtualObjectModel = searchInChildren\n            ? this.findChild(object.uid)\n            : object;\n      if (VirtualObjectsTypeUtil.isAttachedBlockVolume(objectToGet)) {\n         // For attached CNS/Extension objects we have an extra (Hard Disk X) appended to the display name,\n         // Which won't match when navigating to CNS view. Use the plain name field instead.\n         return objectToGet.name;\n      }\n      return VirtualObjectsUtil.getName(objectToGet);\n   }\n\n   private findChild(uid: string): VirtualObjectModel {\n      return this.allItems\n            .filter(object => object && !VsanUiUtils.isEmpty(object.children))\n            .find(object => object.children.some(child => child && child.uid === uid));\n   }\n}\n","<!-- Copyright 2020-2021 VMware, Inc. All rights reserved. VMware Confidential -->\n\n<div class=\"btn-group\">\n   <!-- Placement details button -->\n   <clr-tooltip>\n      <span clrTooltipTrigger\n            [vsan-ignore-focus]=\"!actionDisabled(VirtualObjectsActionAvailabilityService.VIEW_PLACEMENT_DETAILS_ID)\">\n         <button id=\"{{VirtualObjectsActionAvailabilityService.VIEW_PLACEMENT_DETAILS_ID}}\"\n                 class=\"btn btn-sm btn-link no-spacing\"\n                 aria-describedby=\"view-placement-details-description\"\n                 vsan-state-change\n                 (click)=\"viewPhysicalPlacementDetails()\"\n                 [disabled]=\"actionDisabled(VirtualObjectsActionAvailabilityService.VIEW_PLACEMENT_DETAILS_ID)\">\n            {{\"vsan.monitor.cluster.virtualObjects.action.viewDetails\" | localized}}\n         </button>\n      </span>\n      <clr-tooltip-content id=\"view-placement-details-description\"\n                           clrPosition=\"top-right\"\n                           clrSize=\"lg\">\n         {{getActionButtonTitle(VirtualObjectsActionAvailabilityService.VIEW_PLACEMENT_DETAILS_ID)}}\n      </clr-tooltip-content>\n   </clr-tooltip>\n   <!-- View performance button -->\n   <clr-tooltip *ngIf=\"hasObjectWithSupportedPerformance()\">\n      <span clrTooltipTrigger\n            [vsan-ignore-focus]=\"!actionDisabled(VirtualObjectsActionAvailabilityService.VIEW_PERFORMANCE_ID)\">\n         <button id=\"{{VirtualObjectsActionAvailabilityService.VIEW_PERFORMANCE_ID}}\"\n                 class=\"btn btn-sm btn-link no-spacing\"\n                 aria-describedby=\"view-performance-description\"\n                 vsan-state-change\n                 (click)=\"navigateToPerformanceView(this.selectedVirtualObjects[0])\"\n                 [disabled]=\"actionDisabled(VirtualObjectsActionAvailabilityService.VIEW_PERFORMANCE_ID)\">\n            {{\"vsan.monitor.cluster.virtualObjects.action.navigateToPerformanceView\" | localized}}\n         </button>\n      </span>\n      <clr-tooltip-content id=\"view-performance-description\"\n                           clrPosition=\"top-right\"\n                           clrSize=\"lg\">\n         {{getActionButtonTitle(VirtualObjectsActionAvailabilityService.VIEW_PERFORMANCE_ID)}}\n      </clr-tooltip-content>\n   </clr-tooltip>\n   <!-- Buttons for navigating to Volumes view and File Shares view:\n         1) If there are no file share objects/volume objects at all hide navigation buttons.\n         2) If file share objects/volume objects present but selected count is different\n        than 1 disable the corresponding button.\n   -->\n   <clr-tooltip *ngIf=\"hasVolumeObject()\">\n      <span clrTooltipTrigger\n            [vsan-ignore-focus]=\"!actionDisabled(VirtualObjectsActionAvailabilityService.VIEW_VOLUME_ID)\">\n         <button id=\"{{VirtualObjectsActionAvailabilityService.VIEW_VOLUME_ID}}\"\n                 class=\"btn btn-sm btn-link no-spacing\"\n                 aria-describedby=\"view-volumes-description\"\n                 vsan-state-change\n                 (click)=\"navigateToVolumesView()\"\n                 [disabled]=\"actionDisabled(VirtualObjectsActionAvailabilityService.VIEW_VOLUME_ID)\">\n            {{\"vsan.monitor.cluster.virtualObjects.action.navigateToCnsVolumes\" | localized}}\n         </button>\n      </span>\n      <clr-tooltip-content id=\"view-volumes-description\"\n                           clrPosition=\"top-right\"\n                           clrSize=\"lg\">\n         {{getActionButtonTitle(VirtualObjectsActionAvailabilityService.VIEW_VOLUME_ID)}}\n      </clr-tooltip-content>\n   </clr-tooltip>\n   <clr-tooltip *ngIf=\"hasFileShareOrFileVolumeObject()\">\n      <span clrTooltipTrigger\n            [vsan-ignore-focus]=\"!actionDisabled(VirtualObjectsActionAvailabilityService.VIEW_FILE_SHARE)\">\n         <button id=\"{{VirtualObjectsActionAvailabilityService.VIEW_FILE_SHARE}}\"\n                 class=\"btn btn-sm btn-link no-spacing\"\n                 aria-describedby=\"view-file-shares-description\"\n                 vsan-state-change\n                 (click)=\"navigateToFileSharesView()\"\n                 [disabled]=\"actionDisabled(VirtualObjectsActionAvailabilityService.VIEW_FILE_SHARE)\">\n            {{\"vsan.monitor.cluster.virtualObjects.action.navigateToFileShares\" | localized}}\n         </button>\n      </span>\n      <clr-tooltip-content id=\"view-file-shares-description\"\n                           clrPosition=\"top-right\"\n                           clrSize=\"lg\">\n         {{getActionButtonTitle(VirtualObjectsActionAvailabilityService.VIEW_FILE_SHARE)}}\n      </clr-tooltip-content>\n   </clr-tooltip>\n</div>\n\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nexport enum FileShareTypeFilterOptions {\n   FILE_SHARE = \"user\",\n   CNS_VOLUME = \"cns\",\n   ALL = \"All\"\n}","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<!-- disabled filter item -->\n<span *ngIf=\"!item.enabled\"\n      class=\"label disabled-item\"\n      [title]=\"item.healthState | healthStateLabel\">\n   {{item.healthState | healthStateLabel}}\n   <span class=\"badge\">\n      {{item.elementsCount}}\n   </span>\n</span>\n\n<!-- enabled filter item -->\n<a *ngIf=\"item.enabled\"\n   href=\"javascript://\"\n   class=\"label clickable\"\n   [ngClass]=\"getEnabledItemClass()\"\n   [class.not-selected]=\"!item.selected\"\n   [title]=\"item.healthState | healthStateLabel\"\n   (click)=\"onItemClicked.emit(item.healthState)\">\n   {{item.healthState | healthStateLabel}}\n   <span class=\"badge\"\n         [ngClass]=\"getBadgeColor()\">\n      {{item.elementsCount}}\n   </span>\n</a>"],"sourceRoot":"webpack:///"}