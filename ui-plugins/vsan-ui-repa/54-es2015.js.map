{"version":3,"sources":["./src/app/vsan/common/component/general-settings/utils/rekey-interval.html","./src/app/vsan/common/component/general-settings/general-settings.component.ts","./src/app/vsan/common/component/general-settings/general-settings.module.ts","./src/app/vsan/common/util/vsan-rdma-util.ts","./src/app/vsan/common/component/general-settings/general-settings.html","./src/app/vsan/common/util/vsan-dit-util.ts","./src/app/vsan/common/service/status-updates/vsan-status-change.data.ts","./src/app/vsan/common/service/flow/loader-name.ts","./src/app/vsan/common/util/vsan-signpost-util.ts"],"names":[],"mappings":"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","file":"54-es2015.js","sourcesContent":["<!--Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-select-container>\n   <label>\n      {{\"configureVsan.settings.dataInTransitEncryption.rekeyLabel\" | localized}}\n   </label>\n   <select class=\"rekey-interval\"\n           id=\"rekey-interval\"\n           clrSelect\n           [(ngModel)]=\"selectedRekeyMode\"\n           (ngModelChange)=\"onRekeyModeChange()\"\n           [disabled]=\"!isDataInTransitEncryptionEnabled\"\n           name=\"rekey-interval\">\n      <option [selected]=\"isDefaultRekeyInterval()\"\n              value=\"{{RekeyMode.DEFAULT}}\">\n         {{\"configureVsan.settings.dataInTransitEncryption.rekey.mode.default\" | localized}}\n      </option>\n      <option [selected]=\"isCustomRekeyInterval()\"\n              value=\"{{RekeyMode.CUSTOM}}\">\n         {{\"configureVsan.settings.dataInTransitEncryption.rekey.mode.custom\" | localized}}\n      </option>\n   </select>\n</clr-select-container>\n\n<clr-select-container *ngIf=\"isDefaultRekeyInterval()\">\n   <select class=\"default-rekey-input\"\n           clrSelect\n           [(ngModel)]=\"rekeyInterval\"\n           (ngModelChange)=\"onRekeyIntervalChange()\"\n           [disabled]=\"!isDataInTransitEncryptionEnabled\"\n           name=\"default-rekey-input\">\n      <option *ngFor=\"let pair of rekeyDefaultValuesMap\"\n              [selected]=\"pair.valueInMinutes == rekeyInterval\"\n              value=\"{{pair.valueInMinutes}}\">\n         {{pair.name}}\n      </option>\n   </select>\n   <clr-control-helper>\n      {{DEFAULT_REKEY_HELPER_TEXT}}\n   </clr-control-helper>\n</clr-select-container>\n\n<clr-input-container *ngIf=\"isCustomRekeyInterval()\">\n   <input id=\"custom-rekey-input\"\n          class=\"custom-rekey-input\"\n          type=\"number\"\n          [disabled]=\"!isDataInTransitEncryptionEnabled\"\n          [(ngModel)]=\"rekeyInterval\"\n          (ngModelChange)=\"onRekeyIntervalChange()\"\n          name=\"custom-rekey-input\"\n          clrInput />\n   <clr-control-helper>\n      {{CUSTOM_REKEY_HELPER_TEXT}}\n   </clr-control-helper>\n</clr-input-container>\n","/* Copyright 2016-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {AlertType} from \"@component/validation/alert-type\";\nimport {ClusterMode} from \"@generated/cluster-mode\";\nimport {ConfigureClusterService} from \"@generated/configure-cluster-service\";\nimport {CsdService} from \"@generated/csd-service\";\nimport {SpaceEfficiencyConfig} from \"@generated/space-efficiency-config\";\nimport {VsanClusterType} from \"@generated/vsan-cluster-type\";\nimport {VsanConfigSpec} from \"@generated/vsan-config-spec\";\nimport {VsanRdmaService} from \"@generated/vsan-rdma-service\";\nimport {VsanStretchedClusterService} from \"@generated/vsan-stretched-cluster-service\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanDitUtil} from \"@util/vsan-dit-util\";\nimport {VsanRdmaUtil} from \"@util/vsan-rdma-util\";\nimport {VsanSignpostUtil} from \"@util/vsan-signpost-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {GeneralConfigData} from \"./general-config.data\";\n\n@Component({\n   templateUrl: \"general-settings.html\",\n   styleUrls: [\"general-settings.scss\"],\n   selector: \"vsan-general-settings\",\n})\nexport class GeneralSettingsComponent implements OnInit {\n   SpaceEfficiencyConfig: typeof SpaceEfficiencyConfig = SpaceEfficiencyConfig;\n\n   AlertType: typeof AlertType = AlertType;\n\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Input()\n   predefinedHeight: number = 550;\n\n   @Input()\n   config: GeneralConfigData;\n\n   @Input()\n   showTitles: boolean = true;\n\n   @Input()\n   showComputeOnlyOption: boolean = false;\n\n   @Input()\n   showVsanMaxOption: boolean = false;\n\n   @Input()\n   showLargeScaleClusterSupportOption: boolean = false;\n\n   @Input()\n   showRdmaSupportOption: boolean = false;\n\n   @Input()\n   resetRdmaStatus: boolean = false;\n\n   @Input()\n   showAllowReducedRedundancyOption: boolean = true;\n\n   @Input()\n   showFileServiceOweDescription: boolean = false;\n\n   @Input()\n   configType: VsanClusterType;\n\n   @Input()\n   isVsanMaxWorkflow: boolean;\n\n   @Output()\n   vsanConfigSpecChange: EventEmitter<VsanConfigSpec> = new EventEmitter();\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   /**\n    * Save the original configuration to keep track if disk format change warning must be displayed.\n    */\n   private originalDataAtRestEncryptionEnabled: boolean;\n   private originalSpaceEfficiency: SpaceEfficiencyConfig;\n   vsanConfigSpec: VsanConfigSpec;\n   originalAutoClaimDisksEnabled: boolean = false;\n   private isClusterClientOrServer: boolean = false;\n   private hasSharedWitnessHost: boolean = false;\n   private hasAnyDiskGroups: boolean = false;\n   private hostHardwareSupportRdma: boolean = false;\n\n   ditElementId: string = \"data-in-transit-encryption-help\";\n\n   constructor(private configureClusterService: ConfigureClusterService,\n         private stretchedClusterService: VsanStretchedClusterService,\n         private rdmaService: VsanRdmaService,\n         private csdService: CsdService) {\n   }\n\n   async ngOnInit(): Promise<void> {\n      this.vsanConfigSpec = this.config.cloneVsanConfigSpec();\n      this.originalDataAtRestEncryptionEnabled = this.vsanConfigSpec.enableDataAtRestEncryption;\n      this.originalSpaceEfficiency = this.vsanConfigSpec.spaceEfficiencyConfig;\n      this.originalAutoClaimDisksEnabled = this.vsanConfigSpec.autoClaimDisks;\n      // ensure RDMA is always disabled for Configure vSAN wizard\n      if (this.resetRdmaStatus) {\n         this.vsanConfigSpec.enableRdma = false;\n      }\n      // In Configure wizard assign the isVsanMaxEnabled value of vSanConfigSpec based on the isVsanMaxWorkflow property,\n      // because the vsanConfigSpec should not be changed before this step in the wizard.\n      this.vsanConfigSpec.isVsanMaxEnabled = this.vsanConfigSpec.isVsanMaxEnabled || this.isVsanMaxWorkflow;\n      this.vsanConfigSpecChange.emit(this.vsanConfigSpec);\n\n      this.vsanConfigSpec.kmipClusterId = this.preselectKmipCluster();\n      await this.queryData();\n      this.resizeModalIfNeeded();\n   }\n\n   @Loader()\n   private async queryData(): Promise<void> {\n      const promises: Promise<any>[] = [\n         this.stretchedClusterService.hasSharedWitnessHost(this.clusterRef),\n         this.csdService.isClusterClientOrServer(this.clusterRef),\n         this.configureClusterService.hasAnyDiskGroups(this.clusterRef),\n      ];\n\n      if (this.showRdmaSupportOption) {\n         promises.push(this.rdmaService.isRdmaHardwareSupported(this.clusterRef, null));\n      }\n\n      const result: any[] = await Promise.all(promises);\n      this.hasSharedWitnessHost = result[0];\n      this.isClusterClientOrServer = result[1];\n      this.hasAnyDiskGroups = result[2];\n      if (this.showRdmaSupportOption) {\n         this.hostHardwareSupportRdma = result[3];\n      }\n   }\n\n   updateSpec(form: any): void {\n      if (!this.vsanConfigSpec) {\n         return;\n      }\n      this.vsanConfigSpecChange.emit(this.vsanConfigSpec);\n   }\n\n   isComputeOnlyClusterSupported(): boolean {\n      return this.config?.clusterCapabilityData?.isComputeOnlySupported;\n   }\n\n   isComputeOnlyModeSelected(): boolean {\n      return this.vsanConfigSpec.clusterMode === ClusterMode.COMPUTE;\n   }\n\n   switchComputeOnlyClusterMode(): void {\n      if (!this.isComputeOnlyModeSelected()) {\n         this.vsanConfigSpec.clusterMode = ClusterMode.COMPUTE;\n         this.disableAllServices();\n      } else {\n         this.vsanConfigSpec.clusterMode = null;\n      }\n   }\n\n   switchVsanMaxMode(): void {\n      if (this.vsanConfigSpec.isVsanMaxEnabled) {\n         this.vsanConfigSpec.spaceEfficiencyConfig = SpaceEfficiencyConfig.NONE;\n      }\n   }\n\n   disableAllServices(): void {\n      // Autoclaim is always disabled (deprecated) if compute-only mode is supported\n      this.vsanConfigSpec.autoClaimDisks = false;\n      this.vsanConfigSpec.spaceEfficiencyConfig = SpaceEfficiencyConfig.NONE;\n      this.vsanConfigSpec.enableDataAtRestEncryption = false;\n      this.vsanConfigSpec.enableDataInTransitEncryption = false;\n      this.vsanConfigSpec.allowReducedRedundancy = false;\n      this.vsanConfigSpec.enableRdma = false;\n      this.vsanConfigSpec.advancedOptions.largeClusterSupportEnabled = false;\n      this.vsanConfigSpec.isVsanMaxEnabled = false;\n   }\n\n   isSpaceEfficiencySupported(): boolean {\n      return this.config &&\n            (this.config.isSpaceEfficiencySupported || this.config.clusterCapabilityData.isEncryptionSupported);\n   }\n\n   isDataInTransitDisabled(): boolean {\n      return !!this.getDitUnavailableMessage() || this.isComputeOnlyModeSelected();\n   }\n\n   isSpaceEfficiencyDisabled(): boolean {\n      return this.autoClaimDisksEnabled || this.isComputeOnlyModeSelected() || this.vsanConfigSpec.isVsanMaxEnabled;\n   }\n\n   isEncryptionDisabled(): boolean {\n      return this.autoClaimDisksEnabled || this.isComputeOnlyModeSelected();\n   }\n\n   get displayComputeOnlyOption(): boolean {\n      return this.isComputeOnlyClusterSupported() && this.showComputeOnlyOption;\n   }\n\n   get displayVsanMaxOption(): boolean {\n      return this.config?.clusterCapabilityData?.isVsanMaxSingleTierSupported && this.showVsanMaxOption;\n   }\n\n   get autoClaimDisksEnabled(): boolean {\n      return this.vsanConfigSpec.autoClaimDisks;\n   }\n\n   get wipeDiskDisabled(): boolean {\n      return this.vsanConfigSpec.autoClaimDisks || !this.vsanConfigSpec.enableDataAtRestEncryption;\n   }\n\n   preselectKmipCluster(): string {\n      if (this.vsanConfigSpec.kmipClusterId) {\n         return this.vsanConfigSpec.kmipClusterId;\n      }\n      // In case there is just one configured KMS cluster, return it as selected.\n      return this.config.availableKmipClusters && this.config.availableKmipClusters.length === 1 ?\n            this.config.availableKmipClusters[0] : null;\n   }\n\n   get isManualLargeClusterSettingSupported(): boolean {\n      // Show the toggle setting for large cluster support (more than 32 hosts) if it is NOT supported natively\n      return !this.config.clusterCapabilityData.isNativeLargeClusterSupported\n            && this.config.clusterCapabilityData.isAdvancedClusterOptionsSupported\n            && this.showLargeScaleClusterSupportOption;\n   }\n\n   get kmipClusterDisabled(): boolean {\n      return this.vsanConfigSpec.autoClaimDisks || !this.vsanConfigSpec.enableDataAtRestEncryption;\n   }\n\n   get allowReducedRedundancyDisabled(): boolean {\n      return this.vsanConfigSpec.autoClaimDisks || !this.isDfcRequiredSettingChanged;\n   }\n\n   get rdmaAlertMessage(): string {\n      return this.hostHardwareSupportRdma\n            ? VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.hostsHardwareRdmaRequirement\")\n            : VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupportedByAnyHostsHardware\");\n   }\n\n   /**\n    * Checks if Disk format change warning should be displayed.\n    */\n   get isDFCWarningVisible(): boolean {\n      return this.isDfcRequiredSettingChanged && this.hasAnyDiskGroups;\n   }\n\n   get dfcWarnings(): string[] {\n      const warnings: string[] = [\n         VsanUiUtils.getString(\"vsan.generalConfig.encryptionWarning\"),\n      ];\n\n      if (this.config.vcCapabilityData.isVsanHciMeshPolicySupported) {\n         warnings.push(VsanUiUtils.getString(\"vsan.generalConfig.hciMeshPolicy.warning\"));\n      }\n\n      return warnings;\n   }\n\n   getDitUnavailableMessage(): string {\n      return VsanDitUtil.getDitUnavailableMessage(this.vsanConfigSpec,\n            this.isClusterClientOrServer,\n            this.hasSharedWitnessHost,\n            this.config.clusterCapabilityData.isDitSharedWitnessInteroperabilitySupported);\n   }\n\n   getDitSignpostPosition(): string {\n      const SIGNPOST_WIDTH: number = 256;\n      const SIGNPOST_HEIGHT: number = 84;\n      return VsanSignpostUtil.getPosition(this.ditElementId, SIGNPOST_WIDTH, SIGNPOST_HEIGHT,\n            true);\n   }\n\n   private get isDfcRequiredSettingChanged(): boolean {\n      return this.originalDataAtRestEncryptionEnabled !== this.vsanConfigSpec.enableDataAtRestEncryption\n            || this.originalSpaceEfficiency !== this.vsanConfigSpec.spaceEfficiencyConfig;\n   }\n\n   dfcRequiredSettingsChanged(): void {\n      if (this.allowReducedRedundancyDisabled) {\n         this.vsanConfigSpec.allowReducedRedundancy = false;\n      }\n   }\n\n   updateRdmaState(): void {\n      if (this.showRdmaSupportOption && !this.canEnableRdma) {\n         this.vsanConfigSpec.enableRdma = false;\n      }\n   }\n\n   get canEnableRdma(): boolean {\n      return VsanRdmaUtil.canEnableRdma(this.hostHardwareSupportRdma,\n            this.vsanConfigSpec.advancedOptions.largeClusterSupportEnabled, this.configType,\n            this.config.clusterCapabilityData.isRdmaStretchedClusterSupported);\n   }\n\n   get rdmaDisabledMessage(): string {\n      return VsanRdmaUtil.getRdmaDisabledMessage(this.hostHardwareSupportRdma,\n            this.vsanConfigSpec.advancedOptions.largeClusterSupportEnabled, this.configType,\n            this.config.clusterCapabilityData.isRdmaStretchedClusterSupported);\n   }\n\n   /*\n      Resize modal based on settings count\n   */\n   private resizeModalIfNeeded(): void {\n      if (!this.config) {\n         return;\n      }\n\n      let additionalHeight: number = 0;\n      const sizePerNewSetting: number = 55;\n\n      if (this.displayComputeOnlyOption) {\n         additionalHeight += sizePerNewSetting * 2;\n      }\n\n      if (this.displayVsanMaxOption) {\n         additionalHeight += sizePerNewSetting;\n      }\n\n      if (this.showRdmaSupportOption) {\n         additionalHeight += sizePerNewSetting;\n      }\n\n      if (this.isManualLargeClusterSettingSupported) {\n         additionalHeight += sizePerNewSetting;\n      }\n\n      if (this.config.clusterCapabilityData.isDataInTransitEncryptionSupported) {\n         additionalHeight += sizePerNewSetting;\n      }\n\n      if (additionalHeight > 0) {\n         VsanUiUtils.setModalDialogHeight(this.predefinedHeight + additionalHeight);\n      }\n   }\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {GeneralSettingsComponent} from \"@component/general-settings/general-settings.component\";\nimport {VsanGeneralConfigService} from \"@component/general-settings/vsan-general-config.service\";\nimport {RekeyIntervalComponent} from \"@component/general-settings/utils/rekey-interval.component\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n      CommonDirectiveModule,\n   ],\n   declarations: [\n      GeneralSettingsComponent,\n      RekeyIntervalComponent,\n   ],\n   exports: [\n      GeneralSettingsComponent,\n   ],\n   providers: [\n      VsanGeneralConfigService,\n   ],\n})\nexport class GeneralSettingsModule {\n}\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanClusterType} from \"@generated/vsan-cluster-type\";\n\nexport class VsanRdmaUtil {\n\n   static canEnableRdma(hostHardwareSupportRdma: boolean, isLargeScaleSupportEnabled: boolean,\n         configType: VsanClusterType, isRdmaStretchedClusterSupported: boolean): boolean {\n      return hostHardwareSupportRdma && this.isClusterTypeSupported(configType, isRdmaStretchedClusterSupported)\n            && !isLargeScaleSupportEnabled;\n   }\n\n   static getRdmaDisabledMessage(hostHardwareSupportRdma: boolean, isLargeScaleSupportEnabled: boolean,\n         configType: VsanClusterType, isRdmaStretchedClusterSupported: boolean): string {\n      let errorMessage: string = !hostHardwareSupportRdma\n            ? VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupportedByAnyHostsHardware\")\n            : \"\";\n\n      if (!this.isClusterTypeSupported(configType, isRdmaStretchedClusterSupported)) {\n         errorMessage = errorMessage.concat(\" \",\n               VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupportedStretchedCluster\")).trim();\n      }\n\n      if (isLargeScaleSupportEnabled) {\n         errorMessage = errorMessage.concat(\" \",\n               VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupportedLargeScaleCluster\")).trim();\n      }\n\n      return errorMessage;\n   }\n\n   private static isClusterTypeSupported(configType: VsanClusterType,\n         isRdmaStretchedClusterSupported: boolean): boolean {\n      return !this.isStretchedOrTwoNodeCluster(configType) || isRdmaStretchedClusterSupported;\n   }\n\n   private static isStretchedOrTwoNodeCluster(configType: VsanClusterType): boolean {\n      return configType === VsanClusterType.STRETCHED_CLUSTER\n            || configType === VsanClusterType.TWO_HOST_VSAN_CLUSTER;\n   }\n}\n","<!--Copyright 2016-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<span *ngIf=\"loading\" class=\"spinner spinner-lg central-spinner\"></span>\n<form *ngIf=\"!loading\" (change)=\"updateSpec($event)\">\n\n   <!-- Compute-only cluster option -->\n   <div *ngIf=\"displayComputeOnlyOption\" class=\"card compute-only-card\">\n      <div class=\"clr-row\">\n         <clr-toggle-container class=\"clr-col-sm-4 centered-content\">\n            <clr-toggle-wrapper>\n               <input type=\"checkbox\"\n                      clrToggle\n                      id=\"compute-only-cluster-checkbox\"\n                      (change)=\"switchComputeOnlyClusterMode()\"\n                      name=\"compute-only-cluster-checkbox\"/>\n               <label for=\"compute-only-cluster-checkbox\">\n                  {{\"configureVsan.settings.computeOnly.label\" | localized}}\n               </label>\n            </clr-toggle-wrapper>\n         </clr-toggle-container>\n         <div class=\"clr-col-sm-8\">\n            {{\"configureVsan.settings.computeOnly.description\" | localized}}\n         </div>\n      </div>\n   </div>\n\n   <!-- vSAN Max -->\n   <div class=\"section\" *ngIf=\"displayVsanMaxOption\">\n      <!-- TODO (tnojarova): fit and finish for labels/headers and marketing content-->\n      <clr-toggle-container>\n         <clr-toggle-wrapper>\n            <input type=\"checkbox\"\n                   clrToggle\n                   id=\"vsan-max-cluster-checkbox\"\n                   [disabled]=\"isComputeOnlyModeSelected()\"\n                   [(ngModel)]=\"vsanConfigSpec.isVsanMaxEnabled\"\n                   (change)=\"switchVsanMaxMode()\"\n                   name=\"vsan-max-cluster-checkbox\"/>\n            <label for=\"vsan-max-cluster-checkbox\">\n               {{\"vsan.cluster.configure.wizard.advancedOptions.vsan.max.label\" | localized}}\n            </label>\n         </clr-toggle-wrapper>\n      </clr-toggle-container>\n   </div>\n\n   <!-- Disk claiming section -->\n   <div class=\"section\" *ngIf=\"originalAutoClaimDisksEnabled\">\n      <clr-select-container class=\"horizontal-layout label-auto-size\">\n         <label *ngIf=\"showTitles\" class=\"clr-col-sm-3\">\n            {{'vsan.generalConfig.diskClaimPolicy' | localized}}\n         </label>\n         <select id=\"vsanDiskClaimPolicy\"\n                 class=\"clr-col-sm-9\"\n                 clrSelect\n                 [disabled]=\"isComputeOnlyModeSelected()\"\n                 [(ngModel)]=\"vsanConfigSpec.autoClaimDisks\"\n                 name=\"diskClaimPolicy\"\n                 ngDefaultControl>\n            <option [ngValue]=\"false\" selected>{{'vsan.generalConfig.diskClaimPolicy.manual' | localized}}</option>\n            <option [ngValue]=\"true\">{{'vsan.generalConfig.diskClaimPolicy.auto' | localized}}</option>\n         </select>\n         <clr-control-helper *ngIf=\"showTitles\">\n            {{'vsan.generalConfig.diskClaimPolicy.subtitle' | localized}}\n         </clr-control-helper>\n      </clr-select-container>\n      <vsan-validation [alertType]=\"'warning'\"\n                       [allowClose]=\"false\"\n                       [isSmall]=\"true\"\n                       [alert]=\"'vsan.generalConfig.diskClaimPolicy.autoWarning' | localized\">\n      </vsan-validation>\n   </div>\n\n   <!-- Space Efficiency & Encryption section -->\n   <div class=\"section\" *ngIf=\"isSpaceEfficiencySupported()\">\n      <!-- Space Efficiency -->\n      <div *ngIf=\"config.isSpaceEfficiencySupported\"\n           role=\"group\"\n           aria-labelledby=\"space-efficiency-label\">\n         <div class=\"settings-container\">\n            <label class=\"clr-control-label\" id=\"space-efficiency-label\">\n               {{\"configureVsan.settings.spaceEfficiency.label\" | localized}}\n            </label>\n            <clr-signpost id=\"space-efficiency-strategy-help\"\n                          [vsan-signpost-title]=\"'configureVsan.settings.spaceEfficiency.signpost.label' | localized\">\n               <clr-signpost-content *clrIfOpen clrPosition=\"right-bottom\">\n                  <span *ngIf=\"vsanConfigSpec.isVsanMaxEnabled\">\n                     {{\"vsan.generalConfig.spaceConfig.disabled.vsanMaxInfo\" | localized}}\n                  </span>\n                  <ul *ngIf=\"config.clusterCapabilityData.isCompressionOnlySupported && !vsanConfigSpec.isVsanMaxEnabled\">\n                     <li>\n                        {{\"configureVsan.settings.spaceEfficiency.compressionLabel\" | localized}}:\n                        {{\"configureVsan.settings.spaceEfficiency.compressionDescription\" | localized}}\n                     </li>\n                     <li>\n                        {{\"configureVsan.settings.spaceEfficiency.dedupAndCompressionLabel\" | localized}}:\n                        {{\"configureVsan.settings.spaceEfficiency.dedupAndCompressionDescription\" | localized}}\n                     </li>\n                  </ul>\n                  <ng-container *ngIf=\"!config.clusterCapabilityData.isCompressionOnlySupported\">\n                     {{\"configureVsan.settings.spaceEfficiency.dedupAndCompressionDescription\" | localized}}\n                  </ng-container>\n               </clr-signpost-content>\n            </clr-signpost>\n         </div>\n         <clr-radio-container>\n            <clr-radio-wrapper>\n               <input type=\"radio\"\n                      clrRadio\n                      name=\"space-efficiency-none\"\n                      value=\"{{SpaceEfficiencyConfig.NONE}}\"\n                      [disabled]=\"isSpaceEfficiencyDisabled()\"\n                      [(ngModel)]=\"vsanConfigSpec.spaceEfficiencyConfig\"/>\n               <label>{{\"configureVsan.settings.spaceEfficiency.noneLabel\" | localized}}</label>\n            </clr-radio-wrapper>\n            <clr-radio-wrapper *ngIf=\"config.clusterCapabilityData.isCompressionOnlySupported\">\n               <input type=\"radio\"\n                      clrRadio\n                      name=\"space-efficiency-compression\"\n                      value=\"{{SpaceEfficiencyConfig.COMPRESSION}}\"\n                      [disabled]=\"isSpaceEfficiencyDisabled()\"\n                      [(ngModel)]=\"vsanConfigSpec.spaceEfficiencyConfig\"/>\n               <label>{{\"configureVsan.settings.spaceEfficiency.compressionLabel\" | localized}}</label>\n            </clr-radio-wrapper>\n            <clr-radio-wrapper *ngIf=\"config.clusterCapabilityData.isDeduplicationAndCompressionSupported\">\n               <input type=\"radio\"\n                      clrRadio\n                      name=\"space-efficiency-deduplication-and-compression\"\n                      value=\"{{SpaceEfficiencyConfig.DEDUPLICATION_AND_COMPRESSION}}\"\n                      [disabled]=\"isSpaceEfficiencyDisabled()\"\n                      [(ngModel)]=\"vsanConfigSpec.spaceEfficiencyConfig\"/>\n               <label> {{\"configureVsan.settings.spaceEfficiency.dedupAndCompressionLabel\" | localized}}</label>\n            </clr-radio-wrapper>\n         </clr-radio-container>\n      </div>\n\n      <div class=\"sub-section\">\n         <label class=\"clr-control-label\">{{\"configureVsan.settings.encryption.label\" | localized}}</label>\n         <!-- Data-at-rest encryption -->\n         <ng-container *ngIf=\"config.hasEncryptionPermissions && config.clusterCapabilityData.isEncryptionSupported\">\n            <div class=\"settings-container\">\n               <clr-toggle-container>\n                  <clr-toggle-wrapper>\n                     <input type=\"checkbox\"\n                            clrToggle\n                            id=\"data-at-rest-encryption-checkbox\"\n                            [(ngModel)]=\"vsanConfigSpec.enableDataAtRestEncryption\"\n                            (change)=\"dfcRequiredSettingsChanged()\"\n                            [disabled]=\"isEncryptionDisabled()\"\n                            name=\"data-at-rest-encryption\"/>\n                     <label for=\"data-at-rest-encryption-checkbox\">\n                        {{\"configureVsan.settings.dataAtRestEncryptionLabel\" | localized}}\n                     </label>\n                  </clr-toggle-wrapper>\n               </clr-toggle-container>\n               <clr-signpost id=\"data-at-rest-encryption-help\"\n                             [vsan-signpost-title]=\"'configureVsan.settings.dataAtRestEncryptionSignpostLabel' | localized\">\n                  <clr-signpost-content *clrIfOpen clrPosition=\"bottom-middle\">\n                     {{\"configureVsan.settings.dataAtRestEncryptionDescription\" | localized}}\n                  </clr-signpost-content>\n               </clr-signpost>\n            </div>\n            <!-- Data-at-rest encryption options -->\n            <div class=\"toggle-sub-options\"\n                 role=\"group\"\n                 aria-labelledby=\"data-at-rest-encryption-checkbox\">\n               <!-- Wipe Disk encryption option -->\n               <div class=\"settings-container\">\n                  <clr-checkbox-container>\n                     <clr-checkbox-wrapper class=\"checkbox\">\n                        <input type=\"checkbox\"\n                               clrCheckbox\n                               id=\"wipeDiskCheckBox\"\n                               [(ngModel)]=\"vsanConfigSpec.eraseDisksBeforeUse\"\n                               [disabled]=\"wipeDiskDisabled\"\n                               name=\"wipeDisk\"/>\n                        <label for=\"wipeDiskCheckBox\">\n                           {{\"configureVsan.settings.wipeDisk\" | localized}}\n                        </label>\n                     </clr-checkbox-wrapper>\n                  </clr-checkbox-container>\n                  <clr-signpost id=\"wipe-disk-help\"\n                                [vsan-signpost-title]=\"'configureVsan.settings.wipeDiskSignpostLabel' | localized\">\n                     <clr-signpost-content *clrIfOpen clrPosition=\"bottom-middle\">\n                        <div>{{\"configureVsan.settings.wipeDiskDescription\" | localized}}</div>\n                     </clr-signpost-content>\n                  </clr-signpost>\n               </div>\n               <!-- KMIP Cluster encryption option -->\n               <clr-select-container class=\"horizontal-layout\">\n                  <label for=\"kmipClusters\">\n                     {{'vsan.generalConfig.encryption.keyCluster' | localized}}\n                  </label>\n                  <select id=\"kmipClusters\"\n                          clrSelect\n                          [(ngModel)]=\"vsanConfigSpec.kmipClusterId\"\n                          [disabled]=\"kmipClusterDisabled\"\n                          name=\"kmipCluster\">\n                     <option *ngFor=\"let kmip of config.availableKmipClusters\"\n                             value=\"{{kmip}}\"\n                             [selected]=\"kmip == vsanConfigSpec.kmipClusterId\">\n                        {{kmip}}\n                     </option>\n                  </select>\n               </clr-select-container>\n            </div>\n         </ng-container>\n\n         <!-- Data-in-transit encryption-->\n         <ng-container *ngIf=\"config.hasDataInTransitEncryptionPermissions\n               && config.clusterCapabilityData.isDataInTransitEncryptionSupported\">\n            <div class=\"settings-container\">\n               <clr-toggle-wrapper>\n                  <input type=\"checkbox\"\n                         clrToggle\n                         id=\"data-in-transit-encryption-checkbox\"\n                         [(ngModel)]=\"vsanConfigSpec.enableDataInTransitEncryption\"\n                         [disabled]=\"isDataInTransitDisabled()\"\n                         name=\"data-in-transit-encryption\"/>\n                  <label for=\"data-in-transit-encryption-checkbox\">\n                     {{\"configureVsan.settings.dataInTransitEncryptionLabel\" | localized}}\n                  </label>\n               </clr-toggle-wrapper>\n               <clr-signpost\n                     id=\"{{ditElementId}}\"\n                     [vsan-signpost-title]=\"'configureVsan.settings.dataInTransitEncryptionSignpostLabel' | localized\">\n                  <clr-signpost-content *clrIfOpen clrPosition=\"{{getDitSignpostPosition()}}\">\n                     <div *ngIf=\"getDitUnavailableMessage()\">{{getDitUnavailableMessage()}}</div>\n                     <div>{{\"configureVsan.settings.dataInTransitDescription\" | localized}}</div>\n                     <div *ngIf=\"showFileServiceOweDescription\">\n                        {{\"configureVsan.settings.fileService.owe.description\" | localized}}\n                     </div>\n                  </clr-signpost-content>\n               </clr-signpost>\n            </div>\n            <vsan-dit-rekey-interval\n                  class=\"toggle-sub-options\"\n                  [isDataInTransitEncryptionEnabled]=\"vsanConfigSpec.enableDataInTransitEncryption\"\n                  [(rekeyInterval)]=\"vsanConfigSpec.rekeyInterval\">\n            </vsan-dit-rekey-interval>\n         </ng-container>\n      </div>\n\n      <vsan-validation *ngIf=\"isDFCWarningVisible\"\n                       [alertType]=\"'warning'\"\n                       [allowClose]=\"false\"\n                       [isSmall]=\"true\"\n                       [alertsExpanded]=\"true\"\n                       [allowExpandCollapse]=\"false\"\n                       [alerts]=\"dfcWarnings\">\n      </vsan-validation>\n\n      <!-- Allow reduced redundancy checkbox -->\n      <div *ngIf=\"showAllowReducedRedundancyOption\">\n         <label class=\"clr-control-label\">{{\"configureVsan.settings.dataFormatOptions.label\" | localized}}</label>\n         <div class=\"settings-container\">\n            <clr-checkbox-container>\n               <clr-checkbox-wrapper>\n                  <input type=\"checkbox\"\n                         clrCheckbox\n                         id=\"allowReducedRedundancyCheckBox\"\n                         [(ngModel)]=\"vsanConfigSpec.allowReducedRedundancy\"\n                         [disabled]=\"allowReducedRedundancyDisabled || isComputeOnlyModeSelected()\"\n                         name=\"allowReducedRedundancy\"/>\n                  <label for=\"allowReducedRedundancyCheckBox\">\n                     {{\"configureVsan.settings.allowReducedRedundancyCheckboxLabel\" | localized}}\n                  </label>\n               </clr-checkbox-wrapper>\n            </clr-checkbox-container>\n            <clr-signpost id=\"allow-redundancy-help\"\n                          [vsan-signpost-title]=\"'configureVsan.settings.allowReducedRedundancySignpostLabel' | localized\">\n               <clr-signpost-content *clrIfOpen clrPosition=\"top-middle\">\n                  <div>{{\"configureVsan.settings.allowReducedRedundancyDescription\" | localized}}</div>\n               </clr-signpost-content>\n            </clr-signpost>\n         </div>\n      </div>\n   </div>\n\n   <!-- Large scale cluster support option -->\n   <!-- Show toggle setting for large cluster support (more than 32 hosts) if it is NOT supported natively -->\n   <div class=\"settings-container\" *ngIf=\"isManualLargeClusterSettingSupported\">\n      <clr-toggle-container>\n         <clr-toggle-wrapper>\n            <input type=\"checkbox\"\n                   clrToggle\n                   id=\"largeScaleClusterSupportCheckbox\"\n                   [disabled]=\"isComputeOnlyModeSelected()\"\n                   [(ngModel)]=\"vsanConfigSpec.advancedOptions.largeClusterSupportEnabled\"\n                   (change)=\"updateRdmaState()\"\n                   name=\"largeScaleClusterSupport\"/>\n            <label for=\"largeScaleClusterSupportCheckbox\">\n               {{\"configureVsan.settings.largeScaleClusterSupport.label\" | localized}}\n            </label>\n         </clr-toggle-wrapper>\n      </clr-toggle-container>\n      <clr-signpost id=\"large-scale-cluster-support-help\"\n                    [vsan-signpost-title]=\"'configureVsan.settings.largeScaleClusterSupport.signpost.label' | localized\">\n         <clr-signpost-content *clrIfOpen clrPosition=\"top-middle\">\n            <div>{{\"configureVsan.settings.largeScaleClusterSupport.signpostText\" | localized}}</div>\n         </clr-signpost-content>\n      </clr-signpost>\n   </div>\n\n   <!-- RDMA support option -->\n   <div class=\"settings-container\" *ngIf=\"showRdmaSupportOption\">\n      <clr-toggle-wrapper>\n         <input type=\"checkbox\"\n                clrToggle\n                id=\"rdma-support-checkbox\"\n                [disabled]=\"isComputeOnlyModeSelected() || !canEnableRdma\"\n                [(ngModel)]=\"vsanConfigSpec.enableRdma\"\n                name=\"rdma-support-checkbox\"/>\n         <label for=\"rdma-support-checkbox\">{{\"vsan.services.network.rdmaSupport.label\" | localized}}</label>\n      </clr-toggle-wrapper>\n      <clr-signpost id=\"rdma-support-help\"\n                    [vsan-signpost-title]=\"'vsan.services.network.rdmaSupport.signpost.label' | localized\">\n         <clr-signpost-content *clrIfOpen clrPosition=\"top-right\">\n            <div *ngIf=\"!canEnableRdma\" id=\"rdma-disabled-message\">{{rdmaDisabledMessage}}</div>\n            <div>{{\"vsan.services.network.rdmaSupport.signpost\" | localized}}</div>\n         </clr-signpost-content>\n      </clr-signpost>\n   </div>\n</form>\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanConfigSpec} from \"@generated/vsan-config-spec\";\n\nexport class VsanDitUtil {\n   static readonly DEFAULT_DIT_REKEY_INTERVAL: number = 24 * 60;\n\n   static getDitUnavailableMessage(vsanConfigSpec: VsanConfigSpec,\n         isClusterClientOrServer: boolean,\n         hasSharedWitnessHost: boolean,\n         isDitSharedWitnessInteroperabilitySupported: boolean): string {\n\n      if (vsanConfigSpec.autoClaimDisks) {\n         return VsanUiUtils.getString(\"vsan.dataInTransitEncryption.unavailable.autoClaimDisks\");\n      }\n\n      if (isClusterClientOrServer) {\n         return VsanUiUtils.getString(\"vsan.dataInTransitEncryption.unavailable.isServerOrClient\");\n      }\n\n      if (hasSharedWitnessHost && !isDitSharedWitnessInteroperabilitySupported) {\n         return VsanUiUtils.getString(\"vsan.dataInTransitEncryption.unavailable.hasSharedWitness\");\n      }\n\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ManagedObject} from \"@service/managed-object\";\nimport {TaskStatus} from \"@service/task-monitor-service\";\n\n/**\n * Holds info for a status change initiated by the current user on the vSAN cluster.\n * This data is stored in the Browser local storage, check <code>VsanStatusService</code>\n * and is accessible across iframes.\n */\nexport class VsanStatusChangeData {\n\n   /**\n    * A cluster managed object reference associated with this status change\n    */\n   clusterRef: ManagedObject;\n\n   /**\n    * A task moref, that is changing the status of the vSAN cluster.\n    */\n   taskRef: ManagedObject;\n\n   /**\n    * Enum value, holding information about what status change is happening with the vSAN cluster exactly.\n    */\n   changeType: StatusChangeType;\n\n   /**\n    * Upon completion of the task will hold either SUCCESS or ERROR, which could be used by subscribers.\n    */\n   taskStatus: TaskStatus;\n\n   constructor(taskRef: ManagedObject, status: StatusChangeType,\n         clusterRef: ManagedObject = ManagedObject.contextObject) {\n      this.taskRef = taskRef;\n      this.changeType = status;\n      this.clusterRef = clusterRef;\n   }\n}\n\n/**\n * Enum with codes, used to differentiate different vSAN configuration events like\n * vSAN enabled, cluster shutdown, etc.\n */\nexport enum StatusChangeType {\n   /**\n    * A cluster has had the vSAN service enabled.\n    */\n   VSAN_SERVICE_ENABLED,\n   /**\n    * A cluster has had the vSAN service disabled.\n    */\n   VSAN_SERVICE_DISABLED,\n   /**\n    * A vSAN cluster has been powered on.\n    */\n   VSAN_CLUSTER_POWER_ON,\n   /**\n    * A vSAN cluster has been shut down.\n    */\n   VSAN_CLUSTER_POWER_OFF,\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\n/*\n   Names to use in the Loader decorator\n */\nexport enum LoaderName {\n   ON_INIT = \"on-init\",\n   ON_CONFIRM = \"on-confirm\",\n   PERFORM_CHANGE = \"perform-change\",\n   REGISTER = \"register\",\n   UPGRADE = \"upgrade\",\n   MONITOR = \"monitor\",\n   DATA_EVACUATION = \"data-evacuation\",\n}\n","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nexport class VsanSignpostUtil {\n   // The signpost's arrow is 12px in Clarity 2.2.0\n   private static readonly ARROW_SIZE: number = 12;\n   // The modal left or right padding is 24px.\n   private static readonly MODAL_HORIZONTAL_PADDING: number = 24;\n   // The modal top padding and title height or the bottom padding and footer height is 72px.\n   private static readonly MODAL_VERTICAL_PADDING: number = 72;\n\n   private static readonly TOP: string = \"top\";\n   private static readonly LEFT: string = \"left\";\n   private static readonly RIGHT: string = \"right\";\n   private static readonly BOTTOM: string = \"bottom\";\n   private static readonly MIDDLE: string = \"middle\";\n\n   static getPosition(elementId: string, signpostWidth: number, signpostHeight: number,\n         isInModal: boolean = false): string {\n      const elementBox: DOMRect = document.getElementById(elementId).getBoundingClientRect();\n      const modalVerticalPadding: number = isInModal\n            ? VsanSignpostUtil.MODAL_VERTICAL_PADDING\n            : 0;\n      const verticalPosition: string = VsanSignpostUtil.getVerticalPosition(\n            elementBox, signpostHeight + VsanSignpostUtil.ARROW_SIZE + modalVerticalPadding);\n      const modalHorizontalPadding: number = isInModal\n            ? VsanSignpostUtil.MODAL_HORIZONTAL_PADDING\n            : 0;\n      const horizontalPosition: string = VsanSignpostUtil.getHorizontalPosition(\n            elementBox, signpostWidth + VsanSignpostUtil.ARROW_SIZE + modalHorizontalPadding);\n      return `${verticalPosition}-${horizontalPosition}`;\n   }\n\n   private static getVerticalPosition(elementBox: ClientRect, elementHeight: number): string {\n      const bodyBox: DOMRect = document.body.getBoundingClientRect();\n      if (elementBox.bottom + elementHeight < bodyBox.height) {\n         // There is enough space to fit the signpost below the trigger\n         return VsanSignpostUtil.BOTTOM;\n      } else if (elementBox.top - elementHeight > 0) {\n         return VsanSignpostUtil.TOP;\n      } else {\n         return VsanSignpostUtil.MIDDLE;\n      }\n   }\n\n   private static getHorizontalPosition(elementBox: ClientRect, elementWidth: number): string {\n      const bodyBox: DOMRect = document.body.getBoundingClientRect();\n      if (elementBox.right + elementWidth < bodyBox.width) {\n         // There is enough space to fit the signpost on the right side of the view\n         return VsanSignpostUtil.RIGHT;\n      } else if (elementBox.left - elementWidth > 0) {\n         return VsanSignpostUtil.LEFT;\n      } else {\n         return VsanSignpostUtil.MIDDLE;\n      }\n   }\n}"],"sourceRoot":"webpack:///"}