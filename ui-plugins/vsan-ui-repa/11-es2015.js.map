{"version":3,"sources":["./src/app/vsan/common/util/vsan-health-util.ts"],"names":[],"mappings":"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","file":"11-es2015.js","sourcesContent":["/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ColumnType} from \"@generated/column-type\";\nimport {ObjectHealthComplianceState} from \"@generated/object-health-compliance-state\";\nimport {ObjectHealthIncomplianceReason} from \"@generated/object-health-incompliance-reason\";\nimport {ObjectHealthPolicyState} from \"@generated/object-health-policy-state\";\nimport {ObjectHealthRebuildState} from \"@generated/object-health-rebuild-state\";\nimport {PspObjectHealthState} from \"@generated/psp-object-health-state\";\nimport {VsanHealthInfo} from \"@generated/vsan-health-info\";\nimport {VsanHealthStatus} from \"@generated/vsan-health-status\";\nimport {VsanObjectHealthState} from \"@generated/vsan-object-health-state\";\nimport {VsanTestCell} from \"@generated/vsan-test-cell\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Icon} from \"@util/icon\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * vSAN health utilities.\n */\nexport class VsanHealthUtil {\n   static readonly CEIP_TEST_ID: string = \"com.vmware.vsan.health.test.vsancloudhealthceipexception\";\n   static readonly SUPPORT_INSIGHT_TEST_ID: string = \"com.vmware.vsan.health.test.vsanenablesupportinsight\";\n\n   private static readonly HEALTH_STATES_DANGER_ORDER: BaseHealthState[] = [\n      ObjectHealthComplianceState.INACCESSIBLE_V2,\n      ObjectHealthIncomplianceReason.REDUCED_AVAILABILITY_WITHOUT_DURABILITY, ObjectHealthRebuildState.NONE,\n      ObjectHealthRebuildState.PAUSE, ObjectHealthPolicyState.FAILED,\n      VsanObjectHealthState.INACCESSIBLE, VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_NO_REBUILD,\n      VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_NO_REBUILD_DELAY_TIMER,\n      VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_POLICY_PENDING_FAILED,\n   ];\n   private static readonly HEALTH_STATES_WARNING_ORDER: BaseHealthState[] = [\n      ObjectHealthIncomplianceReason.REDUCED_AVAILABILITY_WITH_DURABILITY, ObjectHealthIncomplianceReason.OTHER,\n      ObjectHealthPolicyState.PENDING, VsanObjectHealthState.DATA_MOVE,\n      VsanObjectHealthState.NON_AVAILABILITY_RELATED_RECONFIG,\n      VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE,\n      VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_ACTIVE_REBUILD,\n      VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_POLICY_PENDING,\n      VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_POLICY_PENDING,\n      VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_POLICY_PENDING_FAILED,\n      VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_PAUSED_REBUILD,\n      VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_PAUSED_REBUILD,\n      VsanObjectHealthState.UNKNOWN, ObjectHealthComplianceState.COMPLIANCE_UNKNOWN,\n      ObjectHealthIncomplianceReason.INCOMPLIANCE_UNKNOWN, ObjectHealthRebuildState.REBUILD_UNKNOWN,\n      ObjectHealthPolicyState.POLICY_UNKNOWN,\n   ];\n   private static readonly HEALTH_STATES_SUCCESS_ORDER: BaseHealthState[] = [\n      ObjectHealthComplianceState.REMOTE_ACCESSIBLE_V2,\n      ObjectHealthComplianceState.COMPLIANT, ObjectHealthRebuildState.SCHEDULED, ObjectHealthRebuildState.ACTIVE,\n      VsanObjectHealthState.HEALTHY, VsanObjectHealthState.REMOTE_ACCESSIBLE,\n   ];\n\n   static readonly HEALTH_STATES_ORDER: BaseHealthState[] =\n         VsanHealthUtil.HEALTH_STATES_DANGER_ORDER\n               .concat(VsanHealthUtil.HEALTH_STATES_WARNING_ORDER)\n               .concat(VsanHealthUtil.HEALTH_STATES_SUCCESS_ORDER);\n\n   // health state label classes\n   static readonly CLR_SUCCESS_LABEL_CLASS: string = \"label-success\";\n   static readonly CLR_WARNING_LABEL_CLASS: string = \"label-warning\";\n   static readonly CLR_DANGER_LABEL_CLASS: string = \"label-danger\";\n\n   private static readonly INSTANCE_MONTH_FORMAT: string = \"short\";\n   private static readonly INSTANCE_DAY_FORMAT: string = \"numeric\";\n   private static readonly INSTANCE_TIMESTAMP_OPTIONS: Intl.DateTimeFormatOptions = {\n      month: VsanHealthUtil.INSTANCE_MONTH_FORMAT,\n      day: VsanHealthUtil.INSTANCE_DAY_FORMAT,\n      hour: VsanDateTimeUtils.DEFAULT_HOUR_FORMAT,\n      minute: VsanDateTimeUtils.DEFAULT_MINUTE_FORMAT,\n      second: VsanDateTimeUtils.DEFAULT_SECOND_FORMAT,\n   };\n   private static readonly INSTANCE_TITLE_TIMESTAMP_OPTIONS: Intl.DateTimeFormatOptions = {\n      month: VsanHealthUtil.INSTANCE_MONTH_FORMAT,\n      day: VsanHealthUtil.INSTANCE_DAY_FORMAT,\n      hour: VsanDateTimeUtils.DEFAULT_HOUR_FORMAT,\n      minute: VsanDateTimeUtils.DEFAULT_MINUTE_FORMAT,\n   };\n\n   static getVsanHealthStatusIconClass(status: VsanHealthStatus): string {\n      switch (status) {\n         case VsanHealthStatus.red:\n            return Icon.CLR_ERROR_ICON_CLASS;\n         case VsanHealthStatus.green:\n            return Icon.CLR_SUCCESS_ICON_CLASS;\n         case VsanHealthStatus.info:\n            return Icon.CLR_INFO_ICON_CLASS;\n         case VsanHealthStatus.yellow:\n            return Icon.CLR_WARN_ICON_CLASS;\n         case VsanHealthStatus.skipped:\n            return Icon.SILENT_CHECK;\n         case VsanHealthStatus.unknown:\n         default:\n            return \"\";\n      }\n   }\n\n   static getVsanHealthStatusIconShape(status: VsanHealthStatus): string {\n      switch (status) {\n         case VsanHealthStatus.red:\n            return Icon.CLR_ERROR_STANDARD_ICON_SHAPE;\n         case VsanHealthStatus.green:\n            return Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE;\n         case VsanHealthStatus.info:\n            return Icon.CLR_INFO_STANDARD_ICON_SHAPE;\n         case VsanHealthStatus.yellow:\n            return Icon.CLR_WARN_STANDARD_ICON_SHAPE;\n         case VsanHealthStatus.skipped:\n            return Icon.SILENT_CHECK;\n         case VsanHealthStatus.unknown:\n            return Icon.CLR_HELP;\n         default:\n            return Icon.CLR_CIRCLE_ICON_SHAPE;\n      }\n   }\n\n   static getVsanHealthStatusBackgroundClass(status: VsanHealthStatus): string {\n      switch (status) {\n         case VsanHealthStatus.red:\n            return \"alert-danger\";\n         case VsanHealthStatus.green:\n            return \"alert-success\";\n         case VsanHealthStatus.yellow:\n            return \"alert-warning\";\n         case VsanHealthStatus.info:\n         case VsanHealthStatus.skipped:\n            return \"alert-info\";\n         case VsanHealthStatus.unknown:\n         default:\n            return \"\";\n      }\n   }\n\n   /** Returns verbose health status */\n   static getVsanHealthStatusText(status: VsanHealthStatus): string {\n      switch (status) {\n         case VsanHealthStatus.red:\n            return VsanUiUtils.getString(\"vsan.health.historical.details.status.error\");\n         case VsanHealthStatus.green:\n            return VsanUiUtils.getString(\"vsan.health.historical.details.status.success\");\n         case VsanHealthStatus.info:\n            return VsanUiUtils.getString(\"vsan.health.historical.details.status.info\");\n         case VsanHealthStatus.yellow:\n            return VsanUiUtils.getString(\"vsan.health.historical.details.status.warning\");\n         case VsanHealthStatus.skipped:\n            return VsanUiUtils.getString(\"vsan.health.historical.details.status.skipped\");\n         case VsanHealthStatus.unknown:\n            return VsanUiUtils.getString(\"vsan.health.historical.details.status.unknown\");\n         default:\n            return \"\";\n      }\n   }\n\n   static getVsanObjectHealthStatusIconClass(status: VsanObjectHealthState | string): string {\n      switch (status) {\n         case VsanObjectHealthState.HEALTHY:\n         case VsanObjectHealthState.REMOTE_ACCESSIBLE:\n            return Icon.CLR_SUCCESS_ICON_CLASS;\n         case VsanObjectHealthState.DATA_MOVE:\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_RECONFIG:\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_ACTIVE_REBUILD:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_POLICY_PENDING:\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_POLICY_PENDING:\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_POLICY_PENDING_FAILED:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_PAUSED_REBUILD:\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_PAUSED_REBUILD:\n         case VsanObjectHealthState.UNKNOWN:\n            return Icon.CLR_WARN_ICON_CLASS;\n         case VsanObjectHealthState.INACCESSIBLE:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_NO_REBUILD:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_NO_REBUILD_DELAY_TIMER:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_POLICY_PENDING_FAILED:\n            return Icon.CLR_ERROR_ICON_CLASS;\n         default:\n            return Icon.CLR_WARN_ICON_CLASS;\n      }\n   }\n\n   static getPspObjectHealthStatusText(status: PspObjectHealthState): string {\n      switch (status) {\n         case PspObjectHealthState.HEALTHY:\n            return VsanUiUtils.getString(\"vsan.pspObjectHealth.healthy\");\n         case PspObjectHealthState.REDUCED_AVAILABILITY:\n            return VsanUiUtils.getString(\"vsan.pspObjectHealth.reducedavailability\");\n         case PspObjectHealthState.REBUILD:\n            return VsanUiUtils.getString(\"vsan.pspObjectHealth.rebuild\");\n         case PspObjectHealthState.INACCESSIBLE:\n            return VsanUiUtils.getString(\"vsan.pspObjectHealth.inaccessible\");\n         default:\n            return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n   }\n\n   static getVsanObjectHealthStatusText(status: BaseHealthState | string): string {\n      switch (status) {\n         case VsanObjectHealthState.HEALTHY:\n            return VsanUiUtils.getString(\"vsan.objectHealth.healthy\");\n         case VsanObjectHealthState.DATA_MOVE:\n            return VsanUiUtils.getString(\"vsan.objectHealth.datamove\");\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_RECONFIG:\n            return VsanUiUtils.getString(\"vsan.objectHealth.nonavailabilityrelatedreconfig\");\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE:\n            return VsanUiUtils.getString(\"vsan.objectHealth.nonavailabilityrelatedincompliance\");\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_ACTIVE_REBUILD:\n            return VsanUiUtils.getString(\"vsan.objectHealth.reducedavailabilitywithactiverebuild\");\n         case VsanObjectHealthState.INACCESSIBLE:\n            return VsanUiUtils.getString(\"vsan.objectHealth.inaccessible\");\n         case VsanObjectHealthState.REMOTE_ACCESSIBLE:\n            return VsanUiUtils.getString(\"vsan.objectHealth.remoteAccessible\");\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_NO_REBUILD:\n            return VsanUiUtils.getString(\"vsan.objectHealth.reducedavailabilitywithnorebuild\");\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_NO_REBUILD_DELAY_TIMER:\n            return VsanUiUtils.getString(\"vsan.objectHealth.reducedavailabilitywithnorebuilddelaytimer\");\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_POLICY_PENDING:\n            return VsanUiUtils.getString(\"vsan.objectHealth.reducedavailabilitywithpolicypending\");\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_POLICY_PENDING_FAILED:\n            return VsanUiUtils.getString(\"vsan.objectHealth.reducedavailabilitywithpolicypendingfailed\");\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_POLICY_PENDING:\n            return VsanUiUtils.getString(\"vsan.objectHealth.nonavailabilityrelatedincompliancewithpolicypending\");\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_POLICY_PENDING_FAILED:\n            return VsanUiUtils.getString(\"vsan.objectHealth.nonavailabilityrelatedincompliancewithpolicypendingfailed\");\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_PAUSED_REBUILD:\n            return VsanUiUtils.getString(\"vsan.objectHealth.nonavailabilityrelatedincompliancewithpausedrebuild\");\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_PAUSED_REBUILD:\n            return VsanUiUtils.getString(\"vsan.objectHealth.reducedavailabilitywithpausedrebuild\");\n         case VsanObjectHealthState.UNKNOWN:\n            return VsanUiUtils.getString(\"vsan.objectHealth.unknown\");\n         case ObjectHealthComplianceState.COMPLIANT:\n            return VsanUiUtils.getString(\"vsan.objectHealth.compliancestate.compliant\");\n         case ObjectHealthComplianceState.INACCESSIBLE_V2:\n            return VsanUiUtils.getString(\"vsan.objectHealth.compliancestate.inaccessible\");\n         case ObjectHealthComplianceState.REMOTE_ACCESSIBLE_V2:\n            return VsanUiUtils.getString(\"vsan.objectHealth.remoteAccessible\");\n         case ObjectHealthIncomplianceReason.REDUCED_AVAILABILITY_WITH_DURABILITY:\n            return VsanUiUtils.getString(\"vsan.objectHealth.incompliancereason.reducedwithdurability\");\n         case ObjectHealthIncomplianceReason.REDUCED_AVAILABILITY_WITHOUT_DURABILITY:\n            return VsanUiUtils.getString(\"vsan.objectHealth.incompliancereason.reducedwithoutdurability\");\n         case ObjectHealthIncomplianceReason.OTHER:\n            return VsanUiUtils.getString(\"vsan.objectHealth.incompliancereason.other\");\n         case ObjectHealthRebuildState.ACTIVE:\n            return VsanUiUtils.getString(\"vsan.objectHealth.rebuildstate.active\");\n         case ObjectHealthRebuildState.NONE:\n            return VsanUiUtils.getString(\"vsan.objectHealth.rebuildstate.none\");\n         case ObjectHealthRebuildState.PAUSE:\n            return VsanUiUtils.getString(\"vsan.objectHealth.rebuildstate.pause\");\n         case ObjectHealthRebuildState.SCHEDULED:\n            return VsanUiUtils.getString(\"vsan.objectHealth.rebuildstate.scheduled\");\n         case ObjectHealthPolicyState.FAILED:\n            return VsanUiUtils.getString(\"vsan.objectHealth.policystate.failed\");\n         case ObjectHealthPolicyState.PENDING:\n            return VsanUiUtils.getString(\"vsan.objectHealth.policystate.pending\");\n         default:\n            return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n   }\n\n   static getVsanObjectHealthStatusIconShape(status: VsanObjectHealthState | string): string {\n      switch (status) {\n         case VsanObjectHealthState.HEALTHY:\n         case VsanObjectHealthState.REMOTE_ACCESSIBLE:\n            return Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE;\n         case VsanObjectHealthState.DATA_MOVE:\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_RECONFIG:\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_ACTIVE_REBUILD:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_POLICY_PENDING:\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_POLICY_PENDING:\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_POLICY_PENDING_FAILED:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_PAUSED_REBUILD:\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_PAUSED_REBUILD:\n         case VsanObjectHealthState.UNKNOWN:\n            return Icon.CLR_WARN_STANDARD_ICON_SHAPE;\n         case VsanObjectHealthState.INACCESSIBLE:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_NO_REBUILD:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_NO_REBUILD_DELAY_TIMER:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_POLICY_PENDING_FAILED:\n            return Icon.CLR_ERROR_STANDARD_ICON_SHAPE;\n         default:\n            return Icon.CLR_CIRCLE_ICON_SHAPE;\n      }\n   }\n\n   static isDangerHealthState(state: BaseHealthState): boolean {\n      return VsanHealthUtil.HEALTH_STATES_DANGER_ORDER.indexOf(state) > -1;\n   }\n\n   static isWarningHealthState(state: BaseHealthState): boolean {\n      return VsanHealthUtil.HEALTH_STATES_WARNING_ORDER.indexOf(state) > -1;\n   }\n\n   static isSuccessHealthState(state: BaseHealthState): boolean {\n      return VsanHealthUtil.HEALTH_STATES_SUCCESS_ORDER.indexOf(state) > -1;\n   }\n\n   static getHealthStateLabelClass(status: BaseHealthState): string {\n      if (VsanHealthUtil.isDangerHealthState(status)) {\n         return VsanHealthUtil.CLR_DANGER_LABEL_CLASS;\n      }\n      if (VsanHealthUtil.isWarningHealthState(status)) {\n         return VsanHealthUtil.CLR_WARNING_LABEL_CLASS;\n      }\n      if (VsanHealthUtil.isSuccessHealthState(status)) {\n         return VsanHealthUtil.CLR_SUCCESS_LABEL_CLASS;\n      }\n      return VsanHealthUtil.CLR_DANGER_LABEL_CLASS;\n   }\n\n   static getPspHealthStateLabelClass(status: PspObjectHealthState): string {\n      if (status === PspObjectHealthState.INACCESSIBLE || status === PspObjectHealthState.UNKNOWN) {\n         return VsanHealthUtil.CLR_DANGER_LABEL_CLASS;\n      }\n      if (status === PspObjectHealthState.REBUILD || status === PspObjectHealthState.REDUCED_AVAILABILITY) {\n         return VsanHealthUtil.CLR_WARNING_LABEL_CLASS;\n      }\n      if (status === PspObjectHealthState.HEALTHY) {\n         return VsanHealthUtil.CLR_SUCCESS_LABEL_CLASS;\n      }\n      return VsanHealthUtil.CLR_DANGER_LABEL_CLASS;\n   }\n\n   static isTextCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && (cell.cellType === ColumnType.string\n            || cell.cellType === ColumnType.vsanObjectUuid);\n   }\n\n   static isNumericCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && (cell.cellType === ColumnType.Float\n            || cell.cellType === ColumnType.Long);\n   }\n\n   static isStatusCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && (cell.cellType === ColumnType.vsanObjectHealth);\n   }\n\n   static isPspHealthStateCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && (cell.cellType === ColumnType.pspHealth);\n   }\n\n   static isHealthV2StateCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && (cell.cellType === ColumnType.vsanObjectHealthv2);\n   }\n\n   static isMorCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && (cell.cellType === ColumnType.mor ||\n            cell.cellType === ColumnType.HostReference ||\n            cell.cellType === ColumnType.dynamic ||\n            cell.cellType === ColumnType.listMor);\n   }\n\n   static isPrimitiveListCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && (cell.cellType === ColumnType.listFloat ||\n            cell.cellType === ColumnType.listLong ||\n            cell.cellType === ColumnType.listString);\n   }\n\n   static isLinkCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && cell.cellType === ColumnType.strWithLink;\n   }\n\n   static isDateCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && cell.cellType === ColumnType.date;\n   }\n\n   static isHealthStatusCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && (cell.cellType === ColumnType.health);\n   }\n\n   static isHealthInfoCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && cell.cellType === ColumnType.healthWithString;\n   }\n\n   static formatedNumber(value: string, type: ColumnType): string {\n      if (ColumnType.Float === type) {\n         const precisionDigits: string = value.split(\".\")[1];\n         // Format the number with minimum 2 digits precision\n         return VsanUiUtils.localizeNumber(value,\n               (precisionDigits && precisionDigits.length > 2)\n                     ? precisionDigits.length\n                     : 2);\n      }\n      return VsanUiUtils.localizeNumber(value);\n   }\n\n   static getStatusLabel(cell: VsanTestCell): string {\n      return VsanHealthUtil.getVsanObjectHealthStatusText(cell.cellValue);\n   }\n\n   static getStatusShape(cell: VsanTestCell): string {\n      return VsanHealthUtil.getVsanObjectHealthStatusIconShape(cell.cellValue);\n   }\n\n   static getStatusClass(cell: VsanTestCell): string {\n      return VsanHealthUtil.getVsanObjectHealthStatusIconClass(cell.cellValue);\n   }\n\n   static getHealthStatusClass(cellValue: VsanHealthStatus): string {\n      return VsanHealthUtil.getVsanHealthStatusIconClass(cellValue);\n   }\n\n   static getHealthStatusShape(cellValue: VsanHealthStatus): string {\n      return VsanHealthUtil.getVsanHealthStatusIconShape(cellValue);\n   }\n\n   static getHealthInfoLabel(cellValue: VsanHealthInfo): string {\n      return cellValue.label;\n   }\n\n   static getListCellData(cell: VsanTestCell): string[] {\n      let values: any[] = cell.cellValue;\n      switch (cell.cellType) {\n         case ColumnType.listFloat:\n         case ColumnType.listLong:\n            values = values.map(value => VsanHealthUtil.formatedNumber(value, cell.cellType));\n      }\n      return values;\n   }\n\n   static getMorCellData(cell: VsanTestCell): Map<string, string> {\n      const morCellArr: Map<string, string> = new Map<string, string>();\n      switch (cell.cellType) {\n         case ColumnType.listMor:\n            for (const value of cell.cellValue) {\n               const moUid: string = ManagedObject.uid(ManagedObject.create(\n                     value.object.type,\n                     value.object.value,\n                     value.object.serverGuid));\n               morCellArr.set(moUid, value.objectName);\n            }\n            break;\n         case ColumnType.mor:\n         case ColumnType.dynamic:\n         case ColumnType.HostReference:\n            const uid: string = ManagedObject.uid(ManagedObject.create(\n                  cell.cellValue.object.type,\n                  cell.cellValue.object.value,\n                  cell.cellValue.object.serverGuid));\n            morCellArr.set(uid, cell.cellValue.objectName);\n            break;\n      }\n      return morCellArr;\n   }\n\n   static formatInstanceTimestamp(timestamp: number): string {\n      return VsanDateTimeUtils.formatDate(timestamp, VsanHealthUtil.INSTANCE_TIMESTAMP_OPTIONS);\n   }\n\n   static formatInstanceTitleTimestamp(timestamp: number): string {\n      return VsanDateTimeUtils.formatDate(timestamp, VsanHealthUtil.INSTANCE_TITLE_TIMESTAMP_OPTIONS);\n   }\n}\n\nexport type BaseHealthState = VsanObjectHealthState | ObjectHealthComplianceState | ObjectHealthIncomplianceReason |\n      ObjectHealthRebuildState | ObjectHealthPolicyState;\n\n/**\n * Enum that stores health subtest ids\n */\nexport enum VsanHealthTestId {\n   NETWORK_LATENCY_CHECK = \"com.vmware.vsan.health.test.hostlatencycheck\",\n   PHYSICAL_DISK_OPERATION_HEALTH = \"com.vmware.vsan.health.test.physdiskoverall\",\n}\n"],"sourceRoot":"webpack:///"}