{"version":3,"sources":["webpack:///src/app/vsan/vm/io-diagnostics/io-diagnostics-common.module.ts","webpack:///src/app/vsan/common/util/modal-builder.ts","webpack:///src/app/vsan/vm/io-diagnostics/action/run-instance-validation.html","webpack:///src/app/vsan/common/component/validation/alert-action-link-util.ts","webpack:///src/app/vsan/common/util/vsan-dialog-util.ts","webpack:///src/app/vsan/vm/io-diagnostics/action/run-instance-validation.ts","webpack:///src/app/vsan/vm/io-diagnostics/io-diagnostics.util.ts"],"names":["IoDiagnosticsCommonModule","ModalBuilder","appId","size","DEFAULT_SIZE","title","accessibilityTitle","urlParams","dimensions","length","warn","setSize","WIDTH","HEIGHT","width","height","params","eventTarget","context","Promise","accept","pluginContext","targetElement","event","target","modalResultHandler","data","JSON","parse","stringify","focus","setTimeout","actionUrl","APP_URL","separator","param","openModalDialog","contextObjectUid","WIZARD_XL","repa","repaExtension","AlertActionLinkUtil","onDialogClose","label","getString","action","PERFORMANCE_CONFIG","PERF_SVC_EDIT_ACTION_DIALOG","open","then","VsanDialogUtil","CAPACITY_MANAGEMENT_DIALOG","DELETE_VOLUME_DIALOG","MIGRATE_VOLUME_DIALOG","REAPPLY_VOLUME_POLICY_DIALOG","DUPLICATE_PCI_ID_MODEL_SELECTION_DIALOG","HEALTH_RESTORE_ACTION_DIALOG","CLUSTER_POWER_ON_DIALOG","VM_IO_DIAGNOSTICS_METRICS_DIALOG","VM_IO_DIAGNOSTICS_LATENCY_DIALOG","VM_IO_DIAGNOSTICS_DOM_OWNER_LATENCY_DIALOG","PERF_SVC_ENABLE_ACTION_DIALOG","CLAIM_DISKS_ACTION_DIALOG","VSAN_DISK_CLAIM_ACTION_DIALOG","VsanDialogProperties","RunInstanceValidation","getFailedChecksReasons","failedChecks","map","failedCheck","unsupportedType","PERF_SVC_DISABLED","getPerformanceServiceActionLink","clusterRef","clsRef","onPerfServiceEnabled","IoDiagnosticsUtil","document","createElement","TAG_NAME","element","callback","onClick","onEnterKeyUp","type","DOM_OWNER_LATENCY_TYPES","includes","node","hasClass","DOM_OWNER_NODE","ioInstanceResult","unsupportedClusterFailedCheck","precheckResult","find","UNSUPPORTED_CLUSTER_TYPE","some","clsType","unavailableViewSpec","getUnsupportedClusterFailedCheck","IO_DIAGNOSTICS_NOT_SUPPORTED_CONFIG","statusLabel","reason","graphElementDetails","hostName","hostUuid","latency","isUnset","localizeNumber","toFixed","graphElements","hasEdges","hasNodes","edges","nodes","name","replace","DOM_OWNER","PERF_DOM_OWNER","CAPACITY_DOM_OWNER","STRETCHED_CLUSTER","NESTED_FAULT_DOMAIN","COMPUTE_ONLY_CLUSTER","VSAN_OBJECT_IN_REMOTE_DATASTORE"],"mappings":"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","file":"85-es5.js","sourcesContent":["/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {RunInstanceValidation} from \"./action/run-instance-validation\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\n\n@NgModule({\n   imports: [\n         ValidationModule,\n   ],\n   declarations: [\n         RunInstanceValidation,\n   ],\n   exports: [\n         ValidationModule,\n         RunInstanceValidation,\n   ],\n})\nexport class IoDiagnosticsCommonModule {\n}","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {environment} from \"@env/environment\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Logger} from \"./logger\";\nimport {WebPlatform} from \"./platform\";\nimport {VsanUiUtils} from \"./vsan-util\";\n\nexport class ModalBuilder {\n\n   static readonly WIDTH: number = 0;\n   static readonly HEIGHT: number = 1;\n\n   static readonly DEFAULT_SIZE: number[] = [1000, 530];\n   static readonly WIZARD_XL: number[] = [1200, 700];\n\n   static readonly APP_URL: string = (environment.repa && environment.repaExtension)\n         ? \"index.html\"\n         : \"/ui/h5-vsan-ui/\";\n\n   private size: number[] = ModalBuilder.DEFAULT_SIZE;\n\n   // When null, the modal dialog will be headless and the docked\n   // view is expected to provide a title bar.\n   private title: string = null;\n\n   private accessibilityTitle: string = null;\n\n   private urlParams: any = {};\n\n   private eventTarget: EventTarget;\n\n   constructor(private appId: string) {\n   }\n\n   setDimensions(dimensions: number[]): ModalBuilder {\n      if (!dimensions || dimensions.length !== 2) {\n         Logger.warn(\"invalid modal dimensions\", dimensions);\n         dimensions = ModalBuilder.DEFAULT_SIZE;\n      }\n      return this.setSize(dimensions[ModalBuilder.WIDTH], dimensions[ModalBuilder.HEIGHT]);\n   }\n\n   setSize(width: number, height: number): ModalBuilder {\n      this.size = [width, height];\n      return this;\n   }\n\n   setUrlParameters(params: any): ModalBuilder {\n      this.urlParams = params;\n      return this;\n   }\n\n   /**\n    * Set to null if the view provides its own title bar\n    */\n   setTitle(title: string): ModalBuilder {\n      this.title = title;\n      return this;\n   }\n\n   setAccessibilityTitle(accessibilityTitle: string): ModalBuilder {\n      this.accessibilityTitle = accessibilityTitle;\n      return this;\n   }\n\n   /**\n    * Set explicit event target if it is changed before opening the modal.\n    * For example when making a preceding request the event target is the XMLHttpRequest object.\n    */\n   setEventTarget(eventTarget: EventTarget): ModalBuilder {\n      this.eventTarget = eventTarget;\n      return this;\n   }\n\n   /**\n    * Opens a modal dialog and returns a promise to collect the result; On close the target element is focused.\n    * @param context - any JS data object, can be retrieved by WebPlatform.getModalContext()\n    * @returns {Promise<any>} - Invoked if the dialog invokes WebPlatform.closeModalDialog(arg)\n    *       with non-null arg. The promise is never rejected.\n    */\n   open(context?: any): Promise<any> {\n      return new Promise<any>((accept) => {\n         VsanUiUtils.pluginContext.targetElement = this.eventTarget ? this.eventTarget :\n               (event && event.target ? event.target : null);\n         VsanUiUtils.pluginContext.modalResultHandler = (data?: any) => {\n            if (typeof data !== \"undefined\") {\n               // Deep copy of the object was required to resolve an issue with object's prototype overriding when\n               // passing complex objects in IE11/Edge; Keep it for safety.\n               accept(JSON.parse(JSON.stringify(data)));\n            } else if (VsanUiUtils.pluginContext.targetElement && VsanUiUtils.pluginContext.targetElement.focus) {\n               // On cancel just focus the target element. Timeout is required as otherwise the focus may be\n               // consumed by the mouse click.\n               setTimeout(() => VsanUiUtils.pluginContext.targetElement.focus(), 100);\n            }\n         };\n\n         let actionUrl: string = `${ModalBuilder.APP_URL}?viewId=${this.appId}`;\n\n         let separator: string = \"?\";\n         for (const param in this.urlParams) {\n            actionUrl += separator + param + \"=\" + this.urlParams[param];\n            separator = \"&\";\n         }\n\n         WebPlatform.openModalDialog(this.title,\n               actionUrl,\n               ManagedObject.contextObjectUid,\n               this.size[0], this.size[1],\n               this.title != null,\n               VsanUiUtils.pluginContext.modalResultHandler /* onClose */,\n               context /* retrieve with Platform.getModalContext() */,\n               this.accessibilityTitle);\n      });\n   }\n\n}\n","<!--Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-validation id=\"failed-checks-reasons\"\n                 [alertType]=\"'info'\"\n                 [alerts]=\"getFailedChecksReasons()\"\n                 [actionLinks]=\"getFailedChecksActionLinks()\"\n                 [alertsExpanded]=\"true\"\n                 [allowExpandCollapse]=\"false\"\n                 [allowClose]=\"false\">\n</vsan-validation>","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AlertActionLink} from \"@component/validation/alert-action-link\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {VsanDialogUtil} from \"@util/vsan-dialog-util\";\nimport {PerfServiceModalContextData} from \"@navigation/context/perf-service-modal-context.data\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanRoutes} from \"../../../../vsan-routes\";\n\nexport class AlertActionLinkUtil {\n   static getPerformanceServiceActionLink(context: PerfServiceModalContextData,\n         onDialogClose: (taskRef: ManagedObject) => void): AlertActionLink {\n      return {\n         label: VsanUiUtils.getString(\"vsan.services.performance.service.enable.action\"),\n         action: () => {\n            new ModalBuilder(VsanRoutes.PERFORMANCE_CONFIG)\n                  .setSize(VsanDialogUtil.PERF_SVC_EDIT_ACTION_DIALOG.width,\n                           VsanDialogUtil.PERF_SVC_EDIT_ACTION_DIALOG.height)\n                  .open(context)\n                  .then(onDialogClose);\n         },\n      };\n   }\n}","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nexport class VsanDialogUtil {\n   static readonly CAPACITY_MANAGEMENT_DIALOG: VsanDialogProperties = {\n      width: 800,\n      height: 700,\n   };\n\n   static readonly DELETE_VOLUME_DIALOG: VsanDialogProperties = {\n      width: 500,\n      height: 250,\n   };\n\n   static readonly MIGRATE_VOLUME_DIALOG: VsanDialogProperties = {\n      width: 1030,\n      height: 710,\n   };\n\n   static readonly REAPPLY_VOLUME_POLICY_DIALOG: VsanDialogProperties = {\n      width: 700,\n      height: 250,\n   };\n\n   static readonly DUPLICATE_PCI_ID_MODEL_SELECTION_DIALOG: VsanDialogProperties = {\n      width: 800,\n      height: 500,\n   };\n\n   static readonly HEALTH_RESTORE_ACTION_DIALOG: VsanDialogProperties = {\n      width: 550,\n      height: 250,\n   };\n\n   // Keep in sync with plugin.xml extension point\n   static readonly CLUSTER_POWER_ON_DIALOG: VsanDialogProperties = {\n      width: 600,\n      height: 230,\n   };\n\n   static readonly VM_IO_DIAGNOSTICS_METRICS_DIALOG: VsanDialogProperties = {\n      width: 900,\n      height: 700,\n   };\n\n   static readonly VM_IO_DIAGNOSTICS_LATENCY_DIALOG: VsanDialogProperties = {\n      width: 1000,\n      height: 500,\n   };\n\n   static readonly VM_IO_DIAGNOSTICS_DOM_OWNER_LATENCY_DIALOG: VsanDialogProperties = {\n      width: 1000,\n      height: 400,\n   };\n\n   static readonly PERF_SVC_EDIT_ACTION_DIALOG: VsanDialogProperties = {\n      width: 800,\n      height: 450,\n   };\n\n   static readonly PERF_SVC_ENABLE_ACTION_DIALOG: VsanDialogProperties = {\n      width: 800,\n      height: 250,\n   };\n\n   static readonly CLAIM_DISKS_ACTION_DIALOG: VsanDialogProperties = {\n      width: 1200,\n      height: 650,\n   };\n\n   static readonly VSAN_DISK_CLAIM_ACTION_DIALOG: VsanDialogProperties = {\n      width: 670,\n      height: 300,\n   };\n}\n\nexport class VsanDialogProperties {\n   width: number;\n   height: number;\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {AlertActionLink} from \"@component/validation/alert-action-link\";\nimport {VsanIODiagnosticsFailedCheckType} from \"@generated/vsan-i-o-diagnostics-failed-check-type\";\nimport {IoDiagnosticsUtil} from \"../io-diagnostics.util\";\nimport {VsanIODiagnosticsFailedCheck} from \"@generated/vsan-i-o-diagnostics-failed-check\";\nimport {AlertActionLinkUtil} from \"@component/validation/alert-action-link-util\";\n\n@Component({\n   templateUrl: \"run-instance-validation.html\",\n   styleUrls: [\"run-instance-validation.scss\"],\n   selector: \"vsan-run-instance-validation\",\n})\nexport class RunInstanceValidation {\n\n   @Input()\n   failedChecks: VsanIODiagnosticsFailedCheck[];\n\n   @Input()\n   clsRef: ManagedObject;\n\n   @Input()\n   onPerfServiceEnabled: (taskRef: ManagedObject) => void;\n\n   getFailedChecksReasons(): string[] {\n      return IoDiagnosticsUtil.getFailedChecksReasons(this.failedChecks);\n   }\n\n   /**\n    * For each failed check return null or action (e.g., perf svc action).\n    */\n   getFailedChecksActionLinks(): AlertActionLink[] {\n      return this.failedChecks?.map(failedCheck =>\n           (failedCheck.unsupportedType !== VsanIODiagnosticsFailedCheckType.PERF_SVC_DISABLED)\n           ? null\n           : AlertActionLinkUtil.getPerformanceServiceActionLink({clusterRef: this.clsRef}, this.onPerfServiceEnabled));\n   }\n}","/* Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {UnavailableViewSpec} from \"@component/unavailable-view/unavailable-view-spec\";\nimport {GraphClasses} from \"@generated/graph-classes\";\nimport {GraphElements} from \"@generated/graph-elements\";\nimport {VsanIODiagnosticsFailedCheck} from \"@generated/vsan-i-o-diagnostics-failed-check\";\nimport {VsanIODiagnosticsFailedCheckType} from \"@generated/vsan-i-o-diagnostics-failed-check-type\";\nimport {VsanIODiagnosticsInstanceResult} from \"@generated/vsan-i-o-diagnostics-instance-result\";\nimport {VsanIoLatencyType} from \"@generated/vsan-io-latency-type\";\nimport {DomUtil} from \"@util/dom-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {NodeSingular} from \"cytoscape\";\n\nexport class IoDiagnosticsUtil {\n\n   private static readonly TAG_NAME: string = \"div\";\n   private static readonly DOM_OWNER_LATENCY_TYPES: VsanIoLatencyType[] = [\n      VsanIoLatencyType.DOM_OWNER, VsanIoLatencyType.PERF_DOM_OWNER, VsanIoLatencyType.CAPACITY_DOM_OWNER,\n   ];\n\n   static createDivElement(): HTMLElement {\n      return document.createElement(IoDiagnosticsUtil.TAG_NAME);\n   }\n\n   static attachUserEvents(element: HTMLElement, callback: () => any): void {\n      DomUtil.onClick(element, callback);\n      DomUtil.onEnterKeyUp(element, callback);\n   }\n\n   static isDomOwner(type: VsanIoLatencyType): boolean {\n      return IoDiagnosticsUtil.DOM_OWNER_LATENCY_TYPES.includes(type);\n   }\n\n   static isDomOwnerNode(node: NodeSingular): boolean {\n      return node && node.hasClass(GraphClasses.DOM_OWNER_NODE());\n   }\n\n   private static UNSUPPORTED_CLUSTER_TYPE: VsanIODiagnosticsFailedCheckType[] = [\n      VsanIODiagnosticsFailedCheckType.STRETCHED_CLUSTER,\n      VsanIODiagnosticsFailedCheckType.NESTED_FAULT_DOMAIN,\n      VsanIODiagnosticsFailedCheckType.COMPUTE_ONLY_CLUSTER,\n      VsanIODiagnosticsFailedCheckType.VSAN_OBJECT_IN_REMOTE_DATASTORE,\n   ];\n\n   private static getUnsupportedClusterFailedCheck(ioInstanceResult: VsanIODiagnosticsInstanceResult): VsanIODiagnosticsFailedCheck {\n      let unsupportedClusterFailedCheck: VsanIODiagnosticsFailedCheck;\n      if (ioInstanceResult && ioInstanceResult.precheckResult.failedChecks?.length) {\n         unsupportedClusterFailedCheck = ioInstanceResult.precheckResult.failedChecks.find(failedCheck =>\n               IoDiagnosticsUtil.UNSUPPORTED_CLUSTER_TYPE.some(clsType => clsType === failedCheck.unsupportedType));\n      }\n      return unsupportedClusterFailedCheck;\n   }\n\n   static createUnavailableViewSpec(ioInstanceResult: VsanIODiagnosticsInstanceResult): UnavailableViewSpec {\n      let unavailableViewSpec: UnavailableViewSpec = null;\n      const unsupportedClusterFailedCheck: VsanIODiagnosticsFailedCheck =\n            IoDiagnosticsUtil.getUnsupportedClusterFailedCheck(ioInstanceResult);\n      if (unsupportedClusterFailedCheck) {\n         unavailableViewSpec = UnavailableViewSpec.IO_DIAGNOSTICS_NOT_SUPPORTED_CONFIG;\n         unavailableViewSpec.statusLabel = unsupportedClusterFailedCheck.reason;\n      }\n      return unavailableViewSpec;\n   }\n\n   static getFailedChecksReasons(failedChecks: VsanIODiagnosticsFailedCheck[]): string[] {\n      return failedChecks?.map(failedCheck => failedCheck.reason);\n   }\n\n   static getHostName(graphElementDetails: { hostName: string, hostUuid: string }): string {\n      return graphElementDetails?.hostName\n            ? graphElementDetails.hostName\n            : graphElementDetails?.hostUuid;\n   }\n\n   static formatLatency(latency: number): string {\n      return VsanUiUtils.isUnset(latency)\n            ? VsanUiUtils.getString(\"vsan.na.label\")\n            : VsanUiUtils.getString(\"vsan.monitor.vm.iodiagnostics.grid.cell.latency\",\n                  VsanUiUtils.localizeNumber(latency.toFixed(2)));\n   }\n\n   static canRenderGraph(graphElements: GraphElements): boolean {\n      return IoDiagnosticsUtil.hasEdges(graphElements) && IoDiagnosticsUtil.hasNodes(graphElements);\n   }\n\n   static hasNoStats(graphElements: GraphElements): boolean {\n      return !IoDiagnosticsUtil.hasEdges(graphElements) && !IoDiagnosticsUtil.hasNodes(graphElements);\n   }\n\n   private static hasEdges(graphElements: GraphElements): boolean {\n      return !!graphElements?.edges?.length;\n   }\n\n   private static hasNodes(graphElements: GraphElements): boolean {\n      return !!graphElements?.nodes?.length;\n   }\n\n   static getVmdkName(name: string): string {\n      return name.replace(\"\\n\", \"\");\n   }\n}"]}