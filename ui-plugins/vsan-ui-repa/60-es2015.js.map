{"version":3,"sources":["./src/app/vsan/common/component/precheck/pre-check-evacuation-select.html","./src/app/vsan/common/component/precheck/pre-check-evacuation-select.component.ts","./src/app/vsan/common/util/vsan-disk-mgmt-actions-util.ts","./src/app/vsan/common/component/precheck/pre-check.module.ts","./src/app/vsan/common/util/vsan-signpost-util.ts"],"names":[],"mappings":"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","file":"60-es2015.js","sourcesContent":["<!--Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<form class=\"clr-form clr-form-horizontal\">\n   <div class=\"clr-form-control\">\n      <label for=\"vsan-pre-check-evacuation-select\" class=\"clr-control-label\">\n         {{selectLabel}}\n      </label>\n      <div class=\"clr-control-container\">\n         <select id=\"vsan-pre-check-evacuation-select\"\n                 clrSelect\n                 name=\"decommissionMode\"\n                 [(ngModel)]=\"selectedDecommissionMode\">\n            <ng-container *ngFor=\"let decommissionMode of decommissionModeOptions\">\n               <option *ngIf=\"isDecommissionModeSupported(decommissionMode.value)\" [ngValue]=\"decommissionMode.value\">\n                  {{decommissionMode.label}}\n               </option>\n            </ng-container>\n         </select>\n         <clr-signpost id=\"{{decommissionModeSignpostId}}\"\n                       [vsan-signpost-title]=\"'vsan.dialog.precheckEvacuation.signpost.label' | localized\">\n            <clr-signpost-content *clrIfOpen [clrPosition]=\"getDecommissionModeSignpostPosition()\">\n               <ul>\n                  <li *ngIf=\"isDecommissionModeSupported(DecommissionMode.evacuateAllData)\">\n                     {{\"vsan.dialog.precheckEvacuation.signpost.fullDataMigration\"| localized}}\n                  </li>\n                  <li *ngIf=\"isDecommissionModeSupported(DecommissionMode.ensureObjectAccessibility)\">\n                     {{\"vsan.dialog.precheckEvacuation.signpost.ensureAccesibility\"| localized}}\n                  </li>\n                  <li>\n                     {{\"vsan.dialog.precheckEvacuation.signpost.noDataMigration\" | localized}}\n                  </li>\n               </ul>\n            </clr-signpost-content>\n         </clr-signpost>\n      </div>\n   </div>\n</form>\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanSignpostUtil} from \"@util/vsan-signpost-util\";\nimport {DecommissionMode} from \"@generated/decommission-mode\";\n\n@Component({\n   templateUrl: \"pre-check-evacuation-select.html\",\n   styleUrls: [\"pre-check-evacuation-select.scss\"],\n   selector: \"vsan-pre-check-evacuation-select\",\n})\nexport class PreCheckEvacuationSelectComponent {\n   readonly decommissionModeSignpostId: string = \"pre-check-evacuaton-summary-sign-post\";\n\n   private _selectedDecommissionMode: DecommissionMode = DecommissionMode.ensureObjectAccessibility;\n\n   @Input()\n   selectLabel: string = VsanUiUtils.getString(\"vsan.dialog.precheckEvacuation.label\");\n\n   @Input()\n   set selectedDecommissionMode(value: DecommissionMode) {\n      if (value !== this._selectedDecommissionMode) {\n         this._selectedDecommissionMode = value;\n         this.selectedDecommisionModeChange.emit(value);\n      }\n   }\n\n   get selectedDecommissionMode(): DecommissionMode {\n      return this._selectedDecommissionMode;\n   }\n\n   @Input()\n   unsupportedDecommissionModes: DecommissionMode[] = [];\n\n   @Output()\n   selectedDecommisionModeChange: EventEmitter<DecommissionMode> = new EventEmitter<DecommissionMode>();\n\n   decommissionModeOptions: DecommissionModeOption[] = [\n      {\n         value: DecommissionMode.evacuateAllData,\n         label: VsanUiUtils.getString(\"vsan.dialog.precheckEvacuation.fullDataMigration\"),\n      },\n      {\n         value: DecommissionMode.ensureObjectAccessibility,\n         label: VsanUiUtils.getString(\"vsan.dialog.precheckEvacuation.ensureAccessibility\"),\n      },\n      {\n         value: DecommissionMode.noAction,\n         label: VsanUiUtils.getString(\"vsan.dialog.precheckEvacuation.noDataMigration\"),\n      },\n   ];\n\n   DecommissionMode: typeof DecommissionMode = DecommissionMode;\n\n   isDecommissionModeSupported(mode: DecommissionMode): boolean {\n      return VsanUiUtils.isEmpty(this.unsupportedDecommissionModes) ||\n            !this.unsupportedDecommissionModes.includes(mode);\n   }\n\n   getDecommissionModeSignpostPosition(): string {\n      const SIGNPOST_WIDTH: number = 360;\n      const SIGNPOST_HEIGHT: number = 250;\n      return VsanSignpostUtil.getPosition(this.decommissionModeSignpostId, SIGNPOST_WIDTH, SIGNPOST_HEIGHT,\n            true);\n   }\n\n}\n\ninterface DecommissionModeOption {\n   value: DecommissionMode;\n   label: string;\n}","/* Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ManagedObject} from \"@service/managed-object\";\nimport {EvacuationContext} from \"@navigation/context/evacuation.context\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {DecommissionModeSummary} from \"@component/precheck/pre-check-evacuation-summary.component\";\nimport {DiskGroupData} from \"@generated/disk-group-data\";\nimport {DecommissionMode} from \"@generated/decommission-mode\";\nimport {VsanDiskMapping} from \"@generated/vsan-disk-mapping\";\nimport {DiskData} from \"@generated/disk-data\";\nimport {HostActionData} from \"@model/host-action.data\";\nimport {DiskGroupActionData} from \"@model/disk-group-action.data\";\n\nexport class VsanDiskMgmtActionsUtil {\n\n   // Stop managing Pmem dialog size\n   static readonly STOP_MANAGING_PMEM_HEIGHT: number = 250;\n   static readonly STOP_MANAGING_PMEM_WIDTH: number = 760;\n\n   // Delete disk group dialog size.\n   static readonly DELETE_DISK_GROUP_HEIGHT_LARGE: number = 730;\n   static readonly DELETE_DISK_GROUP_HEIGHT_MEDIUM: number = 420;\n   static readonly DELETE_DISK_GROUP_HEIGHT_SMALL: number = 290;\n   static readonly DELETE_DISK_GROUP_HEIGHT_PRECHECK: number = 370;\n   static readonly DELETE_DISK_GROUP_WIDTH: number = 1100;\n\n   // Delete disks dialog size\n   static readonly DELETE_DISKS_HEIGHT_LARGE: number = 730;\n   static readonly DELETE_DISKS_HEIGHT_MEDIUM: number = 420;\n   static readonly DELETE_DISKS_HEIGHT_SMALL: number = 280;\n   static readonly DELETE_DISKS_HEIGHT_PRECHECK: number = 370;\n   static readonly DELETE_DISKS_WIDTH: number = 1100;\n   static readonly DELETE_VSAN_DIRECT_DISKS_HEIGHT: number = 250;\n   static readonly DELETE_VSAN_DIRECT_DISKS_HEIGHT_PRECHECK: number = 370;\n   static readonly DELETE_VSAN_DIRECT_DISKS_WIDTH: number = 900;\n\n   // Recreate disk group dialog size\n   static readonly RECREATE_DIALOG_HEIGHT_LARGE: number = 730;\n   static readonly RECREATE_DIALOG_HEIGHT_MEDIUM: number = 440;\n   static readonly RECREATE_DIALOG_HEIGHT_SMALL: number = 300;\n   static readonly RECREATE_DIALOG_HEIGHT_PRECHECK: number = 370;\n   static readonly RECREATE_DIALOG_WIDTH: number = 1100;\n\n   // Mount disk group dialog size\n   static readonly MOUNT_DISK_GROUP_DIALOG_HEIGHT: number = 230;\n   static readonly MOUNT_DISK_GROUP_DIALOG_WIDTH: number = 600;\n\n   // Unmount disk group dialog size\n   static readonly UNMOUNT_DISK_GROUP_DIALOG_HEIGHT_LARGE: number = 730;\n   static readonly UNMOUNT_DISK_GROUP_DIALOG_HEIGHT_MEDIUM: number = 420;\n   static readonly UNMOUNT_DISK_GROUP_DIALOG_HEIGHT_SMALL: number = 290;\n   static readonly UNMOUNT_DISK_GROUP_DIALOG_HEIGHT_PRECHECK: number = 390;\n   static readonly UNMOUNT_DISK_GROUP_DIALOG_WIDTH: number = 1100;\n\n   // Unmount disk dialog size\n   static readonly UNMOUNT_DISK_DIALOG_HEIGHT: number = 390;\n   static readonly UNMOUNT_DISK_DIALOG_HEIGHT_SMALL: number = 290;\n   static readonly UNMOUNT_DISK_DIALOG_WIDTH: number = 1100;\n\n   static shouldAllowDiskGroupDataMigration = (host: HostActionData, diskGroup: DiskGroupActionData): boolean => {\n      return host.isWhatIfSupported && !host.isWitnessHost && !host.isInMaintenanceMode &&\n            diskGroup.isMounted && !diskGroup.isLocked;\n   };\n\n   static getDataMigrationWarningForDiskGroup = (isHostInMaintenanceMode: boolean,\n         isDiskGroupMounted: boolean): string => {\n      if (isHostInMaintenanceMode) {\n         return VsanUiUtils.getString(\"vsan.dialog.deleteDiskGroup.hostInMaintenance.warning\");\n      }\n      if (!isDiskGroupMounted) {\n         return VsanUiUtils.getString(\"vsan.dialog.deleteDiskGroup.unmountedDiskGroup.warning\");\n      }\n   };\n\n   static getSelectedDecommissionMode = (shouldAllowDataMigration: boolean,\n         selectedDecommissionMode?: DecommissionMode): DecommissionMode => {\n      if (!shouldAllowDataMigration) {\n         return DecommissionMode.noAction;\n      }\n\n      return selectedDecommissionMode || DecommissionMode.ensureObjectAccessibility;\n   };\n\n   static getVsanDiskMapping = (group: DiskGroupData): VsanDiskMapping => {\n      let cacheDisk: DiskData;\n      const capacityDisks: DiskData[] = [];\n      group.disks.forEach(disk => {\n         if (disk.isMappedAsCache) {\n            cacheDisk = disk;\n         } else {\n            capacityDisks.push(disk);\n         }\n      });\n      return VsanDiskMapping.Factory.create(cacheDisk?.disk, capacityDisks.map(disk => disk.disk));\n   };\n\n   static isPrecheckWithObjects = (precheckSummary: DecommissionModeSummary): boolean => {\n      // Checks whether the result from precheck includes any inaccessible objects this is\n      return precheckSummary.inaccessibleIncompliantObjects\n            && precheckSummary.inaccessibleIncompliantObjects.length > 0;\n   };\n\n   static getEvacuationContext = (hostRef: ManagedObject, entityUuid?: string,\n         selectedDecommissionMode?: DecommissionMode): EvacuationContext => {\n      const selectedEntity: string = ManagedObject.uid(hostRef);\n      const selectedEvacuationType: DecommissionMode =\n            VsanDiskMgmtActionsUtil.getSelectedDecommissionMode(true, selectedDecommissionMode);\n      return {\n         selectedEntity: selectedEntity,\n         objectUuid: entityUuid,\n         selectedEvacuationType: selectedEvacuationType,\n      };\n   };\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {VsanCommonModule} from \"../../vsan-common.module\";\nimport {PreCheckEvacuationSelectComponent} from \"@component/precheck/pre-check-evacuation-select.component\";\nimport {PreCheckEvacuationSummaryComponent} from \"@component/precheck/pre-check-evacuation-summary.component\";\nimport {VirtualObjectsTableModule} from \"@component/virtual-objects-table/virtual-objects-table.module\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      VsanCommonModule,\n      VirtualObjectsTableModule,\n   ],\n   declarations: [\n      PreCheckEvacuationSelectComponent,\n      PreCheckEvacuationSummaryComponent\n   ],\n   exports: [\n      PreCheckEvacuationSelectComponent,\n      PreCheckEvacuationSummaryComponent\n   ]\n})\nexport class PrecheckModule {\n}","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nexport class VsanSignpostUtil {\n   // The signpost's arrow is 12px in Clarity 2.2.0\n   private static readonly ARROW_SIZE: number = 12;\n   // The modal left or right padding is 24px.\n   private static readonly MODAL_HORIZONTAL_PADDING: number = 24;\n   // The modal top padding and title height or the bottom padding and footer height is 72px.\n   private static readonly MODAL_VERTICAL_PADDING: number = 72;\n\n   private static readonly TOP: string = \"top\";\n   private static readonly LEFT: string = \"left\";\n   private static readonly RIGHT: string = \"right\";\n   private static readonly BOTTOM: string = \"bottom\";\n   private static readonly MIDDLE: string = \"middle\";\n\n   static getPosition(elementId: string, signpostWidth: number, signpostHeight: number,\n         isInModal: boolean = false): string {\n      const elementBox: DOMRect = document.getElementById(elementId).getBoundingClientRect();\n      const modalVerticalPadding: number = isInModal\n            ? VsanSignpostUtil.MODAL_VERTICAL_PADDING\n            : 0;\n      const verticalPosition: string = VsanSignpostUtil.getVerticalPosition(\n            elementBox, signpostHeight + VsanSignpostUtil.ARROW_SIZE + modalVerticalPadding);\n      const modalHorizontalPadding: number = isInModal\n            ? VsanSignpostUtil.MODAL_HORIZONTAL_PADDING\n            : 0;\n      const horizontalPosition: string = VsanSignpostUtil.getHorizontalPosition(\n            elementBox, signpostWidth + VsanSignpostUtil.ARROW_SIZE + modalHorizontalPadding);\n      return `${verticalPosition}-${horizontalPosition}`;\n   }\n\n   private static getVerticalPosition(elementBox: ClientRect, elementHeight: number): string {\n      const bodyBox: DOMRect = document.body.getBoundingClientRect();\n      if (elementBox.bottom + elementHeight < bodyBox.height) {\n         // There is enough space to fit the signpost below the trigger\n         return VsanSignpostUtil.BOTTOM;\n      } else if (elementBox.top - elementHeight > 0) {\n         return VsanSignpostUtil.TOP;\n      } else {\n         return VsanSignpostUtil.MIDDLE;\n      }\n   }\n\n   private static getHorizontalPosition(elementBox: ClientRect, elementWidth: number): string {\n      const bodyBox: DOMRect = document.body.getBoundingClientRect();\n      if (elementBox.right + elementWidth < bodyBox.width) {\n         // There is enough space to fit the signpost on the right side of the view\n         return VsanSignpostUtil.RIGHT;\n      } else if (elementBox.left - elementWidth > 0) {\n         return VsanSignpostUtil.LEFT;\n      } else {\n         return VsanSignpostUtil.MIDDLE;\n      }\n   }\n}"],"sourceRoot":"webpack:///"}