{"version":3,"sources":["webpack:///src/app/vsan/support/view/advanced-perf-graphics.html","webpack:///src/app/vsan/support/view/vsan-support.component.ts","webpack:///src/app/vsan/support/support.module.ts","webpack:///src/app/vsan/support/view/advanced-perf-detailed-dashboard.component.ts","webpack:///src/app/vsan/support/view/advanced-perf-detailed-dashboard.html","webpack:///src/app/vsan/support/view/advanced-perf-graphics.component.ts","webpack:///src/app/vsan/support/view/vsan-support.html","webpack:///src/app/vsan/support/view/obfuscation-data-map.html","webpack:///src/app/vsan/support/view/obfuscation-data-map.component.ts","webpack:///src/app/vsan/support/view/advanced-perf-dashboard.html"],"names":["VsanSupportComponent","capabilityProvider","SupportView","currentSelectedView","OBFUSCATION","getViewSelectOptionLabel","view","getString","ADVANCED_PERFORMANCE","getClusterCapabilityData","contextObject","then","capabilityData","isAdvancedPerformanceSupported","availViews","preselectViews","err","error","navData","getNavigationData","includes","perfPreselectData","perfSelection","supportRoutes","path","component","SupportModule","DetailedAdvancedPerfDashboard","zoom","showLessClicked","showLess","emit","VsanAdvancedPerfGraphicsComponent","perfPropertyProvider","clusterRef","managedObjectExInfo","verboseModeEnabled","perfDisabledSpec","PERF_DISABLED","fetch","getPerfMonitorCommonPropsData","perfPropsData","perfEnabled","isPerformanceServiceEnabled","hasEditPrivilege","isVerboseModeEnabled","isVsanMaxEnabled","getEntitiesInfo","msg","srMessage","srMessageType","DATA","ObfuscationDataMapComponent","dataService","permissionService","navigationService","changeDetector","obfuscationService","AskVmwareId","hasPermissions","alertType","handleResponse","data","obfuscationData","alertMessage","obfuscationSupported","obfuscationMap","ceipEnabled","download","isRepa","downloadObfuscationMap","navigateToAddress","getObfuscatedMapUrl","getOnlineViewUrl","viewObfuscationMap","isDownload","webContextPath","DOWNLOAD_URL_PREFIX","contextObjectUid","canView","getSupportTag","serverGuid","clusterVsanConfigUuid","getCeipStatus","Promise","all","getObfuscationData","GLOBAL_SETTINGS","detectChanges"],"mappings":"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","file":"125-es5.js","sourcesContent":["<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div *ngIf=\"loading\" class=\"spinner central-spinner\"></div>\n<vsan-unavailable-view *ngIf=\"!loading && !perfEnabled\"\n                       [unavailableViewSpec]=\"perfDisabledSpec\"\n                       [hasEditPrivilege]=\"hasEditPrivilege\"\n                       [clusterRef]=\"clusterRef\">\n</vsan-unavailable-view>\n<vsan-validation id=\"error-message\"\n                 *ngIf=\"errorMessage\"\n                 [alert]=\"errorMessage\"\n                 [allowReload]=\"false\"\n                 [allowClose]=\"false\">\n</vsan-validation>\n<vsan-advanced-perf-dashboard\n      *ngIf=\"!loading && managedObjectExInfo.length > 0\"\n      [managedObjectExInfo]=\"managedObjectExInfo\"\n      [verboseModeEnabled]=\"verboseModeEnabled\"\n      [preselectData]=\"preselectData\"\n      [isVsanMaxEnabled]=\"isVsanMaxEnabled\"\n      (onRefresh)=\"fetch()\">\n</vsan-advanced-perf-dashboard>\n\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Logger} from \"@util/logger\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {PerfSelectionData, SupportNavData, SupportView} from '../model/navigation/support-nav.data';\n\n@Component({\n   selector: \"vsan-support\",\n   templateUrl: \"vsan-support.html\",\n   styleUrls: [\"./vsan-support.scss\"],\n})\nexport class VsanSupportComponent implements OnInit {\n   SupportView: typeof SupportView = SupportView;\n\n   availViews: SupportView[];\n   currentSelectedView: SupportView = SupportView.OBFUSCATION;\n\n   perfPreselectData: PerfSelectionData;\n\n   constructor(private capabilityProvider: VsanCapabilityProvider) {}\n\n   ngOnInit(): void {\n      this.capabilityProvider.getClusterCapabilityData(ManagedObject.contextObject)\n            .then((capabilityData: VsanCapabilityData) => {\n               if (capabilityData.isAdvancedPerformanceSupported) {\n                  this.availViews = [SupportView.OBFUSCATION, SupportView.ADVANCED_PERFORMANCE];\n               }\n               this.preselectViews();\n            })\n            .catch((err) => {\n               Logger.error(err);\n            });\n   }\n\n   getViewSelectOptionLabel = (view: SupportView): string => {\n      switch (view) {\n         case SupportView.OBFUSCATION:\n            return VsanUiUtils.getString(\"vsan.support.obfuscation.label\");\n         case SupportView.ADVANCED_PERFORMANCE:\n            return VsanUiUtils.getString(\"vsan.support.perf.support.view.label\");\n      }\n   };\n\n   private preselectViews(): void {\n      const navData: SupportNavData = VsanUiUtils.getNavigationData() as SupportNavData;\n      if (!navData) {\n         return;\n      }\n\n      this.currentSelectedView = navData.view;\n\n      if (this.availViews.includes(SupportView.ADVANCED_PERFORMANCE)\n            && this.currentSelectedView === SupportView.ADVANCED_PERFORMANCE) {\n         this.perfPreselectData = navData.perfSelection;\n      }\n   }\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {VsanSupportComponent} from \"./view/vsan-support.component\";\nimport {ObfuscationDataMapComponent} from \"./view/obfuscation-data-map.component\";\nimport {VsanChartModule} from \"@component/chart/chart.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\nimport {DatetimePickerModule} from \"@component/datetime-picker/datetime-picker.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {PerfDashboardSubEntitiesDataQueryService} from \"./util/perf-dashboard-sub-entities-data-query.service\";\nimport {PerformancePersistenceService} from \"@service/performance-persistence.service\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {PersistentStorageService} from \"@service/browser-storage.service\";\nimport {SupportPerfModule} from \"./support-perf.module\";\n\nconst supportRoutes: Routes = [\n   {\n      path: \"\",\n      component: VsanSupportComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      RouterModule.forChild(supportRoutes),\n      FormsModule,\n      VsanChartModule,\n      UnavailableViewModule,\n      ValidationModule,\n      CommonPipeModule,\n      DatetimePickerModule,\n      CommonDirectiveModule,\n      SupportPerfModule,\n   ],\n   declarations: [\n      VsanSupportComponent,\n      ObfuscationDataMapComponent,\n   ],\n   providers: [\n      PerfDashboardSubEntitiesDataQueryService,\n      PerformancePersistenceService,\n      PersistentStorageService,\n   ],\n})\nexport class SupportModule {\n}\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output, ViewChild} from \"@angular/core\";\nimport {GraphMetric} from \"../../common/component/chart/performance/graph-metrics.data\";\nimport {ChartZoomOption} from \"@component/chart/performance/chart-zoom-option\";\n\n@Component({\n   selector: \"vsan-advanced-perf-detailed-dashboard\",\n   templateUrl: \"advanced-perf-detailed-dashboard.html\",\n   styleUrls: [\n         \"./advanced-perf-dashboard.scss\",\n         \"./advanced-perf-sub-entity-dashboard.scss\"],\n})\nexport class DetailedAdvancedPerfDashboard {\n   @Input()\n   entityName: string;\n\n   @Input()\n   entityIcon: string;\n\n   @Input()\n   graphData: GraphMetric[];\n\n   @Input()\n   parentHost: String;\n\n   @Input()\n   zoomOption: ChartZoomOption;\n\n   @Output()\n   zoom: EventEmitter<ChartZoomOption> = new EventEmitter<ChartZoomOption>();\n\n   @Output()\n   private showLessClicked: EventEmitter<void> = new EventEmitter<void>();\n\n   showLess = () => {\n      this.showLessClicked.emit();\n   };\n}","<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<nav class=\"sidenav\">\n   <section class=\"nav-group collapsible\">\n      <div class=\"nav-label vsan-actions\">\n         <input id=\"check-entity\" type=\"checkbox\">\n         <label for=\"check-entity\">\n         <span *ngIf=\"parentHost\">\n            <clr-icon class=\"is-info\" shape=\"vsphere-icon-host\"></clr-icon>\n            <span class=\"entity-name\">{{parentHost}}</span>\n         </span>\n            <span *ngIf=\"!parentHost\">\n            <clr-icon [attr.shape]=\"entityIcon\" class=\"is-info\"></clr-icon>\n            <span class=\"entity-name\">{{entityName}}</span>\n         </span>\n         </label>\n         <ng-container *ngIf=\"!parentHost\">\n            <ng-container *ngTemplateOutlet=\"showLessButton\"></ng-container>\n         </ng-container>\n         <div *ngIf=\"parentHost\">\n            <clr-icon [attr.shape]=\"entityIcon\" class=\"is-info\"></clr-icon>\n            <span class=\"entity-name\">{{entityName}}</span>\n            <ng-container *ngTemplateOutlet=\"showLessButton\"></ng-container>\n         </div>\n      </div>\n      <vsan-perf-charts-container id=\"charts-container\"\n                                  class=\"nav-content\"\n                                  [data]=\"graphData\"\n                                  [isShowAllLinkVisible]=\"false\"\n                                  [isShowGraphDescription]=\"false\"\n                                  [showHeaderSection]=\"false\"\n                                  [chartLegendPosition]=\"'right'\"\n                                  [zoomOutOptions]=\"zoomOption\"\n                                  (zoom)=\"zoom.emit($event)\">\n      </vsan-perf-charts-container>\n   </section>\n</nav>\n<ng-template #showLessButton>\n   <button id=\"show-less-btn\"\n           class=\"btn btn-sm btn-link\"\n           (click)=\"showLess()\">\n      {{\"vsan.perf.advanced.dashboards.entity.graphs.showLess.label\" | localized}}\n   </button>\n</ng-template>","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {VsanPerfPropertyProvider} from \"@generated/vsan-perf-property-provider\";\nimport {ServerObjectInfo} from \"@generated/server-object-info\";\nimport {UnavailableViewSpec} from \"@component/unavailable-view/unavailable-view-spec\";\nimport {PerfMonitorCommonPropsData} from \"@generated/perf-monitor-common-props-data\";\nimport {PerfSelectionData} from \"../model/navigation/support-nav.data\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\n\n@Component({\n   selector: \"vsan-advanced-perf-graphics\",\n   templateUrl: \"advanced-perf-graphics.html\",\n   styleUrls: [\"advanced-perf-graphics.scss\"],\n})\nexport class VsanAdvancedPerfGraphicsComponent implements OnInit {\n   clusterRef: ManagedObject = ManagedObject.contextObject;\n   managedObjectExInfo: ServerObjectInfo[] = [];\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   perfEnabled: boolean;\n   verboseModeEnabled: boolean = false;\n   hasEditPrivilege: boolean;\n   isVsanMaxEnabled: boolean;\n\n   @ErrorMessage({msg: \"vsan.perf.service.chart.common.error\"})\n   errorMessage: string;\n\n   perfDisabledSpec: UnavailableViewSpec = UnavailableViewSpec.PERF_DISABLED;\n\n   @Input()\n   preselectData: PerfSelectionData;\n\n   constructor(private perfPropertyProvider: VsanPerfPropertyProvider) {\n   }\n\n   async ngOnInit(): Promise<void> {\n      await this.fetch();\n   }\n\n   @RefreshHandler\n   @Loader({srMessage: \"vsan.support.perf.support.view.label\", srMessageType: SrMessageType.DATA})\n   async fetch(): Promise<void> {\n      // check the performance service status and the user permissions\n      const perfPropsData: PerfMonitorCommonPropsData =\n            await this.perfPropertyProvider.getPerfMonitorCommonPropsData(this.clusterRef);\n      this.perfEnabled = perfPropsData.isPerformanceServiceEnabled;\n      this.hasEditPrivilege = perfPropsData.hasEditPrivilege;\n      this.verboseModeEnabled = perfPropsData.isVerboseModeEnabled;\n      this.isVsanMaxEnabled = perfPropsData.isVsanMaxEnabled;\n      if (!perfPropsData.isPerformanceServiceEnabled) {\n         return;\n      }\n\n      /**\n       * Query the name/vsanUuid value for the cluster and its hosts.\n       * We will use them later in the child view.\n       */\n      this.managedObjectExInfo = await this.perfPropertyProvider.getEntitiesInfo(this.clusterRef);\n   }\n}\n","<!-- Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div *ngIf=\"availViews\"\n     role=\"tablist\"\n     class=\"btn-group btn-outline-primary btn-sm\"\n     [attr.aria-label]=\"'vsan.monitor.support.tablist.label' | localized\">\n   <button id=\"vsan-support-buttons-{{i}}\"\n           role=\"tab\"\n           class=\"btn\"\n           [attr.aria-controls]=\"'vsan-support-panels-' + i\"\n           (click)=\"currentSelectedView = availView\"\n           *ngFor=\"let availView of availViews; let i = index\"\n           [attr.aria-selected]=\"availView == currentSelectedView\"\n           [ngClass]=\"{'btn-primary': availView === currentSelectedView}\">\n      {{getViewSelectOptionLabel(availView)}}\n   </button>\n</div>\n<vsan-obfuscation id=\"vsan-support-panels-0\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"vsan-support-buttons-0\"\n                  *ngIf=\"currentSelectedView === SupportView.OBFUSCATION\">\n</vsan-obfuscation>\n<vsan-advanced-perf-graphics id=\"vsan-support-panels-1\"\n                             role=\"tabpanel\"\n                             aria-labelledby=\"vsan-support-buttons-1\"\n                             *ngIf=\"currentSelectedView === SupportView.ADVANCED_PERFORMANCE\"\n                             [preselectData]=\"perfPreselectData\">\n</vsan-advanced-perf-graphics>","<span *ngIf=\"loading\" class=\"spinner central-spinner\"></span>\n<ng-container *ngIf=\"!loading\">\n   <vsan-validation id=\"alerts\"\n                    *ngIf=\"alertMessage\"\n                    [alertType]=\"alertType\"\n                    [allowClose]=\"false\"\n                    [alert]=\"alertMessage\">\n   </vsan-validation>\n   <div>{{\"vsan.monitor.support.obfuscation.download.confirm\" | localized}}\n      <a [external-link]=\"'vsan.monitor.support.obfuscation.download.confirm.link' | localized\"\n         [helpId]=\"AskVmwareId.OBFUSCATED_DATA\"></a>\n   </div>\n   <clr-stack-view>\n      <clr-stack-header>\n         <button id=\"view-obfuscation-map\"\n                 [disabled]=\"!canView()\"\n                 type=\"button\"\n                 class=\"stack-action btn btn-sm btn-link\"\n                 (click)=\"getOnlineViewUrl()\">\n            {{\"vsan.monitor.support.obfuscation.download.viewOnline.label\" |\n            localized}}\n         </button>\n         <button id=\"download-obfuscation-map-btn\"\n                 [disabled]=\"!canView()\"\n                 type=\"button\"\n                 class=\"stack-action btn btn-sm btn-link\"\n                 (click)=\"download()\">\n            {{\"vsan.monitor.support.obfuscation.download.label\" | localized}}\n         </button>\n      </clr-stack-header>\n      <clr-stack-block>\n         <clr-stack-label id=\"support-tag-label\">\n            {{\"vsan.monitor.support.supportTag.label\" | localized}}\n         </clr-stack-label>\n         <clr-stack-content>{{getSupportTag()}}</clr-stack-content>\n      </clr-stack-block>\n      <clr-stack-block>\n         <clr-stack-label id=\"ceip-enabled-label\">\n            {{\"vsan.monitor.support.ceip.enabled.label\" | localized}}\n         </clr-stack-label>\n         <clr-stack-content>{{getCeipStatus()}}</clr-stack-content>\n      </clr-stack-block>\n   </clr-stack-view>\n</ng-container>","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectorRef, Component, OnInit} from \"@angular/core\";\nimport {ObfuscationService} from \"@generated/obfuscation-service\";\nimport {ObfuscationData} from \"@generated/obfuscation-data\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {WebPlatform} from \"@util/platform\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {Logger} from \"@util/logger\";\nimport {NavigationService} from \"@navigation/navigation.service\";\nimport {ScreenReaderAnnouncer, SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {AskVmwareId} from '@service/navigation/model/ask-vmware-id';\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\n\n@Component({\n   templateUrl: \"obfuscation-data-map.html\",\n   styleUrls: [\"obfuscation-data-map.scss\"],\n   selector: \"vsan-obfuscation\",\n})\nexport class ObfuscationDataMapComponent implements OnInit {\n   readonly AskVmwareId: typeof AskVmwareId = AskVmwareId;\n   private static readonly DOWNLOAD_URL_PREFIX: string = \"/rest/support/obfuscation\";\n\n   private clusterRef: ManagedObject = ManagedObject.contextObject;\n\n   obfuscationData: ObfuscationData;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   alertMessage: string;\n   hasPermissions: boolean = false;\n   alertType: string = \"warning\";\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   constructor(private dataService: ObfuscationService,\n         private permissionService: PermissionService,\n         private navigationService: NavigationService,\n         private changeDetector: ChangeDetectorRef,\n         private obfuscationService: ObfuscationService) {\n   }\n\n   ngOnInit(): void {\n      this.fetch();\n   }\n\n   @RefreshHandler\n   @Loader({srMessage: \"vsan.support.obfuscation.label\", srMessageType: SrMessageType.DATA})\n   private async fetch(): Promise<void> {\n      const data: (ObfuscationData | boolean)[] = await Promise.all([\n         this.dataService.getObfuscationData(this.clusterRef),\n         this.permissionService.hasPermissions(this.clusterRef, [Privileges.GLOBAL_SETTINGS()]),\n      ]);\n\n      this.handleResponse(data);\n\n      this.changeDetector.detectChanges();\n   }\n\n   private handleResponse = (data: any[]): void => {\n      this.obfuscationData = data[0];\n      this.hasPermissions = data[1];\n\n      this.alertMessage = null;\n      this.alertType = \"warning\";\n\n      if (!this.hasPermissions) {\n         this.alertMessage = VsanUiUtils.getString(\"vsan.cluster.uploadSupportBundle.nopermissions\");\n      } else if (!this.obfuscationData.obfuscationSupported) {\n         this.alertMessage = VsanUiUtils.getString(\"vsan.monitor.support.obfuscation.notSupported.warning\");\n      } else if (!this.obfuscationData.obfuscationMap) {\n         this.alertMessage = VsanUiUtils.getString(\"vsan.monitor.support.obfuscation.empty.warning.desc\");\n      } else if (!this.obfuscationData.ceipEnabled) {\n         this.alertMessage = VsanUiUtils.getString(\"vsan.monitor.support.obfuscation.empty.warning.ceip\");\n      }\n   };\n\n   @ErrorHandler()\n   private handleError(err: string): void {\n      this.alertType = \"danger\";\n      Logger.error(err);\n      this.alertMessage = VsanUiUtils.getString(\"vsan.common.error.dataExtraction\");\n   }\n\n   download = (): void => {\n      if (WebPlatform.isRepa()) {\n         this.obfuscationService.downloadObfuscationMap(ManagedObject.contextObject);\n      } else {\n         this.navigationService.navigateToAddress(this.getObfuscatedMapUrl(true));\n      }\n   };\n\n   getOnlineViewUrl = () => {\n      if (WebPlatform.isRepa()) {\n         this.obfuscationService.viewObfuscationMap(ManagedObject.contextObject);\n      } else {\n         this.navigationService.navigateToAddress(this.getObfuscatedMapUrl(false));\n      }\n   };\n\n   getObfuscatedMapUrl = (isDownload: boolean): string => {\n      return WebPlatform.webContextPath +\n            ObfuscationDataMapComponent.DOWNLOAD_URL_PREFIX +\n            (isDownload ? \"/download/\" : \"/view/\") +\n            ManagedObject.contextObjectUid;\n   };\n\n   canView = (): boolean => {\n      /**\n       * User can view the obfuscated map when:\n       *   1. ceip enabled\n       *   2. obfuscationSupported\n       *   3. the obfuscatied data is not empty\n       */\n      return this.hasPermissions\n            && this.obfuscationData.ceipEnabled\n            && this.obfuscationData.obfuscationSupported\n            && !!this.obfuscationData.obfuscationMap;\n   };\n\n   getSupportTag = (): string => {\n      return VsanUiUtils.getString(\"vsan.monitor.support.supportTag.pattern\",\n            this.clusterRef.serverGuid, this.obfuscationData.clusterVsanConfigUuid);\n   };\n\n   getCeipStatus = (): string => {\n      if (this.obfuscationData.ceipEnabled) {\n         return VsanUiUtils.getString(\"vsan.services.enabled\");\n      }\n      return VsanUiUtils.getString(\"vsan.services.disabled\");\n   };\n}\n","<!-- Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<span *ngIf=\"loading\" class=\"spinner central-spinner\"></span>\n\n<vsan-validation *ngIf=\"errorMessage\"\n                 [alert]=\"errorMessage\"\n                 [allowReload]=\"allowReloadWhenError\"\n                 (onReload)=\"onRefresh.emit()\"\n                 [allowClose]=\"false\">\n</vsan-validation>\n\n<div *ngIf=\"managedObjectExInfo\" class=\"dropdown-container\">\n   <label for=\"dashboard-dropdown\">{{\"vsan.perf.advanced.dashboards.dropdown.label\" | localized}}</label>\n   <clr-dropdown id=\"dashboard-dropdown\">\n      <button type=\"button\"\n              class=\"btn btn-sm btn-link\"\n              clrDropdownToggle>\n         {{currentDashboardLabel}}\n         <clr-icon shape=\"caret down\"></clr-icon>\n      </button>\n      <clr-dropdown-menu clrPosition=\"bottom-left\"\n                         [attr.aria-label]=\"'vsan.common.srMessage.dropdownMenu.expanded.label' | localized:\n                              ('vsan.perf.advanced.dashboards.dropdown.label' | localized)\">\n         <label class=\"dropdown-header\">{{\"vsan.perf.advanced.dashboards.dropdown.pivotal.label\" | localized}}</label>\n         <button *ngFor=\"let link of outlineDashboardLinks\"\n            class=\"btn btn-sm btn-link\"\n            (click)=\"selectDashboard(link, link.label)\"\n            clrDropdownItem>{{link.label}}</button>\n         <div class=\"dropdown-divider\"></div>\n         <label class=\"dropdown-header\">{{\"vsan.perf.advanced.dashboards.dropdown.more.label\" | localized}}</label>\n         <ng-container *ngFor=\"let category of dropdownDashboardCategories\">\n            <clr-dropdown *ngIf=\"category.children.length > 1\">\n               <button type=\"button\"\n                       class=\"btn btn-sm btn-link\"\n                       clrDropdownToggle>{{category.label}}</button>\n               <clr-dropdown-menu clrPosition=\"right-top\"\n                                  [attr.aria-label]=\"'vsan.common.srMessage.dropdownMenu.expanded.label' | localized: category.label\">\n                  <button type=\"button\"\n                          class=\"btn btn-sm btn-link\"\n                          *ngFor=\"let dashboard of category.children\"\n                          (click)=\"selectDashboard(dashboard, dashboard.label)\"\n                          clrDropdownItem>\n                     {{dashboard.label}}\n                  </button>\n               </clr-dropdown-menu>\n            </clr-dropdown>\n         </ng-container>\n         <ng-container *ngFor=\"let dashboard of dropdownDashboardCategories\">\n           <button *ngIf=\"dashboard.children.length == 1\"\n                   type=\"button\"\n                   class=\"btn btn-sm btn-link\"\n                   (click)=\"selectDashboard(dashboard.children[0], dashboard.label + ' ' + dashboard.children[0].label)\"\n                   clrDropdownItem>{{dashboard.label + \" \" + dashboard.children[0].label}}</button>\n         </ng-container>\n      </clr-dropdown-menu>\n   </clr-dropdown>\n</div>\n\n<vsan-time-range-picker id=\"vsan-time-range-picker\"\n                        role=\"group\"\n                        aria-labelledby=\"time-range-label\"\n                        [enabled]=\"!loading\"\n                        [clusterRef]=\"clusterRef\"\n                        (initRange)=\"onTimeRangeChange($event, true)\"\n                        (changeRange)=\"onTimeRangeChange($event, false)\">\n</vsan-time-range-picker>\n\n<ng-container *ngIf=\"!loading && !errorMessage\">\n   <vsan-unavailable-view *ngIf=\"noDataView\"\n                          [unavailableViewSpec]=\"noDataView\">\n   </vsan-unavailable-view>\n   <ng-container *ngIf=\"!noDataView\">\n      <ng-container *ngIf=\"hasGraphMetricsData\">\n         <ng-container *ngIf=\"!currentPerfEntityStateData\">\n            <ng-container *ngIf=\"graphsForClusterAndHosts?.length > 0\">\n               <div id=\"cluster-charts-label\">\n                  {{\"vsan.perf.advanced.dashboards.entity.graphs.filter.cluster.label\" | localized}}\n               </div>\n               <div class=\"chart-labels-container\">\n                  <clr-checkbox-wrapper *ngFor=\"let graph of graphsForClusterAndHosts; let i = index;\">\n                     <input type=\"checkbox\"\n                            clrCheckbox\n                            id=\"graphForCluster-{{i}}\"\n                            name=\"graphForCluster-{{i}}\"\n                            class=\"chart-toggle\"\n                            title=\"{{graph.label}}\"\n                            [ngModel]=\"isGraphDisplayed(graph.id)\"\n                            (change)=\"toggleGraphDisplay(graph)\"/>\n                     <label>{{graph.label}}</label>\n                  </clr-checkbox-wrapper>\n               </div>\n            </ng-container>\n            <ng-container *ngIf=\"graphsForHostsOnly.length > 0\">\n               <div id=\"host-charts-label\" *ngIf=\"graphsForClusterAndHosts.length > 0\">\n                  {{\"vsan.perf.advanced.dashboards.entity.graphs.filter.host.label\" | localized}}\n               </div>\n               <div id=\"no-host-charts-label\" *ngIf=\"graphsForClusterAndHosts.length == 0\">\n                  {{\"vsan.perf.advanced.dashboards.entity.graphs.filter.label\" | localized}}\n               </div>\n               <div class=\"chart-labels-container\">\n                  <clr-checkbox-wrapper *ngFor=\"let graph of graphsForHostsOnly; let i = index;\">\n                     <input type=\"checkbox\"\n                            clrCheckbox\n                            id=\"graphForHosts-{{i}}\"\n                            name=\"graphForHosts-{{i}}\"\n                            class=\"chart-toggle\"\n                            title=\"{{graph.label}}\"\n                            [ngModel]=\"isGraphDisplayed(graph.id)\"\n                            (change)=\"toggleGraphDisplay(graph)\"/>\n                     <label>{{graph.label}}</label>\n                  </clr-checkbox-wrapper>\n               </div>\n            </ng-container>\n         </ng-container>\n         <ng-container *ngIf=\"currentPerfEntityStateData\">\n            <div id=\"entity-charts-label\">\n               {{\"vsan.perf.advanced.dashboards.entity.graphs.filter.label\" | localized}}\n            </div>\n            <div class=\"chart-labels-container\">\n               <clr-checkbox-wrapper *ngFor=\"let graph of graphsForSelectedEntity; let i = index;\">\n                  <input type=\"checkbox\"\n                         clrCheckbox\n                         id=\"graphs-{{i}}\"\n                         name=\"graphs-{{i}}\"\n                         class=\"chart-toggle\"\n                         title=\"{{graph.label}}\"\n                         [ngModel]=\"isGraphDisplayed(graph.id)\"\n                         (change)=\"toggleGraphDisplay(graph)\"/>\n                  <label>{{graph.label}}</label>\n               </clr-checkbox-wrapper>\n            </div>\n         </ng-container>\n      </ng-container>\n      <div id=\"action-button-bar\"\n           *ngIf=\"isZoomed\">\n         <button id=\"zoom-btn\"\n                 (click)=\"onZoomOut()\"\n                 class=\"btn btn-sm btn-link\">\n            {{\"vsan.perf.chart.zoom\" | localized}}\n         </button>\n      </div>\n      <ng-container *ngIf=\"!currentPerfEntityStateData\">\n         <vsan-advanced-perf-sub-entity-dashboard\n               *ngIf=\"isNestedDashboard(currentDashboardView.view) && hasGraphMetricsData\"\n               [displayedGraphs]=\"displayedGraphs\"\n               [perfEntitiesStateData]=\"perfEntitiesStateData\"\n               [(preselectSubEntityName)]=\"preselectSubEntityName\"\n               [view]=\"currentDashboardView.view\"\n               [zoomOption]=\"zoomOption\"\n               (zoom)=\"onChartZoomIn($event)\"\n               (entitySelected)=\"onSubEntitySelected($event)\">\n         </vsan-advanced-perf-sub-entity-dashboard>\n         <ng-container *ngIf=\"!isNestedDashboard(currentDashboardView.view)\">\n            <nav class=\"sidenav\" *ngFor=\"let objectInfo of managedObjectExInfo; let i=index\">\n               <section class=\"nav-group collapsible\" *ngIf=\"getPerfStateData(objectInfo)\">\n                  <div class=\"nav-label vsan-actions\">\n                     <input id=\"check-{{i}}\" type=\"checkbox\">\n                     <label for=\"check-{{i}}\">\n                        <clr-icon [attr.shape]=\"objectInfo.icon\" class=\"is-info\"></clr-icon>\n                        <span class=\"entity-name\">{{objectInfo.name}}</span>\n                     </label>\n                     <button (click)=\"showAllCharts(objectInfo)\"\n                             *ngIf=\"getDashboardGraphs(currentDashboardView)?.length > 2\"\n                             class=\"btn btn-sm btn-link\"\n                             id=\"show-all-btn-{{i}}\">\n                        {{\"vsan.perf.advanced.dashboards.entity.graphs.showAll.label\" | localized}}\n                     </button>\n                  </div>\n                  <vsan-perf-charts-container id=\"charts-container-{{objectInfo.vsanUuid}}-{{i}}\"\n                                              class=\"nav-content\"\n                                              [data]=\"getGraphsByEntityData(getPerfStateData(objectInfo))\"\n                                              [isShowAllLinkVisible]=\"false\"\n                                              [isZoomButtonVisible]=\"false\"\n                                              [isShowGraphDescription]=\"false\"\n                                              [showHeaderSection]=\"false\"\n                                              [looseXAxisLabel]=\"true\"\n                                              [compactMode]=\"displayedGraphs?.length > 2\"\n                                              [zoomOutOptions]=\"zoomOption\"\n                                              (zoom)=\"onChartZoomIn($event)\"\n                                              [chartLegendPosition]=\"displayedGraphs?.length > 2 ? 'bottom': 'right'\"\n                                              [isEmptyChartsVisible]=\"!errorMessage\">\n                  </vsan-perf-charts-container>\n               </section>\n            </nav>\n         </ng-container>\n      </ng-container>\n      <vsan-advanced-perf-detailed-dashboard\n            *ngIf=\"currentPerfEntityStateData\"\n            [entityName]=\"selectedPerfEntityName\"\n            [entityIcon]=\"selectedPerfEntityIcon\"\n            [graphData]=\"getGraphsByEntityData(currentPerfEntityStateData)\"\n            [parentHost]=\"selectedPerfEntityParentHost\"\n            [zoomOption]=\"zoomOption\"\n            (zoom)=\"onChartZoomIn($event)\"\n            (showLessClicked)=\"showLessCharts()\">\n      </vsan-advanced-perf-detailed-dashboard>\n   </ng-container>\n</ng-container>\n"]}