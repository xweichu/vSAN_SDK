{"version":3,"sources":["./src/app/vsan/capacity/usage/breakdown/capacity-breakdown.html","./src/app/vsan/capacity/mounted-datastores/mounted-datastores-capacity.html","./src/app/vsan/capacity/usage/breakdown/capacity-breakdown-snapshots.html","./src/app/vsan/capacity/usage/breakdown/capacity-breakdown-categories.html","./src/app/vsan/common/component/capacity/system-capacity-breakdown.html","./src/app/vsan/capacity/usage/breakdown/capacity-breakdown-pie-chart.html","./src/app/vsan/common/component/capacity/snapshot-capacity-breakdown.component.ts","./src/app/vsan/capacity/mounted-datastores/remote-datastore-capacity-card.html","./src/app/vsan/capacity/usage/capacity-overview.html","./src/app/vsan/capacity/capacity.html","./src/app/vsan/capacity/usage/capacity-analysis.html","./src/app/vsan/common/component/capacity/snapshot-capacity-breakdown.html","./src/app/vsan/capacity/usage/remote-capacity.html","./src/app/vsan/capacity/usage/capacity-datastores-overview.html","./src/app/vsan/capacity/usage/capacity-datastores-overview.component.ts","./src/app/vsan/capacity/usage/breakdown/capacity-breakdown-snapshots.component.ts","./src/app/vsan/capacity/mounted-datastores/mounted-datastores-capacity.component.ts","./src/app/vsan/capacity/capacity.component.ts","./src/app/vsan/capacity/usage/capacity-overview.component.ts","./src/app/vsan/capacity/usage/capacity-analysis.component.ts","./src/app/vsan/common/component/capacity/user-capacity-breakdown.component.ts","./src/app/vsan/common/component/capacity/vm-capacity-breakdown.html","./src/app/vsan/capacity/capacity.module.ts","./src/app/vsan/capacity/mounted-datastores/remote-datastore-capacity-card.component.ts","./src/app/vsan/capacity/usage/breakdown/capacity-breakdown-categories.component.ts","./src/app/vsan/common/component/capacity/vm-capacity-breakdown.component.ts","./src/app/vsan/capacity/usage/capacity-usage.component.ts","./src/app/vsan/capacity/usage/remote-capacity.component.ts","./src/app/vsan/capacity/usage/capacity-usage.html","./src/app/vsan/capacity/history/capacity-history.component.ts","./src/app/vsan/common/component/capacity/user-capacity-breakdown.html","./src/app/vsan/capacity/usage/capacity-analysis.service.ts","./src/app/vsan/capacity/history/capacity-history.html","./src/app/vsan/capacity/usage/breakdown/capacity-breakdown-pie-chart.component.ts","./src/app/vsan/common/util/vsan-signpost-util.ts","./src/app/vsan/capacity/usage/breakdown/capacity-breakdown.component.ts","./src/app/vsan/common/component/capacity/system-capacity-breakdown.component.ts","./src/app/vsan/common/component/capacity/capacity-breakdown-item.component.ts"],"names":[],"mappings":"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","file":"68-es2015.js","sourcesContent":["<!-- Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div class=\"card\">\n   <h4 class=\"card-header\">{{breakdownTitle}}</h4>\n   <div class=\"card-block\">\n      <!-- If cluster is empty(e.g. no disk groups, no data breakdown is available -->\n      <span id=\"capacity-breakdown-no-data-usage\" *ngIf=\"totalUsedSpace === 0\">\n               {{\"vsan.monitor.capacity.noSpaceUsed.label\" | localized}}\n      </span>\n      <ng-container *ngIf=\"totalUsedSpace > 0\">\n         <ng-container *ngIf=\"isVsanMaxEnabled; else vsanBreakdownCategories\">\n            <div id=\"capacity-breakdown-tabs\"\n                 role=\"tablist\"\n                 class=\"btn-group btn-outline-primary btn-sm\"\n                 [attr.aria-label]=\"'vsan.monitor.capacity.usage.breakdown.tabList.label'|localized\">\n               <button id=\"capacity-breakdown-categories-tab\"\n                       role=\"tab\"\n                       class=\"btn\"\n                       aria-controls=\"capacity-breakdown-categories\"\n                       (click)=\"currentBreakdownPerspective = CapacityBreakdownPerspective.CATEGORIES\"\n                       [attr.aria-selected]=\"CapacityBreakdownPerspective.CATEGORIES === currentBreakdownPerspective\"\n                       [ngClass]=\"{'btn-primary': CapacityBreakdownPerspective.CATEGORIES === currentBreakdownPerspective}\">\n                  {{\"vsan.monitor.capacity.usage.breakdown.categories\"|localized}}\n               </button>\n               <button id=\"capacity-breakdown-snapshots-tab\"\n                       role=\"tab\"\n                       class=\"btn\"\n                       aria-controls=\"capacity-breakdown-snapshots\"\n                       (click)=\"currentBreakdownPerspective = CapacityBreakdownPerspective.SNAPSHOTS\"\n                       [attr.aria-selected]=\"CapacityBreakdownPerspective.SNAPSHOTS === currentBreakdownPerspective\"\n                       [ngClass]=\"{'btn-primary': CapacityBreakdownPerspective.SNAPSHOTS === currentBreakdownPerspective}\">\n                  {{\"vsan.monitor.capacity.usage.breakdown.snapshots\"|localized}}\n               </button>\n            </div>\n\n            <ng-container *ngIf=\"currentBreakdownPerspective === CapacityBreakdownPerspective.CATEGORIES\">\n               <ng-container *ngTemplateOutlet=\"vsanBreakdownCategories\"></ng-container>\n            </ng-container>\n            <vsan-capacity-breakdown-snapshots *ngIf=\"currentBreakdownPerspective === CapacityBreakdownPerspective.SNAPSHOTS\"\n                                               id=\"capacity-breakdown-snapshots\"\n                                               [capacityData]=\"capacityData\"\n                                               [totalUsedSpace]=\"totalUsedSpace\">\n            </vsan-capacity-breakdown-snapshots>\n         </ng-container>\n      </ng-container>\n   </div>\n   <div class=\"card-footer\">\n      <a class=\"card-link\" id=\"cns-capacity-link\"\n         *ngIf=\"capabilityData?.isCnsVolumesSupported && isCnsConfigured\"\n         href=\"javascript://\"\n         (click)=\"navigateToCns()\">\n         {{\"vsan.monitor.capacity.usage.breakdown.category.links.containers\" | localized}}\n      </a>\n      <a class=\"card-link\" id=\"fs-capacity-link\"\n         *ngIf=\"capabilityData?.isFileServiceSupported && isFileServicesConfigured\"\n         href=\"javascript://\"\n         (click)=\"navigateToFileServices()\">\n         {{\"vsan.monitor.capacity.usage.breakdown.category.links.file.services\" | localized}}\n      </a>\n   </div>\n</div>\n\n<ng-template #vsanBreakdownCategories>\n   <vsan-capacity-breakdown-categories id=\"capacity-breakdown-categories\"\n                                       [capacityData]=\"capacityData\"\n                                       [showHeader]=\"!isVsanMaxEnabled\"\n                                       [totalUsedSpace]=\"totalUsedSpace\">\n   </vsan-capacity-breakdown-categories>\n</ng-template>","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-validation [allowClose]=\"false\"\n                 alertType=\"info\"\n                 [alert]=\"'vsan.monitor.capacity.computeOnlyCluster.infoMessage' | localized\">\n</vsan-validation>\n<div class=\"clr-row\">\n   <div *ngFor=\"let mountedDatastore of datastoreCapacityUsages\"\n        class=\"card-column clr-col-12 clr-col-lg-6\">\n      <vsan-remote-datastore-capacity-card [shareableDatastore]=\"mountedDatastore.shareableDatastore\">\n      </vsan-remote-datastore-capacity-card>\n   </div>\n</div>\n","<!-- Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div class=\"clr-row\">\n   <div class=\"clr-col-12 clr-col-lg-5\">\n      <!-- Snapshots and current data section -->\n      <vsan-snapshot-capacity-breakdown [totalUsedSpace]=\"totalUsedSpace\"\n                                        [nonSnapshotDataUsage]=\"nonSnapshotDataUsage\"\n                                        [(isExpanded)]=\"isSnapshotsCategoryExpanded\"\n                                        [isDrilldown]=\"selectedDrillDownCategory === CapacityDrillDownType.SNAPSHOTS\"\n                                        [snapshotCapacity]=\"capacityData.snapshotUsageCapacity\">\n      </vsan-snapshot-capacity-breakdown>\n   </div>\n\n   <div id=\"capacity-breakdown-snapshots-pie-chart\"\n        class=\"clr-col-12 clr-col-lg-7\">\n      <vsan-capacity-breakdown-pie-chart [capacityData]=\"capacityData\"\n                                         [capacityBreakdownPerspective]=\"CapacityBreakdownPerspective.SNAPSHOTS\"\n                                         (drillDownCategoryChange)=\"drillDownCategoryChange($event)\">\n      </vsan-capacity-breakdown-pie-chart>\n   </div>\n</div>","<!-- Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div class=\"clr-row\">\n   <div id=\"capacity-breakdown\" class=\"clr-col-12 clr-col-lg-5\">\n      <div id=\"capacity-breakdown-header\">\n         <div *ngIf=\"showHeader\">{{\"vsan.monitor.capacity.usage.breakdown.categories\"|localized}}</div>\n         <div>\n            <button class=\"btn btn-sm btn-link\" (click)=\"toggleExpanded()\">\n               <ng-container *ngIf=\"allExpanded; else collapsed\">\n                  {{\"vsan.monitor.capacity.usage.breakdown.collapse\"|localized}}\n               </ng-container>\n               <ng-template #collapsed>\n                  {{\"vsan.monitor.capacity.usage.breakdown.expand\"|localized}}\n               </ng-template>\n            </button>\n         </div>\n      </div>\n      <div id=\"vm-capacity-breakdown\" *ngIf=\"hasVmCapacity()\">\n         <vsan-vm-capacity-breakdown\n               [vmCapacity]=\"capacityData.vmCapacity\"\n               [totalSpace]=\"totalUsedSpace\"\n               [(isExpanded)]=\"isVmCategoryExpanded\"\n               [isDrilldown]=\"selectedDrillDownType === CapacityDrillDownType.VM\">\n         </vsan-vm-capacity-breakdown>\n      </div>\n      <!-- User objects breakdown -->\n      <div id=\"user-objects-capacity-breakdown\" *ngIf=\"hasUserCapacity()\">\n         <vsan-user-capacity-breakdown\n               [userObjectsCapacity]=\"capacityData.userObjectsCapacity\"\n               [totalSpace]=\"totalUsedSpace\"\n               [(isExpanded)]=\"isUserObjectsCategoryExpanded\"\n               [isDrilldown]=\"selectedDrillDownType === CapacityDrillDownType.USER_OBJECTS\">\n         </vsan-user-capacity-breakdown>\n      </div>\n      <!-- System objects breakdown -->\n      <div id=\"system-objects-capacity-breakdown\" *ngIf=\"hasSystemCapacity()\">\n         <vsan-system-capacity-breakdown\n               [systemUsageCapacity]=\"capacityData.systemUsageCapacity\"\n               [spaceEfficiency]=\"capacityData.spaceEfficiencyCapacity?.spaceEfficiencyConfig\"\n               [totalSpace]=\"totalUsedSpace\"\n               [(isExpanded)]=\"isSystemCategoryExpanded\"\n               [isDrilldown]=\"selectedDrillDownType === CapacityDrillDownType.SYSTEM_OBJECTS\">\n         </vsan-system-capacity-breakdown>\n      </div>\n   </div>\n   <div id=\"capacity-breakdown-pie-chart\"\n        class=\"clr-col-12 clr-col-lg-7\"\n        *ngIf=\"hasVmCapacity() || hasSystemCapacity() || hasUserCapacity()\">\n      <vsan-capacity-breakdown-pie-chart [capacityData]=\"capacityData\"\n                                         [capacityBreakdownPerspective]=\"CapacityBreakdownPerspective.CATEGORIES\"\n                                         [(isDrillDown)]=\"isDrillDown\"\n                                         (drillDownCategoryChange)=\"drillDownCategoryChange($event)\">\n      </vsan-capacity-breakdown-pie-chart>\n   </div>\n</div>","<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-tree>\n   <clr-tree-node>\n      <div id=\"capacity-color-system\"></div>\n      <span>\n         {{getTotalCapacityLabel(systemUsageCapacity.totalSystemUsage,\n            'vsan.monitor.capacity.usage.breakdown.category.system')}}\n      </span>\n      <ng-template [(clrIfExpanded)]=\"isExpanded\">\n         <div [ngClass]=\"{'capacity-breakdown-expanded': isDrilldown}\">\n            <!-- Performance management objects -->\n            <div id=\"performnance-capacity-breakdown\"\n                 *ngIf=\"systemUsageCapacity.performanceMgmtObjects\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.system.performance\"|localized}}</div>\n               <div>\n                  {{getFormattedCapacity(systemUsageCapacity.performanceMgmtObjects, systemUsageCapacity.totalSystemUsage)}}\n               </div>\n            </div>\n            <!-- File service overhead -->\n            <div id=\"file-service-capacity-breakdown\"\n                 *ngIf=\"systemUsageCapacity.fileServiceOverhead\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>\n                  {{\"vsan.monitor.capacity.usage.breakdown.category.system.file.system.overhead\"|localized}}\n               </div>\n               <div>\n                  {{getFormattedCapacity(systemUsageCapacity.fileServiceOverhead, systemUsageCapacity.totalSystemUsage)}}\n               </div>\n            </div>\n            <!-- HA metadata object -->\n            <div id=\"ha-metadata-object\"\n                 *ngIf=\"systemUsageCapacity.haMetadataObject\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>\n                  {{\"vsan.monitor.capacity.usage.breakdown.category.system.haMetadataObject\"|localized}}\n               </div>\n               <div>\n                  {{getFormattedCapacity(systemUsageCapacity.haMetadataObject, systemUsageCapacity.totalSystemUsage)}}\n               </div>\n            </div>\n            <!-- Checksum overhead -->\n            <div id=\"checksum-overhead-capacity-breakdown\"\n                 *ngIf=\"systemUsageCapacity.checksumOverhead\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>\n                  {{\"vsan.monitor.capacity.usage.breakdown.category.system.checksum.overhead\"|localized}}\n               </div>\n               <div>\n                  {{getFormattedCapacity(systemUsageCapacity.checksumOverhead, systemUsageCapacity.totalSystemUsage)}}\n               </div>\n            </div>\n            <!-- space efficiency overhead -->\n            <div id=\"space-efficiency-overhead-capacity-breakdown\"\n                 *ngIf=\"systemUsageCapacity.spaceEfficiencyOverhead\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>\n                  {{spaceEfficiencyOverheadLabel}}\n               </div>\n               <div>\n                  {{getFormattedCapacity(systemUsageCapacity.spaceEfficiencyOverhead, systemUsageCapacity.totalSystemUsage)}}\n               </div>\n            </div>\n            <!-- Transient space overhead -->\n            <div id=\"transient-capacity-breakdown\"\n                 *ngIf=\"systemUsageCapacity.transientSpace\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>\n                  {{\"vsan.monitor.capacity.usage.breakdown.category.system.transient\"|localized}}\n               </div>\n               <div>\n                  {{getFormattedCapacity(systemUsageCapacity.transientSpace, systemUsageCapacity.totalSystemUsage)}}\n               </div>\n            </div>\n         </div>\n      </ng-template>\n   </clr-tree-node>\n</clr-tree>\n","<!-- Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-pie-chart *ngIf=\"!isDrillDown\"\n                [sections]=\"summaryCapacityData\"\n                [innerSize]=\"'50%'\"\n                [showTotal]=\"true\"\n                [startAngle]=\"-45\"\n                (selection)=\"drillDown($event)\">\n</vsan-pie-chart>\n<!-- When user clicks on a section show a drill down of the capacity-->\n<vsan-pie-chart *ngIf=\"isDrillDown\"\n                [sections]=\"breakdownCapacityData\"\n                [innerSize]=\"'50%'\"\n                [showTotal]=\"true\"\n                [totalLabel]=\"breakdownTotalLabel\"\n                (totalClick)=\"drillOut()\"\n                [startAngle]=\"-45\">\n</vsan-pie-chart>","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, Input} from \"@angular/core\";\nimport {CapacityBreakdownItemComponent} from \"./capacity-breakdown-item.component\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {SnapshotCapacityData} from \"@generated/snapshot-capacity-data\";\n\n@Component({\n   templateUrl: \"snapshot-capacity-breakdown.html\",\n   styleUrls: [\"snapshot-capacity-breakdown.scss\"],\n   selector: \"vsan-snapshot-capacity-breakdown\",\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SnapshotCapacityBreakdownComponent extends CapacityBreakdownItemComponent {\n\n   @Input()\n   totalUsedSpace: number;\n\n   @Input()\n   nonSnapshotDataUsage: number;\n\n   @Input()\n   snapshotCapacity: SnapshotCapacityData;\n\n   constructor(capacityService: VsanCapacityService) {\n      super(capacityService);\n   }\n}","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"card\">\n   <h4 class=\"card-header\">{{getTitle()}}</h4>\n   <div class=\"card-block\">\n      <vsan-validation *ngIf=\"shareableDatastore.capacityData?.reducedCapacityMessages?.length\"\n                       [allowClose]=\"false\"\n                       alertType=\"info\"\n                       [alerts]=\"shareableDatastore.capacityData?.reducedCapacityMessages\">\n      </vsan-validation>\n      <vsan-capacity-overview-chart\n            *ngIf=\"shareableDatastore.capacityData?.totalSpace\"\n            [capacityData]=\"shareableDatastore.capacityData\"\n            [showFreeSpaceOnDisk]=\"false\">\n      </vsan-capacity-overview-chart>\n   </div>\n   <div class=\"card-footer\">\n      <button class=\"btn btn-sm btn-link\"\n              (click)=\"navigateToDatastoreCapacity()\">\n         {{'vsan.monitor.capacity.computeOnlyCluster.datastoreCard.viewDetailsButton' | localized}}\n      </button>\n   </div>\n</div>\n","<!--Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"card\" id=\"capacity-overview\">\n   <h4 class=\"card-header\">{{\"vsan.monitor.capacity.overview.title\" | localized}}</h4>\n   <div class=\"card-block\">\n      <!-- If cluster is empty(e.g. no disk groups, no data breakdown is available -->\n      <span id=\"capacity-overview-no-data-usage\" *ngIf=\"capacityData.totalSpace == 0\">\n         {{\"vsan.monitor.capacity.noSpaceUsed.label\" | localized}}\n      </span>\n      <ng-container *ngIf=\"capacityData.totalSpace > 0\">\n         <vsan-capacity-overview-chart [capacityData]=\"capacityData\"\n                                       [isVsanMaxEnabled]=\"isVsanMaxEnabled\"\n                                       [(hoveredSeries)]=\"hoveredSeries\">\n         </vsan-capacity-overview-chart>\n      </ng-container>\n   </div>\n   <div class=\"card-footer\"\n        *ngIf=\"clusterCapabilityData.isSlackSpaceReservationSupported && capacityData.slackSpaceCapacityData\">\n      <ng-container *ngIf=\"!showReservationCapacityLegend\">\n         <ng-container *ngIf=\"isCustomizableThresholdsSupportedOnVc && capacityManagementStatus.isAvailable\">\n            <span *ngIf=\"capacityManagementStatus.isCapacityReservationAvailable\">\n               {{\"vsan.monitor.capacity.overview.enforceReservationAndAlertThreshold.prompt\" | localized}}\n            </span>\n            <span *ngIf=\"!capacityManagementStatus.isCapacityReservationAvailable\">\n               {{\"vsan.monitor.capacity.overview.alertThreshold.prompt\" | localized}}\n            </span>\n         </ng-container>\n         <span *ngIf=\"!isCustomizableThresholdsSupportedOnVc\"\n               [ngClass]=\"{'disable-action': !capacityManagementStatus.isCapacityReservationAvailable}\">\n            {{\"vsan.monitor.capacity.overview.enforceReservation.prompt\" | localized}}\n         </span>\n      </ng-container>\n      <vsan-capacity-legend *ngIf=\"showReservationCapacityLegend\"\n                            [chartSectionData]=\"getReservationData()\"\n                            [used]=\"capacityData.usedSpace\"\n                            [total]=\"capacityData.totalSpace\"\n                            [hoveredSeries]=\"hoveredSeries\">\n      </vsan-capacity-legend>\n      <button class=\"btn btn-sm btn-link\"\n              [disabled]=\"!capacityManagementStatus.isAvailable\"\n              [title]=\"capacityManagementStatus.description\"\n              (click)=\"configureCapacityManagement()\">\n         {{\"vsan.services.enforcereservation.action.title\" | localized}}\n      </button>\n   </div>\n</div>\n","<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<h5 vsan-auto-focus>\n   {{\"vsan.monitor.capacity\" | localized}}\n</h5>\n\n<div *ngIf=\"loading\" class=\"spinner central-spinner\">{{\"vsan.loading\" | localized}}</div>\n\n<vsan-validation *ngIf=\"errorMessage\" [alert]=\"errorMessage\"></vsan-validation>\n\n<ng-container *ngIf=\"!loading && !errorMessage\">\n   <!--\n       Include the remote mounted datastores capacity even in case of unavailable view,\n       because the current cluster might not have capacity, but the remote ones can have.\n    -->\n   <vsan-remote-capacity *ngIf=\"!isComputeOnlyCluster && remoteDatastores.length\"\n                         [remoteDatastores]=\"remoteDatastores\">\n   </vsan-remote-capacity>\n\n   <vsan-unavailable-view *ngIf=\"unavailableViewSpec\"\n                          [unavailableViewSpec]=\"unavailableViewSpec\"\n                          [clusterRef]=\"clusterRef\"\n                          [hasEditPrivilege]=\"hasEditPermission\"\n                          [displayQuickstartBtn]=\"true\">\n   </vsan-unavailable-view>\n\n   <ng-container *ngIf=\"!unavailableViewSpec\">\n      <!-- Compute only cluster's capacity -->\n      <vsan-mounted-datastores-capacity\n            *ngIf=\"isComputeOnlyCluster && computeOnlyDatastores.length\"\n            [datastoreCapacityUsages]=\"computeOnlyDatastores\">\n      </vsan-mounted-datastores-capacity>\n\n      <!-- Regular vSAN cluster capacity -->\n      <ng-container *ngIf=\"!isComputeOnlyCluster\">\n         <div id=\"capacity-views\"\n              role=\"tablist\"\n              *ngIf=\"includeNavigation\"\n              class=\"btn-group btn-outline-primary btn-sm\"\n              [attr.aria-label]=\"'vsan.monitor.capacity.tablist.label'|localized\">\n            <button id=\"capacity-view-0\"\n                    role=\"tab\"\n                    class=\"btn\"\n                    aria-controls=\"capacity-usage-panel\"\n                    (click)=\"currentView = CapacityView.USAGE\"\n                    [attr.aria-selected]=\"CapacityView.USAGE == currentView\"\n                    [ngClass]=\"{'btn-primary': CapacityView.USAGE == currentView}\">\n               {{\"vsan.monitor.capacity.views.capacity.usage\"|localized}}\n            </button>\n            <button id=\"capacity-view-1\"\n                    role=\"tab\"\n                    class=\"btn\"\n                    aria-controls=\"capacity-history-panel\"\n                    (click)=\"currentView = CapacityView.HISTORY\"\n                    [attr.aria-selected]=\"CapacityView.HISTORY == currentView\"\n                    [ngClass]=\"{'btn-primary': CapacityView.HISTORY == currentView}\">\n               {{\"vsan.monitor.capacity.views.capacity.history\" | localized}}\n            </button>\n         </div>\n         <vsan-capacity-usage id=\"capacity-usage-panel\"\n                              role=\"tabpanel\"\n                              aria-labelledby=\"capacity-view-0\"\n                              [(selectedDatastoreType)]=\"selectedDatastoreType\"\n                              [datastoresCapacityData]=\"datastoresCapacityData\"\n                              [isVsanMaxEnabled]=\"isVsanMaxEnabled\"\n                              [isVisible]=\"currentView === CapacityView.USAGE\">\n         </vsan-capacity-usage>\n         <vsan-capacity-history *ngIf=\"isHistoricalCapacitySupported && historyViewVisited\"\n                                id=\"capacity-history-panel\"\n                                role=\"tabpanel\"\n                                aria-labelledby=\"capacity-view-1\"\n                                [isVisible]=\"currentView === CapacityView.HISTORY\">\n         </vsan-capacity-history>\n      </ng-container>\n   </ng-container>\n</ng-container>\n","<!-- Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div class=\"card\" id=\"capacity-overview\">\n   <h4 class=\"card-header\">{{'vsan.monitor.capacity.analysis.title' | localized}}</h4>\n\n   <div class=\"card-block\" *ngIf=\"loading\">\n      <span class=\"busy-backdrop\">\n         <span class=\"spinner central-spinner\">{{\"vsan.loading\" | localized }}</span>\n      </span>\n   </div>\n\n   <ng-container *ngIf=\"!loading\">\n      <div class=\"card-block\" *ngIf=\"errorMessage\">\n         <vsan-validation [alert]=\"errorMessage\" [allowClose]=\"false\"></vsan-validation>\n      </div>\n      <ng-container *ngIf=\"!errorMessage\">\n         <!-- If cluster is empty(e.g. no disk groups, no data breakdown is available -->\n         <div id=\"capacity-breakdown-no-data-usage\"\n              class=\"card-block empty-card\"\n              *ngIf=\"capacityData?.totalSpace === 0\">\n            {{'vsan.monitor.capacity.noSpaceUsed.label' | localized}}\n         </div>\n         <!-- If the user does not have permissions to read the storage policies -->\n         <div id=\"capacity-analysis-no-policy-read-permission\"\n              class=\"card-block empty-card\"\n              *ngIf=\"capacityData?.totalSpace > 0 && !hasReadPoliciesPermissions\">\n            {{'vsan.monitor.capacity.analysis.noReadPoliciesPermissions' | localized}}\n         </div>\n         <ng-container *ngIf=\"capacityData?.totalSpace > 0 && hasReadPoliciesPermissions\">\n            <!-- What-if analysis card -->\n            <div class=\"card-block\">\n               <div class=\"card-title\">\n                  {{\"vsan.monitor.capacity.analysis.policy.effectiveFreeSpace\" | localized}}\n               </div>\n               <div id=\"what-if-policy-analysis\" class=\"clr-row\">\n                  <div id=\"what-if-policy-select\" class=\"clr-col-lg-5 clr-col-12\">\n                     <clr-select-container class=\"horizontal-layout label-auto-size\">\n                        <label id=\"what-if-policy-label\" for=\"selected-policy\">\n                           {{'vsan.monitor.capacity.analysis.policy.label' | localized}}\n                        </label>\n                        <select id=\"selected-policy\" clrSelect name=\"selectedPolicy\"\n                                [disabled]=\"!availablePolicies.length\"\n                                [(ngModel)]=\"selectedPolicy\">\n                           <option *ngFor=\"let policy of availablePolicies\"\n                                   [selected]=\"policy.id == selectedPolicy.id\"\n                                   [ngValue]=\"policy\">\n                              {{policy.name}}\n                           </option>\n                        </select>\n                     </clr-select-container>\n                  </div>\n                  <div id=\"capacity-analysis\" class=\"clr-col-lg-7 clr-col-12\">\n                     <div *ngIf=\"!loadingWhatIfCapacity\">\n                        <span>\n                           {{\"vsan.monitor.capacity.analysis.estimated.label\" | localized}}\n                           <span class=\"bold-value\">{{this.freeWhatIfSpace | fileSize}}</span>\n                        </span>\n                        <clr-signpost id=\"{{policySignpostId}}\"\n                                      [vsan-signpost-title]=\"'vsan.monitor.capacity.analysis.signpost.label' | localized\">\n                           <clr-signpost-content *clrIfOpen [clrPosition]=\"getSignpostPosition(policySignpostId)\">\n                              {{\"vsan.monitor.capacity.analysis.description.tooltip\" | localized}}\n                           </clr-signpost-content>\n                        </clr-signpost>\n                     </div>\n                     <div *ngIf=\"loadingWhatIfCapacity\">\n                        <span class=\"spinner spinner-inline\"></span>\n                        <span>{{\"vsan.loading\" | localized }}</span>\n                     </div>\n                  </div>\n                  <div *ngIf=\"!availablePolicies.length\"\n                       class=\"disabled-tooltip\"\n                       [attr.title]=\"'vsan.common.nopermissions' | localized\">\n                  </div>\n               </div>\n            </div>\n            <!-- Oversubscription card -->\n            <div class=\"card-block\" *ngIf=\"vcCapabilityData.isCapacityOversubscriptionSupported\">\n               <div class=\"card-title\">\n                  <span>{{\"vsan.monitor.capacity.analysis.oversubscription.title\" | localized}}</span>\n                  <clr-signpost id=\"{{oversubscriptionSignpostId}}\"\n                                [vsan-signpost-title]=\"'vsan.monitor.capacity.analysis.oversubscription.signpost.label' | localized\">\n                     <clr-signpost-content *clrIfOpen [clrPosition]=\"getSignpostPosition(oversubscriptionSignpostId)\">\n                        <div>\n                           {{\"vsan.monitor.capacity.analysis.oversubscription.description.tooltip.capacityDetails\" | localized}}\n                        </div>\n                        <div>\n                           {{\"vsan.monitor.capacity.analysis.oversubscription.description.tooltip.brief\" | localized}}\n                        </div>\n                     </clr-signpost-content>\n                  </clr-signpost>\n               </div>\n               <vsan-validation id=\"capacity-oversubscription-info\"\n                                *ngIf=\"isConsiderSpaceEfficiency\"\n                                alert=\"{{'vsan.monitor.capacity.analysis.oversubscription.considerDedupAndComp.info' | localized}}\"\n                                [allowClose]=\"false\"\n                                [isSmall]=\"true\"\n                                alertType=\"info\">\n               </vsan-validation>\n               <div class=\"clr-row\">\n                  <clr-checkbox-wrapper *ngIf=\"showSpaceEfficiencyOption\" class=\"clr-col-lg-12\">\n                     <input id=\"checkbox-consider-space-efficiency\"\n                            type=\"checkbox\"\n                            [(ngModel)]=\"isConsiderSpaceEfficiency\"\n                            clrCheckbox/>\n                     <label>{{considerSpaceEfficiencyLabel}}</label>\n                  </clr-checkbox-wrapper>\n                  <div class=\"clr-col-lg-5 clr-col-12\">\n                     <span id=\"oversubscription-brief-description\">\n                        {{\"vsan.monitor.capacity.analysis.oversubscription.label\" | localized}}\n                     </span>\n                  </div>\n                  <div class=\"clr-col-lg-7 clr-col-12\">\n                     <span id=\"oversubscription-usage-label\">\n                        {{\"vsan.monitor.capacity.analysis.oversubscription.usage\" | localized}}\n                     </span>\n                     <span id=\"oversubscription-usage-value\" class=\"bold-value\">{{uncommittedSpace | fileSize}}</span>\n                     (<span id=\"oversubscription-uncommited-ratio\" class=\"label\">{{whatIfUncommittedRatio}}</span>\n                     <span id=\"oversubscription-available-capacity\">{{whatIfAvailableCapacityLabel}}</span>)\n                  </div>\n               </div>\n            </div>\n         </ng-container>\n      </ng-container>\n   </ng-container>\n</div>\n","<!--Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-tree *ngIf=\"snapshotCapacity?.totalUsage; else snapshotCapacityTotal\">\n   <clr-tree-node>\n      <ng-container *ngTemplateOutlet=\"snapshotCapacityTotal\"></ng-container>\n      <ng-template [(clrIfExpanded)]=\"isExpanded\">\n         <div [ngClass]=\"{'capacity-breakdown-expanded': isDrilldown}\">\n            <!-- VMDK snapshot usage -->\n            <div *ngIf=\"snapshotCapacity.vmdk\"\n                 id=\"capacity-snapshots-breakdown-vmdk\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.snapshots.vmdk\"|localized}}</div>\n               <div>{{getFormattedCapacity(snapshotCapacity.vmdk, snapshotCapacity.totalUsage)}}</div>\n            </div>\n            <!-- VM memory snapshots -->\n            <div *ngIf=\"snapshotCapacity.vmMemory\"\n                 id=\"capacity-snapshots-breakdown-vmem\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>\n                  {{\"vsan.monitor.capacity.usage.breakdown.category.vm.memory.snapshots\"|localized}}\n               </div>\n               <div>\n                  {{getFormattedCapacity(snapshotCapacity.vmMemory, snapshotCapacity.totalUsage)}}\n               </div>\n            </div>\n         </div>\n      </ng-template>\n   </clr-tree-node>\n</clr-tree>\n\n<!-- Current data section -->\n<div id=\"capacity-breakdown-snapshots-current-data\"\n     class=\"breakdown-category breakdown-item\"\n     [ngClass]=\"{'current-data-indent': snapshotCapacity?.totalUsage}\">\n   <div id=\"capacity-color-current-data\"></div>\n   <span>{{\"vsan.monitor.capacity.usage.breakdown.category.currentData\" | localized}}</span>\n   <clr-signpost id=\"capacity-breakdown-current-data-signpost\"\n                 [vsan-signpost-title]=\"'vsan.monitor.capacity.usage.breakdown.category.currentData.signpost.label' | localized\">\n      <clr-signpost-content *clrIfOpen clrPosition=\"top-right\">\n         <div>{{\"vsan.monitor.capacity.usage.breakdown.category.currentData.signpost\" | localized}}</div>\n      </clr-signpost-content>\n   </clr-signpost>\n   <div>{{getFormattedCapacity(nonSnapshotDataUsage, totalUsedSpace)}}</div>\n</div>\n\n<ng-template #snapshotCapacityTotal>\n   <div id=\"capacity-breakdown-snapshots-total\"\n        class=\"breakdown-category breakdown-item\">\n      <div id=\"capacity-color-snapshots\"></div>\n      <span>{{\"vsan.monitor.capacity.usage.breakdown.category.snapshots\" | localized}}</span>\n      <clr-signpost id=\"capacity-breakdown-snapshots-signpost\"\n                    [vsan-signpost-title]=\"'vsan.monitor.capacity.usage.breakdown.category.snapshots.signpost.label' | localized\">\n         <clr-signpost-content *clrIfOpen clrPosition=\"top-right\">\n            <div>{{\"vsan.monitor.capacity.usage.breakdown.category.snapshots.signpost\" | localized}}</div>\n         </clr-signpost-content>\n      </clr-signpost>\n      <div>{{getFormattedCapacity(snapshotCapacity?.totalUsage, totalUsedSpace)}}</div>\n   </div>\n</ng-template>\n","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-alert [clrAlertClosable]=\"false\">\n   <clr-alert-item>\n      <span class=\"alert-text\">\n         {{\"vsan.monitor.capacity.remoteDatastoresCapacity\" | localized}}\n         <ng-container *ngFor=\"let datastore of remoteDatastores; let i = index\">\n            <clr-icon [attr.shape]=\"datastore.primaryIconId\"></clr-icon>\n            <a href=\"javascript://\"\n               (click)=\"navigateToDatastoreCapacity(datastore.moRef)\">\n               {{datastore.name}}\n            </a>\n            <ng-container *ngIf=\"i < remoteDatastores.length - 1\">, </ng-container>\n         </ng-container>\n      </span>\n   </clr-alert-item>\n</clr-alert>","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div class=\"card\">\n   <div class=\"card-block\">\n      <div *ngFor=\"let datastoreType of datastoreTypes\">\n         <clr-icon [attr.shape]=\"getUsedOverallCapacityIconShape(datastoreType)\"\n                   class=\"is-solid\"\n                   size=\"18\"\n                   [ngClass]=\"getUsedOverallCapacityIconClass(datastoreType)\">\n         </clr-icon>\n         <span>{{getDatastoreUsageLabel(datastoreType)}}</span>\n      </div>\n   </div>\n</div>","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, Input} from \"@angular/core\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {DiskMgmtUtil} from \"@util/disk-mgmt.util\";\nimport {Icon} from \"@util/icon\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   selector: \"vsan-capacity-datastores-overview\",\n   templateUrl: \"capacity-datastores-overview.html\",\n   styleUrls: [\"capacity-datastores-overview.scss\"],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CapacityDatastoresOverviewComponent {\n\n   @Input()\n   datastoresCapacityData: Map<DatastoreType, CapacityData>;\n\n   constructor(private capacityService: VsanCapacityService) {\n   }\n\n   getDatastoreUsageLabel(datastoreType: DatastoreType): string {\n      return VsanUiUtils.getString(\n            \"vsan.monitor.capacity.datastore.overview.usage\",\n            DiskMgmtUtil.getLocalizedDatastoreType(datastoreType),\n            VsanUiUtils.formatFileSize(this.getUsedSpace(datastoreType)),\n            VsanUiUtils.formatFileSize(this.getTotalSpace(datastoreType)),\n            VsanUiUtils.localizeNumber(\n                  VsanUiUtils.asPercentage(this.getUsedSpace(datastoreType), this.getTotalSpace(datastoreType))));\n   }\n\n   get datastoreTypes(): DatastoreType[] {\n      return DiskMgmtUtil.orderDatastoreTypes(Array.from(this.datastoresCapacityData.keys()));\n   }\n\n   getUsedOverallCapacityIconShape(datastoreType: DatastoreType): string {\n      // If no thresholds data is available, this could be due to no claimed disks.\n      if (!this.datastoresCapacityData.get(datastoreType).thresholds) {\n         // No thresholds to report issues against, thus returning success.\n         return Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE;\n      }\n\n      const capacityData: CapacityData = this.datastoresCapacityData.get(datastoreType);\n      const errorThreshold: number = this.getErrorThresholdPercentage(datastoreType);\n      const warningThreshold: number = this.getWarningThresholdPercentage(datastoreType);\n\n      if (this.capacityService.isUsedCapacityExceedingThreshold(capacityData, errorThreshold)) {\n         return Icon.CLR_ERROR_STANDARD_ICON_SHAPE;\n      } else if (this.capacityService.isUsedCapacityExceedingThreshold(capacityData, warningThreshold)) {\n         return Icon.CLR_WARN_STANDARD_ICON_SHAPE;\n      } else {\n         return Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE;\n      }\n   }\n\n   getUsedOverallCapacityIconClass(datastoreType: DatastoreType): string {\n      return Icon.clrIconShapeClassMap[this.getUsedOverallCapacityIconShape(datastoreType)];\n   }\n\n   private getUsedSpace(datastoreType: DatastoreType): number {\n      return this.datastoresCapacityData.get(datastoreType).usedSpace;\n   }\n\n   private getTotalSpace(datastoreType: DatastoreType): number {\n      return this.datastoresCapacityData.get(datastoreType).totalSpace;\n   }\n\n   private getErrorThreshold(datastoreType: DatastoreType): number {\n      return this.datastoresCapacityData.get(datastoreType).thresholds.errorThreshold;\n   }\n\n   private getWarningThreshold(datastoreType: DatastoreType): number {\n      return this.datastoresCapacityData.get(datastoreType).thresholds.warningThreshold;\n   }\n\n   private getErrorThresholdPercentage(datastoreType: DatastoreType): number {\n      return this.getErrorThreshold(datastoreType);\n   }\n\n   private getWarningThresholdPercentage(datastoreType: DatastoreType): number {\n      return this.getWarningThreshold(datastoreType);\n   }\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {CapacityDrillDownType} from './capacity-breakdown-pie-chart.component';\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {CapacityBreakdownPerspective} from \"./capacity-breakdown.component\";\n\n@Component({\n   templateUrl: \"capacity-breakdown-snapshots.html\",\n   styleUrls: [\"capacity-breakdown-snapshots.scss\"],\n   selector: \"vsan-capacity-breakdown-snapshots\"\n})\nexport class CapacityBreakdownSnapshotsComponent implements OnInit {\n   isSnapshotsCategoryExpanded: boolean;\n   selectedDrillDownCategory: CapacityDrillDownType = CapacityDrillDownType.NONE;\n   CapacityDrillDownType: typeof CapacityDrillDownType = CapacityDrillDownType;\n   CapacityBreakdownPerspective: typeof CapacityBreakdownPerspective = CapacityBreakdownPerspective;\n\n   nonSnapshotDataUsage: number;\n\n   @Input()\n   totalUsedSpace: number;\n\n   @Input()\n   capacityData: CapacityData;\n\n   constructor(private capacityService: VsanCapacityService) {\n   }\n\n   ngOnInit(): void {\n      this.nonSnapshotDataUsage = this.capacityService.getNonSnapshotDataUsage(\n            this.capacityData.snapshotUsageCapacity, this.totalUsedSpace);\n   }\n\n   drillDownCategoryChange(selectedDrillDownType: CapacityDrillDownType) {\n      this.selectedDrillDownCategory = selectedDrillDownType;\n      switch(selectedDrillDownType) {\n         case CapacityDrillDownType.NONE:\n            this.isSnapshotsCategoryExpanded = false;\n            break;\n         case CapacityDrillDownType.SNAPSHOTS:\n            this.isSnapshotsCategoryExpanded = true;\n            break;\n      }\n   }\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {MountedRemoteDatastore} from \"@generated/mounted-remote-datastore\";\n\n/**\n * This component shows the details for mounted datastores on a compute only cluster.\n */\n@Component({\n   templateUrl: \"mounted-datastores-capacity.html\",\n   styleUrls: [\"mounted-datastores-capacity.scss\"],\n   selector: \"vsan-mounted-datastores-capacity\",\n})\nexport class MountedDatastoresCapacityComponent {\n   @Input()\n   datastoreCapacityUsages: MountedRemoteDatastore[] = [];\n}\n","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {UnavailableViewSpec} from \"@component/unavailable-view/unavailable-view-spec\";\nimport {CapacityBasicInfo} from \"@generated/capacity-basic-info\";\nimport {CapacityBasicInfoService} from \"@generated/capacity-basic-info-service\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {CsdService} from \"@generated/csd-service\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {InventoryNode} from \"@generated/inventory-node\";\nimport {MountedRemoteDatastore} from \"@generated/mounted-remote-datastore\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\n\n@Component({\n   templateUrl: \"capacity.html\",\n   selector: \"vsan-capacity\",\n   styleUrls: [\"capacity.scss\"],\n})\nexport class CapacityComponent implements OnInit {\n   CapacityView: typeof CapacityView = CapacityView;\n\n   private _currentView: CapacityView = CapacityView.USAGE;\n\n   set currentView(view: CapacityView) {\n      this._currentView = view;\n      if (view === CapacityView.HISTORY) {\n         this.historyViewVisited = true;\n      }\n   }\n\n   get currentView(): CapacityView {\n      return this._currentView;\n   }\n\n   datastoresCapacityData: Map<DatastoreType, CapacityData>;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   clusterRef: ManagedObject;\n   isComputeOnlyCluster: boolean;\n   isVsanMaxEnabled: boolean;\n   hasEditPermission: boolean;\n   unavailableViewSpec: UnavailableViewSpec;\n   isHistoricalCapacitySupported: boolean = false;\n   historyViewVisited: boolean = false;\n\n   @ErrorMessage()\n   errorMessage: string;\n\n   selectedDatastoreType: DatastoreType;\n\n   // When this is a regular vSAN cluster we need its remote mounted datastores\n   remoteDatastores: InventoryNode[] = [];\n\n   // When this is a compute only cluster we display capacity overview of its mounted datastores\n   computeOnlyDatastores: MountedRemoteDatastore[] = [];\n\n   constructor(private capacityService: VsanCapacityService,\n         private capacityBasicInfoService: CapacityBasicInfoService,\n         private permissionService: PermissionService,\n         private csdService: CsdService) {\n   }\n\n   ngOnInit(): void {\n      this.fetch();\n   }\n\n   @RefreshHandler\n   @Loader({\n      srMessage: \"vsan.monitor.capacity\",\n      srMessageType: SrMessageType.PAGE_TITLE,\n   })\n   async fetch(): Promise<void> {\n      this.reset();\n      let capacityBasicInfo: CapacityBasicInfo;\n      [this.hasEditPermission, capacityBasicInfo] = await Promise.all([\n         this.permissionService.hasPermissions(ManagedObject.contextObject, [Privileges.EDIT_CLUSTER()]),\n         this.capacityBasicInfoService.getCapacityBasicInfo(ManagedObject.contextObject),\n      ]);\n      this.clusterRef = capacityBasicInfo.clusterRef;\n      this.isHistoricalCapacitySupported = capacityBasicInfo.isHistoricalCapacitySupported;\n      this.isComputeOnlyCluster = capacityBasicInfo.isComputeOnlyCluster;\n      this.isVsanMaxEnabled = capacityBasicInfo.isVsanMaxEnabled;\n      await this.queryCapacityData(capacityBasicInfo.isCsdSupported);\n      this.unavailableViewSpec = this.checkUnavailability(capacityBasicInfo);\n   }\n\n   private reset(): void {\n      this.unavailableViewSpec = null;\n      this.remoteDatastores = [];\n      this.computeOnlyDatastores = [];\n      this.datastoresCapacityData = null;\n   }\n\n   private async queryCapacityData(isCsdSupported: boolean): Promise<void> {\n      if (this.isComputeOnlyCluster) {\n         this.computeOnlyDatastores = await this.capacityService.getMountedDatastoresSpaceUsage(this.clusterRef);\n         return;\n      }\n      // Query the local capacity as well as any remote datastores that are mounted.\n      const promises: Promise<any>[] = [\n         this.capacityService.getCapacityDataPerDatastore(ManagedObject.contextObject, false),\n      ];\n      // For regular vSAN clusters, we also show an info message listing the mounted datastores\n      if (isCsdSupported) {\n         promises.push(this.csdService.getRemoteDatastoresInfos(this.clusterRef));\n      }\n      const result: any[] = await Promise.all(promises);\n      this.datastoresCapacityData = result[0];\n      if (isCsdSupported) {\n         this.remoteDatastores = result[1];\n      }\n   }\n\n   private checkUnavailability(basicInfo: CapacityBasicInfo): UnavailableViewSpec {\n      if (this.computeOnlyDatastores?.length || this.getTotalDatastoresCapacity() > 0) {\n         // If there is capacity data just show it.\n         // The host count check is done next because the user might lack read permissions on them,\n         // but the API will report the capacity and we can show it (PR 2830338).\n         return null;\n      }\n      if (!basicInfo.hostCount) {\n         // No hosts in the cluster or lack of privilege to query hosts.\n         return this.isComputeOnlyCluster\n               ? UnavailableViewSpec.CAPACITY_USAGE_VIEW_NO_HOSTS_COMPUTE\n               : UnavailableViewSpec.CAPACITY_USAGE_VIEW_NO_HOSTS;\n      }\n      if (!this.isComputeOnlyCluster && basicInfo.hostCount === basicInfo.faultyHostsTotalCount) {\n         // No eligible hosts in the cluster.\n         return UnavailableViewSpec.CAPACITY_USAGE_VIEW_NO_ELIGIBLE_HOSTS;\n      }\n      if (this.isComputeOnlyCluster && !this.computeOnlyDatastores?.length) {\n         // Compute cluster with no mounted datastores\n         return UnavailableViewSpec.CAPACITY_USAGE_NO_MOUNTED_DATASTORES;\n      }\n      // No claimed or healthy disks.\n      return UnavailableViewSpec.CAPACITY_USAGE_VIEW_NO_CLAIMED_DISKS;\n   }\n\n   private getTotalDatastoresCapacity(): number {\n      if (!this.datastoresCapacityData?.size) {\n         return 0;\n      }\n      let result: number = 0;\n      this.datastoresCapacityData.forEach((datastoreCapacity: CapacityData) =>\n            result += datastoreCapacity.totalSpace);\n      return result;\n   }\n\n   get includeNavigation(): boolean {\n      // When supporting historical capacity, there are 2 views, we need the navigation tabs.\n      // Otherwise, there is only one view and we don't need it.\n      return this.isHistoricalCapacitySupported;\n   }\n}\n\nexport enum CapacityView {\n   USAGE,\n   HISTORY,\n}\n","/* Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {UpgradeData} from \"@component/upgrade/upgrade.data\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {CapacityManagementStatus, CapacityReservationUtil} from \"@util/capacity-reservation-util\";\n\n@Component({\n   templateUrl: \"capacity-overview.html\",\n   styleUrls: [\"capacity-overview.scss\"],\n   selector: \"vsan-capacity-overview\",\n})\nexport class CapacityOverviewComponent {\n\n   @Input()\n   capacityData: CapacityData;\n\n   @Input()\n   upgradeData: UpgradeData;\n\n   @Input()\n   configureReservationsPermission: boolean;\n\n   @Input()\n   clusterCapabilityData: VsanCapabilityData;\n\n   @Input()\n   isCustomizableThresholdsSupportedOnVc: boolean;\n\n   @Input()\n   isVsanMaxEnabled: boolean;\n\n   @Output()\n   onConfigureManagement: EventEmitter<void> = new EventEmitter<void>();\n\n   /**\n    * The hovered series in capacity bar chart component, used to display the corresponding legend border.\n    */\n   hoveredSeries: any;\n\n   constructor(private capacityService: VsanCapacityService) {\n   }\n\n   getReservationData = () => this.capacityService.parseCapacityReservationDataSections(this.capacityData);\n\n   get showReservationCapacityLegend(): boolean {\n      if (!this.capacityData.slackSpaceCapacityData) {\n         return false;\n      }\n      // If none of the reservations is currently enabled show an explanatory prompt to the user,\n      // otherwise an additional legend for the capacity bar chart\n      return this.capacityData.slackSpaceCapacityData.operationSpaceReservation > 0\n            || this.capacityData.slackSpaceCapacityData.rebuildToleranceReservation > 0;\n   }\n\n   get capacityManagementStatus(): CapacityManagementStatus {\n      const isCapacityReservationSupported: boolean = this.capacityData.slackSpaceCapacityData\n            && this.capacityData.slackSpaceCapacityData.enforceReservationSupported;\n      return CapacityReservationUtil.getCapacityManagementStatus(this.configureReservationsPermission,\n            this.upgradeData, isCapacityReservationSupported, this.isCustomizableThresholdsSupportedOnVc);\n   }\n\n   configureCapacityManagement() {\n      // The parent component is responsible for this component's data, so it should handle any changes\n      // after the edit operation completes.\n      this.onConfigureManagement.emit();\n   }\n}\n","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectorRef, Component, Input, OnInit} from \"@angular/core\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {SpaceEfficiencyConfig} from \"@generated/space-efficiency-config\";\nimport {StoragePolicyData} from \"@generated/storage-policy-data\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {WhatifCapacityData} from \"@generated/whatif-capacity-data\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {Logger} from \"@util/logger\";\nimport {VsanSignpostUtil} from \"@util/vsan-signpost-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanCapacityAnalysisService} from \"./capacity-analysis.service\";\n\n@Component({\n   templateUrl: \"capacity-analysis.html\",\n   styleUrls: [\"capacity-analysis.scss\"],\n   selector: \"vsan-capacity-analysis\",\n})\nexport class CapacityAnalysisComponent implements OnInit {\n   private static readonly WHAT_IF_CAPACITY_LOADER: string = \"what-if-capacity-loader\";\n\n   readonly policySignpostId: string = \"what-if-policy-signpost\";\n   readonly oversubscriptionSignpostId: string = \"capacity-oversubscription-signpost\";\n\n   constructor(private capacityService: VsanCapacityAnalysisService,\n         private permissionService: PermissionService,\n         private changeDetector: ChangeDetectorRef) {\n   }\n\n   private _selectedPolicy: StoragePolicyData;\n\n   @Input()\n   capacityData: CapacityData;\n\n   @Input()\n   vcCapabilityData: VsanCapabilityData;\n\n   @Input()\n   isVsanMaxEnabled: boolean;\n\n   set selectedPolicy(policy: StoragePolicyData) {\n      this._selectedPolicy = policy;\n      this.updateWhatIfCapacity();\n   }\n\n   get selectedPolicy(): StoragePolicyData {\n      return this._selectedPolicy;\n   }\n\n   hasReadPoliciesPermissions: boolean = false;\n   availablePolicies: StoragePolicyData[] = [];\n   freeWhatIfSpace: number = 0;\n\n   @ErrorMessage({msg: \"vsan.common.error.dataExtraction\"})\n   errorMessage: string;\n\n   isConsiderSpaceEfficiency: boolean;\n   showSpaceEfficiencyOption: boolean;\n   uncommittedWhatIfSpace: number = 0;\n   totalAvailableSpace: number = 0;\n   considerSpaceEfficiencyLabel: string;\n   whatIfAvailableCapacityLabel: string;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   @LoadingIndicator({name: CapacityAnalysisComponent.WHAT_IF_CAPACITY_LOADER})\n   loadingWhatIfCapacity: boolean;\n\n   private clusterRef: ManagedObject;\n\n   @Loader({\n      srMessage: \"vsan.monitor.capacity.analysis.title\",\n      srMessageType: SrMessageType.DATA,\n   })\n   async ngOnInit(): Promise<void> {\n      if (!this.capacityData || this.capacityData.totalSpace === 0) {\n         /* No need to load anything when the cluster hasn't capacity. */\n         return;\n      }\n\n      this.clusterRef = ManagedObject.contextObject;\n      this.hasReadPoliciesPermissions =\n            await this.permissionService.hasVcPermissions(this.clusterRef, [Privileges.READ_POLICIES()]);\n      if (this.hasReadPoliciesPermissions) {\n         this.availablePolicies = await this.capacityService.getAvailablePolicies(this.clusterRef);\n      }\n\n      // Don't show space efficiency option for vSAN Max, since the option is not available on cluster level.\n      this.showSpaceEfficiencyOption = !!this.capacityData.spaceEfficiencyCapacity && !this.isVsanMaxEnabled;\n\n      this.initializeLabels();\n      this.initializePolicy();\n   }\n\n   private initializeLabels(): void {\n      // Calculate total available space excluding reserved capacity\n      this.totalAvailableSpace = this.capacityData.actuallyWrittenSpace + this.capacityData.freeSpace;\n      this.whatIfAvailableCapacityLabel =\n            VsanUiUtils.getString(\"vsan.monitor.capacity.analysis.oversubscription.available.label\",\n                  VsanUiUtils.formatFileSize(this.totalAvailableSpace));\n      if (this.showSpaceEfficiencyOption) {\n         this.considerSpaceEfficiencyLabel =\n               this.capacityData.spaceEfficiencyCapacity.spaceEfficiencyConfig === SpaceEfficiencyConfig.COMPRESSION\n                     ? VsanUiUtils.getString(\n                     \"vsan.monitor.capacity.analysis.oversubscription.considerCompression.label\")\n                     : VsanUiUtils.getString(\n                     \"vsan.monitor.capacity.analysis.oversubscription.considerDedupAndComp.label\");\n      }\n   }\n\n   private initializePolicy(): void {\n      if (!this.selectedPolicy && this.availablePolicies.length) {\n         this.availablePolicies.forEach(policy => {\n            if (policy.isDefault) {\n               this.selectedPolicy = policy;\n            }\n         });\n         // Pre-select a policy when the default policy is missing.\n         if (!this.selectedPolicy) {\n            this.selectedPolicy = this.availablePolicies[0];\n         }\n      }\n   }\n\n   @Loader({name: CapacityAnalysisComponent.WHAT_IF_CAPACITY_LOADER})\n   async updateWhatIfCapacity(): Promise<void> {\n      if (!this.selectedPolicy) {\n         Logger.error(\"No selected policy! Cannot get what-if capacity.\");\n         return;\n      }\n\n      this.freeWhatIfSpace = 0;\n      const whatIfCapacity: WhatifCapacityData = await this.capacityService.getWhatIfCapacity(\n            this.clusterRef, this.selectedPolicy.id);\n      if (whatIfCapacity) {\n         this.freeWhatIfSpace = whatIfCapacity.free;\n         this.uncommittedWhatIfSpace = whatIfCapacity.uncommitted;\n      }\n\n      this.changeDetector.detectChanges();\n   }\n\n   @ErrorHandler({name: CapacityAnalysisComponent.WHAT_IF_CAPACITY_LOADER})\n   private handleWhatIfCapacityError(error: string): void {\n      Logger.error(\"Error getting whatif capacity\", error);\n      this.errorMessage = error;\n      this.changeDetector.detectChanges();\n   }\n\n// Fix for 2435380 - Signpost for Usable Capacity Analysis should not expand the entire page\n   getSignpostPosition(elementId: string): string {\n      const SIGNPOST_WIDTH: number = 360;\n      const SIGNPOST_HEIGHT: number = 150;\n      return VsanSignpostUtil.getPosition(elementId, SIGNPOST_WIDTH, SIGNPOST_HEIGHT);\n   }\n\n   get uncommittedSpace(): number {\n      // Consider space efficiency capacity if explicitly set or for vSAN Max case,\n      // because the space efficiency option is applied per object and should always be considered.\n      return this.isConsiderSpaceEfficiency || this.isVsanMaxEnabled\n            ? this.uncommittedWhatIfSpace / this.capacityData.spaceEfficiencyCapacity.ratio\n            : this.uncommittedWhatIfSpace;\n   }\n\n   get whatIfUncommittedRatio(): string {\n      return `${VsanUiUtils.localizeNumber((this.uncommittedSpace / this.totalAvailableSpace), 2)}x`;\n   }\n}\n","/* Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, Input} from \"@angular/core\";\nimport {UserObjectsCapacityData} from \"@generated/user-objects-capacity-data\";\nimport {CapacityBreakdownItemComponent} from \"./capacity-breakdown-item.component\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\n\n@Component({\n   templateUrl: \"user-capacity-breakdown.html\",\n   styleUrls: [\"user-capacity-breakdown.scss\"],\n   selector: \"vsan-user-capacity-breakdown\",\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserCapacityBreakdownComponent extends CapacityBreakdownItemComponent {\n\n   constructor(capacityService: VsanCapacityService) {\n      super(capacityService);\n   }\n   /**\n    * The breakdown data for the user objects capacity usage.\n    */\n   @Input()\n   userObjectsCapacity: UserObjectsCapacityData;\n}","<!--Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-tree *ngIf=\"includeTotal; else breakdown\">\n   <clr-tree-node>\n      <div id=\"capacity-color-vm\"></div>\n      <span>{{getTotalCapacityLabel(vmCapacity.totalVmUsage,\n            'vsan.monitor.capacity.usage.breakdown.category.vm')}}</span>\n      <ng-template [(clrIfExpanded)]=\"isExpanded\">\n         <ng-container *ngTemplateOutlet=\"breakdown\"></ng-container>\n      </ng-template>\n   </clr-tree-node>\n</clr-tree>\n\n<ng-template #breakdown>\n   <div [ngClass]=\"{'capacity-breakdown-expanded': isDrilldown}\">\n      <!-- VMDK usage -->\n      <div id=\"{{vmCapacity.datastoreType === DatastoreType.PMEM ? 'vmdk-and-nvdimm-capacity-breakdown' : 'vmdk-capacity-breakdown'}}\"\n           *ngIf=\"vmCapacity.vmdkPrimaryUsage\"\n           class=\"breakdown-category breakdown-item\">\n         <div vsan-show-title>{{getVmdkObjectsLabel(vmCapacity.datastoreType)}}</div>\n         <div>\n            {{getFormattedCapacity(vmCapacity.vmdkPrimaryUsage\n               + vmCapacity.vmdkPolicyOverheadUsage,\n               vmCapacity.totalVmUsage)}}\n         </div>\n      </div>\n      <div id=\"vmdk-capacity-primary\"\n           *ngIf=\"vmCapacity.vmdkPrimaryUsage\"\n           class=\"nested-breakdown-capacity breakdown-item\">\n         <div id=\"capacity-color-vm-vmdk-primary\" *ngIf=\"showBreakdownColors\"></div>\n         <span>{{\"vsan.monitor.capacity.usage.breakdown.category.vm.primary\"|localized}}</span>\n         <span>{{vmCapacity.vmdkPrimaryUsage|fileSize}}</span>\n      </div>\n      <div id=\"vmdk-capacity-policy\"\n           *ngIf=\"vmCapacity.vmdkPolicyOverheadUsage\"\n           class=\"nested-breakdown-capacity breakdown-item\">\n         <div id=\"capacity-color-vm-vmdk-policy\" *ngIf=\"showBreakdownColors\"></div>\n         <span>{{\"vsan.monitor.capacity.usage.breakdown.category.vm.policy\"|localized}}</span>\n         <span>{{vmCapacity.vmdkPolicyOverheadUsage|fileSize}}</span>\n      </div>\n      <!-- Block container volumes usage -->\n      <div id=\"block-container-capacity-breakdown\"\n           *ngIf=\"vmCapacity.blockContainerPrimaryDataUsage\"\n           class=\"breakdown-category breakdown-item\">\n         <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.vm.fcd\"|localized}}</div>\n         <div>\n            {{getFormattedCapacity(vmCapacity.blockContainerPrimaryDataUsage\n               + vmCapacity.blockContainerPolicyOverheadUsage,\n               vmCapacity.totalVmUsage)}}\n         </div>\n      </div>\n      <div id=\"vm-block-capacity-primary\"\n           *ngIf=\"vmCapacity.blockContainerPrimaryDataUsage\"\n           class=\"nested-breakdown-capacity breakdown-item\">\n         <div id=\"capacity-color-block-container-primary\" *ngIf=\"showBreakdownColors\"></div>\n         <span>{{\"vsan.monitor.capacity.usage.breakdown.category.vm.primary\"|localized}}</span>\n         <span>{{vmCapacity.blockContainerPrimaryDataUsage|fileSize}}</span>\n      </div>\n      <div id=\"vm-block-capacity-policy\"\n           *ngIf=\"vmCapacity.blockContainerPolicyOverheadUsage\"\n           class=\"nested-breakdown-capacity breakdown-item\">\n         <div id=\"capacity-color-block-container-policy\" *ngIf=\"showBreakdownColors\"></div>\n         <span>{{\"vsan.monitor.capacity.usage.breakdown.category.vm.policy\"|localized}}</span>\n         <span>{{vmCapacity.blockContainerPolicyOverheadUsage|fileSize}}</span>\n      </div>\n      <!-- VM home/namespace objects -->\n      <div id=\"namespace-capacity\"\n           *ngIf=\"vmCapacity.homeObjectsUsage\"\n           class=\"breakdown-category breakdown-item\">\n         <div id=\"capacity-color-vm-namespace\" *ngIf=\"showBreakdownColors\"></div>\n         <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.vm.home.objects\"|localized}}</div>\n         <div>\n            {{getFormattedCapacity(vmCapacity.homeObjectsUsage, vmCapacity.totalVmUsage)}}\n         </div>\n      </div>\n      <!-- Swap objects -->\n      <div id=\"swap-capacity\"\n           *ngIf=\"vmCapacity.swapObjectsUsage\"\n           class=\"breakdown-category breakdown-item\">\n         <div id=\"capacity-color-vm-swap-object\" *ngIf=\"showBreakdownColors\"></div>\n         <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.vm.swap\"|localized}}</div>\n         <div>\n            {{getFormattedCapacity(vmCapacity.swapObjectsUsage, vmCapacity.totalVmUsage)}}\n         </div>\n      </div>\n      <!-- Swap objects snapshots -->\n      <div id=\"swap-snapshot-capacity\"\n           *ngIf=\"vmCapacity.vmMemorySnapshotUsage\"\n           class=\"breakdown-category breakdown-item\">\n         <div id=\"capacity-color-vm-swap-object-snapshot\" *ngIf=\"showBreakdownColors\"></div>\n         <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.vm.memory.snapshots\"|localized}}</div>\n         <div>\n            {{getFormattedCapacity(vmCapacity.vmMemorySnapshotUsage, vmCapacity.totalVmUsage)}}\n         </div>\n      </div>\n      <!-- VR Home objects -->\n      <div id=\"vr-source-capacity\"\n           *ngIf=\"vmCapacity.vrSourceUsage\"\n           class=\"breakdown-category breakdown-item\">\n         <div id=\"capacity-color-vm-vr-source-object\" *ngIf=\"showBreakdownColors\"></div>\n         <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.vm.vr.source\"|localized}}</div>\n         <div>\n            {{getFormattedCapacity(vmCapacity.vrSourceUsage, vmCapacity.totalVmUsage)}}\n         </div>\n      </div>\n   </div>\n</ng-template>","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {VsanCommonModule} from \"app/vsan/common/vsan-common.module\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\nimport {VsanChartModule} from \"@component/chart/chart.module\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {CapacityComponent} from \"./capacity.component\";\nimport {CapacityHistoryComponent} from \"./history/capacity-history.component\";\nimport {CapacityOverviewComponent} from \"./usage/capacity-overview.component\";\nimport {CapacityUsageComponent} from \"./usage/capacity-usage.component\";\nimport {CapacityAnalysisComponent} from \"./usage/capacity-analysis.component\";\nimport {CapacityBreakdownComponent} from \"./usage/breakdown/capacity-breakdown.component\";\nimport {VsanCapacityAnalysisService} from \"./usage/capacity-analysis.service\";\nimport {CapacityCommonModule} from \"@component/capacity/capacity-common.module\";\nimport {SpaceEfficiencyService} from \"@service/space-efficiency-service\";\nimport {RemoteCapacityComponent} from \"./usage/remote-capacity.component\";\nimport {CapacityDatastoresOverviewComponent} from \"./usage/capacity-datastores-overview.component\";\nimport {UpgradeService} from \"@component/upgrade/upgrade.service\";\nimport {MountedDatastoresCapacityComponent} from \"./mounted-datastores/mounted-datastores-capacity.component\";\nimport {RemoteDatastoreCapacityCardComponent} from \"./mounted-datastores/remote-datastore-capacity-card.component\";\nimport {CapacityBreakdownCategoriesComponent} from \"./usage/breakdown/capacity-breakdown-categories.component\";\nimport {CapacityBreakdownPieChartComponent} from \"./usage/breakdown/capacity-breakdown-pie-chart.component\";\nimport {CapacityBreakdownSnapshotsComponent} from \"./usage/breakdown/capacity-breakdown-snapshots.component\";\n\nconst routes: Routes = [\n   {\n      path: \"\",\n      component: CapacityComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      VsanCommonModule,\n      UnavailableViewModule,\n      CapacityCommonModule,\n      VsanChartModule,\n      RouterModule.forChild(routes),\n   ],\n   declarations: [\n      CapacityComponent,\n      CapacityHistoryComponent,\n      CapacityOverviewComponent,\n      CapacityAnalysisComponent,\n      CapacityUsageComponent,\n      CapacityBreakdownComponent,\n      CapacityBreakdownCategoriesComponent,\n      CapacityBreakdownSnapshotsComponent,\n      CapacityBreakdownPieChartComponent,\n      RemoteCapacityComponent,\n      CapacityDatastoresOverviewComponent,\n      MountedDatastoresCapacityComponent,\n      RemoteDatastoreCapacityCardComponent,\n   ],\n   providers: [\n      VsanCapacityService,\n      VsanCapacityAnalysisService,\n      SpaceEfficiencyService,\n      UpgradeService,\n   ],\n})\nexport class CapacityModule {\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {Component, Input} from \"@angular/core\";\nimport {ShareableDatastore} from \"@generated/shareable-datastore\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"remote-datastore-capacity-card.html\",\n   styleUrls: [\"remote-datastore-capacity-card.scss\"],\n   selector: \"vsan-remote-datastore-capacity-card\",\n})\nexport class RemoteDatastoreCapacityCardComponent {\n\n   @Input()\n   shareableDatastore: ShareableDatastore;\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   getTitle(): string {\n      return VsanUiUtils.getString(\n            \"vsan.monitor.capacity.computeOnlyCluster.datastoreCard.title\",\n            this.shareableDatastore.datastore.name, this.shareableDatastore.serverCluster.name);\n   }\n\n   navigateToDatastoreCapacity(): void {\n      this.navigationService.navigateTo(PlatformExtension.DATASTORE_CAPACITY, this.shareableDatastore.datastore.moRef);\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\nimport {CapacityDrillDownType} from './capacity-breakdown-pie-chart.component';\nimport {CapacityBreakdownPerspective} from \"./capacity-breakdown.component\";\n\n@Component({\n   templateUrl: \"capacity-breakdown-categories.html\",\n   styleUrls: [\"capacity-breakdown-categories.scss\"],\n   selector: \"vsan-capacity-breakdown-categories\"\n})\nexport class CapacityBreakdownCategoriesComponent {\n   isVmCategoryExpanded: boolean = false;\n   isUserObjectsCategoryExpanded: boolean = false;\n   isSystemCategoryExpanded: boolean = false;\n\n   isDrillDown: boolean = false;\n   selectedDrillDownType: CapacityDrillDownType = CapacityDrillDownType.NONE;\n   CapacityDrillDownType: typeof CapacityDrillDownType = CapacityDrillDownType;\n\n   CapacityBreakdownPerspective: typeof CapacityBreakdownPerspective = CapacityBreakdownPerspective;\n\n   @Input()\n   totalUsedSpace: number;\n\n   @Input()\n   showHeader: boolean;\n\n   @Input()\n   capacityData: CapacityData;\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   constructor() {\n   }\n\n   hasVmCapacity(): boolean {\n      return this.capacityData &&\n            this.capacityData.vmCapacity &&\n            this.capacityData.vmCapacity.totalVmUsage > 0;\n   }\n\n   hasUserCapacity(): boolean {\n      return this.capacityData &&\n            this.capacityData.userObjectsCapacity &&\n            this.capacityData.userObjectsCapacity.totalUserObjectsUsage > 0;\n   }\n\n   hasSystemCapacity(): boolean {\n      return this.capacityData &&\n            this.capacityData.systemUsageCapacity &&\n            this.capacityData.systemUsageCapacity.totalSystemUsage > 0;\n   }\n\n   toggleExpanded(): void {\n      this.isVmCategoryExpanded =\n            this.isUserObjectsCategoryExpanded =\n                  this.isSystemCategoryExpanded = !this.allExpanded;\n      // Navigate away from drilldown in the pie chart when user clicks expand/collapse all.\n      this.isDrillDown = false;\n      this.selectedDrillDownType = CapacityDrillDownType.NONE;\n\n      this.srOnlyMessage = VsanUiUtils.getString(this.allExpanded ?\n            \"vsan.common.srMessage.expandedAll\" : \"vsan.common.srMessage.collapsedAll\");\n   }\n\n   get allExpanded() {\n      return (this.isVmCategoryExpanded || !this.hasVmCapacity()) &&\n            (this.isUserObjectsCategoryExpanded || !this.hasUserCapacity()) &&\n            (this.isSystemCategoryExpanded || !this.hasSystemCapacity());\n   }\n\n   get allCollapsed() {\n      return !this.isVmCategoryExpanded &&\n            !this.isUserObjectsCategoryExpanded &&\n            !this.isSystemCategoryExpanded;\n   }\n\n   drillDownCategoryChange(selectedDrillDownType: CapacityDrillDownType) {\n      this.selectedDrillDownType = selectedDrillDownType;\n      switch(selectedDrillDownType) {\n         case CapacityDrillDownType.NONE:\n            this.isVmCategoryExpanded = this.isUserObjectsCategoryExpanded = this.isSystemCategoryExpanded = false;\n            break;\n         case CapacityDrillDownType.VM:\n            this.isVmCategoryExpanded = true;\n            break;\n         case CapacityDrillDownType.USER_OBJECTS:\n            this.isUserObjectsCategoryExpanded = true;\n            break;\n         case CapacityDrillDownType.SYSTEM_OBJECTS:\n            this.isSystemCategoryExpanded = true;\n      }\n   }\n}","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, Input} from \"@angular/core\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {VmCapacityData} from \"@generated/vm-capacity-data\";\nimport {CapacityBreakdownItemComponent} from \"./capacity-breakdown-item.component\";\n\n@Component({\n   templateUrl: \"vm-capacity-breakdown.html\",\n   styleUrls: [\"vm-capacity-breakdown.scss\"],\n   selector: \"vsan-vm-capacity-breakdown\",\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VmCapacityBreakdownComponent extends CapacityBreakdownItemComponent {\n\n   DatastoreType: typeof DatastoreType = DatastoreType;\n\n   constructor(capacityService: VsanCapacityService) {\n      super(capacityService);\n   }\n\n   /**\n    * The breakdown data for the VM objects capacity usage.\n    */\n   @Input()\n   vmCapacity: VmCapacityData;\n\n   /**\n    * Whether to have a total with expand/collapse arrow on top of the breakdown.\n    */\n   @Input()\n   includeTotal: boolean = true;\n\n   /**\n    * Whether to show the color of the breakdown section in front of it.\n    */\n   @Input()\n   showBreakdownColors: boolean = false;\n\n   getVmdkObjectsLabel(datastoreType: DatastoreType): string {\n      return this.capacityService.getVmdkObjectsLabel(datastoreType);\n   }\n}\n","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, HostBinding, Input, OnInit, Output} from \"@angular/core\";\nimport {UpgradeData} from \"@component/upgrade/upgrade.data\";\nimport {UpgradeService} from \"@component/upgrade/upgrade.service\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {CapacityManagementContext} from \"@navigation/context/capacity-management-context\";\nimport {ClusterComputeResource} from \"@service/client/dataservice/data-service-property\";\nimport {DataServiceClient} from \"@service/client/dataservice/data-service.service\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ScreenReaderAnnouncer, SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {DiskMgmtUtil} from \"@util/disk-mgmt.util\";\nimport {Logger} from \"@util/logger\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {VsanDialogUtil} from \"@util/vsan-dialog-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanRoutes} from \"../../../vsan-routes\";\n\n@Component({\n   templateUrl: \"capacity-usage.html\",\n   styleUrls: [\"capacity-usage.scss\"],\n   selector: \"vsan-capacity-usage\",\n})\nexport class CapacityUsageComponent implements OnInit {\n   @ErrorMessage()\n   errorMessage: string;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   capacityData: CapacityData;\n   upgradeData: UpgradeData;\n   clusterCapabilityData: VsanCapabilityData;\n   vcCapabilityData: VsanCapabilityData;\n   configureReservationsPermission: boolean = false;\n   datastoreTypes: DatastoreType[];\n   DatastoreType: typeof DatastoreType = DatastoreType;\n\n   @Input()\n   selectedDatastoreType: DatastoreType;\n\n   @Input()\n   datastoresCapacityData: Map<DatastoreType, CapacityData>;\n\n   @Input()\n   isVsanMaxEnabled: boolean;\n\n   @Output()\n   selectedDatastoreTypeChange: EventEmitter<DatastoreType> = new EventEmitter<DatastoreType>();\n\n   @HostBinding(\"style.display\")\n   get display(): string {\n      return this.isVisible\n            ? \"flex\"\n            : \"none\";\n   }\n\n   @Input()\n   isVisible: boolean;\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   constructor(private capabilitiesService: VsanCapabilityProvider,\n         private permissionService: PermissionService,\n         private upgradeService: UpgradeService,\n         private dataService: DataServiceClient,\n         private taskService: TaskMonitorService) {\n   }\n\n   ngOnInit(): void {\n      this.fetch();\n      if (this.isVisible) {\n         this.srOnlyMessage = VsanUiUtils.getString(\"vsan.screenReader.message.page.loaded.andTabSelected\",\n               VsanUiUtils.getString(\"vsan.monitor.capacity\"),\n               VsanUiUtils.getString(\"vsan.monitor.capacity.views.capacity.usage\"));\n      }\n   }\n\n   @Loader({\n      srMessage: \"vsan.monitor.capacity.views.capacity.usage\",\n      srMessageType: SrMessageType.DATA,\n   })\n   async fetch(): Promise<void> {\n      this.reset();\n      const managedObject: ManagedObject = ManagedObject.contextObject;\n      this.upgradeService.getUpgradeData(managedObject)\n            .then(upgradeData => this.upgradeData = upgradeData)\n            .catch(error => {\n               this.errorMessage = error;\n               Logger.error(\"Unable to retrieve vsan disks upgrade data: \" + error);\n            });\n\n      [\n         this.clusterCapabilityData,\n         this.vcCapabilityData,\n         this.configureReservationsPermission,\n      ] = await Promise.all([\n         this.capabilitiesService.getClusterCapabilityData(managedObject),\n         this.capabilitiesService.getVcCapabilityData(managedObject),\n         this.queryClusterPermissions(managedObject),\n      ]);\n\n      this.setDatastoreTypes(DiskMgmtUtil.orderDatastoreTypes(Array.from(this.datastoresCapacityData.keys())));\n      this.selectDatastoreType(this.getSelectedDatastoreType(this.datastoreTypes));\n   }\n\n   private reset(): void {\n      this.configureReservationsPermission = false;\n      this.upgradeData = null;\n   }\n\n   getDatastoreTypeLabel(datastoreType: DatastoreType): string {\n      return DiskMgmtUtil.getLocalizedDatastoreType(datastoreType);\n   }\n\n   setDatastoreTypes(datastoreTypes: DatastoreType[]): void {\n      this.datastoreTypes = datastoreTypes;\n   }\n\n   selectDatastoreType(datastoreType: DatastoreType): void {\n      this.selectedDatastoreType = datastoreType;\n      this.selectedDatastoreTypeChange.emit(this.selectedDatastoreType);\n      this.capacityData = this.datastoresCapacityData.get(this.selectedDatastoreType);\n   }\n\n   async queryClusterPermissions(managedObject: ManagedObject): Promise<boolean> {\n      try {\n         const permissions: any = await this.permissionService.queryPermissions(managedObject, [\n            Privileges.EDIT_CLUSTER(),\n            Privileges.CONFIG_STORAGE(),\n         ]);\n         const editClusterPermission: boolean = permissions[Privileges.EDIT_CLUSTER()];\n         const configureStoragePermission: boolean = permissions[Privileges.CONFIG_STORAGE()];\n         return editClusterPermission && configureStoragePermission;\n      } catch (e) {\n         // Fallback to true, when we cannot determine the permission.\n         return true;\n      }\n   }\n\n   async editCapacityManagement(): Promise<void> {\n      const eventTarget: EventTarget = event.target;\n      const clusterName: string = await this.dataService\n            .getProperty(ClusterComputeResource.name, ManagedObject.contextObject);\n      const context: CapacityManagementContext = {\n         clusterName: clusterName,\n         showOldFormatInfo: this.upgradeService.isUpgradeNeeded(this.upgradeData),\n         isCapacityCustomizableThresholdsSupported: this.vcCapabilityData.isCapacityCustomizableThresholdsSupported,\n      };\n      new ModalBuilder(VsanRoutes.CAPACITY_MANAGEMENT)\n            .setSize(VsanDialogUtil.CAPACITY_MANAGEMENT_DIALOG.width, VsanDialogUtil.CAPACITY_MANAGEMENT_DIALOG.height)\n            .setEventTarget(eventTarget)\n            .open(context)\n            .then(this.awaitTask);\n   }\n\n   private getSelectedDatastoreType(datastoreTypes: DatastoreType[]): DatastoreType {\n      if (datastoreTypes.length === 1) {\n         return datastoreTypes[0];\n      }\n\n      if (!datastoreTypes.includes(this.selectedDatastoreType)) {\n         return DatastoreType.VSAN;\n      }\n\n      return this.selectedDatastoreType;\n   }\n\n   private awaitTask = (taskRef: ManagedObject) => {\n      if (!taskRef) {\n         return;\n      }\n      this.taskService.getAwaitResult(taskRef)\n            .then(VsanUiUtils.globalRefresh)\n            .catch((e) => {\n               this.errorMessage = e;\n            });\n   };\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {Component, Input} from \"@angular/core\";\nimport {InventoryNode} from \"@generated/inventory-node\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\n\n/**\n * This component is used to display any mounted remote datastores\n * on a regular(as opposed to a compute only) vSAN cluster.\n * For compute only cluster's mounted datastores see: MountedDatastoresCapacityComponent\n */\n@Component({\n   selector: \"vsan-remote-capacity\",\n   templateUrl: \"remote-capacity.html\",\n   styleUrls: [\"remote-capacity.scss\"],\n})\nexport class RemoteCapacityComponent {\n\n   @Input()\n   remoteDatastores: InventoryNode[];\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   navigateToDatastoreCapacity(datastoreRef: ManagedObject): void {\n      this.navigationService.navigateTo(PlatformExtension.DATASTORE_CAPACITY, datastoreRef);\n   }\n}","<!--Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<span *ngIf=\"loading\" class=\"busy-backdrop\">\n   <span class=\"spinner spinner-lg central-spinner\"></span>\n</span>\n<ng-container *ngIf=\"!loading\">\n   <vsan-validation id=\"validation-message\"\n                    *ngIf=\"errorMessage\"\n                    [(alert)]=\"errorMessage\"\n                    [allowReload]=\"true\"\n                    (onReload)=\"fetch()\"\n                    (onClosed)=\"errorMessage = null\">\n   </vsan-validation>\n\n   <vsan-validation id=\"no-available-capacity\"\n                    *ngIf=\"capacityData?.reducedCapacityMessages?.length\"\n                    [allowClose]=\"false\"\n                    alertType=\"info\"\n                    [alerts]=\"capacityData?.reducedCapacityMessages\">\n   </vsan-validation>\n\n   <vsan-capacity-datastores-overview *ngIf=\"datastoresCapacityData?.size > 1\"\n                                      [datastoresCapacityData]=\"datastoresCapacityData\">\n   </vsan-capacity-datastores-overview>\n\n   <clr-tabs *ngIf=\"datastoresCapacityData?.size > 1\">\n      <clr-tab *ngFor=\"let datastoreType of datastoreTypes\">\n         <button id=\"{{'datastore-type-' + datastoreType}}\"\n                 clrTabLink\n                 (click)=\"selectDatastoreType(datastoreType)\">\n            {{getDatastoreTypeLabel(datastoreType)}}\n         </button>\n         <clr-tab-content *clrIfActive=\"datastoreType === selectedDatastoreType\">\n            <ng-container *ngTemplateOutlet=\"datastoreSections\"></ng-container>\n         </clr-tab-content>\n      </clr-tab>\n   </clr-tabs>\n\n   <ng-container *ngIf=\"datastoresCapacityData?.size === 1\">\n      <ng-container *ngTemplateOutlet=\"datastoreSections\"></ng-container>\n   </ng-container>\n\n   <ng-template #datastoreSections>\n      <div id=\"datastore-sections-container\">\n         <vsan-capacity-overview [capacityData]=\"capacityData\"\n                                 [upgradeData]=\"upgradeData\"\n                                 [configureReservationsPermission]=\"configureReservationsPermission\"\n                                 [isCustomizableThresholdsSupportedOnVc]=\"vcCapabilityData.isCapacityCustomizableThresholdsSupported\"\n                                 [clusterCapabilityData]=\"clusterCapabilityData\"\n                                 [isVsanMaxEnabled]=\"isVsanMaxEnabled\"\n                                 (onConfigureManagement)=\"editCapacityManagement()\">\n         </vsan-capacity-overview>\n\n         <vsan-capacity-analysis *ngIf=\"vcCapabilityData?.isWhatIfCapacitySupported &&\n                                     selectedDatastoreType === DatastoreType.VSAN\"\n                                 [capacityData]=\"capacityData\"\n                                 [isVsanMaxEnabled]=\"isVsanMaxEnabled\"\n                                 [vcCapabilityData]=\"vcCapabilityData\">\n         </vsan-capacity-analysis>\n\n         <vsan-capacity-breakdown [capacityData]=\"capacityData\"\n                                  [capabilityData]=\"clusterCapabilityData\"\n                                  [isVsanMaxEnabled]=\"isVsanMaxEnabled\">\n         </vsan-capacity-breakdown>\n      </div>\n   </ng-template>\n</ng-container>\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, HostBinding, Input, OnInit} from \"@angular/core\";\nimport {Logger} from \"@util/logger\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {GraphMetric} from \"@component/chart/performance/graph-metrics.data\";\nimport {PerfChartDataConstants} from \"@component/chart/performance/perf-chart-util\";\nimport {PerfQuerySpec} from \"@generated/perf-query-spec\";\nimport {VsanPerfPropertyProvider} from \"@generated/vsan-perf-property-provider\";\nimport {PerfEntityStateData} from \"@generated/perf-entity-state-data\";\nimport {PerfGraph} from \"@component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"@component/chart/performance/perf-chart-util\";\nimport {UnavailableViewSpec} from \"@component/unavailable-view/unavailable-view-spec\";\nimport {ReducedCapacityMessagesService} from \"@generated/reduced-capacity-messages-service\";\nimport {CapacityHistoryBasicInfo} from \"@generated/capacity-history-basic-info\";\nimport {DateRangeData} from \"@component/datetime-picker/date-range-picker.component\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\nimport {ChartZoomOption} from \"@component/chart/performance/chart-zoom-option\";\n\n@Component({\n   templateUrl: \"capacity-history.html\",\n   selector: \"vsan-capacity-history\",\n   styleUrls: [\"capacity-history.scss\"],\n})\nexport class CapacityHistoryComponent implements OnInit {\n   private static readonly CAPACITY_ENTITY_TYPE: string = \"vsan-cluster-capacity\";\n\n   private serverObjRef: ManagedObject = ManagedObject.contextObject; // this could be cluster or datastore\n\n   chartsError: string;\n   basicInfoError: string;\n   loadingCharts: boolean = false;\n   loadingBasicInfo: boolean = false;\n   clusterRef: ManagedObject;\n   reducedCapacityMessages: string[];\n\n   private graphs: PerfGraph[];\n   hasEditPrivilege: boolean = false;\n   perfDisabledSpec: UnavailableViewSpec = null;\n   isEmptyCluster: boolean = false;\n   currentDateRange: DateRangeData;\n\n   zoomOption: ChartZoomOption;\n   isZoomed: boolean = false;\n\n   chartsData: GraphMetric[];\n\n   @Input()\n   isVisible: boolean;\n\n   @HostBinding(\"style.display\")\n   get display(): string {\n      return this.isVisible ? \"flex\" : \"none\";\n   }\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   constructor(private perfProvider: VsanPerfPropertyProvider,\n               private capacityMessagesService: ReducedCapacityMessagesService) {}\n\n   async ngOnInit(): Promise<void> {\n      await this.queryBasicInfo();\n   }\n\n   /**\n    * Query basic info when refreshing page or entering the capacity history view for the first time.\n    */\n   @RefreshHandler\n   async queryBasicInfo(): Promise<void> {\n      this.graphs = null;\n      this.hasEditPrivilege = false;\n      this.perfDisabledSpec = null;\n      this.basicInfoError = null;\n      this.chartsData = null;\n\n      this.loadingBasicInfo = true;\n      try {\n         let capacityHistoryBasicInfo: CapacityHistoryBasicInfo;\n         [this.reducedCapacityMessages, capacityHistoryBasicInfo] = await Promise.all([\n            this.capacityMessagesService.getReducedCapacityMessagesForHistory(this.serverObjRef),\n            this.perfProvider.getCapacityHistoryBasicInfo(this.serverObjRef),\n         ]);\n\n         this.loadingBasicInfo = false;\n\n         this.graphs = capacityHistoryBasicInfo.entityTypes[PerfChartDataConstants.HISTORICAL_SPACE_REPORT].graphs\n               .map(graph => PerfChartUtil.getGraphDefinition(graph));\n         this.clusterRef = capacityHistoryBasicInfo.clusterRef;\n         this.isEmptyCluster = capacityHistoryBasicInfo.isEmptyCluster;\n         this.hasEditPrivilege = capacityHistoryBasicInfo.hasEditPolicyPermission;\n\n         if (!capacityHistoryBasicInfo.isPerformanceServiceEnabled) {\n            this.perfDisabledSpec = UnavailableViewSpec.PERF_DISABLED_ON_CAPACITY_VIEW;\n         }\n\n         if (this.isVisible) {\n            this.srOnlyMessage = VsanUiUtils.getString(\"vsan.screenReader.message.page.loaded.andTabSelected\",\n                  VsanUiUtils.getString(\"vsan.monitor.capacity\"),\n                  VsanUiUtils.getString(\"vsan.monitor.capacity.views.capacity.history\"));\n         }\n      } catch (error) {\n         this.loadingBasicInfo = false;\n         this.basicInfoError = VsanUiUtils.getString(\"vsan.monitor.capacity.history.query.basic.info.error\");\n         Logger.error(\"Unable to query basic info for capacity history. \" + error);\n      }\n   }\n\n   updateChartsData(dateRange?: DateRangeData): void {\n      if (this.isEmptyCluster) {\n         return;\n      }\n      this.chartsData = null;\n      this.chartsError = null;\n      this.loadingCharts = true;\n      if (dateRange) {\n         this.currentDateRange = dateRange;\n      }\n      const querySpecs: PerfQuerySpec[] = this.createPerfQuerySpec(this.currentDateRange);\n      // Performance collect interval is 1 minute, when the search time range is greater than one day,\n      // we need to filter some chart points for good visual effects,\n      // and in the case of small data do not need to perform this operation.\n      const filterChartPoints: boolean =\n            (Math.ceil((this.currentDateRange.to - this.currentDateRange.from) /\n                  VsanDateTimeUtils.DAY_IN_MILLISECONDS)) > 1;\n      this.perfProvider.getHistoricalSpaceReport(this.serverObjRef, querySpecs, filterChartPoints)\n            .then((chartsData: PerfEntityStateData) => {\n               this.loadingCharts = false;\n               // we only pass one entityRefId so the chartsData should has only one element.\n               this.chartsData = chartsData ? [new GraphMetric(chartsData, this.graphs)] : null;\n            }).catch(error => {\n               this.loadingCharts = false;\n               this.chartsError = VsanUiUtils.getString(\n                     \"vsan.monitor.capacity.history.query.properties.error\", error);\n               Logger.error(\"Unable to query data for historical space report. \" + error);\n            });\n   }\n\n   private createPerfQuerySpec = (timeRange: DateRangeData): PerfQuerySpec[] => {\n      const querySpecs: PerfQuerySpec[] = [];\n      const dateRanges: DateRangeData[] = this.generateDateRanges(timeRange);\n      dateRanges.map(range => {\n         querySpecs.push(PerfQuerySpec.Factory.create(\n               CapacityHistoryComponent.CAPACITY_ENTITY_TYPE, null, null, range.from, range.to, null, null));\n      });\n      return querySpecs;\n   };\n\n   /**\n    * Generate a collection of date ranges based on the selected time range, one day for each item,\n    * because the maximum length of perf chart query is 24 hours.\n    * Example:\n    *   A collection of three days beginning at 12:26:00, February 26, 2018\n    *   [ Feb 26 2018 12:26:00 - Feb 27 2018 12:26:00,\n    *     Feb 27 2018 12:26:00 - Feb 28 2018 12:26:00 ]\n    */\n   private generateDateRanges = (timeRange: DateRangeData): DateRangeData[] => {\n      // The number of days in the selected time range.\n      const days: number = Math.ceil((timeRange.to - timeRange.from) / VsanDateTimeUtils.DAY_IN_MILLISECONDS);\n      const dateRanges: DateRangeData[] = [];\n      for (let d: number = 1; d <= days; d++) {\n         const startTime: number = (d === 1) ? timeRange.from :\n               timeRange.from + (d - 1) * VsanDateTimeUtils.DAY_IN_MILLISECONDS;\n         const endTime: number = (d === days) ? timeRange.to : startTime + VsanDateTimeUtils.DAY_IN_MILLISECONDS;\n         dateRanges.push(new DateRangeData(startTime, endTime));\n      }\n      return dateRanges;\n   };\n\n   /**\n    * Reset the chart zoom level to default\n    */\n   onZoomOut(): void {\n      this.isZoomed = false;\n      const zoomOut: ChartZoomOption = new ChartZoomOption();\n      zoomOut.isZoomOut = true;\n      this.zoomOption = zoomOut;\n   }\n\n   /**\n    * Accepts the chart zoom options when user selects a range on the chart\n    */\n   onChartZoomIn(opt: ChartZoomOption): void {\n      this.isZoomed = !opt.isZoomOut;\n      this.zoomOption = opt;\n   }\n}\n","<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-tree>\n   <clr-tree-node>\n      <div id=\"capacity-color-user-objects\"></div>\n      <span>{{getTotalCapacityLabel(userObjectsCapacity.totalUserObjectsUsage,\n               'vsan.monitor.capacity.usage.breakdown.category.user.objects')}}</span>\n      <ng-template [(clrIfExpanded)]=\"isExpanded\">\n         <div [ngClass]=\"{'capacity-breakdown-expanded': isDrilldown}\">\n            <!-- First class disks usage -->\n            <div id=\"fcd-capacity-breakdown\"\n                 *ngIf=\"userObjectsCapacity.blockContainerVolumes > 0\n                     || userObjectsCapacity.otherFcd > 0\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.user.objects.fcd\"|localized}}</div>\n               <div>\n                  {{getFormattedCapacity(userObjectsCapacity.blockContainerVolumes\n                        + userObjectsCapacity.otherFcd,\n                        userObjectsCapacity.totalUserObjectsUsage)}}\n               </div>\n            </div>\n            <div id=\"fcd-block-capacity\"\n                 *ngIf=\"userObjectsCapacity.blockContainerVolumes\"\n                 class=\"nested-breakdown-capacity breakdown-item\">\n               <span>{{\"vsan.monitor.capacity.usage.breakdown.category.user.objects.fcd.block\"|localized}}</span>\n               <span>{{userObjectsCapacity.blockContainerVolumes|fileSize}}</span>\n            </div>\n            <div id=\"fcd-other-capacity\"\n                 *ngIf=\"userObjectsCapacity.otherFcd\"\n                 class=\"nested-breakdown-capacity breakdown-item\">\n               <span>\n                  {{\"vsan.monitor.capacity.usage.breakdown.category.user.objects.fcd.other\"|localized}}\n               </span>\n               <span>{{userObjectsCapacity.otherFcd|fileSize}}</span>\n            </div>\n            <!-- File shares usage -->\n            <div id=\"file-shares-capacity-breakdown\"\n                 *ngIf=\"userObjectsCapacity.fileContainerVolumes > 0\n                       || userObjectsCapacity.nativeFileShares > 0\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>\n                  {{\"vsan.monitor.capacity.usage.breakdown.category.user.objects.file.shares\"|localized}}\n               </div>\n               <div>\n                  {{getFormattedCapacity(userObjectsCapacity.fileContainerVolumes\n                        + userObjectsCapacity.nativeFileShares,\n                        userObjectsCapacity.totalUserObjectsUsage)}}\n               </div>\n            </div>\n            <div id=\"file-container-detached-capacity\"\n                 *ngIf=\"userObjectsCapacity.fileContainerVolumes\"\n                 class=\"nested-breakdown-capacity breakdown-item\">\n               <span>\n                  {{\"vsan.monitor.capacity.usage.breakdown.category.user.objects.file.shares.container\"|localized}}\n               </span>\n               <span>{{userObjectsCapacity.fileContainerVolumes|fileSize}}</span>\n            </div>\n            <div id=\"native-fcd-capacity\"\n                 *ngIf=\"userObjectsCapacity.nativeFileShares\"\n                 class=\"nested-breakdown-capacity breakdown-item\">\n               <span>\n                  {{\"vsan.monitor.capacity.usage.breakdown.category.user.objects.file.shares.native\"|localized}}\n               </span>\n               <span>{{userObjectsCapacity.nativeFileShares|fileSize}}</span>\n            </div>\n            <!-- iSCSI capacity -->\n            <div id=\"iscsi-capacity\"\n                 *ngIf=\"userObjectsCapacity.iSCSI\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.user.objects.iscsi\"|localized}}</div>\n               <div>\n                  {{getFormattedCapacity(userObjectsCapacity.iSCSI, userObjectsCapacity.totalUserObjectsUsage)}}\n               </div>\n            </div>\n            <!-- VR target usage -->\n            <div id=\"vr-target-capacity-breakdown\"\n                 *ngIf=\"userObjectsCapacity.vrTargetConfigsUsage || userObjectsCapacity.vrTargetDisksUsage\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.user.vr.target\"|localized}}</div>\n               <div>\n                  {{getFormattedCapacity(userObjectsCapacity.vrTargetConfigsUsage\n                     + userObjectsCapacity.vrTargetDisksUsage,\n                     userObjectsCapacity.totalUserObjectsUsage)}}\n               </div>\n            </div>\n            <div id=\"vr-target-disks-capacity\"\n                 *ngIf=\"userObjectsCapacity.vrTargetDisksUsage\"\n                 class=\"nested-breakdown-capacity breakdown-item\">\n               <span>{{\"vsan.monitor.capacity.usage.breakdown.category.user.vr.target.disks\"|localized}}</span>\n               <span>{{userObjectsCapacity.vrTargetDisksUsage|fileSize}}</span>\n            </div>\n            <div id=\"vr-target-configs-capacity\"\n                 *ngIf=\"userObjectsCapacity.vrTargetConfigsUsage\"\n                 class=\"nested-breakdown-capacity breakdown-item\">\n               <span>{{\"vsan.monitor.capacity.usage.breakdown.category.user.vr.target.configs\"|localized}}</span>\n               <span>{{userObjectsCapacity.vrTargetConfigsUsage|fileSize}}</span>\n            </div>\n            <!-- Other objects -->\n            <div id=\"other-capacity\"\n                 *ngIf=\"userObjectsCapacity.other\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.user.objects.other\"|localized}}</div>\n               <div>\n                  {{getFormattedCapacity(userObjectsCapacity.other, userObjectsCapacity.totalUserObjectsUsage)}}\n               </div>\n            </div>\n            <div id=\"extension-{{i + 1}}-capacity\"\n                 *ngFor=\"let extension of userObjectsCapacity.extensions | keyvalue; let i = index;\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>{{extension.key}}</div>\n               <div>\n                  {{getFormattedCapacity(extension.value, userObjectsCapacity.totalUserObjectsUsage)}}\n               </div>\n            </div>\n         </div>\n      </ng-template>\n   </clr-tree-node>\n</clr-tree>","/* Copyright 2018-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Injectable} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {PbmDataProvider} from \"@generated/pbm-data-provider\";\nimport {StoragePolicyData} from \"@generated/storage-policy-data\";\nimport {CapacityDataService} from \"@generated/capacity-data-service\";\nimport {WhatifCapacityData} from \"@generated/whatif-capacity-data\";\n\n@Injectable()\nexport class VsanCapacityAnalysisService {\n\n   /**\n    * Threshold percentage value to display a warning status in the capacity monitoring UI.\n    * TODO: Get value via server API call. Won't be part of 6.5 U2 release.\n    */\n   capacityUsageWarningThreshold: number = 70;\n\n   /**\n    * Threshold percentage value to display an error status in the capacity monitoring UI.\n    * TODO: Get value via server API call. Won't be part of 6.5 U2 release.\n    */\n   capacityUsageErrorThreshold: number = 90;\n\n   constructor(private capacityProvider: CapacityDataService,\n         private pbmProvider: PbmDataProvider) {}\n\n   getAvailablePolicies(contextObject: ManagedObject): Promise<StoragePolicyData[]> {\n      return this.pbmProvider.getObjectCompatibleStoragePolicies(contextObject);\n   }\n\n   getWhatIfCapacity(contextObject: ManagedObject, profileId: string): Promise<WhatifCapacityData> {\n      return this.capacityProvider.getWhatIfCapacity(contextObject, profileId);\n   }\n}","<!--Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<!-- busy indicator -->\n<span class=\"busy-backdrop\" *ngIf=\"loadingBasicInfo\">\n   <span class=\"spinner spinner-lg central-spinner\"></span>\n</span>\n\n<vsan-validation id=\"reduced-available-capacity\"\n                 *ngIf=\"reducedCapacityMessages?.length\"\n                 [allowClose]=\"false\"\n                 alertType=\"info\"\n                 [(alerts)]=\"reducedCapacityMessages\">\n</vsan-validation>\n\n<!-- Error fetching the view data -->\n<vsan-validation id=\"basic-info-error\"\n                 *ngIf=\"basicInfoError\"\n                 [alert]=\"basicInfoError\"\n                 [allowReload]=\"true\"\n                 [allowClose]=\"false\"\n                 (onReload)=\"queryBasicInfo()\">\n</vsan-validation>\n\n<!-- Loading the basic data is done, show the view -->\n<ng-container *ngIf=\"!loadingBasicInfo && !basicInfoError\">\n   <vsan-unavailable-view *ngIf=\"perfDisabledSpec\"\n                          [unavailableViewSpec]=\"perfDisabledSpec\"\n                          [hasEditPrivilege]=\"hasEditPrivilege\"\n                          [clusterRef]=\"clusterRef\"\n                          [ensureMasterNodeElected]=\"true\">\n   </vsan-unavailable-view>\n\n   <!-- Not disabled and not an empty cluster, show capacity history -->\n   <ng-container *ngIf=\"!perfDisabledSpec && !isEmptyCluster\">\n      <h5 id=\"capacity-history-summary\">\n         {{\"vsan.monitor.capacity.history.summary\" | localized}}\n      </h5>\n      <div class=\"actions-container\">\n         <vsan-date-range-picker id=\"capacity-history-date-picker\"\n                                 [enabled]=\"!loadingCharts\"\n                                 (changeRange)=\"updateChartsData($event)\">\n         </vsan-date-range-picker>\n         <button *ngIf=\"isZoomed\"\n                 (click)=\"onZoomOut()\"\n                 class=\"btn btn-sm btn-link\">\n            {{\"vsan.perf.chart.zoom\" | localized}}\n         </button>\n      </div>\n      <div *ngIf=\"loadingCharts\" class=\"spinner central-spinner\"></div>\n      <ng-container *ngIf=\"!loadingCharts\">\n         <vsan-validation id=\"charts-error\"\n                          *ngIf=\"chartsError\"\n                          [alert]=\"chartsError\"\n                          [allowReload]=\"true\"\n                          [allowClose]=\"false\"\n                          (onReload)=\"updateChartsData()\">\n         </vsan-validation>\n         <vsan-perf-charts-container\n               id=\"historical-capacity-charts\"\n               [data]=\"chartsData\"\n               [currentTimeRange]=\"currentDateRange\"\n               [isShowAllLinkVisible]=\"false\"\n               [isZoomButtonVisible]=\"false\"\n               [isEmptyChartsVisible]=\"!chartsError\"\n               [zoomOutOptions]=\"zoomOption\"\n               (zoom)=\"onChartZoomIn($event)\">\n         </vsan-perf-charts-container>\n      </ng-container>\n   </ng-container>\n</ng-container>\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {ChartSectionData} from \"@component/chart/model/chart-section.data\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {BREAKDOWN_SECTIONS, VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {CapacityBreakdownPerspective} from \"./capacity-breakdown.component\";\n\n@Component({\n   templateUrl: \"capacity-breakdown-pie-chart.html\",\n   styleUrls: [\"capacity-breakdown-pie-chart.scss\"],\n   selector: \"vsan-capacity-breakdown-pie-chart\",\n})\nexport class CapacityBreakdownPieChartComponent implements OnInit {\n   breakdownTotalLabel: string;\n   summaryCapacityData: ChartSectionData[];\n   breakdownCapacityData: ChartSectionData[];\n\n   private vmBreakdownCapacityData: ChartSectionData[];\n   private userBreakdownCapacityData: ChartSectionData[];\n   private systemBreakdownCapacityData: ChartSectionData[];\n   private snapshotsBreakdownCapacityData: ChartSectionData[];\n\n   /**\n    * Used to control drill down state from parent component\n    */\n   @Input()\n   isDrillDown: boolean;\n\n   @Input()\n   capacityBreakdownPerspective: CapacityBreakdownPerspective;\n\n   @Input()\n   capacityData: CapacityData;\n\n   @Output()\n   drillDownCategoryChange: EventEmitter<CapacityDrillDownType> = new EventEmitter();\n\n   @Output()\n   isDrillDownChange: EventEmitter<boolean> = new EventEmitter();\n\n   constructor(private capacityService: VsanCapacityService,\n         private changeDetector: ChangeDetectorRef) {\n   }\n\n   ngOnInit(): void {\n      this.summaryCapacityData = this.capacityBreakdownPerspective === CapacityBreakdownPerspective.CATEGORIES\n            ? this.capacityService.parseSummarySectionsData(this.capacityData)\n            : this.capacityService.parseSnapshotsSummarySectionsData(this.capacityData);\n\n      this.drillOut();\n   }\n\n   drillDown(index: BREAKDOWN_SECTIONS) {\n      if (index == BREAKDOWN_SECTIONS.VM_CAPACITY) {\n         this.vmBreakdownCapacityData = this.getDrillDownData(this.vmBreakdownCapacityData,\n               BREAKDOWN_SECTIONS.VM_CAPACITY,\n               \"vsan.monitor.capacity.usage.breakdown.category.vm.pie.label\");\n      } else if (index == BREAKDOWN_SECTIONS.USER_OBJECTS) {\n         this.userBreakdownCapacityData = this.getDrillDownData(this.userBreakdownCapacityData,\n               BREAKDOWN_SECTIONS.USER_OBJECTS,\n               \"vsan.monitor.capacity.usage.breakdown.category.user.pie.label\");\n      } else if (index == BREAKDOWN_SECTIONS.SYSTEM_OBJECTS) {\n         this.systemBreakdownCapacityData = this.getDrillDownData(this.systemBreakdownCapacityData,\n               BREAKDOWN_SECTIONS.SYSTEM_OBJECTS,\n               \"vsan.monitor.capacity.usage.breakdown.category.system.pie.label\");\n      } else if (index == BREAKDOWN_SECTIONS.SYSTEM_OBJECTS) {\n         this.systemBreakdownCapacityData = this.getDrillDownData(this.systemBreakdownCapacityData,\n               BREAKDOWN_SECTIONS.SYSTEM_OBJECTS,\n               \"vsan.monitor.capacity.usage.breakdown.category.system.pie.label\");\n      } else if (index == BREAKDOWN_SECTIONS.SNAPSHOTS_USAGE) {\n         this.snapshotsBreakdownCapacityData = this.getDrillDownData(this.snapshotsBreakdownCapacityData,\n               BREAKDOWN_SECTIONS.SNAPSHOTS_USAGE,\n               \"vsan.monitor.capacity.usage.breakdown.category.snapshots.pie.label\");\n      }\n      // This is needed for automation to work. They are passing a mouse click event, which triggers this method\n      // but angular doesn't update the view as there is nothing happening to its knowing.\n      // Forcing the page to redraw with detect changes.\n      this.changeDetector.detectChanges();\n   }\n\n   private getDrillDownData(data: ChartSectionData[], section: BREAKDOWN_SECTIONS,\n         labelKey: string): ChartSectionData[] {\n      if (data) {\n         // Skip breakdown of the capacity if we already have it.\n         this.breakdownCapacityData = data;\n      } else {\n         this.breakdownCapacityData = this.capacityService.parseBreakdownSectionsData(this.capacityData, section);\n      }\n      this.breakdownTotalLabel = VsanUiUtils.getString(labelKey);\n      this.isDrillDown = true;\n      this.emitDrillDownChange(section);\n      return this.breakdownCapacityData;\n   }\n\n   private emitDrillDownChange(section: BREAKDOWN_SECTIONS) {\n      this.isDrillDownChange.emit(this.isDrillDown);\n\n      switch(section) {\n         case BREAKDOWN_SECTIONS.VM_CAPACITY:\n            this.drillDownCategoryChange.emit(CapacityDrillDownType.VM);\n            break;\n         case BREAKDOWN_SECTIONS.USER_OBJECTS:\n            this.drillDownCategoryChange.emit(CapacityDrillDownType.USER_OBJECTS);\n            break;\n         case BREAKDOWN_SECTIONS.SYSTEM_OBJECTS:\n            this.drillDownCategoryChange.emit(CapacityDrillDownType.SYSTEM_OBJECTS);\n            break;\n         case BREAKDOWN_SECTIONS.SNAPSHOTS_USAGE:\n            this.drillDownCategoryChange.emit(CapacityDrillDownType.SNAPSHOTS);\n      }\n   }\n\n   drillOut() {\n      // clear the breakdown data for pie chart in order to show the summary pie chart\n      this.breakdownCapacityData = null;\n      this.isDrillDown = false;\n      this.isDrillDownChange.emit(this.isDrillDown);\n      this.drillDownCategoryChange.emit(CapacityDrillDownType.NONE);\n   }\n}\n\nexport enum CapacityDrillDownType {\n   NONE,\n   VM,\n   USER_OBJECTS,\n   SYSTEM_OBJECTS,\n   SNAPSHOTS,\n}\n","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nexport class VsanSignpostUtil {\n   // The signpost's arrow is 12px in Clarity 2.2.0\n   private static readonly ARROW_SIZE: number = 12;\n   // The modal left or right padding is 24px.\n   private static readonly MODAL_HORIZONTAL_PADDING: number = 24;\n   // The modal top padding and title height or the bottom padding and footer height is 72px.\n   private static readonly MODAL_VERTICAL_PADDING: number = 72;\n\n   private static readonly TOP: string = \"top\";\n   private static readonly LEFT: string = \"left\";\n   private static readonly RIGHT: string = \"right\";\n   private static readonly BOTTOM: string = \"bottom\";\n   private static readonly MIDDLE: string = \"middle\";\n\n   static getPosition(elementId: string, signpostWidth: number, signpostHeight: number,\n         isInModal: boolean = false): string {\n      const elementBox: DOMRect = document.getElementById(elementId).getBoundingClientRect();\n      const modalVerticalPadding: number = isInModal\n            ? VsanSignpostUtil.MODAL_VERTICAL_PADDING\n            : 0;\n      const verticalPosition: string = VsanSignpostUtil.getVerticalPosition(\n            elementBox, signpostHeight + VsanSignpostUtil.ARROW_SIZE + modalVerticalPadding);\n      const modalHorizontalPadding: number = isInModal\n            ? VsanSignpostUtil.MODAL_HORIZONTAL_PADDING\n            : 0;\n      const horizontalPosition: string = VsanSignpostUtil.getHorizontalPosition(\n            elementBox, signpostWidth + VsanSignpostUtil.ARROW_SIZE + modalHorizontalPadding);\n      return `${verticalPosition}-${horizontalPosition}`;\n   }\n\n   private static getVerticalPosition(elementBox: ClientRect, elementHeight: number): string {\n      const bodyBox: DOMRect = document.body.getBoundingClientRect();\n      if (elementBox.bottom + elementHeight < bodyBox.height) {\n         // There is enough space to fit the signpost below the trigger\n         return VsanSignpostUtil.BOTTOM;\n      } else if (elementBox.top - elementHeight > 0) {\n         return VsanSignpostUtil.TOP;\n      } else {\n         return VsanSignpostUtil.MIDDLE;\n      }\n   }\n\n   private static getHorizontalPosition(elementBox: ClientRect, elementWidth: number): string {\n      const bodyBox: DOMRect = document.body.getBoundingClientRect();\n      if (elementBox.right + elementWidth < bodyBox.width) {\n         // There is enough space to fit the signpost on the right side of the view\n         return VsanSignpostUtil.RIGHT;\n      } else if (elementBox.left - elementWidth > 0) {\n         return VsanSignpostUtil.LEFT;\n      } else {\n         return VsanSignpostUtil.MIDDLE;\n      }\n   }\n}","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {SpaceEfficiencyService} from \"@service/space-efficiency-service\";\n\n@Component({\n   templateUrl: \"capacity-breakdown.html\",\n   styleUrls: [\"capacity-breakdown.scss\"],\n   selector: \"vsan-capacity-breakdown\"\n})\nexport class CapacityBreakdownComponent {\n   isCnsConfigured: boolean;\n   isFileServicesConfigured: boolean;\n\n   CapacityBreakdownPerspective: typeof CapacityBreakdownPerspective = CapacityBreakdownPerspective;\n   currentBreakdownPerspective: CapacityBreakdownPerspective = CapacityBreakdownPerspective.CATEGORIES;\n\n   private _capacityData: CapacityData;\n\n   @Input()\n   set capacityData(capacityData: CapacityData) {\n      this._capacityData = capacityData;\n      this.checkCnsConfigured();\n   }\n\n   get capacityData(): CapacityData {\n      return this._capacityData;\n   }\n\n   @Input()\n   capabilityData: VsanCapabilityData;\n\n   @Input()\n   isVsanMaxEnabled: boolean;\n\n   constructor(private navigationService: NavigationService,\n         private spaceEfficiencyService: SpaceEfficiencyService) {}\n\n   navigateToCns() {\n      this.navigationService.navigateTo(PlatformExtension.CLUSTER_CNS_VOLUMES)\n   }\n\n   navigateToFileServices() {\n      this.navigationService.navigateTo(PlatformExtension.FILE_SERVICE_SHARES);\n   }\n\n   /**\n    * The totalUsedSpace we used to calculate the usage percentage should be different according to the space efficiency status\n    * if space efficiency is on, we should use the value from VsanVcDiskManagementSystem.QueryClusterDataEfficiencyCapacityState\n    * (NOTE: space efficiency is not included and should be added)\n    */\n   get totalUsedSpace(): number {\n      if (!this.capacityData) {\n         return 0;\n      }\n\n      if (this.capacityData.spaceEfficiencyCapacity) {\n         return this.spaceEfficiencyService.capacityTotalUsedSpace(\n               this.capacityData.spaceEfficiencyCapacity, this.capacityData.systemUsageCapacity);\n      }\n\n      return this.capacityData.usedSpace;\n   }\n\n   get breakdownTitle(): string {\n      if (!this.capacityData || !this.capacityData.spaceEfficiencyCapacity) {\n         return VsanUiUtils.getString(\"vsan.monitor.capacity.usage.breakdown.title\");\n      }\n\n      return this.spaceEfficiencyService.capacityBreakdownLabel(\n            this.capacityData.spaceEfficiencyCapacity.spaceEfficiencyConfig);\n   }\n\n   private checkCnsConfigured(): void {\n      // Check if any CNS or FileServices are configured, based on which a link to these views is displayed\n      if (this._capacityData) {\n         this.isFileServicesConfigured = this._capacityData.userObjectsCapacity\n               && (this._capacityData.userObjectsCapacity.fileContainerVolumes > 0\n                     || this._capacityData.userObjectsCapacity.nativeFileShares > 0);\n         this.isCnsConfigured = (this._capacityData.vmCapacity\n               && this._capacityData.vmCapacity.blockContainerPrimaryDataUsage > 0)\n               || this._capacityData.userObjectsCapacity\n               && (this._capacityData.userObjectsCapacity.blockContainerVolumes > 0\n                     || this._capacityData.userObjectsCapacity.fileContainerVolumes > 0);\n      } else {\n         this.isCnsConfigured = false;\n         this.isFileServicesConfigured = false;\n      }\n   }\n}\n\nexport enum CapacityBreakdownPerspective {\n   CATEGORIES,\n   SNAPSHOTS,\n}\n","/* Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, Input} from \"@angular/core\";\nimport {SystemUsageCapacityData} from \"@generated/system-usage-capacity-data\";\nimport {CapacityBreakdownItemComponent} from \"./capacity-breakdown-item.component\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {SpaceEfficiencyConfig} from \"@generated/space-efficiency-config\";\nimport {SpaceEfficiencyService} from \"@service/space-efficiency-service\";\n\n@Component({\n   templateUrl: \"system-capacity-breakdown.html\",\n   styleUrls: [\"system-capacity-breakdown.scss\"],\n   selector: \"vsan-system-capacity-breakdown\",\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SystemCapacityBreakdownComponent extends CapacityBreakdownItemComponent {\n\n   constructor(capacityService: VsanCapacityService, private spaceEfficiencyService: SpaceEfficiencyService) {\n      super(capacityService);\n   }\n\n   /**\n    * The breakdown data for the system capacity usage.\n    */\n   @Input()\n   systemUsageCapacity: SystemUsageCapacityData;\n\n   @Input()\n   spaceEfficiency: SpaceEfficiencyConfig;\n\n   get spaceEfficiencyOverheadLabel(): string {\n      return this.spaceEfficiencyService.capacitySpaceOverheadLabel(this.spaceEfficiency);\n   }\n}","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport { Input, Output, EventEmitter, Directive } from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\"\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\n\n/**\n * Common class for breakdown sections in Cluster capacity monitoring.\n * Using Directive, instead of Component as there is no template, only behaviour here.\n * The child component define their templates, but extend the common mechanisms for determining expanded state as\n * well as drill down functionality.\n */\n@Directive()\nexport class CapacityBreakdownItemComponent {\n\n   /**\n    * Whether the breakdown tree view group is expanded or collapsed.\n    */\n   private _isExpanded: boolean;\n\n   @Input()\n   set isExpanded(val: boolean) {\n      this._isExpanded = val;\n      this.isExpandedChange.emit(this._isExpanded);\n   }\n\n   get isExpanded(): boolean {\n      return this._isExpanded;\n   }\n\n   /**\n    * Triggered when new datetime is picked by the user\n    */\n   @Output()\n   isExpandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n   /**\n    * Whether the current category is in drill down from the pie chart in the parent component.\n    * If so, we add a colored border to indicate this is currently in selected in the pie chart.\n    */\n   @Input()\n   isDrilldown: boolean;\n\n   /**\n    * The total capacity on the vSAN cluster in order to be able to show percentages.\n    */\n   @Input()\n   totalSpace: number;\n\n   constructor(protected capacityService: VsanCapacityService) {}\n\n   getTotalCapacityLabel(capacity: number, labelKey: string): string {\n      return VsanUiUtils.getString(labelKey) + \" \" + this.getFormattedCapacity(capacity, this.totalSpace);\n   }\n\n   getFormattedCapacity(value: number, total: number): string {\n      return this.capacityService.getFormattedCapacity(value, total);\n   }\n}"],"sourceRoot":"webpack:///"}