{"version":3,"sources":["./src/app/vsan/cluster-power/power-on/power-on.module.ts","./src/app/vsan/common/util/vsan-dialog-util.ts","./src/app/vsan/cluster-power/power-on/power-on.dialog.component.ts","./src/app/vsan/common/service/status-updates/vsan-status-change.data.ts","./src/app/vsan/cluster-power/power-on/power-on.dialog.html"],"names":[],"mappings":"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","file":"137-es2015.js","sourcesContent":["/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {PowerOnDialogComponent} from \"./power-on.dialog.component\";\nimport {CommonCellsModule} from \"@component/cell/common-cells.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\n\n\nconst routes: Routes = [\n   {\n      path: \"\",\n      component: PowerOnDialogComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      CommonPipeModule,\n      PromptModule,\n      RouterModule.forChild(routes),\n      CommonCellsModule,\n      ValidationModule,\n   ],\n   declarations: [\n      PowerOnDialogComponent,\n   ],\n})\nexport class PowerOnModule {\n}","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nexport class VsanDialogUtil {\n   static readonly CAPACITY_MANAGEMENT_DIALOG: VsanDialogProperties = {\n      width: 800,\n      height: 700,\n   };\n\n   static readonly DELETE_VOLUME_DIALOG: VsanDialogProperties = {\n      width: 500,\n      height: 250,\n   };\n\n   static readonly MIGRATE_VOLUME_DIALOG: VsanDialogProperties = {\n      width: 1030,\n      height: 710,\n   };\n\n   static readonly REAPPLY_VOLUME_POLICY_DIALOG: VsanDialogProperties = {\n      width: 700,\n      height: 250,\n   };\n\n   static readonly DUPLICATE_PCI_ID_MODEL_SELECTION_DIALOG: VsanDialogProperties = {\n      width: 800,\n      height: 500,\n   };\n\n   static readonly HEALTH_RESTORE_ACTION_DIALOG: VsanDialogProperties = {\n      width: 550,\n      height: 250,\n   };\n\n   // Keep in sync with plugin.xml extension point\n   static readonly CLUSTER_POWER_ON_DIALOG: VsanDialogProperties = {\n      width: 600,\n      height: 230,\n   };\n\n   static readonly VM_IO_DIAGNOSTICS_METRICS_DIALOG: VsanDialogProperties = {\n      width: 900,\n      height: 700,\n   };\n\n   static readonly VM_IO_DIAGNOSTICS_LATENCY_DIALOG: VsanDialogProperties = {\n      width: 1000,\n      height: 500,\n   };\n\n   static readonly VM_IO_DIAGNOSTICS_DOM_OWNER_LATENCY_DIALOG: VsanDialogProperties = {\n      width: 1000,\n      height: 400,\n   };\n\n   static readonly PERF_SVC_EDIT_ACTION_DIALOG: VsanDialogProperties = {\n      width: 800,\n      height: 450,\n   };\n\n   static readonly PERF_SVC_ENABLE_ACTION_DIALOG: VsanDialogProperties = {\n      width: 800,\n      height: 250,\n   };\n\n   static readonly CLAIM_DISKS_ACTION_DIALOG: VsanDialogProperties = {\n      width: 1200,\n      height: 650,\n   };\n\n   static readonly VSAN_DISK_CLAIM_ACTION_DIALOG: VsanDialogProperties = {\n      width: 670,\n      height: 300,\n   };\n}\n\nexport class VsanDialogProperties {\n   width: number;\n   height: number;\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ClusterPowerService} from \"@generated/cluster-power-service\";\nimport {ClusterComputeResource} from \"@service/client/dataservice/data-service-property\";\nimport {DataServiceClient} from \"@service/client/dataservice/data-service.service\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {StatusChangeType, VsanStatusChangeData} from \"@service/status-updates/vsan-status-change.data\";\nimport {VsanStatusService} from \"@service/status-updates/vsan-status.service\";\nimport {Icon} from \"@util/icon\";\nimport {Logger} from \"@util/logger\";\nimport {VsanDialogUtil} from \"@util/vsan-dialog-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"power-on.dialog.html\",\n   styleUrls: [\"power-on.dialog.scss\"],\n})\nexport class PowerOnDialogComponent implements OnInit {\n   clusterName: string;\n   isReadyToPowerOn: boolean = false;\n   disconnectedHosts: string[];\n\n   @LoadingIndicator()\n   isLoading: boolean;\n\n   @LoadingIndicator({name: \"power-on\"})\n   isOperationLoading: boolean;\n\n   @ErrorMessage()\n   errorMessage: string;\n\n   Icon: typeof Icon = Icon;\n   private readonly DIALOG_HEIGHT_WITH_ERROR: number = 350;\n\n   constructor(private dataService: DataServiceClient,\n         private powerService: ClusterPowerService,\n         private vsanStatusService: VsanStatusService) {\n\n   }\n\n   async ngOnInit(): Promise<void> {\n      this.checkHostsStatus();\n      this.clusterName = await this.queryClusterName();\n   }\n\n   @Loader()\n   async checkHostsStatus(): Promise<void> {\n      this.disconnectedHosts = await this.powerService.validateClusterPowerOn(ManagedObject.contextObject);\n      this.isReadyToPowerOn = VsanUiUtils.isEmpty(this.disconnectedHosts);\n      this.updateDialogHeight();\n   }\n\n   @Loader({name: \"power-on\"})\n   async onPowerOn(): Promise<void> {\n      try {\n         const taskRef: ManagedObject = await this.powerService.powerOnCluster(ManagedObject.contextObject);\n         this.vsanStatusService.storeChange(\n               new VsanStatusChangeData(taskRef, StatusChangeType.VSAN_CLUSTER_POWER_ON));\n         VsanUiUtils.closeModalDialog(taskRef);\n      } catch (e) {\n         this.errorMessage = e;\n      }\n   }\n\n   private async queryClusterName(): Promise<string> {\n      try {\n         return await this.dataService.getProperty(ClusterComputeResource.name, ManagedObject.contextObject);\n      } catch (error) {\n         Logger.warn(\"Failed to query cluster name. \", error);\n         return \"\";\n      }\n   }\n\n   private updateDialogHeight(): void {\n      if (!this.isReadyToPowerOn) {\n         VsanUiUtils.setModalDialogHeight(this.DIALOG_HEIGHT_WITH_ERROR);\n      } else {\n         VsanUiUtils.setModalDialogHeight(VsanDialogUtil.CLUSTER_POWER_ON_DIALOG.height);\n      }\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ManagedObject} from \"@service/managed-object\";\nimport {TaskStatus} from \"@service/task-monitor-service\";\n\n/**\n * Holds info for a status change initiated by the current user on the vSAN cluster.\n * This data is stored in the Browser local storage, check <code>VsanStatusService</code>\n * and is accessible across iframes.\n */\nexport class VsanStatusChangeData {\n\n   /**\n    * A cluster managed object reference associated with this status change\n    */\n   clusterRef: ManagedObject;\n\n   /**\n    * A task moref, that is changing the status of the vSAN cluster.\n    */\n   taskRef: ManagedObject;\n\n   /**\n    * Enum value, holding information about what status change is happening with the vSAN cluster exactly.\n    */\n   changeType: StatusChangeType;\n\n   /**\n    * Upon completion of the task will hold either SUCCESS or ERROR, which could be used by subscribers.\n    */\n   taskStatus: TaskStatus;\n\n   constructor(taskRef: ManagedObject, status: StatusChangeType,\n         clusterRef: ManagedObject = ManagedObject.contextObject) {\n      this.taskRef = taskRef;\n      this.changeType = status;\n      this.clusterRef = clusterRef;\n   }\n}\n\n/**\n * Enum with codes, used to differentiate different vSAN configuration events like\n * vSAN enabled, cluster shutdown, etc.\n */\nexport enum StatusChangeType {\n   /**\n    * A cluster has had the vSAN service enabled.\n    */\n   VSAN_SERVICE_ENABLED,\n   /**\n    * A cluster has had the vSAN service disabled.\n    */\n   VSAN_SERVICE_DISABLED,\n   /**\n    * A vSAN cluster has been powered on.\n    */\n   VSAN_CLUSTER_POWER_ON,\n   /**\n    * A vSAN cluster has been shut down.\n    */\n   VSAN_CLUSTER_POWER_OFF,\n}","<!-- Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-create-prompt\n      [title]=\"'vsan.cluster.powerOn.title' | localized\"\n      [subtitle]=\"clusterName\"\n      [confirmText]=\"'vsan.cluster.powerOn.title' | localized\"\n      [(alertMessage)]=\"errorMessage\"\n      [blockButton]=\"!isReadyToPowerOn ||isOperationLoading || errorMessage\"\n      [blockContent]=\"isOperationLoading\"\n      (onConfirm)=\"onPowerOn()\">\n   <div class=\"dialog-container\">\n      <div *ngIf=\"isLoading\" class=\"icon-name-container\">\n         <span class=\"spinner spinner-sm spinner-inline\"></span>\n         <span>{{\"vsan.cluster.powerOn.checking.label\" | localized}}</span>\n      </div>\n      <ng-container *ngIf=\"!isLoading && !errorMessage\">\n         <ng-container *ngIf=\"!isReadyToPowerOn\" class=\"column-flex-container\">\n            <vsan-validation\n                  [alert]=\"'vsan.cluster.powerOn.error.label' | localized\"\n                  [allowClose]=\"false\"\n                  [isSmall]=\"true\"\n                  [allowReload]=\"true\"\n                  [actionLabel]=\"'vsan.cluster.powerOn.error.retry.label' |localized\"\n                  (onReload)=\"checkHostsStatus()\">\n            </vsan-validation>\n            <clr-datagrid>\n               <clr-dg-column>{{\"vsan.cluster.powerOn.host.label\" | localized}}</clr-dg-column>\n               <clr-dg-row *ngFor=\"let hostName of disconnectedHosts\">\n                  <clr-dg-cell>\n                     <vsan-icon-item [shape]=\"Icon.HOST\" [label]=\"hostName\"></vsan-icon-item>\n                  </clr-dg-cell>\n               </clr-dg-row>\n            </clr-datagrid>\n         </ng-container>\n         <vsan-icon-item *ngIf=\"isReadyToPowerOn\"\n                         [shape]=\"Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE\"\n                         [iconClass]=\"Icon.CLR_SUCCESS_ICON_CLASS\"\n                         [label]=\"'vsan.cluster.powerOn.ready.label' | localized\">\n         </vsan-icon-item>\n      </ng-container>\n   </div>\n</vsan-create-prompt>\n"],"sourceRoot":"webpack:///"}