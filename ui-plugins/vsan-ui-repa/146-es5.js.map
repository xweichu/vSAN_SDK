{"version":3,"sources":["webpack:///src/app/vsan/supportassist/upload-support-bundle.component.ts","webpack:///src/app/vsan/supportassist/upload-support-bundle.module.ts","webpack:///src/app/vsan/supportassist/upload-support-bundle.html"],"names":["UploadSupportBundleComponent","healthPropertyProvider","supportMutationProvider","formBuilder","SERVICE_REQUEST_ID","waitingForTask","controlsConfig","required","pattern","uploadSupportBundle","group","clusterRef","contextObject","getExternalProxySettings","then","settings","proxySettings","alerts","validateProxySettings","error","invalid","length","attachVsanSupportBundleToSr","getServiceRequestId","task","closeModalDialog","getString","enableInternetAccess","get","value","trim","routes","path","component","UploadSupportBundleModule"],"mappings":"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","file":"146-es5.js","sourcesContent":["/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ExternalProxySettingsConfig} from \"@generated/external-proxy-settings-config\";\nimport {VsanHealthPropertyProvider} from \"@generated/vsan-health-property-provider\";\nimport {VsanSupportMutationProvider} from \"@generated/vsan-support-mutation-provider\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"upload-support-bundle.html\",\n   styleUrls: [\"upload-support-bundle.scss\"],\n   selector: \"vsan-upload-support-bundle\",\n})\nexport class UploadSupportBundleComponent implements OnInit {\n\n   readonly SERVICE_REQUEST_ID: string = \"serviceRequestId\";\n\n   clusterRef: ManagedObject;\n\n   uploadSupportBundle: FormGroup;\n\n   proxySettings: ExternalProxySettingsConfig;\n   alerts: string[];\n   waitingForTask: boolean = false;\n\n   constructor(\n         private healthPropertyProvider: VsanHealthPropertyProvider,\n         private supportMutationProvider: VsanSupportMutationProvider, private formBuilder: FormBuilder) {\n\n      const controlsConfig: any = {};\n      controlsConfig[this.SERVICE_REQUEST_ID] = new FormControl(\"\",\n            [Validators.required, Validators.pattern(\"[A-za-z0-9]+\")]);\n      this.uploadSupportBundle = this.formBuilder.group(controlsConfig);\n   }\n\n   ngOnInit(): void {\n      this.clusterRef = ManagedObject.contextObject;\n      this.healthPropertyProvider.getExternalProxySettings(this.clusterRef)\n            .then(settings => {\n               this.proxySettings = settings;\n               this.alerts = this.validateProxySettings();\n            })\n            .catch(error => {\n               this.alerts = this.validateProxySettings();\n            });\n   }\n\n   get isApplyButtonBlocked(): boolean {\n      return this.waitingForTask || this.uploadSupportBundle.invalid;\n   }\n\n   uploadClicked(): void {\n      this.alerts = this.validateProxySettings();\n      if (!!this.alerts.length) {\n         return;\n      }\n      this.waitingForTask = true;\n\n      this.supportMutationProvider.attachVsanSupportBundleToSr(this.clusterRef, this.getServiceRequestId())\n            .then(task => VsanUiUtils.closeModalDialog())\n            .catch(error => this.alerts = [VsanUiUtils.getString(\"vsan.common.error.taskError\")])\n            .finally(() => this.waitingForTask = false);\n   }\n\n   private validateProxySettings(): string[] {\n      if (!this.proxySettings || !this.proxySettings.enableInternetAccess) {\n         return [VsanUiUtils.getString(\"vsan.cluster.uploadSupportBundle.validation.noInternetAccess\")];\n      }\n      return [];\n   }\n\n   private getServiceRequestId(): string {\n      if (!this.uploadSupportBundle) {\n         return null;\n      }\n      return this.uploadSupportBundle.get(this.SERVICE_REQUEST_ID).value.trim();\n   }\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {Routes, RouterModule} from \"@angular/router\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {UploadSupportBundleComponent} from \"./upload-support-bundle.component\";\n\nconst routes: Routes = [\n   {\n      path: \"\",\n      component: UploadSupportBundleComponent\n   }\n];\n\n@NgModule({\n   imports: [\n      PromptModule,\n      ClarityModule,\n      CommonPipeModule,\n      ReactiveFormsModule,\n      RouterModule.forChild(routes)\n   ],\n   declarations: [\n      UploadSupportBundleComponent\n   ]\n})\nexport class UploadSupportBundleModule {\n}","<!--Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-default-prompt\n      [title]=\"'vsan.cluster.uploadSupportBundle.dialogTitle' | localized\"\n      [confirmText]=\"'vsan.cluster.uploadSupportBundle.uploadButton' | localized\"\n      [blockButton]=\"isApplyButtonBlocked\"\n      [(alertMessages)]=\"alerts\"\n      (onConfirm)=\"uploadClicked()\">\n   <!-- TODO: (vasilevd) Extract link to the KB from the message -->\n   <div>{{\"vsan.cluster.uploadSupportBundle.info\" | localized}}</div>\n   <form [formGroup]=\"uploadSupportBundle\" clrForm clrLayout=\"horizontal\">\n      <clr-input-container>\n         <label for=\"sr-input\" class=\"clr-col-md-3\">\n            {{\"vsan.cluster.uploadSupportBundle.serviceRequestId\" | localized}}\n         </label>\n         <input type=\"text\"\n                id=\"sr-input\"\n                name=\"srInput\"\n                class=\"clr-col-md-9\"\n                clrInput\n                size=\"45\"\n                formControlName=\"{{SERVICE_REQUEST_ID}}\" />\n         <clr-control-error *clrIfError=\"'required'\">\n            {{\"vsan.cluster.uploadSupportBundle.validation.emptyServiceRequest\" | localized}}\n         </clr-control-error>\n         <clr-control-error *clrIfError=\"'pattern'\">\n            {{\"vsan.cluster.uploadSupportBundle.validation.invalid\" | localized}}\n         </clr-control-error>\n      </clr-input-container>\n   </form>\n</vsan-default-prompt>\n"]}