{"version":3,"sources":["webpack:///src/app/vsan/file-services/shares/file-share-util.ts","webpack:///src/app/vsan/performance/model/file-share-entity.ts","webpack:///src/app/vsan/common/pipe/file-share-protocol-pipe.ts"],"names":["VsanFileShareUtils","type","USER","getString","CNS","protocol","transform","toLocaleLowerCase","share","isOverRedThreshold","isOverSoftQuota","securityType","AUTH_SYS","KRB5","KRB5I","KRB5P","smbEncryptionOption","DISABLED","MANDATORY","enabled","MMC_HEAD","fileServerFqdn","managedBy","CNS_FILE_VOLUME","FOLDER","UNKNOWN","EMPTY_ICON","isSmbShareSupported","isSmbProtocolPerfSupported","createFileShareEntity","FileShareEntityType","NFS","entity","VDFS","config","SMB","protocolEntity","entityType","entityId","CLUSTER_FILE_SERVICE_ENTITY","entityName","name","entityLabelName","getFileShareEntityLabel","entityUuid","getFileShareEntityUuid","icon","getShareIcon","baseEntityUuid","domainName","size","GB","MB","TB","error","FILE_SHARE_QUOTA_RED_THRESHOLD","NAME_FIELD","LABELS_FIELD","QUOTA_FIELD","QUOTA_SIZE_FIELD","SOFT_QUOTA_FIELD","SOFT_QUOTA_SIZE_FIELD","USED_CAPACITY_FIELD","OWNER_TYPE_FIELD","PROTOCOL_FIELD","POLICY_FIELD","USAGE_OVER_QUOTA_FIELD","INVALID_CHARS","INVALID_OU_CHARS","FileShareEntity","FileShareProtocolPipe","NFSv3","NFSv4"],"mappings":"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","file":"40-es5.js","sourcesContent":["/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanFileShareOwnerType} from \"@generated/vsan-file-share-owner-type\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanFileShareProtocol} from \"@generated/vsan-file-share-protocol\";\nimport {VsanFileServiceShare} from \"@generated/vsan-file-service-share\";\nimport {VsanFileShareNfsSecurityType} from \"@generated/vsan-file-share-nfs-security-type\";\nimport {SmbEncryptionOption} from \"@generated/smb-encryption-option\";\nimport {Icon} from \"@util/icon\";\nimport {FileShareEntity} from \"../../performance/model/file-share-entity\";\nimport {PerfChartDataConstants} from \"@component/chart/performance/perf-chart-util\";\nimport {VsanFileServiceShareSize} from \"@generated/vsan-file-service-share-size\";\nimport {Logger} from \"@util/logger\";\nimport {FileShareProtocolPipe} from \"@pipe/file-share-protocol-pipe\";\n\nexport class VsanFileShareUtils {\n   /**\n    * Default soft quota (warning threshold) for file share\n    */\n   static readonly FILE_SHARE_QUOTA_RED_THRESHOLD: number = 80;\n\n   // File share fields\n   static readonly NAME_FIELD: string = \"config.name\";\n   static readonly LABELS_FIELD: string = \"config.labels\";\n   static readonly QUOTA_FIELD: string = \"config.quota\";\n   static readonly QUOTA_SIZE_FIELD: string = \"config.quotaSize\";\n   static readonly SOFT_QUOTA_FIELD: string = \"config.softQuota\";\n   static readonly SOFT_QUOTA_SIZE_FIELD: string = \"config.softQuotaSize\";\n   static readonly USED_CAPACITY_FIELD: string = \"usedCapacity\";\n   static readonly OWNER_TYPE_FIELD: string = \"managedBy\";\n   static readonly PROTOCOL_FIELD: string = \"config.protocol\";\n   static readonly POLICY_FIELD: string = \"config.policyId\";\n   static readonly USAGE_OVER_QUOTA_FIELD: string = \"usageOverQuota\";\n   static readonly INVALID_CHARS: RegExp = /[\\s~`!@#$%^&*(){}\\[\\];:\"'<,.>?\\\\\\/|+=]/;\n   // allow space in the OU name\n   static readonly INVALID_OU_CHARS: RegExp = /[\\t\\n\\r\\f\\v~`!@#$%^&*(){}\\[\\];:\"'<,.>?\\\\\\/|+=]/;\n\n   // MMC (Microsoft Management Console) is a windows command to manage the SMB file share\n   // To get a full command, we need to append this in front of the file server FQDN\n   private static readonly MMC_HEAD: string = \"fsmgmt.msc /computer:\\\\\\\\\";\n\n   /**\n    * Get the string value of the file share owner type\n    */\n   static getShareOwnerType(type: VsanFileShareOwnerType): string {\n      switch (type) {\n         case VsanFileShareOwnerType.USER:\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.col.owner.type.user\");\n         case VsanFileShareOwnerType.CNS:\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.col.owner.type.cns\");\n         default:\n            return VsanUiUtils.getString(\"vsan.common.unknown\");\n      }\n   }\n\n   static getShareProtocolLabel(protocol: VsanFileShareProtocol): string {\n      return new FileShareProtocolPipe().transform(protocol);\n   }\n\n   static getExportPathLabel(protocol: string): string {\n      switch (protocol.toLocaleLowerCase()) {\n         case \"nfsv3\":\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.grid.details.nfs3.path\");\n         case \"nfsv4.1\":\n         case \"nfsv4\":\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.grid.details.nfs4.path\");\n         case \"smb\":\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.grid.details.smb.path\");\n      }\n   }\n\n   static getExportPathMenuLabel(protocol: string): string {\n      switch (protocol.toLocaleLowerCase()) {\n         case \"nfsv3\":\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.nfs3\");\n         case \"nfsv4.1\":\n         case \"nfsv4\":\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.nfs41\");\n         case \"smb\":\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.smb\");\n      }\n   }\n\n   static getProgressTitle(share: VsanFileServiceShare): string {\n      if (share.isOverRedThreshold) {\n         return VsanUiUtils.getString(\"vsan.fileservices.shares.title.error\");\n      } else if (share.isOverSoftQuota) {\n         return VsanUiUtils.getString(\"vsan.fileservices.shares.title.warn\");\n      } else {\n         return VsanUiUtils.getString(\"vsan.fileservices.shares.title.info\");\n      }\n   }\n\n   static getProgressClass(share: VsanFileServiceShare): string {\n      if (share.isOverRedThreshold) {\n         return \"error\";\n      } else if (share.isOverSoftQuota) {\n         return \"warn\";\n      } else {\n         return \"info\";\n      }\n   }\n\n   static getSecurityModeText(securityType: VsanFileShareNfsSecurityType): string {\n      if (securityType === VsanFileShareNfsSecurityType.AUTH_SYS) {\n         return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.security.authSys\");\n      }\n      return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.security.kerberos\");\n   }\n\n   static getKerberosText(securityType: VsanFileShareNfsSecurityType): string {\n      switch (securityType) {\n         case VsanFileShareNfsSecurityType.KRB5:\n            return VsanUiUtils.getString(\n                  \"vsan.services.fileservices.wizard.activeDirectoryPage.security.kerberos.krb5\");\n         case VsanFileShareNfsSecurityType.KRB5I:\n            return VsanUiUtils.getString(\n                  \"vsan.services.fileservices.wizard.activeDirectoryPage.security.kerberos.krb5i\");\n         case VsanFileShareNfsSecurityType.KRB5P:\n            return VsanUiUtils.getString(\n                  \"vsan.services.fileservices.wizard.activeDirectoryPage.security.kerberos.krb5p\");\n      }\n   }\n\n   static getSmbEncryptionText(smbEncryptionOption: SmbEncryptionOption): string {\n      switch (smbEncryptionOption) {\n         case SmbEncryptionOption.DISABLED:\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.smb.encryption.none\");\n         case SmbEncryptionOption.MANDATORY:\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.smb.mandatory\");\n      }\n   }\n\n   static getSmbAbeOptionText(enabled: boolean): string {\n      return enabled\n            ? VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.smb.abe.enabled\")\n            : VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.smb.abe.disabled\");\n   }\n\n   static getMmcCommand(share: VsanFileServiceShare): string {\n      return VsanFileShareUtils.MMC_HEAD + share.fileServerFqdn;\n   }\n\n   static getShareIcon(share: VsanFileServiceShare): string {\n      switch (share.managedBy) {\n         case VsanFileShareOwnerType.CNS:\n            return Icon.CNS_FILE_VOLUME;\n         case VsanFileShareOwnerType.USER:\n            return Icon.FOLDER;\n         case VsanFileShareOwnerType.UNKNOWN:\n            return Icon.EMPTY_ICON;\n      }\n   }\n\n   /**\n    * Get the perf entity for a file share. If smb share is not supported, then it's a 70 VC and we only support\n    * nfs perf; If smb is supported but the smb protocol perf is not supported, then it's a 70u1 VC, and we\n    * support nfs & vdfs perf; After 70u1 we support both smb & vdfs perf;\n    *\n    * @param share: file share object\n    * @param isSmbShareSupported: if the smb share is supported (since 70u1 release).\n    * @param isSmbProtocolPerfSupported: if the smb protocol layer performance is supported (since 70u2 release).\n    */\n   static getFileShareEntity(share: VsanFileServiceShare, isSmbShareSupported: boolean,\n         isSmbProtocolPerfSupported: boolean = false): FileShareEntity {\n      // Only display the NFS layer metrics if SMB is not supported, even it's a NFS share\n      // Because the backend support for vdfs layer comes with SMB support\n      if (!isSmbShareSupported) {\n         return this.createFileShareEntity(share, FileShareEntityType.NFS);\n      }\n      const entity: FileShareEntity = this.createFileShareEntity(share, FileShareEntityType.VDFS);\n      if (share.config.protocol !== VsanFileShareProtocol.SMB) {\n         entity.protocolEntity = this.createFileShareEntity(share, FileShareEntityType.NFS);\n      } else if (isSmbProtocolPerfSupported) {\n         entity.protocolEntity = this.createFileShareEntity(share, FileShareEntityType.SMB);\n      }\n      return entity;\n   }\n\n   static createFileShareEntity(share: VsanFileServiceShare, entityType: FileShareEntityType): FileShareEntity {\n      const entity: FileShareEntity = new FileShareEntity();\n      entity.entityId = PerfChartDataConstants.CLUSTER_FILE_SERVICE_ENTITY;\n      entity.entityName = share.config.name;\n      entity.entityLabelName = this.getFileShareEntityLabel(entityType);\n      entity.entityUuid = this.getFileShareEntityUuid(share, entityType);\n      entity.icon = VsanFileShareUtils.getShareIcon(share);\n      return entity;\n   }\n\n   static getFileShareEntityUuid(share: VsanFileServiceShare,\n         entityType: FileShareEntityType = FileShareEntityType.VDFS): string {\n      const baseEntityUuid: string = `${share.config.domainName}|${share.config.name}`;\n      switch (entityType) {\n         case FileShareEntityType.NFS:\n            return baseEntityUuid;\n         case FileShareEntityType.SMB:\n            return `${baseEntityUuid}|smb`;\n         case FileShareEntityType.VDFS:\n         default:\n            return `${baseEntityUuid}|vdfs`;\n      }\n   }\n\n   static getSizeLabel(size: VsanFileServiceShareSize): string {\n      switch (size) {\n         case VsanFileServiceShareSize.GB:\n            return VsanUiUtils.getString(\"vsan.common.gigabytes\");\n         case VsanFileServiceShareSize.MB:\n            return VsanUiUtils.getString(\"vsan.common.megabytes\");\n         case VsanFileServiceShareSize.TB:\n            return VsanUiUtils.getString(\"vsan.common.terabytes\");\n         default:\n            Logger.error(\"unsupported size type: \" + size);\n            return \"\";\n      }\n   }\n\n   private static getFileShareEntityLabel(entityType: FileShareEntityType): string {\n      switch (entityType) {\n         case FileShareEntityType.NFS:\n            return VsanUiUtils.getString(\"vsan.monitor.cluster.performance.fileServices.nfs.section.title\");\n         case FileShareEntityType.SMB:\n            return VsanUiUtils.getString(\"vsan.monitor.cluster.performance.fileServices.smb.section.title\");\n         case FileShareEntityType.VDFS:\n         default:\n            return VsanUiUtils.getString(\"vsan.monitor.cluster.performance.fileServices.vdfs.section.title\");\n      }\n   }\n}\n\nexport enum FileShareEntityType {\n   VDFS,\n   NFS,\n   SMB,\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {BasePerfEntity} from \"./base-perf-entity\";\n\nexport class FileShareEntity extends BasePerfEntity {\n   protocolEntity: BasePerfEntity;\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanFileShareProtocol} from \"@generated/vsan-file-share-protocol\";\n\n/**\n * transform the file share protocol to string.\n * Currently this pipe is used in both File service and File service analytics feature\n */\n@Pipe({\n   name: \"shareProtocol\",\n})\nexport class FileShareProtocolPipe implements PipeTransform {\n   transform(protocol: VsanFileShareProtocol, ...args: any[]): string {\n      switch (protocol) {\n         case VsanFileShareProtocol.NFSv3:\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.nfs3\");\n         case VsanFileShareProtocol.NFSv4:\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.nfs41\");\n         case VsanFileShareProtocol.SMB:\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.smb\");\n         default:\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.nfsv3_and_nfsv41\");\n      }\n   }\n}\n"]}