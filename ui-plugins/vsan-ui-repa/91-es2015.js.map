{"version":3,"sources":["./src/app/vsan/common/component/health/health-check-item.module.ts","./src/app/vsan/common/component/health/health-check-item.html","./src/app/vsan/common/component/health/health-check-item.component.ts"],"names":[],"mappings":";;;;;;;;;;AAoBA;AAAA;AAAO,MAAM,qBAAqB;CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mECbjC;YAAA;YAAA,YAEmC;YAAhC;;gCAA+B;;YAFlC;QAAA,aAEmC,kOAEnC;AAAA;;mEACA;YAAA;YAAA,YAGoC;YAAjC;;gCAAgC;;YAHnC;QAAA,aAGoC,IAFjC,uDAAmF,IAElD,2FAEpC,yDAJG,gMAAmF,iCADtF,YAGoC,EAFjC,SAAmF,GAElD,yEAEpC;AAAA;yOAjB+E,0EACnF,yJAA4B,mFACxB,u+BAGoB,kFACpB,MAAW,8EACX,+YAEmC,IAE/B,8EACJ,+YAGoC,IAEhC,0EACR,MAAM,0EACN,mDAfc,0BAAgB,EADhB,mBAA0B,iBADpC,YAGoB,EADV,SAAgB,EADhB,SAA0B,GAIjC,mBAA+B,0BAAlC,aAEmC,EAFhC,SAA+B,GAK/B,oBAAgC,0BAAnC,aAGoC,EAHjC,SAAgC,mDAVzB,mBAA6B,iBAAvC,YAGoB,EAHV,SAA6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACF3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFAAkF;AACb;AAEf;AACL;AACmC;AAC9B;AAGtD;;GAEG;AAMI;UAAM,eAAe;QAKzB,YAAoB,iBAAoC;YAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;YAYxD,eAAU,GAAkB,qEAAa,CAAC,aAAa,CAAC;YAGxD,8BAAyB,GAAgC,IAAI,0DAAY,EAAiB,CAAC;YAsB3F,yBAAoB,GAAG,GAAS,EAAE;gBAC/B,IAAI,gEAAY,CAAC,8BAA8B,CAAC;qBACzC,OAAO,CACF,eAAe,CAAC,yBAAyB,EACzC,eAAe,CAAC,0BAA0B,CAAC;qBAChD,IAAI,CAAC;oBACH,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,gBAAgB;oBACxC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW;oBACzC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW;oBACzC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU;iBACzC,CAAC,CAAC;YACZ,CAAC,CAAC;QAhDyD,CAAC;QAiB5D,YAAY;YACT,OAAO,qEAAc,CAAC,4BAA4B,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC/E,CAAC;QAED,YAAY;YACT,OAAO,qEAAc,CAAC,4BAA4B,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC/E,CAAC;QAED,mBAAmB;YAChB,MAAM,OAAO,GAAkB;gBAC5B,iBAAiB,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY;aAClD,CAAC;YAEF,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;gBACzB,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,gFAAiB,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;aAChG;iBAAM;gBACJ,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC/C;QACJ,CAAC;;IAtCuB,0CAA0B,GAAW,GAAG,CAAC;IACzC,yCAAyB,GAAW,GAAG,CAAC","file":"91-es2015.js","sourcesContent":["/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {HealthCheckItem} from \"@component/health/health-check-item.component\";\nimport {VsanCommonModule} from \"../../vsan-common.module\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      VsanCommonModule,\n   ],\n   declarations: [\n      HealthCheckItem,\n   ],\n   exports: [\n      HealthCheckItem,\n   ],\n})\nexport class HealthCheckItemModule {}\n","<!--Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"item-container\">\n    <clr-icon [attr.shape]=\"getIconShape()\"\n              [ngClass]=\"getIconClass()\"\n              class=\"is-solid\"\n              size=\"18\">\n    </clr-icon>\n    <a *ngIf=\"canNavigateToHealthView\"\n       href=\"javascript://\"\n       (click)=\"onHealthItemClicked()\">\n        {{healthCheck.healthCheckLabel}}\n    </a>\n    <a *ngIf=\"!canNavigateToHealthView\"\n       [title]=\"'vsan.common.dialogOpen.title' | localized : healthCheck.healthCheckLabel\"\n       href=\"javascript://\"\n       (click)=\"openHealthItemDialog()\">\n        {{healthCheck.healthCheckLabel}}\n    </a>\n</div>\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {VsanHealthCheck} from \"@generated/vsan-health-check\";\nimport {VsanHealthUtil} from \"@util/vsan-health-util\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {HealthContext} from \"@navigation/context/health-context\";\n\n/**\n * Component for rendering vsan health check item\n */\n@Component({\n   selector: \"health-check-item\",\n   templateUrl: \"health-check-item.html\",\n   styleUrls: [\"health-check-item.scss\"],\n})\nexport class HealthCheckItem {\n\n   private static readonly HEALTH_CHECK_DIALOG_HEIGHT: number = 500;\n   private static readonly HEALTH_CHECK_DIALOG_WIDTH: number = 900;\n\n   constructor(private navigationService: NavigationService) {}\n\n   @Input()\n   healthCheck: VsanHealthCheck;\n\n   @Input()\n   canNavigateToHealthView: boolean;\n\n   @Input()\n   inlineHealthView: boolean;\n\n   @Input()\n   clusterRef: ManagedObject = ManagedObject.contextObject;\n\n   @Output()\n   onInlineHealthViewDisplay: EventEmitter<HealthContext> = new EventEmitter<HealthContext>();\n\n   getIconShape(): string {\n      return VsanHealthUtil.getVsanHealthStatusIconShape(this.healthCheck.status);\n   }\n\n   getIconClass(): string {\n      return VsanHealthUtil.getVsanHealthStatusIconClass(this.healthCheck.status);\n   }\n\n   onHealthItemClicked(): void {\n      const context: HealthContext = {\n         selectedSubTestId: this.healthCheck.healthTestId,\n      };\n\n      if (!this.inlineHealthView) {\n         this.navigationService.navigateTo(PlatformExtension.CLUSTER_HEALTH, this.clusterRef, context);\n      } else {\n         this.onInlineHealthViewDisplay.emit(context);\n      }\n   }\n\n   openHealthItemDialog = (): void => {\n      new ModalBuilder(\"hciCluster/healthCheckDialog\")\n            .setSize(\n                  HealthCheckItem.HEALTH_CHECK_DIALOG_WIDTH,\n                  HealthCheckItem.HEALTH_CHECK_DIALOG_HEIGHT)\n            .open({\n               title: this.healthCheck.healthCheckLabel,\n               perspective: this.healthCheck.perspective,\n               healthGroup: this.healthCheck.healthGroup,\n               healthTest: this.healthCheck.healthTest,\n            });\n   };\n}\n"],"sourceRoot":"webpack:///"}