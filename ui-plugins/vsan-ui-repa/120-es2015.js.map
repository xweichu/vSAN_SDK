{"version":3,"sources":["./src/app/vsan/common/component/datagrid/tree-datagrid.module.ts","./src/app/vsan/common/util/modal-builder.ts","./src/app/vsan/internetconnectivity/edit/edit-internet-connectivity-config.component.ts","./src/app/vsan/common/component/popup-list/popup-list.module.ts","./src/app/vsan/internetconnectivity/internet-connectivity.html","./src/app/vsan/internetconnectivity/internet-connectivity.module.ts","./src/app/vsan/common/component/navigation/vsan-breadcrumb.module.ts","./src/app/vsan/common/component/cell/common-cells.module.ts","./src/app/vsan/common/component/inventory/inventory-browser.module.ts","./src/app/vsan/internetconnectivity/internet-connectivity.component.ts","./src/app/vsan/common/vsan-common.module.ts","./src/app/vsan/common/component/search/search.module.ts","./src/app/vsan/internetconnectivity/edit/edit-internet-connectivity-config.html","./src/app/vsan/common/component/action-button/action-button.module.ts","./src/app/vsan/common/directive/reactive-forms/disable-control.directive.ts"],"names":[],"mappings":";;;;;;;;;;AAqCA;AAAA;AAAO,MAAM,kBAAkB;CAC9B;;;;;;;;;;;;;;ACtCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFAAkF;AACrC;AACS;AACtB;AACO;AACC;AAEjC;UAAM,YAAY;QAwBtB,YAAoB,KAAa;YAAb,UAAK,GAAL,KAAK,CAAQ;YAZzB,SAAI,GAAa,YAAY,CAAC,YAAY,CAAC;YAEnD,8DAA8D;YAC9D,2CAA2C;YACnC,UAAK,GAAW,IAAI,CAAC;YAErB,uBAAkB,GAAW,IAAI,CAAC;YAElC,cAAS,GAAQ,EAAE,CAAC;QAK5B,CAAC;QAED,aAAa,CAAC,UAAoB;YAC/B,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;gBACzC,8CAAM,CAAC,IAAI,CAAC,0BAA0B,EAAE,UAAU,CAAC,CAAC;gBACpD,UAAU,GAAG,YAAY,CAAC,YAAY,CAAC;aACzC;YACD,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;QACxF,CAAC;QAED,OAAO,CAAC,KAAa,EAAE,MAAc;YAClC,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAC5B,OAAO,IAAI,CAAC;QACf,CAAC;QAED,gBAAgB,CAAC,MAAW;YACzB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;YACxB,OAAO,IAAI,CAAC;QACf,CAAC;QAED;;WAEG;QACH,QAAQ,CAAC,KAAa;YACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,OAAO,IAAI,CAAC;QACf,CAAC;QAED,qBAAqB,CAAC,kBAA0B;YAC7C,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;YAC7C,OAAO,IAAI,CAAC;QACf,CAAC;QAED;;;WAGG;QACH,cAAc,CAAC,WAAwB;YACpC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,OAAO,IAAI,CAAC;QACf,CAAC;QAED;;;;;WAKG;QACH,IAAI,CAAC,OAAa;YACf,OAAO,IAAI,OAAO,CAAM,CAAC,MAAM,EAAE,EAAE;gBAChC,sDAAW,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBACzE,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBACpD,sDAAW,CAAC,aAAa,CAAC,kBAAkB,GAAG,CAAC,IAAU,EAAE,EAAE;oBAC3D,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;wBAC9B,mGAAmG;wBACnG,4DAA4D;wBAC5D,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;qBAC3C;yBAAM,IAAI,sDAAW,CAAC,aAAa,CAAC,aAAa,IAAI,sDAAW,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,EAAE;wBAClG,6FAA6F;wBAC7F,+BAA+B;wBAC/B,UAAU,CAAC,GAAG,EAAE,CAAC,sDAAW,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,EAAE,EAAE,GAAG,CAAC,CAAC;qBACzE;gBACJ,CAAC,CAAC;gBAEF,IAAI,SAAS,GAAW,GAAG,YAAY,CAAC,OAAO,WAAW,IAAI,CAAC,KAAK,EAAE,CAAC;gBAEvE,IAAI,SAAS,GAAW,GAAG,CAAC;gBAC5B,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,SAAS,EAAE;oBACjC,SAAS,IAAI,SAAS,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;oBAC7D,SAAS,GAAG,GAAG,CAAC;iBAClB;gBAED,qDAAW,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAChC,SAAS,EACT,qEAAa,CAAC,gBAAgB,EAC9B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAC1B,IAAI,CAAC,KAAK,IAAI,IAAI,EAClB,sDAAW,CAAC,aAAa,CAAC,kBAAkB,CAAC,aAAa,EAC1D,OAAO,CAAC,8CAA8C,EACtD,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;QACN,CAAC;;IAxGe,kBAAK,GAAW,CAAC,CAAC;IAClB,mBAAM,GAAW,CAAC,CAAC;IAEnB,yBAAY,GAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACrC,sBAAS,GAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAElC,oBAAO,GAAW,CAAC,4DAAW,CAAC,IAAI,IAAI,4DAAW,CAAC,aAAa,CAAC;QAC3E,CAAC,CAAC,YAAY;QACd,CAAC,CAAC,iBAAiB,CAAC;;;;;;;;;;;;;;;;ACX7B;AAAA;AAAA;AAAA;AAAA;AAA4C;AACuB;AAEW;AAOvE,MAAM,iCAAiC;IAgB3C,YAAoB,WAAwB,EACxB,cAA0C,EAC1C,sBAAkD,EAClD,iBAAoC;QAHpC,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAA4B;QAC1C,2BAAsB,GAAtB,sBAAsB,CAA4B;QAClD,sBAAiB,GAAjB,iBAAiB,CAAmB;QAjB/C,iCAA4B,GAAW,gBAAgB,CAAC;QACxD,uBAAkB,GAAW,OAAO,CAAC;QAK9C,SAAI,GAAY,IAAI,CAAC;QA2Bb,mBAAc,GAAG,CAAC,eAA4C,EAAE,EAAE;YACvE,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAClB,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;YAEpC,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE;gBAC7C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;oBACzC,CAAC,IAAI,CAAC,4BAA4B,CAAC,EAAE,IAAI,0DAAW,CAAC,eAAe,CAAC,oBAAoB,CAAC;oBAC1F,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,IAAI,0DAAW,CAAC,IAAI,6FAAY,CACrD,IAAI,EACJ,eAAe,CAAC,QAAQ,EACxB,eAAe,CAAC,IAAI,EACpB,eAAe,CAAC,QAAQ,EACxB,eAAe,CAAC,QAAQ,CAAC,CAAC;iBACrC,CAAC,CAAC;aACL;iBAAM;gBACJ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;oBACzC,CAAC,IAAI,CAAC,4BAA4B,CAAC,EAAE,IAAI,0DAAW,CAAC,eAAe,CAAC,oBAAoB,CAAC;oBAC1F,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,IAAI,0DAAW,CAAC,IAAI,6FAAY,EAAE,CAAC;iBACnE,CAAC,CAAC;aACL;QACJ,CAAC,CAAC;QAEM,gBAAW,GAAG,GAAG,EAAE;YACxB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAClB,IAAI,CAAC,aAAa,GAAG,CAAC,2DAAW,CAAC,SAAS,CAAC,kCAAkC,CAAC,CAAC,CAAC;QACpF,CAAC,CAAC;QAEF,YAAO,GAAG,GAAG,EAAE;YACZ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAE1B,8FAA8F;YAC9F,6FAA6F;YAC7F,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,sBAAsB,EAAE,CAAC;YAC5E,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE;gBAChC,2EAA2E;gBAC3E,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;gBAClC,OAAO;aACT;YAED,MAAM,WAAW,GAAiB,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC;YAC3F,MAAM,iBAAiB,GAAY,CAAC,CAAC,WAAW,IAAI,IAAI,CAAC,iBAAiB,EAAE;gBACtE,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC;YAC3E,MAAM,IAAI,GAAgC;gBACvC,gBAAgB,EAAE,KAAK;gBACvB,oBAAoB,EAAE,IAAI,CAAC,iBAAiB,EAAE;gBAC9C,QAAQ,EAAE,iBAAiB,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI;gBACjF,IAAI,EAAE,iBAAiB,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAClE,QAAQ,EAAE,iBAAiB,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI;gBACjF,QAAQ,EAAE,iBAAiB,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI;aACnF,CAAC;YAEF,MAAM,QAAQ,GAAmB,CAAC,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;YAC1G,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;gBAC1C,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE;gBAC1E,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;aACpF;YACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5E,CAAC,CAAC;QAEF,UAAK,GAAG,CAAC,aAAa,GAAY,KAAK,EAAE,EAAE;YACxC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAClB,2DAAW,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;QAC/C,CAAC,CAAC;QAEM,cAAS,GAAG,CAAC,KAAa,EAAE,EAAE;YACnC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAClB,IAAI,CAAC,aAAa,GAAG,CAAC,KAAK,CAAC,CAAC;QAChC,CAAC,CAAC;QAEM,gBAAW,GAAG,CAAC,QAAgB,EAAW,EAAE;YACjD,OAAO,CAAC,OAAO,QAAQ,KAAK,WAAW,CAAC,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QACxF,CAAC,CAAC;IAxFyD,CAAC;IAE5D,QAAQ;QACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,2DAAW,CAAC,eAAe,EAAE,CAAC,UAAU,CAAC;QAC3D,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,IAAI,CAAC,UAAU,CAAC;aACtD,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;aACzB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAClC,CAAC;IAED,yGAAyG;IACzG,6FAA6F;IAC7F,kBAAkB;QACf,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;IAC1C,CAAC;IA4ED,iBAAiB;QACd,OAAO,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC,KAAK,CAAC;IACtG,CAAC;IAED,IAAI,gBAAgB;QACjB,OAAO,IAAI,CAAC,IAAI;eACP,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC;eACnD,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;IACtG,CAAC;CACH;;;;;;;;;;;;;;AC/GD;AAAA;AAAO,MAAM,eAAe;CAC3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mECvBD;YAAA;YAAA,YAI+C;YAA9B;;gCAA6B;;YAJ9C;QAAA,4fAI+C,gFAC/C,mDAHiB,mBAAmB,YACnB,oBAAoB,EAHrC,YAI+C,EAF9B,SAAmB,EACnB,SAAoB;AAAA;;8MAJ8C,0EACnF,4ZAI+C,IAC7B,4EAElB,2gBAAyD,8EACtD,ojBAAsC,iFACnC,k1BAAsB,gKAEtB,IAAO,6EACP;YAAA;YAAA,YAKsB;YAHd;;gCAAwB;;YAFhC;QAAA,aAKsB,iKAEtB,IAAS,0EACZ,MAAmB,4EAEnB,w/BAAgD,iFAC7C,qSAAiB,6IAA+E,IAAkB,6EAClH,uSAAmB,uFAChB,6JAAgC,iFAAU,MAAO,gFACpD,MAAoB,0EACvB,MAAkB,4EAElB,i/BAAyC,iFACtC,qSAAiB,6IAA+D,IAAkB,6EAClG,uSAAmB,uFAChB,qKAAwC,iFAAS,MAAO,gFAC3D,MAAoB,0EACvB,MAAkB,4EAElB,4+BAAoC,iFACjC,qSAAiB,6IAAkE,IAAkB,6EACrG,uSAAmB,uFAChB,sKAAyC,iFAAY,MAAO,gFAC/D,MAAoB,0EACvB,MAAkB,uEACrB,mDAzCiB,mBAAiB,YADlC,YAI+C,EAH9B,SAAiB,GAQtB,kBAAe,EAArB,aAAsB,EAAhB,SAAe,GAaxB,aAAgD,GAOhD,aAAyC,GAOzC,aAAoC,mDA3BX,6NAEtB,GAIQ,oBAAgC,qBAChC,oBAAsC,qBAJ9C,aAKsB,EAFd,SAAgC,EAChC,SAAsC,GACxB,yOAEtB,GAGH,kcAAgD,GAC5B,qPAA+E,GAE7D,sDAAU,GAIhD,0cAAyC,GACrB,qOAA+D,GAErC,qDAAS,GAIvD,0cAAoC,GAChB,wOAAkE,GAEvC,wDAAY;AAAA;;;;;;;;;;;;;;;;;AChC9D;AAAA;AAAA;AAAA;AAAgF;AACqB;AAErG,MAAM,0BAA0B,GAAW;IACxC;QACG,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8FAA6B;KAC1C;IACD;QACG,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,mHAAiC;KAC9C;CACH,CAAC;AAiBK,MAAM,0BAA0B;CACtC;;;;;;;;;;;;;;ACvBD;AAAA;AAAO,MAAM,oBAAoB;CAAG;;;;;;;;;;;;;;AC0CpC;AAAA;AAAO,MAAM,iBAAiB;CAC7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACND;AAAA;AAAO,MAAM,sBAAsB;CAClC;;;;;;;;;;;;;;;;;;;;;;;;;ACnDqD;AACS;AACnB;AACK;AACb;AAKa;AAC8B;AAOxE;UAAM,6BAA6B;QAavC,YAAoB,cAA0C,EAChD,oBAA0C,EAC1C,iBAAoC;YAF9B,mBAAc,GAAd,cAAc,CAA4B;YAChD,yBAAoB,GAApB,oBAAoB,CAAsB;YAC1C,sBAAiB,GAAjB,iBAAiB,CAAmB;YAVlD,uBAAkB,GAAY,KAAK,CAAC;YA2C5B,gBAAW,GAAG,CAAC,GAAW,EAAE,EAAE;gBACnC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;gBACrB,IAAI,CAAC,MAAM,GAAG,2DAAW,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;gBACrD,IAAI,CAAC,KAAK,GAAG,2DAAW,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;gBACpD,IAAI,CAAC,QAAQ,GAAG,2DAAW,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;YAC1D,CAAC,CAAC;YAoCF,iBAAY,GAAG,GAAS,EAAE;gBACvB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;oBACnB,OAAO;iBACT;gBACD,IAAI,gEAAY,CAAC,iCAAiC,CAAC;qBAC5C,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;qBACjB,IAAI,CAAC;oBACH,UAAU,EAAE,IAAI,CAAC,UAAU;iBAC7B,CAAC;qBACD,IAAI,CAAC,CAAC,aAAsB,EAAE,EAAE;oBAC9B,IAAI,aAAa,EAAE;wBAChB,IAAI,CAAC,SAAS,EAAE,CAAC;qBACnB;gBACJ,CAAC,CAAC,CAAC;YACZ,CAAC,CAAC;QAvFF,CAAC;QAED,QAAQ;YACL,IAAI,CAAC,SAAS,EAAE,CAAC;QACpB,CAAC;QAGK,SAAS;;gBACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,MAAM,GAAG,2DAAW,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;gBACpD,IAAI,CAAC,KAAK,GAAG,2DAAW,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;gBACnD,IAAI,CAAC,QAAQ,GAAG,2DAAW,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;gBAEtD,MAAM,KAAK,GAAkB,qEAAa,CAAC,aAAa,CAAC;gBACzD,IAAI;oBACD,IAAI,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;oBAC3E,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,qEAAa,CAAC,aAAa,EAAE,CAAC,gEAAU,CAAC,YAAY,EAAE,CAAC,CAAC;yBAC1F,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;yBAChD,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,mDAAM,CAAC,KAAK,CAAC,+BAA+B,GAAG,KAAK,CAAC,CAAC,CAAC;oBAC7E,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBAC1F,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;oBACjD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;oBAC/C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;oBAErD,IAAI,CAAC,aAAa,GAAG,2DAAW,CAAC,SAAS,CAAC,uCAAuC,EAC5E,2DAAW,CAAC,SAAS,CAAC,yCAAyC,CAAC,CAAC,CAAC;iBAC1E;gBAAC,OAAO,KAAK,EAAE;oBACb,mDAAM,CAAC,KAAK,CAAC,iCAAiC,KAAK,EAAE,CAAC,CAAC;oBACvD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;iBAC1B;YACJ,CAAC;SAAA;QASO,cAAc,CAAC,iBAA8C;YAClE,IAAI,CAAC,iBAAiB,EAAE;gBACrB,OAAO,2DAAW,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;aAChD;YACD,OAAO,iBAAiB,CAAC,oBAAoB,CAAC,CAAC;gBACzC,2DAAW,CAAC,SAAS,CAAC,iEAAiE,CAAC;gBACxF,CAAC,CAAC,2DAAW,CAAC,SAAS,CAAC,kEAAkE,CAAC,CAAC;QACrG,CAAC;QAEO,aAAa,CAAC,iBAA8C;YACjE,IAAI,CAAC,iBAAiB,IAAI,CAAC,iBAAiB,CAAC,QAAQ;gBAC5C,CAAC,CAAC,iBAAiB,CAAC,IAAI,IAAI,iBAAiB,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,4BAA4B;gBAC/F,OAAO,2DAAW,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;aAChD;YAED,MAAM,QAAQ,GAAW,iBAAiB,CAAC,QAAQ,CAAC;YACpD,MAAM,IAAI,GAAW,EAAE,GAAG,iBAAiB,CAAC,IAAI,CAAC;YAEjD,MAAM,aAAa,GAAW,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;gBAC5D,2DAAW,CAAC,SAAS,CAAC,0DAA0D,CAAC;gBACjF,CAAC,CAAC,2DAAW,CAAC,SAAS,CAAC,4DAA4D,CAAC,CAAC;YAE5F,OAAO,2DAAW,CAAC,SAAS,CAAC,yDAAyD,EAChF,QAAQ,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC;QACxC,CAAC;QAEO,gBAAgB,CAAC,iBAA8C;YACpE,IAAI,CAAC,iBAAiB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE;gBACpD,OAAO,2DAAW,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;aAChD;YAED,OAAO,iBAAiB,CAAC,QAAQ,CAAC;QACrC,CAAC;;IA5ED;QADC,sGAAqB,EAAE;;wEACF;IAYtB;QADC,8EAAc;;;;kEAwBd;;;;;;;;;;;;;;;;ACpBJ;AAAA;AAAO,MAAM,gBAAgB;CAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBjC;AAAA;AAAO,MAAM,YAAY;CACxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mECjBE;YAAA;YAAA;;;;;;;;;;;;;2oDAA6F,oFAC1F,giCAAsB,uFACnB;YAAA;YAAA;;;;;;;;;;;;;2yDAI4D,uFAC5D,2mBAA6B,sKAE7B,IAAQ,gFACX,MAAuB,gFACvB,qnFAI0D,oFAC1D,MAAoB,6EACvB,mDAjB8D,oBAA8B,mBAA5F,YAA6F,EAA/B,UAA8B,GAArD,6BAAsB,EAA7D,YAA6F,EAAtD,UAAsB,GAC1D,aAAsB,GAKZ,6HAAkD,GAJzD,aAI4D,EAArD,UAAkD,GAFlD,kCAAoB,EAF3B,aAI4D,EAFrD,UAAoB,GAGpB,kCAAqB,EAA5B,aAA6B,EAAtB,UAAqB,GAQZ,oBAAsC,sBAJzD,aAI0D,EAAvC,UAAsC,GAHtC,mHAAwC,GAD3D,aAI0D,EAHvC,UAAwC,2BAZ9D,k9BAA6F,GAC1F,8MAAsB,GACnB,g0BAI4D,GAC5D,8GAA6B,8PAE7B,GAEH,ouBAI0D;AAAA;;qSArBmB,0EACnF;YAAA;YAAA,YAI0C;YAJxB;;gCAAiC;;YAIjC;;gCAAuB;;YAJzC;QAAA,guBAI0C,KAHxB,uDAA2E,IAGnD,0EACvC,8ZAA6F,IAiBtF,uEACV,MAAmB,0EACnB,mDAvBkB,2MAA2E,IAD3E,mBAAiC,gBAEjC,mBAAgC,mBAChC,mBAAqB,OAHvC,YAI0C,EAHxB,SAA2E,EAD3E,SAAiC,EAEjC,SAAgC,EAChC,SAAqB,GAE9B,mBAAwB,mBAA9B,YAA6F,EAAvF,SAAwB;AAAA;;;;;;;;;;;;;;;;;ACqBjC;AAAA;AAAO,MAAM,kBAAkB;CAC9B;;;;;;;;;;;;;;ACxBD;AAAA;AAAA;;;;;;;GAOG;AAII,MAAM,uBAAuB;IAIjC,YAAqB,SAAqB;QAArB,cAAS,GAAT,SAAS,CAAY;QAFlC,WAAM,GAAY,KAAK,CAAC;IAGhC,CAAC;IAID,IACI,cAAc,CAAC,KAAc;QAC9B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAC1C,OAAO;SACT;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;IACtB,CAAC;IAED,IAAI,cAAc;QACf,OAAO,IAAI,CAAC,eAAe,CAAC;IAC/B,CAAC;IAED,QAAQ;QACL,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACtB,CAAC;IAEO,WAAW;QAChB,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;IAC5F,CAAC;CACH","file":"120-es2015.js","sourcesContent":["/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {TreeExpanderComponent} from \"@component/datagrid/tree-expander.component\";\nimport {TreeColumnComponent} from \"@component/datagrid/tree-column.component\";\nimport {EnumeratedFilterComponent} from \"./filter/enumerated-filter.component\";\nimport {EnumeratedFilterItemComponent} from \"./filter/enumerated-filter-item.component\";\nimport {EnumFilterComponent} from \"@component/datagrid/filter/enum-filter.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n   ],\n   declarations: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumeratedFilterComponent,\n      EnumFilterComponent,\n   ],\n   exports: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumFilterComponent,\n   ],\n})\nexport class TreeDatagridModule {\n}\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {environment} from \"@env/environment\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Logger} from \"./logger\";\nimport {WebPlatform} from \"./platform\";\nimport {VsanUiUtils} from \"./vsan-util\";\n\nexport class ModalBuilder {\n\n   static readonly WIDTH: number = 0;\n   static readonly HEIGHT: number = 1;\n\n   static readonly DEFAULT_SIZE: number[] = [1000, 530];\n   static readonly WIZARD_XL: number[] = [1200, 700];\n\n   static readonly APP_URL: string = (environment.repa && environment.repaExtension)\n         ? \"index.html\"\n         : \"/ui/h5-vsan-ui/\";\n\n   private size: number[] = ModalBuilder.DEFAULT_SIZE;\n\n   // When null, the modal dialog will be headless and the docked\n   // view is expected to provide a title bar.\n   private title: string = null;\n\n   private accessibilityTitle: string = null;\n\n   private urlParams: any = {};\n\n   private eventTarget: EventTarget;\n\n   constructor(private appId: string) {\n   }\n\n   setDimensions(dimensions: number[]): ModalBuilder {\n      if (!dimensions || dimensions.length !== 2) {\n         Logger.warn(\"invalid modal dimensions\", dimensions);\n         dimensions = ModalBuilder.DEFAULT_SIZE;\n      }\n      return this.setSize(dimensions[ModalBuilder.WIDTH], dimensions[ModalBuilder.HEIGHT]);\n   }\n\n   setSize(width: number, height: number): ModalBuilder {\n      this.size = [width, height];\n      return this;\n   }\n\n   setUrlParameters(params: any): ModalBuilder {\n      this.urlParams = params;\n      return this;\n   }\n\n   /**\n    * Set to null if the view provides its own title bar\n    */\n   setTitle(title: string): ModalBuilder {\n      this.title = title;\n      return this;\n   }\n\n   setAccessibilityTitle(accessibilityTitle: string): ModalBuilder {\n      this.accessibilityTitle = accessibilityTitle;\n      return this;\n   }\n\n   /**\n    * Set explicit event target if it is changed before opening the modal.\n    * For example when making a preceding request the event target is the XMLHttpRequest object.\n    */\n   setEventTarget(eventTarget: EventTarget): ModalBuilder {\n      this.eventTarget = eventTarget;\n      return this;\n   }\n\n   /**\n    * Opens a modal dialog and returns a promise to collect the result; On close the target element is focused.\n    * @param context - any JS data object, can be retrieved by WebPlatform.getModalContext()\n    * @returns {Promise<any>} - Invoked if the dialog invokes WebPlatform.closeModalDialog(arg)\n    *       with non-null arg. The promise is never rejected.\n    */\n   open(context?: any): Promise<any> {\n      return new Promise<any>((accept) => {\n         VsanUiUtils.pluginContext.targetElement = this.eventTarget ? this.eventTarget :\n               (event && event.target ? event.target : null);\n         VsanUiUtils.pluginContext.modalResultHandler = (data?: any) => {\n            if (typeof data !== \"undefined\") {\n               // Deep copy of the object was required to resolve an issue with object's prototype overriding when\n               // passing complex objects in IE11/Edge; Keep it for safety.\n               accept(JSON.parse(JSON.stringify(data)));\n            } else if (VsanUiUtils.pluginContext.targetElement && VsanUiUtils.pluginContext.targetElement.focus) {\n               // On cancel just focus the target element. Timeout is required as otherwise the focus may be\n               // consumed by the mouse click.\n               setTimeout(() => VsanUiUtils.pluginContext.targetElement.focus(), 100);\n            }\n         };\n\n         let actionUrl: string = `${ModalBuilder.APP_URL}?viewId=${this.appId}`;\n\n         let separator: string = \"?\";\n         for (const param in this.urlParams) {\n            actionUrl += separator + param + \"=\" + this.urlParams[param];\n            separator = \"&\";\n         }\n\n         WebPlatform.openModalDialog(this.title,\n               actionUrl,\n               ManagedObject.contextObjectUid,\n               this.size[0], this.size[1],\n               this.title != null,\n               VsanUiUtils.pluginContext.modalResultHandler /* onClose */,\n               context /* retrieve with Platform.getModalContext() */,\n               this.accessibilityTitle);\n      });\n   }\n\n}\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectorRef, Component, OnInit, ViewChild} from \"@angular/core\";\nimport {ExternalProxySettingsConfig} from \"@generated/external-proxy-settings-config\";\nimport {VsanHealthPropertyProvider} from \"@generated/vsan-health-property-provider\";\nimport {VsanHealthMutationProvider} from \"@generated/vsan-health-mutation-provider\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {ClrForm} from \"@clr/angular\";\nimport {ProxySetting} from \"@component/proxy-settings/proxy-inputs.component\";\n\n@Component({\n   templateUrl: \"edit-internet-connectivity-config.html\",\n   styleUrls: [\"edit-internet-connectivity-config.scss\"],\n   selector: \"vsan-edit-internet-connectivity-config\",\n})\nexport class EditInternetConnectivityComponent implements OnInit {\n\n   readonly ENABLE_INTERNET_CONTROL_NAME: string = \"enableInternet\";\n   readonly PROXY_CONTROL_NAME: string = \"proxy\";\n\n   private originalSpec: ExternalProxySettingsConfig;\n   private clusterRef: ManagedObject;\n\n   busy: boolean = true;\n   alertMessages: string[];\n\n   internetSettings: FormGroup;\n\n   @ViewChild(ClrForm)\n   internetForm: ClrForm;\n\n   constructor(private formBuilder: FormBuilder,\n               private healthProvider: VsanHealthPropertyProvider,\n               private healthMutationProvider: VsanHealthMutationProvider,\n               private changeDetectorRef: ChangeDetectorRef) {}\n\n   ngOnInit(): void {\n      this.busy = true;\n      this.clusterRef = VsanUiUtils.getModalContext().clusterRef;\n      this.healthProvider.getExternalProxySettings(this.clusterRef)\n            .then(this.handleSettings)\n            .catch(this.handleError);\n   }\n\n   // Assigns correct change detection and prevents \"ExpressionChangedAfterItHasBeenCheckedError\" exception.\n   // The exception was causing the blockButton to not get correct value when toggling the forms\n   ngAfterViewChecked(): void {\n      this.changeDetectorRef.detectChanges();\n   }\n\n   private handleSettings = (currentSettings: ExternalProxySettingsConfig) => {\n      this.busy = false;\n      this.originalSpec = currentSettings;\n\n      if (this.hasHostname(currentSettings.hostName)) {\n         this.internetSettings = this.formBuilder.group({\n               [this.ENABLE_INTERNET_CONTROL_NAME]: new FormControl(currentSettings.enableInternetAccess),\n               [this.PROXY_CONTROL_NAME]: new FormControl(new ProxySetting(\n                     true,\n                     currentSettings.hostName,\n                     currentSettings.port,\n                     currentSettings.userName,\n                     currentSettings.password)),\n         });\n      } else {\n         this.internetSettings = this.formBuilder.group({\n               [this.ENABLE_INTERNET_CONTROL_NAME]: new FormControl(currentSettings.enableInternetAccess),\n               [this.PROXY_CONTROL_NAME]: new FormControl(new ProxySetting()),\n         });\n      }\n   };\n\n   private handleError = () => {\n      this.busy = false;\n      this.alertMessages = [VsanUiUtils.getString(\"vsan.common.error.dataExtraction\")];\n   };\n\n   confirm = () => {\n      this.alertMessages = null;\n\n      // For a special case: when enabling checkboxes and click APPLY button directly, the status of\n      // custom form control is not correct, we need to call updateValueAndValidity() for it first.\n      this.internetSettings.get(this.PROXY_CONTROL_NAME).updateValueAndValidity();\n      if (this.internetSettings.invalid) {\n         // Display input field error message when there is no proxy setting change.\n         this.internetForm.markAsTouched();\n         return;\n      }\n\n      const proxyConfig: ProxySetting = this.internetSettings.get(this.PROXY_CONTROL_NAME).value;\n      const applyProxySetting: boolean = !!proxyConfig && this.getEnableInternet() &&\n            this.internetSettings.get(this.PROXY_CONTROL_NAME).value.enableProxy;\n      const spec: ExternalProxySettingsConfig = {\n         isAutoDiscovered: false,\n         enableInternetAccess: this.getEnableInternet(),\n         hostName: applyProxySetting && proxyConfig.hostname ? proxyConfig.hostname : null,\n         port: applyProxySetting && proxyConfig.port ? proxyConfig.port : 0,\n         userName: applyProxySetting && proxyConfig.username ? proxyConfig.username : null,\n         password: applyProxySetting && proxyConfig.password ? proxyConfig.password : null,\n      };\n\n      const promises: Promise<any>[] = [this.healthMutationProvider.setTelementryConfig(this.clusterRef, spec)];\n      if (this.hasHostname(this.originalSpec.hostName) &&\n            !this.internetSettings.get(this.PROXY_CONTROL_NAME).value.enableProxy) {\n         promises.push(this.healthMutationProvider.clearTelementryConfig(this.clusterRef));\n      }\n      this.busy = true;\n      Promise.all(promises).then(() => this.close(true)).catch(this.showAlert);\n   };\n\n   close = (statusChanged: boolean = false) => {\n      this.busy = false;\n      VsanUiUtils.closeModalDialog(statusChanged);\n   };\n\n   private showAlert = (error: string) => {\n      this.busy = false;\n      this.alertMessages = [error];\n   };\n\n   private hasHostname = (hostName: string): boolean => {\n      return (typeof hostName !== 'undefined') && hostName !== null && hostName.length > 0;\n   };\n\n   getEnableInternet(): boolean {\n      return this.internetSettings && this.internetSettings.get(this.ENABLE_INTERNET_CONTROL_NAME).value;\n   }\n\n   get blockApplyButton(): boolean {\n      return this.busy\n            || this.alertMessages && this.alertMessages.length > 0\n            || (this.internetSettings && this.internetSettings.touched && this.internetSettings.invalid);\n   }\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {PopupListComponent} from \"@component/popup-list/popup-list.component\";\nimport {PopupListItemDirective} from \"@component/popup-list/popup-list-item.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      CommonPipeModule\n   ],\n   declarations: [\n      PopupListComponent,\n      PopupListItemDirective\n   ],\n   exports: [\n      PopupListComponent,\n      PopupListItemDirective\n   ]\n})\nexport class PopupListModule {\n}\n","<!--Copyright 2016-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-validation id=\"alert\"\n                 *ngIf=\"alertText\"\n                 [alert]=\"alertText\"\n                 [allowReload]=\"true\"\n                 (onClosed)=\"alertText = null\">\n</vsan-validation>\n\n<clr-stack-view id=\"vsanInternetConnectivityStackEditor\">\n   <clr-stack-header id=\"property-stack\">\n      <span vsan-auto-focus>\n         {{\"vsan.manage.externalProxySettings.title\" | localized}}\n      </span>\n      <button id=\"editExternalProxySettingsBtn\"\n              class=\"stack-action btn btn-sm\"\n              (click)=\"editSettings()\"\n              [disabled]=\"!hasEditPermissions\"\n              [class.disabled]=\"!hasEditPermissions\"\n              type=\"button\">\n         {{\"vsan.manage.externalProxySettings.action.edit.label\" | localized}}\n      </button>\n   </clr-stack-header>\n\n   <clr-stack-block id=\"internetAccessStatusBlock\">\n      <clr-stack-label>{{\"vsan.manage.externalProxySettings.internetAccess.status.label\" | localized}}</clr-stack-label>\n      <clr-stack-content>\n         <span id=\"internetAccessStatus\">{{status}}</span>\n      </clr-stack-content>\n   </clr-stack-block>\n\n   <clr-stack-block id=\"proxySettingsBlock\">\n      <clr-stack-label>{{\"vsan.manage.externalProxySettings.proxy.label\" | localized}}</clr-stack-label>\n      <clr-stack-content>\n         <span id=\"externalProxySettingsSummary\">{{proxy}}</span>\n      </clr-stack-content>\n   </clr-stack-block>\n\n   <clr-stack-block id=\"userNameBlock\">\n      <clr-stack-label>{{\"vsan.manage.externalProxySettings.userName.label\" | localized}}</clr-stack-label>\n      <clr-stack-content>\n         <span id=\"externalProxySettingsUserName\">{{userName}}</span>\n      </clr-stack-content>\n   </clr-stack-block>\n</clr-stack-view>","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {VsanCommonModule} from \"app/vsan/common/vsan-common.module\";\nimport {ProxySettingsModule} from \"@component/proxy-settings/proxy-settings.module\";\nimport {InternetConnectivityComponent} from \"./internet-connectivity.component\";\nimport {EditInternetConnectivityComponent} from \"./edit/edit-internet-connectivity-config.component\";\n\nconst internetConnectivityRoutes: Routes = [\n   {\n      path: \"\",\n      component: InternetConnectivityComponent\n   },\n   {\n      path: \"editConfig\",\n      component: EditInternetConnectivityComponent\n   }\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      ClarityModule,\n      VsanCommonModule,\n      ProxySettingsModule,\n      RouterModule.forChild(internetConnectivityRoutes)\n   ],\n   declarations: [\n      InternetConnectivityComponent,\n      EditInternetConnectivityComponent\n   ]\n})\nexport class InternetConnectivityModule {\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {VsanBreadcrumbNavComponent} from \"./vsan-breadcrumb-nav.component\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\n\n@NgModule({\n   imports: [CommonModule, ClarityModule, CommonDirectiveModule, CommonPipeModule],\n   declarations: [VsanBreadcrumbNavComponent],\n   exports: [\n      VsanBreadcrumbNavComponent,\n   ],\n})\nexport class VsanBreadcrumbModule {}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {HealthStatusCell} from \"@component/cell/health-status-cell.component\";\nimport {LabelCell} from \"@component/cell/label-cell.component\";\nimport {StoragePolicyCell} from \"@component/cell/storage-policy-cell.component\";\nimport {MorCell} from \"@component/cell/mor-cell.component\";\nimport {IconItemComponent} from \"@component/cell/icon-item.component\";\nimport {HealthStateItemComponent} from \"@component/cell/health-state-item.component\";\nimport {ListCell} from \"@component/cell/list-cell.component\";\nimport {PspHealthStateItemComponent} from \"@component/cell/psp-health-state-item.component\";\nimport {HealthTestValueComponent} from \"@component/cell/health-test-value.component\";\nimport {HealthLinkCellComponent} from \"@component/cell/health-link-cell.component\";\nimport {HealthMorCellComponent} from \"@component/cell/health-mor-cell.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n      CommonDirectiveModule,\n   ],\n   // TODO: (vasilevd) Move health specific components to a separate common health module\n   declarations: [\n      HealthStatusCell,\n      HealthTestValueComponent,\n      LabelCell,\n      StoragePolicyCell,\n      MorCell,\n      HealthMorCellComponent,\n      ListCell,\n      IconItemComponent,\n      HealthStateItemComponent,\n      PspHealthStateItemComponent,\n      HealthLinkCellComponent,\n   ],\n   exports: [\n      HealthStatusCell,\n      HealthTestValueComponent,\n      LabelCell,\n      StoragePolicyCell,\n      MorCell,\n      HealthMorCellComponent,\n      ListCell,\n      IconItemComponent,\n      HealthStateItemComponent,\n      PspHealthStateItemComponent,\n      HealthLinkCellComponent,\n   ],\n})\nexport class CommonCellsModule {\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {InventoryBrowserComponent} from \"@component/inventory/inventory-browser.component\";\nimport {InventoryNodeComponent} from \"@component/inventory/inventory-node.component\";\nimport {WitnessCandidateInventoryService} from \"@generated/witness-candidate-inventory-service\";\nimport {DatacenterInventoryService} from \"@generated/datacenter-inventory-service\";\nimport {NetworkInventoryService} from \"@generated/network-inventory-service\";\nimport {ComputeInventoryService} from \"@generated/compute-inventory-service\";\nimport {IoInsightInventoryService} from \"@generated/io-insight-inventory-service\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {TreeNodeComponent} from \"@component/inventory/tree-view/tree-node.component\";\nimport {TreeViewComponent} from \"@component/inventory/tree-view/tree-view.component\";\nimport {DropdownObjectSelectorComponent} from \"@component/inventory/dropdown-object-selector/dropdown-object-selector.component\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {InventoryNodesComponent} from \"@component/inventory/inventory-nodes.component\";\nimport {TreeNodesComponent} from \"@component/inventory/tree-view/tree-nodes.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule,\n      SearchModule,\n      CommonDirectiveModule,\n   ],\n   declarations: [\n      InventoryBrowserComponent,\n      InventoryNodesComponent,\n      InventoryNodeComponent,\n      TreeNodeComponent,\n      TreeNodesComponent,\n      TreeViewComponent,\n      DropdownObjectSelectorComponent,\n   ],\n   exports: [\n      InventoryBrowserComponent,\n      DropdownObjectSelectorComponent,\n      TreeViewComponent,\n   ],\n   providers: [\n      WitnessCandidateInventoryService,\n      DatacenterInventoryService,\n      NetworkInventoryService,\n      ComputeInventoryService,\n      IoInsightInventoryService,\n   ],\n})\nexport class InventoryBrowserModule {\n}","/* Copyright 2016-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {Logger} from \"@util/logger\";\nimport {VsanHealthPropertyProvider} from \"@generated/vsan-health-property-provider\";\nimport {VsanPropertyProvider} from \"@generated/vsan-property-provider\";\nimport {ExternalProxySettingsConfig} from \"@generated/external-proxy-settings-config\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\n\n@Component({\n   templateUrl: \"internet-connectivity.html\",\n   styleUrls: [\"internet-connectivity.scss\"],\n   selector: \"vsan-internet-conn-settings\",\n})\nexport class InternetConnectivityComponent implements OnInit {\n\n   private clusterRef: ManagedObject;\n\n   alertText: string;\n   hasEditPermissions: boolean = false;\n   status: string;\n   proxy: string;\n   userName: string;\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   constructor(private healthProvider: VsanHealthPropertyProvider,\n         private vsanPropertyProvider: VsanPropertyProvider,\n         private permissionService: PermissionService) {\n   }\n\n   ngOnInit() {\n      this.fetchData();\n   }\n\n   @RefreshHandler\n   async fetchData() {\n      this.alertText = null;\n      this.status = VsanUiUtils.getString(\"vsan.loading\");\n      this.proxy = VsanUiUtils.getString(\"vsan.loading\");\n      this.userName = VsanUiUtils.getString(\"vsan.loading\");\n\n      const vcRef: ManagedObject = ManagedObject.contextObject;\n      try {\n         this.clusterRef = await this.vsanPropertyProvider.getAnyVsanCluster(vcRef);\n         this.permissionService.hasVcPermissions(ManagedObject.contextObject, [Privileges.EDIT_CLUSTER()])\n               .then(result => this.hasEditPermissions = result)\n               .catch(error => Logger.error(\"Cannot retrieve permissions: \" + error));\n         const proxySettings = await this.healthProvider.getExternalProxySettings(this.clusterRef);\n         this.status = this.populateStatus(proxySettings);\n         this.proxy = this.populateProxy(proxySettings);\n         this.userName = this.populateUserName(proxySettings);\n\n         this.srOnlyMessage = VsanUiUtils.getString(\"vsan.screenReader.message.page.loaded\",\n               VsanUiUtils.getString(\"vsan.manage.externalProxySettings.title\"));\n      } catch (error) {\n         Logger.error(`Error getting proxy settings: ${error}`);\n         this.handleError(error);\n      }\n   }\n\n   private handleError = (err: string) => {\n      this.alertText = err;\n      this.status = VsanUiUtils.getString(\"vsan.na.label\");\n      this.proxy = VsanUiUtils.getString(\"vsan.na.label\");\n      this.userName = VsanUiUtils.getString(\"vsan.na.label\");\n   };\n\n   private populateStatus(externalProxyData: ExternalProxySettingsConfig): string {\n      if (!externalProxyData) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n      return externalProxyData.enableInternetAccess ?\n            VsanUiUtils.getString(\"vsan.manage.externalProxySettings.internetAccess.status.enabled\")\n            : VsanUiUtils.getString(\"vsan.manage.externalProxySettings.internetAccess.status.disabled\");\n   }\n\n   private populateProxy(externalProxyData: ExternalProxySettingsConfig): string {\n      if (!externalProxyData || !externalProxyData.hostName ||\n               (!externalProxyData.port && externalProxyData.port !== 0)) { // 0 is a valid port number.\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n\n      const hostName: string = externalProxyData.hostName;\n      const port: string = \"\" + externalProxyData.port;\n\n      const autoDetectTxt: string = externalProxyData.isAutoDiscovered ?\n            VsanUiUtils.getString(\"vsan.manage.externalProxySettings.proxyType.autoDetected\")\n            : VsanUiUtils.getString(\"vsan.manage.externalProxySettings.proxyType.userConfigured\");\n\n      return VsanUiUtils.getString(\"vsan.manage.externalProxySettings.proxy.summary.pattern\",\n            hostName, port, autoDetectTxt);\n   }\n\n   private populateUserName(externalProxyData: ExternalProxySettingsConfig): string {\n      if (!externalProxyData || !externalProxyData.userName) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n\n      return externalProxyData.userName;\n   }\n\n   editSettings = (): void => {\n      if (!this.clusterRef) {\n         return;\n      }\n      new ModalBuilder(\"internetConnectivity/editConfig\")\n            .setSize(580, 420)\n            .open({\n               clusterRef: this.clusterRef,\n            })\n            .then((statusChanged: boolean) => {\n               if (statusChanged) {\n                  this.fetchData();\n               }\n            });\n   };\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {ActionButtonModule} from \"@component/action-button/action-button.module\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {CommonCellsModule} from \"@component/cell/common-cells.module\";\nimport {InventoryBrowserModule} from \"@component/inventory/inventory-browser.module\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {TreeDatagridModule} from \"@component/datagrid/tree-datagrid.module\";\nimport {DatetimePickerModule} from \"@component/datetime-picker/datetime-picker.module\";\nimport {PopupListModule} from \"@component/popup-list/popup-list.module\";\nimport {VsanBreadcrumbModule} from \"@component/navigation/vsan-breadcrumb.module\";\n\n@NgModule({\n   imports: [\n         CommonDirectiveModule,\n         CommonPipeModule,\n         ValidationModule,\n         ActionButtonModule,\n         PromptModule,\n         CommonCellsModule,\n         InventoryBrowserModule,\n         SearchModule,\n         TreeDatagridModule,\n         DatetimePickerModule,\n         PopupListModule,\n         VsanBreadcrumbModule,\n   ],\n   exports: [\n      CommonDirectiveModule,\n      CommonPipeModule,\n      ValidationModule,\n      ActionButtonModule,\n      PromptModule,\n      CommonCellsModule,\n      InventoryBrowserModule,\n      SearchModule,\n      TreeDatagridModule,\n      DatetimePickerModule,\n      PopupListModule,\n      VsanBreadcrumbModule,\n   ],\n})\nexport class VsanCommonModule { }","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {SearchComponent} from \"@component/search/search.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule\n   ],\n   declarations: [\n      SearchComponent\n   ],\n   exports: [\n      SearchComponent\n   ],\n})\nexport class SearchModule {\n}\n","<!--Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-edit-prompt [(alertMessages)]=\"alertMessages\"\n                  [title]=\"'vsan.manage.externalProxySettings.action.edit.title' | localized\"\n                  [blockButton]=\"blockApplyButton\"\n                  [blockContent]=\"busy\"\n                  (onConfirm)=\"confirm()\">\n   <form *ngIf=\"internetSettings\" clrForm clrLayout=\"horizontal\" [formGroup]=\"internetSettings\">\n      <clr-checkbox-wrapper>\n         <input clrCheckbox\n                type=\"checkbox\"\n                id=\"enable-internet\"\n                name=\"enableInternet\"\n                formControlName=\"{{ENABLE_INTERNET_CONTROL_NAME}}\" />\n         <label for=\"enable-internet\">\n            {{'vsan.manage.externalProxySettings.action.edit.enableInternet' | localized}}\n         </label>\n      </clr-checkbox-wrapper>\n      <vsan-proxy-inputs class=\"indent\"\n                         formControlName=\"{{PROXY_CONTROL_NAME}}\"\n                         role=\"group\"\n                         aria-labelledby=\"proxy-checkbox-label\"\n                         [enableInternet]=\"getEnableInternet()\">\n      </vsan-proxy-inputs>\n   </form>\n</vsan-edit-prompt>\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ActionButtonSeparatorComponent} from \"@component/action-button/action-button-separator.component\";\nimport {ButtonTitleDirective} from \"@component/action-button/button-title.directive\";\nimport {ButtonGroupDirective} from \"@component/action-button/button-group.directive\";\nimport {ButtonGroupWrapDirective} from \"@component/action-button/button-group-wrap.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n   ],\n   declarations: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ],\n   exports: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ]\n})\nexport class ActionButtonModule {\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport { NgControl } from '@angular/forms';\nimport {Directive, Input, OnInit} from \"@angular/core\";\n\n/**\n * This directive is used to provide declarative style disabling for angular reactive forms's input elements.\n * This is required since the reactive forms only provide a way to disable them initially,\n * but there is no binding as it seems and subsequent changes to the argument doesn't affect the\n * input's disabled element.\n * Here is a stackoverflow thread with the given issue and some more details on the current approach:\n * https://stackoverflow.com/questions/40494968/reactive-forms-disabled-attribute\n */\n@Directive({\n   selector: \"[vsan-disable-form-control]\"\n})\nexport class DisableControlDirective implements OnInit {\n\n   private isInit: boolean = false;\n\n   constructor( private ngControl : NgControl ) {\n   }\n\n   private _disableControl: boolean;\n\n   @Input(\"vsan-disable-form-control\")\n   set disableControl(value: boolean ) {\n      this._disableControl = value;\n      if (!this.ngControl.control || !this.isInit) {\n         return;\n      }\n      this.setDisabled();\n   }\n\n   get disableControl(): boolean {\n      return this._disableControl;\n   }\n\n   ngOnInit(): void {\n      this.setDisabled();\n      this.isInit = true;\n   }\n\n   private setDisabled(): void {\n      this.disableControl ? this.ngControl.control.disable() : this.ngControl.control.enable();\n   }\n}"],"sourceRoot":"webpack:///"}