{"version":3,"sources":["webpack:///src/app/vsan/performance/io-insight/action/rerun-error-dialog.component.ts.RerunErrorDialogComponent.html","webpack:///src/app/vsan/performance/io-insight/io-insight-duration-input.component.ts","webpack:///src/app/vsan/performance/io-insight/action/rerun-instance-dialog.component.ts","webpack:///src/app/vsan/performance/io-insight/action/io-insight-actions.module.ts","webpack:///src/app/vsan/performance/io-insight/action/rerun-instance-dialog.html","webpack:///src/app/vsan/performance/io-insight/io-insight-duration-input.html","webpack:///src/app/vsan/performance/io-insight/action/rerun-error-dialog.component.ts","webpack:///src/app/vsan/performance/io-insight/action/instance-action-dialog.component.ts","webpack:///src/app/vsan/performance/io-insight/action/rename-instance-dialog.html","webpack:///src/app/vsan/performance/io-insight/action/instance-action-dialog.html","webpack:///src/app/vsan/performance/io-insight/action/rename-instance-dialog.component.ts"],"names":["IoInsightDurationInputComponent","maxDurationByUnit","Map","HOURS","MAX_HOURS_DURATION","MINUTES","MAX_MINUTES_DURATION","DurationUnit","durationChange","durationUnitChange","onValidationErrors","emit","durationUnit","duration","validate","validationMessages","push","getString","get","isDecimal","convertTime","RerunInstanceDialogComponent","createIoInsightService","INSTANCE_NAME_MAX_LENGTH","errors","areAllTargetsValid","instanceName","generateNewInstanceName","initializeDuration","validateTargets","context","getModalContext","instance","clusterRef","now","Date","name","DATE_FORMATTER","transform","NO_SECONDS","durationErrors","timeRange","durationInMinutes","MINUTES_IN_HOUR","toSeconds","loading","areTargetsValid","setModalDialogHeight","SMALL_HEIGHT","validating","getIsInstanceNameValid","instanceNameErrors","length","rerunIoInsightInstance","rerunInstance","getDurationInSeconds","then","taskRef","closeModalDialog","error","routes","path","component","IoInsightActionsModule","RerunErrorDialogComponent","InstanceActionDialogComponent","ioInsightService","isDeleteOperation","deleteOperation","deleteIoInsightInstance","stopIoInsightInstance","deleteInstance","stopInstance","RenameInstanceDialogComponent","formBuilder","INSTANCE_CONTROL_NAME","nameValidator","control","getInstanceName","value","instanceForm","group","required","setValue","invalid","markAsTouched","renameIoInsightInstance","renameInstance"],"mappings":"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","file":"79-es5.js","sourcesContent":["\n      <vsan-info-prompt\n            [title]=\"'vsan.io.insight.instance.rerun.error.title' | localized\"\n            [confirmText]=\"'vsan.common.ok' | localized\">\n         <span>{{'vsan.io.insight.instance.rerun.error.info' | localized}}</span>\n      </vsan-info-prompt>\n   ","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {DurationUnit} from \"@pipe/DurationPipe\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\n\n@Component({\n   templateUrl: \"io-insight-duration-input.html\",\n   styleUrls: [\"io-insight-duration-input.scss\"],\n   selector: \"vsan-io-insight-duration-input\",\n})\nexport class IoInsightDurationInputComponent {\n   private static readonly MAX_HOURS_DURATION: number = 24;\n   private static readonly MAX_MINUTES_DURATION: number = VsanDateTimeUtils.convertTime(\n         IoInsightDurationInputComponent.MAX_HOURS_DURATION, DurationUnit.HOURS, DurationUnit.MINUTES);\n   maxDurationByUnit: Map<DurationUnit, number> = new Map<DurationUnit, number>([\n      [DurationUnit.HOURS, IoInsightDurationInputComponent.MAX_HOURS_DURATION],\n      [DurationUnit.MINUTES, IoInsightDurationInputComponent.MAX_MINUTES_DURATION],\n   ]);\n\n   DurationUnit = DurationUnit;\n\n   @Input()\n   duration: number;\n\n   @Input()\n   durationUnit: DurationUnit;\n\n   @Output()\n   durationChange: EventEmitter<number> = new EventEmitter();\n\n   @Output()\n   durationUnitChange: EventEmitter<DurationUnit> = new EventEmitter();\n\n   @Output()\n   onValidationErrors: EventEmitter<string[]> = new EventEmitter();\n\n   onChange() {\n      this.durationUnitChange.emit(this.durationUnit);\n      this.durationChange.emit(this.duration);\n      this.onValidationErrors.emit(this.validate());\n   }\n\n   validate(): string[] {\n      const validationMessages: string[] = [];\n\n      if (this.duration == null) {\n         validationMessages.push(VsanUiUtils.getString(\"vsan.io.insight.wizard.settingsPage.noDuration.error\"));\n      }\n\n      if (this.duration <= 0 || this.duration > this.maxDurationByUnit.get(this.durationUnit)) {\n         validationMessages.push(VsanUiUtils.getString(\"vsan.perf.chart.timerange.last.hourInterval.error\"));\n      }\n\n      if (VsanUiUtils.isDecimal(this.duration)) {\n         validationMessages.push(VsanUiUtils.getString(\"vsan.io.insight.wizard.settingsPage.duration.decimalError\"));\n      }\n\n      return validationMessages;\n   }\n}","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {IoInsightInstance} from \"@generated/io-insight-instance\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {InstanceActionContextData} from \"./instance-action-context.data\";\nimport {CreateIoInsightService} from \"@generated/create-io-insight-service\";\nimport {DateFormat, VsanDateFormatterPipe} from \"@pipe/VsanDateFormatterPipe\";\nimport {DurationUnit} from \"@pipe/DurationPipe\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\n\n@Component({\n   templateUrl: \"rerun-instance-dialog.html\",\n   selector: \"io-insight-rerun-instance-dialog\",\n   styleUrls: [\"rerun-instance-dialog.scss\"],\n})\nexport class RerunInstanceDialogComponent implements OnInit {\n   private static readonly DATE_FORMATTER: VsanDateFormatterPipe = new VsanDateFormatterPipe();\n   private static readonly SMALL_HEIGHT: number = 250;\n\n   readonly INSTANCE_NAME_MAX_LENGTH: number = 256;\n\n   instance: IoInsightInstance;\n   private clusterRef: ManagedObject;\n   errors: string[] = [];\n   loading: boolean;\n   validating: boolean;\n   areAllTargetsValid: boolean = true;\n\n   instanceName: string;\n\n   @Input()\n   duration: number = 10;\n\n   @Input()\n   durationUnit: DurationUnit = DurationUnit.MINUTES;\n\n   constructor(private createIoInsightService: CreateIoInsightService) {}\n\n   ngOnInit(): void {\n      this.instanceName = this.generateNewInstanceName();\n      this.initializeDuration();\n      this.validateTargets();\n   }\n\n   private generateNewInstanceName(): string {\n      const context: InstanceActionContextData = VsanUiUtils.getModalContext();\n      this.instance = context.instance;\n      this.clusterRef = context.clusterRef;\n\n      const now: Date = new Date();\n      return this.instance.name + \" - \" +\n            RerunInstanceDialogComponent.DATE_FORMATTER.transform(now, DateFormat.NO_SECONDS);\n   }\n\n   onDurationValidationErrors(durationErrors: string[]): void {\n      this.errors = durationErrors;\n   }\n\n   private initializeDuration(): void {\n      if (this.instance.timeRange.durationInMinutes < VsanDateTimeUtils.MINUTES_IN_HOUR) {\n         this.duration = this.instance.timeRange.durationInMinutes;\n         this.durationUnit = DurationUnit.MINUTES;\n      } else {\n         this.duration = VsanDateTimeUtils.convertTime(this.instance.timeRange.durationInMinutes,\n               DurationUnit.MINUTES, DurationUnit.HOURS);\n         this.durationUnit = DurationUnit.HOURS;\n      }\n   }\n\n   private getDurationInSeconds(): number {\n      return VsanDateTimeUtils.toSeconds(this.duration, this.durationUnit);\n   }\n\n   private async validateTargets(): Promise<void> {\n      this.loading = true;\n      try {\n         this.areAllTargetsValid = await this.createIoInsightService.areTargetsValid(this.instance, this.clusterRef);\n      } catch (error) {\n         this.errors = [error];\n      }\n      if (this.areAllTargetsValid) {\n         VsanUiUtils.setModalDialogHeight(RerunInstanceDialogComponent.SMALL_HEIGHT);\n      }\n      this.loading = false;\n   }\n\n   async confirm(): Promise<void> {\n      if (this.validating) {\n         return;\n      }\n      this.validating = true;\n      const instanceNameErrors: string[] =\n            await this.createIoInsightService.getIsInstanceNameValid(this.clusterRef, this.instanceName);\n      if (instanceNameErrors) {\n         this.errors.push(...instanceNameErrors);\n      }\n      this.validating = false;\n      if (this.errors.length) {\n         // Verify inputs when user opens the dialog and click Ok button directly.\n         return;\n      }\n\n      this.errors = [];\n      this.rerunIoInsightInstance();\n   }\n\n   private rerunIoInsightInstance(): void {\n      this.loading = true;\n      this.createIoInsightService\n            .rerunInstance(this.clusterRef, this.instance, this.instanceName, this.getDurationInSeconds())\n            .then((taskRef: ManagedObject) => VsanUiUtils.closeModalDialog(taskRef))\n            .catch(error => this.errors = [error])\n            .finally(() => {this.loading = false; });\n   }\n}\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {VsanCommonModule} from \"app/vsan/common/vsan-common.module\";\nimport {FlowWizardModule} from \"@component/wizard/flow-wizard.module\";\nimport {WizardSharedPagesModule} from \"@component/wizard/shared-pages/wizard-shared-pages.module\";\nimport {InstanceActionDialogComponent} from \"./instance-action-dialog.component\";\nimport {RenameInstanceDialogComponent} from \"./rename-instance-dialog.component\";\nimport {RerunInstanceDialogComponent} from \"./rerun-instance-dialog.component\";\nimport {RerunErrorDialogComponent} from \"./rerun-error-dialog.component\";\nimport {IoInsightDurationInputComponent} from \"../io-insight-duration-input.component\";\n\nconst routes: Routes = [\n   {\n      path: \"deleteInstance\",\n      component: InstanceActionDialogComponent,\n   },\n   {\n      path: \"renameInstance\",\n      component: RenameInstanceDialogComponent,\n   },\n   {\n      path: \"rerunInstance\",\n      component: RerunInstanceDialogComponent,\n   },\n   {\n      path: \"rerunError\",\n      component: RerunErrorDialogComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      ClarityModule,\n      VsanCommonModule,\n      FlowWizardModule,\n      WizardSharedPagesModule,\n      RouterModule.forChild(routes),\n   ],\n   declarations: [\n      InstanceActionDialogComponent,\n      RenameInstanceDialogComponent,\n      RerunInstanceDialogComponent,\n      RerunErrorDialogComponent,\n      IoInsightDurationInputComponent,\n   ],\n   exports: [\n      IoInsightDurationInputComponent\n   ]\n})\nexport class IoInsightActionsModule {\n}","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-edit-prompt\n      [title]=\"'vsan.io.insight.instance.rerun.title' | localized\"\n      [subtitle]=\"instance.name\"\n      [confirmText]=\"'vsan.common.ok' | localized\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"loading || validating\"\n      [(alertMessages)]=\"errors\"\n      (onConfirm)=\"confirm()\">\n   <vsan-validation *ngIf=\"!areAllTargetsValid\"\n                    [allowClose]=\"false\"\n                    [alert]=\"'vsan.io.insight.instance.rerun.missingTargets' | localized\"\n                    alertType=\"info\">\n   </vsan-validation>\n   <div>{{\"vsan.io.insight.instance.rerun.info\" | localized}}</div>\n   <form class=\"clr-form clr-form-horizontal\">\n      <div class=\"clr-form-control control-full-width clr-row\">\n         <label for=\"name-input\" class=\"clr-control-label clr-col-2\">\n            {{\"vsan.io.insight.wizard.settingsPage.name\" | localized}}\n         </label>\n         <div class=\"clr-control-container\">\n            <div class=\"clr-input-wrapper\">\n               <input id=\"name-input\"\n                      name=\"nameSelector\"\n                      class=\"clr-input clr-col-10\"\n                      type=\"text\"\n                      [(ngModel)]=\"instanceName\"\n                      [maxLength]=\"INSTANCE_NAME_MAX_LENGTH\"/>\n            </div>\n         </div>\n      </div>\n      <vsan-io-insight-duration-input (onValidationErrors)=\"onDurationValidationErrors($event)\"\n                                      [(duration)]=\"duration\"\n                                      [(durationUnit)]=\"durationUnit\">\n      </vsan-io-insight-duration-input>\n   </form>\n</vsan-edit-prompt>\n","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div class=\"clr-form-control clr-row\">\n   <label class=\"clr-control-label clr-col-2\">{{\"vsan.io.insight.wizard.settingsPage.duration\" | localized}}</label>\n   <div class=\"duration-control\">\n      <div class=\"clr-control-container\">\n         <div class=\"clr-input-wrapper\">\n            <input clrInput\n                   id=\"duration-input\"\n                   name=\"durationSelector\"\n                   type=\"number\"\n                   [(ngModel)]=\"duration\"\n                   (change)=\"onChange()\"\n                   min=\"1\"\n                   max=\"{{maxDurationByUnit.get(durationUnit)}}\"\n                   class=\"duration-value\"\n                   aria-describedby=\"duration-description\"/>\n         </div>\n      </div>\n      <div class=\"clr-control-container\">\n         <div class=\"clr-select-wrapper\">\n            <select id=\"duration-metric-input\"\n                    name=\"metricSelect\"\n                    clrSelect\n                    [(ngModel)]=\"durationUnit\"\n                    (change)=\"onChange()\"\n                    aria-describedby=\"duration-description\">\n               <option [ngValue]=\"DurationUnit.MINUTES\">\n                  {{\"vsan.io.insight.wizard.settingsPage.duration.min\" | localized}}\n               </option>\n               <option [ngValue]=\"DurationUnit.HOURS\">\n                  {{\"vsan.io.insight.wizard.settingsPage.duration.hour\" | localized}}\n               </option>\n            </select>\n         </div>\n      </div>\n      <label id=\"duration-description\">{{\"vsan.io.insight.wizard.settingsPage.maxduration\" | localized}}</label>\n   </div>\n</div>","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component} from \"@angular/core\";\n\n@Component({\n   template: `\n      <vsan-info-prompt\n            [title]=\"'vsan.io.insight.instance.rerun.error.title' | localized\"\n            [confirmText]=\"'vsan.common.ok' | localized\">\n         <span>{{'vsan.io.insight.instance.rerun.error.info' | localized}}</span>\n      </vsan-info-prompt>\n   `\n})\nexport class RerunErrorDialogComponent {\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {IoInsightService} from \"@generated/io-insight-service\";\nimport {IoInsightInstance} from \"@generated/io-insight-instance\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {InstanceActionContextData} from \"./instance-action-context.data\";\n\n@Component({\n   templateUrl: \"instance-action-dialog.html\",\n   selector: \"io-insight-instance-action-dialog\"\n})\nexport class InstanceActionDialogComponent implements OnInit {\n   loading: boolean;\n\n   instance: IoInsightInstance;\n   private clusterRef: ManagedObject;\n   errors: string[];\n   isDeleteOperation: boolean;\n\n   constructor(private ioInsightService: IoInsightService) {\n   }\n\n   ngOnInit() {\n      const context: InstanceActionContextData =\n            <InstanceActionContextData>VsanUiUtils.getModalContext();\n      this.instance = context.instance;\n      this.clusterRef = context.clusterRef;\n      this.isDeleteOperation = context.deleteOperation;\n   }\n\n   detailMessage(): string {\n      return this.isDeleteOperation ?\n            VsanUiUtils.getString('vsan.io.insight.instance.delete.text', this.instance.name) :\n            VsanUiUtils.getString('vsan.io.insight.instance.stop.text', this.instance.name);\n   }\n\n   confirm() {\n      this.errors = [];\n\n      if (this.isDeleteOperation) {\n         this.deleteIoInsightInstance();\n      } else {\n         this.stopIoInsightInstance();\n      }\n   }\n\n   private deleteIoInsightInstance() {\n      this.loading = true;\n      this.ioInsightService.deleteInstance(this.clusterRef, this.instance)\n            .then(() => VsanUiUtils.closeModalDialog(this.instance))\n            .catch(error => this.errors = [error])\n            .finally(() => {this.loading = false});\n   }\n\n   private stopIoInsightInstance() {\n      this.loading = true;\n      this.ioInsightService.stopInstance(this.clusterRef, this.instance)\n            .then((taskRef: ManagedObject) => VsanUiUtils.closeModalDialog(taskRef))\n            .catch(error => this.errors = [error])\n            .finally(() => {this.loading = false});\n   }\n}\n","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-edit-prompt\n      [title]=\"'vsan.io.insight.instance.rename.title' | localized\"\n      [subtitle]=\"instance.name\"\n      [confirmText]=\"'vsan.common.ok' | localized\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"loading\"\n      [(alertMessages)]=\"errors\"\n      (onConfirm)=\"confirm()\">\n   <form clrForm clrLayout=\"horizontal\" [formGroup]=\"instanceForm\">\n      <clr-input-container class=\"control-full-width\">\n         <label id=\"new-name-label\" for=\"name-label\" class=\"clr-col-sm-4\">\n            {{\"vsan.io.insight.instance.rename.newName.label\" | localized}}\n         </label>\n         <input clrInput\n                id=\"name-label\"\n                type=\"text\"\n                vsan-auto-focus\n                class=\"clr-col-sm-8\"\n                formControlName=\"{{INSTANCE_CONTROL_NAME}}\"\n                maxlength=\"{{INSTANCE_NAME_MAX_LENGTH}}\"/>\n         <clr-control-error *clrIfError=\"'required'\">\n            {{\"vsan.io.insight.instance.rename.newName.empty\" | localized}}\n         </clr-control-error>\n      </clr-input-container>\n   </form>\n</vsan-edit-prompt>","<!--Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-delete-prompt\n      [title]=\"(isDeleteOperation ? 'vsan.io.insight.instance.delete.title' : 'vsan.io.insight.instance.stop.title') | localized\"\n      [subtitle]=\"instance.name\"\n      [(alertMessages)]=\"errors\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"loading\"\n      [confirmText]=\"(isDeleteOperation ? 'vsan.io.insight.actions.delete' : 'vsan.io.insight.actions.stop') | localized\"\n      (onConfirm)=\"confirm()\">\n   <div class=\"dialog-container\">\n      <span [innerHTML]=\"detailMessage()\"></span>\n      <span>{{'vsan.common.confirm.question' | localized}}</span>\n   </div>\n</vsan-delete-prompt>","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {\n   AbstractControl,\n   FormBuilder,\n   FormControl,\n   FormGroup,\n   ValidationErrors,\n   ValidatorFn,\n   Validators,\n} from \"@angular/forms\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {IoInsightService} from \"@generated/io-insight-service\";\nimport {IoInsightInstance} from \"@generated/io-insight-instance\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {InstanceActionContextData} from \"./instance-action-context.data\";\n\n@Component({\n   templateUrl: \"rename-instance-dialog.html\",\n   selector: \"io-insight-rename-instance-dialog\"\n})\nexport class RenameInstanceDialogComponent implements OnInit {\n   readonly INSTANCE_CONTROL_NAME: string = \"instanceName\";\n   readonly INSTANCE_NAME_MAX_LENGTH: number = 256;\n\n   instance: IoInsightInstance;\n   private clusterRef: ManagedObject;\n   errors: string[];\n   loading: boolean;\n\n   instanceForm: FormGroup;\n\n   constructor(private formBuilder: FormBuilder, private ioInsightService: IoInsightService) {\n      this.instanceForm = this.formBuilder.group({\n         [this.INSTANCE_CONTROL_NAME]: new FormControl(null, [Validators.required, this.nameValidator]),\n      });\n   }\n\n   ngOnInit() {\n      const context: InstanceActionContextData =\n            <InstanceActionContextData>VsanUiUtils.getModalContext();\n      this.instance = context.instance;\n      this.clusterRef = context.clusterRef;\n      this.instanceForm.setValue({\n         [this.INSTANCE_CONTROL_NAME]: this.instance.name\n      });\n   }\n\n   private nameValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n      if (!this.getInstanceName() || this.getInstanceName().length > this.INSTANCE_NAME_MAX_LENGTH) {\n         return {\n            [this.INSTANCE_CONTROL_NAME]: {value: control.value}\n         };\n      }\n      return null;\n   };\n\n   private getInstanceName(): string {\n      return this.instanceForm ? this.instanceForm.get(this.INSTANCE_CONTROL_NAME).value : null;\n   }\n\n   confirm() {\n      if (this.instanceForm.invalid) {\n         // Verify inputs when user opens the dialog and click Ok button directly.\n         this.instanceForm.markAsTouched();\n         return;\n      }\n\n      this.errors = [];\n      this.renameIoInsightInstance();\n   }\n\n   private renameIoInsightInstance() {\n      this.loading = true;\n      this.ioInsightService.renameInstance(this.clusterRef, this.instance, this.getInstanceName())\n            .then(() => VsanUiUtils.closeModalDialog(this.instance))\n            .catch(error => this.errors = [error])\n            .finally(() => {this.loading = false});\n   }\n}\n"]}