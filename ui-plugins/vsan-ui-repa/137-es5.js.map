{"version":3,"sources":["webpack:///src/app/vsan/cluster-power/power-on/power-on.module.ts","webpack:///src/app/vsan/common/util/vsan-dialog-util.ts","webpack:///src/app/vsan/cluster-power/power-on/power-on.dialog.component.ts","webpack:///src/app/vsan/common/service/status-updates/vsan-status-change.data.ts","webpack:///src/app/vsan/cluster-power/power-on/power-on.dialog.html"],"names":["routes","path","component","PowerOnModule","VsanDialogUtil","CAPACITY_MANAGEMENT_DIALOG","width","height","DELETE_VOLUME_DIALOG","MIGRATE_VOLUME_DIALOG","REAPPLY_VOLUME_POLICY_DIALOG","DUPLICATE_PCI_ID_MODEL_SELECTION_DIALOG","HEALTH_RESTORE_ACTION_DIALOG","CLUSTER_POWER_ON_DIALOG","VM_IO_DIAGNOSTICS_METRICS_DIALOG","VM_IO_DIAGNOSTICS_LATENCY_DIALOG","VM_IO_DIAGNOSTICS_DOM_OWNER_LATENCY_DIALOG","PERF_SVC_EDIT_ACTION_DIALOG","PERF_SVC_ENABLE_ACTION_DIALOG","CLAIM_DISKS_ACTION_DIALOG","VSAN_DISK_CLAIM_ACTION_DIALOG","VsanDialogProperties","PowerOnDialogComponent","dataService","powerService","vsanStatusService","isReadyToPowerOn","Icon","DIALOG_HEIGHT_WITH_ERROR","checkHostsStatus","queryClusterName","clusterName","validateClusterPowerOn","contextObject","disconnectedHosts","isEmpty","updateDialogHeight","powerOnCluster","taskRef","storeChange","VSAN_CLUSTER_POWER_ON","closeModalDialog","errorMessage","getProperty","name","warn","setModalDialogHeight","VsanStatusChangeData","status","clusterRef","changeType","StatusChangeType"],"mappings":"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","file":"137-es5.js","sourcesContent":["/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {PowerOnDialogComponent} from \"./power-on.dialog.component\";\nimport {CommonCellsModule} from \"@component/cell/common-cells.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\n\n\nconst routes: Routes = [\n   {\n      path: \"\",\n      component: PowerOnDialogComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      CommonPipeModule,\n      PromptModule,\n      RouterModule.forChild(routes),\n      CommonCellsModule,\n      ValidationModule,\n   ],\n   declarations: [\n      PowerOnDialogComponent,\n   ],\n})\nexport class PowerOnModule {\n}","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nexport class VsanDialogUtil {\n   static readonly CAPACITY_MANAGEMENT_DIALOG: VsanDialogProperties = {\n      width: 800,\n      height: 700,\n   };\n\n   static readonly DELETE_VOLUME_DIALOG: VsanDialogProperties = {\n      width: 500,\n      height: 250,\n   };\n\n   static readonly MIGRATE_VOLUME_DIALOG: VsanDialogProperties = {\n      width: 1030,\n      height: 710,\n   };\n\n   static readonly REAPPLY_VOLUME_POLICY_DIALOG: VsanDialogProperties = {\n      width: 700,\n      height: 250,\n   };\n\n   static readonly DUPLICATE_PCI_ID_MODEL_SELECTION_DIALOG: VsanDialogProperties = {\n      width: 800,\n      height: 500,\n   };\n\n   static readonly HEALTH_RESTORE_ACTION_DIALOG: VsanDialogProperties = {\n      width: 550,\n      height: 250,\n   };\n\n   // Keep in sync with plugin.xml extension point\n   static readonly CLUSTER_POWER_ON_DIALOG: VsanDialogProperties = {\n      width: 600,\n      height: 230,\n   };\n\n   static readonly VM_IO_DIAGNOSTICS_METRICS_DIALOG: VsanDialogProperties = {\n      width: 900,\n      height: 700,\n   };\n\n   static readonly VM_IO_DIAGNOSTICS_LATENCY_DIALOG: VsanDialogProperties = {\n      width: 1000,\n      height: 500,\n   };\n\n   static readonly VM_IO_DIAGNOSTICS_DOM_OWNER_LATENCY_DIALOG: VsanDialogProperties = {\n      width: 1000,\n      height: 400,\n   };\n\n   static readonly PERF_SVC_EDIT_ACTION_DIALOG: VsanDialogProperties = {\n      width: 800,\n      height: 450,\n   };\n\n   static readonly PERF_SVC_ENABLE_ACTION_DIALOG: VsanDialogProperties = {\n      width: 800,\n      height: 250,\n   };\n\n   static readonly CLAIM_DISKS_ACTION_DIALOG: VsanDialogProperties = {\n      width: 1200,\n      height: 650,\n   };\n\n   static readonly VSAN_DISK_CLAIM_ACTION_DIALOG: VsanDialogProperties = {\n      width: 670,\n      height: 300,\n   };\n}\n\nexport class VsanDialogProperties {\n   width: number;\n   height: number;\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ClusterPowerService} from \"@generated/cluster-power-service\";\nimport {ClusterComputeResource} from \"@service/client/dataservice/data-service-property\";\nimport {DataServiceClient} from \"@service/client/dataservice/data-service.service\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {StatusChangeType, VsanStatusChangeData} from \"@service/status-updates/vsan-status-change.data\";\nimport {VsanStatusService} from \"@service/status-updates/vsan-status.service\";\nimport {Icon} from \"@util/icon\";\nimport {Logger} from \"@util/logger\";\nimport {VsanDialogUtil} from \"@util/vsan-dialog-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"power-on.dialog.html\",\n   styleUrls: [\"power-on.dialog.scss\"],\n})\nexport class PowerOnDialogComponent implements OnInit {\n   clusterName: string;\n   isReadyToPowerOn: boolean = false;\n   disconnectedHosts: string[];\n\n   @LoadingIndicator()\n   isLoading: boolean;\n\n   @LoadingIndicator({name: \"power-on\"})\n   isOperationLoading: boolean;\n\n   @ErrorMessage()\n   errorMessage: string;\n\n   Icon: typeof Icon = Icon;\n   private readonly DIALOG_HEIGHT_WITH_ERROR: number = 350;\n\n   constructor(private dataService: DataServiceClient,\n         private powerService: ClusterPowerService,\n         private vsanStatusService: VsanStatusService) {\n\n   }\n\n   async ngOnInit(): Promise<void> {\n      this.checkHostsStatus();\n      this.clusterName = await this.queryClusterName();\n   }\n\n   @Loader()\n   async checkHostsStatus(): Promise<void> {\n      this.disconnectedHosts = await this.powerService.validateClusterPowerOn(ManagedObject.contextObject);\n      this.isReadyToPowerOn = VsanUiUtils.isEmpty(this.disconnectedHosts);\n      this.updateDialogHeight();\n   }\n\n   @Loader({name: \"power-on\"})\n   async onPowerOn(): Promise<void> {\n      try {\n         const taskRef: ManagedObject = await this.powerService.powerOnCluster(ManagedObject.contextObject);\n         this.vsanStatusService.storeChange(\n               new VsanStatusChangeData(taskRef, StatusChangeType.VSAN_CLUSTER_POWER_ON));\n         VsanUiUtils.closeModalDialog(taskRef);\n      } catch (e) {\n         this.errorMessage = e;\n      }\n   }\n\n   private async queryClusterName(): Promise<string> {\n      try {\n         return await this.dataService.getProperty(ClusterComputeResource.name, ManagedObject.contextObject);\n      } catch (error) {\n         Logger.warn(\"Failed to query cluster name. \", error);\n         return \"\";\n      }\n   }\n\n   private updateDialogHeight(): void {\n      if (!this.isReadyToPowerOn) {\n         VsanUiUtils.setModalDialogHeight(this.DIALOG_HEIGHT_WITH_ERROR);\n      } else {\n         VsanUiUtils.setModalDialogHeight(VsanDialogUtil.CLUSTER_POWER_ON_DIALOG.height);\n      }\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ManagedObject} from \"@service/managed-object\";\nimport {TaskStatus} from \"@service/task-monitor-service\";\n\n/**\n * Holds info for a status change initiated by the current user on the vSAN cluster.\n * This data is stored in the Browser local storage, check <code>VsanStatusService</code>\n * and is accessible across iframes.\n */\nexport class VsanStatusChangeData {\n\n   /**\n    * A cluster managed object reference associated with this status change\n    */\n   clusterRef: ManagedObject;\n\n   /**\n    * A task moref, that is changing the status of the vSAN cluster.\n    */\n   taskRef: ManagedObject;\n\n   /**\n    * Enum value, holding information about what status change is happening with the vSAN cluster exactly.\n    */\n   changeType: StatusChangeType;\n\n   /**\n    * Upon completion of the task will hold either SUCCESS or ERROR, which could be used by subscribers.\n    */\n   taskStatus: TaskStatus;\n\n   constructor(taskRef: ManagedObject, status: StatusChangeType,\n         clusterRef: ManagedObject = ManagedObject.contextObject) {\n      this.taskRef = taskRef;\n      this.changeType = status;\n      this.clusterRef = clusterRef;\n   }\n}\n\n/**\n * Enum with codes, used to differentiate different vSAN configuration events like\n * vSAN enabled, cluster shutdown, etc.\n */\nexport enum StatusChangeType {\n   /**\n    * A cluster has had the vSAN service enabled.\n    */\n   VSAN_SERVICE_ENABLED,\n   /**\n    * A cluster has had the vSAN service disabled.\n    */\n   VSAN_SERVICE_DISABLED,\n   /**\n    * A vSAN cluster has been powered on.\n    */\n   VSAN_CLUSTER_POWER_ON,\n   /**\n    * A vSAN cluster has been shut down.\n    */\n   VSAN_CLUSTER_POWER_OFF,\n}","<!-- Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-create-prompt\n      [title]=\"'vsan.cluster.powerOn.title' | localized\"\n      [subtitle]=\"clusterName\"\n      [confirmText]=\"'vsan.cluster.powerOn.title' | localized\"\n      [(alertMessage)]=\"errorMessage\"\n      [blockButton]=\"!isReadyToPowerOn ||isOperationLoading || errorMessage\"\n      [blockContent]=\"isOperationLoading\"\n      (onConfirm)=\"onPowerOn()\">\n   <div class=\"dialog-container\">\n      <div *ngIf=\"isLoading\" class=\"icon-name-container\">\n         <span class=\"spinner spinner-sm spinner-inline\"></span>\n         <span>{{\"vsan.cluster.powerOn.checking.label\" | localized}}</span>\n      </div>\n      <ng-container *ngIf=\"!isLoading && !errorMessage\">\n         <ng-container *ngIf=\"!isReadyToPowerOn\" class=\"column-flex-container\">\n            <vsan-validation\n                  [alert]=\"'vsan.cluster.powerOn.error.label' | localized\"\n                  [allowClose]=\"false\"\n                  [isSmall]=\"true\"\n                  [allowReload]=\"true\"\n                  [actionLabel]=\"'vsan.cluster.powerOn.error.retry.label' |localized\"\n                  (onReload)=\"checkHostsStatus()\">\n            </vsan-validation>\n            <clr-datagrid>\n               <clr-dg-column>{{\"vsan.cluster.powerOn.host.label\" | localized}}</clr-dg-column>\n               <clr-dg-row *ngFor=\"let hostName of disconnectedHosts\">\n                  <clr-dg-cell>\n                     <vsan-icon-item [shape]=\"Icon.HOST\" [label]=\"hostName\"></vsan-icon-item>\n                  </clr-dg-cell>\n               </clr-dg-row>\n            </clr-datagrid>\n         </ng-container>\n         <vsan-icon-item *ngIf=\"isReadyToPowerOn\"\n                         [shape]=\"Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE\"\n                         [iconClass]=\"Icon.CLR_SUCCESS_ICON_CLASS\"\n                         [label]=\"'vsan.cluster.powerOn.ready.label' | localized\">\n         </vsan-icon-item>\n      </ng-container>\n   </div>\n</vsan-create-prompt>\n"]}