{"version":3,"sources":["./src/app/vsan/common/component/cross-column-filter/cross-column-filter-group.component.ts.CrossColumnFilterGroupComponent.html","./src/app/vsan/common/component/cross-column-filter/cross-column-filter.html","./src/app/vsan/common/component/cross-column-filter/cross-column-filter.component.ts","./src/app/vsan/common/component/cross-column-filter/filter-item.ts","./src/app/vsan/common/component/cross-column-filter/cross-column-filter-item.component.ts.CrossColumnFilterItemComponent.html","./src/app/vsan/common/component/cross-column-filter/list-filter-item.component.ts","./src/app/vsan/common/component/cross-column-filter/cross-column-filter.module.ts","./src/app/vsan/common/component/action-button/action-button-separator.component.ts.ActionButtonSeparatorComponent.html","./src/app/vsan/common/component/cross-column-filter/list-filter.component.ts","./src/app/vsan/common/component/cross-column-filter/cross-column-filter-group.component.ts","./src/app/vsan/common/component/cross-column-filter/list-filter.component.ts.ListFilterComponent.html","./src/app/vsan/common/component/cross-column-filter/list-filter-item.component.ts.ListFilterItemComponent.html","./src/app/vsan/common/component/cross-column-filter/cross-column-filter-item.component.ts","./src/app/vsan/common/component/action-button/action-button-separator.component.ts","./src/app/vsan/common/component/cross-column-filter/filter.service.ts"],"names":[],"mappings":"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","file":"74-es2015.js","sourcesContent":["<ng-content select=\"vsan-cross-column-filter-item\"></ng-content>","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div class=\"dropdown-container\">\n   <!--Dropdown filter list-->\n   <clr-icon [attr.shape]=\"filterIconShape\"\n             [attr.title]=\"'vsan.icon.title.filter' | localized\"\n             [class]=\"FILTER_ICON_CLASS\">\n   </clr-icon>\n   <div class=\"dropdown open\">\n      <input id=\"add-filter\"\n             type=\"text\"\n             #addFilterElement\n             [(ngModel)]=\"filterSearchValue\"\n             (keyup.enter)=\"onEnter()\"\n             [placeholder]=\"filterText\"\n             (click)=\"addFilterClick()\"\n             clrInput\n             autocomplete=\"off\">\n      <div class=\"dropdown-menu\"\n           #dropdownFilterElement\n           *ngIf=\"isDropdownOpened\">\n         <h4 *ngIf=\"!items.length\" class=\"dropdown-header\">\n            {{'vsan.common.crossColumnFilter.search.notFound' | localized}}\n         </h4>\n         <ng-container *ngFor=\"let item of items; let i = index\">\n            <h4 *ngIf=\"item.group\"\n                class=\"dropdown-header\">\n               {{item.label}}\n            </h4>\n            <button *ngIf=\"!item.group\"\n                    type=\"button\"\n                    [class]=\"DROPDOWN_ITEM_CLASS\"\n                    [disabled]=\"isDisabled(item)\"\n                    [attr.title]=\"isDisabled(item) ?\n                                                 ('vsan.common.crossColumnFilter.item.disabled' | localized) : null\"\n                    (click)=\"openFilter(item)\">{{item.label}}\n            </button>\n         </ng-container>\n      </div>\n   </div>\n   <clr-icon *ngIf=\"!showAddFilterButton()\"\n             shape=\"no-icon\">\n   </clr-icon>\n   <clr-icon *ngIf=\"showAddFilterButton()\"\n             shape=\"plus-circle\"\n             (click)=\"onEnter()\"\n             [attr.title]=\"'vsan.common.crossColumnFilter.addFilterIcon.enabled' | localized\"\n             [class]=\"FILTER_ICON_CLASS\">\n   </clr-icon>\n   <!--Component filter dialog-->\n   <div class=\"custom-filter-container\"\n        *ngIf=\"isCustomFilterOpened\">\n      <button class=\"close\"\n              type=\"button\"\n              (click)=\"closeCustomFilter()\"\n              [attr.aria-label]=\"'vsan.common.close'|localized\">\n         <clr-icon shape=\"close\" title=\"{{'vsan.common.srMessage.close' | localized}}\"></clr-icon>\n      </button>\n      <!-- Render all children(CrossColumnFilterItemComponent[]) here because\n      dynamic content projection is not supported yet - https://github.com/angular/angular/issues/8563\n      The content of the clicked component is only shown. -->\n      <ng-content select=\"vsan-cross-column-filter-group\"></ng-content>\n   </div>\n</div>\n<!--Selected filters-->\n<!--TODO: Change the type of label filter to a generic one-->\n<ng-container *ngFor=\"let filter of filters; let i = index\">\n   <ng-container *ngIf=\"isNonEmptyArray(filter.value)\">\n      <vsan-action-separator *ngIf=\"i > 0\"></vsan-action-separator>\n      <ng-container *ngFor=\"let subItem of filter.value\">\n         <ng-container *ngTemplateOutlet=\"filterLabel;context: {item:\n         { field: filter.field, localizedField: filter.localizedField, value: subItem.key + ':' + subItem.value}}\">\n         </ng-container>\n      </ng-container>\n      <vsan-action-separator *ngIf=\"i < filters.length - 1\"></vsan-action-separator>\n   </ng-container>\n   <ng-container *ngIf=\"!isNonEmptyArray(filter.value)\">\n      <ng-container *ngTemplateOutlet=\"filterLabel;context: {item: filter}\"></ng-container>\n   </ng-container>\n</ng-container>\n\n<button *ngIf=\"showClearAllFilters()\"\n        class=\"btn btn-sm btn-link no-spacing\"\n        (click)=\"clearFilters()\">\n   {{'vsan.common.crossColumnFilter.clear.all' | localized}}\n</button>\n\n<ng-template #filterLabel let-item=\"item\">\n   <div class=\"label\">\n      <span class=\"edit-filter\" (click)=\"editFilter(item)\">\n         {{item.localizedField | localized }}: \"{{ item.localizedValue != null ? item.localizedValue : item.value }}\"\n      </span>\n      <button class=\"remove-filter\" (click)=\"removeFilter(item)\"\n              [attr.aria-label]=\"'vsan.icon.title.clearFilter'|localized\">\n         <clr-icon class=\"is-info\" shape=\"close\" title=\"{{'vsan.common.srMessage.close' | localized}}\"></clr-icon>\n      </button>\n   </div>\n</ng-template>\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {\n   AfterContentInit,\n   Component,\n   ContentChildren, ElementRef, EventEmitter, HostListener,\n   Input,\n   Output, QueryList, ViewChild,\n} from \"@angular/core\";\nimport {Icon} from \"@util/icon\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {CrossColumnFilterItemComponent} from \"./cross-column-filter-item.component\";\nimport {FilterService} from \"./filter.service\";\nimport {CrossColumnFilterGroupComponent} from \"./cross-column-filter-group.component\";\nimport {FilterItem} from \"./filter-item\";\nimport {Observable, Subscription} from \"rxjs\";\n\n/**\n *  The class is used in conjunction with the FilterService to provide filtering functionality.\n *    - You can declare a string or custom component filter item via CrossColumnFilterItemComponent. Filter items\n *  must be declared inside groups (i.e.,CrossColumnFilterGroupComponent).\n *    - To handle changes in the filters you can attach to the changes event.\n *    - (optional)Predefined filters can be set via the filters property.\n */\n@Component({\n   selector: \"vsan-cross-column-filter\",\n   templateUrl: \"cross-column-filter.html\",\n   styleUrls: [\"cross-column-filter.scss\"],\n   providers: [FilterService],\n})\nexport class CrossColumnFilterComponent implements AfterContentInit {\n\n   @HostListener(\"document:click\", [\"$event\"])\n   clickout(event: any): void {\n      if (this.isDropdownOpened && !this.addFilterElement.nativeElement.contains(event.target) &&\n            !this.dropdownFilterElement.nativeElement.contains(event.target)) {\n         this.clearAndBlurAddFilterElement();\n      }\n      // Close custom filter popup when clicking outside cross column filter.\n      // Check dropdown item and add filter icon click via class because elements are hidden at the time of click.\n      if (this.isCustomFilterOpened &&\n            !this.elRef.nativeElement.contains(event.target) &&\n            !event.target.classList.contains(this.FILTER_ICON_CLASS) &&\n            !event.target.classList.contains(this.DROPDOWN_ITEM_CLASS)) {\n         this.closeCustomFilter();\n      }\n   }\n\n   // Sets initial filters(optional). The property also stores filters selected from this component.\n   @Input()\n   filters: FilterItem[];\n\n   /* Observable to subscribe for a filter toggle:\n       - If field is not present add it.\n       - If field is present but the corresponding value is different, update it.\n       - If the same field and value are passed remove them.\n    */\n   @Input()\n   toggleFilter: Observable<any>;\n\n   @Input()\n   filterIconShape: string = \"filter\";\n\n   @Input()\n   filterText: string = VsanUiUtils.getString(\"vsan.common.crossColumnFilter.placeholder\");\n\n   @Output()\n   changes: EventEmitter<FilterItem[]> = new EventEmitter();\n\n   @ViewChild(\"addFilterElement\")\n   private addFilterElement: ElementRef;\n\n   @ViewChild(\"dropdownFilterElement\")\n   private dropdownFilterElement: ElementRef;\n\n   @ContentChildren(CrossColumnFilterGroupComponent)\n   groups: QueryList<CrossColumnFilterGroupComponent>;\n\n   private toggleFilterSubscription: Subscription;\n   private filterChangedSubscription: Subscription;\n   private _items: CrossColumnFilterItemComponent[] = [];\n   private selectedFilterItem: CrossColumnFilterItemComponent;\n   readonly DROPDOWN_ITEM_CLASS: string = \"dropdown-item\";\n   readonly FILTER_ICON_CLASS: string = \"cross-column-filter-icon\";\n   isDropdownOpened: boolean = false;\n   isCustomFilterOpened: boolean = false;\n   filterSearchValue: string;\n\n   // tslint:disable-next-line:typedef\n   Icon = Icon;\n\n   constructor(private elRef: ElementRef, private filterService: FilterService) {\n   }\n\n   ngOnInit(): void {\n      this.filterChangedSubscription = this.filterService.onFilterChanged.subscribe(filters => {\n         this.filters = filters;\n         this.changes.emit(filters);\n      });\n   }\n\n   ngAfterContentInit(): void {\n      const filterLabels: Map<string, string> = new Map();\n      this.groups.forEach(g => {\n         const groupComponent: CrossColumnFilterItemComponent = new CrossColumnFilterItemComponent();\n         groupComponent.group = true;\n         groupComponent.label = g.name;\n         this._items.push(groupComponent);\n         for (const item of g.items) {\n            this._items.push(item);\n            filterLabels.set(item.field, item.label);\n         }\n      });\n      this.filterService.initFilterLabels(filterLabels);\n      // Set predefined filters (e.g., when you send context via page navigation)\n      if (this.isNonEmptyArray(this.filters)) {\n         this.filterService.setFilters(this.filters);\n      }\n      if (this.toggleFilter) {\n         this.toggleFilterSubscription = this.toggleFilter.subscribe((filterItem: FilterItem) => {\n            this.filterService.toggleFilter(filterItem);\n         });\n      }\n   }\n\n   ngOnDestroy(): void {\n      if (this.toggleFilterSubscription) {\n         this.toggleFilterSubscription.unsubscribe();\n      }\n      if (this.filterChangedSubscription) {\n         this.filterChangedSubscription.unsubscribe();\n      }\n   }\n\n   // Filter items in the dropdown menu by the input string\n   get items(): CrossColumnFilterItemComponent[] {\n      // If no input return all items\n      if (!this.filterSearchValue) {\n         return this._items;\n      }\n      const separatorIdx: number = this.filterSearchValue.indexOf(\":\");\n      // If no key:value separator filter by the key\n      if (separatorIdx === -1) {\n         return this.filterGroups(this.filterSearchValue.toLowerCase());\n      }\n      // If the key:value separator is the first character return all items\n      if (separatorIdx === 0) {\n         return this._items;\n      }\n      // Get the key and filter by it\n      const key: string =  this.filterSearchValue.substring(0, separatorIdx).trim();\n      return this.filterGroups(key.toLowerCase());\n   }\n\n   addFilterClick(): void {\n      this.isDropdownOpened = true;\n      this.closeCustomFilter();\n      this.focusAddFilterInput(true);\n   }\n\n   private focusAddFilterInput(isFocus: boolean): void {\n      if (isFocus) {\n         this.addFilterElement.nativeElement.focus();\n      } else {\n         this.addFilterElement.nativeElement.blur();\n      }\n   }\n\n   // If there are no items in the group, remove the group itself\n   filterGroups(key: string): CrossColumnFilterItemComponent[] {\n      let tempGroup: CrossColumnFilterItemComponent;\n      const allItems: CrossColumnFilterItemComponent[] = [];\n      for (const item of this._items) {\n         if (item.group) {\n            tempGroup = item;\n            continue;\n         }\n         if (item.label.toLowerCase().indexOf(key) > -1) {\n            if (tempGroup) {\n               allItems.push(tempGroup);\n               tempGroup = null;\n            }\n            allItems.push(item);\n         }\n      }\n      return allItems;\n   }\n\n   openFilter(filterComponent: CrossColumnFilterItemComponent, filterValue?: string): void {\n      this.closeCustomFilter();\n      this.selectedFilterItem = filterComponent;\n      this.filterSearchValue = VsanUiUtils.getString(\"vsan.common.labelValue\", this.selectedFilterItem.label, \"\");\n      if (this.selectedFilterItem.isCustomFilter) {\n         this.isCustomFilterOpened = true;\n         this.selectedFilterItem.show = true;\n         this.focusAddFilterInput(false);\n      } else {\n         if (filterValue) {\n            this.filterSearchValue += filterValue;\n         }\n         this.focusAddFilterInput(true);\n      }\n      this.isDropdownOpened = false;\n   }\n\n   editFilter(item: FilterItem): void {\n      const filterComponent: CrossColumnFilterItemComponent =\n            this._items.filter(i => i.field === item.field)[0];\n      if (filterComponent) {\n         this.openFilter(filterComponent, item.value);\n      }\n   }\n\n   isDisabled(item: CrossColumnFilterItemComponent): boolean {\n      const filter: FilterItem = this.filterService.getFilter(item.field)[0];\n      return filter && filter.value && !Array.isArray(filter.value);\n   }\n\n   closeCustomFilter(): void {\n      if (this.selectedFilterItem && this.selectedFilterItem.show) {\n         this.selectedFilterItem.show = false;\n      }\n      if (this.isCustomFilterOpened) {\n         this.isCustomFilterOpened = false;\n      }\n   }\n\n   onEnter(): void {\n      if (!this.filterSearchValue) {\n         return;\n      }\n      const components: string[] = this.filterSearchValue.split(\":\", 2);\n      const key: string = components[0] ? components[0].trim() : null;\n      const value: string = components[1] ? components[1].trim() : null;\n\n      if (!key) {\n         this.clearAndBlurAddFilterElement();\n         return;\n      }\n      const matchedItems: CrossColumnFilterItemComponent[] = this._items.filter(i =>\n            i.label && i.label.toLocaleLowerCase().indexOf(key.toLocaleLowerCase()) > -1);\n      if (matchedItems.length !== 1) {\n         this.clearAndBlurAddFilterElement();\n         return;\n      }\n      if (matchedItems[0].isCustomFilter) {\n         this.openFilter(matchedItems[0]);\n         return;\n      }\n      if (!value) {\n         this.clearAndBlurAddFilterElement();\n         return;\n      }\n      this.filterService.setFilter(new FilterItem(matchedItems[0].field, value));\n      this.clearAndBlurAddFilterElement();\n   }\n\n   clearAndBlurAddFilterElement(): void {\n      this.filterSearchValue = null;\n      this.isDropdownOpened = false;\n      this.focusAddFilterInput(false);\n   }\n\n   clearFilters(): void {\n      this.filterSearchValue = null;\n      this.filterService.clearFilter();\n      this.closeCustomFilter();\n   }\n\n   removeFilter(filter: FilterItem): void {\n      this.filterService.removeFilter(filter);\n   }\n\n   showClearAllFilters(): boolean {\n      const filters: FilterItem[] = this.filterService.getFilter();\n      const allFiltersCount: number =\n            filters.reduce((sum, item) => sum += this.isNonEmptyArray(item.value) ? item.value.length : 1, 0);\n      return allFiltersCount > 1;\n   }\n\n   showAddFilterButton(): boolean {\n      return !this.isCustomFilterOpened && !!this.filterSearchValue;\n   }\n\n   isNonEmptyArray(val: any): boolean {\n      return val && Array.isArray(val) && !!val.length;\n   }\n}\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\n\n// This class is used as a model for items in the FilterService\nexport class FilterItem {\n   constructor(public field: string, // The name of model field to filter\n         public value: any, // The value to filter (type is string | [{key: string, value: string})\n         public localizedField?: string, // The localized string that represents the field in the cross column filter.\n         public localizedValue?: string, // The localized string that represents the value in the cross column filter.\n   ) {}\n}","<ng-content *ngIf=\"show || group\"></ng-content>","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, HostListener, Input} from \"@angular/core\";\n\n/**\n * This class represents a single item (icon and label) of ListFilterComponent\n */\n\n@Component({\n   selector: \"vsan-list-filter-item\",\n   template: `<clr-icon *ngIf=\"iconShape\"\n                        aria-hidden=\"true\"\n                        [attr.shape]=\"iconShape\"\n                        class=\"{{iconClass}} pointer\">\n              </clr-icon>{{label | localized}}`,\n   styleUrls: [\"list-filter-item.scss\"],\n   host: {\n      \"[class.selected-filter]\": \"this.isSelected\",\n      \"[attr.id]\": \"this.key\"},\n})\nexport class ListFilterItemComponent {\n\n   @Input()\n   key: string;\n\n   @Input()\n   label: string;\n\n   @Input()\n   iconShape: string;\n\n   @Input()\n   iconClass: string;\n\n   isSelected: boolean = false;\n   onListItemFilterChanged: EventEmitter<{value: string, localizedValue: string}> =\n       new EventEmitter<{value: string, localizedValue: string}>();\n\n   setSelectedItem(value: boolean) {\n      this.isSelected = value;\n   }\n\n   @HostListener(\"click\")\n   onClick() {\n      this.onListItemFilterChanged.emit(this.isSelected ? null : {value: this.key, localizedValue: this.label});\n   }\n}\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {CrossColumnFilterComponent} from \"@component/cross-column-filter/cross-column-filter.component\";\nimport {CrossColumnFilterGroupComponent} from \"@component/cross-column-filter/cross-column-filter-group.component\";\nimport {CrossColumnFilterItemComponent} from \"@component/cross-column-filter/cross-column-filter-item.component\";\nimport {ListFilterComponent} from \"@component/cross-column-filter/list-filter.component\";\nimport {ListFilterItemComponent} from \"@component/cross-column-filter/list-filter-item.component\";\nimport {ActionButtonModule} from \"@component/action-button/action-button.module\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule,\n      ActionButtonModule,\n   ],\n   declarations: [\n      CrossColumnFilterComponent,\n      CrossColumnFilterGroupComponent,\n      CrossColumnFilterItemComponent,\n      ListFilterComponent,\n      ListFilterItemComponent,\n\n   ],\n   exports: [\n      CrossColumnFilterComponent,\n      CrossColumnFilterGroupComponent,\n      CrossColumnFilterItemComponent,\n      ListFilterComponent,\n      ListFilterItemComponent,\n   ],\n})\nexport class CrossColumnFilterModule {\n}\n","<span class=\"separator\"></span>","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {\n   AfterContentInit,\n   Component,\n   ContentChildren,\n   EventEmitter,\n   QueryList,\n} from \"@angular/core\";\nimport {CustomFilter} from \"./custom-filter\";\nimport {ListFilterItemComponent} from \"./list-filter-item.component\";\n\n/**\n * This class is a used as a custom filter component for the CrossColumnFilterComponent.\n * It selects an item from a list of items.\n */\n@Component({\n   selector: \"vsan-list-filter\",\n   template: `<ng-content select=\"vsan-list-filter-item\"></ng-content>`,\n   styleUrls: [\"list-filter.scss\"],\n})\nexport class ListFilterComponent implements CustomFilter, AfterContentInit {\n\n   @ContentChildren(ListFilterItemComponent)\n   filterItems: QueryList<ListFilterItemComponent>;\n\n   onFilterSet = new EventEmitter<{value: string, localizedValue: string}>();\n\n   setFilterToComponent(filterValue: string) {\n      this.filterItems.forEach(i => i.setSelectedItem(filterValue && (i.key === filterValue) ? true : false));\n   }\n\n   ngAfterContentInit() {\n      if (!(this.filterItems && this.filterItems.length)) {\n         return;\n      }\n      this.filterItems.forEach(item => {\n         item.onListItemFilterChanged.subscribe(filterValue => {\n             this.onFilterSet.emit(filterValue);\n         });\n      });\n   }\n}","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, ContentChildren, Input} from \"@angular/core\";\nimport {CrossColumnFilterItemComponent} from \"./cross-column-filter-item.component\";\n\n/**\n * This class wraps filter items (i.e, CrossColumnFilterItemComponent) in order to represent them\n * under a common group in the cross column filter's dropdown menu. The group name is set via the name property.\n */\n@Component({\n   selector: \"vsan-cross-column-filter-group\",\n   template: `<ng-content select=\"vsan-cross-column-filter-item\"></ng-content>`,\n   styleUrls: [\"cross-column-filter-group.scss\"],\n})\n\nexport class CrossColumnFilterGroupComponent {\n   @Input()\n   name: string;\n\n   @ContentChildren(CrossColumnFilterItemComponent)\n   items: CrossColumnFilterItemComponent[];\n}","<ng-content select=\"vsan-list-filter-item\"></ng-content>","<clr-icon *ngIf=\"iconShape\"\n                        aria-hidden=\"true\"\n                        [attr.shape]=\"iconShape\"\n                        class=\"{{iconClass}} pointer\">\n              </clr-icon>{{label | localized}}","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {\n   AfterContentInit,\n   Component,\n   ContentChild,\n   Input,\n} from \"@angular/core\";\nimport {CustomFilter} from \"./custom-filter\";\nimport {FilterService} from \"./filter.service\";\nimport {FilterItem} from \"./filter-item\";\n\n/**\n * This class is used as a model for the filter items.\n * - The items are declared inside <vsan-cross-column-filter-group>.\n * - Each item is treated as a clickable label from the dropdown menu that opens\n * either a string filter or a custom component filter.\n * - You can declare a custom filter component by projecting it inside the items' content.\n * The custom filter component must implement CustomFilter interface.\n */\n@Component({\n   selector: \"vsan-cross-column-filter-item\",\n   template: `<ng-content *ngIf=\"show || group\"></ng-content>`,\n   styleUrls: [\"cross-column-filter-item.scss\"],\n})\nexport class CrossColumnFilterItemComponent implements AfterContentInit {\n\n   // The name of the field to filter by.\n   @Input()\n   field: string;\n\n   // The label that maps the field to display\n   @Input()\n   label: string;\n\n   group: boolean = false;\n   isCustomFilter: boolean;\n   show = false;\n\n   // A reference to a custom filter component, in case such is declared\n   @ContentChild(\"vsanCustomFilter\")\n   customFilterComponent: CustomFilter;\n\n   constructor(private filterService?: FilterService) {}\n\n   ngAfterContentInit() {\n      if (!this.customFilterComponent) {\n         return;\n      }\n      // If there is a custom filter component projected:\n      this.isCustomFilter = true;\n      // 1) Subscribe to custom component changes and update the filter service state.\n      this.customFilterComponent.onFilterSet.subscribe(filterValue => {\n         const filterItem: FilterItem = (filterValue && filterValue.localizedValue) ?\n             new FilterItem(this.field, filterValue.value, null, filterValue.localizedValue) :\n             new FilterItem(this.field, filterValue);\n         this.filterService.setFilter(filterItem);\n      });\n      // 2) Subscribe to filter service state changes and update the custom component. This is required to handle\n      // filter changes outside of the custom component (i.e., filter removal from the close icon).\n      this.filterService.onFilterChanged.subscribe(filters => {\n         const filterItem: FilterItem = filters.find(f => f.field === this.field);\n         this.customFilterComponent.setFilterToComponent((filterItem && filterItem.value) ? filterItem.value : null);\n      });\n   }\n}","/* Copyright 2017-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component} from \"@angular/core\";\n\n@Component({\n   selector: 'vsan-action-separator',\n   template: '<span class=\"separator\"></span>',\n   styleUrls: ['./action-button-separator.scss']\n})\nexport class ActionButtonSeparatorComponent {\n}","/* Copyright (c) 2019-2020 VMware, Inc. All rights reserved. VMware Confidential */\nimport {Injectable} from \"@angular/core\";\nimport {Observable, Subject} from \"rxjs\";\nimport {FilterItem} from \"./filter-item\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * This class is used in conjunction with the CrossColumnFilterComponent.\n * It manages filtering state and operations (e.g., get, set and remove filter) of CrossColumnFilterComponent.\n */\n@Injectable()\nexport class FilterService {\n   private filters: FilterItem[] = [];\n   private filterLabels: Map<string, string>;\n\n   private _filterChanged: Subject<FilterItem[]> = new Subject<FilterItem[]>();\n   onFilterChanged: Observable<FilterItem[]> = this._filterChanged.asObservable();\n\n   private _filterCleared: Subject<boolean> = new Subject<boolean>();\n   onFilterCleared: Observable<boolean> = this._filterCleared.asObservable();\n\n   // Store filter labels in order to avoid passing the label per each add/replace filter operation.\n   initFilterLabels(filterLabels: Map<string, string>) {\n      this.filterLabels = filterLabels;\n   }\n\n   getFilter(fieldName?: string): FilterItem[] {\n      if (fieldName) {\n         return this.filters.filter(f => f.field === fieldName);\n      } else {\n         return this.filters;\n      }\n   }\n\n   clearFilter(): void {\n      this.filters = [];\n      this._filterChanged.next(this.filters);\n      this._filterCleared.next(true);\n   }\n\n   removeFilter(targetFilter: FilterItem): void {\n      const currentFilter: FilterItem = this.getFilter(targetFilter.field)[0];\n      if (!currentFilter) {\n         return;\n      }\n      if (Array.isArray(currentFilter.value)) {\n         this.removeMultiFilter(targetFilter, currentFilter);\n         return;\n      }\n      this.removeFilterItemByField(targetFilter.field, true);\n   }\n\n   private removeMultiFilter(targetFilter: FilterItem, currentFilter: FilterItem): void {\n      const components: string[] = targetFilter.value.toString().split(\":\");\n      const itemIndex = this.getItemIndex({key: components[0], value: components[1]}, currentFilter.value);\n      if (itemIndex === -1) {\n         return;\n      }\n      currentFilter.value.splice(itemIndex, 1);\n      if (!currentFilter.value.length) {\n         this.removeFilterItemByField(currentFilter.field, true);\n      }\n      this.emitFilterChanges();\n   }\n\n   private getItemIndex(searchItem: {key: string, value: string}, items: Array <{key: string, value: string}>): number {\n      return items.findIndex((item) => item.key === searchItem.key && item.value === searchItem.value);\n   }\n\n   setFilters(filters: FilterItem[]): void {\n      if (filters && filters.length) {\n         this.filters = filters.map(f => this.ensureFilterItemLabel(f));\n         this.emitFilterChanges();\n      }\n   }\n\n   setFilter(targetFilter: FilterItem): void {\n      const currentFilter: FilterItem = this.getFilterItemByField(targetFilter.field);\n      // If the target filter has no value remove it from the current list if it presents\n      if (VsanUiUtils.isEmpty(targetFilter.value)) {\n         if (currentFilter) {\n            this.removeFilterItemByField(targetFilter.field, true);\n         }\n         return;\n      }\n      if (currentFilter) {\n         // If the target filter already presents in the list edit it\n         currentFilter.value = targetFilter.value;\n         currentFilter.localizedValue = targetFilter.localizedValue;\n         this.emitFilterChanges();\n         return;\n      }\n      // If the target filter is new add it to the list\n      this.addFilter(targetFilter);\n      this.emitFilterChanges();\n   }\n\n   /* Toggles a filter:\n       - If field is not present add it.\n       - If field is present but the corresponding value is different, update it.\n       - If the same field and value are passed remove them.\n    */\n   toggleFilter(targetFilter: FilterItem): void {\n      const currentFilter: FilterItem = this.getFilterItemByField(targetFilter.field);\n      // If the target filter has no value remove it from the current list if it presents\n      if (VsanUiUtils.isEmpty(targetFilter.value)) {\n         if (currentFilter) {\n            this.removeFilterItemByField(targetFilter.field, true);\n         }\n         return;\n      }\n      if (currentFilter) {\n         // If the target filter already presents in the list edit it (if the same value s passed it's removed).\n         if (Array.isArray(currentFilter.value)) {\n            this.toggleMultiFilter(targetFilter, currentFilter);\n         } else {\n            if (currentFilter.value === targetFilter.value) {\n               this.removeFilterItemByField(targetFilter.field, false);\n            } else {\n               currentFilter.value = targetFilter.value;\n               currentFilter.localizedValue = targetFilter.localizedValue;\n            }\n         }\n         this.emitFilterChanges();\n         return;\n      }\n      // If the target filter is new add it to the list\n      this.addFilter(targetFilter);\n      this.emitFilterChanges();\n   }\n\n   private toggleMultiFilter(targetFilter: FilterItem, currentFilter: FilterItem): void {\n      const item: {key: string, value: string} = targetFilter.value[0];\n      const itemIndex = this.getItemIndex(item, currentFilter.value);\n      if (itemIndex === -1) {\n         currentFilter.value.push(item);\n      } else {\n         currentFilter.value.splice(itemIndex, 1);\n         if (!currentFilter.value.length) {\n            this.removeFilterItemByField(currentFilter.field, false);\n         }\n      }\n   }\n\n   private removeFilterItemByField(filterField: string, emitFilters: boolean) {\n      this.filters = this.filters.filter(f => !(f.field === filterField));\n      if (emitFilters) {\n         this.emitFilterChanges();\n      }\n   }\n\n   private emitFilterChanges() {\n      this._filterChanged.next(this.filters);\n   }\n\n   private getFilterItemByField(filterField: string): FilterItem {\n      return this.filters.find(f => f.field === filterField);\n   }\n\n   private addFilter(filterItem: FilterItem): void {\n      this.filters.push(this.ensureFilterItemLabel(filterItem));\n   }\n\n   private ensureFilterItemLabel(filterItem: FilterItem): FilterItem {\n      if (filterItem.localizedField) {\n         return filterItem;\n      }\n      filterItem.localizedField = this.filterLabels.get(filterItem.field);\n      return filterItem;\n   }\n}"],"sourceRoot":"webpack:///"}