{"version":3,"sources":["webpack:///src/app/vsan/common/component/general-settings/utils/rekey-interval.html","webpack:///src/app/vsan/common/component/general-settings/general-settings.component.ts","webpack:///src/app/vsan/common/component/general-settings/general-settings.module.ts","webpack:///src/app/vsan/common/util/vsan-rdma-util.ts","webpack:///src/app/vsan/common/component/general-settings/general-settings.html","webpack:///src/app/vsan/common/util/vsan-dit-util.ts","webpack:///src/app/vsan/common/service/status-updates/vsan-status-change.data.ts","webpack:///src/app/vsan/common/service/flow/loader-name.ts","webpack:///src/app/vsan/common/util/vsan-signpost-util.ts"],"names":["GeneralSettingsComponent","configureClusterService","stretchedClusterService","rdmaService","csdService","SpaceEfficiencyConfig","AlertType","predefinedHeight","showTitles","showComputeOnlyOption","showVsanMaxOption","showLargeScaleClusterSupportOption","showRdmaSupportOption","resetRdmaStatus","showAllowReducedRedundancyOption","showFileServiceOweDescription","vsanConfigSpecChange","originalAutoClaimDisksEnabled","isClusterClientOrServer","hasSharedWitnessHost","hasAnyDiskGroups","hostHardwareSupportRdma","ditElementId","vsanConfigSpec","config","cloneVsanConfigSpec","originalDataAtRestEncryptionEnabled","enableDataAtRestEncryption","originalSpaceEfficiency","spaceEfficiencyConfig","autoClaimDisks","enableRdma","isVsanMaxEnabled","isVsanMaxWorkflow","emit","kmipClusterId","preselectKmipCluster","queryData","resizeModalIfNeeded","promises","clusterRef","push","isRdmaHardwareSupported","Promise","all","result","form","clusterCapabilityData","isComputeOnlySupported","clusterMode","COMPUTE","isComputeOnlyModeSelected","disableAllServices","NONE","enableDataInTransitEncryption","allowReducedRedundancy","advancedOptions","largeClusterSupportEnabled","isSpaceEfficiencySupported","isEncryptionSupported","getDitUnavailableMessage","autoClaimDisksEnabled","isComputeOnlyClusterSupported","isVsanMaxSingleTierSupported","availableKmipClusters","length","isNativeLargeClusterSupported","isAdvancedClusterOptionsSupported","isDfcRequiredSettingChanged","getString","warnings","vcCapabilityData","isVsanHciMeshPolicySupported","isDitSharedWitnessInteroperabilitySupported","SIGNPOST_WIDTH","SIGNPOST_HEIGHT","getPosition","allowReducedRedundancyDisabled","canEnableRdma","configType","isRdmaStretchedClusterSupported","getRdmaDisabledMessage","additionalHeight","sizePerNewSetting","displayComputeOnlyOption","displayVsanMaxOption","isManualLargeClusterSettingSupported","isDataInTransitEncryptionSupported","setModalDialogHeight","GeneralSettingsModule","VsanRdmaUtil","isLargeScaleSupportEnabled","isClusterTypeSupported","errorMessage","concat","trim","isStretchedOrTwoNodeCluster","STRETCHED_CLUSTER","TWO_HOST_VSAN_CLUSTER","VsanDitUtil","DEFAULT_DIT_REKEY_INTERVAL","VsanStatusChangeData","taskRef","status","contextObject","changeType","StatusChangeType","LoaderName","VsanSignpostUtil","elementId","signpostWidth","signpostHeight","isInModal","elementBox","document","getElementById","getBoundingClientRect","modalVerticalPadding","MODAL_VERTICAL_PADDING","verticalPosition","getVerticalPosition","ARROW_SIZE","modalHorizontalPadding","MODAL_HORIZONTAL_PADDING","horizontalPosition","getHorizontalPosition","elementHeight","bodyBox","body","bottom","height","BOTTOM","top","TOP","MIDDLE","elementWidth","right","width","RIGHT","left","LEFT"],"mappings":"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","file":"54-es5.js","sourcesContent":["<!--Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-select-container>\n   <label>\n      {{\"configureVsan.settings.dataInTransitEncryption.rekeyLabel\" | localized}}\n   </label>\n   <select class=\"rekey-interval\"\n           id=\"rekey-interval\"\n           clrSelect\n           [(ngModel)]=\"selectedRekeyMode\"\n           (ngModelChange)=\"onRekeyModeChange()\"\n           [disabled]=\"!isDataInTransitEncryptionEnabled\"\n           name=\"rekey-interval\">\n      <option [selected]=\"isDefaultRekeyInterval()\"\n              value=\"{{RekeyMode.DEFAULT}}\">\n         {{\"configureVsan.settings.dataInTransitEncryption.rekey.mode.default\" | localized}}\n      </option>\n      <option [selected]=\"isCustomRekeyInterval()\"\n              value=\"{{RekeyMode.CUSTOM}}\">\n         {{\"configureVsan.settings.dataInTransitEncryption.rekey.mode.custom\" | localized}}\n      </option>\n   </select>\n</clr-select-container>\n\n<clr-select-container *ngIf=\"isDefaultRekeyInterval()\">\n   <select class=\"default-rekey-input\"\n           clrSelect\n           [(ngModel)]=\"rekeyInterval\"\n           (ngModelChange)=\"onRekeyIntervalChange()\"\n           [disabled]=\"!isDataInTransitEncryptionEnabled\"\n           name=\"default-rekey-input\">\n      <option *ngFor=\"let pair of rekeyDefaultValuesMap\"\n              [selected]=\"pair.valueInMinutes == rekeyInterval\"\n              value=\"{{pair.valueInMinutes}}\">\n         {{pair.name}}\n      </option>\n   </select>\n   <clr-control-helper>\n      {{DEFAULT_REKEY_HELPER_TEXT}}\n   </clr-control-helper>\n</clr-select-container>\n\n<clr-input-container *ngIf=\"isCustomRekeyInterval()\">\n   <input id=\"custom-rekey-input\"\n          class=\"custom-rekey-input\"\n          type=\"number\"\n          [disabled]=\"!isDataInTransitEncryptionEnabled\"\n          [(ngModel)]=\"rekeyInterval\"\n          (ngModelChange)=\"onRekeyIntervalChange()\"\n          name=\"custom-rekey-input\"\n          clrInput />\n   <clr-control-helper>\n      {{CUSTOM_REKEY_HELPER_TEXT}}\n   </clr-control-helper>\n</clr-input-container>\n","/* Copyright 2016-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {AlertType} from \"@component/validation/alert-type\";\nimport {ClusterMode} from \"@generated/cluster-mode\";\nimport {ConfigureClusterService} from \"@generated/configure-cluster-service\";\nimport {CsdService} from \"@generated/csd-service\";\nimport {SpaceEfficiencyConfig} from \"@generated/space-efficiency-config\";\nimport {VsanClusterType} from \"@generated/vsan-cluster-type\";\nimport {VsanConfigSpec} from \"@generated/vsan-config-spec\";\nimport {VsanRdmaService} from \"@generated/vsan-rdma-service\";\nimport {VsanStretchedClusterService} from \"@generated/vsan-stretched-cluster-service\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanDitUtil} from \"@util/vsan-dit-util\";\nimport {VsanRdmaUtil} from \"@util/vsan-rdma-util\";\nimport {VsanSignpostUtil} from \"@util/vsan-signpost-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {GeneralConfigData} from \"./general-config.data\";\n\n@Component({\n   templateUrl: \"general-settings.html\",\n   styleUrls: [\"general-settings.scss\"],\n   selector: \"vsan-general-settings\",\n})\nexport class GeneralSettingsComponent implements OnInit {\n   SpaceEfficiencyConfig: typeof SpaceEfficiencyConfig = SpaceEfficiencyConfig;\n\n   AlertType: typeof AlertType = AlertType;\n\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Input()\n   predefinedHeight: number = 550;\n\n   @Input()\n   config: GeneralConfigData;\n\n   @Input()\n   showTitles: boolean = true;\n\n   @Input()\n   showComputeOnlyOption: boolean = false;\n\n   @Input()\n   showVsanMaxOption: boolean = false;\n\n   @Input()\n   showLargeScaleClusterSupportOption: boolean = false;\n\n   @Input()\n   showRdmaSupportOption: boolean = false;\n\n   @Input()\n   resetRdmaStatus: boolean = false;\n\n   @Input()\n   showAllowReducedRedundancyOption: boolean = true;\n\n   @Input()\n   showFileServiceOweDescription: boolean = false;\n\n   @Input()\n   configType: VsanClusterType;\n\n   @Input()\n   isVsanMaxWorkflow: boolean;\n\n   @Output()\n   vsanConfigSpecChange: EventEmitter<VsanConfigSpec> = new EventEmitter();\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   /**\n    * Save the original configuration to keep track if disk format change warning must be displayed.\n    */\n   private originalDataAtRestEncryptionEnabled: boolean;\n   private originalSpaceEfficiency: SpaceEfficiencyConfig;\n   vsanConfigSpec: VsanConfigSpec;\n   originalAutoClaimDisksEnabled: boolean = false;\n   private isClusterClientOrServer: boolean = false;\n   private hasSharedWitnessHost: boolean = false;\n   private hasAnyDiskGroups: boolean = false;\n   private hostHardwareSupportRdma: boolean = false;\n\n   ditElementId: string = \"data-in-transit-encryption-help\";\n\n   constructor(private configureClusterService: ConfigureClusterService,\n         private stretchedClusterService: VsanStretchedClusterService,\n         private rdmaService: VsanRdmaService,\n         private csdService: CsdService) {\n   }\n\n   async ngOnInit(): Promise<void> {\n      this.vsanConfigSpec = this.config.cloneVsanConfigSpec();\n      this.originalDataAtRestEncryptionEnabled = this.vsanConfigSpec.enableDataAtRestEncryption;\n      this.originalSpaceEfficiency = this.vsanConfigSpec.spaceEfficiencyConfig;\n      this.originalAutoClaimDisksEnabled = this.vsanConfigSpec.autoClaimDisks;\n      // ensure RDMA is always disabled for Configure vSAN wizard\n      if (this.resetRdmaStatus) {\n         this.vsanConfigSpec.enableRdma = false;\n      }\n      // In Configure wizard assign the isVsanMaxEnabled value of vSanConfigSpec based on the isVsanMaxWorkflow property,\n      // because the vsanConfigSpec should not be changed before this step in the wizard.\n      this.vsanConfigSpec.isVsanMaxEnabled = this.vsanConfigSpec.isVsanMaxEnabled || this.isVsanMaxWorkflow;\n      this.vsanConfigSpecChange.emit(this.vsanConfigSpec);\n\n      this.vsanConfigSpec.kmipClusterId = this.preselectKmipCluster();\n      await this.queryData();\n      this.resizeModalIfNeeded();\n   }\n\n   @Loader()\n   private async queryData(): Promise<void> {\n      const promises: Promise<any>[] = [\n         this.stretchedClusterService.hasSharedWitnessHost(this.clusterRef),\n         this.csdService.isClusterClientOrServer(this.clusterRef),\n         this.configureClusterService.hasAnyDiskGroups(this.clusterRef),\n      ];\n\n      if (this.showRdmaSupportOption) {\n         promises.push(this.rdmaService.isRdmaHardwareSupported(this.clusterRef, null));\n      }\n\n      const result: any[] = await Promise.all(promises);\n      this.hasSharedWitnessHost = result[0];\n      this.isClusterClientOrServer = result[1];\n      this.hasAnyDiskGroups = result[2];\n      if (this.showRdmaSupportOption) {\n         this.hostHardwareSupportRdma = result[3];\n      }\n   }\n\n   updateSpec(form: any): void {\n      if (!this.vsanConfigSpec) {\n         return;\n      }\n      this.vsanConfigSpecChange.emit(this.vsanConfigSpec);\n   }\n\n   isComputeOnlyClusterSupported(): boolean {\n      return this.config?.clusterCapabilityData?.isComputeOnlySupported;\n   }\n\n   isComputeOnlyModeSelected(): boolean {\n      return this.vsanConfigSpec.clusterMode === ClusterMode.COMPUTE;\n   }\n\n   switchComputeOnlyClusterMode(): void {\n      if (!this.isComputeOnlyModeSelected()) {\n         this.vsanConfigSpec.clusterMode = ClusterMode.COMPUTE;\n         this.disableAllServices();\n      } else {\n         this.vsanConfigSpec.clusterMode = null;\n      }\n   }\n\n   switchVsanMaxMode(): void {\n      if (this.vsanConfigSpec.isVsanMaxEnabled) {\n         this.vsanConfigSpec.spaceEfficiencyConfig = SpaceEfficiencyConfig.NONE;\n      }\n   }\n\n   disableAllServices(): void {\n      // Autoclaim is always disabled (deprecated) if compute-only mode is supported\n      this.vsanConfigSpec.autoClaimDisks = false;\n      this.vsanConfigSpec.spaceEfficiencyConfig = SpaceEfficiencyConfig.NONE;\n      this.vsanConfigSpec.enableDataAtRestEncryption = false;\n      this.vsanConfigSpec.enableDataInTransitEncryption = false;\n      this.vsanConfigSpec.allowReducedRedundancy = false;\n      this.vsanConfigSpec.enableRdma = false;\n      this.vsanConfigSpec.advancedOptions.largeClusterSupportEnabled = false;\n      this.vsanConfigSpec.isVsanMaxEnabled = false;\n   }\n\n   isSpaceEfficiencySupported(): boolean {\n      return this.config &&\n            (this.config.isSpaceEfficiencySupported || this.config.clusterCapabilityData.isEncryptionSupported);\n   }\n\n   isDataInTransitDisabled(): boolean {\n      return !!this.getDitUnavailableMessage() || this.isComputeOnlyModeSelected();\n   }\n\n   isSpaceEfficiencyDisabled(): boolean {\n      return this.autoClaimDisksEnabled || this.isComputeOnlyModeSelected() || this.vsanConfigSpec.isVsanMaxEnabled;\n   }\n\n   isEncryptionDisabled(): boolean {\n      return this.autoClaimDisksEnabled || this.isComputeOnlyModeSelected();\n   }\n\n   get displayComputeOnlyOption(): boolean {\n      return this.isComputeOnlyClusterSupported() && this.showComputeOnlyOption;\n   }\n\n   get displayVsanMaxOption(): boolean {\n      return this.config?.clusterCapabilityData?.isVsanMaxSingleTierSupported && this.showVsanMaxOption;\n   }\n\n   get autoClaimDisksEnabled(): boolean {\n      return this.vsanConfigSpec.autoClaimDisks;\n   }\n\n   get wipeDiskDisabled(): boolean {\n      return this.vsanConfigSpec.autoClaimDisks || !this.vsanConfigSpec.enableDataAtRestEncryption;\n   }\n\n   preselectKmipCluster(): string {\n      if (this.vsanConfigSpec.kmipClusterId) {\n         return this.vsanConfigSpec.kmipClusterId;\n      }\n      // In case there is just one configured KMS cluster, return it as selected.\n      return this.config.availableKmipClusters && this.config.availableKmipClusters.length === 1 ?\n            this.config.availableKmipClusters[0] : null;\n   }\n\n   get isManualLargeClusterSettingSupported(): boolean {\n      // Show the toggle setting for large cluster support (more than 32 hosts) if it is NOT supported natively\n      return !this.config.clusterCapabilityData.isNativeLargeClusterSupported\n            && this.config.clusterCapabilityData.isAdvancedClusterOptionsSupported\n            && this.showLargeScaleClusterSupportOption;\n   }\n\n   get kmipClusterDisabled(): boolean {\n      return this.vsanConfigSpec.autoClaimDisks || !this.vsanConfigSpec.enableDataAtRestEncryption;\n   }\n\n   get allowReducedRedundancyDisabled(): boolean {\n      return this.vsanConfigSpec.autoClaimDisks || !this.isDfcRequiredSettingChanged;\n   }\n\n   get rdmaAlertMessage(): string {\n      return this.hostHardwareSupportRdma\n            ? VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.hostsHardwareRdmaRequirement\")\n            : VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupportedByAnyHostsHardware\");\n   }\n\n   /**\n    * Checks if Disk format change warning should be displayed.\n    */\n   get isDFCWarningVisible(): boolean {\n      return this.isDfcRequiredSettingChanged && this.hasAnyDiskGroups;\n   }\n\n   get dfcWarnings(): string[] {\n      const warnings: string[] = [\n         VsanUiUtils.getString(\"vsan.generalConfig.encryptionWarning\"),\n      ];\n\n      if (this.config.vcCapabilityData.isVsanHciMeshPolicySupported) {\n         warnings.push(VsanUiUtils.getString(\"vsan.generalConfig.hciMeshPolicy.warning\"));\n      }\n\n      return warnings;\n   }\n\n   getDitUnavailableMessage(): string {\n      return VsanDitUtil.getDitUnavailableMessage(this.vsanConfigSpec,\n            this.isClusterClientOrServer,\n            this.hasSharedWitnessHost,\n            this.config.clusterCapabilityData.isDitSharedWitnessInteroperabilitySupported);\n   }\n\n   getDitSignpostPosition(): string {\n      const SIGNPOST_WIDTH: number = 256;\n      const SIGNPOST_HEIGHT: number = 84;\n      return VsanSignpostUtil.getPosition(this.ditElementId, SIGNPOST_WIDTH, SIGNPOST_HEIGHT,\n            true);\n   }\n\n   private get isDfcRequiredSettingChanged(): boolean {\n      return this.originalDataAtRestEncryptionEnabled !== this.vsanConfigSpec.enableDataAtRestEncryption\n            || this.originalSpaceEfficiency !== this.vsanConfigSpec.spaceEfficiencyConfig;\n   }\n\n   dfcRequiredSettingsChanged(): void {\n      if (this.allowReducedRedundancyDisabled) {\n         this.vsanConfigSpec.allowReducedRedundancy = false;\n      }\n   }\n\n   updateRdmaState(): void {\n      if (this.showRdmaSupportOption && !this.canEnableRdma) {\n         this.vsanConfigSpec.enableRdma = false;\n      }\n   }\n\n   get canEnableRdma(): boolean {\n      return VsanRdmaUtil.canEnableRdma(this.hostHardwareSupportRdma,\n            this.vsanConfigSpec.advancedOptions.largeClusterSupportEnabled, this.configType,\n            this.config.clusterCapabilityData.isRdmaStretchedClusterSupported);\n   }\n\n   get rdmaDisabledMessage(): string {\n      return VsanRdmaUtil.getRdmaDisabledMessage(this.hostHardwareSupportRdma,\n            this.vsanConfigSpec.advancedOptions.largeClusterSupportEnabled, this.configType,\n            this.config.clusterCapabilityData.isRdmaStretchedClusterSupported);\n   }\n\n   /*\n      Resize modal based on settings count\n   */\n   private resizeModalIfNeeded(): void {\n      if (!this.config) {\n         return;\n      }\n\n      let additionalHeight: number = 0;\n      const sizePerNewSetting: number = 55;\n\n      if (this.displayComputeOnlyOption) {\n         additionalHeight += sizePerNewSetting * 2;\n      }\n\n      if (this.displayVsanMaxOption) {\n         additionalHeight += sizePerNewSetting;\n      }\n\n      if (this.showRdmaSupportOption) {\n         additionalHeight += sizePerNewSetting;\n      }\n\n      if (this.isManualLargeClusterSettingSupported) {\n         additionalHeight += sizePerNewSetting;\n      }\n\n      if (this.config.clusterCapabilityData.isDataInTransitEncryptionSupported) {\n         additionalHeight += sizePerNewSetting;\n      }\n\n      if (additionalHeight > 0) {\n         VsanUiUtils.setModalDialogHeight(this.predefinedHeight + additionalHeight);\n      }\n   }\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {GeneralSettingsComponent} from \"@component/general-settings/general-settings.component\";\nimport {VsanGeneralConfigService} from \"@component/general-settings/vsan-general-config.service\";\nimport {RekeyIntervalComponent} from \"@component/general-settings/utils/rekey-interval.component\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n      CommonDirectiveModule,\n   ],\n   declarations: [\n      GeneralSettingsComponent,\n      RekeyIntervalComponent,\n   ],\n   exports: [\n      GeneralSettingsComponent,\n   ],\n   providers: [\n      VsanGeneralConfigService,\n   ],\n})\nexport class GeneralSettingsModule {\n}\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanClusterType} from \"@generated/vsan-cluster-type\";\n\nexport class VsanRdmaUtil {\n\n   static canEnableRdma(hostHardwareSupportRdma: boolean, isLargeScaleSupportEnabled: boolean,\n         configType: VsanClusterType, isRdmaStretchedClusterSupported: boolean): boolean {\n      return hostHardwareSupportRdma && this.isClusterTypeSupported(configType, isRdmaStretchedClusterSupported)\n            && !isLargeScaleSupportEnabled;\n   }\n\n   static getRdmaDisabledMessage(hostHardwareSupportRdma: boolean, isLargeScaleSupportEnabled: boolean,\n         configType: VsanClusterType, isRdmaStretchedClusterSupported: boolean): string {\n      let errorMessage: string = !hostHardwareSupportRdma\n            ? VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupportedByAnyHostsHardware\")\n            : \"\";\n\n      if (!this.isClusterTypeSupported(configType, isRdmaStretchedClusterSupported)) {\n         errorMessage = errorMessage.concat(\" \",\n               VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupportedStretchedCluster\")).trim();\n      }\n\n      if (isLargeScaleSupportEnabled) {\n         errorMessage = errorMessage.concat(\" \",\n               VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupportedLargeScaleCluster\")).trim();\n      }\n\n      return errorMessage;\n   }\n\n   private static isClusterTypeSupported(configType: VsanClusterType,\n         isRdmaStretchedClusterSupported: boolean): boolean {\n      return !this.isStretchedOrTwoNodeCluster(configType) || isRdmaStretchedClusterSupported;\n   }\n\n   private static isStretchedOrTwoNodeCluster(configType: VsanClusterType): boolean {\n      return configType === VsanClusterType.STRETCHED_CLUSTER\n            || configType === VsanClusterType.TWO_HOST_VSAN_CLUSTER;\n   }\n}\n","<!--Copyright 2016-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<span *ngIf=\"loading\" class=\"spinner spinner-lg central-spinner\"></span>\n<form *ngIf=\"!loading\" (change)=\"updateSpec($event)\">\n\n   <!-- Compute-only cluster option -->\n   <div *ngIf=\"displayComputeOnlyOption\" class=\"card compute-only-card\">\n      <div class=\"clr-row\">\n         <clr-toggle-container class=\"clr-col-sm-4 centered-content\">\n            <clr-toggle-wrapper>\n               <input type=\"checkbox\"\n                      clrToggle\n                      id=\"compute-only-cluster-checkbox\"\n                      (change)=\"switchComputeOnlyClusterMode()\"\n                      name=\"compute-only-cluster-checkbox\"/>\n               <label for=\"compute-only-cluster-checkbox\">\n                  {{\"configureVsan.settings.computeOnly.label\" | localized}}\n               </label>\n            </clr-toggle-wrapper>\n         </clr-toggle-container>\n         <div class=\"clr-col-sm-8\">\n            {{\"configureVsan.settings.computeOnly.description\" | localized}}\n         </div>\n      </div>\n   </div>\n\n   <!-- vSAN Max -->\n   <div class=\"section\" *ngIf=\"displayVsanMaxOption\">\n      <!-- TODO (tnojarova): fit and finish for labels/headers and marketing content-->\n      <clr-toggle-container>\n         <clr-toggle-wrapper>\n            <input type=\"checkbox\"\n                   clrToggle\n                   id=\"vsan-max-cluster-checkbox\"\n                   [disabled]=\"isComputeOnlyModeSelected()\"\n                   [(ngModel)]=\"vsanConfigSpec.isVsanMaxEnabled\"\n                   (change)=\"switchVsanMaxMode()\"\n                   name=\"vsan-max-cluster-checkbox\"/>\n            <label for=\"vsan-max-cluster-checkbox\">\n               {{\"vsan.cluster.configure.wizard.advancedOptions.vsan.max.label\" | localized}}\n            </label>\n         </clr-toggle-wrapper>\n      </clr-toggle-container>\n   </div>\n\n   <!-- Disk claiming section -->\n   <div class=\"section\" *ngIf=\"originalAutoClaimDisksEnabled\">\n      <clr-select-container class=\"horizontal-layout label-auto-size\">\n         <label *ngIf=\"showTitles\" class=\"clr-col-sm-3\">\n            {{'vsan.generalConfig.diskClaimPolicy' | localized}}\n         </label>\n         <select id=\"vsanDiskClaimPolicy\"\n                 class=\"clr-col-sm-9\"\n                 clrSelect\n                 [disabled]=\"isComputeOnlyModeSelected()\"\n                 [(ngModel)]=\"vsanConfigSpec.autoClaimDisks\"\n                 name=\"diskClaimPolicy\"\n                 ngDefaultControl>\n            <option [ngValue]=\"false\" selected>{{'vsan.generalConfig.diskClaimPolicy.manual' | localized}}</option>\n            <option [ngValue]=\"true\">{{'vsan.generalConfig.diskClaimPolicy.auto' | localized}}</option>\n         </select>\n         <clr-control-helper *ngIf=\"showTitles\">\n            {{'vsan.generalConfig.diskClaimPolicy.subtitle' | localized}}\n         </clr-control-helper>\n      </clr-select-container>\n      <vsan-validation [alertType]=\"'warning'\"\n                       [allowClose]=\"false\"\n                       [isSmall]=\"true\"\n                       [alert]=\"'vsan.generalConfig.diskClaimPolicy.autoWarning' | localized\">\n      </vsan-validation>\n   </div>\n\n   <!-- Space Efficiency & Encryption section -->\n   <div class=\"section\" *ngIf=\"isSpaceEfficiencySupported()\">\n      <!-- Space Efficiency -->\n      <div *ngIf=\"config.isSpaceEfficiencySupported\"\n           role=\"group\"\n           aria-labelledby=\"space-efficiency-label\">\n         <div class=\"settings-container\">\n            <label class=\"clr-control-label\" id=\"space-efficiency-label\">\n               {{\"configureVsan.settings.spaceEfficiency.label\" | localized}}\n            </label>\n            <clr-signpost id=\"space-efficiency-strategy-help\"\n                          [vsan-signpost-title]=\"'configureVsan.settings.spaceEfficiency.signpost.label' | localized\">\n               <clr-signpost-content *clrIfOpen clrPosition=\"right-bottom\">\n                  <span *ngIf=\"vsanConfigSpec.isVsanMaxEnabled\">\n                     {{\"vsan.generalConfig.spaceConfig.disabled.vsanMaxInfo\" | localized}}\n                  </span>\n                  <ul *ngIf=\"config.clusterCapabilityData.isCompressionOnlySupported && !vsanConfigSpec.isVsanMaxEnabled\">\n                     <li>\n                        {{\"configureVsan.settings.spaceEfficiency.compressionLabel\" | localized}}:\n                        {{\"configureVsan.settings.spaceEfficiency.compressionDescription\" | localized}}\n                     </li>\n                     <li>\n                        {{\"configureVsan.settings.spaceEfficiency.dedupAndCompressionLabel\" | localized}}:\n                        {{\"configureVsan.settings.spaceEfficiency.dedupAndCompressionDescription\" | localized}}\n                     </li>\n                  </ul>\n                  <ng-container *ngIf=\"!config.clusterCapabilityData.isCompressionOnlySupported\">\n                     {{\"configureVsan.settings.spaceEfficiency.dedupAndCompressionDescription\" | localized}}\n                  </ng-container>\n               </clr-signpost-content>\n            </clr-signpost>\n         </div>\n         <clr-radio-container>\n            <clr-radio-wrapper>\n               <input type=\"radio\"\n                      clrRadio\n                      name=\"space-efficiency-none\"\n                      value=\"{{SpaceEfficiencyConfig.NONE}}\"\n                      [disabled]=\"isSpaceEfficiencyDisabled()\"\n                      [(ngModel)]=\"vsanConfigSpec.spaceEfficiencyConfig\"/>\n               <label>{{\"configureVsan.settings.spaceEfficiency.noneLabel\" | localized}}</label>\n            </clr-radio-wrapper>\n            <clr-radio-wrapper *ngIf=\"config.clusterCapabilityData.isCompressionOnlySupported\">\n               <input type=\"radio\"\n                      clrRadio\n                      name=\"space-efficiency-compression\"\n                      value=\"{{SpaceEfficiencyConfig.COMPRESSION}}\"\n                      [disabled]=\"isSpaceEfficiencyDisabled()\"\n                      [(ngModel)]=\"vsanConfigSpec.spaceEfficiencyConfig\"/>\n               <label>{{\"configureVsan.settings.spaceEfficiency.compressionLabel\" | localized}}</label>\n            </clr-radio-wrapper>\n            <clr-radio-wrapper *ngIf=\"config.clusterCapabilityData.isDeduplicationAndCompressionSupported\">\n               <input type=\"radio\"\n                      clrRadio\n                      name=\"space-efficiency-deduplication-and-compression\"\n                      value=\"{{SpaceEfficiencyConfig.DEDUPLICATION_AND_COMPRESSION}}\"\n                      [disabled]=\"isSpaceEfficiencyDisabled()\"\n                      [(ngModel)]=\"vsanConfigSpec.spaceEfficiencyConfig\"/>\n               <label> {{\"configureVsan.settings.spaceEfficiency.dedupAndCompressionLabel\" | localized}}</label>\n            </clr-radio-wrapper>\n         </clr-radio-container>\n      </div>\n\n      <div class=\"sub-section\">\n         <label class=\"clr-control-label\">{{\"configureVsan.settings.encryption.label\" | localized}}</label>\n         <!-- Data-at-rest encryption -->\n         <ng-container *ngIf=\"config.hasEncryptionPermissions && config.clusterCapabilityData.isEncryptionSupported\">\n            <div class=\"settings-container\">\n               <clr-toggle-container>\n                  <clr-toggle-wrapper>\n                     <input type=\"checkbox\"\n                            clrToggle\n                            id=\"data-at-rest-encryption-checkbox\"\n                            [(ngModel)]=\"vsanConfigSpec.enableDataAtRestEncryption\"\n                            (change)=\"dfcRequiredSettingsChanged()\"\n                            [disabled]=\"isEncryptionDisabled()\"\n                            name=\"data-at-rest-encryption\"/>\n                     <label for=\"data-at-rest-encryption-checkbox\">\n                        {{\"configureVsan.settings.dataAtRestEncryptionLabel\" | localized}}\n                     </label>\n                  </clr-toggle-wrapper>\n               </clr-toggle-container>\n               <clr-signpost id=\"data-at-rest-encryption-help\"\n                             [vsan-signpost-title]=\"'configureVsan.settings.dataAtRestEncryptionSignpostLabel' | localized\">\n                  <clr-signpost-content *clrIfOpen clrPosition=\"bottom-middle\">\n                     {{\"configureVsan.settings.dataAtRestEncryptionDescription\" | localized}}\n                  </clr-signpost-content>\n               </clr-signpost>\n            </div>\n            <!-- Data-at-rest encryption options -->\n            <div class=\"toggle-sub-options\"\n                 role=\"group\"\n                 aria-labelledby=\"data-at-rest-encryption-checkbox\">\n               <!-- Wipe Disk encryption option -->\n               <div class=\"settings-container\">\n                  <clr-checkbox-container>\n                     <clr-checkbox-wrapper class=\"checkbox\">\n                        <input type=\"checkbox\"\n                               clrCheckbox\n                               id=\"wipeDiskCheckBox\"\n                               [(ngModel)]=\"vsanConfigSpec.eraseDisksBeforeUse\"\n                               [disabled]=\"wipeDiskDisabled\"\n                               name=\"wipeDisk\"/>\n                        <label for=\"wipeDiskCheckBox\">\n                           {{\"configureVsan.settings.wipeDisk\" | localized}}\n                        </label>\n                     </clr-checkbox-wrapper>\n                  </clr-checkbox-container>\n                  <clr-signpost id=\"wipe-disk-help\"\n                                [vsan-signpost-title]=\"'configureVsan.settings.wipeDiskSignpostLabel' | localized\">\n                     <clr-signpost-content *clrIfOpen clrPosition=\"bottom-middle\">\n                        <div>{{\"configureVsan.settings.wipeDiskDescription\" | localized}}</div>\n                     </clr-signpost-content>\n                  </clr-signpost>\n               </div>\n               <!-- KMIP Cluster encryption option -->\n               <clr-select-container class=\"horizontal-layout\">\n                  <label for=\"kmipClusters\">\n                     {{'vsan.generalConfig.encryption.keyCluster' | localized}}\n                  </label>\n                  <select id=\"kmipClusters\"\n                          clrSelect\n                          [(ngModel)]=\"vsanConfigSpec.kmipClusterId\"\n                          [disabled]=\"kmipClusterDisabled\"\n                          name=\"kmipCluster\">\n                     <option *ngFor=\"let kmip of config.availableKmipClusters\"\n                             value=\"{{kmip}}\"\n                             [selected]=\"kmip == vsanConfigSpec.kmipClusterId\">\n                        {{kmip}}\n                     </option>\n                  </select>\n               </clr-select-container>\n            </div>\n         </ng-container>\n\n         <!-- Data-in-transit encryption-->\n         <ng-container *ngIf=\"config.hasDataInTransitEncryptionPermissions\n               && config.clusterCapabilityData.isDataInTransitEncryptionSupported\">\n            <div class=\"settings-container\">\n               <clr-toggle-wrapper>\n                  <input type=\"checkbox\"\n                         clrToggle\n                         id=\"data-in-transit-encryption-checkbox\"\n                         [(ngModel)]=\"vsanConfigSpec.enableDataInTransitEncryption\"\n                         [disabled]=\"isDataInTransitDisabled()\"\n                         name=\"data-in-transit-encryption\"/>\n                  <label for=\"data-in-transit-encryption-checkbox\">\n                     {{\"configureVsan.settings.dataInTransitEncryptionLabel\" | localized}}\n                  </label>\n               </clr-toggle-wrapper>\n               <clr-signpost\n                     id=\"{{ditElementId}}\"\n                     [vsan-signpost-title]=\"'configureVsan.settings.dataInTransitEncryptionSignpostLabel' | localized\">\n                  <clr-signpost-content *clrIfOpen clrPosition=\"{{getDitSignpostPosition()}}\">\n                     <div *ngIf=\"getDitUnavailableMessage()\">{{getDitUnavailableMessage()}}</div>\n                     <div>{{\"configureVsan.settings.dataInTransitDescription\" | localized}}</div>\n                     <div *ngIf=\"showFileServiceOweDescription\">\n                        {{\"configureVsan.settings.fileService.owe.description\" | localized}}\n                     </div>\n                  </clr-signpost-content>\n               </clr-signpost>\n            </div>\n            <vsan-dit-rekey-interval\n                  class=\"toggle-sub-options\"\n                  [isDataInTransitEncryptionEnabled]=\"vsanConfigSpec.enableDataInTransitEncryption\"\n                  [(rekeyInterval)]=\"vsanConfigSpec.rekeyInterval\">\n            </vsan-dit-rekey-interval>\n         </ng-container>\n      </div>\n\n      <vsan-validation *ngIf=\"isDFCWarningVisible\"\n                       [alertType]=\"'warning'\"\n                       [allowClose]=\"false\"\n                       [isSmall]=\"true\"\n                       [alertsExpanded]=\"true\"\n                       [allowExpandCollapse]=\"false\"\n                       [alerts]=\"dfcWarnings\">\n      </vsan-validation>\n\n      <!-- Allow reduced redundancy checkbox -->\n      <div *ngIf=\"showAllowReducedRedundancyOption\">\n         <label class=\"clr-control-label\">{{\"configureVsan.settings.dataFormatOptions.label\" | localized}}</label>\n         <div class=\"settings-container\">\n            <clr-checkbox-container>\n               <clr-checkbox-wrapper>\n                  <input type=\"checkbox\"\n                         clrCheckbox\n                         id=\"allowReducedRedundancyCheckBox\"\n                         [(ngModel)]=\"vsanConfigSpec.allowReducedRedundancy\"\n                         [disabled]=\"allowReducedRedundancyDisabled || isComputeOnlyModeSelected()\"\n                         name=\"allowReducedRedundancy\"/>\n                  <label for=\"allowReducedRedundancyCheckBox\">\n                     {{\"configureVsan.settings.allowReducedRedundancyCheckboxLabel\" | localized}}\n                  </label>\n               </clr-checkbox-wrapper>\n            </clr-checkbox-container>\n            <clr-signpost id=\"allow-redundancy-help\"\n                          [vsan-signpost-title]=\"'configureVsan.settings.allowReducedRedundancySignpostLabel' | localized\">\n               <clr-signpost-content *clrIfOpen clrPosition=\"top-middle\">\n                  <div>{{\"configureVsan.settings.allowReducedRedundancyDescription\" | localized}}</div>\n               </clr-signpost-content>\n            </clr-signpost>\n         </div>\n      </div>\n   </div>\n\n   <!-- Large scale cluster support option -->\n   <!-- Show toggle setting for large cluster support (more than 32 hosts) if it is NOT supported natively -->\n   <div class=\"settings-container\" *ngIf=\"isManualLargeClusterSettingSupported\">\n      <clr-toggle-container>\n         <clr-toggle-wrapper>\n            <input type=\"checkbox\"\n                   clrToggle\n                   id=\"largeScaleClusterSupportCheckbox\"\n                   [disabled]=\"isComputeOnlyModeSelected()\"\n                   [(ngModel)]=\"vsanConfigSpec.advancedOptions.largeClusterSupportEnabled\"\n                   (change)=\"updateRdmaState()\"\n                   name=\"largeScaleClusterSupport\"/>\n            <label for=\"largeScaleClusterSupportCheckbox\">\n               {{\"configureVsan.settings.largeScaleClusterSupport.label\" | localized}}\n            </label>\n         </clr-toggle-wrapper>\n      </clr-toggle-container>\n      <clr-signpost id=\"large-scale-cluster-support-help\"\n                    [vsan-signpost-title]=\"'configureVsan.settings.largeScaleClusterSupport.signpost.label' | localized\">\n         <clr-signpost-content *clrIfOpen clrPosition=\"top-middle\">\n            <div>{{\"configureVsan.settings.largeScaleClusterSupport.signpostText\" | localized}}</div>\n         </clr-signpost-content>\n      </clr-signpost>\n   </div>\n\n   <!-- RDMA support option -->\n   <div class=\"settings-container\" *ngIf=\"showRdmaSupportOption\">\n      <clr-toggle-wrapper>\n         <input type=\"checkbox\"\n                clrToggle\n                id=\"rdma-support-checkbox\"\n                [disabled]=\"isComputeOnlyModeSelected() || !canEnableRdma\"\n                [(ngModel)]=\"vsanConfigSpec.enableRdma\"\n                name=\"rdma-support-checkbox\"/>\n         <label for=\"rdma-support-checkbox\">{{\"vsan.services.network.rdmaSupport.label\" | localized}}</label>\n      </clr-toggle-wrapper>\n      <clr-signpost id=\"rdma-support-help\"\n                    [vsan-signpost-title]=\"'vsan.services.network.rdmaSupport.signpost.label' | localized\">\n         <clr-signpost-content *clrIfOpen clrPosition=\"top-right\">\n            <div *ngIf=\"!canEnableRdma\" id=\"rdma-disabled-message\">{{rdmaDisabledMessage}}</div>\n            <div>{{\"vsan.services.network.rdmaSupport.signpost\" | localized}}</div>\n         </clr-signpost-content>\n      </clr-signpost>\n   </div>\n</form>\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanConfigSpec} from \"@generated/vsan-config-spec\";\n\nexport class VsanDitUtil {\n   static readonly DEFAULT_DIT_REKEY_INTERVAL: number = 24 * 60;\n\n   static getDitUnavailableMessage(vsanConfigSpec: VsanConfigSpec,\n         isClusterClientOrServer: boolean,\n         hasSharedWitnessHost: boolean,\n         isDitSharedWitnessInteroperabilitySupported: boolean): string {\n\n      if (vsanConfigSpec.autoClaimDisks) {\n         return VsanUiUtils.getString(\"vsan.dataInTransitEncryption.unavailable.autoClaimDisks\");\n      }\n\n      if (isClusterClientOrServer) {\n         return VsanUiUtils.getString(\"vsan.dataInTransitEncryption.unavailable.isServerOrClient\");\n      }\n\n      if (hasSharedWitnessHost && !isDitSharedWitnessInteroperabilitySupported) {\n         return VsanUiUtils.getString(\"vsan.dataInTransitEncryption.unavailable.hasSharedWitness\");\n      }\n\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ManagedObject} from \"@service/managed-object\";\nimport {TaskStatus} from \"@service/task-monitor-service\";\n\n/**\n * Holds info for a status change initiated by the current user on the vSAN cluster.\n * This data is stored in the Browser local storage, check <code>VsanStatusService</code>\n * and is accessible across iframes.\n */\nexport class VsanStatusChangeData {\n\n   /**\n    * A cluster managed object reference associated with this status change\n    */\n   clusterRef: ManagedObject;\n\n   /**\n    * A task moref, that is changing the status of the vSAN cluster.\n    */\n   taskRef: ManagedObject;\n\n   /**\n    * Enum value, holding information about what status change is happening with the vSAN cluster exactly.\n    */\n   changeType: StatusChangeType;\n\n   /**\n    * Upon completion of the task will hold either SUCCESS or ERROR, which could be used by subscribers.\n    */\n   taskStatus: TaskStatus;\n\n   constructor(taskRef: ManagedObject, status: StatusChangeType,\n         clusterRef: ManagedObject = ManagedObject.contextObject) {\n      this.taskRef = taskRef;\n      this.changeType = status;\n      this.clusterRef = clusterRef;\n   }\n}\n\n/**\n * Enum with codes, used to differentiate different vSAN configuration events like\n * vSAN enabled, cluster shutdown, etc.\n */\nexport enum StatusChangeType {\n   /**\n    * A cluster has had the vSAN service enabled.\n    */\n   VSAN_SERVICE_ENABLED,\n   /**\n    * A cluster has had the vSAN service disabled.\n    */\n   VSAN_SERVICE_DISABLED,\n   /**\n    * A vSAN cluster has been powered on.\n    */\n   VSAN_CLUSTER_POWER_ON,\n   /**\n    * A vSAN cluster has been shut down.\n    */\n   VSAN_CLUSTER_POWER_OFF,\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\n/*\n   Names to use in the Loader decorator\n */\nexport enum LoaderName {\n   ON_INIT = \"on-init\",\n   ON_CONFIRM = \"on-confirm\",\n   PERFORM_CHANGE = \"perform-change\",\n   REGISTER = \"register\",\n   UPGRADE = \"upgrade\",\n   MONITOR = \"monitor\",\n   DATA_EVACUATION = \"data-evacuation\",\n}\n","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nexport class VsanSignpostUtil {\n   // The signpost's arrow is 12px in Clarity 2.2.0\n   private static readonly ARROW_SIZE: number = 12;\n   // The modal left or right padding is 24px.\n   private static readonly MODAL_HORIZONTAL_PADDING: number = 24;\n   // The modal top padding and title height or the bottom padding and footer height is 72px.\n   private static readonly MODAL_VERTICAL_PADDING: number = 72;\n\n   private static readonly TOP: string = \"top\";\n   private static readonly LEFT: string = \"left\";\n   private static readonly RIGHT: string = \"right\";\n   private static readonly BOTTOM: string = \"bottom\";\n   private static readonly MIDDLE: string = \"middle\";\n\n   static getPosition(elementId: string, signpostWidth: number, signpostHeight: number,\n         isInModal: boolean = false): string {\n      const elementBox: DOMRect = document.getElementById(elementId).getBoundingClientRect();\n      const modalVerticalPadding: number = isInModal\n            ? VsanSignpostUtil.MODAL_VERTICAL_PADDING\n            : 0;\n      const verticalPosition: string = VsanSignpostUtil.getVerticalPosition(\n            elementBox, signpostHeight + VsanSignpostUtil.ARROW_SIZE + modalVerticalPadding);\n      const modalHorizontalPadding: number = isInModal\n            ? VsanSignpostUtil.MODAL_HORIZONTAL_PADDING\n            : 0;\n      const horizontalPosition: string = VsanSignpostUtil.getHorizontalPosition(\n            elementBox, signpostWidth + VsanSignpostUtil.ARROW_SIZE + modalHorizontalPadding);\n      return `${verticalPosition}-${horizontalPosition}`;\n   }\n\n   private static getVerticalPosition(elementBox: ClientRect, elementHeight: number): string {\n      const bodyBox: DOMRect = document.body.getBoundingClientRect();\n      if (elementBox.bottom + elementHeight < bodyBox.height) {\n         // There is enough space to fit the signpost below the trigger\n         return VsanSignpostUtil.BOTTOM;\n      } else if (elementBox.top - elementHeight > 0) {\n         return VsanSignpostUtil.TOP;\n      } else {\n         return VsanSignpostUtil.MIDDLE;\n      }\n   }\n\n   private static getHorizontalPosition(elementBox: ClientRect, elementWidth: number): string {\n      const bodyBox: DOMRect = document.body.getBoundingClientRect();\n      if (elementBox.right + elementWidth < bodyBox.width) {\n         // There is enough space to fit the signpost on the right side of the view\n         return VsanSignpostUtil.RIGHT;\n      } else if (elementBox.left - elementWidth > 0) {\n         return VsanSignpostUtil.LEFT;\n      } else {\n         return VsanSignpostUtil.MIDDLE;\n      }\n   }\n}"]}