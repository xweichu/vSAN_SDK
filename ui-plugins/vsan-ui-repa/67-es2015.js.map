{"version":3,"sources":["./src/app/vsan/common/util/validation/validator.ts","./src/app/vsan/services/historical-health-settings.html","./src/app/vsan/cluster/configure/action/edit-advanced-options.component.ts","./src/app/vsan/services/network-options.component.ts","./src/app/vsan/services/services.component.ts","./src/app/vsan/cluster/configure/action/generate-encryption-keys.component.ts","./src/app/vsan/services/network-options.html","./src/app/vsan/services/data-services.component.ts","./src/app/vsan/common/service/navigation/model/documentation-id.ts","./src/app/vsan/cluster/configure/action/edit-vsan-config.component.ts","./src/app/vsan/cluster/configure/action/edit-network.html","./src/app/vsan/cluster/configure/action/edit-vsan-managed-disk-claim.component.ts","./src/app/vsan/services/advanced-options.html","./src/app/vsan/cluster/configure/action/generate-encryption-keys.component.html","./src/app/vsan/services/advanced-options.component.ts","./src/app/vsan/services/support-insight.component.ts","./src/app/vsan/services/cluster-power-state-change-progress.component.ts","./src/app/vsan/cluster/configure/action/edit-vsan-managed-disk-claim.html","./src/app/vsan/cluster/configure/action/large-scale-cluster-support-change-prompt.component.ts","./src/app/vsan/services/capacity-management-settings.component.ts","./src/app/vsan/common/util/validation/validators-group.ts","./src/app/vsan/cluster/configure/action/edit-iscsi-target-config.component.ts","./src/app/vsan/cluster/configure/action/edit-network.component.ts","./src/app/vsan/services/iscsi-target-settings.component.ts","./src/app/vsan/services/vsan-max-settings.component.ts","./src/app/vsan/cluster/configure/action/edit-iscsi-target-config.html","./src/app/vsan/services/cluster-power-state-change-progress.html","./src/app/vsan/common/component/card/status-card.component.ts","./src/app/vsan/services/performance-service.html","./src/app/vsan/services/services.html","./src/app/vsan/cluster/configure/action/edit-vsan-config.html","./src/app/vsan/services/iscsi-target-settings.html","./src/app/vsan/services/file-service.html","./src/app/vsan/services/data-services.html","./src/app/vsan/common/util/validation/action-available-status.ts","./src/app/vsan/cluster/configure/action/large-scale-cluster-support-change-prompt.component.ts.LargeScaleClusterSupportChangePromptComponent.html","./src/app/vsan/services/vsan-max-settings.html","./src/app/vsan/services/performance-service.component.ts","./src/app/vsan/services/capacity-management-settings.html","./src/app/vsan/common/util/version.ts","./src/app/vsan/services/support-insight.html","./src/app/generated/encryption-rekey-spec.ts","./src/app/generated/vsan-iscsi-config-edit-spec.ts","./src/app/vsan/cluster/configure/action/edit-advanced-options.html","./src/app/vsan/services/historical-health-settings.component.ts","./src/app/vsan/common/component/card/status-card.html","./src/app/vsan/services/file-service.component.ts","./src/app/vsan/services/services.module.ts"],"names":[],"mappings":"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","file":"67-es2015.js","sourcesContent":["/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\n/**\n * Validator accept two functions as constructor parameters:\n * 1. errorCondition - predicate which is telling us when the validation must fail.\n * 2. errorMessage - function which build error message OR error message when the errorCondition return TRUE.\n */\nexport class Validator<TEntity> {\n   constructor(\n         private readonly errorCondition: (entity: TEntity) => boolean,\n         private readonly errorMessage?: string | ((entity: TEntity) => string),\n   ) { }\n\n   validate(instance: TEntity): boolean {\n      return !this.errorCondition(instance);\n   }\n\n   getErrorMessage(instance: TEntity): string {\n      return typeof this.errorMessage === \"function\"\n            ? this.errorMessage(instance)\n            : this.errorMessage;\n   }\n}","<!-- Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-status-card [label]=\"'vsan.services.historicalhealth.title' | localized\"\n                  [allowDragging]=\"true\"\n                  [status]=\"getServiceStatus()\"\n                  [(isExpanded)]=\"isExpanded\">\n   <span id=\"loading-historical-health\"\n         *ngIf=\"!config\"\n         class=\"spinner spinner-md central-spinner\">\n   </span>\n   <div id=\"historical-health-info\">\n      {{\"vsan.services.historicalhealth.info\" | localized}}\n   </div>\n   <div class=\"card-footer\">\n      <clr-tooltip>\n         <span clrTooltipTrigger [vsan-ignore-focus]=\"!unavailableMessage\">\n            <!-- wrapped in span, because disabled element could not be clrTooltipTrigger for the tooltip -->\n            <button id=\"edit-health-service-config\"\n                    class=\"btn btn-sm btn-link\"\n                    aria-describedby=\"edit-health-service-config-description\"\n                    [disabled]=\"unavailableMessage\"\n                    (click)=\"editHistoricalHealthSettings()\">\n                     {{VsanUiUtils.getActionTitleByServiceStatus(getServiceStatus())}}\n            </button>\n         </span>\n         <clr-tooltip-content *ngIf=\"unavailableMessage\"\n                              id=\"edit-health-service-config-description\"\n                              clrPosition=\"top-right\"\n                              clrSize=\"md\">\n            {{unavailableMessage}}\n         </clr-tooltip-content>\n      </clr-tooltip>\n   </div>\n</vsan-status-card>","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {AdvancedOptionsService} from \"@generated/advanced-options-service\";\nimport {AdvancedOptionsInfo} from \"@generated/advanced-options-info\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {VsanStretchedClusterService} from \"@generated/vsan-stretched-cluster-service\";\nimport {VsanRdmaService} from \"@generated/vsan-rdma-service\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {LoaderName} from \"@service/flow/loader-name\";\n\n@Component({\n   templateUrl: \"edit-advanced-options.html\",\n   styleUrls: [\"edit-advanced-options.scss\"],\n   selector: \"vsan-edit-advanced-options\",\n})\nexport class EditAdvancedOptionsComponent implements OnInit {\n\n   static readonly MIN_OBJECT_REPAIR_TIMER: number = 0;\n   static readonly MAX_OBJECT_REPAIR_TIMER: number = 4294967295;\n   static readonly MIN_REBALANCING_THRESHOLD: number = 20;\n   static readonly MAX_REBALANCING_THRESHOLD: number = 75;\n\n   private static readonly DIALOG_HEIGHT: number = 520;\n\n   private advancedOptionsInfo: AdvancedOptionsInfo;\n\n   private isFormInvalid: boolean;\n\n   @LoadingIndicator({\n      name: [\n         LoaderName.ON_INIT, LoaderName.PERFORM_CHANGE],\n   })\n   loading: boolean;\n\n   alertMessages: string[] = [];\n\n   clusterRef: ManagedObject;\n   clusterName: string;\n\n   isStretchedCluster: boolean;\n   isRdmaEnabled: boolean;\n\n   clusterCapabilityData: VsanCapabilityData;\n   vcCapabilityData: VsanCapabilityData;\n\n   advancedSettings: FormGroup;\n   // Constants to use for the form fields\n   readonly objectRepairTimer: string = \"objectRepairTimer\";\n   readonly isSiteReadLocalityEnabled: string = \"isSiteReadLocalityEnabled\";\n   readonly isCustomizedSwapObjectEnabled: string = \"isCustomizedSwapObjectEnabled\";\n   readonly largeClusterSupportEnabled: string = \"largeClusterSupportEnabled\";\n   readonly isGuestTrimUnmapEnabled: string = \"isGuestTrimUnmapEnabled\";\n   readonly isAutomaticRebalanceEnabled: string = \"isAutomaticRebalanceEnabled\";\n   readonly rebalancingThreshold: string = \"rebalancingThreshold\";\n\n   constructor(private advancedOptionsService: AdvancedOptionsService,\n         private stretchedClusterService: VsanStretchedClusterService,\n         private rdmaService: VsanRdmaService,\n         private formBuilder: FormBuilder) {\n      const formSettings: any = {};\n      formSettings[this.objectRepairTimer] = new FormControl(\"\", [\n         Validators.required,\n         Validators.min(EditAdvancedOptionsComponent.MIN_OBJECT_REPAIR_TIMER),\n         Validators.max(EditAdvancedOptionsComponent.MAX_OBJECT_REPAIR_TIMER),\n      ]);\n      formSettings[this.isSiteReadLocalityEnabled] = \"\";\n      formSettings[this.isCustomizedSwapObjectEnabled] = \"\";\n      formSettings[this.largeClusterSupportEnabled] = \"\";\n      formSettings[this.isGuestTrimUnmapEnabled] = \"\";\n      this.advancedSettings = this.formBuilder.group(formSettings);\n   }\n\n   @Loader({\n      name: LoaderName.ON_INIT,\n      srMessage: \"vsan.services.advancedOptions.title\",\n      srMessageType: SrMessageType.PAGE_TITLE,\n   })\n   async ngOnInit(): Promise<void> {\n      const context: any = VsanUiUtils.getModalContext();\n      this.clusterName = context.clusterName;\n      this.clusterRef = context.clusterRef;\n      this.vcCapabilityData = context.vcCapabilityData;\n      this.clusterCapabilityData = context.clusterCapabilityData;\n\n      if (this.vcCapabilityData && this.vcCapabilityData.isAutomaticRebalanceSupported) {\n         this.advancedSettings.addControl(this.isAutomaticRebalanceEnabled, new FormControl(\"\"));\n         this.advancedSettings.addControl(this.rebalancingThreshold,\n               new FormControl(\"\", [\n                  Validators.required,\n                  Validators.min(EditAdvancedOptionsComponent.MIN_REBALANCING_THRESHOLD),\n                  Validators.max(EditAdvancedOptionsComponent.MAX_REBALANCING_THRESHOLD),\n               ]));\n         VsanUiUtils.setModalDialogHeight(EditAdvancedOptionsComponent.DIALOG_HEIGHT + 80);\n      }\n\n      const results: any[] = await Promise.all([\n         this.advancedOptionsService.getAdvancedOptionsInfo(this.clusterRef),\n         this.stretchedClusterService.getIsVsanStretchedCluster(this.clusterRef),\n         this.rdmaService.isRdmaEnabled(this.clusterRef)]);\n\n      this.handleInfoResult(results[0]);\n      this.isStretchedCluster = results[1];\n      this.isRdmaEnabled = results[2];\n\n\n      /*\n      * setTimeout prevents modal to get too early formStatus property because of checkbox asynchronous disable\n      * */\n      this.advancedSettings.statusChanges.subscribe(value => setTimeout(() => {\n         this.isFormInvalid = value === \"INVALID\";\n      }));\n   }\n\n   private handleInfoResult = (result: AdvancedOptionsInfo) => {\n      this.advancedOptionsInfo = result;\n      this.advancedSettings.get(this.objectRepairTimer).setValue(result.objectRepairTimer);\n      this.advancedSettings.get(this.isSiteReadLocalityEnabled).setValue(result.isSiteReadLocalityEnabled);\n      this.advancedSettings.get(this.isCustomizedSwapObjectEnabled).setValue(result.isCustomizedSwapObjectEnabled);\n      this.advancedSettings.get(this.largeClusterSupportEnabled).setValue(result.largeClusterSupportEnabled);\n      this.advancedSettings.get(this.isGuestTrimUnmapEnabled).setValue(result.isGuestTrimUnmapEnabled);\n      this.advancedSettings.get(this.isAutomaticRebalanceEnabled).setValue(result.isAutomaticRebalanceEnabled);\n      this.advancedSettings.get(this.rebalancingThreshold).setValue(result.rebalancingThreshold);\n   };\n\n   @ErrorHandler({name: LoaderName.ON_INIT})\n   private handleRequestError(error: string): void {\n      this.alertMessages = [error];\n   }\n\n   get blockApplyButton(): boolean {\n      return this.loading || this.isFormInvalid;\n   }\n\n   get rebalancingThresholdEnabled(): boolean {\n      return this.advancedSettings.get(this.isAutomaticRebalanceEnabled).value === true;\n   }\n\n   get largeClusterSupportMessage(): string {\n      const messages: string[] = [];\n      if (this.isRdmaEnabled) {\n         messages.push(VsanUiUtils.getString(\"vsan.services.advancedOptions.largeClusterSupport.signpost.rdmaEnabled\"));\n      }\n\n      messages.push(VsanUiUtils.getString(\"vsan.services.advancedOptions.largeClusterSupport.signpost\"));\n\n      return messages.join(\" \");\n   }\n\n   private isConfigDifferent = (): boolean => {\n      const options: AdvancedOptionsInfo = this.getConfiguredAdvancedOptionsInfo();\n      return this.advancedOptionsInfo.objectRepairTimer !== options.objectRepairTimer ||\n            this.advancedOptionsInfo.isSiteReadLocalityEnabled !== options.isSiteReadLocalityEnabled ||\n            this.advancedOptionsInfo.isCustomizedSwapObjectEnabled !== options.isCustomizedSwapObjectEnabled ||\n            this.advancedOptionsInfo.isGuestTrimUnmapEnabled !== options.isGuestTrimUnmapEnabled ||\n            this.advancedOptionsInfo.isAutomaticRebalanceEnabled !== options.isAutomaticRebalanceEnabled ||\n            (this.advancedOptionsInfo.isAutomaticRebalanceEnabled &&\n                  this.advancedOptionsInfo.rebalancingThreshold !== options.rebalancingThreshold) ||\n            this.isLargeScaleClusterSupportDifferent();\n   };\n\n   private isLargeScaleClusterSupportDifferent = (): boolean => {\n      return this.advancedOptionsInfo.largeClusterSupportEnabled !==\n            this.getConfiguredAdvancedOptionsInfo().largeClusterSupportEnabled;\n   };\n\n   confirm = () => {\n      if (this.isConfigDifferent()) {\n         if (this.isLargeScaleClusterSupportDifferent()) {\n            new ModalBuilder(\"services/editAdvancedOptionsConfirmation\")\n                  .setSize(400, 230)\n                  .open(null)\n                  .then(result => {\n                     this.performChange();\n                  });\n         } else {\n            this.performChange();\n         }\n      } else {\n         this.close();\n      }\n   };\n\n   @Loader({name: LoaderName.PERFORM_CHANGE})\n   private async performChange(): Promise<void> {\n      const taskRef: ManagedObject = await this.advancedOptionsService\n            .configureAdvancedOptions(this.clusterRef, this.getConfiguredAdvancedOptionsInfo());\n      this.close(taskRef);\n   }\n\n   @ErrorHandler({name: LoaderName.PERFORM_CHANGE})\n   private handlePerformChangeError(): void {\n      this.alertMessages = [VsanUiUtils.getString(\"vsan.services.advancedOptions.edit.error\")];\n      this.close();\n   }\n\n   private close = (taskRef?: ManagedObject) => {\n      VsanUiUtils.closeModalDialog(taskRef);\n   };\n\n   private getConfiguredAdvancedOptionsInfo = (): AdvancedOptionsInfo => {\n      return AdvancedOptionsInfo.Factory.create(\n            this.advancedSettings.get(this.objectRepairTimer).value,\n            this.advancedSettings.get(this.isSiteReadLocalityEnabled).value,\n            this.advancedSettings.get(this.isCustomizedSwapObjectEnabled).value,\n            this.advancedSettings.get(this.largeClusterSupportEnabled).value,\n            this.advancedSettings.get(this.isGuestTrimUnmapEnabled).value,\n            this.advancedSettings.get(this.isAutomaticRebalanceEnabled).value,\n            this.advancedSettings.get(this.rebalancingThreshold).value,\n            this.advancedOptionsInfo.capacityReservationConfig);\n   };\n}\n","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {VsanConfigSpec} from \"@generated/vsan-config-spec\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {ServiceUtils} from \"./service.utils\";\nimport {PersistedProperty} from \"@service/browser-storage.service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {EditNetworkContext} from \"@navigation/context/edit-network-context\";\n\n@Component({\n   selector: \"vsan-network-options\",\n   templateUrl: \"network-options.html\",\n   styleUrls: [\"network-options.scss\"],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NetworkOptionsComponent {\n\n   @Input()\n   vsanConfig: VsanConfigSpec;\n\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Input()\n   clusterName: string;\n\n   @Input()\n   clusterCapabilityData: VsanCapabilityData;\n\n   @Input()\n   editClusterPermission: boolean;\n\n   @Input()\n   isStretchedCluster: boolean;\n\n   @Input()\n   isEmptyCluster: boolean;\n\n   @Output()\n   editTaskStarted: EventEmitter<ManagedObject> = new EventEmitter<ManagedObject>();\n\n   @PersistedProperty(\"vsan-network-settings-card-expanded-state\")\n   isExpanded: boolean;\n\n   static readonly RDMA_DIALOG_HEIGHT_UNSUPPORTED_HOSTS: number = 490;\n   private static readonly RDMA_DIALOG_HEIGHT: number = 300;\n   private static readonly RDMA_DIALOG_WIDTH: number = 670;\n\n   get rdmaStatusLabel(): string {\n      return ServiceUtils.geStatusLabel(this.vsanConfig.enableRdma, this.clusterCapabilityData.isRdmaSupported);\n   }\n\n   get unavailableMessage(): string {\n      if (!this.editClusterPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      } else if (this.clusterCapabilityData && !this.clusterCapabilityData.isRdmaSupported) {\n         return VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupported\");\n      } else if (this.isEmptyCluster) {\n         return VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.emptyCluster\");\n      } else if (this.vsanConfig.advancedOptions.largeClusterSupportEnabled && !this.vsanConfig.enableRdma) {\n         return VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupportedLargeScaleCluster\");\n      } else if (this.isStretchedCluster && !this.clusterCapabilityData.isRdmaStretchedClusterSupported\n            && !this.vsanConfig.enableRdma ) {\n         return VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupportedStretchedCluster\");\n      }\n\n      return \"\";\n   }\n\n   edit(): void {\n      const context: EditNetworkContext = {\n         clusterRef: this.clusterRef,\n         clusterName: this.clusterName,\n         isStretchedClusterUnsupported: this.isStretchedCluster && !this.clusterCapabilityData.isRdmaStretchedClusterSupported,\n         isLargeClusterSupportEnabled: this.vsanConfig.advancedOptions.largeClusterSupportEnabled,\n      };\n\n      new ModalBuilder(\"services/editNetwork\")\n            .setSize(NetworkOptionsComponent.RDMA_DIALOG_WIDTH, NetworkOptionsComponent.RDMA_DIALOG_HEIGHT)\n            .open(context)\n            .then((taskRef: ManagedObject) => {\n               this.editTaskStarted.emit(taskRef);\n            });\n   }\n}\n","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit, QueryList, ViewChildren} from \"@angular/core\";\nimport {CardName, CardView} from \"@component/drag-and-drop/card-view\";\nimport {CardContainer, DragCardPosition} from \"@component/drag-and-drop/drag-card-position\";\nimport {DraggableCardDirective} from \"@component/drag-and-drop/draggable-card.directive\";\nimport {GeneralConfigData} from \"@component/general-settings/general-config.data\";\nimport {VsanGeneralConfigService} from \"@component/general-settings/vsan-general-config.service\";\nimport {UnavailableViewSpec} from \"@component/unavailable-view/unavailable-view-spec\";\nimport {UpgradeData} from \"@component/upgrade/upgrade.data\";\nimport {UpgradeService} from \"@component/upgrade/upgrade.service\";\nimport {AlertActionLink} from \"@component/validation/alert-action-link\";\nimport {CeipService} from \"@generated/ceip-service\";\nimport {ClusterMode} from \"@generated/cluster-mode\";\nimport {ClusterPowerState} from \"@generated/cluster-power-state\";\nimport {CsdService} from \"@generated/csd-service\";\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {MountedRemoteDatastore} from \"@generated/mounted-remote-datastore\";\nimport {PerfStatsObjectInfo} from \"@generated/perf-stats-object-info\";\nimport {Privileges} from \"@generated/privileges\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {VsanConfigService} from \"@generated/vsan-config-service\";\nimport {VsanConfigSpec} from \"@generated/vsan-config-spec\";\nimport {VsanServiceData} from \"@generated/vsan-service-data\";\nimport {VsanServiceStatus} from \"@generated/vsan-service-status\";\nimport {VsanStretchedClusterService} from \"@generated/vsan-stretched-cluster-service\";\nimport {InlineViewContextKey} from \"@model/inline-view-context-key.data\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {PersistentStorageService} from \"@service/browser-storage.service\";\nimport {ClusterComputeResource} from \"@service/client/dataservice/data-service-property\";\nimport {DataServiceClient} from \"@service/client/dataservice/data-service.service\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {StatusChangeType, VsanStatusChangeData} from \"@service/status-updates/vsan-status-change.data\";\nimport {VsanStatusNotificationService} from \"@service/status-updates/vsan-status-notification.service\";\nimport {TaskMonitorService, TaskStatus} from \"@service/task-monitor-service\";\nimport {ClusterPowerStateUtils} from \"@util/cluster-power-state-utils\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanRoutes} from \"../../vsan-routes\";\nimport {QuickstartNotificationService} from \"../hci/status/quickstart-notification.service\";\n\n@Component({\n   templateUrl: \"services.html\",\n   styleUrls: [\"services.scss\"],\n   selector: \"vsan-services\",\n})\nexport class ServicesComponent implements OnInit {\n\n   ClusterPowerStateUtils: typeof ClusterPowerStateUtils = ClusterPowerStateUtils;\n\n   // Service view cards\n   readonly SUPPORT_INSIGHT_CARD: string = \"supportInsight\";\n   readonly PERFORMANCE_SERVICE_CARD: string = \"performanceService\";\n   readonly FILE_SERVICE_CARD: string = \"fileService\";\n   readonly ISCSI_SERVICE_CARD: string = \"iscsiTargetService\";\n   readonly DATA_SERVICES_CARD: string = \"dataServices\";\n   readonly CAPACITY_RESERVE_CARD: string = \"capacityReserve\";\n   readonly ADVANCED_OPTIONS_CARD: string = \"advancedOptions\";\n   readonly NETWORK_OPTIONS_CARD: string = \"networkOptions\";\n   readonly HISTORICAL_HEALTH_CARD: string = \"historicalHealth\";\n   readonly VSAN_MAX_CARD: string = \"vsanMax\";\n   readonly EMPTY_SPACE: string = \" \";\n   cardsView: CardView;\n\n   // Common config data\n   vsanConfig: VsanConfigSpec;\n   clusterRef: ManagedObject;\n   clusterName: string;\n   hostCount: number;\n   upgradeData: UpgradeData;\n   ceipEnabled: boolean;\n   hasMountedRemoteDatastore: boolean;\n   clusterPowerState: ClusterPowerState;\n\n   // Permissions\n   clusterPermissions: Map<string, boolean>;\n   vcPermissions: Map<string, boolean>;\n   isHAEnabled: boolean = false;\n   isDPMEnabled: boolean = false;\n   editClusterPermission: boolean = false;\n   globalSettingsPermissions: boolean = false;\n   configureStoragePermission: boolean = false;\n   clusterPowerPermission: boolean = false;\n   unavailableViewActionPermission: boolean = false;\n\n   // Capabilities\n   vcCapabilityData: VsanCapabilityData;\n   clusterCapabilityData: VsanCapabilityData;\n\n   // Page properties\n   unavailableViewSpec: UnavailableViewSpec;\n   errorMessages: string[] = [];\n   successMessages: string[] = [];\n   supportInsightError: string;\n   pageTitleFocused: any;\n\n   // The service cards are defined inside templates, so they can be dragged\n   @ViewChildren(DraggableCardDirective) serviceTemplates: QueryList<DraggableCardDirective>;\n\n   availableDomains: DomainOrHostData[];\n   isStretchedCluster: boolean;\n   perfSvsStatus: VsanServiceStatus;\n   perfSvcConfig: PerfStatsObjectInfo;\n   perfSvcEnabled: boolean;\n\n   showCards: boolean = false;\n   isVsanUpgradeVisible: boolean = false;\n\n   @LoadingIndicator()\n   isLoading: boolean;\n\n   private isEnableOrDisableVsanTaskFailed: boolean = false;\n   isClusterPowerStateChanged: boolean = false;\n\n   constructor(private dataService: DataServiceClient,\n         private vsanGeneralConfigService: VsanGeneralConfigService,\n         private ceipSvc: CeipService,\n         private taskService: TaskMonitorService,\n         private quickstartStatusNotification: QuickstartNotificationService,\n         private upgradeService: UpgradeService,\n         private configService: VsanConfigService,\n         private stretchedClusterService: VsanStretchedClusterService,\n         private csdService: CsdService,\n         private navigationService: NavigationService,\n         private storageService: PersistentStorageService,\n         private statusNotificationService: VsanStatusNotificationService) {\n      this.cardsView = new CardView(CardName.SERVICES_VIEW, this.getServicesViewCards);\n      this.statusNotificationService.subscribeForStatusChangeStarted(\n            [StatusChangeType.VSAN_CLUSTER_POWER_ON, StatusChangeType.VSAN_CLUSTER_POWER_OFF],\n            () => this.refresh());\n      // Use this to make the services page in loading state as soon as vSAN is enabled/disabled\n      this.statusNotificationService.subscribeForStatusChangeStarted(\n            [StatusChangeType.VSAN_SERVICE_ENABLED, StatusChangeType.VSAN_SERVICE_DISABLED],\n            () => this.awaitVsanStatusChange(),\n      );\n      // PR 2786238: Make sure we show the up to date configuration info after vSAN is fully enabled.\n      this.statusNotificationService.subscribeForStatusChangeCompleted(\n            [StatusChangeType.VSAN_SERVICE_ENABLED, StatusChangeType.VSAN_SERVICE_DISABLED],\n            (statusChangeData) => this.handleVsanStatusChangeComplete(statusChangeData));\n   }\n\n   ngOnInit(): void {\n      this.clusterRef = this.getClusterRefFromLocalStorage() || ManagedObject.contextObject;\n      this.refresh();\n   }\n\n   @Loader({srMessage: \"manage.vsan.general\"})\n   @RefreshHandler\n   async refresh(): Promise<void> {\n      this.reset();\n      try {\n         await Promise.all([\n            this.queryVsanGeneralConfig(),\n            this.queryDataserviceProperties(),\n         ]);\n         if (!this.vsanConfig) {\n            this.errorMessages = [VsanUiUtils.getString(\"vsan.services.configuration.not.available\")];\n            return;\n         }\n\n         if (!this.isComputeOnlyCluster()) {\n            await Promise.all([\n               this.fetchPerfServiceStatus(),\n               this.fetchCeipServiceEnabled(),\n               this.fetchStretchedClusterData(),\n               this.fetchIsStretchedCluster(),\n            ]);\n         } else {\n            const datastores: MountedRemoteDatastore[] = await this.csdService.getMountedDatastores(this.clusterRef);\n            this.hasMountedRemoteDatastore = datastores.length > 0;\n         }\n\n         if (this.isClusterPowerStateChanged) {\n            this.notifyClusterPowerStateChanged();\n         }\n\n         this.showCards = !this.isUnavailable();\n         if (!this.showCards) {\n            this.prepareDisabledSpec();\n         } else if (!this.isComputeOnlyCluster()) {\n            this.fetchDisksUpgradeData();\n         }\n         // Focus page title via directive var. Object is passed to trigger model change on page refresh.\n         this.pageTitleFocused = {};\n      } catch (e) {\n         this.errorMessages = [e];\n      } finally {\n         this.registerQuickstartNotification();\n      }\n   }\n\n   private isUnavailable(): boolean {\n      return ClusterPowerStateUtils.isClusterPoweredOff(this.clusterPowerState)\n            || !this.vsanConfig.isEnabled\n            || this.isComputeOnlyCluster();\n   }\n\n   vsanUpgradeComplete(): void {\n      this.isVsanUpgradeVisible = true;\n      this.fetchDisksUpgradeData();\n   }\n\n   private getClusterRefFromLocalStorage(): ManagedObject {\n      return this.storageService.pop(InlineViewContextKey.SERVICES_CONTEXT_KEY);\n   }\n\n   /**\n    * Reset everything except vsanConfig due to PR 2710611. The refresh method could be excecuted by multiple trigger at\n    * the same time. If this happens, and we reset this.vsanConfig to null, the check at line 137 throws exception.\n    */\n   private reset(): void {\n      this.errorMessages = [];\n      this.successMessages = [];\n      this.unavailableViewSpec = null;\n      this.upgradeData = null;\n      this.ceipEnabled = true; // Use true to hide the card, while the data is loading.\n      this.isDPMEnabled = false;\n      this.isHAEnabled = false;\n   }\n\n   /**\n    * Using @Loader annotation on the \"processVsanStatusChange\" method makes the page change its loading state constantly\n    * as it completes multiple times, before the status gets changed. To fix this issue we need to move the\n    * @Loader annotation here, so that only when all promises of \"processVsanStatusChange\" get resolved,\n    * the loading indicator will be set to false.\n    */\n   @Loader()\n   private async awaitVsanStatusChange(): Promise<void> {\n      await this.processVsanStatusChange();\n   }\n\n   private async processVsanStatusChange(): Promise<void> {\n      const originalIsVsanEnabled: boolean = this.vsanConfig.isEnabled;\n      const originalIsComputeOnlyCluster: boolean = this.isComputeOnlyCluster();\n      // The task ended with an error, so the status will not change, stop waiting and resolve the promise.\n      if (this.isEnableOrDisableVsanTaskFailed) {\n         this.isEnableOrDisableVsanTaskFailed = false;\n         return Promise.resolve();\n      }\n\n      try {\n         await this.queryVsanGeneralConfig();\n         if (originalIsComputeOnlyCluster !== this.isComputeOnlyCluster() // vSAN HCI compute only was enabled or disabled\n               || originalIsVsanEnabled !== this.vsanConfig.isEnabled) { // vSAN was enabled/disabled\n            VsanUiUtils.globalRefresh();\n            return Promise.resolve();\n         }\n      } catch (e) {\n         this.errorMessages.push(e);\n         return Promise.resolve();\n      }\n\n      return new Promise((resolve) => {\n         setTimeout(() => {\n            resolve(this.processVsanStatusChange());\n         }, 1000);\n      });\n   }\n\n   async queryVsanGeneralConfig(): Promise<void> {\n      try {\n         const generalConfig: GeneralConfigData = await this.vsanGeneralConfigService.getVsanGeneralConfigData(\n               this.clusterRef);\n         this.vsanConfig = generalConfig.cloneVsanConfigSpec();\n         this.vcCapabilityData = generalConfig.vcCapabilityData;\n         this.clusterCapabilityData = generalConfig.clusterCapabilityData;\n         this.clusterPowerState = generalConfig.clusterPowerState;\n         this.clusterPermissions = generalConfig.clusterPermissions;\n         this.vcPermissions = generalConfig.vcPermissions;\n         this.editClusterPermission = this.clusterPermissions.get(Privileges.EDIT_CLUSTER());\n         this.configureStoragePermission = this.clusterPermissions.get(Privileges.CONFIG_STORAGE());\n         this.clusterPowerPermission = this.clusterPermissions.get(Privileges.SHUTDOWN_CLUSTER());\n         this.globalSettingsPermissions = this.vcPermissions.get(Privileges.GLOBAL_SETTINGS());\n      } catch (e) {\n         this.errorMessages.push(e);\n      }\n   }\n\n   private async queryDataserviceProperties(): Promise<void> {\n      try {\n         const dsProps: Map<string, any> = await this.dataService.getProperties([\n            ClusterComputeResource.name,\n            ClusterComputeResource.host.length,\n            ClusterComputeResource.configurationEx.dasConfig.enabled,\n            ClusterComputeResource.configurationEx.dpmConfigInfo.enabled,\n         ], this.clusterRef);\n         this.clusterName = dsProps.get(ClusterComputeResource.name);\n         this.hostCount = dsProps.get(ClusterComputeResource.host.length);\n         this.isHAEnabled = dsProps.get(ClusterComputeResource.configurationEx.dasConfig.enabled);\n         this.isDPMEnabled = dsProps.get(ClusterComputeResource.configurationEx.dpmConfigInfo.enabled);\n      } catch (e) {\n         this.errorMessages.push(e);\n      }\n   }\n\n   isComputeOnlyCluster(): boolean {\n      return this.vsanConfig?.clusterMode === ClusterMode.COMPUTE;\n   }\n\n   private prepareDisabledSpec(): void {\n      this.unavailableViewActionPermission = this.editClusterPermission;\n      if (ClusterPowerStateUtils.isClusterPoweredOff(this.clusterPowerState)) {\n         this.unavailableViewSpec = UnavailableViewSpec.SERVICES_VIEW_CLUSTER_SHUT_DOWN;\n         this.unavailableViewActionPermission = this.unavailableViewActionPermission && this.clusterPowerPermission;\n      } else if (this.isComputeOnlyCluster()) {\n         if (this.isClusterChangingPowerState) {\n            // If power-off/on is in progress, do not show the compute only view\n            return;\n         }\n         if (this.hostCount === 0) {\n            this.unavailableViewSpec = UnavailableViewSpec.SERVICES_VIEW_COMPUTE_ONLY_CLUSTER_NO_HOSTS;\n         } else if (this.hasMountedRemoteDatastore) {\n            this.unavailableViewSpec = UnavailableViewSpec.SERVICES_VIEW_COMPUTE_ONLY_CLUSTER;\n         } else {\n            this.unavailableViewSpec =\n                  UnavailableViewSpec.SERVICES_VIEW_COMPUTE_ONLY_CLUSTER_NO_MOUNTED_REMOTE_DATASTORE;\n         }\n      } else if (this.hostCount > 0) {\n         this.unavailableViewSpec = UnavailableViewSpec.VSAN_DISABLED;\n      } else {\n         this.unavailableViewSpec = UnavailableViewSpec.VSAN_DISABLED_NO_HOSTS;\n      }\n   }\n\n   private registerQuickstartNotification(): void {\n      try {\n         this.quickstartStatusNotification.triggerRecalculate.next({\n            isVsanEnabled: !!this.vsanConfig?.isEnabled,\n            clusterData: null,\n            clusterRef: this.clusterRef,\n         });\n      } catch (e) {\n         this.errorMessages.push(e);\n      }\n   }\n\n   fetchPrecheckUpgradeData(): void {\n      this.upgradeService.getUpgradeStatus(this.clusterRef)\n            .then(upgradeStatus => {\n               // Create a new instance to trigger the upgrade component's refresh\n               this.upgradeData = this.upgradeData.getNewInstance(upgradeStatus);\n            })\n            .catch(e => this.errorMessages.push(e));\n   }\n\n   fetchDisksUpgradeData(): void {\n      this.upgradeData = null;\n      this.upgradeService.getUpgradeData(this.clusterRef)\n            .then(data => this.upgradeData = data)\n            .catch(e => this.errorMessages.push(e));\n   }\n\n   private async fetchPerfServiceStatus(): Promise<void> {\n      try {\n         const result: VsanServiceData = await this.configService.getPerformanceStatus(this.clusterRef);\n         this.perfSvsStatus = result.status;\n         this.perfSvcConfig = result.details as PerfStatsObjectInfo;\n         this.perfSvcEnabled = result.status === VsanServiceStatus.ENABLED;\n      } catch (e) {\n         this.errorMessages.push(e);\n      }\n   }\n\n   private fetchCeipServiceEnabled(): Promise<any> {\n      return this.ceipSvc.getCeipServiceEnabled(this.clusterRef)\n            .then(result => this.ceipEnabled = result)\n            .catch(e => this.supportInsightError = e);\n   }\n\n   private fetchStretchedClusterData(): Promise<any> {\n      return this.stretchedClusterService.getAvailableDomains(this.clusterRef)\n            .then(result => this.availableDomains = result)\n            .catch(e => this.errorMessages.push(e));\n   }\n\n   private fetchIsStretchedCluster(): Promise<any> {\n      return this.stretchedClusterService.getIsVsanStretchedCluster(this.clusterRef)\n            .then(result => this.isStretchedCluster = result)\n            .catch(e => this.errorMessages.push(e));\n   }\n\n   shutdownCluster(): void {\n      new ModalBuilder(VsanRoutes.CLUSTER_POWER_OFF_WIZARD).setSize(950, 750).open();\n   }\n\n   turnOffVsan(): void {\n      new ModalBuilder(VsanRoutes.TURN_OFF_VSAN)\n            .setSize(600, 280)\n            .open({\n               clusterName: this.clusterName,\n               isComputeOnlyCluster: this.isComputeOnlyCluster(),\n            });\n   }\n\n   awaitThenInvoke = (taskRef: ManagedObject, callback: () => void) => {\n      if (!taskRef) {\n         callback();\n      } else {\n         this.taskService.getAwaitResult(taskRef)\n               .then(() => callback.bind(this)())\n               .catch(e => this.errorMessages.push(e));\n      }\n   };\n\n   get hasHaDpmWarnings(): boolean {\n      return !this.vsanConfig.isEnabled\n            && (!this.clusterPowerState || ClusterPowerStateUtils.isClusterPoweredOn(this.clusterPowerState))\n            && !this.isComputeOnlyCluster()\n            && this.haDpmWarningMessages.length > 0;\n   }\n\n   get haDpmWarningMessages(): string[] {\n      const warningMessages: string[] = [];\n      if (this.isDPMEnabled) {\n         warningMessages.push(VsanUiUtils.getString(\"vsan.services.unableToTurnOnVsan.reason.enabledDPM\")\n               .concat(this.EMPTY_SPACE,\n                     VsanUiUtils.getString(\"vsan.services.unableToTurnOnVsan.reason.enabledDPM.suggestedAction\")));\n      }\n      if (this.isHAEnabled) {\n         warningMessages.push(VsanUiUtils.getString(\"vsan.services.unableToTurnOnVsan.reason.enabledHA\")\n               .concat(this.EMPTY_SPACE,\n                     VsanUiUtils.getString(\"vsan.services.unableToTurnOnVsan.reason.enabledHA.suggestedAction\")));\n      }\n\n      return warningMessages;\n   }\n\n   getHaDpmActionLinks(): AlertActionLink[] {\n      const actionLinks: AlertActionLink[] = [];\n      if (this.isDPMEnabled) {\n         actionLinks.push({\n            label: VsanUiUtils.getString(\"vsan.services.unableToTurnOnVsan.actionLink.goToDRS\"),\n            action: () => this.navigationService.navigateTo(PlatformExtension.CLUSTER_DRS, this.clusterRef),\n         });\n      }\n      if (this.isHAEnabled) {\n         actionLinks.push({\n            label: VsanUiUtils.getString(\"vsan.services.unableToTurnOnVsan.actionLink.goToHA\"),\n            action: () => this.navigationService.navigateTo(PlatformExtension.CLUSTER_HA, this.clusterRef),\n         });\n      }\n\n      return actionLinks;\n   }\n\n   get isTurnOffVsanEnabled(): boolean {\n      return this.editClusterPermission\n            && (this.isComputeOnlyCluster() || (!this.isDPMEnabled && !this.isHAEnabled));\n   }\n\n   getTurnOffVsanDisabledReason(): string {\n      if (!this.editClusterPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      } else if (!this.isComputeOnlyCluster()) {\n         if (this.isHAEnabled && this.isDPMEnabled) {\n            return VsanUiUtils.getString(\"vsan.services.unableToTurnOffVsan.reason.enabledHAandDPM\");\n         } else if (this.isHAEnabled) {\n            return VsanUiUtils.getString(\"vsan.services.unableToTurnOffVsan.reason.enabledHA\");\n         } else if (this.isDPMEnabled) {\n            return VsanUiUtils.getString(\"vsan.services.unableToTurnOffVsan.reason.enabledDPM\");\n         }\n      }\n\n      return null;\n   }\n\n   get isShutdownActionAvailable(): boolean {\n      return ClusterPowerStateUtils.isClusterPoweredOn(this.clusterPowerState)\n            && this.hostCount > 0;\n   }\n\n   get isShutdownActionEnabled(): boolean {\n      return this.editClusterPermission\n            && this.clusterPowerPermission\n            && !this.isComputeOnlyCluster();\n   }\n\n   getShutdownDisabledReason(): string {\n      if (!this.editClusterPermission || !this.clusterPowerPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      } else if (this.isComputeOnlyCluster()) {\n         return VsanUiUtils.getString(\"vsan.cluster.shutdown.wizard.computeOnly.disabled.reason\");\n      }\n   }\n\n   get isClusterChangingPowerState(): boolean {\n      return ClusterPowerStateUtils.isClusterChangingPowerState(this.clusterPowerState);\n   }\n\n   private getServicesViewCards = (): Map<string, DragCardPosition> => {\n      const result: Map<string, DragCardPosition> = new Map<string, DragCardPosition>();\n      result.set(this.SUPPORT_INSIGHT_CARD, new DragCardPosition(CardContainer.LEFT, 0));\n      result.set(this.PERFORMANCE_SERVICE_CARD, new DragCardPosition(CardContainer.LEFT, 1));\n      result.set(this.FILE_SERVICE_CARD, new DragCardPosition(CardContainer.LEFT, 2));\n      result.set(this.NETWORK_OPTIONS_CARD, new DragCardPosition(CardContainer.LEFT, 3));\n      result.set(this.HISTORICAL_HEALTH_CARD, new DragCardPosition(CardContainer.LEFT, 4));\n      result.set(this.ISCSI_SERVICE_CARD, new DragCardPosition(CardContainer.RIGHT, 0));\n      result.set(this.DATA_SERVICES_CARD, new DragCardPosition(CardContainer.RIGHT, 1));\n      result.set(this.CAPACITY_RESERVE_CARD, new DragCardPosition(CardContainer.RIGHT, 2));\n      result.set(this.ADVANCED_OPTIONS_CARD, new DragCardPosition(CardContainer.RIGHT, 3));\n      return result;\n   };\n\n   clusterPowerStateChanged(): void {\n      this.isClusterPowerStateChanged = true;\n      VsanUiUtils.globalRefresh();\n   }\n\n   private notifyClusterPowerStateChanged(): void {\n      this.isClusterPowerStateChanged = false;\n      if (ClusterPowerStateUtils.isClusterPoweredOn(this.clusterPowerState)) {\n         this.successMessages.push(VsanUiUtils.getString(\"vsan.cluster.powerOn.message.success\"));\n      }\n   }\n\n   private handleVsanStatusChangeComplete(statusChangeData: VsanStatusChangeData): void {\n      this.isEnableOrDisableVsanTaskFailed = statusChangeData.taskStatus === TaskStatus.ERROR;\n      this.refresh();\n   }\n}\n","/* Copyright 2017-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {EncryptionRekeySpec} from \"@generated/encryption-rekey-spec\";\nimport {EncryptionMutationProvider} from \"@generated/encryption-mutation-provider\";\nimport {Privileges} from \"@generated/privileges\";\n\n@Component({\n   templateUrl: \"generate-encryption-keys.component.html\",\n   styleUrls: [\"generate-encryption-keys.component.scss\"],\n   selector: \"vsan-generate-encryption-keys\",\n})\nexport class GenerateEncryptionKeysComponent implements OnInit {\n\n   reEncryptData: boolean = false;\n   allowReducedRedundancy: boolean = false;\n   eraseDisksBeforeUse: boolean;\n   editClusterPermission: boolean = false;\n   manageKeysPermission: boolean = false;\n\n   private clusterRef: ManagedObject;\n\n   constructor(private encryptionProvider: EncryptionMutationProvider) {}\n\n   ngOnInit() {\n      this.clusterRef = ManagedObject.contextObject;\n      const context: any = VsanUiUtils.getModalContext();\n      this.eraseDisksBeforeUse = context != null ? context.eraseDisksBeforeUse : false;\n      const permissions: Map<string, boolean> = context.permissions;\n      this.editClusterPermission = permissions.get(Privileges.EDIT_CLUSTER());\n      this.manageKeysPermission = permissions.get(Privileges.MANAGE_KEYS());\n   }\n\n   ok(): void {\n      const spec: EncryptionRekeySpec =\n            EncryptionRekeySpec.Factory.create(this.reEncryptData, this.allowReducedRedundancy);\n      this.encryptionProvider.rekeyEncryptedCluster(this.clusterRef, spec).then(() => {\n         VsanUiUtils.closeModalDialog();\n      });\n   }\n\n   close(): void {\n      VsanUiUtils.closeModalDialog();\n   }\n\n   get rekeyAllowed(): boolean {\n      return this.editClusterPermission && this.manageKeysPermission;\n   }\n\n   get validationErrors(): string[] {\n      const errors: string[] = [];\n      if (this.reEncryptData) {\n         errors.push(VsanUiUtils.getString(\"vsan.encryption.rekey.dialog.reEncrypt.warning\"));\n         if (this.eraseDisksBeforeUse) {\n            errors.push(VsanUiUtils.getString(\"vsan.encryption.rekey.dialog.reEncrypt.eraseDisksBeforeUse.warning\"));\n         }\n      }\n      return errors;\n   }\n}","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-status-card\n      [label]=\"'vsan.services.network.title.label' | localized\"\n      [allowDragging]=\"true\"\n      [(isExpanded)]=\"isExpanded\">\n   <span id=\"loading-network-options\"\n         *ngIf=\"!clusterCapabilityData\"\n         class=\"spinner spinner-md central-spinner\">\n   </span>\n   <div *ngIf=\"clusterCapabilityData && vsanConfig\" class=\"column-flex-container\">\n      <div class=\"clr-row\" id=\"rdma-enabled\">\n         <label class=\"clr-col-5\">\n            {{\"vsan.services.network.rdmaSupport.label\" | localized}}\n         </label>\n         <div class=\"clr-col-7\">\n            {{rdmaStatusLabel}}\n         </div>\n      </div>\n   </div>\n   <div class=\"card-footer\">\n      <clr-tooltip>\n         <span clrTooltipTrigger [vsan-ignore-focus]=\"!unavailableMessage\">\n            <!-- wrapped in span, because disabled element could not be clrTooltipTrigger for the tooltip -->\n            <button id=\"edit-network-setting-button\"\n                    class=\"btn btn-sm btn-link\"\n                    aria-describedby=\"edit-rdma-description\"\n                    [disabled]=\"unavailableMessage\"\n                    (click)=\"edit()\">\n                     {{\"vsan.generalConfig.button.edit\" | localized}}\n            </button>\n         </span>\n         <clr-tooltip-content *ngIf=\"unavailableMessage\"\n                              id=\"edit-rdma-description\"\n                              clrPosition=\"top-right\"\n                              clrSize=\"md\">\n            {{unavailableMessage}}\n         </clr-tooltip-content>\n      </clr-tooltip>\n   </div>\n</vsan-status-card>","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {VsanConfigSpec} from \"@generated/vsan-config-spec\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {SpaceEfficiencyService} from \"@service/space-efficiency-service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {Privileges} from \"@generated/privileges\";\nimport {ServiceUtils} from \"./service.utils\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\nimport {PersistedProperty} from \"@service/browser-storage.service\";\n\n@Component({\n   selector: \"vsan-data-services\",\n   templateUrl: \"data-services.html\",\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DataServicesComponent implements OnInit {\n\n   ServiceUtils: typeof ServiceUtils = ServiceUtils;\n   formatMinutesInDaysOrHours: (minutes: number) => string = VsanDateTimeUtils.formatMinutes;\n\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Input()\n   clusterName: string;\n\n   @Input()\n   vsanConfig: VsanConfigSpec;\n\n   @Input()\n   clusterCapabilityData: VsanCapabilityData;\n\n   @Input()\n   permissions: Map<string, boolean>;\n\n   @Output()\n   editTaskStarted: EventEmitter<ManagedObject> = new EventEmitter<ManagedObject>();\n\n   @PersistedProperty(\"vsan-data-services-card-expanded-state\", true)\n   isExpanded: boolean;\n\n   private editClusterPermission: boolean;\n   private manageKeysPermission: boolean;\n   private shallowRekeyPermission: boolean;\n\n   constructor(private spaceEfficiencyService: SpaceEfficiencyService) {\n   }\n\n   ngOnInit(): void {\n      this.editClusterPermission = this.permissions.get(Privileges.EDIT_CLUSTER());\n      this.manageKeysPermission = this.permissions.get(Privileges.MANAGE_KEYS());\n      this.shallowRekeyPermission = this.permissions.get(Privileges.SHALLOW_REKEY());\n   }\n\n   get editDisabledTitle(): string {\n      if (!this.editClusterPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      } else if (!this.spaceEfficiencyService.isSpaceEfficiencySupported(this.clusterCapabilityData)) {\n         return VsanUiUtils.getString(\"vsan.services.not.supported\");\n      }\n      return \"\";\n   }\n\n   get generateEncryptionKeysTitle(): string {\n      if (!(this.editClusterPermission && this.manageKeysPermission || this.shallowRekeyPermission)) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      } else if (!this.vsanConfig.enableDataAtRestEncryption) {\n         return VsanUiUtils.getString(\"vsan.common.service.disabled\");\n      }\n      return \"\";\n   }\n\n   edit(): void {\n      const eventTarget: EventTarget = event.target;\n      const height: number = this.vsanConfig.autoClaimDisks ? 650 : 550;\n      new ModalBuilder(\"services/editGeneralConfig\")\n            .setSize(700, height)\n            .setEventTarget(eventTarget)\n            .open({\n               clusterId: ManagedObject.uid(this.clusterRef),\n               clusterName: this.clusterName,\n               height: height,\n            })\n            .then(taskRef => this.editTaskStarted.emit(taskRef));\n   }\n\n   generateEncryptionKeys(): void {\n      const permissions: Map<string, boolean> = new Map([\n         [Privileges.EDIT_CLUSTER(), this.editClusterPermission],\n         [Privileges.MANAGE_KEYS(), this.manageKeysPermission],\n      ]);\n      new ModalBuilder(\"services/generateEncryptionKeys\")\n            .setSize(700, 315)\n            .setTitle(VsanUiUtils.getString(\"vsan.encryption.rekey.dialog.title\"))\n            .open({\n               eraseDisksBeforeUse: this.vsanConfig.eraseDisksBeforeUse,\n               permissions: permissions,\n            });\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n/**\n * IDs used in external navigation to official documentation\n */\nexport enum DocumentationId {\n   RDMA_DOCUMENTATION = \"GUID-48154235-C557-4074-8BEB-AB9A7BD84A92\",\n   IO_INSIGHT_DOCUMENTATION = \"GUID-3ABCB8EA-1FC7-40A4-B834-C9FEDF02A902\",\n   ENFORCE_RESERVATION_DOCUMENTATION = \"GUID-CD510EAE-1A9F-45D2-BB66-E893C8AAF20A\",\n}","/* Copyright 2016-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {Logger} from \"@util/logger\";\nimport {GeneralConfigData} from \"@component/general-settings/general-config.data\";\nimport {VsanGeneralConfigService} from \"@component/general-settings/vsan-general-config.service\";\nimport {ConfigureVsanClusterMutationProvider} from \"@generated/configure-vsan-cluster-mutation-provider\";\nimport {VsanConfigSpec} from \"@generated/vsan-config-spec\";\nimport {VsanFileServiceConfigService} from \"@generated/vsan-file-service-config-service\";\nimport {FileServiceFeature} from \"@generated/file-service-feature\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {LoaderName} from \"@service/flow/loader-name\";\n\n@Component({\n   templateUrl: \"edit-vsan-config.html\",\n   styleUrls: [\"edit-vsan-config.scss\"],\n   selector: \"vsan-edit-config\",\n})\nexport class EditVsanConfigComponent implements OnInit {\n   contextObjectName: string;\n   contextHeight: number;\n   config: GeneralConfigData;\n   vsanConfigSpec: VsanConfigSpec;\n   validationErrors: string[] = [];\n\n   @LoadingIndicator({name: [LoaderName.ON_INIT, LoaderName.ON_CONFIRM]})\n   loading: boolean;\n   hasInitializationError: boolean;\n   showFileServiceOweDescription: boolean;\n   clusterRef: ManagedObject;\n\n   /**\n    * Inject dataService to make calls to DataService\n    */\n   constructor(private vsanConfigService: VsanGeneralConfigService,\n         private configureClusterMutationProvider: ConfigureVsanClusterMutationProvider,\n         private fileServiceConfigService: VsanFileServiceConfigService) {\n   }\n\n   /**\n    * Init the component's base data and fetch vsan config properties via dataService\n    */\n   @Loader({\n      name: LoaderName.ON_INIT,\n      srMessage: \"vsan.generalConfigDialog.title\",\n      srMessageType: SrMessageType.PAGE_TITLE,\n   })\n   async ngOnInit(): Promise<void> {\n      // Get the context object\n      const context: any = VsanUiUtils.getModalContext();\n      this.contextObjectName = context.clusterName;\n      this.contextHeight = +context.height;\n      if (!context.clusterId) {\n         Logger.error(\"Unable to determine object ID!\");\n         return;\n      }\n\n      // Get vSAN configuration properties\n      this.clusterRef = ManagedObject.fromUid(context.clusterId);\n      [this.config, this.showFileServiceOweDescription] = await Promise.all([\n         this.vsanConfigService.getVsanGeneralConfigData(this.clusterRef),\n         this.isFileServiceOweSupported(this.clusterRef),\n      ]);\n      this.vsanConfigSpec = this.config.cloneVsanConfigSpec();\n   }\n\n   @ErrorHandler({name: LoaderName.ON_INIT})\n   handleInitError(): void {\n      this.hasInitializationError = true;\n      this.validationErrors.push(VsanUiUtils.getString(\"vsan.common.error.dataExtraction\"));\n   }\n\n   ok(): void {\n      if (!this.config.isConfigChanged(this.vsanConfigSpec)) {\n         // Do nothing if there is no change\n         VsanUiUtils.closeModalDialog();\n         return;\n      }\n\n      // Check for validation errors and show them\n      this.validationErrors = this.config.validateConfig(this.vsanConfigSpec);\n      if (!VsanUiUtils.isEmpty(this.validationErrors)) {\n         // Do not proceed if there are any validation errors\n         return;\n      }\n\n      // Post the changes to the mutation controller\n      this.startTask();\n   }\n\n   private async isFileServiceOweSupported(clusterRef: ManagedObject): Promise<boolean> {\n      const featureSupporteMap: any =\n            await this.fileServiceConfigService.isFeatureSupportedOnRuntime(clusterRef,\n                  [FileServiceFeature.OWE]);\n      return featureSupporteMap[FileServiceFeature.OWE];\n   }\n\n   @Loader({name: LoaderName.ON_CONFIRM})\n   private async startTask(): Promise<void> {\n      const taskRef: any = await this.configureClusterMutationProvider.configure(this.clusterRef, this.vsanConfigSpec);\n      VsanUiUtils.closeModalDialog(taskRef);\n   }\n\n   // Display errors in the wizard\n   @ErrorHandler({name: LoaderName.ON_CONFIRM})\n   private handleStartTaskError(error: any): void {\n      this.validationErrors = [error];\n   }\n}\n","<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-edit-prompt\n      [title]=\"'vsan.services.network.title' | localized\"\n      [subtitle]=\"clusterName\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"loading || !isRdmaOptionEnabled\"\n      [(alertMessage)]=\"alertMessage\"\n      (onConfirm)=\"confirm()\">\n   <div *ngIf=\"!loading\" class=\"dialog-container\">\n      <span id=\"rdma-support-label\">{{\"vsan.services.network.rdmaSupport.signpost\" | localized}}</span>\n      <div class=\"clr-form-control\">\n         <div class=\"clr-toggle-wrapper\">\n            <input id=\"rdma-support\"\n                   name=\"rdma-support\"\n                   type=\"checkbox\"\n                   class=\"clr-toggle\"\n                   [(ngModel)]=\"rdmaData.isRdmaEnabled\"\n                   [disabled]=\"!isRdmaOptionEnabled\">\n            <label for=\"rdma-support\">\n               {{\"vsan.services.network.rdmaSupport.label\" | localized}}\n            </label>\n         </div>\n      </div>\n      <clr-alert id=\"vsan-network-rdma-alert-message\"\n                 [clrAlertType]=\"rdmaAlertType\"\n                 [clrAlertClosable]=\"false\"\n                 [clrAlertSizeSmall]=\"true\">\n         <clr-alert-item>\n            <div>\n               <span id=\"rdma-alert-message-text\">{{rdmaAlertMessage}}</span>\n               <a *ngIf=\"showUnsupportedHosts()\"\n                  id=\"rdma-learn-more-link\"\n                  [external-link]=\"'vsan.services.network.rdmaSupport.link' | localized\"\n                  [url]=\"documentationUrl\">\n               </a>\n            </div>\n         </clr-alert-item>\n      </clr-alert>\n      <table class=\"table table-compact table-flex-overflow\" *ngIf=\"showUnsupportedHosts()\">\n         <thead>\n            <tr>\n               <th>{{\"vsan.services.network.rdmaSupport.notSupportedHostsTable.column.hostName\" | localized}}</th>\n            </tr>\n         </thead>\n         <tbody>\n            <tr *ngFor=\"let host of rdmaData.unsupportedHosts\">\n               <td class=\"icon-name-container\">\n                  <clr-icon id=\"rdma-unsupported-host-icon\" [attr.shape]=\"host.primaryIconId\"></clr-icon>\n                  <a href=\"javascript://\" (click)=\"navigateToHost(host.moRef)\">{{host.name}}</a>\n               </td>\n            </tr>\n         </tbody>\n      </table>\n   </div>\n</vsan-edit-prompt>\n","/* Copyright 2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanConfigService} from \"@generated/vsan-config-service\";\nimport {VsanConfigSpec} from \"@generated/vsan-config-spec\";\nimport {VsanMaxSettingsService} from \"@generated/vsan-max-settings-service\";\nimport {EditVsanManagedDiskClaimContext} from \"@navigation/context/edit-vsan-managed-disk-claim-context\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {LoaderName} from \"@service/flow/loader-name\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"edit-vsan-managed-disk-claim.html\",\n   selector: \"vsan-edit-vsan-managed-disk-claim\",\n})\nexport class EditVsanManagedDiskClaim implements OnInit {\n\n   clusterName: string;\n   isDiskClaimVsanManaged: boolean;\n   vsanConfig: VsanConfigSpec;\n\n   @LoadingIndicator({name: [LoaderName.ON_INIT, LoaderName.ON_CONFIRM]})\n   loading: boolean;\n\n   @ErrorMessage({name: [LoaderName.ON_INIT, LoaderName.ON_CONFIRM]})\n   alertMessage: string;\n\n   constructor(private vsanConfigService: VsanConfigService, private vsanMaxSettingsService: VsanMaxSettingsService) {\n   }\n\n   @Loader({\n      name: LoaderName.ON_INIT,\n      srMessage: \"vsan.services.vsan.max.diskClaim.label\",\n      srMessageType: SrMessageType.PAGE_TITLE,\n   })\n   async ngOnInit(): Promise<void> {\n      const context: EditVsanManagedDiskClaimContext = VsanUiUtils.getModalContext();\n      this.clusterName = context.clusterName;\n      this.vsanConfig = await this.vsanConfigService.getVsanConfigSpec(ManagedObject.contextObject);\n      // Copy the value, so the config object can be used to check for changes to the value.\n      this.isDiskClaimVsanManaged = this.vsanConfig.isDiskClaimVsanManaged;\n   }\n\n   @Loader({name: LoaderName.ON_CONFIRM})\n   async confirm(): Promise<void> {\n      if (this.isDiskClaimVsanManaged === this.vsanConfig.isDiskClaimVsanManaged) {\n         VsanUiUtils.closeModalDialog();\n         return;\n      }\n      const task: ManagedObject = await this.vsanMaxSettingsService.configureVsanMaxSettings(\n            ManagedObject.contextObject,\n            this.isDiskClaimVsanManaged);\n      VsanUiUtils.closeModalDialog(task);\n   }\n\n}","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-status-card [label]=\"'vsan.services.advanced.options.label' | localized\"\n                  [allowDragging]=\"true\"\n                  [(isExpanded)]=\"isExpanded\">\n   <div class=\"column-flex-container\">\n      <div id=\"object-repair-timer\" class=\"clr-row\">\n         <label class=\"clr-col-5\">\n            {{\"vsan.services.advanced.options.repair.timer\" | localized}}\n         </label>\n         <div class=\"clr-col-7\" vsan-show-title>\n            {{\"vsan.common.minutes\" | localized : config.objectRepairTimer}}\n         </div>\n      </div>\n      <div id=\"site-read-locality\" class=\"clr-row\">\n         <label class=\"clr-col-5\">\n            {{\"vsan.services.advanced.options.read.locality\" | localized}}\n         </label>\n         <div class=\"clr-col-7\" vsan-show-title>\n            {{ServiceUtils.enabledStateLabel(config.isSiteReadLocalityEnabled)}}\n         </div>\n      </div>\n      <div id=\"thin-swap\" class=\"clr-row\">\n         <label class=\"clr-col-5\">\n            {{\"vsan.services.advanced.options.thin.swap\" | localized}}\n         </label>\n         <div class=\"clr-col-7\" vsan-show-title>\n            {{ServiceUtils.enabledStateLabel(config.isCustomizedSwapObjectEnabled)}}\n         </div>\n      </div>\n      <!-- Show setting for large cluster support (more than 32 hosts) if it is NOT supported natively -->\n      <div id=\"large-cluster-support\"\n           *ngIf=\"!clusterCapabilityData.isNativeLargeClusterSupported\"\n           class=\"clr-row\">\n         <label class=\"clr-col-5\">\n            {{\"vsan.services.advanced.options.large.cluster\" | localized}}\n         </label>\n         <div class=\"clr-col-7\" vsan-show-title>\n            {{ServiceUtils.enabledStateLabel(config.largeClusterSupportEnabled)}}\n         </div>\n      </div>\n      <div id=\"guest-trim-unmap\"\n           *ngIf=\"clusterCapabilityData.isGuestTrimUnmapSupported\"\n           class=\"clr-row\">\n         <label class=\"clr-col-5\">\n            {{\"vsan.services.advanced.options.guest.trim.unmap\" | localized}}\n         </label>\n         <div class=\"clr-col-7\" vsan-show-title>\n            {{ServiceUtils.enabledStateLabel(config.isGuestTrimUnmapEnabled)}}\n         </div>\n      </div>\n      <ng-container *ngIf=\"vcCapabilityData.isAutomaticRebalanceSupported\">\n         <div id=\"automatic-rebalance\" class=\"clr-row\">\n            <label class=\"clr-col-5\">\n               {{\"vsan.services.advanced.options.automatic.rebalance\" | localized}}\n            </label>\n            <div class=\"clr-col-7\" vsan-show-title>\n               {{ServiceUtils.enabledStateLabel(config.isAutomaticRebalanceEnabled)}}\n            </div>\n         </div>\n         <div id=\"rebalancing-threshold-label\"\n              *ngIf=\"config.isAutomaticRebalanceEnabled\"\n              class=\"clr-row\" >\n            <label class=\"clr-col-5\">\n               {{\"vsan.services.advanced.options.automatic.rebalance.threshold\" | localized}}\n            </label>\n            <div class=\"clr-col-7\" vsan-show-title>\n               {{\"vsan.common.percentage\" | localized : config.rebalancingThreshold}}\n            </div>\n         </div>\n      </ng-container>\n   </div>\n   <div class=\"card-footer\">\n     <clr-tooltip>\n         <span clrTooltipTrigger [vsan-ignore-focus]=\"!editDisabledTitle\">\n            <button id=\"edit-advanced-config\"\n                    class=\"btn btn-sm btn-link\"\n                    aria-describedby=\"edit-advanced-options-description\"\n                    [disabled]=\"editDisabledTitle\"\n                    (click)=\"edit()\">\n                     {{\"vsan.generalConfig.button.edit\" | localized}}\n            </button>\n         </span>\n         <clr-tooltip-content *ngIf=\"editDisabledTitle\"\n                              id=\"edit-advanced-options-description\"\n                              clrPosition=\"top-right\"\n                              clrSize=\"md\">\n            {{editDisabledTitle}}\n         </clr-tooltip-content>\n      </clr-tooltip>\n   </div>\n</vsan-status-card>","<!--Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-validation *ngIf=\"validationErrors\"\n                 [alerts]=\"validationErrors\"\n                 [allowClose]=\"false\"\n                 [alertsExpanded]=\"true\"\n                 [allowExpandCollapse]=\"false\">\n</vsan-validation>\n<div class=\"vsan-dialog-container\">\n   <div id=\"rekeyText\">{{ \"vsan.encryption.rekey.dialog.text\" | localized}}</div>\n   <div class=\"checkbox-tooltip-group\" [class.disable-action]=\"!rekeyAllowed\">\n      <clr-checkbox-wrapper>\n         <input type=\"checkbox\"\n                clrCheckbox\n                id=\"re-encrypt-data-check-box\"\n                name=\"re-encrypt-data-check-box\"\n                [(ngModel)]=\"reEncryptData\"/>\n         <label>{{\"vsan.encryption.rekey.dialog.reEncrypt.text\" | localized}}</label>\n      </clr-checkbox-wrapper>\n      <clr-signpost id=\"re-encrypt-help\"\n                    [vsan-signpost-title]=\"'vsan.encryption.rekey.dialog.reEncrypt.signpost.label' | localized\">\n         <clr-signpost-content *clrIfOpen clrPosition=\"bottom-left\">\n            {{\"vsan.encryption.rekey.dialog.reEncrypt.help\" | localized}}\n         </clr-signpost-content>\n      </clr-signpost>\n   </div>\n   <div class=\"checkbox-tooltip-group nested-group\" [class.disable-action]=\"!this.reEncryptData\">\n      <clr-checkbox-wrapper>\n         <input type=\"checkbox\"\n                clrCheckbox\n                id=\"allow-redundancy-check-box\"\n                name=\"allow-redundancy-check-box\"\n                [(ngModel)]=\"allowReducedRedundancy\"/>\n         <label>{{\"configureVsan.settings.allowReducedRedundancyCheckboxLabel\" | localized}}</label>\n      </clr-checkbox-wrapper>\n      <clr-signpost id=\"allow-redundancy-help\"\n                    [vsan-signpost-title]=\"'configureVsan.settings.allowReducedRedundancySignpostLabel' | localized\">\n         <clr-signpost-content *clrIfOpen clrPosition=\"right-middle\">\n            {{\"configureVsan.settings.allowReducedRedundancyDescription\" | localized}}\n         </clr-signpost-content>\n      </clr-signpost>\n   </div>\n\n   <button type=\"button\" class=\"btn btn-primary vsan-dialog-button\" id=\"ok-button\" (click)=\"ok()\">\n      {{'vsan.encryption.rekey.generate.button' | localized}}\n   </button>\n   <button type=\"button\" class=\"btn btn-outline vsan-dialog-button\" id=\"close-button\" (click)=\"close()\">\n      {{'vsan.common.cancel' | localized}}\n   </button>\n</div>\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {Privileges} from \"@generated/privileges\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {AdvancedOptionsInfo} from \"@generated/advanced-options-info\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {ServiceUtils} from \"./service.utils\";\nimport {PersistedProperty} from \"@service/browser-storage.service\";\n\n@Component({\n   selector: \"vsan-advanced-options\",\n   templateUrl: \"advanced-options.html\",\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AdvancedOptionsComponent {\n   ServiceUtils = ServiceUtils;\n\n   @Input()\n   config: AdvancedOptionsInfo;\n\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Input()\n   clusterName: string;\n\n   @Input()\n   vcCapabilityData: VsanCapabilityData;\n\n   @Input()\n   clusterCapabilityData: VsanCapabilityData;\n\n   @Input()\n   permissions: Map<string, boolean>;\n\n   @Output()\n   editTaskStarted: EventEmitter<ManagedObject> = new EventEmitter<ManagedObject>();\n\n   @PersistedProperty(\"vsan-advanced-options-card-expanded-state\")\n   isExpanded: boolean;\n\n   private editClusterPermission: boolean;\n\n   ngOnInit() {\n      this.editClusterPermission = this.permissions.get(Privileges.EDIT_CLUSTER());\n      // If the user navigates to this page from the Skyline Health page, open the Edit Advanced Options dialog.\n      // TODO dtsvetkova: confirm if this is actually needed.\n      // The health page can just open the edit dialog without navigating here.\n      const context: any = VsanUiUtils.getNavigationData();\n      if (context && context.advancedOptionsExpanded) {\n         this.isExpanded = context.advancedOptionsExpanded;\n         this.edit();\n      }\n   }\n\n   get editDisabledTitle(): string {\n      if (!this.editClusterPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      }\n      return \"\";\n   }\n\n   edit() {\n      new ModalBuilder(\"services/editAdvancedOptions\")\n            .setSize(800, 500)\n            .open({\n               clusterRef: this.clusterRef,\n               clusterName: this.clusterName,\n               vcCapabilityData: this.vcCapabilityData,\n               clusterCapabilityData: this.clusterCapabilityData,\n            })\n            .then(taskRef => this.editTaskStarted.emit(taskRef));\n   }\n}","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, Input} from \"@angular/core\";\nimport {Status} from \"@component/card/status\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {PersistedProperty} from \"@service/browser-storage.service\";\nimport {KnowledgeBaseId} from \"@navigation/model/knowledge-base-id\";\n\n@Component({\n   selector: \"vsan-support-insight\",\n   templateUrl: \"support-insight.html\",\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SupportInsightComponent {\n   Status: typeof Status = Status;\n   readonly KnowledgeBaseId: typeof KnowledgeBaseId = KnowledgeBaseId;\n\n   @Input()\n   editClusterPermission: boolean;\n\n   @PersistedProperty(\"vsan-support-insight-card-expanded-state\")\n   isExpanded: boolean;\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   navigateToCeip = () => {\n      this.navigationService.navigateWithoutContextObject(PlatformExtension.CEIP_VIEW);\n   };\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {ClusterPowerService} from \"@generated/cluster-power-service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ClusterPowerState} from \"@generated/cluster-power-state\";\nimport {ClusterPowerStatus} from \"@generated/cluster-power-status\";\nimport {Icon} from \"@util/icon\";\nimport {ClusterPowerStateUtils} from \"@util/cluster-power-state-utils\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ReferenceWatcher} from \"@util/reference-watcher\";\nimport {TaskService} from \"@generated/task-service\";\nimport {TaskInfoData} from \"@generated/task-info-data\";\n\n@Component({\n   selector: \"vsan-cluster-power-state-change-progress\",\n   templateUrl: \"cluster-power-state-change-progress.html\",\n   styleUrls: [\"cluster-power-state-change-progress.scss\"],\n   providers: [ReferenceWatcher],\n})\nexport class ClusterPowerStateChangeProgressComponent implements OnInit {\n\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Output()\n   clusterPowerStateChanged: EventEmitter<ClusterPowerState> = new EventEmitter<ClusterPowerState>();\n\n   clusterPowerState: ClusterPowerState;\n   taskInfo: TaskInfoData;\n\n   private isVcOnVsan: boolean = false;\n   private static readonly REFRESH_INTERVAL_MS: number = 2000;\n\n   localizedSteps: Map<ClusterPowerStatus, string> = new Map<ClusterPowerStatus, string>([\n      // Shutting down\n      [\n            ClusterPowerStatus.HA_DISABLED,\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.step.haDisabled\"),\n      ],\n      [\n            ClusterPowerStatus.SUPPORTED_VMS_POWERED_OFF,\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.step.supportedVMsPoweredOff\"),\n      ],\n      [\n            ClusterPowerStatus.VC_VM_POWERED_OFF,\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.step.vcVMPoweredOff\"),\n      ],\n      [\n            ClusterPowerStatus.VSAN_MEMBERSHIP_UPDATE_DISABLED,\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.step.vsanMemberShipUpdateDisabled\"),\n      ],\n      [\n            ClusterPowerStatus.VSAN_DOM_PAUSE_ALL_CCPS_SET,\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.step.vsanDOMPauseAllCCPsSet\"),\n      ],\n      [\n            ClusterPowerStatus.INFRA_VM_RECORDED,\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.step.infraVMsRecorded\"),\n      ],\n      [\n            ClusterPowerStatus.HOST_INFRA_VMS_POWERED_OFF,\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.step.infraVMsPoweredOff\"),\n      ],\n      [\n            ClusterPowerStatus.HOSTS_IN_MM,\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.step.hostsInMM\"),\n      ],\n      [\n            ClusterPowerStatus.HOSTS_POWER_OFF_INITIATED,\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.step.hostsPoweredOff\"),\n      ],\n      [\n            ClusterPowerStatus.CLUSTER_POWERED_OFF,\n            VsanUiUtils.getString(\"vsan.cluster.shutdown.step.clusterPoweredOff\"),\n      ],\n      // Powering on\n      [\n            ClusterPowerStatus.HOSTS_OUT_OF_MM,\n            VsanUiUtils.getString(\"vsan.cluster.powerOn.step.hostsOutOfMM\"),\n      ],\n      [\n            ClusterPowerStatus.VSAN_DOM_PAUSE_ALL_CCPS_UNSET,\n            VsanUiUtils.getString(\"vsan.cluster.powerOn.step.vsanDOMPauseAllCCPsUnset\"),\n      ],\n      [\n            ClusterPowerStatus.VSAN_MEMBERSHIP_UPDATE_ENABLED,\n            VsanUiUtils.getString(\"vsan.cluster.powerOn.step.vsanMemberShipUpdateEnabled\"),\n      ],\n      [\n            ClusterPowerStatus.HOST_INFRA_VMS_POWERED_ON,\n            VsanUiUtils.getString(\"vsan.cluster.powerOn.step.infraVMsPoweredOn\"),\n      ],\n      [\n            ClusterPowerStatus.VC_VM_POWERED_ON,\n            VsanUiUtils.getString(\"vsan.cluster.powerOn.step.vcVMPoweredOn\"),\n      ],\n      [\n            ClusterPowerStatus.SUPPORTED_VMS_POWERED_ON,\n            VsanUiUtils.getString(\"vsan.cluster.powerOn.step.supportedVMsPoweredOn\"),\n      ],\n      [\n            ClusterPowerStatus.HA_ENABLED,\n            VsanUiUtils.getString(\"vsan.cluster.powerOn.step.haEnabled\"),\n      ],\n      [\n            ClusterPowerStatus.CLUSTER_POWERED_ON,\n            VsanUiUtils.getString(\"vsan.cluster.powerOn.step.clusterPoweredOn\"),\n      ],\n   ]);\n\n   constructor(private clusterPowerService: ClusterPowerService,\n         private refWatcher: ReferenceWatcher,\n         private taskService: TaskService) { }\n\n   async ngOnInit(): Promise<void> {\n      await this.updatePowerStateProgress();\n   }\n\n   private async updatePowerStateProgress(): Promise<void> {\n      this.clusterPowerState = await this.clusterPowerService.getPowerState(this.clusterRef);\n      this.isVcOnVsan = this.checkForVcOnVsan();\n\n      if (!ClusterPowerStateUtils.isClusterChangingPowerState(this.clusterPowerState)) {\n         // Cluster is no longer changing its state, so this component is no longer needed.\n         this.clusterPowerStateChanged.emit(this.clusterPowerState);\n         return;\n      }\n\n      if (this.clusterPowerState.taskRef) {\n         this.taskInfo = await this.taskService.getInfo(this.clusterPowerState.taskRef);\n         this.refWatcher.setTimeout(\n               async () => await this.updatePowerStateProgress(),\n               ClusterPowerStateChangeProgressComponent.REFRESH_INTERVAL_MS,\n         );\n      } else {\n         this.taskInfo = null;\n      }\n   }\n\n   async resume(): Promise<void> {\n      await this.clusterPowerService.resumePowerStateChange(this.clusterRef);\n      await this.updatePowerStateProgress();\n   }\n\n   get processLabel(): string {\n      if (!this.clusterPowerState) {\n         return \"\";\n      }\n\n      if (ClusterPowerStateUtils.isClusterShuttingDown(this.clusterPowerState)) {\n         return !this.clusterPowerState.taskRef\n            ? VsanUiUtils.getString(\"vsan.cluster.shutdown.label.paused\")\n            : VsanUiUtils.getString(\"vsan.cluster.shutdown.label.running\");\n      } else {\n         return !this.clusterPowerState.taskRef\n            ? VsanUiUtils.getString(\"vsan.cluster.powerOn.label.paused\")\n            : VsanUiUtils.getString(\"vsan.cluster.powerOn.label.running\");\n      }\n   }\n\n   get resumeLabel(): string {\n      return ClusterPowerStateUtils.isClusterShuttingDown(this.clusterPowerState)\n         ? VsanUiUtils.getString(\"vsan.cluster.shutdown.label.resume\")\n         : VsanUiUtils.getString(\"vsan.cluster.powerOn.label.resume\");\n   }\n\n   get resumeDescription(): string {\n      return ClusterPowerStateUtils.isClusterShuttingDown(this.clusterPowerState)\n         ? VsanUiUtils.getString(\"vsan.cluster.shutdown.description.resume\")\n         : VsanUiUtils.getString(\"vsan.cluster.powerOn.description.resume\");\n   }\n\n   getStatusLabel(step: ClusterPowerStatus): string {\n      if (step === ClusterPowerStatus.SUPPORTED_VMS_POWERED_OFF) {\n         // We have a different label for the VC on vSAN case, so the map above is not correct.\n         return this.isVcOnVsan ? VsanUiUtils.getString(\"vsan.cluster.shutdown.step.supportedVMsPoweredOff.vcOnVsan\")\n               :  VsanUiUtils.getString(\"vsan.cluster.shutdown.step.supportedVMsPoweredOff\");\n      }\n      return this.localizedSteps.get(step);\n   }\n\n   getStepIconClass(stepIndex: number): string {\n      if (this.isStepCompleted(stepIndex)) {\n         return Icon.CLR_SUCCESS_ICON_CLASS;\n      } else if (this.isStepFailed(stepIndex)) {\n         return Icon.CLR_ERROR_ICON_CLASS;\n      }\n   }\n\n   getStepIconShape(stepIndex: number): string {\n      if (this.isStepCompleted(stepIndex)) {\n         return Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE;\n      } else if (this.isStepFailed(stepIndex)) {\n         return Icon.CLR_ERROR_STANDARD_ICON_SHAPE;\n      } else {\n         return Icon.EMPTY_ICON;\n      }\n   }\n\n   isStepCompleted(stepIndex: number): boolean {\n      return stepIndex < this.getCurrentlyRunningStepIndex();\n   }\n\n   isStepFailed(stepIndex: number): boolean {\n      return this.isCurrentStep(stepIndex) && !!this.clusterPowerState?.errorMessage;\n   }\n\n   isStepInProgress(stepIndex: number): boolean {\n      return this.isCurrentStep(stepIndex) && !this.clusterPowerState?.errorMessage;\n   }\n\n   private isCurrentStep(stepIndex: number): boolean {\n      return this.getCurrentlyRunningStepIndex() === stepIndex;\n   }\n\n   private getCurrentlyRunningStepIndex(): number {\n      return this.clusterPowerState?.inProgressStatuses.indexOf(this.clusterPowerState?.currentOperation);\n   }\n\n   private checkForVcOnVsan(): boolean {\n      return this.clusterPowerState?.inProgressStatuses?.includes(ClusterPowerStatus.VC_VM_POWERED_OFF)\n         || this.clusterPowerState?.inProgressStatuses?.includes(ClusterPowerStatus.VC_VM_POWERED_ON);\n   }\n}","<!--Copyright 2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-edit-prompt\n      [title]=\"'vsan.services.vsan.max.diskClaim.title' | localized\"\n      [subtitle]=\"clusterName\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"loading\"\n      [(alertMessage)]=\"alertMessage\"\n      (onConfirm)=\"confirm()\">\n   <div *ngIf=\"!loading\" class=\"dialog-container\">\n      <span id=\"vsan-manadeg-disk-claim-info\">{{\"vsan.services.vsan.max.diskClaim.description\" | localized}}</span>\n      <div class=\"clr-form-control\">\n         <div class=\"clr-toggle-wrapper\">\n            <input id=\"vsan-manadeg-disk-claim\"\n                   name=\"vsan-manadeg-disk-claim\"\n                   type=\"checkbox\"\n                   class=\"clr-toggle\"\n                   [(ngModel)]=\"isDiskClaimVsanManaged\">\n            <label for=\"vsan-manadeg-disk-claim\">\n               {{\"vsan.services.vsan.max.diskClaim.label\" | localized}}\n            </label>\n         </div>\n      </div>\n   </div>\n</vsan-edit-prompt>","/* Copyright 2018 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component} from \"@angular/core\";\n\n@Component({\n   template: `\n      <vsan-question-prompt\n            title=\"{{'vsan.services.advancedOptions.largeClusterSupport.prompt.title' | localized}}\">\n         {{'vsan.services.advancedOptions.largeClusterSupport.prompt.text' | localized}}\n      </vsan-question-prompt>`,\n   selector: \"vsan-large-scale-cluster-support-change\",\n})\nexport class LargeScaleClusterSupportChangePromptComponent {\n}","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {CapacityManagementStatus, CapacityReservationUtil} from \"@util/capacity-reservation-util\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {UpgradeData} from \"@component/upgrade/upgrade.data\";\nimport {UpgradeService} from \"@component/upgrade/upgrade.service\";\nimport {CapacityManagementContext} from \"@navigation/context/capacity-management-context\";\nimport {Privileges} from \"@generated/privileges\";\nimport {PersistedProperty} from \"@service/browser-storage.service\";\nimport {VsanDialogUtil} from \"@util/vsan-dialog-util\";\nimport {CapacityManagementData} from \"@generated/capacity-management-data\";\nimport {CapacityManagementService} from \"@generated/capacity-management-service\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {VsanRoutes} from \"../../vsan-routes\";\n\n@Component({\n   templateUrl: \"capacity-management-settings.html\",\n   selector: \"vsan-capacity-management-settings\",\n})\nexport class CapacityManagementSettingsComponent implements OnInit {\n   @Input()\n   isSlackSpaceCapacitySupported: boolean;\n\n   @Input()\n   isCapacityCustomizableThresholdsSupportedOnVc: boolean;\n\n   @Input()\n   permissions: Map<string, boolean>;\n\n   @Input()\n   clusterName: string;\n\n   @Input()\n   upgradeData: UpgradeData;\n\n   @PersistedProperty(\"vsan-capacity-reserve-card-status\")\n   isExpanded: boolean;\n\n   errorMessages: string[] = [];\n\n   capacityManagementData: CapacityManagementData;\n\n   private hasEditPermissions: boolean;\n\n   private isCapacityManagementDataLoaded: boolean;\n\n   constructor(private upgradeService: UpgradeService,\n               private capacityManagementService: CapacityManagementService,\n               private taskService: TaskMonitorService) {\n   }\n\n   ngOnInit(): void {\n      this.hasEditPermissions = this.permissions.get(Privileges.EDIT_CLUSTER())\n            && this.permissions.get(Privileges.CONFIG_STORAGE());\n      this.fetch();\n   }\n\n   @RefreshHandler\n   fetch(): void {\n      this.isCapacityManagementDataLoaded = false;\n      this.capacityManagementService.getCapacityManagementData(ManagedObject.contextObject)\n          .then(result => this.capacityManagementData = result)\n          .catch(e => this.errorMessages.push(e))\n          .finally(() => { this.isCapacityManagementDataLoaded = true; });\n   }\n\n   // hide loading indicator when both CapacityManagementData and upgradeData are available\n   get loading(): boolean {\n      return !this.upgradeData || !this.isCapacityManagementDataLoaded;\n   }\n\n   get capacityManagementStatus(): CapacityManagementStatus {\n      if (this.loading) {\n         // The config is still loading\n         return new CapacityManagementStatus(false, false);\n      }\n\n      const isCapacityReservationSupported: boolean =\n            CapacityReservationUtil.isReservationEditingApplicable(\n                  this.capacityManagementData.capacityReservationConfig);\n\n      return CapacityReservationUtil.getCapacityManagementStatus(this.hasEditPermissions,\n            this.upgradeData, isCapacityReservationSupported, this.isCapacityCustomizableThresholdsSupportedOnVc);\n   }\n\n   edit(): void {\n      const context: CapacityManagementContext = {\n         clusterName: this.clusterName,\n         showOldFormatInfo: this.upgradeService.isUpgradeNeeded(this.upgradeData),\n         isCapacityCustomizableThresholdsSupported: this.isCapacityCustomizableThresholdsSupportedOnVc,\n      };\n      new ModalBuilder(VsanRoutes.CAPACITY_MANAGEMENT)\n            .setSize(VsanDialogUtil.CAPACITY_MANAGEMENT_DIALOG.width, VsanDialogUtil.CAPACITY_MANAGEMENT_DIALOG.height)\n            .open(context)\n            .then((taskRef: ManagedObject) => {\n               this.taskService.getAwaitResult(taskRef)\n                   .then(() => this.fetch())\n                   .catch(e => this.errorMessages.push(e));\n            });\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Validator} from \"@util/validation/validator\";\n\nexport class ValidatorsGroup<TEntity> {\n\n   constructor(private validators: Validator<TEntity>[]) { }\n\n   validate(entity: TEntity): boolean {\n      return this.validators\n            .every(validator => validator.validate(entity));\n   }\n\n   getAllErrors(entity: TEntity): string[] {\n      return this.validators\n            .filter(validator => !validator.validate(entity))\n            .map(validator => validator.getErrorMessage(entity));\n   }\n\n   getFirstError(entity: TEntity): string {\n      return this.validators\n            .find(validator => !validator.validate(entity))\n            ?.getErrorMessage(entity) || null;\n   }\n}\n","/* Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit, ViewChild} from \"@angular/core\";\nimport {\n   AbstractControl,\n   FormBuilder,\n   FormControl,\n   FormGroup,\n   ValidationErrors,\n   ValidatorFn,\n   Validators,\n} from \"@angular/forms\";\nimport {ClrForm} from \"@clr/angular\";\nimport {PbmDataProvider} from \"@generated/pbm-data-provider\";\nimport {StoragePolicyData} from \"@generated/storage-policy-data\";\nimport {VsanIscsiAuthSpec} from \"@generated/vsan-iscsi-auth-spec\";\nimport {VsanIscsiConfigEditSpec} from \"@generated/vsan-iscsi-config-edit-spec\";\nimport {VsanIscsiMutationProvider} from \"@generated/vsan-iscsi-mutation-provider\";\nimport {VsanIscsiPropertyProvider} from \"@generated/vsan-iscsi-property-provider\";\nimport {VsanIscsiTargetConfig} from \"@generated/vsan-iscsi-target-config\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {ReactiveFormUtil} from \"@util/reactive-form-util\";\nimport {VsanIscsiUtil} from \"@util/vsan-iscsi-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport IscsiTargetAuthType = VsanIscsiTargetConfig.IscsiTargetAuthType;\n\n@Component({\n   templateUrl: \"edit-iscsi-target-config.html\",\n   styleUrls: [\"edit-iscsi-target-config.scss\"],\n   selector: \"vsan-edit-iscsi-config\",\n})\nexport class EditIscsiTargetComponent implements OnInit {\n\n   VsanUiUtils: typeof VsanUiUtils = VsanUiUtils;\n\n   static readonly DEFAULT_HEIGHT: number = 400;\n   private static readonly MIDDLE_HEIGHT: number = 580;\n   private static readonly EXPANDED_HEIGHT: number = 680;\n\n   iscsiSettings: FormGroup;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   alertMessages: string[] = [];\n   clusterName: string;\n   policyMessage: string;\n\n   private isEmptyCluster: boolean;\n   availableNetworks: string[];\n   availablePolicies: StoragePolicyData[];\n\n   private clusterRef: ManagedObject;\n\n   originalIsServiceEnabled: boolean;\n\n   isServiceEnabled: boolean;\n\n   @ViewChild(ClrForm)\n   iscsiSettingsForm: ClrForm;\n\n   constructor(private iscsiProvider: VsanIscsiPropertyProvider,\n         private pbmProvider: PbmDataProvider,\n         private iscsiMutationProvider: VsanIscsiMutationProvider,\n         private formBuilder: FormBuilder) {\n   }\n\n   @Loader({\n      srMessage: \"vsan.iscsi.action.edit.title\",\n      srMessageType: SrMessageType.PAGE_TITLE,\n   })\n   async ngOnInit(): Promise<void> {\n      const context: any = VsanUiUtils.getModalContext();\n      this.clusterRef = context.clusterRef;\n      this.clusterName = context.clusterName;\n\n      let iscsiConfig: VsanIscsiTargetConfig;\n      [iscsiConfig, this.availableNetworks, this.availablePolicies] = await Promise.all([\n         this.iscsiProvider.getVsanIscsiTargetConfig(this.clusterRef),\n         this.iscsiProvider.getHostsCommonVnicList(this.clusterRef),\n         this.pbmProvider.getStoragePolicies(this.clusterRef),\n      ]);\n      if (VsanUiUtils.isEmpty(this.availableNetworks)) {\n         this.alertMessages.push(VsanUiUtils.getString(\"vsan.iscsi.network.none\"));\n      }\n      this.handleConfig(iscsiConfig);\n   }\n\n   private handleConfig = (iscsiConfig: VsanIscsiTargetConfig): void => {\n      let network: string = \"\";\n      let port: number = VsanIscsiUtil.DEFAULT_PORT;\n      let authSpec: VsanIscsiAuthSpec = null;\n\n      if (iscsiConfig) {\n         this.originalIsServiceEnabled = iscsiConfig.status;\n         this.isServiceEnabled = true;\n         network = iscsiConfig.network;\n         port = iscsiConfig.port || VsanIscsiUtil.DEFAULT_PORT;\n\n         this.isEmptyCluster = iscsiConfig.emptyCluster;\n         if (this.isEmptyCluster) {\n            this.alertMessages.push(VsanUiUtils.getString(\"vsan.iscsi.cluster.empty\"));\n         }\n\n         if (iscsiConfig.authType) {\n            authSpec = VsanIscsiAuthSpec.Factory.create(\n                  iscsiConfig.authType.toString(),\n                  iscsiConfig.outgoingUser,\n                  iscsiConfig.outgoingSecret,\n                  iscsiConfig.incomingUser,\n                  iscsiConfig.incomingSecret);\n         }\n      }\n\n      const policy: StoragePolicyData = this.pickInitialPolicy(iscsiConfig);\n\n      // Preselect the first network if no network configured for iscsi yet.\n      if (!network && this.availableNetworks && this.availableNetworks.length > 0) {\n         network = this.availableNetworks[0];\n      }\n\n      this.iscsiSettings = this.formBuilder.group({\n         network: new FormControl(network, [Validators.required]),\n         port: new FormControl(port, [\n            Validators.required,\n            Validators.min(VsanIscsiUtil.TCP_PORT_MIN),\n            Validators.max(VsanIscsiUtil.TCP_PORT_MAX),\n         ]),\n         authSpec: new FormControl(authSpec),\n         policy: new FormControl(policy, [this.policyValidator]),\n      });\n\n      ReactiveFormUtil.validateControls([this.iscsiSettings.controls.policy as FormControl]);\n   };\n\n   private pickInitialPolicy(iSCSIConfig: VsanIscsiTargetConfig): StoragePolicyData {\n      let initialPolicy: StoragePolicyData = null;\n\n      if (VsanUiUtils.isEmpty(this.availablePolicies)) {\n         return initialPolicy;\n      }\n\n      if (iSCSIConfig && iSCSIConfig.status) {\n         if (iSCSIConfig.homeObjectStorageProfile) {\n            initialPolicy = this.availablePolicies\n                  .find(policy => policy.id === iSCSIConfig.homeObjectStorageProfile.id);\n         }\n         // Don't preselect the default policy if the iSCSI target service is enabled but without home object.\n      } else {\n         // Preselect the default policy when there isn't iSCSI config or there is such one but the status is disabled.\n         initialPolicy = this.availablePolicies.find(policy => policy.isDefault);\n      }\n\n      return initialPolicy;\n   }\n\n   handleAuthChange = (type: IscsiTargetAuthType) => {\n      switch (type) {\n         case IscsiTargetAuthType.CHAP:\n            VsanUiUtils.setModalDialogHeight(EditIscsiTargetComponent.MIDDLE_HEIGHT);\n            break;\n         case IscsiTargetAuthType.CHAP_Mutual:\n            VsanUiUtils.setModalDialogHeight(EditIscsiTargetComponent.EXPANDED_HEIGHT);\n            break;\n         default:\n            VsanUiUtils.setModalDialogHeight(EditIscsiTargetComponent.DEFAULT_HEIGHT);\n      }\n      // After changing the authentication selection, the form has been touched, but sometimes its touched property\n      // has no chagne (for example, changing authentication from None to CHAP directly), so reset it manually.\n      this.iscsiSettings.markAsTouched();\n   };\n\n   confirm = () => {\n      this.clearAlert();\n      if (this.isEmptyCluster) {\n         this.alertMessages = [VsanUiUtils.getString(\"vsan.iscsi.cluster.empty\")];\n         return;\n      }\n\n      // For special case, when changing authentication from None to CHAP, and click APPLY button directly.\n      // It helps to display error and disable APPLY button.\n      this.iscsiSettings.get(\"authSpec\").updateValueAndValidity();\n      if (this.iscsiSettings.invalid) {\n         // Make sure any errors from policy preselection are displayed\n         this.iscsiSettingsForm.markAsTouched();\n         return;\n      }\n\n      let editSpec: VsanIscsiConfigEditSpec = null;\n      if (!this.isServiceEnabled) {\n         // Disable iSCSI target service\n         editSpec = VsanIscsiConfigEditSpec.Factory.create(false, null, null, null, null);\n      } else {\n         const authSpec: VsanIscsiAuthSpec = this.iscsiSettings.controls.authSpec.value\n               // A temporary workaround for https://bugzilla.eng.vmware.com/show_bug.cgi?id=2750778\n               || VsanIscsiAuthSpec.Factory.create(IscsiTargetAuthType.NoAuth.toString(), null, null, null, null);\n         // Edit iSCSI target service config\n         editSpec = VsanIscsiConfigEditSpec.Factory.create(true,\n               this.iscsiSettings.controls.network.value,\n               this.iscsiSettings.controls.port.value,\n               authSpec,\n               this.iscsiSettings.controls.policy.value);\n      }\n\n      this.editIscsiConfig(editSpec);\n   };\n\n   @Loader()\n   private async editIscsiConfig(editSpec: VsanIscsiConfigEditSpec): Promise<void> {\n      const taskRef: ManagedObject = await this.iscsiMutationProvider.editIscsiConfig(this.clusterRef, editSpec);\n      this.handleMutationResult(taskRef);\n   }\n\n   policyValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n      // The error must not prevent settings to be applied when the service is off.\n      if (!this.isServiceEnabled) {\n         return null;\n      }\n      this.policyMessage = VsanIscsiUtil.validatePolicy(control.value, this.chooseEmptyPolicyError());\n      if (this.policyMessage) {\n         return {policyInvalid: {value: control.value}};\n      }\n      return null;\n   };\n\n   private chooseEmptyPolicyError(): string {\n      return !this.originalIsServiceEnabled\n            ? VsanUiUtils.getString(\"vsan.iscsi.edit.storagePolicy.homeObject.enableWarning\")\n            : VsanUiUtils.getString(\"vsan.iscsi.edit.storagePolicy.homeObject.editWarning\");\n   }\n\n   get blockApplyButton(): boolean {\n      return this.loading\n            || this.alertMessages && this.alertMessages.length > 0\n            || this.isEmptyCluster\n            || this.isServiceEnabled && this.iscsiSettings && this.iscsiSettings.touched && this.iscsiSettings.invalid;\n   }\n\n   private handleMutationResult = (taskRef: ManagedObject) => {\n      this.close(taskRef);\n   };\n\n   @ErrorHandler()\n   private handleError(error: string): void {\n      this.alertMessages = [error];\n   }\n\n   private clearAlert = () => {\n      this.alertMessages = null;\n   };\n\n   private close = (taskRef: ManagedObject = null) => {\n      VsanUiUtils.closeModalDialog(taskRef);\n   };\n}\n","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {AlertType} from \"@component/validation/alert-type\";\nimport {RdmaData} from \"@generated/rdma-data\";\nimport {VsanRdmaService} from \"@generated/vsan-rdma-service\";\nimport {VsanStretchedClusterService} from \"@generated/vsan-stretched-cluster-service\";\nimport {EditNetworkContext} from \"@navigation/context/edit-network-context\";\nimport {DocumentationId} from \"@navigation/model/documentation-id\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {LoaderName} from \"@service/flow/loader-name\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {Icon} from \"@util/icon\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {NetworkOptionsComponent} from \"../../../services/network-options.component\";\n\n@Component({\n   templateUrl: \"edit-network.html\",\n   styleUrls: [\"edit-network.scss\"],\n   selector: \"vsan-edit-network\",\n})\nexport class EditNetworkComponent implements OnInit {\n   clusterName: string;\n   clusterRef: ManagedObject;\n\n   @LoadingIndicator({name: [LoaderName.ON_INIT, LoaderName.ON_CONFIRM]})\n   loading: boolean;\n\n   @ErrorMessage({name: LoaderName.ON_INIT})\n   alertMessage: string;\n\n   rdmaData: RdmaData;\n   originalIsRdmaEnabled: boolean;\n   hasSharedWitnessHost: boolean;\n   isStretchedClusterUnsupported: boolean;\n   isLargeClusterSupportEnabled: boolean;\n\n   documentationUrl: string;\n\n   Icon: Icon = Icon;\n   AlertType: typeof AlertType = AlertType;\n\n   constructor(private rdmaService: VsanRdmaService,\n         private stretchedClusterService: VsanStretchedClusterService,\n         private navigationService: NavigationService) {\n   }\n\n   @Loader({\n      name: LoaderName.ON_INIT,\n      srMessage: \"vsan.services.network.title\",\n      srMessageType: SrMessageType.PAGE_TITLE,\n   })\n   async ngOnInit(): Promise<void> {\n      this.documentationUrl = this.navigationService.getVmwareHelpUrl(NavigationService.NETWORKING_URL,\n            DocumentationId.RDMA_DOCUMENTATION);\n      const context: EditNetworkContext = VsanUiUtils.getModalContext();\n      this.clusterName = context.clusterName;\n      this.clusterRef = context.clusterRef;\n      this.isStretchedClusterUnsupported = context.isStretchedClusterUnsupported;\n      this.isLargeClusterSupportEnabled = context.isLargeClusterSupportEnabled;\n      [this.hasSharedWitnessHost, this.rdmaData] = await Promise.all([\n         this.stretchedClusterService.hasSharedWitnessHost(this.clusterRef),\n         this.rdmaService.getRdmaData(this.clusterRef),\n      ]);\n      this.originalIsRdmaEnabled = this.rdmaData.isRdmaEnabled;\n      // Increase the dialog height when unsupported hosts are listed and there are no other config limitations\n      if (this.showUnsupportedHosts()) {\n         VsanUiUtils.setModalDialogHeight(NetworkOptionsComponent.RDMA_DIALOG_HEIGHT_UNSUPPORTED_HOSTS);\n      }\n   }\n\n   get rdmaAlertMessage(): string {\n      if (this.hasSharedWitnessHost) {\n         return VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupportedSharedWitness\");\n      } else if (this.isStretchedClusterUnsupported) {\n         return VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupportedStretchedCluster\");\n      } else if (this.isLargeClusterSupportEnabled) {\n         return VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupportedLargeScaleCluster\");\n      } else if (this.hasUnsupportedHosts()) {\n         return VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.notSupportedByHostsHardware\");\n      }\n\n      return VsanUiUtils.getString(\"vsan.services.network.rdmaSupport.hostsHardwareRdmaRequirement\");\n   }\n\n   get rdmaAlertType(): string {\n      if (this.hasConfigLimitation() || this.hasUnsupportedHosts()) {\n         return AlertType.DANGER;\n      }\n\n      return AlertType.SUCCESS;\n   }\n\n   /**\n    * This is to decide if UI should enable the toggle.\n    */\n   get isRdmaOptionEnabled(): boolean {\n      // when isRdmaEnabled is already set to true but there is an unsupported cluster configuration,\n      // allow user to disable the option. Otherwise disable the toggle and list the unsupported hosts\n      return !this.hasUnsupportedHosts() && !this.hasConfigLimitation()\n            ? true\n            : this.rdmaData?.isRdmaEnabled;\n   }\n\n   showUnsupportedHosts(): boolean {\n      return this.hasUnsupportedHosts() && !this.hasConfigLimitation();\n   }\n\n   navigateToHost(hostRef: ManagedObject): void {\n      this.navigationService.navigateTo(PlatformExtension.HOST_PHYSICAL_ADAPTERS, hostRef);\n      VsanUiUtils.closeModalDialog();\n   }\n\n   @Loader({name: LoaderName.ON_CONFIRM})\n   async confirm(): Promise<void> {\n      if (this.rdmaData.isRdmaEnabled === this.originalIsRdmaEnabled) {\n         VsanUiUtils.closeModalDialog();\n         return;\n      }\n\n      const task: ManagedObject = await this.rdmaService.configureVsanRdma(\n            this.clusterRef, this.rdmaData.isRdmaEnabled);\n      VsanUiUtils.closeModalDialog(task);\n   }\n\n   @ErrorHandler({name: LoaderName.ON_CONFIRM})\n   private handleConfirmError(): void {\n      this.alertMessage = VsanUiUtils.getString(\"vsan.services.network.edit.error\");\n   }\n\n   // Check if any of the configurations that are not compatible with RDMA are enabled\n   private hasConfigLimitation(): boolean {\n      return this.isStretchedClusterUnsupported || this.hasSharedWitnessHost || this.isLargeClusterSupportEnabled;\n   }\n\n   private hasUnsupportedHosts(): boolean {\n      return !VsanUiUtils.isEmpty(this.rdmaData?.unsupportedHosts);\n   }\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ServiceUtils} from \"./service.utils\";\nimport {VsanServiceStatus} from \"@generated/vsan-service-status\";\nimport {VsanIscsiTargetConfig} from \"@generated/vsan-iscsi-target-config\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {VsanConfigService} from \"@generated/vsan-config-service\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {Privileges} from \"@generated/privileges\";\nimport {VsanIscsiUtil} from \"@util/vsan-iscsi-util\";\nimport IscsiTargetAuthType = VsanIscsiTargetConfig.IscsiTargetAuthType;\nimport {Icon} from \"@util/icon\";\nimport {NavigationService} from \"@navigation/navigation.service\";\nimport {PersistedProperty} from \"@service/browser-storage.service\";\n\n@Component({\n   selector: \"vsan-iscsi-target-settings\",\n   templateUrl: \"iscsi-target-settings.html\",\n})\nexport class IscsiTargetSettingsComponent implements OnInit {\n\n   ServiceUtils: typeof ServiceUtils = ServiceUtils;\n   Icon: typeof Icon = Icon;\n   VsanIscsiUtil: typeof VsanIscsiUtil = VsanIscsiUtil;\n\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Input()\n   clusterName: string;\n\n   @Input()\n   clusterPermissions: Map<string, boolean>;\n\n   @Input()\n   vcPermissions: Map<string, boolean>;\n\n   @PersistedProperty(\"vsan-iscsi-target-sevice-card-expanded-state\")\n   isExpanded: boolean;\n\n   status: VsanServiceStatus;\n   config: VsanIscsiTargetConfig;\n\n   editClusterPermission: boolean;\n   readPoliciesPermission: boolean;\n\n   errorMessage: string;\n\n   constructor(private configService: VsanConfigService,\n         private taskService: TaskMonitorService) {\n   }\n\n   ngOnInit(): void {\n      this.editClusterPermission = this.clusterPermissions.get(Privileges.EDIT_CLUSTER());\n      this.readPoliciesPermission = this.vcPermissions.get(Privileges.READ_POLICIES());\n      this.refresh();\n   }\n\n   @RefreshHandler\n   refresh(): void {\n      this.queryIscsiTargetConfig();\n   }\n\n   queryIscsiTargetConfig = () => {\n      this.config = null;\n      this.errorMessage = null;\n      this.configService.getIscsiTargetStatus(this.clusterRef)\n            .then(result => {\n               this.status = result.status;\n               this.config = result.details as VsanIscsiTargetConfig;\n               // Expand the card by default if the service is enabled\n               if (this.status === VsanServiceStatus.ENABLED && VsanUiUtils.isUnset(this.isExpanded)) {\n                  this.isExpanded = true;\n               }\n            }).catch(e => this.errorMessage = e);\n   };\n\n   get editTooltip(): string {\n      if (!this.config) {\n         // The config data is still loading\n         return \"\";\n      }\n      if (!this.editClusterPermission || !this.readPoliciesPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      }\n      if (this.config.emptyCluster) {\n         return VsanUiUtils.getString(\"vsan.iscsi.homeObject.host.version.warning.nohost.label\");\n      }\n      return \"\";\n   }\n\n   edit(): void {\n      new ModalBuilder(\"services/editIscsiTargetConfig\")\n            .setSize(800, 400)\n            .open({\n               clusterRef: this.clusterRef,\n               clusterName: this.clusterName,\n            })\n            .then(taskRef => this.awaitThenInvoke(taskRef));\n   }\n\n   private awaitThenInvoke = (taskRef: ManagedObject) => {\n      this.taskService.getAwaitResult(taskRef)\n            .then(() => this.queryIscsiTargetConfig())\n            .catch(e => this.errorMessage = e);\n   };\n}\n","/* Copyright 2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {Status} from \"@component/card/status\";\nimport {VsanConfigSpec} from \"@generated/vsan-config-spec\";\nimport {EditVsanManagedDiskClaimContext} from \"@navigation/context/edit-vsan-managed-disk-claim-context\";\nimport {PersistedProperty} from \"@service/browser-storage.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {VsanDialogUtil} from \"@util/vsan-dialog-util\";\nimport {VsanRoutes} from \"../../vsan-routes\";\nimport {DiskManagementActionAvailabilityService} from \"../disk-management/views/validation/disk-management-action-availability.service\";\nimport {DiskManagementActionContext} from \"../disk-management/views/validation/disk-management-action-context\";\nimport {ServiceUtils} from \"./service.utils\";\n\n@Component({\n   selector: \"vsan-max-settings\",\n   templateUrl: \"vsan-max-settings.html\",\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VsanMaxSettingsComponent implements OnInit {\n\n   @Input()\n   clusterName: string;\n\n   @Input()\n   vsanConfig: VsanConfigSpec;\n\n   @Input()\n   editClusterPermission: boolean;\n\n   @Input()\n   isEmptyCluster: boolean;\n\n   @Output()\n   editTaskStarted: EventEmitter<ManagedObject> = new EventEmitter<ManagedObject>();\n\n   @PersistedProperty(\"vsan-max-settings-card-expanded-state\")\n   isExpanded: boolean;\n\n   vsanMaxStatus: Status;\n   ServiceUtils: typeof ServiceUtils = ServiceUtils;\n\n   constructor(private diskManagementActionAvailabilityService: DiskManagementActionAvailabilityService) {\n   }\n\n   ngOnInit(): void {\n      this.vsanMaxStatus = this.vsanConfig?.isVsanMaxEnabled ? Status.Enabled : Status.Disabled;\n   }\n\n   isEditAllowed(): boolean {\n      return this.diskManagementActionAvailabilityService.checkAvailability(\n            this.getActionValidationContext()).available;\n   }\n\n   getDisabledEditReason(): string {\n      return this.diskManagementActionAvailabilityService.checkAvailability(this.getActionValidationContext()).message;\n   }\n\n   private getActionValidationContext(): DiskManagementActionContext {\n      return {\n         actionId: DiskManagementActionAvailabilityService.EDIT_VSAN_MANAGED_DISK_CLAIM_ID,\n         hasEditPermission: this.editClusterPermission,\n         vsanConfig: this.vsanConfig,\n         isEmptyCluster: this.isEmptyCluster,\n         autoClaimMode: null,\n         allHosts: null,\n         clusterCapabilities: null,\n         hasHostMaintenancePermission: null,\n         spaceEfficiencyConfig: null,\n      };\n   }\n\n   edit(): void {\n      const context: EditVsanManagedDiskClaimContext = {clusterName: this.clusterName};\n      new ModalBuilder(`${VsanRoutes.SERVICES_VIEW}/editVsanManagedDiskClaim`)\n            .setSize(VsanDialogUtil.VSAN_DISK_CLAIM_ACTION_DIALOG.width,\n                  VsanDialogUtil.VSAN_DISK_CLAIM_ACTION_DIALOG.height)\n            .open(context)\n            .then((taskRef: ManagedObject) => {\n               this.editTaskStarted.emit(taskRef);\n            });\n   }\n}","<!--Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-edit-prompt\n      [title]=\"'vsan.iscsi.action.edit.title' | localized\"\n      [subtitle]=\"clusterName\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"blockApplyButton\"\n      [confirmText]=\"VsanUiUtils.getEditServiceButtonText(originalIsServiceEnabled)\"\n      [(alertMessages)]=\"alertMessages\"\n      (onConfirm)=\"confirm()\">\n   <div class=\"dialog-container\">\n      <clr-toggle-container *ngIf=\"originalIsServiceEnabled\">\n         <clr-toggle-wrapper [class.has-error]=\"alertMessages?.length > 0 && isServiceEnabled\">\n            <input type=\"checkbox\"\n                   clrToggle\n                   id=\"enable-iscsi-service-toggle\"\n                   name=\"enableCheckbox\"\n                   [(ngModel)]=\"isServiceEnabled\" />\n            <label>{{'vsan.iscsi.action.edit.enableCheckbox' | localized}}</label>\n         </clr-toggle-wrapper>\n         <clr-control-helper>{{'vsan.iscsi.action.edit.enableCheckbox.tooltip' | localized}}</clr-control-helper>\n      </clr-toggle-container>\n      <form *ngIf=\"iscsiSettings\" clrForm clrLayout=\"horizontal\" [formGroup]=\"iscsiSettings\">\n         <!-- Default iSCSI network -->\n         <clr-select-container>\n            <label id=\"network-label\" class=\"clr-col-12 clr-col-md-4\">\n               {{'vsan.iscsi.action.edit.networkLabel' | localized}}\n            </label>\n            <select clrSelect\n                    id=\"network-selector\"\n                    class=\"clr-col-12 clr-col-md-8\"\n                    name=\"networkSelector\"\n                    formControlName=\"network\"\n                    [vsan-disable-form-control]=\"!isServiceEnabled\">\n               <option *ngFor=\"let availableNetwork of availableNetworks\"\n                       [ngValue]=\"availableNetwork\">\n                  {{availableNetwork}}\n               </option>\n            </select>\n            <clr-control-helper>\n               {{'vsan.iscsi.action.edit.networkSettingsInfo' | localized}}\n            </clr-control-helper>\n            <clr-control-error>\n               {{'vsan.iscsi.network.none' | localized}}\n            </clr-control-error>\n         </clr-select-container>\n         <!-- Default TCP port -->\n         <clr-input-container>\n            <label class=\"clr-col-12 clr-col-md-4\">\n               {{'vsan.iscsi.action.edit.portLabel' | localized}}\n            </label>\n            <input clrInput\n                   id=\"port-input\"\n                   class=\"clr-col-12 clr-col-md-8\"\n                   name=\"portSelector\"\n                   type=\"number\"\n                   formControlName=\"port\"\n                   [vsan-disable-form-control]=\"!isServiceEnabled\"/>\n            <clr-control-error>\n               {{'vsan.iscsi.edit.network.port.error' | localized}}\n            </clr-control-error>\n         </clr-input-container>\n         <!-- Authentication -->\n         <vsan-authentication formControlName=\"authSpec\"\n                              [vsan-disable-form-control]=\"!isServiceEnabled\"\n                              (authTypeChange)=\"handleAuthChange($event)\">\n         </vsan-authentication>\n\n         <!-- Storage policy for the home object -->\n         <clr-select-container>\n            <label class=\"clr-col-12 clr-col-md-4\">{{'vsan.iscsi.action.edit.policyLabel' | localized}}</label>\n            <select clrSelect\n                    id=\"policy-selector\"\n                    class=\"clr-col-12 clr-col-md-8\"\n                    name=\"policySelector\"\n                    formControlName=\"policy\"\n                    [vsan-disable-form-control]=\"!isServiceEnabled\">\n               <option *ngFor=\"let availPolicy of availablePolicies\"\n                       [ngValue]=\"availPolicy\">\n                  {{availPolicy.name}}\n               </option>\n            </select>\n            <clr-control-helper>\n               {{'vsan.iscsi.action.edit.policySettingsInfo' | localized}}\n            </clr-control-helper>\n            <clr-control-error>{{policyMessage}}</clr-control-error>\n         </clr-select-container>\n      </form>\n   </div>\n</vsan-edit-prompt>\n","<!-- Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<h6>{{processLabel}}</h6>\n\n<clr-progress-bar *ngIf=\"taskInfo\"\n                  [clrValue]=\"taskInfo.progress.toFixed(0)\"\n                  [clrMax]=\"100\"\n                  [clrLabeled]=\"true\">\n</clr-progress-bar>\n\n<div *ngIf=\"clusterPowerState?.errorMessage\" class=\"btn-group\">\n   <clr-tooltip>\n      <span clrTooltipTrigger>\n         <button id=\"resume\"\n                 class=\"btn btn-sm btn-link no-spacing\"\n                 (click)=\"resume()\">\n            {{resumeLabel}}\n         </button>\n      </span>\n      <clr-tooltip-content id=\"resume-description\" clrPosition=\"top-right\" clrSize=\"lg\">\n         {{resumeDescription}}\n      </clr-tooltip-content>\n   </clr-tooltip>\n</div>\n\n<div class=\"cluster-power-change-step\" *ngFor=\"let step of clusterPowerState?.inProgressStatuses; let stepIndex = index\">\n   <div *ngIf=\"localizedSteps.has(step)\" class=\"step-label-and-status\">\n      <clr-icon *ngIf=\"!isStepInProgress(stepIndex)\"\n                class=\"is-solid\"\n                [ngClass]=\"getStepIconClass(stepIndex)\"\n                [attr.shape]=\"getStepIconShape(stepIndex)\">\n      </clr-icon>\n      <span *ngIf=\"isStepInProgress(stepIndex)\" class=\"spinner spinner-inline\"></span>\n      <span>{{getStatusLabel(step)}}</span>\n   </div>\n   <vsan-validation *ngIf=\"isStepFailed(stepIndex)\"\n                    class=\"indent\"\n                    [alert]=\"clusterPowerState.errorMessage\"\n                    [allowClose]=\"false\"\n                    [alertsExpanded]=\"true\"\n                    [allowExpandCollapse]=\"false\">\n   </vsan-validation>\n</div>","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {\n   ChangeDetectionStrategy,\n   Component, EventEmitter,\n   Input, Output,\n} from \"@angular/core\";\nimport {Status} from \"@component/card/status\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * An expandable card component with a status label in the header. It provides:\n *  - expand/collapse of the content using vsan-card.\n *  - header with a status label. For example a service with status: Enabled/Disabled.\n *  - any footer with actions is projected.\n *  - Change detection OnPush, so no service calls should be made inside this component.\n */\n@Component({\n   selector: \"vsan-status-card\",\n   templateUrl: \"status-card.html\",\n   styleUrls: [ \"status-card.scss\"],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StatusCardComponent {\n\n   private static readonly LABEL_CLASS: string = \"label\";\n   private static readonly LABEL_SUCCESS_CLASS: string = \"label-success\";\n   private static readonly LABEL_PARTIAL_CLASS: string = \"label-warning\";\n\n   private static readonly ENABLED_SERVICE_LABELS: string[] = [\n         StatusCardComponent.LABEL_CLASS,\n         StatusCardComponent.LABEL_SUCCESS_CLASS,\n   ];\n\n   private static readonly DISABLED_SERVICE_LABELS: string[] = [\n      StatusCardComponent.LABEL_CLASS,\n   ];\n\n   private static readonly PARTIAL_ENABLED_SERVICE_LABELS: string[] = [\n         StatusCardComponent.LABEL_CLASS,\n         StatusCardComponent.LABEL_PARTIAL_CLASS,\n   ];\n\n   /*\n    * The service name. Should be localized.\n    */\n   @Input()\n   label: string;\n\n   /*\n    * No status means no label will be shown next to the service name.\n    * Otherwise we show a label with \"Enabled\"/\"Disabled\", depending on the passed value.\n    */\n   @Input()\n   status: Status;\n\n   /**\n    * If set to true, the card header will have cdkDragHeader attribute added, which\n    * shows a \"move\" cursor. This can be used in the context of drag lists.\n    */\n   @Input()\n   allowDragging: boolean;\n\n   private _isExpanded: boolean;\n\n   /*\n    * Whether to expand or collapse the service card.\n    */\n   @Input()\n   set isExpanded(value: boolean) {\n      if (this._isExpanded !== value) {\n         this._isExpanded = value;\n         this.isExpandedChange.emit(this._isExpanded);\n      }\n   }\n\n   get isExpanded(): boolean {\n      // Always coerce as non-set value /i.e., undefined/ is considered true.\n      // See https://bugzilla.eng.vmware.com/show_bug.cgi?id=2836825\n      return !!this._isExpanded;\n   }\n\n   @Output()\n   isExpandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n   get statusLabelClass(): string {\n      if (this.status === Status.Enabled) {\n         return StatusCardComponent.ENABLED_SERVICE_LABELS.join(\" \");\n      } else if (this.status === Status.Partial) {\n         return StatusCardComponent.PARTIAL_ENABLED_SERVICE_LABELS.join(\" \");\n      }\n      return StatusCardComponent.DISABLED_SERVICE_LABELS.join(\" \");\n   }\n\n   get statusLabel(): string {\n      if (this.status === Status.Enabled) {\n         return VsanUiUtils.getString(\"vsan.services.enabled\");\n      } else if (this.status === Status.Partial) {\n         return VsanUiUtils.getString(\"vsan.services.partial\");\n      }\n      return VsanUiUtils.getString(\"vsan.services.disabled\");\n   }\n}\n","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-status-card [label]=\"'vsan.services.performance.title.label' | localized\"\n                  [allowDragging]=\"true\"\n                  [status]=\"ServiceUtils.getServiceStatus(status)\"\n                  [(isExpanded)]=\"isExpanded\">\n   <perf-configuration [status]=\"status\"\n                       [vcCapabilityData]=\"vcCapabilityData\"\n                       [vcPermissions]=\"vcPermissions\"\n                       [errorMessage]=\"errorMessage\"\n                       [config]=\"config\">\n   </perf-configuration>\n   <div *ngIf=\"config && ServiceUtils.isSupported(status)\" class=\"card-footer\">\n      <clr-tooltip>\n         <span clrTooltipTrigger [vsan-ignore-focus]=\"!editTooltip\">\n            <button id=\"edit-perf-config\"\n                    class=\"btn btn-sm btn-link\"\n                    aria-describedby=\"edit-perf-service-description\"\n                    [disabled]=\"editTooltip\"\n                    (click)=\"edit()\">\n               {{ServiceUtils.getActionTitle(status)}}\n            </button>\n         </span>\n         <clr-tooltip-content *ngIf=\"editTooltip\"\n                              id=\"edit-perf-service-description\"\n                              clrPosition=\"top-right\"\n                              clrSize=\"md\">\n            {{editTooltip}}\n         </clr-tooltip-content>\n      </clr-tooltip>\n   </div>\n</vsan-status-card>\n","<!-- Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<!-- Loading indicator -->\n<span *ngIf=\"isLoading\" id=\"loading-indicator\" class=\"spinner central-spinner\"></span>\n\n<vsan-validation id=\"services-validation\"\n                 *ngIf=\"errorMessages.length > 0\"\n                 [allowClose]=\"false\"\n                 [(alerts)]=\"errorMessages\"\n                 (onClosed)=\"errorMessages = []\">\n</vsan-validation>\n\n<ng-container *ngIf=\"!isLoading\">\n\n   <vsan-validation id=\"services-ha-dpm-validation\"\n                    *ngIf=\"hasHaDpmWarnings\"\n                    [allowClose]=\"false\"\n                    [alertType]=\"'warning'\"\n                    [alerts]=\"haDpmWarningMessages\"\n                    [allowExpandCollapse]=\"false\"\n                    [alertsExpanded]=\"true\"\n                    [actionLinks]=\"getHaDpmActionLinks()\">\n   </vsan-validation>\n\n   <div id=\"vsan-info-container\" class=\"vsan-info-container\">\n      <h5 vsan-auto-focus>\n         {{\"vsan.services.header\" | localized}}\n      </h5>\n      <div *ngIf=\"vsanConfig.isEnabled || isComputeOnlyCluster()\" class=\"actions-container\">\n         <!-- Shutdown cluster action button -->\n         <clr-tooltip *ngIf=\"isShutdownActionAvailable\">\n            <span clrTooltipTrigger [vsan-ignore-focus]=\"isShutdownActionEnabled\">\n               <button id=\"shutdown-action\"\n                       class=\"btn btn-sm btn-link no-spacing\"\n                       aria-describedby=\"shutdown-cluster-disabled-description\"\n                       (click)=\"shutdownCluster()\"\n                       [disabled]=\"!isShutdownActionEnabled\">\n                  {{\"vsan.cluster.shutdown.wizard.title\" | localized}}\n               </button>\n            </span>\n            <clr-tooltip-content *ngIf=\"!isShutdownActionEnabled\"\n                                 id=\"shutdown-cluster-disabled-description\"\n                                 clrPosition=\"bottom-left\"\n                                 clrSize=\"lg\">\n               {{getShutdownDisabledReason()}}\n            </clr-tooltip-content>\n         </clr-tooltip>\n         <!-- Turn OFF vSAN action button -->\n         <clr-tooltip>\n            <span clrTooltipTrigger [vsan-ignore-focus]=\"isTurnOffVsanEnabled\">\n               <button id=\"turn-off-action\"\n                       class=\"btn btn-sm btn-link no-spacing\"\n                       aria-describedby=\"turn-off-vsan-disabled-description\"\n                       (click)=\"turnOffVsan()\"\n                       [disabled]=\"!isTurnOffVsanEnabled\">\n                  {{\"vsan.generalConfig.disableVsan.warning.title\" | localized}}\n               </button>\n            </span>\n            <clr-tooltip-content *ngIf=\"!isTurnOffVsanEnabled\"\n                                 id=\"turn-off-vsan-disabled-description\"\n                                 clrPosition=\"bottom-left\"\n                                 clrSize=\"lg\">\n               {{getTurnOffVsanDisabledReason()}}\n            </clr-tooltip-content>\n         </clr-tooltip>\n      </div>\n   </div>\n   <vsan-validation *ngIf=\"successMessages.length\"\n                    id=\"success-messages\"\n                    [alertType]=\"'success'\"\n                    [(alerts)]=\"successMessages\">\n   </vsan-validation>\n   <vsan-unavailable-view *ngIf=\"unavailableViewSpec\"\n                          [clusterRef]=\"clusterRef\"\n                          [unavailableViewSpec]=\"unavailableViewSpec\"\n                          [refreshAfterCompletion]=\"false\"\n                          [hasEditPrivilege]=\"unavailableViewActionPermission\">\n   </vsan-unavailable-view>\n   <vsan-cluster-power-state-change-progress *ngIf=\"!unavailableViewSpec && isClusterChangingPowerState\"\n                                             [clusterRef]=\"clusterRef\"\n                                             (clusterPowerStateChanged)=\"clusterPowerStateChanged()\">\n   </vsan-cluster-power-state-change-progress>\n   <!-- vSAN enabled -->\n   <ng-container *ngIf=\"!unavailableViewSpec && !isClusterChangingPowerState\">\n      <!-- Common upgrade component, only visible when old disks or old format objects exist. -->\n      <vsan-upgrade *ngIf=\"upgradeData\"\n                    [upgradeData]=\"upgradeData\"\n                    [hasUpgradePermission]=\"editClusterPermission && configureStoragePermission\"\n                    [showCompatibilityWarning]=\"true\"\n                    [visibleWhenUpToDate]=\"isVsanUpgradeVisible\"\n                    (precheckComplete)=\"fetchPrecheckUpgradeData()\"\n                    (upgradeComplete)=\"vsanUpgradeComplete()\">\n      </vsan-upgrade>\n      <!-- The services configuration cards -->\n      <vsan-drag-and-drop *ngIf=\"showCards\"\n                          [view]=\"cardsView\"\n                          [cardTemplates]=\"serviceTemplates\">\n      </vsan-drag-and-drop>\n   </ng-container>\n</ng-container>\n<!-- The service cards are defined in templates, which can be included inside column-card-container\n     as dragable items. -->\n<ng-template vsan-drag-service=\"{{VSAN_MAX_CARD}}\"\n             [visible]=\"clusterCapabilityData?.isVsanMaxSingleTierSupported\">\n   <vsan-max-settings\n         [clusterName]=\"clusterName\"\n         [vsanConfig]=\"vsanConfig\"\n         [editClusterPermission]=\"editClusterPermission\"\n         [isEmptyCluster]=\"!hostCount\"\n         (editTaskStarted)=\"awaitThenInvoke($event, queryVsanGeneralConfig)\">\n   </vsan-max-settings>\n</ng-template>\n<ng-template vsan-drag-service=\"{{SUPPORT_INSIGHT_CARD}}\"\n             [visible]=\"vcCapabilityData?.isSupportInsightSupported && !ceipEnabled && !isComputeOnlyCluster()\">\n   <!-- Support Insight -->\n   <vsan-support-insight [editClusterPermission]=\"editClusterPermission\">\n      <vsan-validation *ngIf=\"supportInsightError\"\n                       [alert]=\"supportInsightError\"\n                       [isSmall]=\"true\">\n      </vsan-validation>\n   </vsan-support-insight>\n</ng-template>\n<ng-template vsan-drag-service=\"{{PERFORMANCE_SERVICE_CARD}}\"\n             [visible]=\"!isComputeOnlyCluster()\">\n   <vsan-performance-service\n         [clusterRef]=\"clusterRef\"\n         [clusterName]=\"clusterName\"\n         [config]=\"perfSvcConfig\"\n         [status]=\"perfSvsStatus\"\n         [vcCapabilityData]=\"vcCapabilityData\"\n         [clusterPermissions]=\"clusterPermissions\"\n         [vcPermissions]=\"vcPermissions\">\n   </vsan-performance-service>\n</ng-template>\n<ng-template vsan-drag-service=\"{{FILE_SERVICE_CARD}}\"\n             [visible]=\"vcCapabilityData?.isFileServiceSupported && !isComputeOnlyCluster()\">\n   <vsan-file-service [clusterRef]=\"clusterRef\"\n                      [clusterName]=\"clusterName\"\n                      [vcCapabilityData]=\"vcCapabilityData\"\n                      [latestDiskFmtVersion]=\"upgradeData?.latestVersion\"\n                      [minDiskFmtVersion]=\"upgradeData?.upgradeDiskData?.minVersion\"\n                      [clusterPermissions]=\"clusterPermissions\"\n                      [availableDomains]=\"availableDomains\"\n                      [isStretchedCluster]=\"isStretchedCluster\"\n                      [vcPermissions]=\"vcPermissions\"\n                      [isPerfServiceEnabled]=\"perfSvcEnabled\">\n   </vsan-file-service>\n</ng-template>\n<ng-template vsan-drag-service=\"{{ISCSI_SERVICE_CARD}}\"\n             [visible]=\"!isComputeOnlyCluster()\">\n   <vsan-iscsi-target-settings\n         [clusterRef]=\"clusterRef\"\n         [clusterName]=\"clusterName\"\n         [clusterPermissions]=\"clusterPermissions\"\n         [vcPermissions]=\"vcPermissions\">\n   </vsan-iscsi-target-settings>\n</ng-template>\n\n<ng-template vsan-drag-service=\"{{DATA_SERVICES_CARD}}\"\n             [visible]=\"!isComputeOnlyCluster()\">\n   <vsan-data-services\n         [vsanConfig]=\"vsanConfig\"\n         [clusterRef]=\"clusterRef\"\n         [clusterName]=\"clusterName\"\n         [permissions]=\"clusterPermissions\"\n         [clusterCapabilityData]=\"clusterCapabilityData\"\n         (editTaskStarted)=\"awaitThenInvoke($event, queryVsanGeneralConfig)\">\n   </vsan-data-services>\n</ng-template>\n<ng-template vsan-drag-service=\"{{CAPACITY_RESERVE_CARD}}\"\n             [visible]=\"vcCapabilityData?.isSlackSpaceReservationSupported && !isComputeOnlyCluster()\">\n   <vsan-capacity-management-settings\n         [isSlackSpaceCapacitySupported]=\"clusterCapabilityData?.isSlackSpaceReservationSupported\"\n         [isCapacityCustomizableThresholdsSupportedOnVc]=\"vcCapabilityData?.isCapacityCustomizableThresholdsSupported\"\n         [permissions]=\"clusterPermissions\"\n         [clusterName]=\"clusterName\"\n         [upgradeData]=\"upgradeData\">\n   </vsan-capacity-management-settings>\n</ng-template>\n<ng-template vsan-drag-service=\"{{ADVANCED_OPTIONS_CARD}}\"\n             [visible]=\"vsanConfig?.advancedOptions && !isComputeOnlyCluster()\">\n   <vsan-advanced-options\n         [config]=\"vsanConfig.advancedOptions\"\n         [clusterRef]=\"clusterRef\"\n         [clusterName]=\"clusterName\"\n         [clusterCapabilityData]=\"clusterCapabilityData\"\n         [vcCapabilityData]=\"vcCapabilityData\"\n         [permissions]=\"clusterPermissions\"\n         (editTaskStarted)=\"awaitThenInvoke($event, queryVsanGeneralConfig)\">\n   </vsan-advanced-options>\n</ng-template>\n<ng-template vsan-drag-service=\"{{NETWORK_OPTIONS_CARD}}\"\n             [visible]=\"vcCapabilityData?.isRdmaSupported && !isComputeOnlyCluster()\">\n   <vsan-network-options\n         [clusterRef]=\"clusterRef\"\n         [clusterName]=\"clusterName\"\n         [vsanConfig]=\"vsanConfig\"\n         [clusterCapabilityData]=\"clusterCapabilityData\"\n         [editClusterPermission]=\"editClusterPermission\"\n         [isStretchedCluster]=\"isStretchedCluster\"\n         [isEmptyCluster]=\"!hostCount\"\n         (editTaskStarted)=\"awaitThenInvoke($event, queryVsanGeneralConfig)\">\n   </vsan-network-options>\n</ng-template>\n<ng-template vsan-drag-service=\"{{HISTORICAL_HEALTH_CARD}}\"\n             [visible]=\"vcCapabilityData?.isHistoricalHealthSupported && vsanConfig?.historicalHealthConfig\">\n   <vsan-historical-health-settings\n         [config]=\"vsanConfig.historicalHealthConfig\"\n         [clusterName]=\"clusterName\"\n         [clusterRef]=\"clusterRef\"\n         [editClusterPermission]=\"editClusterPermission\"\n         (editTaskStarted)=\"awaitThenInvoke($event, queryVsanGeneralConfig)\">\n   </vsan-historical-health-settings>\n</ng-template>\n","<!--Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-edit-prompt\n      [title]=\"'vsan.generalConfigDialog.title' | localized\"\n      [subtitle]=\"contextObjectName\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"loading  || hasInitializationError\"\n      [(alertMessages)]=\"validationErrors\"\n      (onConfirm)=\"ok()\">\n\n   <vsan-general-settings *ngIf=\"!loading\"\n                          [clusterRef]=\"clusterRef\"\n                          [config]=\"config\"\n                          [predefinedHeight]=\"contextHeight\"\n                          [showFileServiceOweDescription]=\"showFileServiceOweDescription\"\n                          (vsanConfigSpecChange)=\"vsanConfigSpec=$event\">\n   </vsan-general-settings>\n\n</vsan-edit-prompt>\n","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-status-card [label]=\"'vsan.iscsi.title' | localized\"\n                  [allowDragging]=\"true\"\n                  [status]=\"ServiceUtils.getServiceStatus(status)\"\n                  [(isExpanded)]=\"isExpanded\">\n   <!-- Await the configuration and show loading -->\n   <span id=\"loading-iscsi-settings\"\n         *ngIf=\"!config && !errorMessage\"\n         class=\"spinner spinner-md central-spinner\">\n   </span>\n   <iscsi-configuration *ngIf=\"config\"\n                        [errorMessage]=\"errorMessage\"\n                        [config]=\"config\"\n                        [status]=\"status\">\n   </iscsi-configuration>\n   <div *ngIf=\"config && ServiceUtils.isSupported(status)\" class=\"card-footer\">\n      <clr-tooltip>\n         <span clrTooltipTrigger [vsan-ignore-focus]=\"!editTooltip\">\n            <button id=\"edit-iscsi-config\"\n                    class=\"btn btn-sm btn-link\"\n                    aria-describedby=\"edit-iscsi-service-description\"\n                    [disabled]=\"editTooltip\"\n                    (click)=\"edit()\">\n               {{ServiceUtils.getActionTitle(status)}}\n            </button>\n         </span>\n         <clr-tooltip-content *ngIf=\"editTooltip\"\n                              id=\"edit-iscsi-service-description\"\n                              clrPosition=\"top-right\"\n                              clrSize=\"md\">\n            {{editTooltip}}\n         </clr-tooltip-content>\n      </clr-tooltip>\n   </div>\n</vsan-status-card>\n","<!-- Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-status-card [label]=\"'vsan.services.fileservices.title' | localized\"\n                  [allowDragging]=\"true\"\n                  [status]=\"ServiceUtils.getServiceStatus(status)\"\n                  [(isExpanded)]=\"isExpanded\">\n   <vsan-validation id=\"preflight-check-error\"\n                    *ngIf=\"preflightCheckErrors?.length\"\n                    [(alerts)]=\"preflightCheckErrors\">\n   </vsan-validation>\n   <file-service-configuration [clusterRef]=\"clusterRef\"\n                               [clusterName]=\"clusterName\"\n                               [errorMessage]=\"errorMessage\"\n                               [vcCapabilityData]=\"vcCapabilityData\"\n                               [isPerfServiceEnabled]=\"isPerfServiceEnabled\"\n                               [availableDomains]=\"availableDomains\"\n                               [isStretchedCluster]=\"isStretchedCluster\"\n                               [editClusterPermission]=\"editClusterPermission\"\n                               [upgradeFsvmTask]=\"upgradeFsvmTask\"\n                               (fileServiceStatusLoaded)=\"onFileServiceStatusLoaded($event)\">\n   </file-service-configuration>\n   <div *ngIf=\"!loading && status && ServiceUtils.isSupported(status)\" class=\"card-footer\">\n      <div class=\"btn-container\">\n         <clr-tooltip *ngIf=\"ServiceUtils.isDisabled(status)\">\n            <span clrTooltipTrigger [vsan-ignore-focus]=\"!enableBtnDisabled\">\n               <button id=\"enable-file-services\"\n                       class=\"btn btn-sm btn-link\"\n                       aria-describedby=\"enable-file-service-description\"\n                       [disabled]=\"enableBtnDisabled\"\n                       (click)=\"editFileServices()\">\n                  {{\"vsan.generalConfig.button.enable\" | localized}}\n               </button>\n            </span>\n            <clr-tooltip-content *ngIf=\"enableBtnDisabled\"\n                                 id=\"enable-file-service-description\"\n                                 clrPosition=\"top-right\"\n                                 clrSize=\"md\">\n               {{enableDisabledTitle}}\n            </clr-tooltip-content>\n         </clr-tooltip>\n         <ng-container *ngIf=\"!ServiceUtils.isDisabled(status)\">\n            <clr-tooltip>\n               <span clrTooltipTrigger [vsan-ignore-focus]=\"!commonDisabledTitle\">\n                  <button id=\"disable-file-services\"\n                          class=\"btn btn-sm btn-link\"\n                          aria-describedby=\"disable-file-service-description\"\n                          [disabled]=\"commonDisabledTitle\"\n                          (click)=\"disableFileServices()\">\n                     {{\"vsan.generalConfig.button.disable\" | localized}}\n                  </button>\n               </span>\n               <clr-tooltip-content *ngIf=\"commonDisabledTitle\"\n                                    id=\"disable-file-service-description\"\n                                    clrPosition=\"top-right\"\n                                    clrSize=\"md\">\n                  {{commonDisabledTitle}}\n               </clr-tooltip-content>\n            </clr-tooltip>\n            <clr-tooltip>\n               <span clrTooltipTrigger [vsan-ignore-focus]=\"!upgradeDisabledReason\">\n                  <button id=\"upgrade-file-services\"\n                          class=\"btn btn-sm btn-link\"\n                          aria-describedby=\"upgrade-file-service-description\"\n                          [disabled]=\"upgradeDisabledReason\"\n                          (click)=\"upgradeFileServices()\">\n                     {{\"vsan.fileservices.upgrade.button.check.label\" | localized}}\n                  </button>\n               </span>\n               <clr-tooltip-content *ngIf=\"upgradeDisabledReason\"\n                                    id=\"upgrade-file-service-description\"\n                                    clrPosition=\"top-right\"\n                                    clrSize=\"md\">\n                  {{upgradeDisabledReason}}\n               </clr-tooltip-content>\n            </clr-tooltip>\n            <!--TODO: [rogerw] remove this section after the separation is done-->\n            <ng-container *ngIf=\"!vcCapabilityData.isSeparatingFileServiceWorkflowSupported\">\n               <ng-container [ngTemplateOutlet]=\"editButton\"\n                             [ngTemplateOutletContext]=\"{labelKey: 'vsan.generalConfig.button.edit'}\">\n               </ng-container>\n            </ng-container>\n         </ng-container>\n      </div>\n      <!--TODO: [rogerw] refine this section after the separation is done-->\n      <div class=\"btn-container\">\n         <ng-container *ngIf=\"vcCapabilityData.isSeparatingFileServiceWorkflowSupported && !ServiceUtils.isDisabled(status) && isFsDomainMissing\"\n                        [ngTemplateOutlet]=\"editButton\"\n                       [ngTemplateOutletContext]=\"{labelKey: 'vsan.services.fileservices.domain.configure.label'}\">\n         </ng-container>\n         <button *ngIf=\"vcCapabilityData.isSeparatingFileServiceWorkflowSupported && !ServiceUtils.isDisabled(status) && !isFsDomainMissing\"\n                 id=\"go-to-shares-btn\"\n                 class=\"btn btn-sm btn-link\"\n                 (click)=\"navigateToShares()\">\n            {{\"vsan.services.fileservices.domain.navigate.shares.label\" | localized}}\n         </button>\n      </div>\n   </div>\n</vsan-status-card>\n<ng-template #editButton let-labelKey=\"labelKey\">\n   <clr-tooltip>\n      <span clrTooltipTrigger [vsan-ignore-focus]=\"!commonDisabledTitle\">\n         <button id=\"edit-file-services-domain\"\n                 class=\"btn btn-sm\"\n                 [class.btn-link]=\"!vcCapabilityData.isSeparatingFileServiceWorkflowSupported\"\n                 [class.btn-primary]=\"vcCapabilityData.isSeparatingFileServiceWorkflowSupported\"\n                 aria-describedby=\"edit-file-service-description\"\n                 [disabled]=\"commonDisabledTitle\"\n                 (click)=\"editFileServices()\">\n            {{labelKey | localized}}\n         </button>\n      </span>\n      <clr-tooltip-content *ngIf=\"commonDisabledTitle\"\n                           id=\"edit-file-service-description\"\n                           clrPosition=\"top-right\"\n                           clrSize=\"md\">\n         {{commonDisabledTitle}}\n      </clr-tooltip-content>\n   </clr-tooltip>\n</ng-template>\n","<!-- Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-status-card [label]=\"'vsan.services.data.management.label' | localized\"\n                  [allowDragging]=\"true\"\n                  [(isExpanded)]=\"isExpanded\">\n   <data-services-configuration [clusterRef]=\"clusterRef\"\n                               [clusterCapabilityData]=\"clusterCapabilityData\"\n                               [vsanConfig]=\"vsanConfig\">\n   </data-services-configuration>\n   <div class=\"card-footer\">\n      <clr-tooltip>\n         <span clrTooltipTrigger [vsan-ignore-focus]=\"!editDisabledTitle\">\n            <!-- wrapped in span, because disabled element could not be clrTooltipTrigger for the tooltip -->\n            <button id=\"edit-config\"\n                    class=\"btn btn-sm btn-link\"\n                    aria-describedby=\"edit-data-management-description\"\n                    [disabled]=\"editDisabledTitle\"\n                    (click)=\"edit()\">\n                     {{'vsan.generalConfig.button.edit' | localized}}\n            </button>\n         </span>\n         <clr-tooltip-content *ngIf=\"editDisabledTitle\"\n                              id=\"edit-data-management-description\"\n                              clrPosition=\"top-right\"\n                              clrSize=\"md\">\n            {{editDisabledTitle}}\n         </clr-tooltip-content>\n      </clr-tooltip>\n      <clr-tooltip>\n         <span clrTooltipTrigger [vsan-ignore-focus]=\"!generateEncryptionKeysTitle\">\n            <button id=\"generate-new-keys\"\n                    class=\"btn btn-sm btn-link\"\n                    aria-describedby=\"generate-encryption-keys-description\"\n                    [disabled]=\"generateEncryptionKeysTitle\"\n                    (click)=\"generateEncryptionKeys()\">\n               {{'vsan.actions.encryption.rekey.label' | localized}}\n            </button>\n         </span>\n         <clr-tooltip-content\n               *ngIf=\"generateEncryptionKeysTitle\"\n               id=\"generate-encryption-keys-description\"\n               clrPosition=\"top-right\"\n               clrSize=\"md\">\n            {{generateEncryptionKeysTitle}}\n         </clr-tooltip-content>\n      </clr-tooltip>\n   </div>\n</vsan-status-card>\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nexport class ActionAvailableStatus {\n   constructor(public available: boolean, public message: string) { }\n}","\n      <vsan-question-prompt\n            title=\"{{'vsan.services.advancedOptions.largeClusterSupport.prompt.title' | localized}}\">\n         {{'vsan.services.advancedOptions.largeClusterSupport.prompt.text' | localized}}\n      </vsan-question-prompt>","<!-- Copyright 2022 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-status-card\n      [label]=\"'vsan.services.vsan.max.title.label' | localized\"\n      [status]=\"vsanMaxStatus\"\n      [allowDragging]=\"true\"\n      [(isExpanded)]=\"isExpanded\">\n   <div *ngIf=\"vsanConfig\" class=\"column-flex-container\">\n      <div class=\"clr-row\" id=\"vsan-managed-disk-claim-enabled\">\n         <label class=\"clr-col-5\">\n            {{\"vsan.services.vsan.max.diskClaim.label\" | localized}}\n         </label>\n         <div class=\"clr-col-7\">\n            {{ServiceUtils.geStatusLabel(vsanConfig.isDiskClaimVsanManaged, true)}}\n         </div>\n      </div>\n   </div>\n   <div class=\"card-footer\">\n      <clr-tooltip>\n         <span clrTooltipTrigger [vsan-ignore-focus]=\"isEditAllowed()\">\n            <!-- wrapped in span, because disabled element could not be clrTooltipTrigger for the tooltip -->\n            <button id=\"edit-vsan-max-setting-button\"\n                    class=\"btn btn-sm btn-link\"\n                    aria-describedby=\"edit-vsan-setting-description\"\n                    [disabled]=\"!isEditAllowed()\"\n                    (click)=\"edit()\">\n               {{\"vsan.generalConfig.button.edit\" | localized}}\n            </button>\n         </span>\n         <clr-tooltip-content *ngIf=\"!isEditAllowed()\"\n                              id=\"edit-vsan-setting-description\"\n                              clrPosition=\"top-right\"\n                              clrSize=\"md\">\n            {{getDisabledEditReason()}}\n         </clr-tooltip-content>\n      </clr-tooltip>\n   </div>\n</vsan-status-card>","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanServiceStatus} from \"@generated/vsan-service-status\";\nimport {PerfStatsObjectInfo} from \"@generated/perf-stats-object-info\";\nimport {ServiceUtils} from \"./service.utils\";\nimport {Privileges} from \"@generated/privileges\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {VsanConfigService} from \"@generated/vsan-config-service\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {NavigationService} from \"@navigation/navigation.service\";\nimport {Icon} from \"@util/icon\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {PersistedProperty} from \"@service/browser-storage.service\";\nimport {VsanRoutes} from \"../../vsan-routes\";\nimport {VsanDialogProperties, VsanDialogUtil} from \"@util/vsan-dialog-util\";\n\n@Component({\n   selector: \"vsan-performance-service\",\n   templateUrl: \"performance-service.html\",\n})\nexport class PerformanceServiceComponent implements OnInit {\n\n   ServiceUtils: typeof ServiceUtils = ServiceUtils;\n   Icon: typeof Icon = Icon;\n\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Input()\n   clusterName: string;\n\n   @Input()\n   vcCapabilityData: VsanCapabilityData;\n\n   @PersistedProperty(\"vsan-perf-service-card-expanded-state\")\n   isExpanded: boolean;\n\n   @Input()\n   clusterPermissions: Map<string, boolean>;\n\n   @Input()\n   vcPermissions: Map<string, boolean>;\n\n   @Input()\n   status: VsanServiceStatus;\n\n   @Input()\n   config: PerfStatsObjectInfo;\n\n   editClusterPermission: boolean;\n   readPoliciesPermission: boolean;\n\n   errorMessage: string;\n\n   constructor(private configService: VsanConfigService,\n         private taskService: TaskMonitorService,\n         private navigationService: NavigationService) {\n   }\n\n   ngOnInit(): void {\n      this.editClusterPermission = this.clusterPermissions.get(Privileges.EDIT_CLUSTER());\n      this.readPoliciesPermission = this.vcPermissions.get(Privileges.READ_POLICIES());\n      // Expand the card by default if the service is enabled\n      if (this.status === VsanServiceStatus.ENABLED && VsanUiUtils.isUnset(this.isExpanded)) {\n         this.isExpanded = true;\n      }\n   }\n\n   @RefreshHandler\n   clearErrors(): void {\n      this.errorMessage = null;\n   }\n\n   get editTooltip(): string {\n      if (!this.config) {\n         // The config data is still loading\n         return \"\";\n      }\n      if (!this.editClusterPermission || !this.readPoliciesPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      }\n      return \"\";\n   }\n\n   edit(): void {\n      const size: VsanDialogProperties = this.config.serviceEnabled\n            ? VsanDialogUtil.PERF_SVC_EDIT_ACTION_DIALOG\n            : VsanDialogUtil.PERF_SVC_ENABLE_ACTION_DIALOG;\n      new ModalBuilder(VsanRoutes.PERFORMANCE_CONFIG)\n            .setSize(size.width, size.height)\n            .open({\n               clusterRef: this.clusterRef,\n               clusterName: this.clusterName,\n            })\n            .then(this.awaitThenInvoke);\n   }\n\n   onPolicyClicked(storagePolicyId: string): void {\n      this.navigationService.navigateToVmStoragePoliciesView(storagePolicyId);\n   }\n\n   private awaitThenInvoke = (taskRef: ManagedObject) => {\n      this.taskService.getAwaitResult(taskRef)\n            .then(() => VsanUiUtils.globalRefresh())\n            .catch(e => this.errorMessage = e);\n   };\n}\n","<!-- Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-status-card [label]=\"'vsan.services.enforcereservation.title' | localized\"\n                  [allowDragging]=\"true\"\n                  [(isExpanded)]=\"isExpanded\">\n   <!-- Await the configuration as well as the upgradeData -->\n   <span id=\"loading-capacity-reservation\" *ngIf=\"loading\" class=\"spinner spinner-md central-spinner\"></span>\n   <span id=\"no-supported-capacity-reservation\"\n         *ngIf=\"!isSlackSpaceCapacitySupported && !isCapacityCustomizableThresholdsSupportedOnVc\"\n         class=\"bold-no-selection\" >\n             {{\"vsan.services.not.supported\" | localized}}\n   </span>\n   <capacity-reservation-configuration *ngIf=\"!loading\"\n                                       [capacityManagementData]=\"capacityManagementData\"\n                                       [isCapacityCustomizableThresholdsSupportedOnVc]=\"isCapacityCustomizableThresholdsSupportedOnVc\"\n                                       [isSlackSpaceCapacitySupported]=\"isSlackSpaceCapacitySupported\">\n   </capacity-reservation-configuration>\n   <div class=\"card-footer\" *ngIf=\"isSlackSpaceCapacitySupported || isCapacityCustomizableThresholdsSupportedOnVc\">\n      <clr-tooltip>\n            <span clrTooltipTrigger [vsan-ignore-focus]=\"capacityManagementStatus.isAvailable\">\n               <button id=\"edit-reservation-config\"\n                       class=\"btn btn-sm btn-link\"\n                       aria-describedby=\"edit-capacity-reserve-description\"\n                       [disabled]=\"!capacityManagementStatus.isAvailable\"\n                       (click)=\"edit()\">\n                  {{\"vsan.generalConfig.button.edit\" | localized}}\n               </button>\n            </span>\n         <clr-tooltip-content\n               *ngIf=\"capacityManagementStatus.description\"\n               id=\"edit-capacity-reserve-description\"\n               clrPosition=\"top-right\"\n               clrSize=\"lg\">\n            {{capacityManagementStatus.description}}\n         </clr-tooltip-content>\n      </clr-tooltip>\n   </div>\n   <vsan-validation *ngIf=\"errorMessages.length\" [(alerts)]=\"errorMessages\"></vsan-validation>\n</vsan-status-card>\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * Parse version string to a comparable object\n * '7.0.1.1000-39027875' => 'major.minor.revision.patchLevel-build'\n */\nexport class Version {\n   static readonly OVF_VERSION_PATTERN: RegExp = /.+(\\d+\\.\\d+\\.\\d+\\.\\d+-\\d+)_.+\\.ovf/;\n\n   major: number;\n   minor: number;\n   revision: number;\n   patchLevel: number;\n   build: number;\n\n   constructor(version: string) {\n      if (VsanUiUtils.isEmpty(version)) {\n         return;\n      }\n      let parts: string[] = version.split(\"-\");\n      if (parts.length > 1) {\n         this.build = parseInt(parts[1], 0);\n      }\n      parts = parts[0].split(\".\");\n      this.major = parseInt(parts[0], 0);\n      if (parts.length > 1) {\n         this.minor = parseInt(parts[1], 0);\n         if (parts.length > 2) {\n            this.revision = parseInt(parts[2], 0);\n         }\n         if (parts.length > 3) {\n            this.patchLevel = parseInt(parts[3], 0);\n         }\n      }\n   }\n\n   static isLarger(v1: Version, v2: Version): boolean {\n      return !!v1 && v1.compare(v2) > 0;\n   }\n\n   static isSame(v1: Version, v2: Version): boolean {\n      return (!v1 && !v2) || (!!v1 && v1.compare(v2) === 0);\n   }\n\n   /**\n    * Check if the v1 version is newer major version than the v2 version.\n    * We don't compare the build number here because for major version it doesn't have build info.\n    */\n   static isNewMajorRelease(v1: Version, v2: Version): boolean {\n      return v1.major > v2.major || v1.minor > v2.minor || v1.revision > v2.revision;\n   }\n\n   /**\n    * Method to get the ovf file version from the file name or path\n    */\n   static fromFilePathOrName(ovfFilePathOrName: string): Version {\n      return new Version(this.OVF_VERSION_PATTERN.exec(ovfFilePathOrName)[1]);\n   }\n\n   compare(that: Version): number {\n      const orderedFields: string[] = [\"major\", \"minor\", \"revision\", \"patchLevel\", \"build\"];\n      for (let i: number = 0; i <= orderedFields.length; i++) {\n         const fieldName: string = orderedFields[i];\n         if (this[fieldName] !== that[fieldName]) {\n            return this[fieldName] > that[fieldName] ? 1 : -1;\n         }\n      }\n      return 0;\n   }\n\n   toString(): string {\n      let versionStr: string = `${this.major}.${this.minor}.${this.revision}`;\n      if (this.patchLevel) {\n         versionStr += `.${this.patchLevel}`;\n      }\n      if (this.build) {\n         versionStr += `-${this.build}`;\n      }\n      return versionStr;\n   }\n}\n","<vsan-status-card [label]=\"'vsan.service.supportInsight.name' | localized\"\n                  [(isExpanded)]=\"isExpanded\"\n                  [allowDragging]=\"true\"\n                  [status]=\"Status.Disabled\">\n   <ng-content select=\"vsan-validation\"></ng-content>\n   <div id=\"support-insight-disabled\">\n      <div>{{\"vsan.service.ceip.disabled.description\" | localized}}</div>\n      <a [external-link]=\"'vsan.service.ceip.link' | localized\" [articleId]=\"KnowledgeBaseId.SUPPORT_INSIGHT\"></a>\n   </div>\n   <div class=\"card-footer\">\n      <clr-tooltip>\n         <span clrTooltipTrigger [vsan-ignore-focus]=\"editClusterPermission\">\n            <button id=\"edit-support-insight-config\"\n                    class=\"btn btn-sm btn-link\"\n                    aria-describedby=\"enable-support-insight-description\"\n                    (click)=\"navigateToCeip()\"\n                    [disabled]=\"!editClusterPermission\">\n               {{\"vsan.service.ceip.disabled.configure\" | localized}}\n            </button>\n         </span>\n         <clr-tooltip-content *ngIf=\"!editClusterPermission\"\n                              id=\"enable-support-insight-description\"\n                              clrPosition=\"top-right\"\n                              clrSize=\"md\">\n            {{\"vsan.common.nopermissions\" | localized}}\n         </clr-tooltip-content>\n      </clr-tooltip>\n   </div>\n</vsan-status-card>","\nexport interface EncryptionRekeySpec {\n\n   reEncryptData: boolean;\n   allowReducedRedundancy: boolean;\n} //class EncryptionRekeySpec\n\nexport module EncryptionRekeySpec{\nexport class Factory {\n\n   static create = (reEncryptData: boolean, allowReducedRedundancy: boolean): EncryptionRekeySpec => {\n      return { reEncryptData: reEncryptData, allowReducedRedundancy: allowReducedRedundancy, };\n   }\n\n\n} //class Factory\n\n} //module EncryptionRekeySpec\n","import {VsanIscsiAuthSpec} from '@generated/vsan-iscsi-auth-spec';\nimport {StoragePolicyData} from '@generated/storage-policy-data';\n\nexport interface VsanIscsiConfigEditSpec {\n\n   enableIscsiTargetService: boolean;\n   network: string;\n   port: number;\n   authSpec: VsanIscsiAuthSpec;\n   policy: StoragePolicyData;\n} //class VsanIscsiConfigEditSpec\n\nexport module VsanIscsiConfigEditSpec{\nexport class Factory {\n\n   static create = (enableIscsiTargetService: boolean, network: string, port: number, authSpec: VsanIscsiAuthSpec, policy: StoragePolicyData): VsanIscsiConfigEditSpec => {\n      return { enableIscsiTargetService: enableIscsiTargetService, network: network, port: port, authSpec: authSpec, policy: policy, };\n   }\n\n\n} //class Factory\n\n} //module VsanIscsiConfigEditSpec\n","<!-- Copyright 2018-2021 VMware, Inc. All rights reserved. VMware Confidential -->\n<vsan-edit-prompt\n      [title]=\"'vsan.services.advancedOptions.title' | localized\"\n      [subtitle]=\"clusterName\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"blockApplyButton\"\n      [(alertMessages)]=\"alertMessages\"\n      (onConfirm)=\"confirm()\">\n   <form clrForm clrLayout=\"horizontal\" [formGroup]=\"advancedSettings\">\n      <clr-input-container>\n         <label id=\"object-repair-timer-label\" class=\"clr-col-12 clr-col-md-3\">\n            {{\"vsan.services.advancedOptions.objectRepairTimer.label\" | localized}}\n         </label>\n         <input clrInput\n                id=\"object-repair-timer\"\n                class=\"clr-col-12 clr-col-md-9\"\n                name=\"objectRepairTimer\"\n                type=\"number\"\n                [formControlName]=\"objectRepairTimer\"/>\n         <clr-control-helper>\n            {{\"vsan.services.advancedOptions.objectRepairTimer.signpost\" | localized}}\n         </clr-control-helper>\n         <clr-control-error>\n            {{\"vsan.services.advancedOptions.objectRepairTimer.wrongInput\" | localized}}\n         </clr-control-error>\n      </clr-input-container>\n\n      <clr-toggle-container>\n         <clr-toggle-wrapper>\n            <input type=\"checkbox\"\n                   clrToggle\n                   name=\"siteReadLocality\"\n                   [formControlName]=\"isSiteReadLocalityEnabled\"\n                  [vsan-disable-form-control]=\"!isStretchedCluster\" />\n            <label id=\"site-read-locality-label\">\n               {{\"vsan.services.advancedOptions.siteReadLocality.label\" | localized}}\n            </label>\n         </clr-toggle-wrapper>\n         <clr-control-helper>\n            {{\"vsan.services.advancedOptions.siteReadLocality.signpost\" | localized}}\n         </clr-control-helper>\n      </clr-toggle-container>\n\n      <clr-toggle-container>\n         <clr-toggle-wrapper>\n            <input type=\"checkbox\"\n                   clrToggle\n                   name=\"thinSwap\"\n                   [formControlName]=\"isCustomizedSwapObjectEnabled\"/>\n            <label id=\"thin-swap-label\">\n               {{\"vsan.services.advancedOptions.thinSwap.label\" | localized}}\n            </label>\n         </clr-toggle-wrapper>\n         <clr-control-helper>\n            {{\"vsan.services.advancedOptions.thinSwap.signpost\" | localized}}\n         </clr-control-helper>\n      </clr-toggle-container>\n\n      <!-- Show toggle setting for large cluster support (more than 32 hosts) if it is NOT supported natively -->\n      <clr-toggle-container *ngIf=\"!clusterCapabilityData.isNativeLargeClusterSupported\">\n         <clr-toggle-wrapper>\n            <input type=\"checkbox\"\n                   clrToggle\n                   name=\"largeClusterSupport\"\n                   [formControlName]=\"largeClusterSupportEnabled\"\n                   [vsan-disable-form-control]=\"isRdmaEnabled\"/>\n            <label id=\"large-cluster-support-label\">\n               {{\"vsan.services.advancedOptions.largeClusterSupport.label\" | localized}}\n            </label>\n         </clr-toggle-wrapper>\n         <clr-control-helper>\n            {{largeClusterSupportMessage}}\n         </clr-control-helper>\n      </clr-toggle-container>\n\n      <clr-toggle-container *ngIf=\"clusterCapabilityData?.isGuestTrimUnmapSupported\">\n         <clr-toggle-wrapper>\n            <input type=\"checkbox\"\n                   clrToggle\n                   name=\"guestTrimUnmap\"\n                   [formControlName]=\"isGuestTrimUnmapEnabled\"/>\n            <label id=\"guest-trim-unmap-label\">\n               {{\"vsan.services.advancedOptions.guestTrimUnmap.label\" | localized}}\n            </label>\n         </clr-toggle-wrapper>\n         <clr-control-helper>\n            {{\"vsan.services.advancedOptions.guestTrimUnmap.signpost\" | localized}}\n         </clr-control-helper>\n      </clr-toggle-container>\n\n      <ng-container *ngIf=\"vcCapabilityData?.isAutomaticRebalanceSupported\">\n         <clr-toggle-container>\n            <clr-toggle-wrapper>\n               <input type=\"checkbox\"\n                      clrToggle\n                      name=\"automaticRebalance\"\n                      [formControlName]=\"isAutomaticRebalanceEnabled\"/>\n               <label id=\"automatic-rebalance-label\">\n                  {{\"vsan.services.advancedOptions.automaticRebalance.label\" | localized}}\n               </label>\n            </clr-toggle-wrapper>\n            <clr-control-helper>\n               {{\"vsan.services.advancedOptions.automaticRebalance.signpost\" | localized}}\n            </clr-control-helper>\n         </clr-toggle-container>\n\n         <clr-input-container>\n            <label id=\"rebalancing-threshold-label\" class=\"clr-col-12 clr-col-md-3\">\n               {{\"vsan.services.advancedOptions.rebalancingThreshold.label\" | localized}}\n            </label>\n            <input clrInput\n                   id=\"rebalancing-threshold\"\n                   class=\"clr-col-12 clr-col-md-9\"\n                   name=\"rebalancingThreshold\"\n                   type=\"number\"\n                   [formControlName]=\"rebalancingThreshold\"\n                   [vsan-disable-form-control]=\"!rebalancingThresholdEnabled\"/>\n            <clr-control-helper>\n               {{\"vsan.services.advancedOptions.rebalancingThreshold.signpost\" | localized}}\n            </clr-control-helper>\n            <clr-control-error>\n               {{\"vsan.services.advancedOptions.rebalancingThreshold.error\" | localized}}\n            </clr-control-error>\n         </clr-input-container>\n      </ng-container>\n   </form>\n</vsan-edit-prompt>\n\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {PersistedProperty} from \"@service/browser-storage.service\";\nimport {Status} from \"@component/card/status\";\nimport {HistoricalHealthConfig} from \"@generated/historical-health-config\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {Icon} from \"@util/icon\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {HistoricalHealthSettingsDialogComponent} from \"../health/config/historical-health-settings-dialog.component\";\nimport {ServiceUtils} from \"./service.utils\";\n\n@Component({\n   selector: \"vsan-historical-health-settings\",\n   styleUrls: [\"historical-health-settings.scss\"],\n   templateUrl: \"historical-health-settings.html\",\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HistoricalHealthSettingsComponent implements OnInit {\n   Icon: typeof Icon = Icon;\n   VsanUiUtils: typeof VsanUiUtils = VsanUiUtils;\n\n   @Input()\n   config: HistoricalHealthConfig;\n\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Input()\n   clusterName: string;\n\n   @Input()\n   editClusterPermission: boolean;\n\n   @Output()\n   editTaskStarted: EventEmitter<ManagedObject> = new EventEmitter<ManagedObject>();\n\n   @PersistedProperty(\"vsan-historical-health-card-status\")\n   isExpanded: boolean;\n\n   ngOnInit(): void {\n      // Expand the card by default if the service is enabled\n      if (this.config.isEnabled && VsanUiUtils.isUnset(this.isExpanded)) {\n         this.isExpanded = true;\n      }\n   }\n\n   getServiceStatus(): Status {\n      return this.config.isEnabled ? Status.Enabled : Status.Disabled;\n   }\n\n   get unavailableMessage(): string {\n      return !this.editClusterPermission ? VsanUiUtils.getString(\"vsan.common.nopermissions\") : \"\";\n   }\n\n   editHistoricalHealthSettings(): void {\n      HistoricalHealthSettingsDialogComponent.openDialog(this.clusterRef, this.clusterName, this.config)\n         .then((taskRef: ManagedObject) => this.editTaskStarted.emit(taskRef));\n   }\n}","<!--Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"card\">\n   <clr-accordion>\n      <clr-accordion-panel [clrAccordionPanelOpen]=\"isExpanded\"\n                           (clrAccordionPanelOpenChange)=\"isExpanded = $event\">\n         <clr-accordion-title>\n            <div class=\"card-header\" *ngIf=\"allowDragging\" cdkDragHandle>\n               <ng-container *ngTemplateOutlet=\"header\"></ng-container>\n            </div>\n            <div class=\"card-header\" *ngIf=\"!allowDragging\">\n               <ng-container *ngTemplateOutlet=\"header\"></ng-container>\n            </div>\n         </clr-accordion-title>\n         <!-- This is added to prevent dragging the card by its body -->\n         <clr-accordion-content (mousedown)=\"$event.stopPropagation()\">\n            <ng-content></ng-content>\n         </clr-accordion-content>\n      </clr-accordion-panel>\n   </clr-accordion>\n   <ng-content select=\".card-footer\"></ng-content>\n</div>\n\n<ng-template #header>\n   <h6 class=\"card-title\" vsan-show-title>{{label}}</h6>\n   <!-- Do not use [ngClass] here as it doesn't seem to work when this content is projected by vsan-card -->\n   <span *ngIf= \"status\" class=\"{{statusLabelClass}}\">{{statusLabel}}</span>\n</ng-template>","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {VsanFileServiceDomain} from \"@generated/vsan-file-service-domain\";\nimport {VsanFileServiceLastDomainFailureReport} from \"@generated/vsan-file-service-last-domain-failure-report\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {VsanServiceData} from \"@generated/vsan-service-data\";\nimport {VsanServiceStatus} from \"@generated/vsan-service-status\";\nimport {VsanVdfsConfig} from \"@generated/vsan-vdfs-config\";\nimport {VsanFileServicePrecheckResult} from \"@generated/vsan-file-service-precheck-result\";\nimport {DisableFileServicesModalContext} from \"@navigation/context/disable-file-services-modal-context\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {FileServicesConfigureWizardModalContext} from \"@navigation/context/file-services-configure-wizard-modal-context.data\";\nimport {Privileges} from \"@generated/privileges\";\nimport {EnableFileServiceModalContext} from \"../file-services/enable-service/enable-file-service-modal-context.data\";\nimport {ServiceUtils} from \"./service.utils\";\nimport {VsanConfigService} from \"@generated/vsan-config-service\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {PersistedProperty} from \"@service/browser-storage.service\";\nimport {VsanFileServiceConfigService} from \"@generated/vsan-file-service-config-service\";\nimport {Version} from \"@util/version\";\nimport {FileServiceUtil} from \"../file-services/file-service-util\";\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {UpgradeFileServiceModalContext} from \"../file-services/upgrade/upgrade-file-service-modal-context\";\nimport {AlertType} from \"@component/validation/alert-type\";\nimport {VsanFileServiceOvfProps} from \"@generated/vsan-file-service-ovf-props\";\nimport {Logger} from \"@util/logger\";\nimport {IpSettingData} from \"@component/configurations/file-service-configuration.component\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\n\n@Component({\n   selector: \"vsan-file-service\",\n   templateUrl: \"file-service.html\",\n   styleUrls: [\"file-service.scss\"],\n})\nexport class FileServiceComponent implements OnInit {\n   ServiceUtils: typeof ServiceUtils = ServiceUtils;\n   AlertType: typeof AlertType = AlertType;\n\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Input()\n   clusterName: string;\n\n   @Input()\n   clusterPermissions: Map<string, boolean>;\n\n   @Input()\n   vcPermissions: Map<string, boolean>;\n\n   @Input()\n   vcCapabilityData: VsanCapabilityData;\n\n   @Input()\n   latestDiskFmtVersion: string;\n\n   @Input()\n   minDiskFmtVersion: string;\n\n   @Input()\n   availableDomains: DomainOrHostData[];\n\n   @Input()\n   isStretchedCluster: boolean;\n\n   @Input()\n   isPerfServiceEnabled: boolean;\n\n   @PersistedProperty(\"vsan-file-service-card-expanded-status\")\n   isExpanded: boolean;\n\n   status: VsanServiceStatus;\n   vdfsConfig: VsanVdfsConfig;\n   ipSettings: IpSettingData[] = [];\n   affinitySiteSupported: boolean;\n   adConfigSupported: boolean;\n   largeScaleClusterSupported: boolean;\n\n   @ErrorMessage()\n   errorMessage: string;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   isFsDomainMissing: boolean;\n   upgradeFsvmTask: ManagedObject;\n   // Keep this one public as it is passed down to the performance service validation banner.\n   editClusterPermission: boolean;\n   private vcServerPermission: boolean;\n   // hasLatestOvf is used to show/hide the ovf page in wizard\n   private hasLatestOvf: boolean;\n   private latestOvfVersion: Version;\n   private fsvmVersion: Version;\n   private vcVersion: Version;\n   private hostVersion: Version;\n\n   private lastFailedDomainConfig: VsanFileServiceDomain;\n   private advancedPreflightCheckSupported: boolean;\n\n   preflightCheckErrors: string[];\n\n   constructor(private configService: VsanConfigService,\n         private taskService: TaskMonitorService,\n         private fileService: VsanFileServiceConfigService,\n         private navigationService: NavigationService) {\n   }\n\n   ngOnInit(): void {\n      this.editClusterPermission = this.clusterPermissions.get(Privileges.EDIT_CLUSTER());\n      this.vcServerPermission = this.vcPermissions.get(Privileges.GLOBAL_VCSERVER());\n   }\n\n   @Loader({srMessage: \"vsan.services.fileservices.title\", srMessageType: SrMessageType.DATA})\n   async onFileServiceStatusLoaded(fileServiceData: VsanServiceData): Promise<void> {\n      if (this.status && fileServiceData.status !== this.status) {\n         // refresh the TOC view to show/hide the File Shares link in the left navigation\n         this.status = null;\n         VsanUiUtils.globalRefresh();\n         return;\n      }\n      this.status = fileServiceData.status;\n      // Expand the card by default if the service is enabled\n      if (this.status === VsanServiceStatus.ENABLED && VsanUiUtils.isUnset(this.isExpanded)) {\n         this.isExpanded = true;\n      }\n      this.vdfsConfig = fileServiceData.details as VsanVdfsConfig;\n      // this.vdfsConfig === null means the hosts in this cluster are low version, stop here to avoid UI errors\n      if (!this.vdfsConfig) {\n         return;\n      }\n      this.isFsDomainMissing = !this.vdfsConfig.config?.domainConfig;\n      this.fsvmVersion = this.vdfsConfig.precheckResult\n            ? new Version(this.vdfsConfig.precheckResult.fsvmVersion)\n            : null;\n      this.vcVersion = new Version(this.vdfsConfig.precheckResult.vcVersion);\n      this.hostVersion = new Version(this.vdfsConfig.precheckResult.hostVersion);\n      this.adConfigSupported = this.vdfsConfig.precheckResult.activeDirectorySupported;\n      this.affinitySiteSupported = this.vdfsConfig.precheckResult.affinitySiteSupported && this.isStretchedCluster;\n      this.largeScaleClusterSupported = this.vdfsConfig.precheckResult.largeScaleClusterSupported;\n      this.advancedPreflightCheckSupported = this.vdfsConfig.precheckResult.advancedPreflightCheckSupported;\n      this.ipSettings = FileServiceUtil.getIpSettings(this.vdfsConfig, this.availableDomains);\n      await Promise.all([\n            this.loadLastDomainFailureReport(),\n            this.updateOvfData(),\n      ]);\n   }\n\n   /**\n    * Check the capability and load the last failed domain config if API supports\n    */\n   private async loadLastDomainFailureReport(): Promise<void> {\n      if (!this.advancedPreflightCheckSupported) {\n         return;\n      }\n      this.preflightCheckErrors = [];\n      const failureReport: VsanFileServiceLastDomainFailureReport =\n            await this.fileService.getLastDomainFailureReport(this.clusterRef);\n      this.lastFailedDomainConfig = failureReport.domainConfig;\n      if (this.lastFailedDomainConfig) {\n         // In edit FS domain workflow, the adConfig is not saved if there is no AD change, so we have to set it back\n         this.lastFailedDomainConfig.adConfig = this.vdfsConfig.config.domainConfig?.adConfig;\n         // only set the message when there is a domain config failure\n         this.preflightCheckErrors = [\n               VsanUiUtils.getString(\"vsan.services.fileservices.wizard.preflightcheck.error\"),\n               failureReport.error,\n         ];\n      }\n   }\n\n   /**\n    * Load the OVF properties, and don't throw exception if any error occurs\n    * because this only impact the 'Check Upgrade' button\n    */\n   private async getOvfProps(): Promise<VsanFileServiceOvfProps> {\n      try {\n         return await this.fileService.getPublicOvfProps(this.clusterRef);\n      } catch (e) {\n         Logger.error(e);\n      }\n      return null;\n   }\n\n   /**\n    * Parse the latest Ovf download URL to get the OVF version, and compare\n    * with the current OVF version to determine if the OVF can be upgraded.\n    * Also set this.hasLatestOvf and use it to show/hide the ovf page in FS wizard.\n    */\n   private async updateOvfData(): Promise<void> {\n      const ovfProps: VsanFileServiceOvfProps = await this.getOvfProps();\n      if (ovfProps && !VsanUiUtils.isEmpty(ovfProps.url)) {\n         this.latestOvfVersion = Version.fromFilePathOrName(ovfProps.url);\n         const existingOvfVersion: Version = new Version(this.vdfsConfig.precheckResult.ovfInstalled);\n         this.hasLatestOvf = Version.isSame(this.latestOvfVersion, existingOvfVersion);\n      }\n   }\n\n   get enableBtnDisabled(): boolean {\n      return !this.editClusterPermission || !this.vcServerPermission || !!this.vdfsPrecheckIssue;\n   }\n\n   get showPerfEnableWarning(): boolean {\n      return !this.isPerfServiceEnabled &&\n            this.vdfsConfig && this.vdfsConfig.config && this.vdfsConfig.config.isFileAnalyticsEnabled;\n   }\n\n   get enableDisabledTitle(): string {\n      if (!this.vcServerPermission || !this.editClusterPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      }\n      return this.vdfsPrecheckIssue;\n   }\n\n   get commonDisabledTitle(): string {\n      if (!this.editClusterPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      }\n      return \"\";\n   }\n\n   get upgradeDisabledReason(): string {\n      // Don't allow user to upgrade the OVF if the FS domain contains old host\n      const hasOldHost: boolean = Version.isLarger(this.vcVersion, this.hostVersion);\n      // Don't allow user to upgrade the OVF if the disk format version is old to avoid some unexpected errors,\n      // this is a limitation from the backend API\n      const oldDiskFormatVersion: boolean =\n            parseInt(this.latestDiskFmtVersion, 0) > parseInt(this.minDiskFmtVersion, 0);\n\n      const isLatestOvfVersionInstalled: boolean = this.latestOvfVersion\n            && !Version.isLarger(this.latestOvfVersion, this.fsvmVersion);\n\n      if (!this.vcServerPermission || !this.editClusterPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      } else if (this.isFsDomainMissing && !this.vcCapabilityData.isSeparatingFileServiceWorkflowSupported) {\n         // TODO: [rogerw] remove this else if after this feature is tested\n         return VsanUiUtils.getString(\"vsan.fileservices.upgrade.noDomain.error\");\n      } else if (hasOldHost) {\n         return VsanUiUtils.getString(\"vsan.fileservices.upgrade.oldHost\");\n      } else if (oldDiskFormatVersion) {\n         return VsanUiUtils.getString(\"vsan.fileservices.upgrade.dfc\");\n      } else if (isLatestOvfVersionInstalled) {\n         return VsanUiUtils.getString(\"vsan.fileservices.upgrade.latest.desc\");\n      }\n      return null;\n   }\n\n   get vdfsPrecheckIssue(): string {\n      if (!this.vdfsConfig) {\n         return \"\";\n      }\n      const precheck: VsanFileServicePrecheckResult = this.vdfsConfig.precheckResult;\n      if (!precheck) {\n         return \"\";\n      } else if (precheck.mixedModeIssue) {\n         return precheck.mixedModeIssue;\n      } else if (precheck.networkPartitionIssue) {\n         return precheck.networkPartitionIssue;\n      } else if (precheck.vsanDatastoreIssue) {\n         return precheck.vsanDatastoreIssue;\n      } else if (precheck.dvsConfigIssue) {\n         return precheck.dvsConfigIssue;\n      } else {\n         return \"\";\n      }\n   }\n\n   navigateToShares(): void {\n      this.navigationService.navigateTo(PlatformExtension.FILE_SERVICE_SHARES);\n   }\n\n   enableFileService(): void {\n      const vsanVdfsConfig: VsanVdfsConfig = JSON.parse(JSON.stringify(this.vdfsConfig));\n      const enableDialogContext: EnableFileServiceModalContext = {\n         network: vsanVdfsConfig?.config?.network,\n         precheckResult: vsanVdfsConfig?.precheckResult,\n      } as EnableFileServiceModalContext;\n      new ModalBuilder(\"enableFileService\")\n            .setDimensions(ModalBuilder.DEFAULT_SIZE)\n            .open(enableDialogContext)\n            .then((taskRef: ManagedObject) => {\n               this.awaitThenInvoke(this.refresh, taskRef);\n            });\n   }\n\n   editFileServices(): void {\n      // TODO: [rogerw] remove this after this feature is tested\n      if (ServiceUtils.isDisabled(this.status) && this.vcCapabilityData.isSeparatingFileServiceWorkflowSupported) {\n         return this.enableFileService();\n      }\n\n      // We need a deep clone of the object so if the user cancels the wizard,\n      // no changes are saved in the original object.\n      const vsanVdfsConfig: VsanVdfsConfig = JSON.parse(JSON.stringify(this.vdfsConfig));\n      if (this.lastFailedDomainConfig) {\n         vsanVdfsConfig.config.domainConfig = this.lastFailedDomainConfig;\n      }\n      const context: FileServicesConfigureWizardModalContext = {\n         clusterRef: this.clusterRef,\n         config: vsanVdfsConfig ? vsanVdfsConfig.config : null,\n         isEdit: !ServiceUtils.isDisabled(this.status),\n         capabilityData: this.vcCapabilityData,\n         fileSharesCount: vsanVdfsConfig ? vsanVdfsConfig.numberOfShares : 0,\n         hasLastestOvf: this.hasLatestOvf,\n         ovfVersion: vsanVdfsConfig.precheckResult.ovfInstalled,\n         largeScaleClusterSupported: this.largeScaleClusterSupported,\n         hasAdConfigured: !!this.vdfsConfig?.config?.domainConfig?.adConfig?.domain,\n         lastDomainConfigErrors: this.preflightCheckErrors,\n      };\n\n      new ModalBuilder(\"configureFileServices\")\n            .setDimensions(ModalBuilder.WIZARD_XL)\n            .open(context)\n            .then((taskRefs: ManagedObject[] | ManagedObject) => {\n               // enable fs wizard returns a single task, but edit fs configuration wizard returns a task array\n               if (taskRefs instanceof Array) {\n                  this.awaitThenInvoke(this.refresh, ...taskRefs);\n               } else {\n                  this.awaitThenInvoke(this.refresh, taskRefs);\n               }\n            });\n   }\n\n   disableFileServices(): void {\n      const context: DisableFileServicesModalContext = {\n         clusterName: this.clusterName,\n         clusterRef: this.clusterRef,\n         isEnabled: true,\n         fileShareCount: this.vdfsConfig.numberOfShares,\n      };\n\n      new ModalBuilder(\"disableFileServices\")\n            .setSize(600, 350)\n            .open(context)\n            .then((taskRef: ManagedObject) => this.awaitThenInvoke(this.refresh, taskRef));\n   }\n\n   upgradeFileServices(): void {\n      const context: UpgradeFileServiceModalContext = {\n         domainConfig: this.vdfsConfig.config.domainConfig,\n         precheckResult: this.vdfsConfig.precheckResult,\n      };\n      new ModalBuilder(\"upgradeFileServices\")\n            .setSize(700, 550)\n            .open(context)\n            .then((taskRef: ManagedObject) => {\n               this.upgradeFsvmTask = taskRef;\n               this.awaitThenInvoke(this.refresh, taskRef);\n            });\n   }\n\n   private awaitThenInvoke = (fetchMethod: () => any, ...taskRefs: ManagedObject[]) => {\n      const runningTasks: Promise<any>[] =\n            [...taskRefs].map(taskRef => this.taskService.getAwaitResult(taskRef));\n      Promise.all(runningTasks)\n            .then(() => fetchMethod.call(this))\n            .catch(e => this.errorMessage = e);\n   };\n\n   private refresh = () => {\n      VsanUiUtils.globalRefresh();\n   };\n}\n","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CardModule} from \"@component/card/card.module\";\nimport {ConfigurationsModule} from \"@component/configurations/configurations.module\";\nimport {DragAndDropModule} from \"@component/drag-and-drop/drag-and-drop.module\";\nimport {GeneralSettingsModule} from \"@component/general-settings/general-settings.module\";\nimport {VsanGeneralConfigService} from \"@component/general-settings/vsan-general-config.service\";\nimport {IscsiAuthenticationModule} from \"@component/iscsi-authentication/authentication.module\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\nimport {UpgradeModule} from \"@component/upgrade/upgrade.module\";\nimport {PersistentStorageService} from \"@service/browser-storage.service\";\nimport {SpaceEfficiencyService} from \"@service/space-efficiency-service\";\nimport {EditAdvancedOptionsComponent} from \"../cluster/configure/action/edit-advanced-options.component\";\nimport {EditIscsiTargetComponent} from \"../cluster/configure/action/edit-iscsi-target-config.component\";\nimport {EditNetworkComponent} from \"../cluster/configure/action/edit-network.component\";\nimport {EditVsanConfigComponent} from \"../cluster/configure/action/edit-vsan-config.component\";\nimport {EditVsanManagedDiskClaim} from \"../cluster/configure/action/edit-vsan-managed-disk-claim.component\";\nimport {GenerateEncryptionKeysComponent} from \"../cluster/configure/action/generate-encryption-keys.component\";\nimport {LargeScaleClusterSupportChangePromptComponent} from \"../cluster/configure/action/large-scale-cluster-support-change-prompt.component\";\nimport {VsanCommonModule} from \"../common/vsan-common.module\";\nimport {DiskManagementActionAvailabilityService} from \"../disk-management/views/validation/disk-management-action-availability.service\";\nimport {HealthConfigModule} from \"../health/config/health-config.module\";\nimport {AdvancedOptionsComponent} from \"./advanced-options.component\";\nimport {CapacityManagementSettingsComponent} from \"./capacity-management-settings.component\";\nimport {ClusterPowerStateChangeProgressComponent} from \"./cluster-power-state-change-progress.component\";\nimport {DataServicesComponent} from \"./data-services.component\";\nimport {FileServiceComponent} from \"./file-service.component\";\nimport {HistoricalHealthSettingsComponent} from \"./historical-health-settings.component\";\nimport {IscsiTargetSettingsComponent} from \"./iscsi-target-settings.component\";\nimport {NetworkOptionsComponent} from \"./network-options.component\";\nimport {PerformanceServiceComponent} from \"./performance-service.component\";\nimport {ServicesComponent} from \"./services.component\";\nimport {SupportInsightComponent} from \"./support-insight.component\";\nimport {VsanMaxSettingsComponent} from \"./vsan-max-settings.component\";\n\nconst servicesRoutes: Routes = [\n   {\n      path: \"\",\n      component: ServicesComponent,\n   },\n   {\n      path: \"editGeneralConfig\",\n      component: EditVsanConfigComponent,\n   },\n   {\n      path: \"editIscsiTargetConfig\",\n      component: EditIscsiTargetComponent,\n   },\n   {\n      path: \"editAdvancedOptions\",\n      component: EditAdvancedOptionsComponent,\n   },\n   {\n      path: \"editAdvancedOptionsConfirmation\",\n      component: LargeScaleClusterSupportChangePromptComponent,\n   },\n   {\n      path: \"generateEncryptionKeys\",\n      component: GenerateEncryptionKeysComponent,\n   },\n   {\n      path: \"editNetwork\",\n      component: EditNetworkComponent,\n   },\n   {\n      path: \"editVsanManagedDiskClaim\",\n      component: EditVsanManagedDiskClaim,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      ClarityModule,\n      DragAndDropModule,\n      CardModule,\n      VsanCommonModule,\n      UnavailableViewModule,\n      GeneralSettingsModule,\n      IscsiAuthenticationModule,\n      UpgradeModule,\n      HealthConfigModule,\n      RouterModule.forChild(servicesRoutes),\n      ConfigurationsModule,\n   ],\n   declarations: [\n      ServicesComponent,\n      VsanMaxSettingsComponent,\n      DataServicesComponent,\n      AdvancedOptionsComponent,\n      CapacityManagementSettingsComponent,\n      FileServiceComponent,\n      IscsiTargetSettingsComponent,\n      PerformanceServiceComponent,\n      SupportInsightComponent,\n      NetworkOptionsComponent,\n      HistoricalHealthSettingsComponent,\n      EditVsanConfigComponent,\n      EditIscsiTargetComponent,\n      EditAdvancedOptionsComponent,\n      LargeScaleClusterSupportChangePromptComponent,\n      GenerateEncryptionKeysComponent,\n      EditNetworkComponent,\n      EditVsanManagedDiskClaim,\n      ClusterPowerStateChangeProgressComponent,\n   ],\n   providers: [\n      VsanGeneralConfigService,\n      SpaceEfficiencyService,\n      PersistentStorageService,\n      DiskManagementActionAvailabilityService,\n   ],\n})\nexport class ServicesModule {\n}\n"],"sourceRoot":"webpack:///"}