{"version":3,"sources":["./src/app/vsan/common/component/capacity/capacity-common.module.ts","./src/app/vsan/common/component/datagrid/tree-datagrid.module.ts","./src/app/vsan/common/component/popup-list/popup-list.module.ts","./src/app/vsan/common/component/capacity/capacity-usage-overview.ts","./src/app/vsan/common/component/capacity/capacity-summary.html","./src/app/vsan/common/component/navigation/vsan-breadcrumb.module.ts","./src/app/vsan/common/component/capacity/capacity-usage-overview.html","./src/app/vsan/common/component/cell/common-cells.module.ts","./src/app/vsan/common/component/inventory/inventory-browser.module.ts","./src/app/vsan/common/component/capacity/capacity-summary.component.ts","./src/app/vsan/common/component/capacity/capacity-usage-overview.component.ts","./src/app/vsan/common/vsan-common.module.ts","./src/app/vsan/common/component/search/search.module.ts","./src/app/vsan/common/component/action-button/action-button.module.ts"],"names":[],"mappings":"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","file":"75-es2015.js","sourcesContent":["/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {VsanCommonModule} from \"app/vsan/common/vsan-common.module\";\nimport {VsanCapacityService} from \"./capacity.service\";\nimport {CapacitySummaryComponent} from \"@component/capacity/capacity-summary.component\";\nimport {SystemCapacityBreakdownComponent} from \"@component/capacity/system-capacity-breakdown.component\";\nimport {UserCapacityBreakdownComponent} from \"@component/capacity/user-capacity-breakdown.component\";\nimport {VmCapacityBreakdownComponent} from \"@component/capacity/vm-capacity-breakdown.component\";\nimport {VsanChartModule} from \"@component/chart/chart.module\";\nimport {SpaceEfficiencyService} from \"@service/space-efficiency-service\";\nimport {CapacityUsageOverviewComponent} from \"@component/capacity/capacity-usage-overview.component\";\nimport {CapacityOverviewChartComponent} from \"@component/capacity/capacity-overview-chart.component\";\nimport {SnapshotCapacityBreakdownComponent} from \"@component/capacity/snapshot-capacity-breakdown.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      VsanCommonModule,\n      VsanChartModule,\n   ],\n   declarations: [\n      CapacitySummaryComponent,\n      CapacityUsageOverviewComponent,\n      SystemCapacityBreakdownComponent,\n      UserCapacityBreakdownComponent,\n      VmCapacityBreakdownComponent,\n      CapacityOverviewChartComponent,\n      SnapshotCapacityBreakdownComponent,\n   ],\n   exports: [\n      CapacitySummaryComponent,\n      SystemCapacityBreakdownComponent,\n      UserCapacityBreakdownComponent,\n      VmCapacityBreakdownComponent,\n      CapacityOverviewChartComponent,\n      SnapshotCapacityBreakdownComponent,\n   ],\n   providers: [\n      VsanCapacityService,\n      SpaceEfficiencyService,\n   ],\n})\nexport class CapacityCommonModule {\n}\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {TreeExpanderComponent} from \"@component/datagrid/tree-expander.component\";\nimport {TreeColumnComponent} from \"@component/datagrid/tree-column.component\";\nimport {EnumeratedFilterComponent} from \"./filter/enumerated-filter.component\";\nimport {EnumeratedFilterItemComponent} from \"./filter/enumerated-filter-item.component\";\nimport {EnumFilterComponent} from \"@component/datagrid/filter/enum-filter.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n   ],\n   declarations: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumeratedFilterComponent,\n      EnumFilterComponent,\n   ],\n   exports: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumFilterComponent,\n   ],\n})\nexport class TreeDatagridModule {\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {PopupListComponent} from \"@component/popup-list/popup-list.component\";\nimport {PopupListItemDirective} from \"@component/popup-list/popup-list-item.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      CommonPipeModule\n   ],\n   declarations: [\n      PopupListComponent,\n      PopupListItemDirective\n   ],\n   exports: [\n      PopupListComponent,\n      PopupListItemDirective\n   ]\n})\nexport class PopupListModule {\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChartSectionData, ChartSectionPlotLine} from \"@component/chart/model/chart-section.data\";\n\n/**\n * Used to display capacity usage in Summary->vSAN Overview portlet.\n */\nexport class CapacityUsageOverview {\n   name: string;\n   totalCapacity: number;\n   usageLabel: string;\n   sections: ChartSectionData[];\n   plotLines: ChartSectionPlotLine[];\n   warningThreshold: number;\n   errorThreshold: number;\n\n   get hasCapacity(): boolean {\n      return this.totalCapacity > 0;\n   }\n}\n","<!-- Copyright 2020 VMware, Inc. All rights reserved. VMware Confidential -->\n<vsan-capacity-usage-overview *ngFor=\"let usage of capacityUsages; let i = index\"\n                              [loading]=\"loading\"\n                              [capacityUsage]=\"usage\"\n                              [isDetailVisible]=\"i==0\">\n</vsan-capacity-usage-overview>\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {VsanBreadcrumbNavComponent} from \"./vsan-breadcrumb-nav.component\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\n\n@NgModule({\n   imports: [CommonModule, ClarityModule, CommonDirectiveModule, CommonPipeModule],\n   declarations: [VsanBreadcrumbNavComponent],\n   exports: [\n      VsanBreadcrumbNavComponent,\n   ],\n})\nexport class VsanBreadcrumbModule {}\n","<!-- Copyright 2020 VMware, Inc. All rights reserved. VMware Confidential -->\n<div class=\"clr-row\">\n   <label *ngIf=\"capacityUsage.name\" class=\"clr-col-3 clr-control-label\">\n      {{capacityUsage.name}}\n   </label>\n   <div class=\"bar-chart-container\" [ngClass]=\"capacityUsage.name ? 'clr-col-7' : 'clr-col-10'\">\n      <div *ngIf=\"loading\">\n         <span class=\"spinner spinner-inline\"></span>\n         <span>{{\"vsan.loading\" | localized}}</span>\n      </div>\n      <ng-container *ngIf=\"!loading\">\n         <ng-container *ngIf=\"!capacityUsage.hasCapacity\">\n            {{NO_CAPACITY_LABEL}}\n         </ng-container>\n         <ng-container *ngIf=\"capacityUsage.hasCapacity\">\n            <span vsan-show-title>{{capacityUsage.usageLabel}}</span>\n            <vsan-capacity-bar-chart [sections]=\"capacityUsage.sections\"\n                                     [total]=\"capacityUsage.totalCapacity\"\n                                     [plotLines]=\"capacityUsage.plotLines\"\n                                     [warningThreshold]=\"capacityUsage.warningThreshold\"\n                                     [errorThreshold]=\"capacityUsage.errorThreshold\">\n            </vsan-capacity-bar-chart>\n         </ng-container>\n      </ng-container>\n   </div>\n   <a id=\"vsan-usage-details\"\n      *ngIf=\"isDetailVisible\"\n      href=\"javascript://\"\n      class=\"clr-col-2 details\"\n      (click)=\"navigateToCapacity()\">\n      {{\"vsan.cluster.summary.portlet.details.label\" | localized}}\n   </a>\n</div>\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {HealthStatusCell} from \"@component/cell/health-status-cell.component\";\nimport {LabelCell} from \"@component/cell/label-cell.component\";\nimport {StoragePolicyCell} from \"@component/cell/storage-policy-cell.component\";\nimport {MorCell} from \"@component/cell/mor-cell.component\";\nimport {IconItemComponent} from \"@component/cell/icon-item.component\";\nimport {HealthStateItemComponent} from \"@component/cell/health-state-item.component\";\nimport {ListCell} from \"@component/cell/list-cell.component\";\nimport {PspHealthStateItemComponent} from \"@component/cell/psp-health-state-item.component\";\nimport {HealthTestValueComponent} from \"@component/cell/health-test-value.component\";\nimport {HealthLinkCellComponent} from \"@component/cell/health-link-cell.component\";\nimport {HealthMorCellComponent} from \"@component/cell/health-mor-cell.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n      CommonDirectiveModule,\n   ],\n   // TODO: (vasilevd) Move health specific components to a separate common health module\n   declarations: [\n      HealthStatusCell,\n      HealthTestValueComponent,\n      LabelCell,\n      StoragePolicyCell,\n      MorCell,\n      HealthMorCellComponent,\n      ListCell,\n      IconItemComponent,\n      HealthStateItemComponent,\n      PspHealthStateItemComponent,\n      HealthLinkCellComponent,\n   ],\n   exports: [\n      HealthStatusCell,\n      HealthTestValueComponent,\n      LabelCell,\n      StoragePolicyCell,\n      MorCell,\n      HealthMorCellComponent,\n      ListCell,\n      IconItemComponent,\n      HealthStateItemComponent,\n      PspHealthStateItemComponent,\n      HealthLinkCellComponent,\n   ],\n})\nexport class CommonCellsModule {\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {InventoryBrowserComponent} from \"@component/inventory/inventory-browser.component\";\nimport {InventoryNodeComponent} from \"@component/inventory/inventory-node.component\";\nimport {WitnessCandidateInventoryService} from \"@generated/witness-candidate-inventory-service\";\nimport {DatacenterInventoryService} from \"@generated/datacenter-inventory-service\";\nimport {NetworkInventoryService} from \"@generated/network-inventory-service\";\nimport {ComputeInventoryService} from \"@generated/compute-inventory-service\";\nimport {IoInsightInventoryService} from \"@generated/io-insight-inventory-service\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {TreeNodeComponent} from \"@component/inventory/tree-view/tree-node.component\";\nimport {TreeViewComponent} from \"@component/inventory/tree-view/tree-view.component\";\nimport {DropdownObjectSelectorComponent} from \"@component/inventory/dropdown-object-selector/dropdown-object-selector.component\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {InventoryNodesComponent} from \"@component/inventory/inventory-nodes.component\";\nimport {TreeNodesComponent} from \"@component/inventory/tree-view/tree-nodes.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule,\n      SearchModule,\n      CommonDirectiveModule,\n   ],\n   declarations: [\n      InventoryBrowserComponent,\n      InventoryNodesComponent,\n      InventoryNodeComponent,\n      TreeNodeComponent,\n      TreeNodesComponent,\n      TreeViewComponent,\n      DropdownObjectSelectorComponent,\n   ],\n   exports: [\n      InventoryBrowserComponent,\n      DropdownObjectSelectorComponent,\n      TreeViewComponent,\n   ],\n   providers: [\n      WitnessCandidateInventoryService,\n      DatacenterInventoryService,\n      NetworkInventoryService,\n      ComputeInventoryService,\n      IoInsightInventoryService,\n   ],\n})\nexport class InventoryBrowserModule {\n}","/* Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, OnInit, Output} from \"@angular/core\";\nimport {CapacityUsageOverview} from \"@component/capacity/capacity-usage-overview\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {ChartSectionData} from \"@component/chart/model/chart-section.data\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject, ManagedObjectUtils} from \"@service/managed-object\";\nimport {DiskMgmtUtil} from \"@util/disk-mgmt.util\";\nimport {Logger} from \"@util/logger\";\nimport {ReferenceWatcher} from \"@util/reference-watcher\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * The cluster and datastore summary page use this component.\n */\n@Component({\n   templateUrl: \"capacity-summary.html\",\n   styleUrls: [\"capacity-summary.scss\"],\n   selector: \"vsan-capacity-summary\",\n   providers: [ReferenceWatcher],\n})\nexport class CapacitySummaryComponent implements OnInit {\n   loading: boolean = false;\n   // On datastore->summary view, we only display vSAN usage bar chart without label \"vSAN usage\".\n   isDatastore: boolean;\n   capacityUsages: CapacityUsageOverview[] = [];\n\n   @Output()\n   private getCapacityDataFailed: EventEmitter<string> = new EventEmitter<string>();\n\n   private isSlackSpaceCapacitySupported: boolean;\n   private datastoresCapacityData: Map<DatastoreType, CapacityData>;\n\n   constructor(private capacityService: VsanCapacityService,\n         private capabilityProvider: VsanCapabilityProvider,\n         private refWatcher: ReferenceWatcher) {\n      this.refWatcher.watchGlobalRefreshSubscription(CapacitySummaryComponent.prototype.constructor.name);\n   }\n\n   ngOnInit(): void {\n      this.fetch();\n   }\n\n   @RefreshHandler\n   async fetch(): Promise<void> {\n      this.loading = true;\n      const managedObject: ManagedObject = ManagedObject.contextObject;\n      this.isDatastore = ManagedObjectUtils.isDatastore(ManagedObject.contextObjectUid);\n      // Set capacityUsages after setting this.isDatastore.\n      this.capacityUsages = this.getInitialCapacityUsage();\n\n      try {\n         [\n            this.isSlackSpaceCapacitySupported,\n            this.datastoresCapacityData,\n         ] = await Promise.all([\n            this.capabilityProvider.getIsSlackSpaceCapacitySupported(managedObject),\n            this.capacityService.getCapacityDataPerDatastore(managedObject, true),\n         ]);\n         this.handleCapacityData(this.datastoresCapacityData);\n      } catch (error) {\n         this.getCapacityDataFailed.emit(VsanUiUtils.getString(\"vsan.capacity.summary.errors.message\"));\n         Logger.log(\"Unable to query capacity overview data: \" + error);\n      } finally {\n         this.loading = false;\n      }\n   }\n\n   private getInitialCapacityUsage(): CapacityUsageOverview[] {\n      const usage: CapacityUsageOverview = new CapacityUsageOverview();\n      usage.name = this.getUsageName(DatastoreType.VSAN);\n      return [usage];\n   }\n\n   private handleCapacityData = (result: Map<DatastoreType, CapacityData>) => {\n      if (!result) {\n         return;\n      }\n      this.capacityUsages = DiskMgmtUtil.orderDatastoreTypes(Array.from(result.keys()))\n            .map((datastoreType: DatastoreType) => this.getUsageOverview(datastoreType,\n                  result.get(datastoreType)));\n   };\n\n   private getUsageOverview(type: DatastoreType, capacityData: CapacityData): CapacityUsageOverview {\n      const capacityUsage: CapacityUsageOverview = new CapacityUsageOverview();\n      capacityUsage.name = this.getUsageName(type);\n      capacityUsage.totalCapacity = capacityData.totalSpace;\n      capacityUsage.usageLabel = this.getUsageLabel(capacityData);\n      capacityUsage.sections = this.getUsageSections(capacityData);\n      capacityUsage.plotLines = this.capacityService.getPlotLines(capacityData, true);\n\n      if (capacityData.thresholds) {\n         capacityUsage.warningThreshold = capacityData.thresholds.warningThreshold;\n         capacityUsage.errorThreshold = capacityData.thresholds.errorThreshold;\n      }\n\n      return capacityUsage;\n   }\n\n   private getUsageName(type: DatastoreType): string {\n      switch (type) {\n         case DatastoreType.VSAN:\n            return this.isDatastore\n                  ? null\n                  : VsanUiUtils.getString(\"vsan.capacity.usage.label\");\n         case DatastoreType.VSAN_DIRECT:\n            return VsanUiUtils.getString(\"vsan.capacity.direct.usage.label\");\n         case DatastoreType.PMEM:\n            return VsanUiUtils.getString(\"vsan.capacity.pmem.usage.label\");\n         default:\n            Logger.error(\"Invalid datastore type\");\n            return \"\";\n      }\n   }\n\n   private getUsageLabel(capacityData: CapacityData): string {\n      return VsanUiUtils.getString(\n            \"vsan.capacity.overview.label\",\n            VsanUiUtils.formatFileSize(capacityData.usedSpace),\n            VsanUiUtils.formatFileSize(capacityData.totalSpace),\n            VsanUiUtils.localizeNumber(VsanUiUtils.asPercentage(capacityData.usedSpace, capacityData.totalSpace)));\n   }\n\n   private getUsageSections(capacityData: CapacityData): ChartSectionData[] {\n      // TODO: (cuicollins) Unify this method and CapacityOverviewComponent.parseSlackSpaceCapacity.\n      const sections: ChartSectionData[] = this.capacityService.parseCapacityOverviewDataSections(capacityData);\n\n      if (!this.isSlackSpaceCapacitySupported) {\n         return sections;\n      }\n\n      const reservationChartData: ChartSectionData[] =\n            this.capacityService.parseCapacityReservationDataSections(capacityData);\n      if (!VsanUiUtils.isEmpty(reservationChartData)) {\n         sections.push(...reservationChartData);\n      }\n\n      // Add transientCapacity last to make sure it appears at the end of the bar chart\n      const transientCapacity: ChartSectionData = this.capacityService.parseTransientOverviewDataSections(\n            capacityData);\n      if (transientCapacity) {\n         sections.push(transientCapacity);\n      }\n\n      return sections;\n   }\n}\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {CapacityUsageOverview} from \"@component/capacity/capacity-usage-overview\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {ManagedObject, ManagedObjectUtils} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"capacity-usage-overview.html\",\n   styleUrls: [\"capacity-usage-overview.scss\"],\n   selector: \"vsan-capacity-usage-overview\",\n})\nexport class CapacityUsageOverviewComponent {\n   readonly NO_CAPACITY_LABEL: string = VsanUiUtils.formatFileSize(0);\n\n   @Input()\n   loading: boolean;\n\n   @Input()\n   isDetailVisible: boolean;\n\n   @Input()\n   capacityUsage: CapacityUsageOverview;\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   navigateToCapacity(): void {\n      if (ManagedObjectUtils.isCluster(ManagedObject.contextObject)) {\n         this.navigationService.navigateTo(PlatformExtension.CLUSTER_CAPACITY);\n      } else {\n         this.navigationService.navigateTo(PlatformExtension.DATASTORE_CAPACITY);\n      }\n   }\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {ActionButtonModule} from \"@component/action-button/action-button.module\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {CommonCellsModule} from \"@component/cell/common-cells.module\";\nimport {InventoryBrowserModule} from \"@component/inventory/inventory-browser.module\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {TreeDatagridModule} from \"@component/datagrid/tree-datagrid.module\";\nimport {DatetimePickerModule} from \"@component/datetime-picker/datetime-picker.module\";\nimport {PopupListModule} from \"@component/popup-list/popup-list.module\";\nimport {VsanBreadcrumbModule} from \"@component/navigation/vsan-breadcrumb.module\";\n\n@NgModule({\n   imports: [\n         CommonDirectiveModule,\n         CommonPipeModule,\n         ValidationModule,\n         ActionButtonModule,\n         PromptModule,\n         CommonCellsModule,\n         InventoryBrowserModule,\n         SearchModule,\n         TreeDatagridModule,\n         DatetimePickerModule,\n         PopupListModule,\n         VsanBreadcrumbModule,\n   ],\n   exports: [\n      CommonDirectiveModule,\n      CommonPipeModule,\n      ValidationModule,\n      ActionButtonModule,\n      PromptModule,\n      CommonCellsModule,\n      InventoryBrowserModule,\n      SearchModule,\n      TreeDatagridModule,\n      DatetimePickerModule,\n      PopupListModule,\n      VsanBreadcrumbModule,\n   ],\n})\nexport class VsanCommonModule { }","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {SearchComponent} from \"@component/search/search.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule\n   ],\n   declarations: [\n      SearchComponent\n   ],\n   exports: [\n      SearchComponent\n   ],\n})\nexport class SearchModule {\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ActionButtonSeparatorComponent} from \"@component/action-button/action-button-separator.component\";\nimport {ButtonTitleDirective} from \"@component/action-button/button-title.directive\";\nimport {ButtonGroupDirective} from \"@component/action-button/button-group.directive\";\nimport {ButtonGroupWrapDirective} from \"@component/action-button/button-group-wrap.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n   ],\n   declarations: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ],\n   exports: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ]\n})\nexport class ActionButtonModule {\n}\n"],"sourceRoot":"webpack:///"}