{"version":3,"sources":["webpack:///src/app/vsan/common/component/cross-column-filter/cross-column-filter-group.component.ts.CrossColumnFilterGroupComponent.html","webpack:///src/app/vsan/common/component/cross-column-filter/cross-column-filter.html","webpack:///src/app/vsan/common/component/cross-column-filter/cross-column-filter.component.ts","webpack:///src/app/vsan/common/component/cross-column-filter/filter-item.ts","webpack:///src/app/vsan/common/component/cross-column-filter/cross-column-filter-item.component.ts.CrossColumnFilterItemComponent.html","webpack:///src/app/vsan/common/component/cross-column-filter/list-filter-item.component.ts","webpack:///src/app/vsan/common/component/cross-column-filter/cross-column-filter.module.ts","webpack:///src/app/vsan/common/component/action-button/action-button-separator.component.ts.ActionButtonSeparatorComponent.html","webpack:///src/app/vsan/common/component/cross-column-filter/list-filter.component.ts","webpack:///src/app/vsan/common/component/cross-column-filter/cross-column-filter-group.component.ts","webpack:///src/app/vsan/common/component/cross-column-filter/list-filter.component.ts.ListFilterComponent.html","webpack:///src/app/vsan/common/component/cross-column-filter/list-filter-item.component.ts.ListFilterItemComponent.html","webpack:///src/app/vsan/common/component/cross-column-filter/cross-column-filter-item.component.ts","webpack:///src/app/vsan/common/component/action-button/action-button-separator.component.ts","webpack:///src/app/vsan/common/component/cross-column-filter/filter.service.ts"],"names":["CrossColumnFilterComponent","elRef","filterService","filterIconShape","filterText","getString","changes","_items","DROPDOWN_ITEM_CLASS","FILTER_ICON_CLASS","isDropdownOpened","isCustomFilterOpened","Icon","event","addFilterElement","nativeElement","contains","target","dropdownFilterElement","clearAndBlurAddFilterElement","classList","closeCustomFilter","filterChangedSubscription","onFilterChanged","subscribe","filters","emit","filterLabels","Map","groups","forEach","g","groupComponent","group","label","name","push","items","item","set","field","initFilterLabels","isNonEmptyArray","setFilters","toggleFilter","toggleFilterSubscription","filterItem","unsubscribe","filterSearchValue","separatorIdx","indexOf","filterGroups","toLowerCase","key","substring","trim","focusAddFilterInput","isFocus","focus","blur","tempGroup","allItems","filterComponent","filterValue","selectedFilterItem","isCustomFilter","show","filter","i","openFilter","value","getFilter","Array","isArray","components","split","matchedItems","toLocaleLowerCase","length","setFilter","clearFilter","removeFilter","allFiltersCount","reduce","sum","val","FilterItem","localizedField","localizedValue","ListFilterItemComponent","isSelected","onListItemFilterChanged","CrossColumnFilterModule","ListFilterComponent","onFilterSet","filterItems","setSelectedItem","CrossColumnFilterGroupComponent","CrossColumnFilterItemComponent","customFilterComponent","find","f","setFilterToComponent","ActionButtonSeparatorComponent","FilterService","_filterChanged","asObservable","_filterCleared","onFilterCleared","fieldName","next","targetFilter","currentFilter","removeMultiFilter","removeFilterItemByField","toString","itemIndex","getItemIndex","splice","emitFilterChanges","searchItem","findIndex","map","ensureFilterItemLabel","getFilterItemByField","isEmpty","addFilter","toggleMultiFilter","filterField","emitFilters","get"],"mappings":"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","file":"74-es5.js","sourcesContent":["<ng-content select=\"vsan-cross-column-filter-item\"></ng-content>","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div class=\"dropdown-container\">\n   <!--Dropdown filter list-->\n   <clr-icon [attr.shape]=\"filterIconShape\"\n             [attr.title]=\"'vsan.icon.title.filter' | localized\"\n             [class]=\"FILTER_ICON_CLASS\">\n   </clr-icon>\n   <div class=\"dropdown open\">\n      <input id=\"add-filter\"\n             type=\"text\"\n             #addFilterElement\n             [(ngModel)]=\"filterSearchValue\"\n             (keyup.enter)=\"onEnter()\"\n             [placeholder]=\"filterText\"\n             (click)=\"addFilterClick()\"\n             clrInput\n             autocomplete=\"off\">\n      <div class=\"dropdown-menu\"\n           #dropdownFilterElement\n           *ngIf=\"isDropdownOpened\">\n         <h4 *ngIf=\"!items.length\" class=\"dropdown-header\">\n            {{'vsan.common.crossColumnFilter.search.notFound' | localized}}\n         </h4>\n         <ng-container *ngFor=\"let item of items; let i = index\">\n            <h4 *ngIf=\"item.group\"\n                class=\"dropdown-header\">\n               {{item.label}}\n            </h4>\n            <button *ngIf=\"!item.group\"\n                    type=\"button\"\n                    [class]=\"DROPDOWN_ITEM_CLASS\"\n                    [disabled]=\"isDisabled(item)\"\n                    [attr.title]=\"isDisabled(item) ?\n                                                 ('vsan.common.crossColumnFilter.item.disabled' | localized) : null\"\n                    (click)=\"openFilter(item)\">{{item.label}}\n            </button>\n         </ng-container>\n      </div>\n   </div>\n   <clr-icon *ngIf=\"!showAddFilterButton()\"\n             shape=\"no-icon\">\n   </clr-icon>\n   <clr-icon *ngIf=\"showAddFilterButton()\"\n             shape=\"plus-circle\"\n             (click)=\"onEnter()\"\n             [attr.title]=\"'vsan.common.crossColumnFilter.addFilterIcon.enabled' | localized\"\n             [class]=\"FILTER_ICON_CLASS\">\n   </clr-icon>\n   <!--Component filter dialog-->\n   <div class=\"custom-filter-container\"\n        *ngIf=\"isCustomFilterOpened\">\n      <button class=\"close\"\n              type=\"button\"\n              (click)=\"closeCustomFilter()\"\n              [attr.aria-label]=\"'vsan.common.close'|localized\">\n         <clr-icon shape=\"close\" title=\"{{'vsan.common.srMessage.close' | localized}}\"></clr-icon>\n      </button>\n      <!-- Render all children(CrossColumnFilterItemComponent[]) here because\n      dynamic content projection is not supported yet - https://github.com/angular/angular/issues/8563\n      The content of the clicked component is only shown. -->\n      <ng-content select=\"vsan-cross-column-filter-group\"></ng-content>\n   </div>\n</div>\n<!--Selected filters-->\n<!--TODO: Change the type of label filter to a generic one-->\n<ng-container *ngFor=\"let filter of filters; let i = index\">\n   <ng-container *ngIf=\"isNonEmptyArray(filter.value)\">\n      <vsan-action-separator *ngIf=\"i > 0\"></vsan-action-separator>\n      <ng-container *ngFor=\"let subItem of filter.value\">\n         <ng-container *ngTemplateOutlet=\"filterLabel;context: {item:\n         { field: filter.field, localizedField: filter.localizedField, value: subItem.key + ':' + subItem.value}}\">\n         </ng-container>\n      </ng-container>\n      <vsan-action-separator *ngIf=\"i < filters.length - 1\"></vsan-action-separator>\n   </ng-container>\n   <ng-container *ngIf=\"!isNonEmptyArray(filter.value)\">\n      <ng-container *ngTemplateOutlet=\"filterLabel;context: {item: filter}\"></ng-container>\n   </ng-container>\n</ng-container>\n\n<button *ngIf=\"showClearAllFilters()\"\n        class=\"btn btn-sm btn-link no-spacing\"\n        (click)=\"clearFilters()\">\n   {{'vsan.common.crossColumnFilter.clear.all' | localized}}\n</button>\n\n<ng-template #filterLabel let-item=\"item\">\n   <div class=\"label\">\n      <span class=\"edit-filter\" (click)=\"editFilter(item)\">\n         {{item.localizedField | localized }}: \"{{ item.localizedValue != null ? item.localizedValue : item.value }}\"\n      </span>\n      <button class=\"remove-filter\" (click)=\"removeFilter(item)\"\n              [attr.aria-label]=\"'vsan.icon.title.clearFilter'|localized\">\n         <clr-icon class=\"is-info\" shape=\"close\" title=\"{{'vsan.common.srMessage.close' | localized}}\"></clr-icon>\n      </button>\n   </div>\n</ng-template>\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {\n   AfterContentInit,\n   Component,\n   ContentChildren, ElementRef, EventEmitter, HostListener,\n   Input,\n   Output, QueryList, ViewChild,\n} from \"@angular/core\";\nimport {Icon} from \"@util/icon\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {CrossColumnFilterItemComponent} from \"./cross-column-filter-item.component\";\nimport {FilterService} from \"./filter.service\";\nimport {CrossColumnFilterGroupComponent} from \"./cross-column-filter-group.component\";\nimport {FilterItem} from \"./filter-item\";\nimport {Observable, Subscription} from \"rxjs\";\n\n/**\n *  The class is used in conjunction with the FilterService to provide filtering functionality.\n *    - You can declare a string or custom component filter item via CrossColumnFilterItemComponent. Filter items\n *  must be declared inside groups (i.e.,CrossColumnFilterGroupComponent).\n *    - To handle changes in the filters you can attach to the changes event.\n *    - (optional)Predefined filters can be set via the filters property.\n */\n@Component({\n   selector: \"vsan-cross-column-filter\",\n   templateUrl: \"cross-column-filter.html\",\n   styleUrls: [\"cross-column-filter.scss\"],\n   providers: [FilterService],\n})\nexport class CrossColumnFilterComponent implements AfterContentInit {\n\n   @HostListener(\"document:click\", [\"$event\"])\n   clickout(event: any): void {\n      if (this.isDropdownOpened && !this.addFilterElement.nativeElement.contains(event.target) &&\n            !this.dropdownFilterElement.nativeElement.contains(event.target)) {\n         this.clearAndBlurAddFilterElement();\n      }\n      // Close custom filter popup when clicking outside cross column filter.\n      // Check dropdown item and add filter icon click via class because elements are hidden at the time of click.\n      if (this.isCustomFilterOpened &&\n            !this.elRef.nativeElement.contains(event.target) &&\n            !event.target.classList.contains(this.FILTER_ICON_CLASS) &&\n            !event.target.classList.contains(this.DROPDOWN_ITEM_CLASS)) {\n         this.closeCustomFilter();\n      }\n   }\n\n   // Sets initial filters(optional). The property also stores filters selected from this component.\n   @Input()\n   filters: FilterItem[];\n\n   /* Observable to subscribe for a filter toggle:\n       - If field is not present add it.\n       - If field is present but the corresponding value is different, update it.\n       - If the same field and value are passed remove them.\n    */\n   @Input()\n   toggleFilter: Observable<any>;\n\n   @Input()\n   filterIconShape: string = \"filter\";\n\n   @Input()\n   filterText: string = VsanUiUtils.getString(\"vsan.common.crossColumnFilter.placeholder\");\n\n   @Output()\n   changes: EventEmitter<FilterItem[]> = new EventEmitter();\n\n   @ViewChild(\"addFilterElement\")\n   private addFilterElement: ElementRef;\n\n   @ViewChild(\"dropdownFilterElement\")\n   private dropdownFilterElement: ElementRef;\n\n   @ContentChildren(CrossColumnFilterGroupComponent)\n   groups: QueryList<CrossColumnFilterGroupComponent>;\n\n   private toggleFilterSubscription: Subscription;\n   private filterChangedSubscription: Subscription;\n   private _items: CrossColumnFilterItemComponent[] = [];\n   private selectedFilterItem: CrossColumnFilterItemComponent;\n   readonly DROPDOWN_ITEM_CLASS: string = \"dropdown-item\";\n   readonly FILTER_ICON_CLASS: string = \"cross-column-filter-icon\";\n   isDropdownOpened: boolean = false;\n   isCustomFilterOpened: boolean = false;\n   filterSearchValue: string;\n\n   // tslint:disable-next-line:typedef\n   Icon = Icon;\n\n   constructor(private elRef: ElementRef, private filterService: FilterService) {\n   }\n\n   ngOnInit(): void {\n      this.filterChangedSubscription = this.filterService.onFilterChanged.subscribe(filters => {\n         this.filters = filters;\n         this.changes.emit(filters);\n      });\n   }\n\n   ngAfterContentInit(): void {\n      const filterLabels: Map<string, string> = new Map();\n      this.groups.forEach(g => {\n         const groupComponent: CrossColumnFilterItemComponent = new CrossColumnFilterItemComponent();\n         groupComponent.group = true;\n         groupComponent.label = g.name;\n         this._items.push(groupComponent);\n         for (const item of g.items) {\n            this._items.push(item);\n            filterLabels.set(item.field, item.label);\n         }\n      });\n      this.filterService.initFilterLabels(filterLabels);\n      // Set predefined filters (e.g., when you send context via page navigation)\n      if (this.isNonEmptyArray(this.filters)) {\n         this.filterService.setFilters(this.filters);\n      }\n      if (this.toggleFilter) {\n         this.toggleFilterSubscription = this.toggleFilter.subscribe((filterItem: FilterItem) => {\n            this.filterService.toggleFilter(filterItem);\n         });\n      }\n   }\n\n   ngOnDestroy(): void {\n      if (this.toggleFilterSubscription) {\n         this.toggleFilterSubscription.unsubscribe();\n      }\n      if (this.filterChangedSubscription) {\n         this.filterChangedSubscription.unsubscribe();\n      }\n   }\n\n   // Filter items in the dropdown menu by the input string\n   get items(): CrossColumnFilterItemComponent[] {\n      // If no input return all items\n      if (!this.filterSearchValue) {\n         return this._items;\n      }\n      const separatorIdx: number = this.filterSearchValue.indexOf(\":\");\n      // If no key:value separator filter by the key\n      if (separatorIdx === -1) {\n         return this.filterGroups(this.filterSearchValue.toLowerCase());\n      }\n      // If the key:value separator is the first character return all items\n      if (separatorIdx === 0) {\n         return this._items;\n      }\n      // Get the key and filter by it\n      const key: string =  this.filterSearchValue.substring(0, separatorIdx).trim();\n      return this.filterGroups(key.toLowerCase());\n   }\n\n   addFilterClick(): void {\n      this.isDropdownOpened = true;\n      this.closeCustomFilter();\n      this.focusAddFilterInput(true);\n   }\n\n   private focusAddFilterInput(isFocus: boolean): void {\n      if (isFocus) {\n         this.addFilterElement.nativeElement.focus();\n      } else {\n         this.addFilterElement.nativeElement.blur();\n      }\n   }\n\n   // If there are no items in the group, remove the group itself\n   filterGroups(key: string): CrossColumnFilterItemComponent[] {\n      let tempGroup: CrossColumnFilterItemComponent;\n      const allItems: CrossColumnFilterItemComponent[] = [];\n      for (const item of this._items) {\n         if (item.group) {\n            tempGroup = item;\n            continue;\n         }\n         if (item.label.toLowerCase().indexOf(key) > -1) {\n            if (tempGroup) {\n               allItems.push(tempGroup);\n               tempGroup = null;\n            }\n            allItems.push(item);\n         }\n      }\n      return allItems;\n   }\n\n   openFilter(filterComponent: CrossColumnFilterItemComponent, filterValue?: string): void {\n      this.closeCustomFilter();\n      this.selectedFilterItem = filterComponent;\n      this.filterSearchValue = VsanUiUtils.getString(\"vsan.common.labelValue\", this.selectedFilterItem.label, \"\");\n      if (this.selectedFilterItem.isCustomFilter) {\n         this.isCustomFilterOpened = true;\n         this.selectedFilterItem.show = true;\n         this.focusAddFilterInput(false);\n      } else {\n         if (filterValue) {\n            this.filterSearchValue += filterValue;\n         }\n         this.focusAddFilterInput(true);\n      }\n      this.isDropdownOpened = false;\n   }\n\n   editFilter(item: FilterItem): void {\n      const filterComponent: CrossColumnFilterItemComponent =\n            this._items.filter(i => i.field === item.field)[0];\n      if (filterComponent) {\n         this.openFilter(filterComponent, item.value);\n      }\n   }\n\n   isDisabled(item: CrossColumnFilterItemComponent): boolean {\n      const filter: FilterItem = this.filterService.getFilter(item.field)[0];\n      return filter && filter.value && !Array.isArray(filter.value);\n   }\n\n   closeCustomFilter(): void {\n      if (this.selectedFilterItem && this.selectedFilterItem.show) {\n         this.selectedFilterItem.show = false;\n      }\n      if (this.isCustomFilterOpened) {\n         this.isCustomFilterOpened = false;\n      }\n   }\n\n   onEnter(): void {\n      if (!this.filterSearchValue) {\n         return;\n      }\n      const components: string[] = this.filterSearchValue.split(\":\", 2);\n      const key: string = components[0] ? components[0].trim() : null;\n      const value: string = components[1] ? components[1].trim() : null;\n\n      if (!key) {\n         this.clearAndBlurAddFilterElement();\n         return;\n      }\n      const matchedItems: CrossColumnFilterItemComponent[] = this._items.filter(i =>\n            i.label && i.label.toLocaleLowerCase().indexOf(key.toLocaleLowerCase()) > -1);\n      if (matchedItems.length !== 1) {\n         this.clearAndBlurAddFilterElement();\n         return;\n      }\n      if (matchedItems[0].isCustomFilter) {\n         this.openFilter(matchedItems[0]);\n         return;\n      }\n      if (!value) {\n         this.clearAndBlurAddFilterElement();\n         return;\n      }\n      this.filterService.setFilter(new FilterItem(matchedItems[0].field, value));\n      this.clearAndBlurAddFilterElement();\n   }\n\n   clearAndBlurAddFilterElement(): void {\n      this.filterSearchValue = null;\n      this.isDropdownOpened = false;\n      this.focusAddFilterInput(false);\n   }\n\n   clearFilters(): void {\n      this.filterSearchValue = null;\n      this.filterService.clearFilter();\n      this.closeCustomFilter();\n   }\n\n   removeFilter(filter: FilterItem): void {\n      this.filterService.removeFilter(filter);\n   }\n\n   showClearAllFilters(): boolean {\n      const filters: FilterItem[] = this.filterService.getFilter();\n      const allFiltersCount: number =\n            filters.reduce((sum, item) => sum += this.isNonEmptyArray(item.value) ? item.value.length : 1, 0);\n      return allFiltersCount > 1;\n   }\n\n   showAddFilterButton(): boolean {\n      return !this.isCustomFilterOpened && !!this.filterSearchValue;\n   }\n\n   isNonEmptyArray(val: any): boolean {\n      return val && Array.isArray(val) && !!val.length;\n   }\n}\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\n\n// This class is used as a model for items in the FilterService\nexport class FilterItem {\n   constructor(public field: string, // The name of model field to filter\n         public value: any, // The value to filter (type is string | [{key: string, value: string})\n         public localizedField?: string, // The localized string that represents the field in the cross column filter.\n         public localizedValue?: string, // The localized string that represents the value in the cross column filter.\n   ) {}\n}","<ng-content *ngIf=\"show || group\"></ng-content>","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, HostListener, Input} from \"@angular/core\";\n\n/**\n * This class represents a single item (icon and label) of ListFilterComponent\n */\n\n@Component({\n   selector: \"vsan-list-filter-item\",\n   template: `<clr-icon *ngIf=\"iconShape\"\n                        aria-hidden=\"true\"\n                        [attr.shape]=\"iconShape\"\n                        class=\"{{iconClass}} pointer\">\n              </clr-icon>{{label | localized}}`,\n   styleUrls: [\"list-filter-item.scss\"],\n   host: {\n      \"[class.selected-filter]\": \"this.isSelected\",\n      \"[attr.id]\": \"this.key\"},\n})\nexport class ListFilterItemComponent {\n\n   @Input()\n   key: string;\n\n   @Input()\n   label: string;\n\n   @Input()\n   iconShape: string;\n\n   @Input()\n   iconClass: string;\n\n   isSelected: boolean = false;\n   onListItemFilterChanged: EventEmitter<{value: string, localizedValue: string}> =\n       new EventEmitter<{value: string, localizedValue: string}>();\n\n   setSelectedItem(value: boolean) {\n      this.isSelected = value;\n   }\n\n   @HostListener(\"click\")\n   onClick() {\n      this.onListItemFilterChanged.emit(this.isSelected ? null : {value: this.key, localizedValue: this.label});\n   }\n}\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {CrossColumnFilterComponent} from \"@component/cross-column-filter/cross-column-filter.component\";\nimport {CrossColumnFilterGroupComponent} from \"@component/cross-column-filter/cross-column-filter-group.component\";\nimport {CrossColumnFilterItemComponent} from \"@component/cross-column-filter/cross-column-filter-item.component\";\nimport {ListFilterComponent} from \"@component/cross-column-filter/list-filter.component\";\nimport {ListFilterItemComponent} from \"@component/cross-column-filter/list-filter-item.component\";\nimport {ActionButtonModule} from \"@component/action-button/action-button.module\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule,\n      ActionButtonModule,\n   ],\n   declarations: [\n      CrossColumnFilterComponent,\n      CrossColumnFilterGroupComponent,\n      CrossColumnFilterItemComponent,\n      ListFilterComponent,\n      ListFilterItemComponent,\n\n   ],\n   exports: [\n      CrossColumnFilterComponent,\n      CrossColumnFilterGroupComponent,\n      CrossColumnFilterItemComponent,\n      ListFilterComponent,\n      ListFilterItemComponent,\n   ],\n})\nexport class CrossColumnFilterModule {\n}\n","<span class=\"separator\"></span>","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {\n   AfterContentInit,\n   Component,\n   ContentChildren,\n   EventEmitter,\n   QueryList,\n} from \"@angular/core\";\nimport {CustomFilter} from \"./custom-filter\";\nimport {ListFilterItemComponent} from \"./list-filter-item.component\";\n\n/**\n * This class is a used as a custom filter component for the CrossColumnFilterComponent.\n * It selects an item from a list of items.\n */\n@Component({\n   selector: \"vsan-list-filter\",\n   template: `<ng-content select=\"vsan-list-filter-item\"></ng-content>`,\n   styleUrls: [\"list-filter.scss\"],\n})\nexport class ListFilterComponent implements CustomFilter, AfterContentInit {\n\n   @ContentChildren(ListFilterItemComponent)\n   filterItems: QueryList<ListFilterItemComponent>;\n\n   onFilterSet = new EventEmitter<{value: string, localizedValue: string}>();\n\n   setFilterToComponent(filterValue: string) {\n      this.filterItems.forEach(i => i.setSelectedItem(filterValue && (i.key === filterValue) ? true : false));\n   }\n\n   ngAfterContentInit() {\n      if (!(this.filterItems && this.filterItems.length)) {\n         return;\n      }\n      this.filterItems.forEach(item => {\n         item.onListItemFilterChanged.subscribe(filterValue => {\n             this.onFilterSet.emit(filterValue);\n         });\n      });\n   }\n}","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, ContentChildren, Input} from \"@angular/core\";\nimport {CrossColumnFilterItemComponent} from \"./cross-column-filter-item.component\";\n\n/**\n * This class wraps filter items (i.e, CrossColumnFilterItemComponent) in order to represent them\n * under a common group in the cross column filter's dropdown menu. The group name is set via the name property.\n */\n@Component({\n   selector: \"vsan-cross-column-filter-group\",\n   template: `<ng-content select=\"vsan-cross-column-filter-item\"></ng-content>`,\n   styleUrls: [\"cross-column-filter-group.scss\"],\n})\n\nexport class CrossColumnFilterGroupComponent {\n   @Input()\n   name: string;\n\n   @ContentChildren(CrossColumnFilterItemComponent)\n   items: CrossColumnFilterItemComponent[];\n}","<ng-content select=\"vsan-list-filter-item\"></ng-content>","<clr-icon *ngIf=\"iconShape\"\n                        aria-hidden=\"true\"\n                        [attr.shape]=\"iconShape\"\n                        class=\"{{iconClass}} pointer\">\n              </clr-icon>{{label | localized}}","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {\n   AfterContentInit,\n   Component,\n   ContentChild,\n   Input,\n} from \"@angular/core\";\nimport {CustomFilter} from \"./custom-filter\";\nimport {FilterService} from \"./filter.service\";\nimport {FilterItem} from \"./filter-item\";\n\n/**\n * This class is used as a model for the filter items.\n * - The items are declared inside <vsan-cross-column-filter-group>.\n * - Each item is treated as a clickable label from the dropdown menu that opens\n * either a string filter or a custom component filter.\n * - You can declare a custom filter component by projecting it inside the items' content.\n * The custom filter component must implement CustomFilter interface.\n */\n@Component({\n   selector: \"vsan-cross-column-filter-item\",\n   template: `<ng-content *ngIf=\"show || group\"></ng-content>`,\n   styleUrls: [\"cross-column-filter-item.scss\"],\n})\nexport class CrossColumnFilterItemComponent implements AfterContentInit {\n\n   // The name of the field to filter by.\n   @Input()\n   field: string;\n\n   // The label that maps the field to display\n   @Input()\n   label: string;\n\n   group: boolean = false;\n   isCustomFilter: boolean;\n   show = false;\n\n   // A reference to a custom filter component, in case such is declared\n   @ContentChild(\"vsanCustomFilter\")\n   customFilterComponent: CustomFilter;\n\n   constructor(private filterService?: FilterService) {}\n\n   ngAfterContentInit() {\n      if (!this.customFilterComponent) {\n         return;\n      }\n      // If there is a custom filter component projected:\n      this.isCustomFilter = true;\n      // 1) Subscribe to custom component changes and update the filter service state.\n      this.customFilterComponent.onFilterSet.subscribe(filterValue => {\n         const filterItem: FilterItem = (filterValue && filterValue.localizedValue) ?\n             new FilterItem(this.field, filterValue.value, null, filterValue.localizedValue) :\n             new FilterItem(this.field, filterValue);\n         this.filterService.setFilter(filterItem);\n      });\n      // 2) Subscribe to filter service state changes and update the custom component. This is required to handle\n      // filter changes outside of the custom component (i.e., filter removal from the close icon).\n      this.filterService.onFilterChanged.subscribe(filters => {\n         const filterItem: FilterItem = filters.find(f => f.field === this.field);\n         this.customFilterComponent.setFilterToComponent((filterItem && filterItem.value) ? filterItem.value : null);\n      });\n   }\n}","/* Copyright 2017-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component} from \"@angular/core\";\n\n@Component({\n   selector: 'vsan-action-separator',\n   template: '<span class=\"separator\"></span>',\n   styleUrls: ['./action-button-separator.scss']\n})\nexport class ActionButtonSeparatorComponent {\n}","/* Copyright (c) 2019-2020 VMware, Inc. All rights reserved. VMware Confidential */\nimport {Injectable} from \"@angular/core\";\nimport {Observable, Subject} from \"rxjs\";\nimport {FilterItem} from \"./filter-item\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * This class is used in conjunction with the CrossColumnFilterComponent.\n * It manages filtering state and operations (e.g., get, set and remove filter) of CrossColumnFilterComponent.\n */\n@Injectable()\nexport class FilterService {\n   private filters: FilterItem[] = [];\n   private filterLabels: Map<string, string>;\n\n   private _filterChanged: Subject<FilterItem[]> = new Subject<FilterItem[]>();\n   onFilterChanged: Observable<FilterItem[]> = this._filterChanged.asObservable();\n\n   private _filterCleared: Subject<boolean> = new Subject<boolean>();\n   onFilterCleared: Observable<boolean> = this._filterCleared.asObservable();\n\n   // Store filter labels in order to avoid passing the label per each add/replace filter operation.\n   initFilterLabels(filterLabels: Map<string, string>) {\n      this.filterLabels = filterLabels;\n   }\n\n   getFilter(fieldName?: string): FilterItem[] {\n      if (fieldName) {\n         return this.filters.filter(f => f.field === fieldName);\n      } else {\n         return this.filters;\n      }\n   }\n\n   clearFilter(): void {\n      this.filters = [];\n      this._filterChanged.next(this.filters);\n      this._filterCleared.next(true);\n   }\n\n   removeFilter(targetFilter: FilterItem): void {\n      const currentFilter: FilterItem = this.getFilter(targetFilter.field)[0];\n      if (!currentFilter) {\n         return;\n      }\n      if (Array.isArray(currentFilter.value)) {\n         this.removeMultiFilter(targetFilter, currentFilter);\n         return;\n      }\n      this.removeFilterItemByField(targetFilter.field, true);\n   }\n\n   private removeMultiFilter(targetFilter: FilterItem, currentFilter: FilterItem): void {\n      const components: string[] = targetFilter.value.toString().split(\":\");\n      const itemIndex = this.getItemIndex({key: components[0], value: components[1]}, currentFilter.value);\n      if (itemIndex === -1) {\n         return;\n      }\n      currentFilter.value.splice(itemIndex, 1);\n      if (!currentFilter.value.length) {\n         this.removeFilterItemByField(currentFilter.field, true);\n      }\n      this.emitFilterChanges();\n   }\n\n   private getItemIndex(searchItem: {key: string, value: string}, items: Array <{key: string, value: string}>): number {\n      return items.findIndex((item) => item.key === searchItem.key && item.value === searchItem.value);\n   }\n\n   setFilters(filters: FilterItem[]): void {\n      if (filters && filters.length) {\n         this.filters = filters.map(f => this.ensureFilterItemLabel(f));\n         this.emitFilterChanges();\n      }\n   }\n\n   setFilter(targetFilter: FilterItem): void {\n      const currentFilter: FilterItem = this.getFilterItemByField(targetFilter.field);\n      // If the target filter has no value remove it from the current list if it presents\n      if (VsanUiUtils.isEmpty(targetFilter.value)) {\n         if (currentFilter) {\n            this.removeFilterItemByField(targetFilter.field, true);\n         }\n         return;\n      }\n      if (currentFilter) {\n         // If the target filter already presents in the list edit it\n         currentFilter.value = targetFilter.value;\n         currentFilter.localizedValue = targetFilter.localizedValue;\n         this.emitFilterChanges();\n         return;\n      }\n      // If the target filter is new add it to the list\n      this.addFilter(targetFilter);\n      this.emitFilterChanges();\n   }\n\n   /* Toggles a filter:\n       - If field is not present add it.\n       - If field is present but the corresponding value is different, update it.\n       - If the same field and value are passed remove them.\n    */\n   toggleFilter(targetFilter: FilterItem): void {\n      const currentFilter: FilterItem = this.getFilterItemByField(targetFilter.field);\n      // If the target filter has no value remove it from the current list if it presents\n      if (VsanUiUtils.isEmpty(targetFilter.value)) {\n         if (currentFilter) {\n            this.removeFilterItemByField(targetFilter.field, true);\n         }\n         return;\n      }\n      if (currentFilter) {\n         // If the target filter already presents in the list edit it (if the same value s passed it's removed).\n         if (Array.isArray(currentFilter.value)) {\n            this.toggleMultiFilter(targetFilter, currentFilter);\n         } else {\n            if (currentFilter.value === targetFilter.value) {\n               this.removeFilterItemByField(targetFilter.field, false);\n            } else {\n               currentFilter.value = targetFilter.value;\n               currentFilter.localizedValue = targetFilter.localizedValue;\n            }\n         }\n         this.emitFilterChanges();\n         return;\n      }\n      // If the target filter is new add it to the list\n      this.addFilter(targetFilter);\n      this.emitFilterChanges();\n   }\n\n   private toggleMultiFilter(targetFilter: FilterItem, currentFilter: FilterItem): void {\n      const item: {key: string, value: string} = targetFilter.value[0];\n      const itemIndex = this.getItemIndex(item, currentFilter.value);\n      if (itemIndex === -1) {\n         currentFilter.value.push(item);\n      } else {\n         currentFilter.value.splice(itemIndex, 1);\n         if (!currentFilter.value.length) {\n            this.removeFilterItemByField(currentFilter.field, false);\n         }\n      }\n   }\n\n   private removeFilterItemByField(filterField: string, emitFilters: boolean) {\n      this.filters = this.filters.filter(f => !(f.field === filterField));\n      if (emitFilters) {\n         this.emitFilterChanges();\n      }\n   }\n\n   private emitFilterChanges() {\n      this._filterChanged.next(this.filters);\n   }\n\n   private getFilterItemByField(filterField: string): FilterItem {\n      return this.filters.find(f => f.field === filterField);\n   }\n\n   private addFilter(filterItem: FilterItem): void {\n      this.filters.push(this.ensureFilterItemLabel(filterItem));\n   }\n\n   private ensureFilterItemLabel(filterItem: FilterItem): FilterItem {\n      if (filterItem.localizedField) {\n         return filterItem;\n      }\n      filterItem.localizedField = this.filterLabels.get(filterItem.field);\n      return filterItem;\n   }\n}"]}