{"version":3,"sources":["./src/app/vsan/common/component/proxy-settings/proxy-settings.module.ts","./src/app/vsan/common/component/proxy-settings/proxy-inputs.html","./src/app/vsan/common/component/proxy-settings/proxy-inputs.component.ts"],"names":[],"mappings":"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","file":"92-es2015.js","sourcesContent":["/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {ProxyInputsComponent} from \"@component/proxy-settings/proxy-inputs.component\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      ClarityModule,\n      CommonPipeModule,\n      CommonDirectiveModule\n   ],\n   declarations: [\n      ProxyInputsComponent\n   ],\n   exports: [\n      ProxyInputsComponent\n   ],\n})\nexport class ProxySettingsModule {\n}\n","<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<ng-container [formGroup]=\"proxyForm\">\n   <clr-checkbox-container>\n      <clr-checkbox-wrapper>\n         <input clrCheckbox\n                id=\"proxy-checkbox\"\n                name=\"proxyCheckbox\"\n                type=\"checkbox\"\n                formControlName=\"{{ENABLE_PROXY_CONTROL_NAME}}\"\n                [vsan-disable-form-control]=\"!enableInternet\" />\n         <label id=\"proxy-checkbox-label\">\n            {{\"vsan.manage.externalProxySettings.action.edit.enableProxy\" | localized}}\n         </label>\n      </clr-checkbox-wrapper>\n   </clr-checkbox-container>\n\n   <clr-input-container>\n      <label class=\"clr-col-3\" for=\"hostname\">\n         {{\"vsan.manage.externalProxySettings.action.edit.hostName\" | localized}}\n      </label>\n      <input clrInput\n             id=\"hostname\"\n             name=\"hostname\"\n             type=\"text\"\n             class=\"clr-col-9\"\n             formControlName=\"{{HOSTNAME_CONTROL_NAME}}\"\n             [vsan-disable-form-control]=\"disableProxySetting\" />\n      <clr-control-error *clrIfError=\"HOSTNAME_EMPTY_VALIDATION\">\n         {{\"vsan.manage.externalProxySettings.action.edit.hostName.notSet\" | localized}}\n      </clr-control-error>\n      <clr-control-error *clrIfError=\"HOSTNAME_VALIDATION\">\n         {{\"vsan.manage.externalProxySettings.action.edit.hostName.invalid\" | localized}}\n      </clr-control-error>\n   </clr-input-container>\n\n   <clr-input-container>\n      <label class=\"clr-col-3\" for=\"port\">\n         {{\"vsan.manage.externalProxySettings.action.edit.port\" | localized}}\n      </label>\n      <input clrInput\n             id=\"port\"\n             name=\"port\"\n             type=\"number\"\n             class=\"clr-col-9\"\n             formControlName=\"{{PORT_CONTROL_NAME}}\"\n             [vsan-disable-form-control]=\"disableProxySetting\" />\n      <clr-control-error *clrIfError=\"PORT_VALIDATION\">\n         {{\"vsan.manage.externalProxySettings.action.edit.port.invalid\" | localized}}\n      </clr-control-error>\n   </clr-input-container>\n\n   <clr-input-container>\n      <label for=\"username\" class=\"clr-col-3\">\n         {{\"vsan.manage.externalProxySettings.action.edit.username\" | localized}}\n      </label>\n      <input clrInput\n             id=\"username\"\n             name=\"username\"\n             type=\"text\"\n             class=\"clr-col-9\"\n             formControlName=\"{{USERNAME_CONTROL_NAME}}\"\n             [vsan-disable-form-control]=\"disableProxySetting\" />\n   </clr-input-container>\n\n   <clr-input-container>\n      <label for=\"password\" class=\"clr-col-3\">\n         {{\"vsan.manage.externalProxySettings.action.edit.password\" | localized}}\n      </label>\n      <input clrInput\n             id=\"password\"\n             name=\"password\"\n             type=\"password\"\n             class=\"clr-col-9\"\n             formControlName=\"{{PASSWORD_CONTROL_NAME}}\"\n             [vsan-disable-form-control]=\"disableProxySetting\" />\n   </clr-input-container>\n</ng-container>","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {\n   AbstractControl,\n   ControlValueAccessor,\n   FormBuilder, FormControl, FormGroup,\n   NG_VALIDATORS, NG_VALUE_ACCESSOR,\n   ValidationErrors,\n   Validator, ValidatorFn,\n} from \"@angular/forms\";\nimport {ReferenceWatcher} from \"@util/reference-watcher\";\n\n@Component({\n   selector: \"vsan-proxy-inputs\",\n   templateUrl: \"proxy-inputs.html\",\n   styleUrls: [\"proxy-inputs.scss\"],\n   providers: [\n      {\n         provide: NG_VALUE_ACCESSOR,\n         multi: true,\n         useExisting: ProxyInputsComponent,\n      },\n      {\n         provide: NG_VALIDATORS,\n         multi: true,\n         useExisting: ProxyInputsComponent,\n      },\n      ReferenceWatcher,\n   ],\n})\nexport class ProxyInputsComponent implements ControlValueAccessor, Validator {\n\n   private static readonly PORT_MIN_VALUE: number  = 0;\n   private static readonly PORT_MAX_VALUE: number = 65535;\n   private static readonly EMPTY_SPACE_PATTERN: RegExp = /\\s/g;\n\n   private onChangeCallback: (value: any) => void;\n   private onTouchedCallback: any;\n\n   readonly ENABLE_PROXY_CONTROL_NAME: string = \"enableProxy\";\n   readonly HOSTNAME_CONTROL_NAME: string = \"hostname\";\n   readonly PORT_CONTROL_NAME: string = \"port\";\n   readonly USERNAME_CONTROL_NAME: string = \"username\";\n   readonly PASSWORD_CONTROL_NAME: string = \"password\";\n\n   readonly HOSTNAME_EMPTY_VALIDATION: string = \"hostnameEmptyValidation\";\n   readonly HOSTNAME_VALIDATION: string = \"hostnameValidation\";\n   readonly PORT_VALIDATION: string = \"portValidation\";\n   private readonly PROXY_SETTING_VALIDATION: string = \"invalidProxySetting\";\n\n   @Input()\n   enableInternet: boolean;\n\n   proxyForm: FormGroup;\n   originalProxy: ProxySetting;\n\n   constructor(private formBuilder: FormBuilder, private refWatcher: ReferenceWatcher) {\n      this.proxyForm = this.formBuilder.group({\n         [this.ENABLE_PROXY_CONTROL_NAME]: new FormControl(false),\n         [this.HOSTNAME_CONTROL_NAME]: new FormControl(\"\", this.hostnameValidator),\n         [this.PORT_CONTROL_NAME]: new FormControl(null, this.portValidator),\n         [this.USERNAME_CONTROL_NAME]: new FormControl(\"\"),\n         [this.PASSWORD_CONTROL_NAME]: new FormControl(\"\"),\n      });\n\n      this.refWatcher.watchSubscriptionRef(this.proxyForm.valueChanges.subscribe(this.onChange));\n   }\n\n   writeValue(controlValue: ProxySetting): void {\n      if (controlValue) {\n         // UI cannot get password from API and the backend API only accepts a new password,\n         // so here we don't display password and let user input a new one.\n         controlValue.password = null;\n         this.originalProxy = controlValue;\n      } else {\n         this.originalProxy = new ProxySetting();\n      }\n      this.proxyForm.setValue(this.originalProxy, {emitEvent: false});\n   }\n\n   registerOnChange(fn: (value: any) => void): void {\n      this.onChangeCallback = fn;\n   }\n\n   registerOnTouched(fn: any): void {\n      this.onTouchedCallback = fn;\n   }\n\n   onChange = (val: any) => {\n      // There is no onChangeCallback and onTouchedCallback when this component is used in ProxySettingsPageComponent.\n      if (this.onChangeCallback && this.onTouchedCallback) {\n         // Update the value of the component to match the expected model of type ProxySetting.\n         this.onChangeCallback(val);\n         this.onTouchedCallback();\n      }\n   };\n\n   validate(ctrl: AbstractControl = null): ValidationErrors {\n      // When clicking on checkbox, FormGroup's touched property doesn't change and dirty property changes.\n      // And when clicking on input, its touched property chagnes. So here we need to check dirty and touched property.\n      return !this.disableProxySetting && this.proxyForm && (this.proxyForm.dirty || this.proxyForm.touched) &&\n            this.proxyForm.invalid ? {[this.PROXY_SETTING_VALIDATION] : { value: ctrl.value}} : null;\n   }\n\n   private hostnameValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n      if (this.disableProxySetting) {\n         return null;\n      } else if (!this.getHostname()) {\n         return {[this.HOSTNAME_EMPTY_VALIDATION]: {value: control.value}};\n      }\n\n      return this.getHostname().match(ProxyInputsComponent.EMPTY_SPACE_PATTERN) ?\n            {[this.HOSTNAME_VALIDATION]: {value: control.value}} : null;\n   };\n\n   private portValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n      const isInvalidPort: boolean = (!this.getPort() && this.getPort() !== 0) || // 0 is a valid port number.\n            this.getPort() < ProxyInputsComponent.PORT_MIN_VALUE ||\n            this.getPort() > ProxyInputsComponent.PORT_MAX_VALUE;\n      return !this.disableProxySetting && isInvalidPort ? {[this.PORT_VALIDATION]: {value: control.value}} : null;\n   };\n\n   get disableProxySetting(): boolean {\n      return !this.enableInternet || !this.getEnableProxy();\n   }\n\n   private getEnableProxy(): boolean {\n      return this.proxyForm ? this.proxyForm.get(this.ENABLE_PROXY_CONTROL_NAME).value : false;\n   }\n\n   private getHostname(): string {\n      return this.proxyForm ? this.proxyForm.get(this.HOSTNAME_CONTROL_NAME).value : null;\n   }\n\n   private getPort(): number {\n      return this.proxyForm ? this.proxyForm.get(this.PORT_CONTROL_NAME).value : null;\n   }\n\n   value(): ProxySetting {\n      if (!this.proxyForm) {\n         return null;\n      }\n\n      return new ProxySetting(this.getValue(this.ENABLE_PROXY_CONTROL_NAME),\n            this.getValue(this.HOSTNAME_CONTROL_NAME),\n            this.getValue(this.PORT_CONTROL_NAME),\n            this.getValue(this.USERNAME_CONTROL_NAME),\n            this.getValue(this.PASSWORD_CONTROL_NAME));\n   }\n\n   private getValue(control: string): any {\n      return this.proxyForm.get(control).value;\n   }\n}\n\nexport class ProxySetting {\n   constructor(\n      public enableProxy: boolean = false,\n      public hostname: string = null,\n      public port: number = null,\n      public username: string = null,\n      public password: string = null) {\n   }\n}"],"sourceRoot":"webpack:///"}