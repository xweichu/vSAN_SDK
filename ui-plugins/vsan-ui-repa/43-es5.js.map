{"version":3,"sources":["webpack:///src/app/vsan/common/component/datagrid/filter/enum-filter.component.ts","webpack:///src/app/vsan/common/component/virtual-objects-table/export/virtual-objects-data-source-adapter.ts","webpack:///src/app/vsan/common/component/virtual-objects-table/virtual-objects-table.html","webpack:///src/app/vsan/common/component/export/downloaders/csv-downloader.ts","webpack:///src/app/generated/durability-state.ts","webpack:///src/app/vsan/common/component/virtual-objects-table/whatIf-state-label.pipe.ts","webpack:///src/app/vsan/common/directive/grid-scroll/datagrid-scroll-to-row.directive.ts","webpack:///src/app/vsan/common/component/virtual-objects-table/filter/virtual-objects-type-filter.component.ts","webpack:///src/app/vsan/common/component/export/downloaders/downloader.ts","webpack:///src/app/vsan/common/component/datagrid/filter/enum-filter.html","webpack:///src/app/vsan/common/component/virtual-objects-table/filter/virtual-objects-type-filter.html","webpack:///src/app/vsan/common/component/export/export.component.html","webpack:///src/app/vsan/common/directive/grid-scroll/scroll-to-current.directive.ts","webpack:///src/app/vsan/common/component/virtual-objects-table/export/virtual-objects-export-config.ts","webpack:///src/app/vsan/common/pipe/virtual-objects/durability-state-icon-class.pipe.ts","webpack:///src/app/vsan/common/pipe/virtual-objects/durability-state-icon-shape.pipe.ts","webpack:///src/app/vsan/common/component/export/adapters/datagrid-export-data-source-adapter.ts","webpack:///src/app/vsan/common/pipe/virtual-objects/health-state-label.pipe.ts","webpack:///src/app/vsan/common/component/export/export-content.ts","webpack:///src/app/vsan/common/component/export/export.component.ts","webpack:///src/app/vsan/common/component/virtual-objects-table/filter/virtual-object-filter.ts","webpack:///src/app/vsan/common/component/virtual-objects-table/virtual-objects-table.component.ts","webpack:///src/app/vsan/common/component/virtual-objects-table/whatIf-state-icon-class.pipe.ts","webpack:///src/app/vsan/common/component/virtual-objects-table/whatIf-state-icon-shape.pipe.ts","webpack:///src/app/vsan/common/component/virtual-objects-table/export/virtual-object-model-with-parent.ts","webpack:///src/app/vsan/common/pipe/virtual-objects/durability-state-label.pipe.ts"],"names":["EnumFilterComponent","selectedFilterValuesChange","_field","field","filterSelectionResolver","createFilterSelectionResolver","changes","objects","currentValue","objectGroups","generateGroupsMap","groups","groupObjectsByField","size","Map","entries","sort","a","b","toString","localeCompare","prop","item","filters","some","filter","children","isEmpty","child","type","enumToLabelConverter","key","value","childrenProp","forEach","obj","has","set","count","get","length","selectedFilterValues","emit","VirtualObjectsDataSourceAdapter","datagridAdapter","isSelectionSupported","loadAllVirtualObjects","isVirtualObjectSelected","isChildVirtualObjectFiltered","allVirtualObjects","flat","allVirtualObjectsByDatagrid","allItems","filteredVirtualObjectsByDatagrid","vo","isParentOrFilteredChild","filteredItems","self","selectedItems","virtualObjects","reduce","accumulator","virtualObject","concat","createParent","createChildren","isParent","parent","CsvDownloader","FILE_TYPE","CSV","content","formatAsCsvRow","labels","values","map","join","ROW_TERMINATOR","strings","str","escape","VALUE_SEPARATOR","unescapedStr","escapedStr","replace","DurabilityState","VirtualObjectWhatIfStateLabelPipe","status","getComplianceStatusLabel","DatagridScrollToRowDirective","el","previousMarkedForScrollingRowsCount","rows","isDetectionTriggered","markedForScrollingRows","_markedForScrollingRows","detectMarkedForScrollingRowsChange","scrollToElement","findFirstRowToScrollTo","scrollToRow","element","setTimeout","find","isSelectedElement","scrollableWrapper","nativeElement","querySelector","ROWS_SCROLLABLE_CONTAINER_SELECTOR","scrollTop","getScrollToPosition","row","tagName","toLowerCase","DETAIL_ROW_SELECTOR","previousElementSibling","offsetTop","DETAILS_SCROLL_FIX","PARENT_ROW_SELECTOR","refElement","firstElementChild","offsetHeight","warn","VirtualObjectsTypeFilterComponent","FIELD_NAME","filterItems","isInit","_virtualObjects","setFilterItems","labelFunction","filterItem","findFilter","push","FilterTypeItem","countCompare","areEquals","filterValue1","filterValue2","extendedTypeId","displayType","Downloader","fileType","fileExtension","fileName","download","createBlob","buildFileNameWithExtension","formatContent","addTimeStamp","ScrollToCurrent","VirtualObjectsExportConfig","datagrid","isWhatIfData","showPolicy","isDurabilitySupported","objectName","whatIfResult","health","durability","storagePolicyName","storagePolicyPFTT","storagePolicySFTT","uuid","dataExtractor","o","defaultVal","getString","compositeHealth","complianceState","NON_COMPLIANT","getVsanObjectHealthStatusText","incomplianceReason","rebuildState","policyState","healthStatus","healthState","durabilityStateFormatter","label","getDisplayName","getTypeLabel","whatIfComplianceStatus","stringifyHealth","transform","durabilityState","storagePolicy","name","pFtt","sFtt","uid","DurabilityStateIconClassPipe","state","GUARANTEED","CLR_SUCCESS_ICON_CLASS","EXCEEDED_COMP_LIMIT","NO_RESOURCE","NO_SPACE","STALE_DURABILITY_COMP","CLR_WARN_ICON_CLASS","NO_ICON_CLASS","DurabilityStateIconShapePipe","CLR_SUCCESS_STANDARD_ICON_SHAPE","CLR_WARN_STANDARD_ICON_SHAPE","EMPTY_ICON","DatagridExportDataSourceAdapter","DATAGRID_ALL_ITEMS_PROP","DATAGRID_FILTERED_ITEMS_PROP","items","dgSelection","selectionType","dgSelectionType","None","Multi","current","Single","currentSingle","selection","SELECTION_TYPE","VirtualObjectHealthStateLabelPipe","ExportContent","dataExtractors","getLabels","getValues","ExportComponent","downloader","onLoadingStateChange","onLoadingError","isLoading","allItemsCount","filteredItemsCount","selectedItemsCount","source","isSelectionEnabled","downloadingType","filename","Promise","changeLoadingState","then","loadedItems","error","create","VirtualObjectFilter","dataField","pipe","CHILDREN_FIELD","data","search","areMatching","getFieldValue","accepts","stringifyFieldValue","fieldValue","includes","isUnset","hasNotApplicableValue","STORAGE_POLICY_NAME_FIELD","STORAGE_POLICY_PFTT_FIELD","STORAGE_POLICY_SFTT_FIELD","VirtualObjectsTableComponent","permissionService","virtualObjectsTableService","navigationService","referenceWatcher","tableState","VsanUiUtils","Icon","VirtualObjectsTypeUtil","pageSize","defaultGridPageSize","NAME_FIELD","WHAT_IF_COMPLIANCE_FIELD","UID_FIELD","ENHANCED_DURABILITY_KB","EXPANSION_STATE_SHOW_HIDE_CLASS","EXPANSION_STATE_CLASS","currentPage","showPolicyColumns","autoExpandRowSubscriptions","autoExpandRowSubject","selectionChanged","filterChanged","nameFilter","whatIfComplianceStatusFilter","storagePolicyNameFilter","storagePolicyPFTTFilter","storagePolicySFTTFilter","vsanUuidFilter","selectionSnapshot","onSelectionChanged","getSelectedVirtualObjects","toggleRowExpansion","expand","isStopped","expanded","isExpanded","onPolicyClicked","navigateWithoutContextObject","VM_STORAGE_POLICIES_VIEW","watchSubscriptionRef","subscribe","_appliedHealthStateFilters","JSON","stringify","hasChangedHealthStateFilters","notifyFilterChange","isLastVirtualObjectsDataEmpty","parse","prepareSnapShotSelection","toggleSelection","hasAppliedFilters","toggleAutoExpand","clear","isSelected","Math","floor","indexOf","gridRows","unsubscribeRemovedRows","displayCells","registerForAutoExpandEvent","expandedChange","toggleManualExpand","managedObject","clusterId","fromUid","contextObject","hasVcPermissions","READ_POLICIES","onResetFilters","clearFilters","initExportDataSource","exportDataSource","createExportDataSource","hideRowSelection","isMatchingTextSearch","selectedUuids","model","presentVirtualObjectUuids","isVM","isExtensionApp","isIscsiTarget","navigateTo","VM_SUMMARY","vmRef","navigateToPersistenceServiceExtension","applicationInstanceId","iscsiTargetsContext","targetAlias","CLUSTER_ISCSI_TARGETS","id","expandableStateRowSubscription","newRows","unsubscribe","nameFilterValue","complianceFilterValue","storagePolicyNameFilterValue","storagePolicyPFTTFilterValue","storagePolicySFTTFilterValue","typeFilterValue","VM","EXTENSION_APP","vmodlType","iscsiTarget","ISCSI_TARGET","areAllSelected","toggleSelectionOnAll","containSearch","vsanUuidFilterValue","match","appliedHealthStateFilters","next","getDatagridFooterLabel","pagination","resultStyle","UNKNOWN","VirtualObjectWhatIfStateIconClassPipe","CLR_SOLID_ICON_CLASS","getColorClass","INACCESSIBLE","CLR_ERROR_ICON_CLASS","NOT_COMPLIANT","CLR_HIGHLIGHT_ICON_CLASS","VirtualObjectWhatIfStateIconShapePipe","CLR_ERROR_STANDARD_ICON_SHAPE","CLR_INFO_STANDARD_ICON_SHAPE","VirtualObjectModelWithParent","parentVirtualObject","childrenVirtualObjects","DurabilityStateLabelPipe"],"mappings":"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","file":"43-es5.js","sourcesContent":["/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnChanges, Output, SimpleChanges} from \"@angular/core\";\nimport {EnumeratedFilterSelectionResolver} from \"@component/datagrid/filter/enumerated-filter.component\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {KeyValue} from \"@angular/common\";\n\n@Component({\n   templateUrl: \"enum-filter.html\",\n   selector: \"vsan-enum-filter\",\n   styleUrls: [\"enum-filter.scss\"],\n})\nexport class EnumFilterComponent<T, K> implements OnChanges {\n\n   objectGroups: Map<T, number>;\n   filterSelectionResolver: EnumeratedFilterSelectionResolver<T, K>;\n\n   @Input()\n   objects: K[];\n\n   private _field: string;\n\n   get field(): string {\n      return this._field;\n   }\n\n   @Input()\n   set field(field: string) {\n      this._field = field;\n      this.filterSelectionResolver = this.createFilterSelectionResolver(field);\n   }\n\n   @Input()\n   selectedFilterValues: K[];\n\n   @Output()\n   selectedFilterValuesChange: EventEmitter<K[]> = new EventEmitter<K[]>();\n\n   @Input()\n   enumToLabelConverter: EnumToLabelConverter<T>;\n\n   ngOnChanges(changes: SimpleChanges): void {\n      // If etiher \"objects\" or \"field\" props are changed, the groups map needs to be rebuilt\n      if (changes.objects && changes.objects.currentValue ||\n            changes.field && changes.field.currentValue) {\n         this.objectGroups = this.generateGroupsMap();\n      }\n   }\n\n   private generateGroupsMap(): Map<any, number> {\n      const groups: Map<K, number> = this.groupObjectsByField(this.objects);\n      if (!groups || !groups.size) {\n         return groups;\n      }\n      // filter empty types, sort alphabetically. a[0], b[0] compare keys; a[1], b[1] compare values\n      return new Map([...groups.entries()]\n            .sort((a, b) => a[0].toString().localeCompare(b[0].toString())));\n   }\n\n   /**\n    * Creates a FilterSelectionResolver that is used when a filter is applied.\n    */\n   private createFilterSelectionResolver(prop: string): EnumeratedFilterSelectionResolver<T, K> {\n      return new class extends EnumeratedFilterSelectionResolver<T, K> {\n\n         constructor(private field: string) {\n            super();\n         }\n\n         isSelected(item: any, filters: any[]): boolean {\n            // If the given object matches the filter, show it\n            if (filters.some(filter => (filter === item[this.field]))) {\n               return true;\n            }\n            // If any of the object's children matches the filter, show the whole object (not only the child)\n            const children: any[] = item.children;\n            if (!VsanUiUtils.isEmpty(children) && filters.some(\n                  filter => children.some(child => child[this.field] === filter))) {\n               return true;\n            }\n            // Otherwise - hide the object\n            return false;\n         }\n      }(prop);\n   }\n\n   /**\n    * Returns the label to be shown in the filter's dropdown.\n    */\n   getLabel(type: KeyValue<T, number>): string {\n      return `${this.enumToLabelConverter(type.key)} (${type.value})`;\n   }\n\n   /**\n    * Recursively traverse all the objects and their children and groups them by the filter field. Then returns\n    * a report about how many objects each group has.\n    * @param objects The objects to be traversed\n    * @param groups The initial map holding the groups\n    */\n   private groupObjectsByField(objects: any[],\n         groups: Map<any, number> = new Map<any, number>(),\n         childrenProp: string = \"children\"): Map<any, number> {\n      objects.forEach(obj => {\n         const key: any = obj[this.field];\n         if (!!key) {\n            if (!groups.has(key)) {\n               groups.set(key, 0);\n            }\n            let count: number = groups.get(key);\n            groups.set(key, ++count);\n         }\n\n         // recursively traverse all children if any\n         const children: any[] = obj[childrenProp];\n         if (children && children.length) {\n            this.groupObjectsByField(children, groups);\n         }\n      });\n      return groups;\n   }\n\n   onSelectedFilterValuesChange(value: K[]): void {\n      if (this.selectedFilterValues === value) {\n         return;\n      }\n      this.selectedFilterValues = value;\n      this.selectedFilterValuesChange.emit(this.selectedFilterValues);\n   }\n}\n\n/**\n * A mapper function between an enum and a string that will be shown in the UI.\n */\nexport type EnumToLabelConverter<T> = (type: T) => string;\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ExportDataSource} from \"@component/export/export-data-source\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {VirtualObjectModelWithParent} from \"@component/virtual-objects-table/export/virtual-object-model-with-parent\";\nimport {DatagridExportDataSourceAdapter} from \"@component/export/adapters/datagrid-export-data-source-adapter\";\n\nexport class VirtualObjectsDataSourceAdapter implements ExportDataSource {\n   constructor(\n         private datagridAdapter: DatagridExportDataSourceAdapter,\n         private isSelectionSupported: boolean,\n         private loadAllVirtualObjects: () => VirtualObjectModel[],\n         private isVirtualObjectSelected: (vo: VirtualObjectModel) => boolean,\n         private isChildVirtualObjectFiltered: (parent: VirtualObjectModel, child: VirtualObjectModel) => boolean) { }\n\n   get allItems(): any[] {\n      const allVirtualObjects: VirtualObjectModel[] = this.loadAllVirtualObjects();\n      return allVirtualObjects?.length > 0\n            ? this.flat(allVirtualObjects)\n            : this.flat(this.allVirtualObjectsByDatagrid);\n   }\n\n   get allItemsCount(): number {\n      return this.allItems.length;\n   }\n\n   get filteredItems(): any[] {\n      return this.flat(this.filteredVirtualObjectsByDatagrid).filter(vo => this.isParentOrFilteredChild(vo));\n   }\n\n   get filteredItemsCount(): number {\n      return this.filteredItems.length;\n   }\n\n   get isSelectionEnabled(): boolean {\n      return this.isSelectionSupported;\n   }\n\n   get selectedItems(): any[] {\n      return (this.filteredItems as VirtualObjectModelWithParent[]).filter(vo => this.isVirtualObjectSelected(vo.self));\n   }\n\n   get selectedItemsCount(): number {\n      return this.selectedItems.length;\n   }\n\n   private flat(virtualObjects: VirtualObjectModel[]): VirtualObjectModelWithParent[] {\n      if (!virtualObjects?.length) {\n         return [];\n      }\n\n      return virtualObjects.reduce(\n            (accumulator: VirtualObjectModelWithParent[], virtualObject: VirtualObjectModel) => accumulator\n                  .concat(VirtualObjectModelWithParent.createParent(virtualObject))\n                  .concat(...VirtualObjectModelWithParent.createChildren(virtualObject, virtualObject.children))\n            , []);\n   }\n\n   private get allVirtualObjectsByDatagrid(): VirtualObjectModel[] {\n      return this.datagridAdapter.allItems as VirtualObjectModel[];\n   }\n\n   private get filteredVirtualObjectsByDatagrid(): VirtualObjectModel[] {\n      return this.datagridAdapter.filteredItems as VirtualObjectModel[];\n   }\n\n   /**\n    * Parent virtual objects are already filtered by the datagrid filters.\n    * We need to filter child virtual objects because they are manually handled in the virtual objects table.\n    */\n   private isParentOrFilteredChild(virtualObject: VirtualObjectModelWithParent): boolean {\n      return virtualObject.isParent || this.isChildVirtualObjectFiltered(virtualObject.parent, virtualObject.self);\n   }\n}","<!-- Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<clr-datagrid id=\"data\"\n              #dataGrid\n              vsan-datagrid-scroll-to-row\n              [clrDgLoading]=\"loading\">\n   <!-- Datagrid Header -->\n   <clr-dg-column class=\"selector-column\" *ngIf=\"!hideRowSelection\">\n      <input type=\"checkbox\" clrCheckbox [(ngModel)]=\"allSelected\"/>\n   </clr-dg-column>\n   <clr-dg-column class=\"primary-column\" vsan-show-title>\n      {{\"vsan.monitor.cluster.virtualObjects.column.name\" | localized}}\n      <clr-dg-string-filter [clrDgStringFilter]=\"nameFilter\"\n                            [(clrFilterValue)]=\"nameFilterValue\"\n                            (clrFilterValueChange)=\"notifyFilterChange()\">\n      </clr-dg-string-filter>\n   </clr-dg-column>\n   <clr-dg-column class=\"type-column\" [clrDgField]=\"'type'\" vsan-show-title>\n      {{\"vsan.monitor.cluster.virtualObjects.column.type\" | localized}}\n      <clr-dg-filter>\n         <vsan-virtual-objects-type-filter [virtualObjects]=\"virtualObjects\"\n                                           [labelFunction]=\"getTypeLabel\"\n                                           [selectedFilterValues]=\"typeFilterValue\"\n                                           (selectedFilterValuesChange)=\"onSelectedFilterTypeChanged($event)\">\n         </vsan-virtual-objects-type-filter>\n      </clr-dg-filter>\n   </clr-dg-column>\n   <clr-dg-column *ngIf=\"isWhatIfData\" class=\"primary-column\" vsan-show-title [clrDgField]=\"'whatIfComplianceStatus'\">\n      {{\"vsan.monitor.cluster.virtualObjects.column.whatIfResult\" | localized}}\n      <clr-dg-filter>\n         <vsan-enum-filter [objects]=\"virtualObjects\"\n                           [field]=\"'whatIfComplianceStatus'\"\n                           [enumToLabelConverter]=\"VirtualObjectsTypeUtil.getComplianceStatusLabel\">\n         </vsan-enum-filter>\n      </clr-dg-filter>\n   </clr-dg-column>\n   <clr-dg-column *ngIf=\"!isWhatIfData\" class=\"health-column\">\n      {{\"vsan.monitor.cluster.virtualObjects.column.placementAndAvailabilityHealth\" | localized}}\n   </clr-dg-column>\n   <clr-dg-column *ngIf=\"isWhatIfData && isDurabilitySupported\"\n                  class=\"primary-column\"\n                  vsan-show-title>\n      {{\"vsan.monitor.cluster.virtualObjects.column.durability\" | localized}}\n      <clr-signpost [vsan-signpost-title]=\"'vsan.monitor.cluster.virtualObjects.column.durability.signpost.label' | localized\">\n         <clr-icon shape=\"info-circle\" size=\"20\" clrSignpostTrigger></clr-icon>\n         <clr-signpost-content *clrIfOpen [clrPosition]=\"'bottom-middle'\">\n            <span>\n               {{\"vsan.monitor.cluster.virtualObjects.column.durability.info\" | localized}}\n            </span>\n            <a [external-link] [articleId]=\"ENHANCED_DURABILITY_KB\"></a>\n         </clr-signpost-content>\n      </clr-signpost>\n      <clr-dg-filter>\n         <vsan-enum-filter\n               [objects]=\"virtualObjects\"\n               [field]=\"'durabilityState'\"\n               [enumToLabelConverter]=\"getDurabilityLabel\">\n         </vsan-enum-filter>\n      </clr-dg-filter>\n   </clr-dg-column>\n   <clr-dg-column *ngIf=\"showPolicyColumns\" class=\"primary-column\" vsan-show-title [clrDgField]=\"'storagePolicy'\">\n      {{\"vsan.monitor.cluster.virtualObjects.column.storagePolicy\" | localized}}\n      <clr-dg-string-filter [clrDgStringFilter]=\"storagePolicyNameFilter\"\n                            [(clrFilterValue)]=\"storagePolicyNameFilterValue\"\n                            (clrFilterValueChange)=\"notifyFilterChange()\">\n      </clr-dg-string-filter>\n   </clr-dg-column>\n   <clr-dg-column *ngIf=\"showPolicyColumns\" class=\"primary-column\" vsan-show-title [clrDgField]=\"'storagePolicy'\">\n      <ng-container *clrDgHideableColumn=\"{hidden: true}\">\n         {{\"vsan.monitor.cluster.virtualObjects.column.storagePolicy.pftt\" | localized}}\n      </ng-container>\n      <clr-dg-string-filter [clrDgStringFilter]=\"storagePolicyPFTTFilter\"\n                            [(clrFilterValue)]=\"storagePolicyPFTTFilterValue\"\n                            (clrFilterValueChange)=\"notifyFilterChange()\">\n      </clr-dg-string-filter>\n   </clr-dg-column>\n   <clr-dg-column *ngIf=\"showPolicyColumns\" class=\"primary-column\" vsan-show-title [clrDgField]=\"'storagePolicy'\">\n      <ng-container *clrDgHideableColumn=\"{hidden: true}\">\n         {{\"vsan.monitor.cluster.virtualObjects.column.storagePolicy.sftt\" | localized}}\n      </ng-container>\n      <clr-dg-string-filter [clrDgStringFilter]=\"storagePolicySFTTFilter\"\n                            [(clrFilterValue)]=\"storagePolicySFTTFilterValue\"\n                            (clrFilterValueChange)=\"notifyFilterChange()\">\n      </clr-dg-string-filter>\n   </clr-dg-column>\n   <clr-dg-column class=\"vsan-uuid-column\" vsan-show-title [clrDgField]=\"'uid'\">\n      {{\"vsan.monitor.cluster.virtualObjects.column.uuid\" | localized}}\n      <clr-dg-string-filter [clrDgStringFilter]=\"vsanUuidFilter\"\n                            [(clrFilterValue)]=\"vsanUuidFilterValue\"\n                            (clrFilterValueChange)=\"notifyFilterChange()\">\n      </clr-dg-string-filter>\n   </clr-dg-column>\n\n   <!-- Datagrid content -->\n   <clr-dg-row *clrDgItems=\"let parent of virtualObjects\"\n               [clrDgItem]=\"parent\"\n               [vsan-scroll-to-current]=\"tableState.isSelected(parent)\"\n               class=\"signpost-row-height-fix\">\n\n      <!-- Top level cells -->\n      <clr-dg-cell class=\"selector-cell\" *ngIf=\"!hideRowSelection\">\n         <ng-container *ngTemplateOutlet=\"colSelector; context: {item: parent}\"></ng-container>\n      </clr-dg-cell>\n\n      <clr-dg-cell>\n         <ng-container *ngTemplateOutlet=\"colName; context: {item: parent}\"></ng-container>\n      </clr-dg-cell>\n\n      <clr-dg-cell vsan-show-title>\n         <ng-container *ngTemplateOutlet=\"colType; context: {item: parent}\"></ng-container>\n      </clr-dg-cell>\n\n      <clr-dg-cell *ngIf=\"isWhatIfData\">\n         <ng-container *ngTemplateOutlet=\"colComplianceStatus; context: {item: parent}\"></ng-container>\n      </clr-dg-cell>\n\n      <clr-dg-cell *ngIf=\"!isWhatIfData\" class=\"health-column\">\n         <ng-container *ngTemplateOutlet=\"colHealthState; context: {item: parent}\"></ng-container>\n      </clr-dg-cell>\n\n      <clr-dg-cell *ngIf=\"isWhatIfData && isDurabilitySupported\">\n         <ng-container *ngTemplateOutlet=\"colDurabilityState; context: {item: parent}\"></ng-container>\n      </clr-dg-cell>\n\n      <clr-dg-cell *ngIf=\"showPolicyColumns\" vsan-show-title>\n         <ng-container *ngTemplateOutlet=\"colStorageProfileName; context: {item: parent}\"></ng-container>\n      </clr-dg-cell>\n\n      <clr-dg-cell *ngIf=\"showPolicyColumns\" vsan-show-title>\n         <ng-container *ngTemplateOutlet=\"colStorageProfilePFTT; context: {item: parent}\"></ng-container>\n      </clr-dg-cell>\n\n      <clr-dg-cell *ngIf=\"showPolicyColumns\" vsan-show-title>\n         <ng-container *ngTemplateOutlet=\"colStorageProfileSFTT; context: {item: parent}\"></ng-container>\n      </clr-dg-cell>\n\n      <clr-dg-cell vsan-show-title>\n         <ng-container *ngTemplateOutlet=\"colVsanUuid; context: {item: parent}\"></ng-container>\n      </clr-dg-cell>\n\n      <ng-container ngProjectAs=\"clr-dg-row-detail\" *ngFor=\"let child of parent.children || []\">\n         <!--Inner cells-->\n         <ng-container *ngIf=\"isMatchingTextSearch(parent, child)\">\n            <clr-dg-row-detail *clrIfExpanded [vsan-scroll-to-current]=\"tableState.isSelected(child)\">\n               <clr-dg-cell class=\"selector-cell indented-content\" *ngIf=\"!isWhatIfData && !hideRowSelection\">\n                  <ng-container *ngTemplateOutlet=\"colSelector; context: {item: child}\"></ng-container>\n               </clr-dg-cell>\n\n               <clr-dg-cell class=\"indented-content\" vsan-show-title>\n                  <ng-container *ngTemplateOutlet=\"colName; context: {item: child}\"></ng-container>\n               </clr-dg-cell>\n\n               <clr-dg-cell vsan-show-title>\n                  <ng-container *ngTemplateOutlet=\"colType; context: {item: child}\"></ng-container>\n               </clr-dg-cell>\n\n               <clr-dg-cell *ngIf=\"isWhatIfData\">\n                  <ng-container *ngTemplateOutlet=\"colComplianceStatus; context: {item: child}\"></ng-container>\n               </clr-dg-cell>\n\n               <clr-dg-cell *ngIf=\"!isWhatIfData\" class=\"health-column\">\n                  <ng-container *ngTemplateOutlet=\"colHealthState; context: {item: child}\"></ng-container>\n               </clr-dg-cell>\n\n               <clr-dg-cell *ngIf=\"isWhatIfData && isDurabilitySupported\">\n                  <ng-container *ngTemplateOutlet=\"colDurabilityState; context: {item: child}\"></ng-container>\n               </clr-dg-cell>\n\n               <clr-dg-cell *ngIf=\"showPolicyColumns\" vsan-show-title>\n                  <ng-container *ngTemplateOutlet=\"colStorageProfileName; context: {item: child}\"></ng-container>\n               </clr-dg-cell>\n\n               <clr-dg-cell *ngIf=\"showPolicyColumns\" vsan-show-title>\n                  <ng-container *ngTemplateOutlet=\"colStorageProfilePFTT; context: {item: child}\"></ng-container>\n               </clr-dg-cell>\n\n               <clr-dg-cell *ngIf=\"showPolicyColumns\" vsan-show-title>\n                  <ng-container *ngTemplateOutlet=\"colStorageProfileSFTT; context: {item: child}\"></ng-container>\n               </clr-dg-cell>\n\n               <clr-dg-cell vsan-show-title>\n                  <ng-container *ngTemplateOutlet=\"colVsanUuid; context: {item: child}\"></ng-container>\n               </clr-dg-cell>\n            </clr-dg-row-detail>\n         </ng-container>\n      </ng-container>\n   </clr-dg-row>\n\n   <clr-dg-footer>\n      <vsan-export [source]=\"exportDataSource\"\n                   [filename]=\"VirtualObjectsExportConfig.fileName\"\n                   [dataExtractors]=\"VirtualObjectsExportConfig.getVirtualObjectDataExtractors(isWhatIfData, showPolicyColumns, isDurabilitySupported)\">\n      </vsan-export>\n      {{getDatagridFooterLabel()}}\n      <clr-dg-pagination #pagination [(clrDgPage)]=\"currentPage\" [clrDgPageSize]=\"pageSize\"></clr-dg-pagination>\n   </clr-dg-footer>\n</clr-datagrid>\n\n<!-- Datagrid cells templates -->\n<ng-template #colSelector let-item=\"item\">\n   <input #selector\n          type=\"checkbox\"\n          clrCheckbox\n          [ngModel]=\"tableState.isSelected(item)\"\n          (change)=\"tableState.toggleSelection(item, selector.checked)\"\n          [indeterminate]=\"tableState.isIndeterminate(item)\"/>\n</ng-template>\n\n<ng-template #colName let-item=\"item\">\n   <ng-container *ngTemplateOutlet=\"cellName; context: {item: item}\"></ng-container>\n</ng-template>\n\n<ng-template #cellName let-item=\"item\">\n   <vsan-vm-cell [item]=\"item\"\n                 [isLink]=\"isLink(item)\"\n                 (linkClick)=\"navigate(item)\">\n   </vsan-vm-cell>\n</ng-template>\n\n<ng-template #colType let-item=\"item\">\n   {{getTypeLabel(item.type)}}\n</ng-template>\n\n<ng-template #colComplianceStatus let-item=\"item\">\n   <vsan-icon-item *ngIf=\"item.whatIfComplianceStatus\"\n                   [label]=\"item.whatIfComplianceStatus | whatIfStateLabel\"\n                   [iconClass]=\"item.whatIfComplianceStatus | whatIfStateIconClass\"\n                   [shape]=\"item.whatIfComplianceStatus | whatIfStateIconShape\">\n   </vsan-icon-item>\n</ng-template>\n\n<ng-template #colHealthState let-item=\"item\">\n   <vsan-health-state-item [compositeHealth]=\"item.compositeHealth\"\n                           [healthState]=\"item.healthState\"\n                           [ngClass]=\"expandShowHideAggregationStyle(item)\">\n   </vsan-health-state-item>\n</ng-template>\n\n<ng-template #colDurabilityState let-item=\"item\">\n   <vsan-icon-item *ngIf=\"item.durabilityState\"\n                   [shape]=\"item.durabilityState | durabilityStateIconShape\"\n                   [iconClass]=\"item.durabilityState | durabilityStateIconClass\"\n                   [label]=\"item.durabilityState | durabilityStateLabel\">\n   </vsan-icon-item>\n</ng-template>\n\n<ng-template #colStorageProfileName let-item=\"item\">\n   <span [ngClass]=\"expandShowHideAggregationStyle(item)\">\n      <ng-container *ngIf=\"item.storagePolicy?.name\">\n         <clr-icon [attr.shape]=\"Icon.VM_STORAGE_PROFILE_IMAGE\" aria-hidden=\"true\"></clr-icon>\n         <a href=\"javascript://\"\n            (click)=\"onPolicyClicked()\">\n            {{item.storagePolicy.name}}\n         </a>\n      </ng-container>\n      <ng-container *ngIf=\"!item.storagePolicy?.name && !isContainerItem(item)\">\n         {{\"vsan.na.label\" | localized}}\n      </ng-container>\n   </span>\n</ng-template>\n\n<ng-template #colStorageProfilePFTT let-item=\"item\">\n   <span [ngClass]=\"expandShowHideAggregationStyle(item)\">\n      <ng-container *ngIf=\"VsanUiUtils.isSet(item.storagePolicy?.pFtt)\">\n         {{item.storagePolicy.pFtt}}\n      </ng-container>\n      <ng-container *ngIf=\"VsanUiUtils.isUnset(item.storagePolicy?.pFtt) && !isContainerItem(item)\">\n         {{\"vsan.na.label\" | localized}}\n      </ng-container>\n   </span>\n</ng-template>\n\n<ng-template #colStorageProfileSFTT let-item=\"item\">\n   <span [ngClass]=\"expandShowHideAggregationStyle(item)\">\n      <ng-container *ngIf=\"VsanUiUtils.isSet(item.storagePolicy?.sFtt)\">\n         {{item.storagePolicy.sFtt}}\n      </ng-container>\n      <ng-container *ngIf=\"VsanUiUtils.isUnset(item.storagePolicy?.sFtt) && !isContainerItem(item)\">\n         {{\"vsan.na.label\" | localized}}\n      </ng-container>\n   </span>\n</ng-template>\n\n<ng-template #colVsanUuid let-item=\"item\">\n   <ng-container *ngIf=\"item.uid\">\n      {{item.uid}}\n   </ng-container>\n</ng-template>\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ExportContent} from \"@component/export/export-content\";\nimport {Downloader} from \"@component/export/downloaders/downloader\";\nimport {FileExtension} from \"@component/export/files/file-extension\";\n\nexport class CsvDownloader extends Downloader<string> {\n   private static readonly FILE_TYPE: string = \"text/csv\";\n   private static readonly VALUE_SEPARATOR: string = \",\";\n   private static readonly ROW_TERMINATOR: string = \"\\n\";\n\n   constructor() {\n      super(CsvDownloader.FILE_TYPE, FileExtension.CSV);\n   }\n\n   formatContent(content: ExportContent): string {\n      return [\n         this.formatAsCsvRow(content.labels),\n         ...content.values.map(values => this.formatAsCsvRow(values)),\n      ].join(CsvDownloader.ROW_TERMINATOR);\n   }\n\n   private formatAsCsvRow(strings: string[]): string {\n      return strings.map(str => this.escape(str)).join(CsvDownloader.VALUE_SEPARATOR);\n   }\n\n   private escape(unescapedStr: string): string {\n      const escapedStr: string = !!unescapedStr ? unescapedStr.replace('\"', '\"\"') : \"\";\n      return `\"${escapedStr}\"`;\n   }\n}","export enum DurabilityState {\n   GUARANTEED = \"GUARANTEED\",\n   EXCEEDED_COMP_LIMIT = \"EXCEEDED_COMP_LIMIT\",\n   NO_SPACE = \"NO_SPACE\",\n   NO_RESOURCE = \"NO_RESOURCE\",\n   STALE_DURABILITY_COMP = \"STALE_DURABILITY_COMP\",\n   UNKNOWN = \"UNKNOWN\",\n}\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {VirtualObjectsTypeUtil} from \"@component/virtual-objects-table/virtual-objects-type.util\";\nimport {VsanWhatIfComplianceStatus} from \"@generated/vsan-what-if-compliance-status\";\n\n@Pipe({\n   name: \"whatIfStateLabel\",\n})\nexport class VirtualObjectWhatIfStateLabelPipe implements PipeTransform {\n\n   transform(status: VsanWhatIfComplianceStatus): string {\n      return VirtualObjectsTypeUtil.getComplianceStatusLabel(status);\n   }\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ContentChildren, Directive, ElementRef} from \"@angular/core\";\nimport {ClrDatagridRow} from \"@clr/angular\";\nimport {Logger} from \"@util/logger\";\nimport {ScrollToCurrent} from \"./scroll-to-current.directive\";\n\n/**\n * A directive, applied on datagrid, which will scroll content to the first row, marked with [scroll-to-current] set\n * to true\n */\n@Directive({\n   selector: \"[vsan-datagrid-scroll-to-row]\"\n})\nexport class DatagridScrollToRowDirective {\n\n   private static readonly PARENT_ROW_SELECTOR: string = \"clr-dg-row\";\n   private static readonly DETAIL_ROW_SELECTOR: string = \"clr-dg-row-detail\";\n   private static readonly ROWS_SCROLLABLE_CONTAINER_SELECTOR: string = \"div.datagrid\";\n\n   // there is no padding for row details. When scroll to it without current fix, the upper part of the text is\n   // overlapped\n   // on the border\n   private static readonly DETAILS_SCROLL_FIX: number = -12;\n\n   private isDetectionTriggered: boolean;\n\n   @ContentChildren(ClrDatagridRow)\n   set tableRows(rows: ClrDatagridRow[]) {\n      // if table rows are reset, scroll again\n      if (!rows || !rows.length) {\n         this.isDetectionTriggered = false;\n      }\n   }\n\n   private _markedForScrollingRows: ScrollToCurrent[];\n\n   @ContentChildren(ScrollToCurrent, {descendants: true})\n   set markedForScrollingRows(markedForScrollingRows: ScrollToCurrent[]) {\n      this._markedForScrollingRows = markedForScrollingRows;\n      if (!this.isDetectionTriggered && markedForScrollingRows && markedForScrollingRows.length) {\n         // once detection change is triggered, do not trigger it again\n         this.detectMarkedForScrollingRowsChange();\n         this.isDetectionTriggered = true;\n      }\n   }\n\n   private previousMarkedForScrollingRowsCount: number = 0;\n\n   constructor(private el:ElementRef<HTMLElement>) {}\n\n   /**\n    * Detect if marked for scrolling rows count is changed (new rows are added). If so, postpone check.\n    */\n   private detectMarkedForScrollingRowsChange(): void {\n      if (this.previousMarkedForScrollingRowsCount === this._markedForScrollingRows.length) {\n         // no new rows added - the view is fully rendered. Time to scroll.\n         const scrollToElement: ScrollToCurrent = this.findFirstRowToScrollTo();\n         if (!scrollToElement) {\n            return;\n         }\n\n         this.scrollToRow(scrollToElement.element);\n      } else {\n         // postpone check\n         this.previousMarkedForScrollingRowsCount = this._markedForScrollingRows.length;\n         setTimeout(() => this.detectMarkedForScrollingRowsChange());\n      }\n   }\n\n   private findFirstRowToScrollTo() {\n      return this._markedForScrollingRows.find(item => item.isSelectedElement);\n   }\n\n   private scrollToRow(element: ElementRef<Element>): void {\n         const scrollableWrapper: Element = this.el.nativeElement.querySelector(\n               DatagridScrollToRowDirective.ROWS_SCROLLABLE_CONTAINER_SELECTOR);\n         scrollableWrapper.scrollTop = this.getScrollToPosition(element.nativeElement as HTMLElement);\n   }\n\n   private getScrollToPosition(row: HTMLElement): number {\n      if (row.tagName.toLowerCase() === DatagridScrollToRowDirective.DETAIL_ROW_SELECTOR.toLowerCase()) {\n         // scroll to previous element bottom.\n         return (row.previousElementSibling as HTMLElement).offsetTop + DatagridScrollToRowDirective.DETAILS_SCROLL_FIX;\n      }\n\n      if (row.tagName.toLowerCase() === DatagridScrollToRowDirective.PARENT_ROW_SELECTOR.toLowerCase()) {\n         // Parent row always contains at least one child element. Scroll to it.\n         const refElement:HTMLElement = row.firstElementChild as HTMLElement;\n         return refElement.offsetTop - refElement.offsetHeight;\n      }\n\n      Logger.warn(\"getScrollToPosition for \" + row.tagName + \" is not handled.\");\n      return 0;\n   }\n\n}","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {VirtualObjectType} from \"@generated/virtual-object-type\";\nimport {EnumeratedFilterSelectionResolver} from \"@component/datagrid/filter/enumerated-filter.component\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"virtual-objects-type-filter.html\",\n   selector: \"vsan-virtual-objects-type-filter\",\n})\nexport class VirtualObjectsTypeFilterComponent implements OnInit {\n\n   readonly FIELD_NAME: string = \"type\";\n\n   filterItems: FilterTypeItem[] = [];\n\n   filterSelectionResolver: EnumeratedFilterSelectionResolver<VirtualObjectModel, VirtualObjectType> =\n         this.createFilterSelectionResolver(this.FIELD_NAME);\n\n   @Input()\n   labelFunction: TypeFilterLabelResolver;\n\n   private _virtualObjects: VirtualObjectModel[];\n\n   @Input()\n   set virtualObjects(objects: VirtualObjectModel[]) {\n      this._virtualObjects = objects;\n      if (this.isInit) {\n         this.setFilterItems(objects);\n      }\n   }\n\n   get virtualObjects(): VirtualObjectModel[] {\n      return this._virtualObjects;\n   }\n\n   @Input()\n   selectedFilterValues: VirtualObjectType[];\n\n   @Output()\n   selectedFilterValuesChange: EventEmitter<VirtualObjectType[]> = new EventEmitter<VirtualObjectType[]>();\n\n   private isInit: boolean = false;\n\n   ngOnInit(): void {\n      this.setFilterItems(this.virtualObjects);\n      this.isInit = true;\n   }\n\n   onSelectedFilterValuesChange(value: VirtualObjectType[]): void {\n      this.selectedFilterValues = value;\n      this.selectedFilterValuesChange.emit(this.selectedFilterValues);\n   }\n\n   getTypeFilterLabel(type: FilterTypeItem): string {\n      return `${this.labelFunction(type.filter)} ${type.count}`;\n   }\n\n   private setFilterItems(objects: VirtualObjectModel[]): void {\n      this.filterItems = [];\n      if (VsanUiUtils.isEmpty(objects)) {\n         return;\n      }\n\n      // loop only through root virtual objects. We need only their types in the filter.\n      objects.forEach(obj => {\n         const filterItem: FilterTypeItem = this.findFilter(obj.type);\n         if (filterItem) {\n            filterItem.count++;\n         } else {\n            this.filterItems.push(new FilterTypeItem(obj.type));\n         }\n      });\n      this.filterItems.sort((a, b) => {\n         // descending sort by count\n         const countCompare: number = b.count - a.count;\n         if (countCompare !== 0) {\n            return countCompare;\n         }\n         // if counts are equal ascending sort by name\n         return this.labelFunction(a.filter).localeCompare(this.labelFunction(b.filter));\n      });\n   }\n\n   /**\n    * Creates a FilterSelectionResolver that is used when a filter is applied.\n    */\n   private createFilterSelectionResolver(prop: string):\n         EnumeratedFilterSelectionResolver<VirtualObjectModel, VirtualObjectType> {\n      return new class extends EnumeratedFilterSelectionResolver<VirtualObjectModel, VirtualObjectType> {\n\n         constructor(private field: string) {\n            super();\n         }\n\n         // only root objects are passed to the filter. For this filter we filter only by them - no need to loop\n         // through the children\n         isSelected(item: VirtualObjectModel, filters: VirtualObjectType[]): boolean {\n            // If the given object matches the filter, show it\n            if (filters.some(filter => this.areEquals(filter, item[this.field]))) {\n               return true;\n            }\n            // Otherwise - hide the object\n            return false;\n         }\n\n         areEquals(filterValue1: VirtualObjectType, filterValue2: VirtualObjectType): boolean {\n            if (!filterValue1.extendedTypeId && !filterValue2.extendedTypeId) {\n               return filterValue1.displayType === filterValue2.displayType;\n            }\n            return filterValue1.extendedTypeId === filterValue2.extendedTypeId;\n         }\n      }(prop);\n   }\n\n   private findFilter(type: VirtualObjectType): FilterTypeItem {\n      return this.filterItems.find(value => this.filterSelectionResolver.areEquals(type, value.filter));\n   }\n}\n\nexport class FilterTypeItem {\n   constructor(public filter: VirtualObjectType, public count: number = 1) {\n   }\n}\n\nexport type TypeFilterLabelResolver = (filter: VirtualObjectType) => string;\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ExportContent} from \"@component/export/export-content\";\nimport {FileUtils} from \"@component/export/files/file-utils\";\n\nexport abstract class Downloader<TContentType> {\n\n   abstract formatContent(content: ExportContent): TContentType;\n\n   protected constructor(private fileType: string, private fileExtension: string) { }\n\n   download(content: ExportContent, fileName: string): void {\n      FileUtils.download(\n            this.createBlob(content),\n            this.buildFileNameWithExtension(fileName, true));\n   }\n\n   createBlob(content: ExportContent): Blob {\n      return FileUtils.createBlob(this.formatContent(content), this.fileType);\n   }\n\n   buildFileNameWithExtension(fileName: string, addTimeStamp: boolean = false): string {\n      return FileUtils.buildFileNameWithExtension(fileName, this.fileExtension, addTimeStamp);\n   }\n}","<!--Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-enumerated-filter vsanDgField=\"type\"\n                        [selectMultiple]=\"true\"\n                        [filtersCount]=\"objectGroups.size\"\n                        [selectedFilterValues]=\"selectedFilterValues\"\n                        (selectedFilterValuesChange)=\"onSelectedFilterValuesChange($event)\"\n                        [selectionResolver]=\"filterSelectionResolver\">\n   <vsan-enumerated-filter-item *ngFor=\"let group of objectGroups | keyvalue\"\n                                [label]=\"getLabel(group)\"\n                                [value]=\"group.key\"\n                                [iconVisible]=\"false\">\n   </vsan-enumerated-filter-item>\n</vsan-enumerated-filter>\n","<!--Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-enumerated-filter [vsanDgField]=\"FIELD_NAME\"\n                        [selectMultiple]=\"true\"\n                        [filtersCount]=\"filterItems.length\"\n                        [selectedFilterValues]=\"selectedFilterValues\"\n                        (selectedFilterValuesChange)=\"onSelectedFilterValuesChange($event)\"\n                        [selectionResolver]=\"filterSelectionResolver\">\n   <vsan-enumerated-filter-item *ngFor=\"let filterItem of filterItems\"\n                                [label]=\"getTypeFilterLabel(filterItem)\"\n                                [value]=\"filterItem.filter\"\n                                [iconVisible]=\"false\">\n   </vsan-enumerated-filter-item>\n</vsan-enumerated-filter>\n","<!-- Copyright (c) 2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<clr-dropdown [clrCloseMenuOnItemClick]=\"false\">\n   <button type=\"button\" clrDropdownTrigger (click)=\"open()\">\n      <clr-icon shape=\"export\"></clr-icon>\n   </button>\n   <ng-template [clrIfOpen]>\n      <clr-dropdown-menu clrPosition=\"top-left\" [attr.aria-label]=\"'vsan.export.expanded.label' | localized\">\n         <a clrDropdownItem\n            [disabled]=\"isLoading || allItemsCount === 0\"\n            (click)=\"export(source.allItems, getFileName('all'))\">\n            {{\"vsan.export.all.label\" | localized: allItemsCount}}\n         </a>\n         <a clrDropdownItem\n            *ngIf=\"filteredItemsCount > 0 && filteredItemsCount < allItemsCount\"\n            [disabled]=\"isLoading\"\n            (click)=\"export(source.filteredItems, getFileName('filtered'))\">\n            {{\"vsan.export.filtered.label\" | localized: filteredItemsCount}}\n         </a>\n         <a clrDropdownItem\n            *ngIf=\"source.isSelectionEnabled && selectedItemsCount < allItemsCount\"\n            [disabled]=\"isLoading || selectedItemsCount === 0\"\n            (click)=\"export(source.selectedItems, getFileName('selected'))\">\n            {{\"vsan.export.selected.label\" | localized: selectedItemsCount}}\n         </a>\n      </clr-dropdown-menu>\n   </ng-template>\n</clr-dropdown>","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Directive, ElementRef, Input} from \"@angular/core\";\n\n/**\n * Marks a datagrid row. The content of the datagrid with applied [vsan-datagrid-scroll] directive will scroll\n * to the first row with directive set to true\n */\n@Directive({\n   selector: \"[vsan-scroll-to-current]\"\n})\nexport class ScrollToCurrent {\n\n   @Input(\"vsan-scroll-to-current\")\n   isSelectedElement: boolean;\n\n   get element(): ElementRef<Element> {\n      return this.el;\n   }\n\n   constructor(private el: ElementRef<Element>) {}\n}\n","/* Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ClrDatagrid} from \"@clr/angular\";\nimport {DatagridExportDataSourceAdapter} from \"@component/export/adapters/datagrid-export-data-source-adapter\";\nimport {ExportDataExtractor} from \"@component/export/export-data-extractor\";\nimport {ExportDataSource} from \"@component/export/export-data-source\";\nimport {VirtualObjectModelWithParent} from \"@component/virtual-objects-table/export/virtual-object-model-with-parent\";\nimport {VirtualObjectsDataSourceAdapter} from \"@component/virtual-objects-table/export/virtual-objects-data-source-adapter\";\nimport {VirtualObjectsTypeUtil} from \"@component/virtual-objects-table/virtual-objects-type.util\";\nimport {ObjectHealthComplianceState} from \"@generated/object-health-compliance-state\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {VsanObjectCompositeHealth} from \"@generated/vsan-object-composite-health\";\nimport {DurabilityStateLabelPipe} from \"@pipe/virtual-objects/durability-state-label.pipe\";\nimport {StringUtil} from \"@util/string-util\";\nimport {VsanHealthUtil} from \"@util/vsan-health-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\nexport class VirtualObjectsExportConfig {\n\n   private static readonly durabilityStateFormatter: DurabilityStateLabelPipe = new DurabilityStateLabelPipe();\n\n   static createExportDataSource(\n         datagrid: ClrDatagrid,\n         isSelectionSupported: boolean,\n         loadAllVirtualObjects: () => VirtualObjectModel[],\n         isVirtualObjectSelected: (vo: VirtualObjectModel) => boolean,\n         isChildVirtualObjectFiltered: (parent: VirtualObjectModel,\n               child: VirtualObjectModel) => boolean): ExportDataSource {\n      return new VirtualObjectsDataSourceAdapter(\n            new DatagridExportDataSourceAdapter(datagrid),\n            isSelectionSupported,\n            loadAllVirtualObjects,\n            isVirtualObjectSelected,\n            isChildVirtualObjectFiltered);\n   }\n\n   static readonly fileName: string = \"virtual_objects\";\n\n   static getVirtualObjectDataExtractors(\n         isWhatIfData: boolean,\n         showPolicy: boolean,\n         isDurabilitySupported: boolean): ExportDataExtractor[] {\n      return [\n         VirtualObjectsExportConfig.parent,\n         VirtualObjectsExportConfig.objectName,\n         VirtualObjectsExportConfig.type,\n         isWhatIfData ? VirtualObjectsExportConfig.whatIfResult : null,\n         !isWhatIfData ? VirtualObjectsExportConfig.health : null,\n         (isWhatIfData && isDurabilitySupported) ? VirtualObjectsExportConfig.durability : null,\n         showPolicy ? VirtualObjectsExportConfig.storagePolicyName : null,\n         showPolicy ? VirtualObjectsExportConfig.storagePolicyPFTT : null,\n         showPolicy ? VirtualObjectsExportConfig.storagePolicySFTT : null,\n         VirtualObjectsExportConfig.uuid,\n      ].filter(dataExtractor => !!dataExtractor);\n   }\n\n   private static parent: ExportDataExtractor = {\n      label: \"vsan.monitor.cluster.virtualObjects.column.parent\",\n      value: (vo: VirtualObjectModelWithParent) => vo.isParent ? \"\" : VirtualObjectsTypeUtil.getDisplayName(vo.parent),\n   };\n\n   private static objectName: ExportDataExtractor = {\n      label: \"vsan.monitor.cluster.virtualObjects.column.name\",\n      value: (vo: VirtualObjectModelWithParent) => VirtualObjectsTypeUtil.getDisplayName(vo.self),\n   };\n\n   private static type: ExportDataExtractor = {\n      label: \"vsan.monitor.cluster.virtualObjects.column.type\",\n      value: (vo: VirtualObjectModelWithParent) => VirtualObjectsTypeUtil.getTypeLabel(vo.self.type),\n   };\n\n   private static whatIfResult: ExportDataExtractor = {\n      label: \"vsan.monitor.cluster.virtualObjects.column.whatIfResult\",\n      value: (vo: VirtualObjectModelWithParent) =>\n            VirtualObjectsTypeUtil.getComplianceStatusLabel(vo.self.whatIfComplianceStatus),\n   };\n\n   private static health: ExportDataExtractor = {\n      label: \"vsan.monitor.cluster.virtualObjects.column.placementAndAvailabilityHealth\",\n      value: (vo: VirtualObjectModelWithParent) => VirtualObjectsExportConfig.stringifyHealth(vo.self),\n   };\n\n   private static durability: ExportDataExtractor = {\n      label: \"vsan.monitor.cluster.virtualObjects.column.durability\",\n      value: (vo: VirtualObjectModelWithParent) =>\n            VirtualObjectsExportConfig.durabilityStateFormatter.transform(vo.self.durabilityState),\n   };\n\n   private static storagePolicyName: ExportDataExtractor = {\n      label: \"vsan.monitor.cluster.virtualObjects.column.storagePolicy\",\n      value: (vo: VirtualObjectModelWithParent) => vo.isParent\n            ? \"\"\n            : VirtualObjectsExportConfig.toString(vo.self.storagePolicy?.name, \"vsan.na.label\"),\n   };\n\n   private static storagePolicyPFTT: ExportDataExtractor = {\n      label: \"vsan.monitor.cluster.virtualObjects.column.storagePolicy.pftt\",\n      value: (vo: VirtualObjectModelWithParent) => vo.isParent\n            ? \"\"\n            : VirtualObjectsExportConfig.toString(vo.self.storagePolicy?.pFtt, \"vsan.na.label\"),\n   };\n\n   private static storagePolicySFTT: ExportDataExtractor = {\n      label: \"vsan.monitor.cluster.virtualObjects.column.storagePolicy.sftt\",\n      value: (vo: VirtualObjectModelWithParent) => vo.isParent\n            ? \"\"\n            : VirtualObjectsExportConfig.toString(vo.self.storagePolicy?.sFtt, \"vsan.na.label\"),\n   };\n\n   private static uuid: ExportDataExtractor = {\n      label: \"vsan.monitor.cluster.virtualObjects.column.uuid\",\n      value: (vo: VirtualObjectModelWithParent) => vo.self.uid,\n   };\n\n   private static toString(o: any, defaultVal: string = \"\"): string {\n      return (typeof o?.toString === \"function\")\n            ? o.toString()\n            : VsanUiUtils.getString(defaultVal);\n   }\n\n   private static stringifyHealth(virtualObject: VirtualObjectModel): string {\n      if (virtualObject.compositeHealth) {\n         const compositeHealth: VsanObjectCompositeHealth = virtualObject.compositeHealth;\n         return [\n            (compositeHealth.complianceState &&\n                  compositeHealth.complianceState !== ObjectHealthComplianceState.NON_COMPLIANT)\n                  ? VsanHealthUtil.getVsanObjectHealthStatusText(compositeHealth.complianceState)\n                  : null,\n            compositeHealth.incomplianceReason\n                  ? VsanHealthUtil.getVsanObjectHealthStatusText(compositeHealth.incomplianceReason)\n                  : null,\n            compositeHealth.rebuildState\n                  ? VsanHealthUtil.getVsanObjectHealthStatusText(compositeHealth.rebuildState)\n                  : null,\n            compositeHealth.policyState\n                  ? VsanHealthUtil.getVsanObjectHealthStatusText(compositeHealth.policyState)\n                  : null,\n         ]\n               .filter((healthStatus: string) => !StringUtil.isEmpty(healthStatus))\n               .join(\";\");\n      } else {\n         return VsanHealthUtil.getVsanObjectHealthStatusText(virtualObject.healthState);\n      }\n   }\n}\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe} from \"@angular/core\";\nimport {DurabilityState} from \"@generated/durability-state\";\nimport {Icon} from \"@util/icon\";\n\n@Pipe({\n   name: \"durabilityStateIconClass\",\n})\nexport class DurabilityStateIconClassPipe {\n   transform(state: DurabilityState): string {\n      switch (state) {\n         case DurabilityState.GUARANTEED:\n            return Icon.CLR_SUCCESS_ICON_CLASS;\n         case DurabilityState.EXCEEDED_COMP_LIMIT:\n         case DurabilityState.NO_RESOURCE:\n         case DurabilityState.NO_SPACE:\n         case DurabilityState.STALE_DURABILITY_COMP:\n            return Icon.CLR_WARN_ICON_CLASS;\n         default:\n            return Icon.NO_ICON_CLASS;\n      }\n   }\n}","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe} from \"@angular/core\";\nimport {DurabilityState} from \"@generated/durability-state\";\nimport {Icon} from \"@util/icon\";\n\n@Pipe({\n   name: \"durabilityStateIconShape\",\n})\nexport class DurabilityStateIconShapePipe {\n   transform(state: DurabilityState): string {\n      switch (state) {\n         case DurabilityState.GUARANTEED:\n            return Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE;\n         case DurabilityState.EXCEEDED_COMP_LIMIT:\n         case DurabilityState.NO_RESOURCE:\n         case DurabilityState.NO_SPACE:\n         case DurabilityState.STALE_DURABILITY_COMP:\n            return Icon.CLR_WARN_STANDARD_ICON_SHAPE;\n         default:\n            return Icon.EMPTY_ICON;\n      }\n   }\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ClrDatagrid} from \"@clr/angular\";\nimport {Selection} from \"@clr/angular/data/datagrid/providers/selection\";\nimport {SelectionType} from \"@clr/angular/data/datagrid/enums/selection-type\";\nimport {ExportDataSource} from \"@component/export/export-data-source\";\n\nexport class DatagridExportDataSourceAdapter implements ExportDataSource {\n   readonly DATAGRID_ALL_ITEMS_PROP: string = \"_all\";\n   readonly DATAGRID_FILTERED_ITEMS_PROP: string = \"_filtered\";\n\n   constructor(private datagrid: ClrDatagrid) { }\n\n   get allItems(): any[] {\n      return this.datagrid.items[this.DATAGRID_ALL_ITEMS_PROP] || [];\n   }\n\n   get allItemsCount(): number {\n      return this.allItems.length;\n   }\n\n   get filteredItems(): any[] {\n      return this.datagrid.items[this.DATAGRID_FILTERED_ITEMS_PROP] || [];\n   }\n\n   get filteredItemsCount(): number {\n      return this.filteredItems.length;\n   }\n\n   get isSelectionEnabled(): boolean {\n      return this.dgSelection.selectionType !== this.dgSelectionType.None;\n   }\n\n   get selectedItems(): any[] {\n      if (this.dgSelection.selectionType === this.dgSelectionType.Multi) {\n         return this.dgSelection.current || [];\n      } else if (this.dgSelection.selectionType === this.dgSelectionType.Single && this.dgSelection.currentSingle) {\n         return [this.dgSelection.currentSingle];\n      } else {\n         return [];\n      }\n   }\n\n   get selectedItemsCount(): number {\n      return this.selectedItems.length;\n   }\n\n   private get dgSelection(): Selection {\n      return this.datagrid.selection;\n   }\n\n   private get dgSelectionType(): typeof SelectionType {\n      return this.datagrid.SELECTION_TYPE;\n   }\n}","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {BaseHealthState, VsanHealthUtil} from \"@util/vsan-health-util\";\n\n@Pipe({\n   name: \"healthStateLabel\",\n})\nexport class VirtualObjectHealthStateLabelPipe implements PipeTransform {\n   transform(state: BaseHealthState | string): string {\n      return VsanHealthUtil.getVsanObjectHealthStatusText(state);\n   }\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ExportDataExtractor} from \"@component/export/export-data-extractor\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\nexport class ExportContent {\n   /**\n    * Content in a generic format that we can use to export in different formats (CSV, XLSX, etc.)\n    * @param labels All labels\n    * @param values Each element is array of values for the corresponding label\n    */\n   constructor(public labels: string[], public values: string[][]) { }\n\n   static create(items: any[], dataExtractors: ExportDataExtractor[]): ExportContent {\n      const labels: string[] = ExportContent.getLabels(dataExtractors);\n      const values: string[][] = items.map(item => ExportContent.getValues(dataExtractors, item));\n      return new ExportContent(labels, values);\n   }\n\n   private static getLabels(dataExtractors: ExportDataExtractor[]): string[] {\n      return dataExtractors.map(dataExtractor => {\n         const label: string = (typeof dataExtractor.label === \"string\") ? dataExtractor.label : dataExtractor.label();\n         return VsanUiUtils.getString(label);\n      });\n   }\n\n   private static getValues(dataExtractors: ExportDataExtractor[], item: any): string[] {\n      return dataExtractors.map(dataExtractor => dataExtractor.value(item) || \"\");\n   }\n}","/* Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {ExportDataSource} from \"@component/export/export-data-source\";\nimport {ExportDataExtractor} from \"@component/export/export-data-extractor\";\nimport {ExportContent} from \"@component/export/export-content\";\nimport {CsvDownloader} from \"@component/export/downloaders/csv-downloader\";\nimport {Downloader} from \"@component/export/downloaders/downloader\";\n\n@Component({\n   selector: \"vsan-export\",\n   templateUrl: \"export.component.html\",\n   styleUrls: [\"export.component.scss\"],\n})\nexport class ExportComponent {\n\n   private downloader: Downloader<any> = new CsvDownloader();\n\n   @Input()\n   filename: string;\n\n   @Input()\n   source: ExportDataSource;\n\n   @Input()\n   dataExtractors: ExportDataExtractor[];\n\n   @Output()\n   onLoadingStateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n   @Output()\n   onLoadingError: EventEmitter<string> = new EventEmitter<string>();\n\n   isLoading: boolean = false;\n\n   allItemsCount: number = 0;\n   filteredItemsCount: number = 0;\n   selectedItemsCount: number = 0;\n\n   /**\n    * Keep all counts locally because if the ExportDataSource implementation use getters they will be evaluated multiple times.\n    * The drawback is that if those counts change while the dropdown is open, we won't dynamically update them.\n    * However we don't expect such scenarios, because if someone click on something else to filter or select\n    * the items, we will close the dropdown and next time they will be the correct ones.\n    */\n   open(): void {\n      this.allItemsCount = this.source?.allItemsCount || 0;\n      this.filteredItemsCount = this.source?.filteredItemsCount || 0;\n      this.selectedItemsCount = this.source?.isSelectionEnabled ? (this.source?.selectedItemsCount || 0) : 0;\n   }\n\n   getFileName(downloadingType: string): string {\n      return `${this.filename}_${downloadingType}`;\n   }\n\n   export(items: Promise<any[]> | any[], fileName: string): void {\n      if (!this.dataExtractors?.length) {\n         return;\n      }\n\n      if (items instanceof Promise) {\n         this.changeLoadingState(true);\n         items.then((loadedItems: any[]) => this.download(loadedItems, fileName))\n              .catch(error => this.onLoadingError.emit(error))\n              .finally(() => this.changeLoadingState(false));\n      } else {\n         this.download(items, fileName);\n      }\n   }\n\n   private changeLoadingState(isLoading: boolean): void {\n      this.isLoading = isLoading;\n      this.onLoadingStateChange.emit(isLoading);\n   }\n\n   private download(items: any[], fileName: string): void {\n      if (!items?.length) {\n         return;\n      }\n\n      this.downloader.download(ExportContent.create(items, this.dataExtractors), fileName);\n   }\n}","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {PipeTransform} from \"@angular/core\";\nimport {Reflection} from \"@util/reflection\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {BaseFilter} from \"@component/datagrid/filter/base-filter\";\n\n/**\n * Used to filter VirtualObjectModel. It also searches children to see if its children contain specified objects.\n */\nexport class VirtualObjectFilter<VirtualObjectModel> extends BaseFilter<VirtualObjectModel> {\n   private readonly CHILDREN_FIELD: string = \"children\";\n   private static readonly STORAGE_POLICY_NAME_FIELD: string = \"storagePolicy.name\";\n   private static readonly STORAGE_POLICY_PFTT_FIELD: string = \"storagePolicy.pFtt\";\n   private static readonly STORAGE_POLICY_SFTT_FIELD: string = \"storagePolicy.sFtt\";\n\n   constructor(private dataField: string, private pipe?: PipeTransform) {\n      super();\n   }\n\n   accepts(data: VirtualObjectModel, search: string): boolean {\n      if (VirtualObjectFilter.areMatching(this.getFieldValue(data), search)) {\n         return true;\n      }\n\n      const children: VirtualObjectModel[] = data[this.CHILDREN_FIELD];\n      if (!VsanUiUtils.isEmpty(children)) {\n         return children.some(child => VirtualObjectFilter.areMatching(this.getFieldValue(child), search));\n      }\n\n      return false;\n   }\n\n   match(data: VirtualObjectModel, search: string): boolean {\n      return this.accepts(data, search);\n   }\n\n   protected getFieldValue(virtualObject: VirtualObjectModel): string  {\n      return VirtualObjectFilter.stringifyFieldValue(virtualObject, this.dataField, this.pipe);\n   }\n\n   static areMatching(fieldValue: string, search: string): boolean {\n      if (VsanUiUtils.isEmpty(search)) {\n         return true;\n      }\n      return !VsanUiUtils.isEmpty(fieldValue) && (fieldValue == search || fieldValue.toLowerCase().includes(search));\n   }\n\n   static stringifyFieldValue<VirtualObjectModel>(\n         virtualObject: VirtualObjectModel, dataField: string, pipe?: PipeTransform): string {\n      const fieldValue: any = Reflection.getFieldValue(virtualObject, dataField);\n\n      if (pipe) {\n         return pipe.transform(fieldValue);\n      }\n\n      if (!VsanUiUtils.isUnset(fieldValue)) {\n         return (\"\" + fieldValue);\n      }\n\n      return VirtualObjectFilter.hasNotApplicableValue(dataField)\n            ? VsanUiUtils.getString(\"vsan.na.label\")\n            : \"\";\n   }\n\n   private static hasNotApplicableValue(dataField: string): boolean {\n      return dataField === VirtualObjectFilter.STORAGE_POLICY_NAME_FIELD ||\n            dataField === VirtualObjectFilter.STORAGE_POLICY_PFTT_FIELD ||\n            dataField === VirtualObjectFilter.STORAGE_POLICY_SFTT_FIELD;\n   }\n}","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnInit, Output, QueryList, ViewChild, ViewChildren} from \"@angular/core\";\nimport {ClrDatagrid, ClrDatagridPagination, ClrDatagridRow as DatagridRow} from \"@clr/angular\";\nimport {ExportDataSource} from \"@component/export/export-data-source\";\nimport {VirtualObjectFilter} from \"@component/virtual-objects-table/filter/virtual-object-filter\";\nimport {VirtualObjectsTableStateService} from \"@component/virtual-objects-table/virtual-objects-table-state.service\";\nimport {VirtualObjectsTableService} from \"@component/virtual-objects-table/virtual-objects-table.service\";\nimport {VirtualObjectsTypeUtil} from \"@component/virtual-objects-table/virtual-objects-type.util\";\nimport {VirtualObjectWhatIfStateLabelPipe} from \"@component/virtual-objects-table/whatIf-state-label.pipe\";\nimport {DisplayObjectType} from \"@generated/display-object-type\";\nimport {DurabilityState} from \"@generated/durability-state\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {VirtualObjectType} from \"@generated/virtual-object-type\";\nimport {VsanObjectType} from \"@generated/vsan-object-type\";\nimport {IscsiContext} from \"@navigation/context/iscsi-context\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Icon} from \"@util/icon\";\nimport {ReferenceWatcher} from \"@util/reference-watcher\";\nimport {BaseHealthState} from \"@util/vsan-health-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {Subject, Subscription} from \"rxjs\";\nimport {VirtualObjectsExportConfig} from \"./export/virtual-objects-export-config\";\n\n/* tslint:disable:no-string-literal */\n@Component({\n   selector: \"vsan-virtual-objects-table\",\n   templateUrl: \"virtual-objects-table.html\",\n   styleUrls: [\"virtual-objects-table.scss\"],\n   providers: [ReferenceWatcher],\n})\nexport class VirtualObjectsTableComponent implements OnInit {\n   VirtualObjectsExportConfig: typeof VirtualObjectsExportConfig = VirtualObjectsExportConfig;\n   VsanUiUtils: typeof VsanUiUtils = VsanUiUtils;\n   Icon: typeof Icon = Icon;\n   VirtualObjectsTypeUtil: typeof VirtualObjectsTypeUtil = VirtualObjectsTypeUtil;\n   readonly pageSize: number = VsanUiUtils.defaultGridPageSize;\n\n   private readonly NAME_FIELD: string = \"name\";\n   private readonly WHAT_IF_COMPLIANCE_FIELD: string = \"whatIfComplianceStatus\";\n   private readonly STORAGE_POLICY_NAME_FIELD: string = \"storagePolicy.name\";\n   private readonly STORAGE_POLICY_PFTT_FIELD: string = \"storagePolicy.pFtt\";\n   private readonly STORAGE_POLICY_SFTT_FIELD: string = \"storagePolicy.sFtt\";\n   private readonly UID_FIELD: string = \"uid\";\n   // todo georgig: add KB article id when provided. Bug 2676152\n   readonly ENHANCED_DURABILITY_KB: string = \"\";\n\n   private readonly EXPANSION_STATE_SHOW_HIDE_CLASS: string = \"expand-show-hide\";\n   private readonly EXPANSION_STATE_CLASS: string = \"expanded\";\n\n   currentPage: number = 1;\n\n   // Whether to show the storage policies column. Can be false if the user lacks permission to read the policies\n   showPolicyColumns: boolean = false;\n\n   private hasAppliedFilters: boolean;\n\n   // holds subscribtion for auto expand of each row. Used to manage subscriptions\n   private autoExpandRowSubscriptions: Map<string, Subscription> = new Map<string, Subscription>();\n   private autoExpandRowSubject: Subject<boolean> = new Subject<boolean>();\n\n   @ViewChild(\"dataGrid\")\n   datagrid: ClrDatagrid;\n\n   exportDataSource: ExportDataSource;\n\n   @ViewChild(\"pagination\", {static: true})\n   pagination: ClrDatagridPagination;\n\n   @Input()\n   loading: boolean;\n\n   @Input()\n   clusterId: string;\n\n   // flag, will be true if the view is nested in the Pre-check evacuation dialog\n   @Input()\n   isWhatIfData: boolean;\n\n   @Input()\n   isDurabilitySupported: boolean;\n\n   @Input()\n   hideRowSelection: boolean;\n\n   @Input()\n   presentVirtualObjectUuids: string[];\n\n   @Input()\n   nameFilterValue: string;\n\n   @Input()\n   typeFilterValue: VirtualObjectType[];\n\n   private _appliedHealthStateFilters: BaseHealthState[];\n   private hasChangedHealthStateFilters: boolean;\n\n   @Input()\n   set appliedHealthStateFilters(value: BaseHealthState[]) {\n      if (JSON.stringify(value) === JSON.stringify(this._appliedHealthStateFilters)) {\n         this.hasChangedHealthStateFilters = false;\n         return;\n      }\n\n      this._appliedHealthStateFilters = value;\n      this.hasChangedHealthStateFilters = true;\n      this.notifyFilterChange();\n   }\n\n   get appliedHealthStateFilters(): BaseHealthState[] {\n      return this._appliedHealthStateFilters;\n   }\n\n   @Output()\n   selectionChanged: EventEmitter<VirtualObjectModel[]> = new EventEmitter<VirtualObjectModel[]>();\n\n   @Output()\n   filterChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n   private _virtualObjects: VirtualObjectModel[] = [];\n\n   @Input()\n   allVirtualObjects: VirtualObjectModel[] = [];\n\n   get virtualObjects(): VirtualObjectModel[] {\n      return this._virtualObjects;\n   }\n\n   @Input()\n   set virtualObjects(value: VirtualObjectModel[]) {\n      const isLastVirtualObjectsDataEmpty: boolean = VsanUiUtils.isEmpty(this._virtualObjects);\n      this._virtualObjects = value ? JSON.parse(JSON.stringify(value)) : [];\n      if (VsanUiUtils.isEmpty(this._virtualObjects)) {\n         this.prepareSnapShotSelection();\n      } else {\n         this._virtualObjects.forEach((virtualObject: VirtualObjectModel) => {\n            if (this.selectionSnapshot.get(virtualObject.uid)) {\n               this.tableState.toggleSelection(virtualObject, true);\n\n               if (this.hasAppliedFilters) {\n                  this.tableState.toggleAutoExpand(virtualObject, true);\n               }\n            }\n            if (virtualObject.children) {\n               virtualObject.children.forEach(child => {\n                  if (this.selectionSnapshot.get(child.uid)) {\n                     this.tableState.toggleSelection(child, true);\n                     // Expand parent item\n                     this.tableState.toggleAutoExpand(virtualObject, true);\n                  }\n               });\n            }\n         });\n\n         this.selectionSnapshot.clear();\n\n         // If the data was empty till now, try to go to the first selection page, if any\n         if (isLastVirtualObjectsDataEmpty) {\n            this._virtualObjects.forEach((virtualObject: VirtualObjectModel) => {\n               if (this.tableState.isSelected(virtualObject)) {\n                  this.currentPage = Math.floor(this._virtualObjects.indexOf(virtualObject) / this.pageSize) + 1;\n                  return;\n               }\n            });\n         }\n      }\n      // Emit selection in order to update actions on init when there is navigation data.\n      this.onSelectionChanged();\n   }\n\n   @ViewChildren(DatagridRow)\n   set rows(value: QueryList<DatagridRow>) {\n      this.unsubscribeRemovedRows(value);\n      // Data grid rows are injected here by Angular upon creation\n      this.gridRows = value;\n\n      if (!value) {\n         return;\n      }\n\n      value.forEach(row => {\n         if (!row.displayCells) {\n            // during datagrid calculation some rows are returned twice. Ignore them.\n            return;\n         }\n\n         this.registerForAutoExpandEvent(row);\n\n         // Angular can inject the same row several times.\n         // We use a flag to avoid registering the listener twice.\n         if (!row[\"vsanSubscription\"]) {\n\n            // Listener that saves the last state of the row in the selection object.\n            // Needed to restore the rows state when user changes pages,\n            // because rows get re-created when page is changed.\n            this.referenceWatcher.watchSubscriptionRef(row.expandedChange.subscribe(isExpanded => {\n               this.tableState.toggleManualExpand(row.item, isExpanded);\n            }));\n            row[\"vsanSubscription\"] = true;\n         }\n\n         if (this.tableState.isExpanded(row.item)) {\n            setTimeout(() => {\n               this.toggleRowExpansion(row);\n            });\n         }\n      });\n   }\n\n   get rows(): QueryList<DatagridRow> {\n      return this.gridRows;\n   }\n\n   complianceFilterValue: string;\n   storagePolicyNameFilterValue: string;\n   storagePolicyPFTTFilterValue: string;\n   storagePolicySFTTFilterValue: string;\n   vsanUuidFilterValue: string;\n\n   // Filters\n   nameFilter: VirtualObjectFilter<VirtualObjectModel> = new VirtualObjectFilter(this.NAME_FIELD);\n   whatIfComplianceStatusFilter: VirtualObjectFilter<VirtualObjectModel> =\n         new VirtualObjectFilter(this.WHAT_IF_COMPLIANCE_FIELD, new VirtualObjectWhatIfStateLabelPipe());\n   storagePolicyNameFilter: VirtualObjectFilter<VirtualObjectModel> = new VirtualObjectFilter(\n         this.STORAGE_POLICY_NAME_FIELD);\n   storagePolicyPFTTFilter: VirtualObjectFilter<VirtualObjectModel> = new VirtualObjectFilter(\n         this.STORAGE_POLICY_PFTT_FIELD);\n   storagePolicySFTTFilter: VirtualObjectFilter<VirtualObjectModel> = new VirtualObjectFilter(\n         this.STORAGE_POLICY_SFTT_FIELD);\n   vsanUuidFilter: VirtualObjectFilter<VirtualObjectModel> = new VirtualObjectFilter(this.UID_FIELD);\n\n   private selectionSnapshot: Map<string, boolean> = new Map<string, boolean>();\n   private gridRows: QueryList<DatagridRow>;\n\n   constructor(private permissionService: PermissionService,\n         private virtualObjectsTableService: VirtualObjectsTableService,\n         private navigationService: NavigationService,\n         private referenceWatcher: ReferenceWatcher,\n         public tableState: VirtualObjectsTableStateService) {\n      this.referenceWatcher.watchSubscriptionRef(\n            this.tableState.selectionChanged.subscribe(() => this.onSelectionChanged()));\n   }\n\n   onSelectionChanged = (): void => {\n      this.selectionChanged.emit(this.getSelectedVirtualObjects());\n   };\n\n   async ngOnInit(): Promise<void> {\n      this.prepareSnapShotSelection();\n      const managedObject: ManagedObject = this.clusterId\n            ? ManagedObject.fromUid(this.clusterId)\n            : ManagedObject.contextObject;\n      this.showPolicyColumns = await this.permissionService.hasVcPermissions(managedObject,\n            [Privileges.READ_POLICIES()]);\n      this.notifyFilterChange();\n      this.referenceWatcher.watchSubscriptionRef(this.virtualObjectsTableService.onResetFilters.subscribe(\n            () => this.clearFilters()));\n      this.initExportDataSource();\n   }\n\n   private initExportDataSource(): void {\n      this.exportDataSource = VirtualObjectsExportConfig.createExportDataSource(\n            this.datagrid,\n            !this.hideRowSelection,\n            () => this.allVirtualObjects,\n            (vo: VirtualObjectModel) => this.tableState.isSelected(vo),\n            (parent: VirtualObjectModel, child: VirtualObjectModel) => this.isMatchingTextSearch(parent, child));\n   }\n\n   private prepareSnapShotSelection(): void {\n      const selectedUuids: Map<string, boolean> = new Map<string, boolean>();\n      this.getSelectedVirtualObjects().forEach(model => selectedUuids.set(model.uid, true));\n      this.selectionSnapshot = selectedUuids;\n      if (!VsanUiUtils.isEmpty(this.presentVirtualObjectUuids)) {\n         this.presentVirtualObjectUuids.forEach(uuid => {\n            this.selectionSnapshot.set(uuid, true);\n         });\n      }\n   }\n\n   isLink(item: VirtualObjectModel): boolean {\n      return this.isVM(item)\n            || this.isExtensionApp(item)\n            || this.isIscsiTarget(item);\n   }\n\n   navigate(item: VirtualObjectModel): void {\n      if (this.isVM(item)) {\n         this.navigationService.navigateTo(PlatformExtension.VM_SUMMARY, item.vmRef);\n      } else if (this.isExtensionApp(item)) {\n         this.navigationService.navigateToPersistenceServiceExtension(item.type.extendedTypeId,\n               item.applicationInstanceId, item.vmRef);\n      } else if (this.isIscsiTarget(item)) {\n         const iscsiTargetsContext: IscsiContext = {\n            targetAlias: item.name,\n         };\n         this.navigationService.navigateTo(PlatformExtension.CLUSTER_ISCSI_TARGETS, null, iscsiTargetsContext);\n      }\n   }\n\n   private registerForAutoExpandEvent(row: DatagridRow): void {\n      if (this.autoExpandRowSubscriptions.has(row.id)) {\n         // already registered\n         return;\n      }\n      const expandableStateRowSubscription: Subscription = this.autoExpandRowSubject.subscribe(\n            isExpanded => {\n               setTimeout(() => {\n                  this.tableState.toggleAutoExpand(row.item, isExpanded);\n                  this.toggleRowExpansion(row);\n               });\n            });\n      this.referenceWatcher.watchSubscriptionRef(expandableStateRowSubscription);\n      this.autoExpandRowSubscriptions.set(row.id, expandableStateRowSubscription);\n   }\n\n   toggleRowExpansion = (row: DatagridRow): void => {\n      // stop animation while auto expanding to avoid flickering.\n      row.expand[\"_animate\"].isStopped = true;\n      row.expand.expanded = this.tableState.isExpanded(row.item);\n      row.expand[\"_animate\"].isStopped = false;\n   };\n\n   private unsubscribeRemovedRows(newRows: QueryList<DatagridRow> = new QueryList<DatagridRow>()): void {\n      this.autoExpandRowSubscriptions.forEach((value, key, map) => {\n         if (!newRows.find(row => row.id === key)) {\n            value.unsubscribe();\n            map.delete(key);\n         }\n      });\n   }\n\n   private clearFilters(): void {\n      this.nameFilterValue = \"\";\n      this.complianceFilterValue = \"\";\n      this.storagePolicyNameFilterValue = \"\";\n      this.storagePolicyPFTTFilterValue = \"\";\n      this.storagePolicySFTTFilterValue = \"\";\n      this.typeFilterValue = [];\n      this.notifyFilterChange();\n   }\n\n   private isVM(item: VirtualObjectModel): boolean {\n      return item.vmRef !== null && item.type.displayType === DisplayObjectType.VM;\n   }\n\n   private isExtensionApp(item: VirtualObjectModel): boolean {\n      return item.vmRef != null\n            && item.applicationInstanceId !== null\n            && item.type.displayType === DisplayObjectType.EXTENSION_APP;\n   }\n\n   private isIscsiTarget(item: VirtualObjectModel): boolean {\n      return item.type.vmodlType === VsanObjectType.iscsiTarget\n            && item.type.displayType === DisplayObjectType.ISCSI_TARGET;\n   }\n\n   get allSelected(): boolean {\n      return this.tableState.areAllSelected(this.virtualObjects);\n   }\n\n   set allSelected(value: boolean) {\n      this.tableState.toggleSelectionOnAll(this.virtualObjects, value);\n   }\n\n   /**\n    * Returns a flat list of all selected virtual objects\n    */\n   private getSelectedVirtualObjects(): VirtualObjectModel[] {\n      return this.tableState.getSelectedVirtualObjects(\n            this.virtualObjects,\n            (parent: VirtualObjectModel, child: VirtualObjectModel) => this.isMatchingTextSearch(parent, child));\n   }\n\n   isContainerItem(item: VirtualObjectModel): boolean {\n      return !item.uid;\n   }\n\n   isMatchingTextSearch(parent: VirtualObjectModel, child: VirtualObjectModel): boolean {\n      if (this.nameFilterValue) {\n         return this.containSearch(parent, child, this.NAME_FIELD, this.nameFilterValue);\n      }\n      if (this.complianceFilterValue) {\n         return this.containSearch(parent, child, this.WHAT_IF_COMPLIANCE_FIELD, this.complianceFilterValue,\n               new VirtualObjectWhatIfStateLabelPipe());\n      }\n      if (this.storagePolicyNameFilterValue) {\n         return this.containSearch(parent, child, this.STORAGE_POLICY_NAME_FIELD, this.storagePolicyNameFilterValue);\n      }\n      if (this.storagePolicyPFTTFilterValue) {\n         return this.containSearch(parent, child, this.STORAGE_POLICY_PFTT_FIELD, this.storagePolicyPFTTFilterValue);\n      }\n      if (this.storagePolicySFTTFilterValue) {\n         return this.containSearch(parent, child, this.STORAGE_POLICY_SFTT_FIELD, this.storagePolicySFTTFilterValue);\n      }\n      if (this.vsanUuidFilterValue) {\n         return this.containSearch(parent, child, this.UID_FIELD, this.vsanUuidFilterValue);\n      }\n      return true;\n   }\n\n   private containSearch(\n         parent: VirtualObjectModel, child: VirtualObjectModel, dataField: string, search: any, pipe?: any): boolean {\n      return (parent && this.match(parent, dataField, search, pipe)) ||\n            (child && this.match(child, dataField, search, pipe));\n   }\n\n   private match(virtualObject: VirtualObjectModel, dataField: string, search: any, pipe?: any): boolean {\n      const fieldValue: string = VirtualObjectFilter.stringifyFieldValue(virtualObject, dataField, pipe);\n      return VirtualObjectFilter.areMatching(fieldValue, search);\n   }\n\n   onPolicyClicked = () => {\n      this.navigationService.navigateWithoutContextObject(PlatformExtension.VM_STORAGE_POLICIES_VIEW);\n   };\n\n   onSelectedFilterTypeChanged(value: VirtualObjectType[]): void {\n      this.typeFilterValue = value;\n      this.notifyFilterChange();\n   }\n\n   notifyFilterChange(): void {\n      // We must invoke onSelectionChanged because otherwise we will work with the old selection\n      this.onSelectionChanged();\n      const hasAppliedFilters: boolean = !VsanUiUtils.isEmpty(this.appliedHealthStateFilters) ||\n            !VsanUiUtils.isEmpty(this.nameFilterValue) ||\n            !VsanUiUtils.isEmpty(this.complianceFilterValue) ||\n            !VsanUiUtils.isEmpty(this.storagePolicyNameFilterValue) ||\n            !VsanUiUtils.isEmpty(this.storagePolicyPFTTFilterValue) ||\n            !VsanUiUtils.isEmpty(this.storagePolicySFTTFilterValue) ||\n            !VsanUiUtils.isEmpty(this.vsanUuidFilterValue) ||\n            !VsanUiUtils.isEmpty(this.typeFilterValue);\n      if (this.hasAppliedFilters === hasAppliedFilters && !this.hasChangedHealthStateFilters) {\n         return;\n      }\n      this.hasAppliedFilters = hasAppliedFilters;\n\n      this.filterChanged.emit(hasAppliedFilters);\n      setTimeout(() => {\n         this.autoExpandRowSubject.next(hasAppliedFilters);\n      });\n   }\n\n   getDatagridFooterLabel(): string {\n      return VsanUiUtils.getDatagridFooterLabel(this.virtualObjects, this.pagination, this.pageSize);\n   }\n\n   getTypeLabel(type: VirtualObjectType): string {\n      return VirtualObjectsTypeUtil.getTypeLabel(type);\n   }\n\n   expandShowHideAggregationStyle(item: VirtualObjectModel): string[] {\n      const resultStyle: string[] = [];\n      // apply the class if the row expansion state should switch visibility\n      if (!item.uid) {\n         resultStyle.push(this.EXPANSION_STATE_SHOW_HIDE_CLASS);\n      } else {\n         // without marker class no need to set actual state\n         return resultStyle;\n      }\n      // apply expand state\n      if (this.tableState.isExpanded(item)) {\n         resultStyle.push(this.EXPANSION_STATE_CLASS);\n      }\n      return resultStyle;\n   }\n\n   getDurabilityLabel(durabilityState: DurabilityState): string {\n      switch (durabilityState) {\n         case DurabilityState.GUARANTEED:\n            return VsanUiUtils.getString(\"vsan.durability.guaranteed\");\n         case DurabilityState.NO_RESOURCE:\n            return VsanUiUtils.getString(\"vsan.durability.notGuaranteed.no.resource\");\n         case DurabilityState.EXCEEDED_COMP_LIMIT:\n            return VsanUiUtils.getString(\"vsan.durability.notGuaranteed.exeeded.comp.limit\");\n         case DurabilityState.NO_SPACE:\n            return VsanUiUtils.getString(\"vsan.durability.notGuaranteed.no.space\");\n         case DurabilityState.STALE_DURABILITY_COMP:\n            return VsanUiUtils.getString(\"vsan.durability.notGuaranteed.stale.durability.space\");\n         case DurabilityState.UNKNOWN:\n         default:\n            return VsanUiUtils.getString(\"vsan.durability.unknown\");\n      }\n   }\n}","/* Copyright 2017 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {VsanWhatIfComplianceStatus} from \"@generated/vsan-what-if-compliance-status\";\nimport {Icon} from \"@util/icon\";\n\n@Pipe({\n   name: 'whatIfStateIconClass'\n})\nexport class VirtualObjectWhatIfStateIconClassPipe implements PipeTransform {\n\n   public transform(state: VsanWhatIfComplianceStatus): string {\n      if (!state) {\n         return Icon.CLR_SOLID_ICON_CLASS;\n      }\n      return this.getColorClass(state) + \" \" + Icon.CLR_SOLID_ICON_CLASS;\n   }\n\n   private getColorClass(state: VsanWhatIfComplianceStatus): string {\n      switch (state) {\n         case VsanWhatIfComplianceStatus.INACCESSIBLE:\n            return Icon.CLR_ERROR_ICON_CLASS;\n         case VsanWhatIfComplianceStatus.NOT_COMPLIANT:\n            return Icon.CLR_WARN_ICON_CLASS;\n         default:\n            return Icon.CLR_HIGHLIGHT_ICON_CLASS;\n      }\n   }\n}\n","/* Copyright 2017 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {VsanWhatIfComplianceStatus} from \"@generated/vsan-what-if-compliance-status\";\nimport {Icon} from \"@util/icon\";\nimport {Logger} from \"@util/logger\";\n\n@Pipe({\n   name: 'whatIfStateIconShape'\n})\nexport class VirtualObjectWhatIfStateIconShapePipe implements PipeTransform {\n\n   public transform(state: VsanWhatIfComplianceStatus): string {\n      switch (state) {\n         case VsanWhatIfComplianceStatus.INACCESSIBLE:\n            return Icon.CLR_ERROR_STANDARD_ICON_SHAPE;\n         case VsanWhatIfComplianceStatus.NOT_COMPLIANT:\n            return Icon.CLR_WARN_STANDARD_ICON_SHAPE;\n         default:\n            Logger.warn(\"Unknown VsanWhatIfComplianceStatus status: \" + status);\n            return Icon.CLR_INFO_STANDARD_ICON_SHAPE;\n      }\n   }\n}","/* Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\n\nexport class VirtualObjectModelWithParent {\n   constructor(\n         public parent: VirtualObjectModel,\n         public self: VirtualObjectModel) { }\n\n   get isParent(): boolean {\n      return !this.parent;\n   }\n\n   static createParent(virtualObject: VirtualObjectModel): VirtualObjectModelWithParent {\n      return new VirtualObjectModelWithParent(null, virtualObject);\n   }\n\n   static createChildren(\n         parentVirtualObject: VirtualObjectModel,\n         childrenVirtualObjects: VirtualObjectModel[]): VirtualObjectModelWithParent[] {\n      return !childrenVirtualObjects?.length\n            ? []\n            : childrenVirtualObjects.map(child => new VirtualObjectModelWithParent(parentVirtualObject, child));\n   }\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {DurabilityState} from \"@generated/durability-state\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Pipe({\n   name: \"durabilityStateLabel\",\n})\nexport class DurabilityStateLabelPipe implements PipeTransform {\n   transform(state: DurabilityState | string): string {\n      switch (state) {\n         case null:\n            return \"\";\n         case DurabilityState.GUARANTEED:\n            return VsanUiUtils.getString(\"vsan.durability.guaranteed\");\n         case DurabilityState.NO_RESOURCE:\n            return VsanUiUtils.getString(\"vsan.durability.notGuaranteed.no.resource\");\n         case DurabilityState.EXCEEDED_COMP_LIMIT:\n            return VsanUiUtils.getString(\"vsan.durability.notGuaranteed.exeeded.comp.limit\");\n         case DurabilityState.NO_SPACE:\n            return VsanUiUtils.getString(\"vsan.durability.notGuaranteed.no.space\");\n         case DurabilityState.STALE_DURABILITY_COMP:\n            return VsanUiUtils.getString(\"vsan.durability.notGuaranteed.stale.durability.space\");\n         case DurabilityState.UNKNOWN:\n         default:\n            return VsanUiUtils.getString(\"vsan.durability.unknown\");\n      }\n   }\n}\n"]}