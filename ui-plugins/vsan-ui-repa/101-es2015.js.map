{"version":3,"sources":["./src/app/vsan/cns/volumes/details/volumes-view-details-basics.component.ts","./src/app/vsan/cns/volumes/dialog/volume-accessibility-dialog.html","./src/app/vsan/cns/volumes/details/volumes-view-details-basics.html","./src/app/vsan/cns/pipe/volume-type-label.pipe.ts","./src/app/vsan/common/util/promise/promise-baton.ts","./src/app/vsan/cns/pipe/health-status-icon-shape.pipe.ts","./src/app/vsan/common/service/flow/error-handler.decorator.ts","./src/app/vsan/cns/volumes/details/volumes-view-details-cluster.html","./src/app/vsan/common/pipe/compliance-status-icon.pipe.ts","./src/app/vsan/cns/volumes/dialog/volume-accessibility-dialog.component.ts","./src/app/vsan/cns/volumes/volumes-vm-service.ts","./src/app/vsan/common/component/illustrated-message/illustrated-message.component.ts","./src/app/vsan/cns/volumes/details/volumes-view-details-row.html","./src/app/vsan/cns/volumes/filter/label-filter.html","./src/app/vsan/cns/volumes/action/volume-actions.component.ts","./src/app/vsan/cns/volumes/volumes.html","./src/app/vsan/common/component/illustrated-message/illustrated-message.module.ts","./src/app/vsan/cns/volumes/cell/cns-cluster-cell.component.ts","./src/app/vsan/cns/pipe/health-status-label.pipe.ts","./src/app/vsan/cns/volumes/cell/cns-health-status-cell.component.ts","./src/app/vsan/cns/volumes/dialog/compliance-failures-dialog.component.ts","./src/app/vsan/cns/volumes/action/reapply-policy-volume/reapply-policy-volume.html","./src/app/vsan/cns/volumes/cell/cns-health-status-cell.html","./src/app/vsan/cns/volumes/details/volumes-view-details-cluster.component.ts","./src/app/vsan/cns/volumes/volumes.component.ts","./src/app/vsan/cns/cns-volumes.module.ts","./src/app/vsan/cns/volumes/action/reapply-policy-volume/reapply-policy-volume.component.ts","./src/app/vsan/common/util/promise/race-condition-safe.decorator.ts","./src/app/vsan/cns/volumes/filter/label-filter.component.ts","./src/app/vsan/cns/volumes/action/migrate-volume/migrate-volume.html","./src/app/vsan/common/directive/show-title/show-title-multi-line.directive.ts","./src/app/vsan/cns/volumes/cell/cns-vm-cell.component.ts","./src/app/vsan/cns/volumes/cell/cns-compliance-status-cell.html","./src/app/vsan/cns/volumes/what-is-this-dialog/what-is-this-dialog.html","./src/app/vsan/cns/volumes/details/volumes-view-details-pod-row.html","./src/app/generated/cns-health-status.ts","./src/app/vsan/cns/volumes/cell/cns-compliance-status-cell.component.ts","./src/app/vsan/cns/volumes/action/volume-action-availability.service.ts","./src/app/vsan/cns/volumes/details/volumes-view-details.html","./src/app/vsan/common/component/file-share-perf/container-volume-perf-data.ts","./src/app/vsan/cns/volumes/action/volume-actions.html","./src/app/vsan/cns/volumes/cell/cns-vm-cell.html","./src/app/vsan/common/util/volumes-util.ts","./src/app/vsan/cns/volumes/details/volumes-view-details-pod-row.component.ts","./src/app/vsan/cns/volumes/cell/cns-datastore-cell.component.ts","./src/app/vsan/cns/volumes/cell/cns-cluster-cell.html","./src/app/vsan/cns/volumes/cell/cns-datastore-cell.html","./src/app/vsan/cns/volumes/action/delete-volume/delete-volume.component.ts","./src/app/vsan/cns/volumes/action/migrate-volume/migrate-volume.component.ts","./src/app/vsan/cns/volumes/what-is-this-dialog/what-is-this-dialog.component.ts","./src/app/vsan/cns/volumes/details/volumes-view-details-row.component.ts","./src/app/vsan/cns/volumes/dialog/compliance-failures-dialog.html","./src/app/vsan/common/pipe/compliance-status-label.pipe.ts","./src/app/vsan/cns/volumes/action/migrate-volume/migrate-volume.service.ts","./src/app/vsan/cns/volumes/action/delete-volume/delete-volume.html","./src/app/vsan/cns/volumes/details/volumes-view-details.component.ts"],"names":[],"mappings":"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","file":"101-es2015.js","sourcesContent":["/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {Volume} from \"@generated/volume\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {CnsVolumeType} from \"@generated/cns-volume-type\";\nimport {SharesContext} from \"@navigation/context/shares-context\";\nimport {FileShareTypeFilterOptions} from \"../../../file-services/shares/filters/file-share-type-filter-options\";\nimport {BasicVmData} from \"@generated/basic-vm-data\";\nimport {VolumesUtil} from \"@util/volumes-util\";\n\n@Component({\n   templateUrl: \"volumes-view-details-basics.html\",\n   styleUrls: [\"volumes-view-details-basics.scss\"],\n   selector: \"cns-volumes-view-details-basics\",\n})\n\n/**\n * The component is used to show basic details of a CNS volume(e.g., name, storage policy, datastore, etc.)\n */\n\nexport class VolumesViewDetailsBasics {\n\n   VolumesUtil: typeof VolumesUtil = VolumesUtil;\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   @Input()\n   volumeItem: Volume;\n\n   @Input()\n   storagePolicyName: string;\n\n   @Input()\n   vmData: BasicVmData[];\n\n   @Input()\n   vmDataLoading: boolean;\n\n   getVMLabel(): string {\n      return VsanUiUtils.getString((!VsanUiUtils.isEmpty(this.vmData) &&\n            this.vmData[0].isPodVM) ?\n            \"cns.volumes.container.grid.details.tab.basics.column.pod\" :\n            \"cns.volumes.container.grid.details.tab.basics.column.vm\");\n   }\n\n   navigateToFileShares() {\n      const fileServiceSharesContext: SharesContext = {\n         preselectedShareName: this.volumeItem.fileshareName,\n         shareTypeFilter: FileShareTypeFilterOptions.CNS_VOLUME,\n      };\n      this.navigationService.navigateTo(PlatformExtension.FILE_SERVICE_SHARES, null, fileServiceSharesContext);\n   }\n}","<!--Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-info-prompt\n      [title]=\"'cns.volumes.container.volume.accessibility.dialog.title' | localized\"\n      [subtitle]=\"volume.name\"\n      [(alertMessages)]=\"alertMessages\"\n      [allowAlertClose]=\"false\">\n   <clr-datagrid *ngIf=\"!alertMessages?.length\"\n                 class=\"datagrid-compact\"\n                 [clrDgLoading]=\"busy\">\n      <!--datagrid columns-->\n      <clr-dg-column>\n         {{'cns.volumes.container.volume.accessibility.dialog.column.hostName' | localized}}\n      </clr-dg-column>\n      <clr-dg-column>\n         {{'cns.volumes.container.volume.accessibility.dialog.column.accessibleStatus' | localized}}\n      </clr-dg-column>\n      <!--datagrid rows-->\n      <clr-dg-row *ngFor=\"let host of hosts\">\n         <clr-dg-cell>\n            <clr-icon [attr.shape]=\"host.iconId\"></clr-icon>\n            {{host.hostName}}\n         </clr-dg-cell>\n         <clr-dg-cell>\n            <clr-icon aria-hidden=\"true\"\n                      [attr.shape]=\"getHealthStatus(host.accessibility) | cnsHealthStatusIconShape\"\n                      [ngClass]=\"Icon.CLR_SOLID_ICON_CLASS + ' ' +\n                      Icon.clrIconShapeClassMap[getHealthStatus(host.accessibility) | cnsHealthStatusIconShape]\">\n            </clr-icon>\n            <span id=\"status-label\">{{getHealthStatus(host.accessibility) | cnsHealthStatusLabel}}</span>\n         </clr-dg-cell>\n      </clr-dg-row>\n   </clr-datagrid>\n</vsan-info-prompt>\n","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<form class=\"clr-form clr-form-compact\">\n   <cns-volumes-view-details-row id=\"volume-type\"\n                                 itemLabel=\"cns.volumes.container.grid.column.type\">\n      {{volumeItem.type | cnsVolumeTypeLabel}}\n   </cns-volumes-view-details-row>\n   <cns-volumes-view-details-row id=\"volume-id\"\n                                 itemLabel=\"cns.volumes.container.grid.column.id\">\n      {{volumeItem.id}}\n   </cns-volumes-view-details-row>\n   <cns-volumes-view-details-row *ngIf=\"volumeItem?.backingObjectId\"\n                                 id=\"volume-backing-object-id\"\n                                 itemLabel=\"cns.volumes.container.grid.column.backingObjectId\">\n      {{volumeItem.backingObjectId}}\n   </cns-volumes-view-details-row>\n   <cns-volumes-view-details-row *ngIf=\"volumeItem?.path\"\n                                 id=\"volume-path\"\n                                 itemLabel=\"cns.volumes.container.grid.column.path\">\n      <div class=\"path-value\">\n         <span>\n            {{volumeItem.path}}\n         </span>\n         <vsan-clipboard-icon [content]=\"volumeItem?.path\"></vsan-clipboard-icon>\n      </div>\n   </cns-volumes-view-details-row>\n   <cns-volumes-view-details-row *ngIf=\"VolumesUtil.isBlockVolume(volumeItem)\"\n                                 id=\"volume-vm\"\n                                 [itemLabel]=\"getVMLabel()\">\n      <cns-vm-cell [vmData]=\"vmData\"\n                   [loading]=\"vmDataLoading\">\n      </cns-vm-cell>\n   </cns-volumes-view-details-row>\n   <cns-volumes-view-details-row id=\"volume-datastore\"\n                                 itemLabel=\"cns.volumes.container.grid.column.datastore\">\n      <cns-datastore-cell [datastoreData]=\"volumeItem.datastoreData\"></cns-datastore-cell>\n   </cns-volumes-view-details-row>\n   <cns-volumes-view-details-row id=\"volume-storage-policy\"\n                                 itemLabel=\"cns.volumes.container.grid.column.storagePolicy\">\n      <storage-policy-cell [storagePolicyName]=\"storagePolicyName\"\n                           [storagePolicyId]=\"volumeItem.storagePolicyId\">\n      </storage-policy-cell>\n   </cns-volumes-view-details-row>\n   <cns-volumes-view-details-row id=\"volume-compliance-status\"\n                                 itemLabel=\"cns.volumes.container.grid.column.compliance\">\n      <cns-compliance-status-cell [volume]=\"volumeItem\"></cns-compliance-status-cell>\n   </cns-volumes-view-details-row>\n   <cns-volumes-view-details-row id=\"volume-health-status\"\n                                 itemLabel=\"cns.volumes.container.grid.column.healthStatus\">\n      <cns-health-status-cell [volume]=\"volumeItem\"></cns-health-status-cell>\n   </cns-volumes-view-details-row>\n   <ng-container *ngIf=\"VolumesUtil.isFileVolume(volumeItem)\">\n      <div>\n         {{\"cns.volumes.container.grid.details.tab.basics.navigateToFileShares.description\" | localized}}\n      </div>\n      <button id=\"file-shares-navigation-btn\"\n              class=\"btn btn-sm btn-link no-spacing\"\n              (click)=\"navigateToFileShares()\">\n         {{\"cns.volumes.container.grid.details.tab.basics.navigateToFileShares.label\" | localized}}\n      </button>\n   </ng-container>\n</form>\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {CnsVolumeType} from \"@generated/cns-volume-type\";\n\n/**\n * This pipe returns the label for a volume type.\n */\n@Pipe({\n   name: \"cnsVolumeTypeLabel\",\n})\nexport class VolumeTypeLabelPipe implements PipeTransform {\n   transform(type: CnsVolumeType): string {\n      switch (type) {\n         case CnsVolumeType.FILE:\n            return VsanUiUtils.getString(\"cns.volumes.container.volumeType.file\");\n         case CnsVolumeType.BLOCK:\n         default:\n            return VsanUiUtils.getString(\"cns.volumes.container.volumeType.block\");\n      }\n   }\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {CancelablePromise} from \"@util/promise/cancelable-promise\";\n\nexport class PromiseBaton<TResult> {\n   private ongoingPromise: CancelablePromise<TResult>;\n\n   constructor() {\n      this.ongoingPromise = null;\n   }\n\n   /**\n    * Only the last passed promise will be resolved. Others will be canceled.\n    * @param promise - The only pending promise that we want to resolve.\n    * @param rejectOnCancel - Whether we want to rethrow the cancellation of the returned promise.\n    * @example\n    * ```ts\n    * // If later we cancel the returned promise it will be rejected with the following error: { canceled: true }.\n    * resolveOnly(promise, true);\n    * ```\n    * ```ts\n    * // If later we cancel the returned promise it won't be rejected and the 'catch' callback won't be invoked.\n    * resolveOnly(promise, false);\n    * ```\n    */\n   resolveOnly(promise: Promise<TResult>, rejectOnCancel: boolean = false): Promise<TResult> {\n      this.cancelLastOne();\n      // We wrap it into CancelablePromise to be able to cancel this one without affecting the original promise.\n      // Original promise subscribers still will be able to get the result.\n      this.ongoingPromise = new CancelablePromise(promise, rejectOnCancel);\n      return this.ongoingPromise.promise;\n   }\n\n   /**\n    * Reject the currently running promise.\n    */\n   cancelLastOne(): void {\n      if (this.ongoingPromise) {\n         this.ongoingPromise.cancel();\n      }\n   }\n}","/* Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {Icon} from \"@util/icon\";\nimport {CnsHealthStatus} from \"@generated/cns-health-status\";\n\n/**\n * This pipe changes icon shapes according the CnsHealthStatus value.\n */\n@Pipe({\n   name: \"cnsHealthStatusIconShape\",\n})\nexport class HealthStatusIconShapePipe implements PipeTransform {\n   transform(status: CnsHealthStatus): string {\n      if (!status) {\n         return \"\";\n      }\n\n      switch (status) {\n         case CnsHealthStatus.green:\n            return Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE;\n         case CnsHealthStatus.red:\n            return Icon.CLR_MINUS_CIRCLE_ICON_SHAPE;\n         case CnsHealthStatus.yellow:\n            return Icon.CLR_ERROR_STANDARD_ICON_SHAPE;\n         case CnsHealthStatus.unknown:\n            return Icon.CLR_HELP;\n         default:\n            return Icon.CLR_ERROR_STANDARD_ICON_SHAPE;\n      }\n   }\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {LoadingFlowWrapper} from \"@service/flow/loading-flow-wrapper.data\";\n\n/**\n * This property decorator is supposed to be used along with the @Loader decorator.\n * If an exception is thrown during the execution of the method decorated with @Loader\n * the ErrorHandler method will be invoked. You can define as many ErrorHandlers as you want,\n * but they must be with different names. The name can be provided as input to the decorator.\n * If a name is set to the ErrorHandler it will handle only the errors thrown by Loader functions\n * with the same name. If no name is passed to the ErrorHandler, it will handle only the errors\n * from Loader functions with no name.\n *\n * <pre>\n * // Example 1:\n * @Loader()\n * loadSyncData(): any {\n *    throw new Error(\"Failed to load sync data\");\n * }\n *\n * @ErrorHandler()\n * handleError(err: any) {\n *    // handle the error.\n * }\n *...\n *\n * // Example 2\n *\n * @Loader({name: \"data-loading-flow})\n * async loadAsyncData(): Promise<any> {\n *    return Promise.reject(\"Failed to load async data\");\n * }\n *\n * @ErrorHandler({name: \"data-loading-flow})\n * handleError(err: any) {\n *    // handle the error.\n * }\n * ...\n * </pre>\n */\nexport function ErrorHandler(props?: ErrorHandlerProperties): MethodDecorator {\n   props = props || {};\n   return (targetClass: any, functionName: string, descriptor: PropertyDescriptor): void => {\n      (new LoadingFlowWrapper(targetClass, props.name)).errorHandler = descriptor.value;\n   };\n}\n\n/**\n * Properties of the ErrorHandler decorator.\n */\nexport interface ErrorHandlerProperties {\n\n   /**\n    * Indicates which @Loder should be handled by this @ErrorHandler\n    */\n   name?: string;\n}\n","<!--Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n\n<!--Classes used by QEs: cluster-label -->\n\n<div class=\"cluster-info\">\n   <!-- The label for the guest cluster is defined in the parent cluster's row  -->\n   <label *ngIf=\"!isGuestCluster()\" class=\"cluster-label\">\n      {{\"cns.volumes.container.grid.details.tab.relatedObjects.column.cluster.label\" | localized}}\n   </label>\n   <cns-cluster-cell [cluster]=\"cluster\"\n                     [volumeName]=\"volumeName\"\n                     [showBadge]=\"true\">\n   </cns-cluster-cell>\n</div>\n<ng-container *ngIf=\"cluster.persistentVolumes && cluster.persistentVolumes.length > 0\">\n   <ng-container *ngFor=\"let pv of cluster.persistentVolumes\">\n      <div class=\"pv-container\">\n         <cns-volumes-view-details-row\n               itemLabel=\"cns.volumes.container.grid.details.tab.relatedObjects.column.pv\"\n               [sectionRow]=\"true\">\n         </cns-volumes-view-details-row>\n         <cns-volumes-view-details-row\n               class=\"related-objects\"\n               itemLabel=\"cns.volumes.container.grid.details.tab.relatedObjects.column.name\">\n            {{pv.name}}\n         </cns-volumes-view-details-row>\n         <cns-volumes-view-details-row\n               class=\"related-objects\"\n               itemLabel=\"cns.volumes.container.grid.details.tab.relatedObjects.column.labels\">\n            <label-cell\n                  [entityLabels]=\"pv.labels\"\n                  [showSeeAllButton]=\"false\"\n                  [isClickable]=\"true\">\n            </label-cell>\n         </cns-volumes-view-details-row>\n      </div>\n      <ng-container *ngIf=\"pv.persistentVolumeClaim\">\n         <div class=\"pvc-container\">\n            <cns-volumes-view-details-row\n                  itemLabel=\"cns.volumes.container.grid.details.tab.relatedObjects.column.namespace\"\n                  [sectionRow]=\"true\">\n                <span *ngIf=\"!isWCPCluster()\">\n                  {{pv.persistentVolumeClaim.namespace}}\n               </span>\n               <a *ngIf=\"isWCPCluster()\"\n                  href=\"javascript://\"\n                  (click)=\"navigateToWCPNamespace(pv.persistentVolumeClaim.namespace)\">\n                  {{pv.persistentVolumeClaim.namespace}}\n               </a>\n            </cns-volumes-view-details-row>\n            <cns-volumes-view-details-row\n                  itemLabel=\"cns.volumes.container.grid.details.tab.relatedObjects.column.pvc\"\n                  [sectionRow]=\"true\">\n            </cns-volumes-view-details-row>\n            <cns-volumes-view-details-row\n                  class=\"related-objects\"\n                  itemLabel=\"cns.volumes.container.grid.details.tab.relatedObjects.column.name\">\n               <span *ngIf=\"!isWCPCluster()\">\n                  {{pv.persistentVolumeClaim.name}}\n               </span>\n               <a *ngIf=\"isWCPCluster()\"\n                  href=\"javascript://\"\n                  (click)=\"navigateToWCPPvc(pv.persistentVolumeClaim.namespace, pv.persistentVolumeClaim.name)\">\n                  {{pv.persistentVolumeClaim.name}}\n               </a>\n            </cns-volumes-view-details-row>\n            <cns-volumes-view-details-row\n                  class=\"related-objects\"\n                  itemLabel=\"cns.volumes.container.grid.details.tab.relatedObjects.column.labels\">\n               <label-cell\n                     [entityLabels]=\"pv.persistentVolumeClaim.labels\"\n                     [showSeeAllButton]=\"false\"></label-cell>\n            </cns-volumes-view-details-row>\n            <cns-volumes-view-details-pod-row *ngIf=\"!pv.persistentVolumeClaim.guestClusters.length\"\n                                              [vmData]=\"vmData\"\n                                              [vmDataLoading]=\"vmDataLoading\"\n                                              [podNames]=\"pv.persistentVolumeClaim.podNames\">\n            </cns-volumes-view-details-pod-row>\n            <cns-volumes-view-details-row *ngIf=\"pv.persistentVolumeClaim.guestClusters.length\"\n                                          class=\"related-objects\"\n                                          itemLabel=\"cns.volumes.container.grid.details.tab.relatedObjects.column.cluster.guest.label\">\n               <cns-volumes-view-details-cluster *ngFor=\"let tkc of pv.persistentVolumeClaim.guestClusters\"\n                                                 [volumeName]=\"volumeName\"\n                                                 [cluster]=\"tkc\"\n                                                 [vmData]=\"vmData\"\n                                                 [vmDataLoading]=\"vmDataLoading\">\n               </cns-volumes-view-details-cluster>\n            </cns-volumes-view-details-row>\n         </div>\n      </ng-container>\n   </ng-container>\n</ng-container>\n\n","/* Copyright 2017-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {PipeTransform, Pipe} from \"@angular/core\";\nimport {PerfStatsObjectInfo} from \"@generated/perf-stats-object-info\";\nimport {VsanIscsiTargetConfig} from \"@generated/vsan-iscsi-target-config\";\nimport {Icon} from \"@util/icon\";\nimport {StorageCompliance} from \"@generated/storage-compliance\";\n\n@Pipe({\n   name: 'complianceStatusIcon'\n})\nexport class ComplianceStatusIconPipe implements PipeTransform {\n\n   public transform(details: any | PerfStatsObjectInfo | VsanIscsiTargetConfig | StorageCompliance): any {\n      if (!details) {\n         return Icon.EMPTY_ICON;\n      }\n\n      let status: StorageCompliance = null;\n      if ((<any> Object).values(StorageCompliance).includes(details)) {\n         status = details;\n      } else if (details.spbmComplianceResult) {\n         status = details.spbmComplianceResult.complianceStatus;\n      } else if (details.homeObjectStorageCompliance) {\n         status = details.homeObjectStorageCompliance\n      }\n\n      if (!status) {\n         return Icon.EMPTY_ICON;\n      }\n\n      switch (status) {\n         case StorageCompliance.compliant:\n            return Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE;\n         case StorageCompliance.unknown:\n            return Icon.CLR_HELP;\n         case StorageCompliance.outOfDate:\n            return Icon.CLR_WARN_STANDARD_ICON_SHAPE;\n         case StorageCompliance.nonCompliant:\n         case StorageCompliance.notApplicable:\n            return Icon.CLR_ERROR_STANDARD_ICON_SHAPE;\n         default:\n            return Icon.EMPTY_ICON;\n      }\n   }\n}\n","/* Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {Icon} from \"@util/icon\";\nimport {Logger} from \"@util/logger\";\nimport {CnsService} from \"@generated/cns-service\";\nimport {CnsHostData} from \"@generated/cns-host-data\";\nimport {Volume} from \"@generated/volume\";\nimport {CnsHealthStatus} from \"@generated/cns-health-status\";\nimport {CnsDatastoreAccessibilityStatus} from \"@generated/cns-datastore-accessibility-status\";\n\n/**\n * Dialog which represents the hosts and their accessibility to datastores.\n */\n@Component({\n   selector: \"cns-volume-accessibility-dialog\",\n   templateUrl: \"volume-accessibility-dialog.html\",\n})\n\nexport class VolumeAccessibilityDialogComponent implements OnInit {\n   volume: Volume;\n   busy: boolean;\n   alertMessages: string[] = [];\n   hosts: CnsHostData[] = [];\n   Icon = Icon;\n\n   constructor(private cnsService: CnsService) {\n   }\n\n   ngOnInit() {\n      this.busy = true;\n      this.volume = VsanUiUtils.getModalContext().volume;\n\n      const datastoreRefs: ManagedObject[] = this.volume.datastoreData.map(data => data.reference);\n      this.cnsService.getHostsDataByDatastoreRefs(datastoreRefs)\n            .then((result: CnsHostData[]) => {\n               this.hosts = result;\n               this.busy = false;\n            }).catch(error => {\n         Logger.error(error);\n         this.alertMessages = [error];\n         this.busy = false;\n      });\n   }\n\n   getHealthStatus(accessibility: CnsDatastoreAccessibilityStatus): CnsHealthStatus {\n      switch (accessibility) {\n         case CnsDatastoreAccessibilityStatus.accessible:\n            return CnsHealthStatus.green;\n         case CnsDatastoreAccessibilityStatus.notAccessible:\n            return CnsHealthStatus.red;\n      }\n   }\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Injectable} from \"@angular/core\";\nimport {CnsVolumeType} from \"@generated/cns-volume-type\";\nimport {BasicVmData} from \"@generated/basic-vm-data\";\nimport {Volume} from \"@generated/volume\";\nimport {CnsService} from \"@generated/cns-service\";\n/**\n * A service that checks whether a block volume is attached to a VM.\n */\n@Injectable()\nexport class VolumesVmService  {\n   constructor(private cnsService: CnsService) {\n   }\n\n   async getVMData(volumeItem: Volume): Promise<void> {\n      // Don't fetch vm data for non-block volumes or if it is already fetched.\n      if (volumeItem.type !== CnsVolumeType.BLOCK || volumeItem.vmData) {\n         return;\n      }\n      // It is not necessary to call the method for each datastore (e.g., in case of having added\n      // multiple NFS datastores to separate DCs) because the API already returns all the VM data.\n      const vmData: BasicVmData[] = await this.cnsService.getVolumeVmsData(\n            volumeItem.datastoreData[0].reference, volumeItem.id);\n      volumeItem.vmData = vmData;\n   }\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, Input} from \"@angular/core\";\nimport {Logger} from \"@util/logger\";\n\n/**\n * Component which displays illustrated messages such as info for the page, lack of data, etc.\n * Each type of message has own IllustratedMessageType.\n * The image on top of message depends on the type. If add new type, define a picture for it.\n * Message is a text right below the image\n * Content between tags if any is displayed at the bottom. This is the place to add custom functionality to the\n * component i.e functionality for new instance, configure, etc.\n */\n@Component({\n   selector: \"vsan-illustrated-message\",\n   templateUrl: \"illustrated-message.html\",\n   styleUrls: [\"illustrated-message.scss\"],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IllustratedMessageComponent {\n   private readonly MISSING_DATA_IMAGE_CLASS: string = \"missing-data-image\";\n   private readonly ACCESS_DENIED_IMAGE_CLASS: string = \"access-denied-image\";\n   private readonly MISSING_SELECTION_CLASS: string = \"missing-selection-image\";\n   private readonly FILTER_NO_RESULT_CLASS: string = \"filter-no-result\";\n\n   @Input()\n   type: IllustratedMessageType = IllustratedMessageType.MISSING_DATA;\n\n   @Input()\n   message: string;\n\n   getImageClass(): string {\n      switch (this.type) {\n         case IllustratedMessageType.MISSING_DATA:\n            return this.MISSING_DATA_IMAGE_CLASS;\n         case IllustratedMessageType.ACCESS_DENIED:\n            return this.ACCESS_DENIED_IMAGE_CLASS;\n         case IllustratedMessageType.MISSING_SELECTION:\n            return this.MISSING_SELECTION_CLASS;\n         case IllustratedMessageType.FILTER_NO_RESULT:\n            return this.FILTER_NO_RESULT_CLASS;\n         default:\n            Logger.warn(\"Not handled type: \" + this.type);\n      }\n   }\n}\n\n/**\n * The type of the message.\n */\nexport enum IllustratedMessageType {\n   // If add new type, add also handling for it in getImageClass() method.\n   MISSING_DATA,\n   ACCESS_DENIED,\n   MISSING_SELECTION,\n   FILTER_NO_RESULT,\n}\n","<!--Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential-->\n\n<div class=\"clr-form-control\" [ngClass]=\"{'section-row': sectionRow}\">\n   <label class=\"clr-control-label\">\n      {{itemLabel | localized}}\n   </label>\n   <span class=\"clr-control-container\">\n      <ng-content>\n      </ng-content>\n   </span>\n</div>\n\n\n","<!-- Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-validation *ngIf=\"alertMessage\"\n                 alertType=\"danger\"\n                 [allowClose]=\"false\"\n                 [alert]=\"alertMessage\"\n                 [isSmall]=\"true\">\n</vsan-validation>\n<input type=\"text\"\n       class=\"clr-input\"\n       placeholder=\"{{'cns.volumes.container.grid.column.label.filter.placeholder' | localized}}\"\n       [(ngModel)]=\"labelSearchValue\"\n       (input)=\"onSearchChange($event.target.value)\"\n       autocomplete=\"off\">\n<div *ngIf=\"labelSearchValue\" id=\"filter-placeholder-label\">\n   {{'cns.volumes.container.grid.column.label.filter.placeholder' | localized}}\n</div>\n<div *ngIf=\"hasMore\" id=\"filter-more-label\">\n   {{'cns.volumes.container.grid.column.label.filter.more' | localized}}\n</div>\n<div *ngIf=\"!loading && queryFilterResults?.length > 1\" id=\"filter-selection-label\">\n   {{'cns.volumes.container.grid.column.label.filter.selection' | localized}}\n</div>\n<div class=\"labels-container\" *ngIf=\"!loading && queryFilterResults?.length > 0\">\n   <div *ngFor=\"let label of queryFilterResults\"\n         class=\"label-wrapper\"\n         vsan-show-title-multi-line\n         [copyToClipboard]=\"true\">\n        <div class=\"label label-light-blue clickable\"\n             [ngClass]=\"{'selected-label': isLabelSelected(label)}\"\n             (click)=\"selectLabel(label)\">\n            {{label.key}}\n            <span class=\"badge\">{{label.value}}</span>\n        </div>\n   </div>\n</div>\n<div *ngIf=\"loading\"\n     class=\"spinner-label\">\n   <span class=\"spinner spinner-sm spinner-inline\"></span>\n   {{'cns.volumes.container.grid.column.label.filter.loading' | localized}}\n</div>","/* Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {Volume} from \"@generated/volume\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {ActionAvailableStatus} from \"@util/validation/action-available-status\";\nimport {VsanDialogUtil} from \"@util/vsan-dialog-util\";\nimport {VsanRoutes} from \"../../../../vsan-routes\";\nimport {CnsVolumesDeleteVolumeModalContext} from \"./delete-volume/delete-volume-modal-context.data\";\nimport {CnsVolumesMigrateVolumeModalContext} from \"./migrate-volume/migrate-volume-modal-context.data\";\nimport {ReapplyPolicyVolumeModalContextData} from \"./reapply-policy-volume/reapply-policy-volume-modal-context.data\";\nimport {VolumeActionAvailabilityService} from \"./volume-action-availability.service\";\nimport {VolumeActionContext} from \"./volume-action-context\";\n\n@Component({\n   templateUrl: \"volume-actions.html\",\n   selector: \"cns-volume-actions\",\n   styleUrls: [\"volume-actions.scss\"],\n})\nexport class CnsVolumeActionsComponent {\n   @Input()\n   selectedVolumes: Volume[] = [];\n\n   @Input()\n   storagePolicyName: string;\n\n   @Input()\n   isVolumeRelocationSupported: boolean;\n\n   @Input()\n   isCnsReconfigPolicySupported: boolean;\n\n   @Input()\n   loading: boolean;\n\n   @Input()\n   hasReadPolicyPermission: boolean;\n\n   @Input()\n   hasUpdatePolicyPermission: boolean;\n\n   @Input()\n   hasDatastoreFileManagementPermission: boolean;\n\n   @Input()\n   hasHostStoragePermission: boolean;\n\n   @Output()\n   onError: EventEmitter<string> = new EventEmitter<string>();\n\n   @Output()\n   onSuccess: EventEmitter<void> = new EventEmitter<void>();\n\n   VolumeActionAvailabilityService: typeof VolumeActionAvailabilityService = VolumeActionAvailabilityService;\n\n   constructor(private taskSvc: TaskMonitorService,\n         private volumeActionAvailabilityService: VolumeActionAvailabilityService,\n   ) {\n   }\n\n   actionDisabled = (actionId: string): boolean => {\n      return this.loading || !this.getActionStatus(actionId).available;\n   };\n\n   getActionButtonTitle = (actionId: string): string => {\n      return this.getActionStatus(actionId).message;\n   };\n\n   private getActionStatus = (actionId: string): ActionAvailableStatus => {\n      return this.volumeActionAvailabilityService.checkAvailability(this.getActionValidationContext(actionId));\n   };\n\n   private getActionValidationContext(actionId: string): VolumeActionContext {\n      return {\n         actionId: actionId,\n         selectedVolumes: this.selectedVolumes,\n         hasReadPolicyPermission: this.hasReadPolicyPermission,\n         hasUpdatePolicyPermission: this.hasUpdatePolicyPermission,\n         hasDatastoreFileManagementPermission: this.hasDatastoreFileManagementPermission,\n         hasHostStoragePermission: this.hasHostStoragePermission,\n         isCnsReconfigPolicySupported: this.isCnsReconfigPolicySupported,\n      };\n   }\n\n   hasReadUpdatePolicyPermission(): boolean {\n      const updatePolicyPermission: boolean = this.isCnsReconfigPolicySupported\n            ? this.hasDatastoreFileManagementPermission\n            : this.hasUpdatePolicyPermission;\n      return this.hasReadPolicyPermission && updatePolicyPermission;\n   }\n\n   reapplyPolicy(): void {\n      const context: ReapplyPolicyVolumeModalContextData = {\n         volumes: this.selectedVolumes,\n         isCnsReconfigPolicySupported: this.isCnsReconfigPolicySupported,\n      };\n      new ModalBuilder(`${VsanRoutes.CNS_VOLUMES_VIEW}/reapplyPolicyVolume`)\n            .setSize(VsanDialogUtil.REAPPLY_VOLUME_POLICY_DIALOG.width,\n                  VsanDialogUtil.REAPPLY_VOLUME_POLICY_DIALOG.height)\n            .open(context)\n            .then(async (taskRefs: ManagedObject[]) => await Promise.all(\n                  taskRefs.map(taskRef => this.taskSvc.getAwaitResult(taskRef))))\n            .then(() => this.onSuccess.emit())\n            .catch(e => this.onError.emit(e));\n   }\n\n   deleteVolume(): void {\n      const context: CnsVolumesDeleteVolumeModalContext = {\n         objectRef: ManagedObject.contextObject,\n         volume: this.selectedVolumes[0],\n      };\n      new ModalBuilder(`${VsanRoutes.CNS_VOLUMES_VIEW}/deleteVolume`)\n            .setSize(VsanDialogUtil.DELETE_VOLUME_DIALOG.width, VsanDialogUtil.DELETE_VOLUME_DIALOG.height)\n            .open(context)\n            .then(async taskRef => await this.taskSvc.getAwaitResult(taskRef))\n            .then(() => this.onSuccess.emit())\n            .catch(e => this.onError.emit(e));\n   }\n\n   migrateVolume(): void {\n      const context: CnsVolumesMigrateVolumeModalContext = {\n         volume: this.selectedVolumes[0],\n         storagePolicyName: this.storagePolicyName,\n      };\n\n      new ModalBuilder(`${VsanRoutes.CNS_VOLUMES_VIEW}/migrateVolume`)\n            .setSize(VsanDialogUtil.MIGRATE_VOLUME_DIALOG.width, VsanDialogUtil.MIGRATE_VOLUME_DIALOG.height)\n            .open(context)\n            .then(async taskRef => await this.taskSvc.getAwaitResult(taskRef))\n            .then(() => this.onSuccess.emit())\n            .catch(e => this.onError.emit(e));\n   }\n}\n","<!-- Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<h5 vsan-auto-focus>\n   {{\"cns.monitor.volumes\" | localized}}\n</h5>\n<h6 class=\"cns-header\">\n   <span>{{\"cns.volumes.container.provider\" | localized}}</span>\n   <span>{{\"cns.volumes.container.provider.kubernetes\" | localized}}</span>\n   <div>\n      <button id=\"what-is-this-btn\" class=\"btn btn-sm btn-link no-spacing\" (click)=\"openWhatIsThisDialog()\">\n         {{\"vsan.common.learnMore\" | localized}}\n      </button>\n   </div>\n</h6>\n<vsan-validation id=\"load-volumes-validation\"\n                 *ngIf=\"errorMessages.length > 0\"\n                 [allowClose]=\"true\"\n                 [(alerts)]=\"errorMessages\"\n                 (onClosed)=\"errorMessages = []\">\n</vsan-validation>\n<div class=\"volume-actions\">\n   <cns-volume-actions [selectedVolumes]=\"selectedVolumes\"\n                       [storagePolicyName]=\"storagePolicyNameFromId(selectedVolumes[0]?.storagePolicyId)\"\n                       [isVolumeRelocationSupported]=\"isVolumeRelocationSupported\"\n                       [isCnsReconfigPolicySupported]=\"isCnsReconfigPolicySupported\"\n                       [loading]=\"loading\"\n                       [hasReadPolicyPermission]=\"hasReadPolicyPermission\"\n                       [hasUpdatePolicyPermission]=\"hasUpdatePolicyPermission\"\n                       [hasDatastoreFileManagementPermission]=\"hasDatastoreFileManagementPermission\"\n                       [hasHostStoragePermission]=\"hasHostStoragePermission\"\n                       (onError)=\"onError($event)\"\n                       (onSuccess)=\"refresh()\">\n   </cns-volume-actions>\n   <vsan-action-separator></vsan-action-separator>\n   <vsan-cross-column-filter *ngIf=\"!isFileVolumesSupported\"\n                             (changes)=\"filterChange($event);\"\n                             [filters]=\"filters\"\n                             [toggleFilter]=\"toggleFilterSubject\">\n      <vsan-cross-column-filter-group [name]=\"'cns.volumes.container.grid.details.tab.basics' | localized\">\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_NAME\"\n                                        [label]=\"'cns.volumes.container.grid.column.name' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_LABELS\"\n                                        [label]=\"'cns.volumes.container.grid.column.label' | localized\">\n            <cns-label-filter #vsanCustomFilter></cns-label-filter>\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_DATASTORE\"\n                                        [label]=\"'cns.volumes.container.grid.column.datastore' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_STORAGE_POLICY_NAME\"\n                                        [label]=\"'cns.volumes.container.grid.column.storagePolicy' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_COMPLIANCE_STATUS\"\n                                        [label]=\"'cns.volumes.container.grid.column.compliance' | localized\">\n            <vsan-list-filter #vsanCustomFilter>\n               <vsan-list-filter-item *ngFor=\"let status of enumToArray(StorageCompliance)\"\n                                      [key]=\"status\"\n                                      [label]=\"status | complianceStatusLabel\"\n                                      [iconShape]=\"status | complianceStatusIcon\"\n                                      [iconClass]=\"Icon.CLR_SOLID_ICON_CLASS + ' ' +\n                                                   Icon.clrIconShapeClassMap[status | complianceStatusIcon]\">\n               </vsan-list-filter-item>\n            </vsan-list-filter>\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_ID\"\n                                        [label]=\"'cns.volumes.container.grid.column.id' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_HEALTH_STATUS\"\n                                        [label]=\"'cns.volumes.container.grid.column.healthStatus' | localized\">\n            <vsan-list-filter #vsanCustomFilter>\n               <vsan-list-filter-item *ngFor=\"let status of enumToArray(CnsHealthStatus)\"\n                                      [key]=\"status\"\n                                      [label]=\"status | cnsHealthStatusLabel\"\n                                      [iconShape]=\"status | cnsHealthStatusIconShape\"\n                                      [iconClass]=\"Icon.CLR_SOLID_ICON_CLASS + ' ' +\n                                              Icon.clrIconShapeClassMap[status | cnsHealthStatusIconShape]\">\n               </vsan-list-filter-item>\n            </vsan-list-filter>\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_CONTAINER_CLUSTER_ID\"\n                                        [label]=\"'cns.volumes.container.grid.column.containerCluster' | localized\">\n         </vsan-cross-column-filter-item>\n      </vsan-cross-column-filter-group>\n   </vsan-cross-column-filter>\n   <vsan-cross-column-filter *ngIf=\"isFileVolumesSupported\"\n                             (changes)=\"filterChange($event);\"\n                             [filters]=\"filters\"\n                             [toggleFilter]=\"toggleFilterSubject\">\n      <vsan-cross-column-filter-group [name]=\"'cns.volumes.container.grid.details.tab.basics' | localized\">\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_NAME\"\n                                        [label]=\"'cns.volumes.container.grid.column.name' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_LABELS\"\n                                        [label]=\"'cns.volumes.container.grid.column.label' | localized\">\n            <cns-label-filter #vsanCustomFilter></cns-label-filter>\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_DATASTORE\"\n                                        [label]=\"'cns.volumes.container.grid.column.datastore' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_STORAGE_POLICY_NAME\"\n                                        [label]=\"'cns.volumes.container.grid.column.storagePolicy' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_COMPLIANCE_STATUS\"\n                                        [label]=\"'cns.volumes.container.grid.column.compliance' | localized\">\n            <vsan-list-filter #vsanCustomFilter>\n               <vsan-list-filter-item *ngFor=\"let status of enumToArray(StorageCompliance)\"\n                                      [key]=\"status\"\n                                      [label]=\"status | complianceStatusLabel\"\n                                      [iconShape]=\"status | complianceStatusIcon\"\n                                      [iconClass]=\"Icon.CLR_SOLID_ICON_CLASS + ' ' +\n                                                   Icon.clrIconShapeClassMap[status | complianceStatusIcon]\">\n               </vsan-list-filter-item>\n            </vsan-list-filter>\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_ID\"\n                                        [label]=\"'cns.volumes.container.grid.column.id' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_HEALTH_STATUS\"\n                                        [label]=\"'cns.volumes.container.grid.column.healthStatus' | localized\">\n            <vsan-list-filter #vsanCustomFilter>\n               <vsan-list-filter-item *ngFor=\"let status of enumToArray(CnsHealthStatus)\"\n                                      [key]=\"status\"\n                                      [label]=\"status | cnsHealthStatusLabel\"\n                                      [iconShape]=\"status | cnsHealthStatusIconShape\"\n                                      [iconClass]=\"Icon.CLR_SOLID_ICON_CLASS + ' ' +\n                                              Icon.clrIconShapeClassMap[status | cnsHealthStatusIconShape]\">\n               </vsan-list-filter-item>\n            </vsan-list-filter>\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_CONTAINER_CLUSTER_ID\"\n                                        [label]=\"'cns.volumes.container.grid.column.containerCluster' | localized\">\n         </vsan-cross-column-filter-item>\n      </vsan-cross-column-filter-group>\n      <vsan-cross-column-filter-group [name]=\"'cns.volumes.container.grid.details.tab.relatedObjects' | localized\">\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_NAMESPACE\"\n                                        [label]=\"'cns.volumes.container.grid.column.namespace' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_PV_NAME\"\n                                        [label]=\"'cns.volumes.container.grid.column.pvName' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_PVC_NAME\"\n                                        [label]=\"'cns.volumes.container.grid.column.pvcName' | localized\">\n         </vsan-cross-column-filter-item>\n         <vsan-cross-column-filter-item [field]=\"CnsVolumeField.COLUMN_POD_NAME\"\n                                        [label]=\"'cns.volumes.container.grid.column.podName' | localized\">\n         </vsan-cross-column-filter-item>\n      </vsan-cross-column-filter-group>\n   </vsan-cross-column-filter>\n</div>\n\n<vsan-slide-panel [(activePane)]=\"activePane\" [detailsPaneSize]=\"75\">\n   <div leftPane class=\"master-view\">\n      <clr-datagrid #dataGrid\n                    (clrDgRefresh)=\"datagridRefresh($event)\"\n                    [clrDgLoading]=\"loading\"\n                    [(clrDgSelected)]=\"selectedVolumes\"\n                    [ngClass]=\"{'details-expanded': !isLeftVisible}\">\n         <clr-dg-column class=\"info-column\"></clr-dg-column>\n         <clr-dg-column class=\"name-column\">\n            <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n               {{\"cns.volumes.container.grid.column.name\" | localized}}\n            </ng-container>\n         </clr-dg-column>\n         <clr-dg-column class=\"name-column\">\n            <ng-container *clrDgHideableColumn=\"{hidden: true}\">\n               {{\"cns.volumes.container.grid.column.type\" | localized}}\n            </ng-container>\n         </clr-dg-column>\n         <clr-dg-column id=\"labelColumn\" class=\"name-column\">\n            <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n               {{\"cns.volumes.container.grid.column.label\" | localized}}\n            </ng-container>\n         </clr-dg-column>\n         <clr-dg-column *ngIf=\"!isDatastoreContext\" class=\"name-column\">\n            <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n               {{\"cns.volumes.container.grid.column.datastore\" | localized}}\n            </ng-container>\n         </clr-dg-column>\n         <clr-dg-column *ngIf=\"hasReadPolicyPermission\" class=\"name-column\">\n            <ng-container *clrDgHideableColumn=\"{hidden: true}\">\n               {{\"cns.volumes.container.grid.column.storagePolicy\" | localized}}\n            </ng-container>\n         </clr-dg-column>\n         <clr-dg-column>\n            <ng-container *clrDgHideableColumn=\"{hidden: false}\" class=\"name-column\">\n               {{\"cns.volumes.container.grid.column.compliance\" | localized}}\n            </ng-container>\n         </clr-dg-column>\n         <clr-dg-column>\n            <ng-container *clrDgHideableColumn=\"{hidden: true}\" class=\"name-column\">\n               {{\"cns.volumes.container.grid.column.id\" | localized}}\n            </ng-container>\n         </clr-dg-column>\n         <clr-dg-column>\n            <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n               {{\"cns.volumes.container.grid.column.healthStatus\" | localized}}\n            </ng-container>\n         </clr-dg-column>\n         <clr-dg-column>\n            <ng-container *clrDgHideableColumn=\"{hidden: true}\">\n               {{\"cns.volumes.container.grid.column.containerCluster\" | localized}}\n            </ng-container>\n         </clr-dg-column>\n         <clr-dg-column>\n            <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n               {{\"cns.volumes.container.grid.column.capacity\" | localized}}\n            </ng-container>\n         </clr-dg-column>\n\n         <clr-dg-placeholder>{{\"cns.volumes.container.grid.no.results\" | localized}}</clr-dg-placeholder>\n\n         <clr-dg-row class=\"signpost-row-height-fix\"\n                     *ngFor=\"let volume of volumes\" [clrDgItem]=\"volume\">\n            <clr-dg-cell class=\"pointer info-column\" (click)=\"toggle(volume)\">\n               <clr-icon [attr.shape]=\"Icon.DETAIL_VIEW\"\n                         [attr.title]=\"'vsan.common.details' | localized\"\n                         [ngClass]=\"{'is-solid': isSelected(volume)}\"\n                         size=\"20\">\n               </clr-icon>\n            </clr-dg-cell>\n            <clr-dg-cell>\n               <vsan-icon-item [label]=\"volume.name\"\n                               [shape]=\"volume.iconId\">\n               </vsan-icon-item>\n            </clr-dg-cell>\n            <clr-dg-cell class=\"column-type\">{{volume.type | cnsVolumeTypeLabel}}</clr-dg-cell>\n            <clr-dg-cell>\n               <label-cell [entityLabels]=\"volume?.labels\"\n                           [showSeeAllButton]=\"true\"\n                           [isClickable]=\"true\">\n               </label-cell>\n            </clr-dg-cell>\n            <clr-dg-cell *ngIf=\"!isDatastoreContext\">\n               <cns-datastore-cell [datastoreData]=\"volume?.datastoreData\"></cns-datastore-cell>\n            </clr-dg-cell>\n            <clr-dg-cell *ngIf=\"hasReadPolicyPermission\" vsan-show-title>\n               <storage-policy-cell [storagePolicyName]=\"storagePolicyNameFromId(volume.storagePolicyId)\"\n                                    [storagePolicyId]=\"volume.storagePolicyId\"></storage-policy-cell>\n            </clr-dg-cell>\n            <clr-dg-cell class=\"column-compliance\" vsan-show-title>\n               <cns-compliance-status-cell [volume]=\"volume\"></cns-compliance-status-cell>\n            </clr-dg-cell>\n            <clr-dg-cell vsan-show-title>{{volume.id}}</clr-dg-cell>\n            <clr-dg-cell vsan-show-title>\n               <cns-health-status-cell [volume]=\"volume\"></cns-health-status-cell>\n            </clr-dg-cell>\n            <clr-dg-cell>\n               <vsan-popup-list [signpostPosition]=\"'bottom-left'\">\n                  <ng-template vsan-popup-list-item *ngFor=\"let cluster of getVolumeClusters(volume)\">\n                     <cns-cluster-cell [cluster]=\"cluster\"\n                                       [volumeName]=\"volume?.name\">\n                     </cns-cluster-cell>\n                  </ng-template>\n               </vsan-popup-list>\n            </clr-dg-cell>\n            <clr-dg-cell>{{volume.capacity | fileSize}}</clr-dg-cell>\n         </clr-dg-row>\n         <clr-dg-footer>\n            <clr-dg-pagination #pagination\n                               [clrDgTotalItems]=\"total\"\n                               [hidden]=\"!total\"\n                               [clrDgPageSize]=\"DEFAULT_ITEMS_PER_PAGE\">\n               <div vsan-show-title>{{getPaginationLabel(pagination)}}</div>\n            </clr-dg-pagination>\n         </clr-dg-footer>\n      </clr-datagrid>\n   </div>\n   <span detailsTitle>\n      <ng-container *ngIf=\"selectedItem\">\n         <clr-icon [attr.shape]=\"selectedItem?.iconId\"></clr-icon>\n         <span id=\"details-title\">{{selectedItem?.name}}</span>\n      </ng-container>\n   </span>\n   <cns-volumes-view-details rightPane\n                             [volumeItem]=\"selectedItem\"\n                             [storagePolicyName]=\"storagePolicyNameFromId(selectedItem?.storagePolicyId)\"\n                             [resetPageData]=\"volumeDetailsResetData\"\n                             (onError)=\"onError($event)\">\n   </cns-volumes-view-details>\n</vsan-slide-panel>\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {IllustratedMessageComponent} from \"@component/illustrated-message/illustrated-message.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n   ],\n   declarations: [\n      IllustratedMessageComponent,\n   ],\n   exports: [\n      IllustratedMessageComponent,\n   ],\n})\nexport class IllustratedMessageModule {}","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {ClusterFlavor} from \"@generated/cluster-flavor\";\nimport {VolumeContainerCluster} from \"@generated/volume-container-cluster\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {ManagedObject} from \"@service/managed-object\";\n\n@Component({\n   templateUrl: \"cns-cluster-cell.html\",\n   styleUrls: [\"cns-cluster-cell.scss\"],\n   selector: \"cns-cluster-cell\",\n})\n\n/**\n * The component is used to represent volume's clusters. For a vanilla flavor only name is shown. For a WCP/Guest\n * flavor icon and name with link is shown if present, if not only name is shown.\n * If the component is used in details a badge is shown.\n * The component is used in the grid and grid details.\n */\nexport class CnsClusterCell {\n\n   @Input()\n   cluster: VolumeContainerCluster;\n\n   @Input()\n   volumeName: string;\n\n   @Input()\n   showBadge: boolean;\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   get isVanillaCluster(): boolean {\n      return this.isClusterFlavor(ClusterFlavor.VANILLA);\n   }\n\n   get isWCPCluster(): boolean {\n      return this.isClusterFlavor(ClusterFlavor.WORKLOAD);\n   }\n\n   get isGuestCluster(): boolean {\n      return this.isClusterFlavor(ClusterFlavor.GUEST);\n   }\n\n   private isClusterFlavor(clusterFlavor: ClusterFlavor): boolean {\n      return this.cluster && this.cluster.flavor && this.cluster.flavor === clusterFlavor;\n   }\n\n   navigateToSupervisorCluster(clusterRef: ManagedObject): void {\n      this.navigationService.navigateTo(PlatformExtension.CLUSTER_CNS_VOLUMES, clusterRef);\n   }\n\n   navigateToGuestCluster(resPoolRef: ManagedObject): void {\n      this.navigationService.navigateTo(PlatformExtension.LAST_VISITED_PAGE, resPoolRef);\n   }\n}","/* Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {CnsHealthStatus} from \"@generated/cns-health-status\";\n\n/**\n * This pipe returns the correct label for volume health statuses.\n */\n@Pipe({\n   name: \"cnsHealthStatusLabel\",\n})\nexport class HealthStatusLabelPipe implements PipeTransform {\n   transform(status: CnsHealthStatus): string {\n      if (!status) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n      switch (status) {\n         case CnsHealthStatus.green:\n            return VsanUiUtils.getString(\"cns.volumes.container.health.status.green\");\n         case CnsHealthStatus.red:\n            return VsanUiUtils.getString(\"cns.volumes.container.health.status.red\");\n         case CnsHealthStatus.yellow:\n            return VsanUiUtils.getString(\"cns.volumes.container.health.status.yellow\");\n         case CnsHealthStatus.unknown:\n            return VsanUiUtils.getString(\"cns.volumes.container.health.status.unknown\");\n      }\n   }\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {Icon} from \"@util/icon\";\nimport {Volume} from \"@generated/volume\";\nimport {CnsHealthStatus} from \"@generated/cns-health-status\";\nimport {CnsVolumeType} from \"@generated/cns-volume-type\";\nimport {VolumesUtil} from \"@util/volumes-util\";\n\n@Component({\n   templateUrl: \"cns-health-status-cell.html\",\n   styleUrls: [\"cns-health-status-cell.scss\"],\n   selector: \"cns-health-status-cell\",\n})\n\n/**\n * The component is used to show the health status of a CNS volume:\n * red- unhealthy/not accessible\n * green - healthy/accessible\n * yellow - repairing/partially accessible\n * unknown\n * The component is used in the grid and grid details.\n */\nexport class CnsHealthStatusCell {\n\n   @Input()\n   volume: Volume;\n\n   Icon = Icon;\n   private static ACCESSIBILITY_DIALOG_WIDTH: number = 740;\n   private static ACCESSIBILITY_DIALOG_HEIGHT: number = 360;\n\n   /**\n    * The label for accessibility status must become a link when accessibility status is\n    * notAccessible or partiallyAccessible in the other cases when it is null or accessible, or for file volumes\n    * the label must not be a link.\n    * File volumes are located on vsan datastore and are always accessible, so volume accessibility\n    * doesn't make sense for them\n    * @param volume - cns volume.\n    */\n   isLink = (volume: Volume): boolean => {\n      if (VolumesUtil.isFileVolume(volume)) {\n         return false;\n      }\n\n      switch (volume.healthStatus) {\n         case CnsHealthStatus.red:\n         case CnsHealthStatus.yellow:\n            return true;\n         case CnsHealthStatus.green:\n         case CnsHealthStatus.unknown:\n         default:\n            return false;\n      }\n   };\n\n   openAccessibilityDialog(volume: Volume) {\n      new ModalBuilder(\"cnsVolumes/accessibility\")\n            .setDimensions([\n                  CnsHealthStatusCell.ACCESSIBILITY_DIALOG_WIDTH, CnsHealthStatusCell.ACCESSIBILITY_DIALOG_HEIGHT,\n            ])\n            .open({volume: volume});\n   }\n}","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {CnsService} from \"@generated/cns-service\";\nimport {VolumeComplianceFailure} from \"@generated/volume-compliance-failure\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   selector: \"cns-compliance-failures-dialog\",\n   templateUrl: \"compliance-failures-dialog.html\",\n})\nexport class ComplianceFailuresDialogComponent implements OnInit {\n   volumeName: string;\n   failures: VolumeComplianceFailure[] = [];\n   @LoadingIndicator()\n   busy: boolean;\n   @ErrorMessage()\n   alertMessage: string;\n\n   constructor(private cnsService: CnsService) {\n   }\n\n   @Loader()\n   async ngOnInit(): Promise<void> {\n      const modalContext: any = VsanUiUtils.getModalContext();\n      this.volumeName = modalContext.volume.name;\n      this.failures = await this.cnsService.loadComplianceFailures(ManagedObject.contextObject, modalContext.volume);\n   }\n}","<!--Copyright 2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-default-prompt\n      [title]=\"'cns.volumes.container.volume.reapplyPolicy.dialog.title' | localized\"\n      [(alertMessages)]=\"errors\"\n      [allowAlertClose]=\"false\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"loading\"\n      [confirmText]=\"'cns.volumes.container.reapply.label' | localized\"\n      (onConfirm)=\"confirm()\">\n   <div class=\"content-wrapper\">\n      <div>\n         {{description1}}\n      </div>\n      <div>\n         {{description2}}\n      </div>\n   </div>\n</vsan-default-prompt>\n","<!--Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n\n<clr-icon *ngIf=\"volume.healthStatus\"\n          aria-hidden=\"true\"\n          [attr.shape]=\"volume.healthStatus | cnsHealthStatusIconShape\"\n          [ngClass]=\"Icon.CLR_SOLID_ICON_CLASS + ' ' + Icon.clrIconShapeClassMap[volume.healthStatus | cnsHealthStatusIconShape]\">\n</clr-icon>\n<a href=\"javascript://\"\n   *ngIf=\"isLink(volume)\"\n   [title]=\"'vsan.common.dialogOpen.title' | localized :\n      ('cns.volumes.container.volume.accessibility.dialog.title' | localized)\"\n   (click)=\"openAccessibilityDialog(volume)\">\n   {{volume.healthStatus | cnsHealthStatusLabel}}\n</a>\n<ng-container *ngIf=\"!isLink(volume)\">\n   {{volume.healthStatus | cnsHealthStatusLabel}}\n</ng-container>\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VolumeContainerCluster} from \"@generated/volume-container-cluster\";\nimport {ClusterFlavor} from \"@generated/cluster-flavor\";\nimport {BasicVmData} from \"@generated/basic-vm-data\";\nimport {WcpPvcsContext} from \"@navigation/context/wcp-pvcs-context\";\n\n@Component({\n   templateUrl: \"volumes-view-details-cluster.html\",\n   styleUrls: [\"volumes-view-details-cluster.scss\"],\n   selector: \"cns-volumes-view-details-cluster\",\n})\n\n/**\n * The component is used to show cluster details of a CNS volume(e.g., metadata for persistent volumes,\n * persistent volume claims and pods)\n */\n\nexport class VolumesViewDetailsCluster {\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   @Input()\n   cluster: VolumeContainerCluster;\n\n   @Input()\n   volumeName: string;\n\n   @Input()\n   vmData: BasicVmData[];\n\n   @Input()\n   vmDataLoading: boolean;\n\n   isWCPCluster(): boolean {\n      return (this.cluster.flavor === ClusterFlavor.WORKLOAD);\n   }\n\n   isGuestCluster(): boolean {\n      return (this.cluster.flavor === ClusterFlavor.GUEST);\n   }\n\n   navigateToWCPNamespace(namespace: string) {\n      this.navigationService.navigateTo(PlatformExtension.LAST_VISITED_PAGE, this.getWCPObjectId(namespace));\n   }\n\n   navigateToWCPPvc(namespace: string, pvcName: string) {\n      const context: WcpPvcsContext = {\n         pvcName: pvcName,\n      };\n      this.navigationService.navigateTo(\n            PlatformExtension.NAMESPACE_STORAGE_PVCS, this.getWCPObjectId(namespace), context);\n   }\n\n   private getWCPObjectId(namespace: string): string {\n      return `urn:vapi:com.vmware.wcp.WorkloadModel:${namespace}:${ManagedObject.contextObject.serverGuid}`;\n   }\n}","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild} from \"@angular/core\";\nimport {ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface} from \"@clr/angular\";\nimport {LabelCellService} from \"@component/cell/label-cell.service\";\nimport {FilterItem} from \"@component/cross-column-filter/filter-item\";\nimport {PaneType} from \"@component/master-detail/slide-panel.component\";\nimport {CnsHealthStatus} from \"@generated/cns-health-status\";\nimport {CnsService} from \"@generated/cns-service\";\nimport {PbmDataProvider} from \"@generated/pbm-data-provider\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {StorageCompliance} from \"@generated/storage-compliance\";\nimport {Volume} from \"@generated/volume\";\nimport {VolumeContainerCluster} from \"@generated/volume-container-cluster\";\nimport {VolumeFilterSpec} from \"@generated/volume-filter-spec\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {VolumesContext} from \"@navigation/context/volumes-context\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject, ManagedObjectUtils} from \"@service/managed-object\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\nimport {Icon} from \"@util/icon\";\nimport {Logger} from \"@util/logger\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {Subject, Subscription} from \"rxjs\";\n\n@Component({\n   templateUrl: \"volumes.html\",\n   styleUrls: [\"volumes.scss\"],\n   selector: \"cns-volumes\",\n   providers: [LabelCellService],\n})\nexport class CnsVolumesComponent implements OnInit, OnDestroy {\n   readonly CnsVolumeField: typeof CnsVolumeField = CnsVolumeField;\n   readonly DEFAULT_ITEMS_PER_PAGE: number = 20;\n   private static readonly DEFAULT_START_INDEX: number = 0;\n   private static readonly NO_STORAGE_POLICY_VALUE: string = \"\";\n   private static readonly FIRST_PAGE_CLASS: string = \".pagination-first\";\n\n   Icon: typeof Icon = Icon;\n   StorageCompliance: typeof StorageCompliance = StorageCompliance;\n   CnsHealthStatus: typeof CnsHealthStatus = CnsHealthStatus;\n   enumToArray: (data: any) => any[] = VsanUiUtils.enumToArray;\n   VsanUiUtils: typeof VsanUiUtils = VsanUiUtils;\n   // Pagination & items data\n   volumes: Volume[];\n   total: number;\n   loading: boolean = true;\n   errorMessages: string[] = [];\n   // Filters\n   filters: FilterItem[];\n\n   hasReadPolicyPermission: boolean = false;\n   hasUpdatePolicyPermission: boolean = false;\n   hasDatastoreFileManagementPermission: boolean = false;\n   hasHostStoragePermission: boolean = false;\n   isDatastoreContext: boolean;\n   storagePolicies: any;\n   selectedVolumes: Volume[] = [];\n   isFileVolumesSupported: boolean = false;\n   isVolumeRelocationSupported: boolean = false;\n   isCnsReconfigPolicySupported: boolean = false;\n   volumeDetailsResetData: any = {};\n\n   // Others\n   toggleFilterSubject: Subject<FilterItem> = new Subject<FilterItem>();\n   refreshSubject: Subject<ClrDatagridStateInterface> = new Subject<ClrDatagridStateInterface>();\n   private refreshSubscription: Subscription;\n   private labelClickSubscription: Subscription;\n   private state: ClrDatagridStateInterface = {};\n   private gridFirstRefresh: boolean = true;\n\n   @ViewChild(\"dataGrid\", {static: true})\n   dataGrid: ClrDatagrid;\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   constructor(private cnsService: CnsService,\n         private pbmProvider: PbmDataProvider,\n         private permissionService: PermissionService,\n         private changeDetector: ChangeDetectorRef,\n         private capabilityProvider: VsanCapabilityProvider,\n         private labelCellService: LabelCellService,\n   ) {\n   }\n\n   ngOnInit(): void {\n      this.preselectFilter();\n      this.refreshSubscription = this.refreshSubject\n            .subscribe(async (state: ClrDatagridStateInterface) => {\n               this.loading = true;\n               this.errorMessages = [];\n               await this.dispatchFilterRequestPromise(state);\n               this.ensureGridSelectionCheckboxes();\n               this.loading = false;\n            });\n      this.labelClickSubscription = this.labelCellService.onLabelClicked.subscribe((label) => {\n         this.toggleFilterSubject.next(new FilterItem(CnsVolumeField.COLUMN_LABELS, [label]));\n      });\n      this.isDatastoreContext = ManagedObjectUtils.isDatastore(ManagedObject.contextObjectUid);\n   }\n\n   // Handle navigation from Virtual Objects and WCP by preselecting the passed filter.\n   // The filter key comprises of the \"volume\" prefix attached to the grid field (i.e., CnsVolumeField enum)\n   // in Pascal case (e.g., volume + PvName = volumePvName).\n   private preselectFilter(): void {\n      const context: VolumesContext = VsanUiUtils.getNavigationData();\n      if (!context) {\n         return;\n      }\n      const filters: FilterItem[] = [];\n      Object.values(CnsVolumeField).forEach((gridFieldName: string) => {\n         const contextFieldValue: any = context[this.buildVolumeKey(gridFieldName)];\n         if (contextFieldValue) {\n            filters.push(new FilterItem(gridFieldName, contextFieldValue));\n         }\n      });\n      if (!VsanUiUtils.isEmpty(filters)) {\n         this.filters = filters;\n      }\n   }\n\n   private buildVolumeKey(gridFieldName: string): string {\n      const volumeContextFieldPrefix: string = \"volume\";\n      return volumeContextFieldPrefix + gridFieldName.charAt(0).toUpperCase() + gridFieldName.slice(1);\n   }\n\n   ngOnDestroy(): void {\n      this.refreshSubscription.unsubscribe();\n      this.labelClickSubscription.unsubscribe();\n   }\n\n   filterChange(filters: FilterItem[]): void {\n      this.filters = filters;\n      // If total is changed to a smaller value when the current page is > 1, the clrDgRefresh event is fired which\n      // leads to an additional request.\n      // The following code solves that and ensures the current page is 1 when applying filter.\n      if (this.state && this.state.page && this.state.page.from &&\n            this.state.page.from > CnsVolumesComponent.DEFAULT_START_INDEX) {\n         $(CnsVolumesComponent.FIRST_PAGE_CLASS).click();\n      } else {\n         this.refreshSubject.next(this.state);\n      }\n   }\n\n   @RefreshHandler\n   refresh(): void {\n      this.loading = true;\n      this.errorMessages = [];\n      // Fetch storage policies on initial page load and refresh button click only.\n      const storagePoliciesPromises: Promise<any>[] = this.loadStoragePolicies();\n      const capabilityPromises: Promise<boolean | void>[] = this.loadCapabilities();\n      const volumesPromise: Promise<void> = this.dispatchFilterRequestPromise(this.state);\n      Promise.all([...storagePoliciesPromises, volumesPromise, ...capabilityPromises]).then(() => {\n         this.loading = false;\n         this.ensureGridSelectionCheckboxes();\n         // Make sure the labels are correctly expanded, because for some reason they are not validated\n         // after the label column is resized on init, which causes the labels to be not correctly expanded.\n         setTimeout(() => this.changeDetector.detectChanges());\n         this.srOnlyMessage = VsanUiUtils.getString(\"vsan.screenReader.message.page.loaded\",\n               VsanUiUtils.getString(\"cns.monitor.volumes\"));\n      });\n   }\n\n   private ensureGridSelectionCheckboxes(): void {\n      // Remove datagrid selection checkboxes when the user has no permissions\n      if (!this.hasReadUpdatePolicyPermission() &&\n            !this.hasHostStoragePermission &&\n            !this.hasDatastoreFileManagementPermission) {\n         // this.selectedVolumes = null; - this takes effect as well\n         this.dataGrid.selection.selectionType = this.dataGrid.SELECTION_TYPE.None;\n      }\n   }\n\n   hasReadUpdatePolicyPermission(): boolean {\n      return this.hasReadPolicyPermission && this.hasUpdatePolicyPermission;\n   }\n\n   private loadStoragePolicies(): Promise<any>[] {\n      const promises: Promise<any>[] = [];\n      promises.push(this.permissionService.hasVcPermissions(ManagedObject.contextObject, [Privileges.READ_POLICIES()])\n            .then(hasReadPolicyPermission => this.hasReadPolicyPermission = hasReadPolicyPermission)\n            .catch(e => this.onError(e)));\n      promises.push(this.permissionService.hasVcPermissions(ManagedObject.contextObject, [Privileges.UPDATE_POLICIES()])\n            .then(hasUpdatePolicyPermission => this.hasUpdatePolicyPermission = hasUpdatePolicyPermission)\n            .catch(e => this.onError(e)));\n      promises.push(this.permissionService.queryPermissions(ManagedObject.contextObject,\n            [Privileges.CONFIG_STORAGE(), Privileges.DATASTORE_FILE_MANAGEMENT()])\n            .then(result => {\n               this.hasHostStoragePermission = result[Privileges.CONFIG_STORAGE()];\n               this.hasDatastoreFileManagementPermission = result[Privileges.DATASTORE_FILE_MANAGEMENT()];\n            })\n            .catch(e => this.onError(e)));\n      promises.push(this.pbmProvider.getStoragePolicyIdNameMap(ManagedObject.contextObject)\n            .then(storagePolicies => this.storagePolicies = storagePolicies)\n            .catch(e => this.onError(e)));\n      return promises;\n   }\n\n   private loadCapabilities(): Promise<boolean | void>[] {\n      const promises: Promise<any>[] = [];\n      // TODO: (tnojarova) confirm whether host capability should be checked as well\n      promises.push(this.capabilityProvider.getIsVolumeRelocationSupportedOnVc(ManagedObject.contextObject)\n            .then(isVolumeRelocationSupported => {\n               this.isVolumeRelocationSupported = isVolumeRelocationSupported;\n            })\n            .catch(e => Logger.error(e)));\n      // TODO: (vasilevd) Move the check to host level\n      promises.push(this.capabilityProvider.getIsCnsReconfigPolicySupportedOnVc(ManagedObject.contextObject)\n            .then(isCnsReconfigPolicySupported => {\n               this.isCnsReconfigPolicySupported = isCnsReconfigPolicySupported;\n            })\n            .catch(e => Logger.error(e)));\n      promises.push(this.capabilityProvider.getIsFileVolumesSupportedOnVc(ManagedObject.contextObject)\n            .then(isFileVolumesSupported => {\n               this.isFileVolumesSupported = isFileVolumesSupported;\n               this.changeDetector.detectChanges();\n            })\n            .catch(e => {\n               this.isFileVolumesSupported = false;\n               Logger.error(e);\n            }));\n\n      return promises;\n   }\n\n   datagridRefresh(state: ClrDatagridStateInterface): void {\n      // Remember the last state to use it again when the global refresh button is clicked\n      this.state = state;\n      // clrDgRefresh event is fired on initial load and each filtering/paging operation.\n      // It's not needed to fetch data on initial grid load because this is done when global refresh handler is attached\n      if (this.gridFirstRefresh) {\n         this.gridFirstRefresh = false;\n         this.refresh();\n      } else {\n         this.loading = true;\n         this.refreshSubject.next(state);\n      }\n   }\n\n   dispatchFilterRequestPromise = (state: ClrDatagridStateInterface): Promise<void> => {\n      this.selectedVolumes = [];\n      this.volumeDetailsResetData = {};\n      const requestFilters: VolumeFilterSpec = this.createRequestFilters(state);\n      if (requestFilters) {\n         return this.loadVolumes(requestFilters);\n      } else {\n         this.volumes = [];\n         this.total = 0;\n         return null;\n      }\n   };\n\n   private loadVolumes(requestFilters: VolumeFilterSpec): Promise<void> {\n      return this.cnsService.getVolumes(ManagedObject.contextObject, requestFilters).then(volumesResult => {\n         this.volumes = volumesResult.volumes;\n         this.total = volumesResult.total;\n      }).catch(e => this.onError(e));\n   }\n\n   onError(e: string): void {\n      Logger.error(e);\n      this.loading = false;\n      this.errorMessages.push(e);\n   }\n\n   private createRequestFilters(state: ClrDatagridStateInterface): VolumeFilterSpec {\n      let fetchVolumes: boolean = true;\n      const requestFilters: VolumeFilterSpec = {} as VolumeFilterSpec;\n\n      if (this.filters) {\n         for (const filter of this.filters) {\n            if (filter.field === CnsVolumeField.COLUMN_STORAGE_POLICY_NAME) {\n               if (filter.value === VsanUiUtils.getString(\"vsan.na.label\")) {\n                  requestFilters[filter.field] = CnsVolumesComponent.NO_STORAGE_POLICY_VALUE;\n               } else {\n                  const storagePolicyIdsFilter: string[] = Object.keys(this.storagePolicies).filter(\n                        policyId => this.storagePolicies[policyId].toLowerCase()\n                              .indexOf(filter.value.toString().toLowerCase()) > -1);\n                  // Backend filtration works for a single policy ID.\n                  // If no policy ID is found or there are multiple policy IDs update filter labels\n                  // and do not return any result.\n                  // TODO: change that behavior once backend starts to support filtration by multiple policy IDs\n                  if (!VsanUiUtils.isEmpty(storagePolicyIdsFilter) && storagePolicyIdsFilter.length === 1) {\n                     requestFilters[filter.field] = storagePolicyIdsFilter[0];\n                  } else {\n                     fetchVolumes = false;\n                  }\n               }\n            } else {\n               requestFilters[filter.field] = filter.value;\n            }\n         }\n         if (!fetchVolumes) {\n            return null;\n         }\n      }\n      if (state.page) {\n         requestFilters.offset = state.page.from;\n         requestFilters.limit = state.page.size;\n      } else {\n         requestFilters.offset = CnsVolumesComponent.DEFAULT_START_INDEX;\n         requestFilters.limit = this.DEFAULT_ITEMS_PER_PAGE;\n      }\n      return requestFilters;\n   }\n\n   storagePolicyNameFromId(policyId: string): string {\n      if (policyId) {\n         // If a volume has a policy that has been deleted return the policy ID as a name.\n         return (this.storagePolicies && this.storagePolicies[policyId])\n               ? this.storagePolicies[policyId]\n               : policyId;\n      } else {\n         return null;\n      }\n   }\n\n   /**\n    * Returns all volume clusters including TKCs.\n    * @param volume\n    */\n   getVolumeClusters(volume: Volume): VolumeContainerCluster[] {\n      if (!volume || VsanUiUtils.isEmpty(volume.containerClusters)) {\n         return [];\n      }\n      return [].concat(volume.guestClusters, volume.containerClusters);\n   }\n\n   openWhatIsThisDialog(): void {\n      new ModalBuilder(\"cnsVolumes/whatIsThis\")\n            .setDimensions(ModalBuilder.WIZARD_XL)\n            .open();\n   }\n\n   // SlidePanelComponent specifics:\n   isLeftVisible: boolean = true;\n   selectedItem: Volume;\n\n   get activePane(): PaneType {\n      return this.isLeftVisible\n            ? PaneType.LEFT\n            : PaneType.RIGHT;\n   }\n\n   set activePane(pane: PaneType) {\n      this.isLeftVisible = pane === PaneType.LEFT;\n   }\n\n   selectTarget(item: Volume): void {\n      this.selectedItem = item;\n   }\n\n   isSelected(item: Volume): boolean {\n      return this.selectedItem === item && !this.isLeftVisible;\n   }\n\n   toggle(item: any): void {\n      if (this.selectedItem === item) {\n         this.isLeftVisible = !this.isLeftVisible;\n      } else {\n         this.selectTarget(item);\n         if (this.isLeftVisible) {\n            this.isLeftVisible = !this.isLeftVisible;\n         }\n      }\n   }\n\n   getPaginationLabel(pagination: ClrDatagridPagination): string {\n      return VsanUiUtils.getDatagridPaginatedFooterLabel(pagination.totalItems, pagination.firstItem,\n            pagination.lastItem, this.DEFAULT_ITEMS_PER_PAGE,\n            \"cns.volumes.container.grid.volume\",\n            \"cns.volumes.container.grid.volumes\",\n            \"cns.volumes.container.grid.page\");\n   }\n}\n\nexport enum CnsVolumeField {\n   COLUMN_ID = \"id\",\n   COLUMN_NAME = \"name\",\n   COLUMN_LABELS = \"labels\",\n   COLUMN_DATASTORE = \"datastore\",\n   COLUMN_CONTAINER_CLUSTER_ID = \"containerCluster\",\n   COLUMN_STORAGE_POLICY_NAME = \"storagePolicy\",\n   COLUMN_HEALTH_STATUS = \"healthStatus\",\n   COLUMN_COMPLIANCE_STATUS = \"complianceStatus\",\n   COLUMN_NAMESPACE = \"namespace\",\n   COLUMN_PV_NAME = \"pvName\",\n   COLUMN_PVC_NAME = \"pvcName\",\n   COLUMN_POD_NAME = \"podName\",\n}\n","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule} from \"@angular/forms\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CrossColumnFilterModule} from \"@component/cross-column-filter/cross-column-filter.module\";\nimport {FileSharePerfModule} from \"@component/file-share-perf/file-share-perf.module\";\nimport {MasterDetailModule} from \"@component/master-detail/master-detail.module\";\nimport {PlacementDetailsModule} from \"@component/placement-details/placement-details.module\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\nimport {VsanCommonModule} from \"../common/vsan-common.module\";\nimport {HealthStatusIconShapePipe} from \"./pipe/health-status-icon-shape.pipe\";\nimport {HealthStatusLabelPipe} from \"./pipe/health-status-label.pipe\";\nimport {VolumeTypeLabelPipe} from \"./pipe/volume-type-label.pipe\";\nimport {DeleteVolumeComponent} from \"./volumes/action/delete-volume/delete-volume.component\";\nimport {MigrateVolumeComponent} from \"./volumes/action/migrate-volume/migrate-volume.component\";\nimport {MigrateVolumeService} from \"./volumes/action/migrate-volume/migrate-volume.service\";\nimport {ReapplyPolicyVolumeComponent} from \"./volumes/action/reapply-policy-volume/reapply-policy-volume.component\";\nimport {VolumeActionAvailabilityService} from \"./volumes/action/volume-action-availability.service\";\nimport {CnsVolumeActionsComponent} from \"./volumes/action/volume-actions.component\";\nimport {CnsClusterCell} from \"./volumes/cell/cns-cluster-cell.component\";\nimport {CnsComplianceStatusCell} from \"./volumes/cell/cns-compliance-status-cell.component\";\nimport {CnsDatastoreCell} from \"./volumes/cell/cns-datastore-cell.component\";\nimport {CnsHealthStatusCell} from \"./volumes/cell/cns-health-status-cell.component\";\nimport {CnsVmCell} from \"./volumes/cell/cns-vm-cell.component\";\nimport {VolumesViewDetailsBasics} from \"./volumes/details/volumes-view-details-basics.component\";\nimport {VolumesViewDetailsCluster} from \"./volumes/details/volumes-view-details-cluster.component\";\nimport {VolumesViewDetailsPodRowComponent} from \"./volumes/details/volumes-view-details-pod-row.component\";\nimport {VolumesViewDetailsRow} from \"./volumes/details/volumes-view-details-row.component\";\nimport {VolumesViewDetails} from \"./volumes/details/volumes-view-details.component\";\nimport {ComplianceFailuresDialogComponent} from \"./volumes/dialog/compliance-failures-dialog.component\";\nimport {VolumeAccessibilityDialogComponent} from \"./volumes/dialog/volume-accessibility-dialog.component\";\nimport {LabelFilterComponent} from \"./volumes/filter/label-filter.component\";\nimport {VolumesVmService} from \"./volumes/volumes-vm-service\";\nimport {CnsVolumesComponent} from \"./volumes/volumes.component\";\nimport {WhatIsThisDialogComponent} from \"./volumes/what-is-this-dialog/what-is-this-dialog.component\";\n\nconst routes: Routes = [\n   {\n      path: \"\",\n      component: CnsVolumesComponent,\n   },\n   {\n      path: \"whatIsThis\",\n      component: WhatIsThisDialogComponent,\n   },\n   {\n      path: \"accessibility\",\n      component: VolumeAccessibilityDialogComponent,\n   },\n   {\n      path: \"complianceFailures\",\n      component: ComplianceFailuresDialogComponent,\n   },\n   {\n      path: \"deleteVolume\",\n      component: DeleteVolumeComponent,\n   },\n   {\n      path: \"migrateVolume\",\n      component: MigrateVolumeComponent,\n   },\n   {\n      path: \"reapplyPolicyVolume\",\n      component: ReapplyPolicyVolumeComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      VsanCommonModule,\n      MasterDetailModule,\n      CrossColumnFilterModule,\n      PlacementDetailsModule,\n      FileSharePerfModule,\n      RouterModule.forChild(routes),\n      UnavailableViewModule,\n   ],\n   declarations: [\n      CnsVolumesComponent,\n      VolumesViewDetails,\n      VolumesViewDetailsCluster,\n      VolumesViewDetailsBasics,\n      VolumesViewDetailsPodRowComponent,\n      VolumesViewDetailsRow,\n      LabelFilterComponent,\n      HealthStatusIconShapePipe,\n      HealthStatusLabelPipe,\n      VolumeTypeLabelPipe,\n      CnsHealthStatusCell,\n      CnsComplianceStatusCell,\n      CnsDatastoreCell,\n      CnsVmCell,\n      CnsClusterCell,\n      WhatIsThisDialogComponent,\n      ComplianceFailuresDialogComponent,\n      VolumeAccessibilityDialogComponent,\n      DeleteVolumeComponent,\n      MigrateVolumeComponent,\n      ReapplyPolicyVolumeComponent,\n      CnsVolumeActionsComponent,\n   ],\n   providers: [VolumesVmService, MigrateVolumeService, VolumeActionAvailabilityService],\n})\nexport class CnsVolumesModule {\n}\n","/* Copyright 2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {CnsService} from \"@generated/cns-service\";\nimport {Volume} from \"@generated/volume\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VolumeActionAvailabilityService} from \"../volume-action-availability.service\";\nimport {ReapplyPolicyVolumeModalContextData} from \"./reapply-policy-volume-modal-context.data\";\n\n@Component({\n   templateUrl: \"reapply-policy-volume.html\",\n   selector: \"vsan-reapply-policy-volume\",\n   styleUrls: [\"reapply-policy-volume.scss\"],\n})\nexport class ReapplyPolicyVolumeComponent implements OnInit {\n   volumes: Volume[] = [];\n   eligibleVolumes: Volume[] = [];\n   isCnsReconfigPolicySupported: boolean;\n   description1: string = \"\";\n   description2: string = \"\";\n   errors: string[];\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   constructor(private cnsService: CnsService,\n         private volumeActionAvailabilityService: VolumeActionAvailabilityService) {\n   }\n\n   ngOnInit(): void {\n      const context: ReapplyPolicyVolumeModalContextData = VsanUiUtils.getModalContext();\n      this.volumes = context.volumes;\n      this.isCnsReconfigPolicySupported = context.isCnsReconfigPolicySupported;\n      this.eligibleVolumes = this.volumeActionAvailabilityService.getReapplyPolicyEligibleVolumes(\n            this.isCnsReconfigPolicySupported, this.volumes);\n      this.setReapplyStorageDescriptions();\n   }\n\n   private setReapplyStorageDescriptions(): void {\n      const key: string = this.isCnsReconfigPolicySupported\n            ? \"cns.volumes.container.volume.reapplyPolicy.dialog.text1.new\"\n            : \"cns.volumes.container.volume.reapplyPolicy.dialog.text1\";\n      this.description1 = VsanUiUtils.getString(key);\n      this.description2 = VsanUiUtils.getString(\"cns.volumes.container.volume.reapplyPolicy.dialog.text2\",\n            this.eligibleVolumes.length, this.volumes.length);\n   }\n\n   @Loader()\n   async confirm(): Promise<void> {\n      this.errors = null;\n      const result: ManagedObject[] = await this.cnsService.reapplyStoragePolicy(\n            ManagedObject.contextObject, this.eligibleVolumes, this.isCnsReconfigPolicySupported);\n      VsanUiUtils.closeModalDialog(result);\n   }\n\n   @ErrorHandler()\n   private onError(): void {\n      this.errors = [VsanUiUtils.getString(\"cns.volumes.container.reapply.error\")];\n   }\n}","/* Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {GlobalRefreshService} from \"@service/global-refresh.service\";\nimport {IdGenerator} from \"@util/id-generator\";\nimport {PromiseBaton} from \"@util/promise/promise-baton\";\n\n/**\n * This decorator solve the race condition problem.\n * - Problem - Call single async method multiple times and we can't be sure which result will come last.\n * - Solution - It will resolve/reject only the last promise. On global refresh we cancel the ongoing promise.\n */\nexport function RaceConditionSafe(): MethodDecorator {\n   return function (targetClass: any, functionName: string, descriptor: PropertyDescriptor): void {\n      // Prototype level\n      const id: string = IdGenerator.getUniqueId();\n      const func: (...args: any[]) => Promise<any> = descriptor.value;\n      const promiseBaton: PromiseBaton<any> = new PromiseBaton();\n\n      // Instance level\n      descriptor.value = function (...args: any[]): Promise<any> {\n         addEventListeners(id, promiseBaton);\n         return promiseBaton.resolveOnly.call(promiseBaton, func.apply(this, args));\n      };\n   };\n\n   function addEventListeners(id: string, promiseBaton: PromiseBaton<any>): void {\n      GlobalRefreshService.Instance.registerRefreshHandler(id, () => promiseBaton.cancelLastOne(), null, false);\n   }\n}\n","/* Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter} from \"@angular/core\";\nimport {Subject} from \"rxjs\";\nimport {auditTime} from \"rxjs/operators\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Logger} from \"@util/logger\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {CnsService} from \"@generated/cns-service\";\nimport {LabelData} from \"@generated/label-data\";\nimport {CustomFilter} from \"@component/cross-column-filter/custom-filter\";\n\n/**\n * This class is used to search for labels in CNS view by key:value pair.\n */\n@Component({\n   templateUrl: \"label-filter.html\",\n   styleUrls: [\"label-filter.scss\"],\n   selector: \"cns-label-filter\",\n})\nexport class LabelFilterComponent implements CustomFilter {\n   private static REFRESH_WAIT_MS: number = 2000; // 2 sec between query requests.\n   loading: boolean = false;\n   alertMessage: string;\n   selectedLabels: LabelData[] = [];\n   queryFilterResults: any[];\n   labelSearchValue: string = null;\n   hasMore: boolean;\n   refresh: Subject<string> = new Subject<string>();\n   onFilterSet = new EventEmitter<LabelData[]>();\n\n   constructor(private cnsService: CnsService) {\n      // Make sure we do not do requests on each keyup.\n      this.refresh.pipe(auditTime(LabelFilterComponent.REFRESH_WAIT_MS)).subscribe(this.dispatchQueryVolumesRequest);\n\n      // TODO: Update CustomFilter with onFilterCleared method:\n      // this.filterService.onFilterCleared.subscribe(() => {\n      //    this.labelSearchValue = null;\n      //    this.clearFilterResults();\n      // });\n   }\n\n   setFilterToComponent(filterValue: Array<{key: string, value: string}>) {\n      this.selectedLabels = !VsanUiUtils.isEmpty(filterValue) ? filterValue : [];\n   }\n\n   onSearchChange(value: string) {\n      this.refresh.next(value);\n   }\n\n   isLabelSelected(label: LabelData): boolean {\n      return this.findLabelIndex(label) > -1;\n   }\n\n   private findLabelIndex(label: LabelData): number {\n      return this.selectedLabels.findIndex((item) => item.key === label.key && item.value === label.value);\n   }\n\n   selectLabel(label: LabelData) {\n      const selectedLabelIndex: number = this.findLabelIndex(label);\n      if (selectedLabelIndex === -1) {\n         this.selectedLabels.push(label);\n      } else {\n         this.selectedLabels.splice(selectedLabelIndex, 1);\n      }\n      // TODO: Change the type of the filter state\n      this.onFilterSet.emit(this.selectedLabels);\n   }\n\n   dispatchQueryVolumesRequest = async (searchString: string) => {\n      this.loading = true;\n      this.alertMessage = null;\n      const components: string[] = searchString.split(\":\", 2);\n      const key: string = components[0];\n      const value: string = components[1];\n      if (key) {\n         try {\n            const result = await this.cnsService.queryLabels(ManagedObject.contextObject, key, value);\n            this.queryFilterResults = result.labels;\n            this.hasMore = result.hasMore;\n         } catch (e) {\n            Logger.error(e);\n            this.alertMessage = e;\n            this.clearFilterResults();\n         }\n      } else {\n         this.clearFilterResults();\n      }\n      this.loading = false;\n   };\n\n   private clearFilterResults() {\n      this.queryFilterResults = [];\n      this.hasMore = false; // Reset has more, as we do not know if there are any results at all.\n   }\n}","<!--Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-prompt [title]=\"'cns.volumes.container.migrate.description' | localized\"\n             [subtitle]=\"volume.name\"\n             [(alertMessage)]=\"errorMessage\"\n             [confirmText]=\"'cns.volumes.container.migrate.label' | localized\"\n             [cancelText]=\"'vsan.common.cancel' | localized\"\n             (onConfirm)=\"confirm()\"\n             [blockContent]=\"loading\"\n             [blockButton]=\"!canMigrate\">\n   <div class=\"dialog-container\" *ngIf=\"!errorMessage && !loading\">\n      <clr-alert id=\"vsan-migrate-volume-alert-message\"\n                 *ngIf=\"warning\"\n                 [clrAlertType]=\"'warning'\"\n                 [clrAlertClosable]=\"false\">\n         <clr-alert-item>\n            <div>\n               <span id=\"vsan-migrate-volume-message-text\">{{warning}}</span>\n               <a id=\"migrate-volume-learn-more-link\"\n                  *ngIf=\"showKBLink\"\n                  [external-link]\n                  [url]=\"documentationUrl\">\n               </a>\n            </div>\n         </clr-alert-item>\n      </clr-alert>\n\n      <div class=\"clr-row\">\n         <label class=\"clr-col-3 clr-control-label\">\n            {{\"cns.volumes.container.volume.migrate.dialog.volumePolicy\" | localized}}\n         </label>\n         <div id=\"migrate-volume-storage-policy-name\" class=\"clr-col-9\">{{storagePolicyName | notEmpty}}</div>\n      </div>\n\n      <div class=\"clr-row\">\n         <label class=\"clr-col-3 clr-control-label\">\n            {{\"cns.volumes.container.volume.migrate.dialog.volumeSize\" | localized}}\n         </label>\n         <div id=\"migrate-volume-file-size\" class=\"clr-col-9\">{{migrateVolume.fileSizeInBytes | fileSize}}</div>\n      </div>\n\n      <span id=\"migrate-volume-select-datastore-description\">\n         {{\"cns.volumes.container.volume.migrate.dialog.description\" | localized}}\n      </span>\n\n      <clr-datagrid [(clrDgSingleSelected)]=\"selectedDatastore\"\n                    (clrDgSingleSelectedChange)=\"selectionChanged($event)\"\n                    id=\"migrate-volume-destination-datastores-grid\">\n         <!-- Datagrid Header -->\n         <clr-dg-column [clrDgField]=\"'name'\">\n            {{'cns.volumes.container.volume.migrate.dialog.table.column.datastoreName' | localized}}\n         </clr-dg-column>\n         <clr-dg-column>\n            {{'cns.volumes.container.volume.migrate.dialog.table.column.compatibility' | localized}}\n         </clr-dg-column>\n         <clr-dg-column>\n            {{'cns.volumes.container.volume.migrate.dialog.table.column.type' | localized}}\n         </clr-dg-column>\n         <clr-dg-column>\n            {{'cns.volumes.container.volume.migrate.dialog.table.column.freeCapacity' | localized}}\n         </clr-dg-column>\n         <clr-dg-column>\n            {{'cns.volumes.container.volume.migrate.dialog.table.column.totalCapacity' | localized}}\n         </clr-dg-column>\n         <!-- Datagrid Content -->\n         <clr-dg-row *clrDgItems=\"let datastore of migrateVolume.destinationDatastores\"\n                     [clrDgItem]=\"datastore\">\n            <clr-dg-cell vsan-show-title>{{datastore.name}}</clr-dg-cell>\n            <clr-dg-cell>\n               <vsan-icon-item [label]=\"getCompatibilityLabel(datastore.policyCompliant)\"\n                               [iconClass]=\"getCompatibilityIconClass(datastore.policyCompliant)\"\n                               [shape]=\"getCompatibilityIconShape(datastore.policyCompliant)\">\n               </vsan-icon-item>\n            </clr-dg-cell>\n            <clr-dg-cell>{{getDatastoreTypeLabel(datastore.type)}}</clr-dg-cell>\n            <clr-dg-cell class=\"right-align-cell\">\n               {{datastore.freeCapacity | fileSize}}\n            </clr-dg-cell>\n            <clr-dg-cell class=\"right-align-cell\">\n               {{datastore.totalCapacity | fileSize}}\n            </clr-dg-cell>\n         </clr-dg-row>\n         <!-- Datagrid Footer -->\n         <clr-dg-footer>\n            <clr-dg-pagination #pagination\n                               [clrDgPageSize]=\"DEFAULT_ITEMS_PER_PAGE\"\n                               [hidden]=\"!migrateVolume.destinationDatastores?.length\"\n                               [clrDgTotalItems]=\"migrateVolume.destinationDatastores?.length\">\n               {{getPaginationLabel(pagination)}}\n            </clr-dg-pagination>\n         </clr-dg-footer>\n      </clr-datagrid>\n   </div>\n</vsan-prompt>\n","/* Copyright (c) 2020-2021 VMware, Inc. All rights reserved. VMware Confidential */\nimport {\n   AfterViewInit,\n   ChangeDetectorRef,\n   ComponentFactory,\n   ComponentFactoryResolver,\n   ComponentRef,\n   Directive,\n   HostListener,\n   Input, Renderer2, ViewContainerRef,\n} from \"@angular/core\";\nimport {ClipboardIcon} from \"./clipboard-icon.component\";\n\n/**\n * This directive does visually the same thing as vsan-show-title but handles a scenario when the parent's content\n * must be wrapped and at the same time some of it's children overflow parent's max width.\n * vsan-show-title directive cannot be used because the parent's element cannot be set with white-space: nowrap style\n * and if that style is applied to the element itself it make no sense as it's content is overflowed by the parent\n * element. To handle that the new directive positions absolutely an element that represents the ellipsis as well as\n * the copyToClipboard icon.\n */\n@Directive({\n   selector: \"[vsan-show-title-multi-line]\",\n})\nexport class ShowTitleMultiLineDirective implements AfterViewInit {\n\n   @Input()\n   copyToClipboard: boolean;\n\n   private static readonly ELLIPSIS_STRING: string = \"...\";\n   private static readonly ELLIPSIS_CLASS_NAME: string = \"custom-ellipsis\";\n   private static readonly CLIPBOARDICON_SPACING: string = \"0.6rem\";\n   private static readonly ELLIPSIS_SPACING: string = \"0rem\";\n\n   private clipboardIcon: ComponentRef<ClipboardIcon>;\n   private originalParentPosition: string;\n   private ellipsisSpan: HTMLSpanElement;\n\n   constructor(\n         private viewContainerRef: ViewContainerRef,\n         private resolver: ComponentFactoryResolver,\n         private renderer: Renderer2,\n         private cdr: ChangeDetectorRef) {\n   }\n\n   ngAfterViewInit() {\n      if (this.isTextEllipsisActive()) {\n         this.originalParentPosition = this.element.parentElement.style.position;\n         this.element.parentElement.style.position = \"relative\";\n         this.addEllipsis();\n      }\n   }\n\n   ngOnDestroy(): void {\n      if (this.isElementCreated()) {\n         this.element.parentElement.style.position = this.originalParentPosition;\n      }\n   }\n\n   @HostListener(\"mouseenter\")\n   show(): void {\n      if (!this.isTextEllipsisActive()) {\n         return;\n      }\n      this.setTitle();\n      this.addClipboardIcon();\n   }\n\n   @HostListener(\"mouseleave\")\n   hide(): void {\n      if (!this.isElementCreated()) {\n         return;\n      }\n      this.removeClipboardIcon();\n      this.removeTitle();\n      this.cdr.detectChanges();\n   }\n\n   private get element(): HTMLElement {\n      return this.viewContainerRef.element.nativeElement;\n   }\n\n   private isElementCreated(): boolean {\n      return this.viewContainerRef && this.viewContainerRef.element && this.viewContainerRef.element.nativeElement;\n   }\n\n   private isTextEllipsisActive(): boolean {\n      return this.getElRect().right > this.getParentRect().right;\n   }\n\n   private getElRect(): ClientRect | DOMRect {\n      return this.element.getBoundingClientRect();\n   }\n\n   private getParentRect(): ClientRect | DOMRect {\n      return this.element.parentElement.getBoundingClientRect();\n   }\n\n   private setTitle(): void {\n      this.element.setAttribute(\"title\", this.innerTextStripped);\n   }\n\n   private removeTitle(): void {\n      this.element.removeAttribute(\"title\");\n   }\n\n   private addClipboardIcon(): void {\n      if (!this.copyToClipboard) {\n         return;\n      }\n      this.createClipboardIcon(this.innerTextStripped);\n      this.ellipsisSpan.style.right = ShowTitleMultiLineDirective.CLIPBOARDICON_SPACING;\n   }\n\n   private get innerTextStripped(): string {\n      const elementText: string = this.element.innerText;\n      const ellipsisIndex: number = elementText.lastIndexOf(ShowTitleMultiLineDirective.ELLIPSIS_STRING);\n      return elementText.substring(0, ellipsisIndex);\n   }\n\n   private createClipboardIcon(copyContent): void {\n      const factory: ComponentFactory<ClipboardIcon> = this.resolver.resolveComponentFactory(ClipboardIcon);\n      this.clipboardIcon = this.viewContainerRef.createComponent(factory);\n      const clipboardIconEl: HTMLElement = this.clipboardIcon.injector.get(ClipboardIcon).element.nativeElement;\n      this.setClipBoardIconTop(clipboardIconEl);\n      this.renderer.appendChild(this.viewContainerRef.element.nativeElement, clipboardIconEl);\n      this.clipboardIcon.instance.content = copyContent;\n   }\n\n   private addEllipsis() {\n      this.ellipsisSpan = document.createElement(\"span\");\n      this.ellipsisSpan.className += ShowTitleMultiLineDirective.ELLIPSIS_CLASS_NAME;\n      this.ellipsisSpan.innerText = ShowTitleMultiLineDirective.ELLIPSIS_STRING;\n      this.ellipsisSpan.style.top = this.topPostion;\n      this.setEllipsisInitialPadding();\n      this.renderer.appendChild(this.viewContainerRef.element.nativeElement, this.ellipsisSpan);\n   }\n\n   private setClipBoardIconTop(clipboardIconEl: HTMLElement) {\n      clipboardIconEl.style.top = this.topPostion;\n   }\n\n   private get topPostion(): string {\n      const top: number = (this.getElRect().top - this.getParentRect().top);\n      return `${top}px`;\n   }\n\n   private removeClipboardIcon(): void {\n      if (!this.clipboardIcon) {\n         return;\n      }\n      this.setEllipsisInitialPadding();\n      this.clipboardIcon.destroy();\n   }\n\n   private setEllipsisInitialPadding(): void {\n      this.ellipsisSpan.style.right = ShowTitleMultiLineDirective.ELLIPSIS_SPACING;\n   }\n}","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {BasicVmData} from \"@generated/basic-vm-data\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"cns-vm-cell.html\",\n   styleUrls: [\"cns-vm-cell.scss\"],\n   selector: \"cns-vm-cell\",\n})\n\n/**\n * The component is used to show VMs, the volume is attached to.\n * When the volume is attached to multiple VMs, a signpost with count is shown next to the\n * first vm (i.e., vm_1_name (+ n)).\n * The component is used in grid details.\n */\nexport class CnsVmCell {\n\n   @Input()\n   vmData: BasicVmData[];\n\n   @Input()\n   loading: boolean;\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   navigateToVm(vmRef: ManagedObject): void {\n      this.navigationService.navigateTo(PlatformExtension.VM_SUMMARY, vmRef);\n   }\n\n   getTooltipText(vmRef: ManagedObject): string {\n      return VsanUiUtils.getString(\"vsan.monitor.cluster.virtualObjects.noReadPermissions\", vmRef.value);\n   }\n}\n","<!--Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n\n<clr-icon *ngIf=\"volume.compliance\"\n          aria-hidden=\"true\"\n          [attr.shape]=\"volume.compliance | complianceStatusIcon\"\n          [ngClass]=\"Icon.CLR_SOLID_ICON_CLASS + ' ' + Icon.clrIconShapeClassMap[volume.compliance | complianceStatusIcon]\"\n          [class.pointer]=\"volume.compliance === StorageCompliance.nonCompliant\">\n</clr-icon>\n<a href=\"javascript://\"\n   [title]=\"'vsan.common.dialogOpen.title' | localized :\n         ('cns.volumes.container.compliance.failure.overview.dialog.title' | localized)\"\n   *ngIf=\"volume.compliance === StorageCompliance.nonCompliant\"\n   (click)=\"openComplianceFailureDialog(volume)\">\n   {{volume.compliance | complianceStatusLabel}}\n</a>\n<ng-container *ngIf=\"volume.compliance !== StorageCompliance.nonCompliant\">\n   {{volume.compliance | complianceStatusLabel}}\n</ng-container>\n","<!--Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-info-prompt [title]=\"title\"\n                  confirmText=\"cns.volumes.info.confirm\">\n   {{'cns.volumes.info.description' | localized}}\n   <div class=\"image\"></div>\n   <vsan-validation id=\"resync-description\"\n                    [alertType]=\"'info'\"\n                    [allowClose]=\"false\"\n                    [alert]=\"'cns.volumes.info.description.resync' | localized\">\n   </vsan-validation>\n</vsan-info-prompt>\n","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<cns-volumes-view-details-row itemLabel=\"cns.volumes.container.grid.details.tab.relatedObjects.column.pod\"\n                              [sectionRow]=\"true\">\n   <span *ngIf=\"vmDataLoading\"\n         class=\"spinner spinner-sm spinner-inline\">\n   </span>\n   <ng-container *ngIf=\"!vmDataLoading\">\n      <cns-vm-cell *ngIf=\"showPodVMCell()\"\n                   [vmData]=\"vmData\"\n                   [loading]=\"vmDataLoading\">\n      </cns-vm-cell>\n      <span *ngIf=\"!showPodVMCell()\">\n         {{podNames.join(POD_DELIMITER)}}\n      </span>\n   </ng-container>\n</cns-volumes-view-details-row>\n\n","export enum CnsHealthStatus {\n   red = \"red\",\n   yellow = \"yellow\",\n   green = \"green\",\n   unknown = \"unknown\",\n}\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {Icon} from \"@util/icon\";\nimport {Volume} from \"@generated/volume\";\nimport {StorageCompliance} from \"@generated/storage-compliance\";\n\n@Component({\n   templateUrl: \"cns-compliance-status-cell.html\",\n   styleUrls: [\"cns-compliance-status-cell.scss\"],\n   selector: \"cns-compliance-status-cell\",\n})\n/**\n * The component is used to show the compliance status of a CNS volume:\n * outOfDate\n * compliant\n * nonCompliant\n * notApplicable\n * unknown\n * The component is used in the grid and grid details.\n */\nexport class CnsComplianceStatusCell {\n\n   @Input()\n   volume: Volume;\n\n   Icon = Icon;\n   StorageCompliance = StorageCompliance;\n\n   private static COMPLIANCE_FAILURE_DIALOG_WIDTH: number = 800;\n   private static COMPLIANCE_FAILURE_DIALOG_HEIGHT: number = 364;\n\n   openComplianceFailureDialog(volume: Volume) {\n      new ModalBuilder(\"cnsVolumes/complianceFailures\")\n            .setDimensions([\n               CnsComplianceStatusCell.COMPLIANCE_FAILURE_DIALOG_WIDTH,\n               CnsComplianceStatusCell.COMPLIANCE_FAILURE_DIALOG_HEIGHT,\n            ])\n            .open({volume: volume});\n   }\n}\n","/* Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Injectable} from \"@angular/core\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {StorageCompliance} from \"@generated/storage-compliance\";\nimport {Volume} from \"@generated/volume\";\nimport {ActionAvailableStatus} from \"@util/validation/action-available-status\";\nimport {Validator} from \"@util/validation/validator\";\nimport {ValidatorsGroup} from \"@util/validation/validators-group\";\nimport {VolumesUtil} from \"@util/volumes-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VolumeActionContext} from \"./volume-action-context\";\n\n@Injectable()\nexport class VolumeActionAvailabilityService {\n   // Volume action IDs\n   static readonly VOLUME_DELETE_ID: string = \"delete-volume\";\n   static readonly VOLUME_MIGRATE_ID: string = \"migrate-volume\";\n   static readonly VOLUME_REAPPLY_POLICY_ID: string = \"reapply-policy-volume\";\n\n   getReapplyPolicyEligibleVolumes(isCnsReconfigPolicySupported: boolean, volumes: Volume[]): Volume[] {\n      return volumes.filter(v => v.storagePolicyId &&\n            (v.compliance === StorageCompliance.outOfDate ||\n                  this.isNonCompliantPolicyReapplyEligible(isCnsReconfigPolicySupported, v)));\n   }\n\n   private isNonCompliantPolicyReapplyEligible(isCnsReconfigPolicySupported: boolean, volume: Volume): boolean {\n      return isCnsReconfigPolicySupported\n            && (volume.compliance === StorageCompliance.nonCompliant)\n            && [DatastoreType.VSAN_DIRECT.toString(), DatastoreType.VMFS.toString()].includes(\n                  volume.datastoreType);\n   }\n\n   checkAvailability = (context: VolumeActionContext): ActionAvailableStatus => {\n      switch (context.actionId) {\n         case VolumeActionAvailabilityService.VOLUME_REAPPLY_POLICY_ID:\n            return this.validate(this.reapplyPolicyVolumeAvailability, context,\n                  \"cns.volumes.container.reapply.description\");\n         case VolumeActionAvailabilityService.VOLUME_DELETE_ID:\n            return this.validate(this.deleteVolumeAvailability, context,\n                  \"cns.volumes.container.delete.description\");\n         case VolumeActionAvailabilityService.VOLUME_MIGRATE_ID:\n            return this.validate(this.migrateVolumeAvailability, context,\n                  \"cns.volumes.container.migrate.description\");\n      }\n   };\n\n   private validate(validatorsGroup: ValidatorsGroup<VolumeActionContext>,\n         context: VolumeActionContext,\n         successMessageKey: string): ActionAvailableStatus {\n\n      const errorMessage: string = validatorsGroup.getFirstError(context);\n      const isActionAvailable: boolean = VsanUiUtils.isEmpty(errorMessage);\n      const statusMessage: string = isActionAvailable\n            ? VsanUiUtils.getString(successMessageKey)\n            : errorMessage;\n\n      return new ActionAvailableStatus(isActionAvailable, statusMessage);\n   }\n\n   private readonly hasSelectedVolumes: Validator<VolumeActionContext> = new Validator(\n         (context: VolumeActionContext): boolean =>\n               VsanUiUtils.isEmpty(context.selectedVolumes),\n         VsanUiUtils.getString(\"cns.volumes.container.action.disabled.noSelection\"));\n\n   private readonly singleVolumeSelection: Validator<VolumeActionContext> = new Validator(\n         (context: VolumeActionContext): boolean =>\n               context.selectedVolumes?.length > 1,\n         VsanUiUtils.getString(\"cns.volumes.container.action.disabled.multipleSelection\"));\n\n   private readonly isBlockVolume: Validator<VolumeActionContext> = new Validator(\n         (context: VolumeActionContext): boolean =>\n               !VolumesUtil.isBlockVolume(context.selectedVolumes[0]),\n         VsanUiUtils.getString(\"cns.volumes.container.action.disabled.fileVolumeSelection\"));\n\n   private readonly policiesAreUpToDate: Validator<VolumeActionContext> = new Validator(\n         (context: VolumeActionContext): boolean =>\n               VsanUiUtils.isEmpty(this.getReapplyPolicyEligibleVolumes(\n                     context.isCnsReconfigPolicySupported, context.selectedVolumes)),\n         (context: VolumeActionContext): string => this.getReapplyPolicyValidationMessage(\n               context.isCnsReconfigPolicySupported));\n\n   private getReapplyPolicyValidationMessage(isCnsReconfigPolicySupported: boolean): string {\n      const key: string = isCnsReconfigPolicySupported\n            ? \"cns.volumes.container.reapply.disabled.description.new\"\n            : \"cns.volumes.container.reapply.disabled.description\";\n      return VsanUiUtils.getString(key);\n   }\n\n   private readonly hasDeletePermissions: Validator<VolumeActionContext> = new Validator(\n         (context: VolumeActionContext): boolean =>\n               (VolumesUtil.isBlockVolume(context.selectedVolumes[0]) && !context.hasDatastoreFileManagementPermission)\n               || (VolumesUtil.isFileVolume(context.selectedVolumes[0]) && !context.hasHostStoragePermission),\n         VsanUiUtils.getString(\"vsan.common.nopermissions\"));\n\n   // TODO tnojarova: add a permission check if there is an attached VM - Resource.ColdMigrate\n   private readonly hasMigratePermissions: Validator<VolumeActionContext> = new Validator(\n         (context: VolumeActionContext): boolean =>\n               !context.hasReadPolicyPermission || !context.hasDatastoreFileManagementPermission,\n         VsanUiUtils.getString(\"vsan.common.nopermissions\"));\n\n   private readonly reapplyPolicyVolumeAvailability: ValidatorsGroup<VolumeActionContext> = new ValidatorsGroup([\n      this.hasSelectedVolumes,\n      this.policiesAreUpToDate,\n   ]);\n\n   private readonly deleteVolumeAvailability: ValidatorsGroup<VolumeActionContext> = new ValidatorsGroup([\n      this.hasSelectedVolumes,\n      this.singleVolumeSelection,\n      this.hasDeletePermissions,\n   ]);\n\n   private readonly migrateVolumeAvailability: ValidatorsGroup<VolumeActionContext> = new ValidatorsGroup([\n      this.hasSelectedVolumes,\n      this.singleVolumeSelection,\n      this.isBlockVolume,\n      this.hasMigratePermissions,\n   ]);\n}","<!--Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-tabs>\n   <clr-tab>\n      <button clrTabLink>\n         {{\"cns.volumes.container.grid.details.tab.basics\" | localized}}\n      </button>\n      <ng-template [(clrIfActive)]=\"basicsTabActive\">\n         <clr-tab-content>\n            <cns-volumes-view-details-basics [volumeItem]=\"volumeItem\"\n                                             [storagePolicyName]=\"storagePolicyName\"\n                                             [vmData]=\"volumeItem?.vmData\"\n                                             [vmDataLoading]=\"vmDataLoading\">\n            </cns-volumes-view-details-basics>\n         </clr-tab-content>\n      </ng-template>\n   </clr-tab>\n   <clr-tab>\n      <button clrTabLink>\n         {{\"cns.volumes.container.grid.details.tab.relatedObjects\" | localized}}\n      </button>\n      <ng-template [(clrIfActive)]=\"clusterDetailsTabActive\">\n         <clr-tab-content>\n            <form class=\"clr-form clr-form-compact\">\n               <cns-volumes-view-details-cluster *ngFor=\"let cluster of volumeItem?.containerClusters\"\n                                                 [volumeName]=\"volumeItem?.name\"\n                                                 [cluster]=\"cluster\"\n                                                 [vmData]=\"volumeItem?.vmData\"\n                                                 [vmDataLoading]=\"vmDataLoading\">\n               </cns-volumes-view-details-cluster>\n               <cns-volumes-view-details-pod-row *ngIf=\"volumeItem?.podNames.length\"\n                                                 [vmData]=\"volumeItem?.vmData\"\n                                                 [vmDataLoading]=\"vmDataLoading\"\n                                                 [podNames]=\"volumeItem?.podNames\">\n               </cns-volumes-view-details-pod-row>\n            </form>\n         </clr-tab-content>\n      </ng-template>\n   </clr-tab>\n   <clr-tab *ngIf=\"canGetVirtualObjectsFromDatastore(volumeItem)\">\n      <button clrTabLink>\n         {{\"cns.volumes.container.grid.details.tab.physicalPlacement\" | localized}}\n      </button>\n      <ng-template [(clrIfActive)]=\"placementDetailsTabActive\">\n         <clr-tab-content>\n            <virtual-objects-placement-details-flat\n                  [virtualObjects]=\"getVirtualObjects()\"\n                  [data]=\"volumeData?.placementData\"\n                  [reducedColumns]=\"true\">\n            </virtual-objects-placement-details-flat>\n            <div>\n               <button id=\"virtual-objects-navigation-btn\"\n                       class=\"btn btn-sm btn-link no-spacing\"\n                       (click)=\"navigateToVirtualObjects()\"\n                       [disabled]=\"!volumeData?.volumeDetails\">\n                  {{\"cns.volumes.container.grid.details.tab.physicalPlacement.navigateToVirtualObjects.label\" | localized}}\n               </button>\n            </div>\n         </clr-tab-content>\n      </ng-template>\n   </clr-tab>\n   <clr-tab>\n      <button clrTabLink>\n         {{\"cns.volumes.container.grid.details.tab.performance\" | localized}}\n      </button>\n      <ng-template [(clrIfActive)]=\"performanceTabActive\">\n         <clr-tab-content>\n            <file-share-perf-details *ngIf=\"isPerformanceApplicable(volumeItem)\"\n                                     [clusterRef]=\"volumeData?.volumeDetails?.cluster\"\n                                     [volumePerfData]=\"volumeData?.performanceData\"\n                                     (queryPerformanceData)=\"fetchDataAfterPerfEnabled(volumeItem, volumeData.volumeDetails)\">\n            </file-share-perf-details>\n            <vsan-unavailable-view *ngIf=\"!isPerformanceApplicable(volumeItem) && !vmDataLoading\"\n                                   [unavailableViewSpec]=\"unavailableViewSpec\">\n            </vsan-unavailable-view>\n         </clr-tab-content>\n      </ng-template>\n   </clr-tab>\n</clr-tabs>\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {ManagedObject} from \"@service/managed-object\";\nimport {NestedPerfEntity} from \"../../../performance/model/nested-perf-entity\";\n\n/**\n * Model for passing data from volume details to volume details performance tab.\n */\n\nexport class ContainerVolumePerfData {\n   constructor(public perfEntityData: NestedPerfEntity, public vmRef: ManagedObject) {\n   }\n}\n","<!-- Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<clr-tooltip *ngIf=\"hasReadUpdatePolicyPermission()\">\n   <span clrTooltipTrigger\n         [vsan-ignore-focus]=\"!actionDisabled(VolumeActionAvailabilityService.VOLUME_REAPPLY_POLICY_ID)\">\n      <button id=\"{{VolumeActionAvailabilityService.VOLUME_REAPPLY_POLICY_ID}}\"\n              class=\"btn btn-sm btn-link no-spacing\"\n              aria-describedby=\"reapply-policy-description\"\n              (click)=\"reapplyPolicy()\"\n              [disabled]=\"actionDisabled(VolumeActionAvailabilityService.VOLUME_REAPPLY_POLICY_ID)\">\n               {{\"cns.volumes.container.reapply.label\" | localized}}\n      </button>\n   </span>\n   <clr-tooltip-content id=\"reapply-policy-description\"\n                        clrPosition=\"top-right\"\n                        clrSize=\"lg\">\n      {{getActionButtonTitle(VolumeActionAvailabilityService.VOLUME_REAPPLY_POLICY_ID)}}\n   </clr-tooltip-content>\n</clr-tooltip>\n<clr-tooltip>\n   <span clrTooltipTrigger\n         [vsan-ignore-focus]=\"!actionDisabled(VolumeActionAvailabilityService.VOLUME_DELETE_ID)\">\n      <button id=\"{{VolumeActionAvailabilityService.VOLUME_DELETE_ID}}\"\n              class=\"btn btn-sm btn-link no-spacing\"\n              aria-describedby=\"delete-volume-description\"\n              (click)=\"deleteVolume()\"\n              [disabled]=\"actionDisabled(VolumeActionAvailabilityService.VOLUME_DELETE_ID)\">\n         {{\"cns.volumes.container.delete.label\" | localized}}\n      </button>\n   </span>\n   <clr-tooltip-content id=\"delete-volume-description\"\n                        clrPosition=\"top-right\"\n                        clrSize=\"lg\">\n      {{getActionButtonTitle(VolumeActionAvailabilityService.VOLUME_DELETE_ID)}}\n   </clr-tooltip-content>\n</clr-tooltip>\n<clr-tooltip *ngIf=\"isVolumeRelocationSupported\">\n   <span clrTooltipTrigger\n         [vsan-ignore-focus]=\"!actionDisabled(VolumeActionAvailabilityService.VOLUME_MIGRATE_ID)\">\n      <button id=\"{{VolumeActionAvailabilityService.VOLUME_MIGRATE_ID}}\"\n              class=\"btn btn-sm btn-link no-spacing\"\n              aria-describedby=\"migrate-volume-description\"\n              (click)=\"migrateVolume()\"\n              [disabled]=\"actionDisabled(VolumeActionAvailabilityService.VOLUME_MIGRATE_ID)\">\n         {{\"cns.volumes.container.migrate.label\" | localized}}\n      </button>\n   </span>\n   <clr-tooltip-content id=\"migrate-volume-description\"\n                        clrPosition=\"top-right\"\n                        clrSize=\"lg\">\n      {{getActionButtonTitle(VolumeActionAvailabilityService.VOLUME_MIGRATE_ID)}}\n   </clr-tooltip-content>\n</clr-tooltip>","<!--Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<span *ngIf=\"loading\" class=\"spinner spinner-sm spinner-inline\"></span>\n<vsan-popup-list *ngIf=\"!loading\">\n   <ng-template vsan-popup-list-item *ngFor=\"let vm of vmData\">\n      <div vsan-show-title>\n         <clr-icon [attr.shape]=\"vm.primaryIconId\" class=\"is-solid\"></clr-icon>\n         <a *ngIf=\"vm.hasReadPermissions; else noPermissions\"\n            href=\"javascript://\"\n            (click)=\"navigateToVm(vm.vmRef)\">{{vm.name}}</a>\n         <ng-template #noPermissions>\n            <clr-tooltip>\n               <span clrTooltipTrigger class=\"no-read-permissions\">{{vm.name}}</span>\n               <clr-tooltip-content clrPosition=\"top-left\"\n                                    clrSize=\"md\">\n                  {{getTooltipText(vm.vmRef)}}\n               </clr-tooltip-content>\n            </clr-tooltip>\n         </ng-template>\n      </div>\n   </ng-template>\n</vsan-popup-list>\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {Volume} from \"@generated/volume\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {CnsVolumeType} from \"@generated/cns-volume-type\";\n\nexport class VolumesUtil {\n   static isFileVolume(volumeItem: Volume): boolean {\n      return volumeItem && (volumeItem.type === CnsVolumeType.FILE);\n   }\n\n   static isBlockVolume(volumeItem: Volume): boolean {\n      return volumeItem && (volumeItem.type === CnsVolumeType.BLOCK);\n   }\n\n   static isAttachedContainerVolume(volumeItem: Volume): boolean {\n      return volumeItem && !VsanUiUtils.isEmpty(volumeItem.vmData);\n   }\n\n   static isAssociatedVmAccessible(volumeItem: Volume): boolean {\n      return VolumesUtil.isAttachedContainerVolume(volumeItem) && volumeItem.vmData[0].hasReadPermissions;\n   }\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {BasicVmData} from \"@generated/basic-vm-data\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"volumes-view-details-pod-row.html\",\n   styleUrls: [\"volumes-view-details-pod-row.scss\"],\n   selector: \"cns-volumes-view-details-pod-row\",\n})\n\n/**\n * Represents a single pod row (label and value) from grid details view\n */\n\nexport class VolumesViewDetailsPodRowComponent {\n\n   POD_DELIMITER: string = VsanUiUtils.getString(\"vsan.common.comma\");\n\n   @Input()\n   vmData: BasicVmData[];\n\n   @Input()\n   vmDataLoading: boolean;\n\n   @Input()\n   podNames: string[];\n\n   // TODO: (vasilevd) Works for block volumes only. Should be handled for file volumes as well.\n   showPodVMCell(): boolean {\n      return this.podNames && this.podNames.length === 1 &&\n            this.vmData && this.vmData.length === 1 &&\n            this.vmData[0].isPodVM &&\n            this.podNames[0] === this.vmData[0].name;\n   }\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {Icon} from \"@util/icon\";\nimport {VolumeDatastoreData} from \"@generated/volume-datastore-data\";\n\n@Component({\n   templateUrl: \"cns-datastore-cell.html\",\n   styleUrls: [\"cns-datastore-cell.scss\"],\n   selector: \"cns-datastore-cell\",\n})\n\n/**\n * The component is used to show the datastore, the volume is backed by. When NFS datastore is used and it is mounted\n * to multiple hosts within different DCs a signpost with count is shown next to the\n * first datastore (i.e., datastore_1_name (+ n))\n * The component is used in the grid and grid details.\n */\nexport class CnsDatastoreCell {\n\n   @Input()\n   datastoreData: VolumeDatastoreData[];\n\n   Icon = Icon;\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   navigateToDatastore(datastore: ManagedObject) {\n      this.navigationService.navigateTo(PlatformExtension.DATASTORE_CNS_VOLUMES, datastore);\n   }\n}\n","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n\n<!--Classes used by QEs: cluster-name-vanilla, cluster-flavor-vanilla, cluster-name-wcp-icon-name,\ncluster-name-wcp, cluster-flavor-wcp, cluster-name-guest -->\n\n<!-- Vanilla cluster: show name with badge -->\n<ng-container *ngIf=\"isVanillaCluster\">\n   <span class=\"cluster-name-vanilla\">\n      {{cluster.name}}\n   </span>\n   <span *ngIf=\"showBadge\" class=\"cluster-flavor-vanilla badge badge-info\">\n      {{\"cns.volumes.container.grid.details.tab.relatedObjects.column.cluster.value.vanilla\" | localized}}\n   </span>\n</ng-container>\n<!-- WCP cluster with data: show icon, link and badge\n     WCP cluster without data: show name and badge  -->\n\n<ng-container *ngIf=\"isWCPCluster\">\n   <div *ngIf=\"cluster.clusterData\" class=\"cluster-name-wcp-icon-name icon-name-container\">\n      <clr-icon [attr.shape]=\"cluster.clusterData.primaryIconId\"></clr-icon>\n      <a (click)=\"navigateToSupervisorCluster(cluster.clusterData.moRef)\" href=\"javascript://\">\n         {{cluster.clusterData.name}}\n      </a>\n   </div>\n   <span *ngIf=\"!cluster.clusterData\" class=\"cluster-name-wcp\">\n      {{cluster.name}}\n   </span>\n   <span *ngIf=\"showBadge\" class=\"cluster-flavor-wcp badge badge-blue\">\n      {{\"cns.volumes.container.grid.details.tab.relatedObjects.column.cluster.value.wcp\" | localized}}\n   </span>\n</ng-container>\n<!-- Guest cluster with data: show icon, link and badge\n     Guest cluster without data: show name and badge  -->\n<ng-container *ngIf=\"isGuestCluster\">\n   <div *ngIf=\"cluster.clusterData\" class=\"cluster-name-guest-icon-name icon-name-container\">\n      <clr-icon [attr.shape]=\"cluster.clusterData.primaryIconId\"></clr-icon>\n      <a (click)=\"navigateToGuestCluster(cluster.clusterData.moRef)\" href=\"javascript://\">\n         {{cluster.clusterData.name}}\n      </a>\n   </div>\n   <span *ngIf=\"!cluster.clusterData\" class=\"cluster-name-guest\">\n      {{cluster.name}}\n   </span>\n</ng-container>","<!--Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-popup-list>\n   <ng-template vsan-popup-list-item *ngFor=\"let datastore of datastoreData\">\n      <div vsan-show-title>\n         <clr-icon [attr.shape]=\"Icon.DATASTORE\" class=\"is-solid\" aria-hidden=\"true\"></clr-icon>\n         <a href=\"javascript://\" (click)=\"navigateToDatastore(datastore.reference)\">{{datastore.name}}</a>\n      </div>\n   </ng-template>\n</vsan-popup-list>\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {CnsVolumesDeleteVolumeModalContext} from \"./delete-volume-modal-context.data\";\nimport {CnsService} from \"@generated/cns-service\";\nimport {Volume} from \"@generated/volume\";\nimport {VolumesVmService} from \"../../volumes-vm-service\";\n\n@Component({\n   templateUrl: \"delete-volume.html\",\n   selector: \"vsan-volumes-delete-volume\",\n})\nexport class DeleteVolumeComponent implements OnInit {\n   objectRef: ManagedObject;\n   volume: Volume;\n   errors: string[];\n   loading: boolean;\n\n   constructor(private cnsService: CnsService,\n         private volumesVmService: VolumesVmService) {\n   }\n\n   ngOnInit(): void {\n      const context: CnsVolumesDeleteVolumeModalContext =\n            <CnsVolumesDeleteVolumeModalContext>VsanUiUtils.getModalContext();\n      this.objectRef = context.objectRef;\n      this.volume = context.volume;\n      this.loading = true;\n      this.volumesVmService.getVMData(this.volume).then(() => {\n         if (this.isVolumeAttached) {\n            this.errors = [VsanUiUtils.getString(\"cns.volumes.container.volume.delete.dialog.validation.vm.attached\",\n                           this.volume.vmData[0].name)];\n         }\n      }).catch(error => this.errors = [error])\n        .finally(() => this.loading = false);\n   }\n\n   async confirm() {\n      this.errors = null;\n      try {\n         this.loading = true;\n         const taskRef: ManagedObject = await this.cnsService.deleteVolume(this.objectRef, this.volume.id);\n         VsanUiUtils.closeModalDialog(taskRef);\n      } catch (error) {\n         this.errors = [error];\n      } finally {\n         this.loading = false;\n      }\n   }\n\n   get isVolumeAttached(): boolean {\n      return this.volume && !VsanUiUtils.isEmpty(this.volume.vmData);\n   }\n\n   get hasErrors(): boolean {\n      return !VsanUiUtils.isEmpty(this.errors);\n   }\n}","/* Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ClrDatagridPagination} from \"@clr/angular\";\nimport {CnsService} from \"@generated/cns-service\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {DestinationDatastore} from \"@generated/destination-datastore\";\nimport {Volume} from \"@generated/volume\";\nimport {VolumeMigrateData} from \"@generated/volume-migrate-data\";\nimport {NavigationService} from \"@navigation/navigation.service\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {CnsVolumesMigrateVolumeModalContext} from \"./migrate-volume-modal-context.data\";\nimport {MigrateVolumeService} from \"./migrate-volume.service\";\n\n@Component({\n   templateUrl: \"migrate-volume.html\",\n   selector: \"vsan-volumes-migrate-volume\",\n   styleUrls: [\"migrate-volume.scss\"],\n})\nexport class MigrateVolumeComponent implements OnInit {\n   readonly DEFAULT_ITEMS_PER_PAGE: number = 10;\n\n   volume: Volume;\n   storagePolicyName: string;\n   migrateVolume: VolumeMigrateData;\n\n   selectedDatastore: DestinationDatastore;\n\n   @ErrorMessage()\n   errorMessage: string;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   warning: string;\n   showKBLink: boolean;\n\n   documentationUrl: string;\n   // TODO: set a valid GUID\n   private readonly MIGRATE_VOLUME_DOCUMENTAION_GUID: string = \"\";\n\n   constructor(private cnsService: CnsService,\n         private migrationService: MigrateVolumeService,\n         private navigationService: NavigationService) {\n   }\n\n   async ngOnInit(): Promise<void> {\n      this.documentationUrl = this.navigationService.getVmwareHelpUrl(NavigationService.NETWORKING_URL,\n            this.MIGRATE_VOLUME_DOCUMENTAION_GUID);\n\n      const context: CnsVolumesMigrateVolumeModalContext = VsanUiUtils.getModalContext();\n      this.volume = context.volume;\n      this.storagePolicyName = context.storagePolicyName;\n      await this.getMigrateVolumeData(this.volume);\n   }\n\n   @Loader()\n   async getMigrateVolumeData(volume: Volume): Promise<void> {\n      this.migrateVolume = await this.cnsService.getMigrateVolumeData(volume);\n\n      if (!VsanUiUtils.isEmpty(this.migrateVolume.destinationDatastores)) {\n         this.setInitialSelection();\n      }\n   }\n\n   @Loader()\n   async confirm(): Promise<void> {\n      // TODO: integrate with backend\n      const taskRef: ManagedObject = new ManagedObject();\n      VsanUiUtils.closeModalDialog(taskRef);\n   }\n\n   get canMigrate(): boolean {\n      return !this.loading && !this.errorMessage\n            && this.migrateVolume && !VsanUiUtils.isEmpty(this.migrateVolume.destinationDatastores);\n   }\n\n   getPaginationLabel(pagination: ClrDatagridPagination): string {\n      return this.migrationService.getPaginationLabel(pagination, this.DEFAULT_ITEMS_PER_PAGE);\n   }\n\n   getDatastoreTypeLabel(type: DatastoreType): string {\n      return this.migrationService.getDatastoreTypeLabel(type);\n   }\n\n   private setInitialSelection(): void {\n      // Set a warning when the storage policy is not retrieved but there are accessible datastores\n      if (!this.storagePolicyName) {\n         this.warning = VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.warning.noStoragePolicy\");\n      }\n\n      this.selectionChanged(this.migrateVolume.destinationDatastores[0]);\n   }\n\n   selectionChanged = (target: DestinationDatastore): void => {\n      this.selectedDatastore = target;\n      if (!this.storagePolicyName) {\n         return;\n      }\n\n      this.showKBLink = target.policyCompliant === false;\n      this.warning = this.showKBLink\n            ? VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.warning.notCompliantDatastore\",\n                  this.storagePolicyName)\n            : \"\";\n   };\n\n   getCompatibilityIconClass(isCompatible: boolean): string {\n      return this.migrationService.getCompatibilityIconClass(isCompatible);\n   }\n\n   getCompatibilityIconShape(isCompatible: boolean): string {\n      return this.migrationService.getCompatibilityIconShape(isCompatible);\n   }\n\n   getCompatibilityLabel(isCompatible: boolean): string {\n      return this.migrationService.getCompatibilityLabel(isCompatible);\n   }\n}","/* Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"what-is-this-dialog.html\",\n   selector: \"cns-what-is-this-dialog\",\n   styleUrls: [\"what-is-this-dialog.scss\"],\n})\nexport class WhatIsThisDialogComponent {\n   readonly title: string = VsanUiUtils.getString(\"cns.volumes.info.title\");\n   readonly infoImage: string = VsanUiUtils.getString(\"cns.volumes.info.image\");\n}","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\n\n@Component({\n   templateUrl: \"volumes-view-details-row.html\",\n   styleUrls: [\"volumes-view-details-row.scss\"],\n   selector: \"cns-volumes-view-details-row\",\n})\n\n/**\n * Represents a single row (label and value) from grid details view\n */\n\nexport class VolumesViewDetailsRow {\n   @Input()\n   itemLabel: string;\n\n   @Input()\n   sectionRow: boolean;\n}\n","<!--Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-info-prompt\n      [title]=\"'cns.volumes.container.compliance.failure.overview.dialog.title' | localized\"\n      [subtitle]=\"volumeName\"\n      [(alertMessage)]=\"alertMessage\">\n   <clr-datagrid class=\"datagrid-compact\" [clrDgLoading]=\"busy\">\n      <clr-dg-column>\n         {{'cns.volumes.container.compliance.failure.overview.dialog.grid.column.propertyName' | localized}}\n      </clr-dg-column>\n      <clr-dg-column>\n         {{'cns.volumes.container.compliance.failure.overview.dialog.grid.column.expectedValue' | localized}}\n      </clr-dg-column>\n      <clr-dg-column>\n         {{'cns.volumes.container.complaince.failure.overview.dialog.grid.column.currentValue' | localized}}\n      </clr-dg-column>\n\n      <clr-dg-row *ngFor=\"let failure of failures\">\n         <clr-dg-cell>{{failure.propertyName}}</clr-dg-cell>\n         <clr-dg-cell>{{failure.expectedValue}}</clr-dg-cell>\n         <clr-dg-cell>{{failure.currentValue}}</clr-dg-cell>\n      </clr-dg-row>\n   </clr-datagrid>\n</vsan-info-prompt>\n","/* Copyright 2017-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {PipeTransform, Pipe} from \"@angular/core\";\nimport {Logger} from \"@util/logger\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {PerfStatsObjectInfo} from \"@generated/perf-stats-object-info\";\nimport {VsanIscsiTargetConfig} from \"@generated/vsan-iscsi-target-config\";\nimport {StorageCompliance} from \"@generated/storage-compliance\";\n\n@Pipe({\n   name: 'complianceStatusLabel'\n})\nexport class ComplianceStatusLabelPipe implements PipeTransform {\n\n   public transform(details: any | PerfStatsObjectInfo | VsanIscsiTargetConfig | StorageCompliance): any {\n      if (!details) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n\n      let status: StorageCompliance = null;\n      if ((<any> Object).values(StorageCompliance).includes(details)) {\n         status = details;\n      } else if (details.spbmComplianceResult) {\n         status = details.spbmComplianceResult.complianceStatus;\n      } else if (details.homeObjectStorageCompliance) {\n         status = details.homeObjectStorageCompliance\n      }\n\n      if (!status) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n\n      switch (status) {\n         case StorageCompliance.compliant:\n            return VsanUiUtils.getString(\"vsan.pbm.complianceStatus.compliant\");\n         case StorageCompliance.nonCompliant:\n            return VsanUiUtils.getString(\"vsan.pbm.complianceStatus.nonCompliant\");\n         case StorageCompliance.notApplicable:\n            return VsanUiUtils.getString(\"vsan.pbm.complianceStatus.notApplicable\");\n         case StorageCompliance.outOfDate:\n            return VsanUiUtils.getString(\"vsan.pbm.complianceStatus.outOfDate\");\n         case StorageCompliance.unknown:\n            return VsanUiUtils.getString(\"vsan.pbm.complianceStatus.unknown\");\n         default:\n            Logger.warn(\"Unrecognized compliance status:\", status);\n            return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n\n   }\n}\n","/* Copyright (c) 2021-2022 VMware, Inc. All rights reserved. VMware Confidential */\nimport {Injectable} from \"@angular/core\";\nimport {ClrDatagridPagination} from \"@clr/angular\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {Icon} from \"@util/icon\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * Helper service for Migrate volume dialog\n */\n@Injectable()\nexport class MigrateVolumeService {\n   getCompatibilityIconClass(isCompatible: boolean): string {\n      if (VsanUiUtils.isUnset(isCompatible)) {\n         return \"\";\n      }\n\n      return isCompatible\n            ? Icon.CLR_SUCCESS_ICON_CLASS\n            : Icon.CLR_WARN_ICON_CLASS;\n   }\n\n   getCompatibilityIconShape(isCompatible: boolean): string {\n      if (VsanUiUtils.isUnset(isCompatible)) {\n         return \"\";\n      }\n\n      return isCompatible\n            ? Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE\n            : Icon.CLR_WARN_STANDARD_ICON_SHAPE;\n   }\n\n   getCompatibilityLabel(isCompatible: boolean): string {\n      if (VsanUiUtils.isUnset(isCompatible)) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n\n      return isCompatible\n            ? VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.column.compatibility.compatible\")\n            : VsanUiUtils.getString(\n                  \"cns.volumes.container.volume.migrate.dialog.table.column.compatibility.incompatible\");\n   }\n\n   getPaginationLabel(pagination: ClrDatagridPagination, itemsPerPage: number): string {\n      return VsanUiUtils.getDatagridPaginatedFooterLabel(pagination.totalItems, pagination.firstItem,\n            pagination.lastItem, itemsPerPage,\n            VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.datastore\"),\n            VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.datastores\"),\n            VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.page\"));\n   }\n\n   getDatastoreTypeLabel(type: DatastoreType): string {\n      switch (type) {\n         case DatastoreType.VSAN:\n            return VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.column.type.vsan\");\n         case DatastoreType.VSAN_DIRECT:\n            return VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.column.type.vsand\");\n         case DatastoreType.PMEM:\n            return VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.column.type.pmem\");\n         case DatastoreType.VMFS:\n            return VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.column.type.vmfs\");\n         case DatastoreType.NFS:\n            return VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.column.type.nfs3\");\n         case DatastoreType.NFS41:\n            return VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.column.type.nfs41\");\n         case DatastoreType.VVOL:\n            return VsanUiUtils.getString(\"cns.volumes.container.volume.migrate.dialog.table.column.type.vvol\");\n         default:\n            return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n   }\n}","<!--Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-delete-prompt\n      [title]=\"'cns.volumes.container.volume.delete.dialog.title' | localized\"\n      [(alertMessages)]=\"errors\"\n      [allowAlertClose]=\"false\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"loading || hasErrors\"\n      (onConfirm)=\"confirm()\">\n   <ng-container *ngIf=\"!hasErrors && !loading\">\n      <span>\n         {{\"cns.volumes.container.volume.delete.dialog.text\" | localized : volume.name}}\n      </span>\n      <span>\n         {{\"vsan.common.confirm.question\" | localized}}\n      </span>\n   </ng-container>\n</vsan-delete-prompt>\n","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {ContainerVolumePerfData} from \"@component/file-share-perf/container-volume-perf-data\";\nimport {FileSharePerfData} from \"@component/file-share-perf/file-share-perf-data\";\nimport {VolumePerfData} from \"@component/file-share-perf/volume-perf-data\";\nimport {UnavailableViewSpec} from \"@component/unavailable-view/unavailable-view-spec\";\nimport {VirtualObjectsTypeUtil} from \"@component/virtual-objects-table/virtual-objects-type.util\";\nimport {CnsService} from \"@generated/cns-service\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {DisplayObjectType} from \"@generated/display-object-type\";\nimport {LabelData} from \"@generated/label-data\";\nimport {PerfMonitorCommonPropsData} from \"@generated/perf-monitor-common-props-data\";\nimport {PerfVirtualMachineDiskData} from \"@generated/perf-virtual-machine-disk-data\";\nimport {PhysicalPlacementService} from \"@generated/physical-placement-service\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {VirtualObjectPlacementModel} from \"@generated/virtual-object-placement-model\";\nimport {Volume} from \"@generated/volume\";\nimport {VolumeDetails} from \"@generated/volume-details\";\nimport {VsanFileServiceShare} from \"@generated/vsan-file-service-share\";\nimport {VsanPerfPropertyProvider} from \"@generated/vsan-perf-property-provider\";\nimport {VirtualObjectsContext} from \"@navigation/context/virtual-objects-context\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {MapUtil} from \"@util/map-util\";\nimport {RaceConditionSafe} from \"@util/promise/race-condition-safe.decorator\";\nimport {VolumesUtil} from \"@util/volumes-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {NestedPerfEntity} from \"../../../performance/model/nested-perf-entity\";\nimport {PerfMultiEntitesDataQueryService} from \"../../../performance/util/perf-multi-entities-data-query.service\";\nimport {VolumesVmService} from \"../volumes-vm-service\";\n\n@Component({\n   templateUrl: \"volumes-view-details.html\",\n   styleUrls: [\"volumes-view-details.scss\"],\n   selector: \"cns-volumes-view-details\",\n})\n\n/**\n * The component is used to show details of a CNS volume(e.g., basic properties, attached VMs as well as metadata for\n * persistent volumes, persistent volume claims and pods) and for File volume\n */\n\nexport class VolumesViewDetails {\n\n   private static readonly EXTENSION_ID: string = \"appplatform.vmware.com/extension-id\";\n\n   private _volumeItem: Volume;\n   volumeData: VolumeData;\n\n   @Input()\n   set volumeItem(value: Volume) {\n      this._volumeItem = value;\n      this.resetVolumeData();\n      if (!this.volumeItem || VsanUiUtils.isEmpty(this.volumeItem.datastoreData)) {\n         return;\n      }\n      this.refresh();\n   }\n\n   get volumeItem(): Volume {\n      return this._volumeItem;\n   }\n\n   @Input()\n   storagePolicyName: string;\n\n   // Reset data for the current page (i.e., on reload, page change, filter change)\n   @Input()\n   set resetPageData(value: any) {\n      this.volumeIdToVolumeDetails = new Map();\n      this.volumeIdToPhysicalPlacement = new Map();\n   }\n\n   @Output()\n   onError: EventEmitter<string> = new EventEmitter<string>();\n\n   get unavailableViewSpec(): UnavailableViewSpec {\n      if (!VolumesUtil.isAttachedContainerVolume(this.volumeItem)) {\n         return UnavailableViewSpec.PERF_NOT_ATTACHED_BLOCK_VOLUME;\n      } else if (!VolumesUtil.isAssociatedVmAccessible(this.volumeItem)) {\n         return UnavailableViewSpec.PERF_NOT_VM_READ_PERMISSIONS;\n      }\n   }\n\n   @LoadingIndicator({\"name\": \"vm-data-loader\"})\n   vmDataLoading: boolean;\n\n   placementDetailsTabActive: boolean;\n   performanceTabActive: boolean;\n   clusterDetailsTabActive: boolean = true;\n   basicsTabActive: boolean;\n\n   private extensionId: string;\n   private volumeIdToVolumeDetails: Map<string, VolumeDetails> = new Map();\n   private volumeIdToPhysicalPlacement: Map<string, Map<string, VirtualObjectPlacementModel[]>> = new Map();\n\n   constructor(private navigationService: NavigationService,\n         private cnsService: CnsService,\n         private volumesVmService: VolumesVmService,\n         private physicalPlacementService: PhysicalPlacementService,\n         private perfProvider: VsanPerfPropertyProvider,\n         private perfMultiEntitiesDataQuery: PerfMultiEntitesDataQueryService) {\n      this.volumeData = new VolumeData();\n   }\n\n   @RefreshHandler\n   @Loader()\n   async refresh(): Promise<void> {\n      this.volumeData = await this.queryAllData(this.volumeItem);\n   }\n\n   // Reset data on volume selection change.\n   private resetVolumeData(): void {\n      this.volumeData.reset();\n   }\n\n   isPerformanceApplicable(volumeItem: Volume): boolean {\n      return VolumesUtil.isFileVolume(volumeItem) || VolumesUtil.isAssociatedVmAccessible(volumeItem);\n   }\n\n   getVirtualObjects(): VirtualObjectModel[] {\n      const virtualObjects: any[] = [];\n      if (!this.volumeItem || !this.volumeData?.placementData) {\n         return virtualObjects;\n      }\n      // VM Ref is not set as we don't want to show VM path\n      this.volumeData.placementData.forEach((placementData, uuid) => {\n         virtualObjects.push({\n            uid: uuid,\n            name: this.volumeItem.name,\n            iconId: this.volumeItem.iconId,\n            diskUuid: this.isVolumeOnVsanDirectDatastore(this.volumeItem)\n                  ? placementData[0].capacityDisk.nodeUuid\n                  : null,\n         });\n      });\n      return virtualObjects;\n   }\n\n   navigateToVirtualObjects(): void {\n      // if there is name, filter by it. Otherwise filter by calculated filter\n      const virtualObjectsContext: VirtualObjectsContext = {\n         presentVirtualObjectUuids: this.volumeData.volumeDetails.virtualObject.uuids,\n         filterTypes: this.getExtensionId()\n               ? [\n                  VirtualObjectsTypeUtil.getVirtualObjectTypeFilter(DisplayObjectType.EXTENSION_APP,\n                        this.getExtensionId()),\n               ]\n               : [\n                  VirtualObjectsTypeUtil.getVirtualObjectTypeFilter(this.volumeData.volumeDetails.virtualObject.filter),\n               ],\n      };\n      this.navigationService.navigateTo(\n            PlatformExtension.VIRTUAL_OBJECTS,\n            this.volumeData.volumeDetails.cluster,\n            virtualObjectsContext);\n   }\n\n   async queryVolumeDetails(volume: Volume): Promise<VolumeDetails> {\n      if (!this.canGetVirtualObjectsFromDatastore(volume)) {\n         return null;\n      }\n      this.extensionId = this.getExtensionId();\n\n      let volumeDetails: VolumeDetails = this.getVolumeDetails(volume);\n      if (volumeDetails) {\n         return volumeDetails;\n      }\n\n      // Generally, Volume.datastoreData field is an array because:\n      // 1) a single NFS folder can be added as a storage to hosts residing in different datacenters.\n      // 2) a volume backed by such NFS folder will refer to all such datastores on a VC level.\n      // Navigation to virtual objects, however, is available only for a vSAN datastores.\n      // Since a volume can be backed by a single vSAN datastore we pass only the first available item.\n      volumeDetails = await this.cnsService.getVolumeDetails(\n            volume.datastoreData[0].reference,\n            volume.id,\n            volume.fileshareName,\n            !!this.extensionId);\n      this.volumeIdToVolumeDetails.set(volume.id, volumeDetails);\n      return volumeDetails;\n\n   }\n\n   private getExtensionId(): string {\n      return this.getLabelByKey(VolumesViewDetails.EXTENSION_ID);\n   }\n\n   private getLabelByKey(labelKey: string): string {\n      let labels: LabelData[] = [];\n      if (!VsanUiUtils.isEmpty(this.volumeItem.labels)) {\n         labels = this.volumeItem.labels.filter(label => label.key === labelKey);\n      }\n      return (labels.length && labels[0].value)\n            ? labels[0].value\n            : null;\n   }\n\n   @RaceConditionSafe()\n   async queryAllData(volume: Volume): Promise<VolumeData> {\n      const volumeData: VolumeData = new VolumeData();\n      await this.queryVMData(volume);\n      volumeData.volumeDetails = await this.queryVolumeDetails(volume);\n      [volumeData.placementData, volumeData.performanceData] = await Promise.all([\n         this.queryPlacementData(volume, volumeData.volumeDetails),\n         this.queryPerformanceData(volume, volumeData.volumeDetails),\n      ]);\n      return volumeData;\n   }\n\n   @Loader({name: \"vm-data-loader\"})\n   private async queryVMData(volume: Volume): Promise<void> {\n      try {\n         await this.volumesVmService.getVMData(volume);\n      } catch (e) {\n         this.handleError(e);\n      }\n   }\n\n   @ErrorHandler()\n   private handleError(error: string): void {\n      this.onError.emit(error);\n   }\n\n   private async queryPlacementData(volumeItem: Volume,\n         volumeDetails: VolumeDetails): Promise<Map<string, VirtualObjectPlacementModel[]>> {\n      if (!this.canGetVirtualObjectsFromDatastore(volumeItem)) {\n         return null;\n      }\n\n      // Keep this as any type due to non-REPA code.\n      let physicalPlacement: any = this.getPhysicalPlacementData(volumeItem);\n      if (physicalPlacement) {\n         return physicalPlacement;\n      }\n      if (this.isVolumeOnVsanDatastore(volumeItem)) {\n         physicalPlacement = await this.physicalPlacementService.getVsanPhysicalPlacement(\n               volumeDetails.cluster, volumeDetails.virtualObject.uuids);\n      } else {\n         physicalPlacement = await this.physicalPlacementService.getVsanDirectPhysicalPlacement(\n               volumeDetails.cluster, [volumeItem.id]);\n      }\n      const volumePhysicalPlacement: Map<string, VirtualObjectPlacementModel[]> =\n            MapUtil.toMap<string, VirtualObjectPlacementModel[]>(physicalPlacement);\n      this.volumeIdToPhysicalPlacement.set(volumeItem.id, volumePhysicalPlacement);\n      return volumePhysicalPlacement;\n   }\n\n   async fetchDataAfterPerfEnabled(volumeItem: Volume, volumeDetails: VolumeDetails): Promise<void> {\n      if (this.volumeData) {\n         this.volumeData.performanceData = await this.queryPerformanceData(volumeItem, volumeDetails);\n      }\n   }\n\n   private async queryPerformanceData(volumeItem: Volume, volumeDetails: VolumeDetails): Promise<VolumePerfData> {\n      if (!this.isVolumeOnVsanDatastore(volumeItem) || !this.isPerformanceApplicable(volumeItem)) {\n         return null;\n      }\n      const commonPerfData: PerfMonitorCommonPropsData =\n            await this.queryCommonPerfData(volumeDetails.cluster);\n      return await this.getVolumePerfData(volumeItem, volumeDetails, commonPerfData);\n   }\n\n   private async getVolumePerfData(volumeItem: Volume, volumeDetails: VolumeDetails,\n         commonPerfData: PerfMonitorCommonPropsData): Promise<VolumePerfData> {\n      if (VolumesUtil.isFileVolume(volumeItem)) {\n         return this.getFileVolumePerfData(volumeItem, volumeDetails, commonPerfData);\n      } else if (VolumesUtil.isAttachedContainerVolume(volumeItem)) {\n         return await this.getBlockVolumePerfData(volumeItem, commonPerfData);\n      } else {\n         return null;\n      }\n   }\n\n   private async getBlockVolumePerfData(volumeItem: Volume, commonPerfData: PerfMonitorCommonPropsData):\n         Promise<VolumePerfData> {\n      const diskData: PerfVirtualMachineDiskData =\n            await this.getVirtualMachineDiskData(volumeItem.vmData[0].vmRef);\n      const disks: NestedPerfEntity[] = this.perfMultiEntitiesDataQuery.parseVirtualDisk(diskData, false);\n      const disk: NestedPerfEntity = disks.find(diskItem => diskItem.entityName.includes(volumeItem.name));\n      const containerVolumePerfData: ContainerVolumePerfData = new ContainerVolumePerfData(disk,\n            volumeItem.vmData[0].vmRef);\n      return new VolumePerfData(commonPerfData, null, containerVolumePerfData);\n   }\n\n   private async getVirtualMachineDiskData(vmRef: ManagedObject): Promise<PerfVirtualMachineDiskData> {\n      return await this.perfProvider.getVirtualMachineDiskData(vmRef, true);\n   }\n\n   private getFileVolumePerfData(volumeItem: Volume, volumeDetails: VolumeDetails,\n         commonPerfData: PerfMonitorCommonPropsData): VolumePerfData {\n      const fileShare: VsanFileServiceShare = {\n         config: {\n            name: volumeItem.fileshareName,\n            domainName: volumeDetails.fileShare.domainName,\n            protocol: volumeDetails.fileShare.protocol,\n         },\n      } as VsanFileServiceShare;\n      // Currently, only NFS file shares provisioned by vSAN file service will be supported.\n      // CNS may support non NFS, non vSAN file service based file shares in future.\n      const isSmbProtocolSupported: boolean = false;\n      const fileSharePerfData: FileSharePerfData = new FileSharePerfData(fileShare, isSmbProtocolSupported);\n      return new VolumePerfData(commonPerfData, fileSharePerfData);\n   }\n\n   private queryCommonPerfData(cluster: ManagedObject): Promise<PerfMonitorCommonPropsData> {\n      return this.perfProvider.getPerfMonitorCommonPropsData(cluster);\n   }\n\n   canGetVirtualObjectsFromDatastore(volume: Volume): boolean {\n      return this.isVolumeOnVsanDatastore(volume) || this.isVolumeOnVsanDirectDatastore(volume);\n   }\n\n   isVolumeOnVsanDatastore(volumeItem: Volume): boolean {\n      return volumeItem && volumeItem.datastoreType === DatastoreType.VSAN;\n   }\n\n   isVolumeOnVsanDirectDatastore(volumeItem: Volume): boolean {\n      return volumeItem && volumeItem.datastoreType === DatastoreType.VSAN_DIRECT;\n   }\n\n   private getVolumeDetails(volumeItem: Volume): VolumeDetails {\n      return this.volumeIdToVolumeDetails.get(volumeItem.id);\n   }\n\n   private getPhysicalPlacementData(volumeItem: Volume): Map<string, VirtualObjectPlacementModel[]> {\n      return this.volumeIdToPhysicalPlacement.get(volumeItem.id);\n   }\n}\n\nclass VolumeData {\n   volumeDetails: VolumeDetails;\n   placementData: Map<string, VirtualObjectPlacementModel[]>;\n   performanceData: VolumePerfData;\n\n   reset(): void {\n      this.volumeDetails = null;\n      this.placementData = null;\n      this.performanceData = null;\n   }\n}\n"],"sourceRoot":"webpack:///"}