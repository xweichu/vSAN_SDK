{"version":3,"sources":["./src/app/vsan/common/component/datetime-picker/datetime-picker.html","./src/app/vsan/common/component/datetime-picker/picker-type.ts","./src/app/vsan/common/component/datetime-picker/date-range-picker.component.ts","./src/app/vsan/common/component/datetime-picker/datetime-picker.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6GAGG,koBAGuD,4FAEvD,mDAHO,qGAAe,GAFtB,YAGuD,EADhD,SAAe,mDAFf,2HAAoC,GAA3C,+FAGuD,EAHhD,SAAoC,EAA3C,SAGuD,qDAEvD;6GAqBG,0JAAoE,gFAAgB,yDAA9E,2GAAoB,GAA1B,YAAoE,EAA9D,SAAoB,GAA0C,yDAAgB;;wRA7BP,0EACnF,MAA8B,0EAC9B,4JAA+B,kFAC5B,sZAGuD,IAE/C,6EACR,oLAAoE,qFACjE,6JAA+B,wFAC5B;YAAA;YAAA;YAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCAWoB;;YARb;;iCAAsB;;YAMtB;;iCAAsC;;YAT7C;QAAA,ulGAWoB,uFACpB,6XAGwE,GAD9D,wDAAqD,GACrD,wDAA6D,IAAC,mFACxE,MAAW,gFACd,MAAM,gFACN,uZAAoE,IAAuB,6EAC9F,MAAM,0EACT,MAAM,0EACN,MAA6B,0EAC7B,MAG6B,0EAC7B;YAAA;YAAA;YAAA;;;;;;;;;;;;;;gCAMqD;;YAFtC;;gCAAyC;;YACzC;;gCAAsC;;YALrD;QAAA,g+DAMqD,gFACrD,MAAgB,0EAChB,mDAzCU,mBAAa,QADpB,YAGuD,EAFhD,SAAa,GAWP,0EAAsB,GAMtB,oBAAW,MACX,oBAAW,MALX,oBAAyB,aANhC,aAWoB,EAPb,UAAsB,EAMtB,UAAW,EACX,UAAW,EALX,UAAyB,GAHzB,oBAAsB,WAH7B,aAWoB,EARb,UAAsB,GAFtB,sGAAc,GADrB,aAWoB,EAVb,UAAc,GAId,0EAA6B,GALpC,aAWoB,EANb,UAA6B,GAaQ,oBAAoB,eAAnE,aAAoE,EAArB,UAAoB,GAW1D,oBAAyB,aAGzB,mDAAqC,OAJrC,oBAAyB,aADzB,oBAAqB,WADpC,aAMqD,EAHtC,UAAyB,EAGzB,UAAqC,EAJrC,UAAyB,EADzB,UAAqB,mDA7BE,mBAAgC,eAAnE,YAAoE,EAAjC,SAAgC,GAStD,mBAA2B,cAC3B,qCAAwC,GAR/C,i0CAOO,SAA2B,EAC3B,SAAwC,EAR/C,4KAWoB,IAGV,oQAAqD,GACrD,sLAA6D,IAHvE,aAGwE,EAD9D,UAAqD,EACrD,UAA6D;AAAA;;;;;;;;;;;;;;;;;AC1BhF;AAAA;AAAA,6EAA6E;AAC7E;;EAEE;AACF,IAAY,UAIX,iBAJD,WAAY,UAAU;IACnB,6BAAe;IACf,mCAAqB;IACrB,2BAAa;WAHJ,UAAU;CAIrB,KAJqB,CAIrB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFAAkF;AACL;AACzC;AACQ;AACgB;AACM;AACvB;AAOpC,MAAM,wBAAwB;IALrC;QAMG,yBAAoB,GAAgC,oBAAoB,CAAC;QAGjE,YAAO,GAAY,IAAI,CAAC;QAMhC,eAAU,GAAe,iFAAU,CAAC,IAAI,CAAC;QAGzC,gBAAW,GAAgC,IAAI,0DAAY,CAAgB,IAAI,CAAC,CAAC;QAOzE,iBAAY,GAAW,CAAC,CAAC;QAwEjC,2BAAsB,GAAG,GAAG,EAAE;YAC3B,MAAM,SAAS,GAAS,IAAI,CAAC,eAAe,EAAE,CAAC;YAC/C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAC3D,CAAC,CAAC;QAEM,oBAAe,GAAG,GAAS,EAAE;YAClC,MAAM,SAAS,GAAS,IAAI,IAAI,EAAE,CAAC;YACnC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;YACjE,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACxB,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC7B,OAAO,SAAS,CAAC;QACpB,CAAC,CAAC;QAEM,kBAAa,GAAG,GAAS,EAAE;YAChC,OAAO,2EAAiB,CAAC,mBAAmB,EAAE,CAAC;QAClD,CAAC,CAAC;QAEM,oBAAe,GAAG,CAAC,SAAe,EAAE,OAAc,EAAiB,EAAE;YAC1E,IAAI,OAAe,CAAC;YACpB,IAAI,IAAI,CAAC,kBAAkB,KAAK,oBAAoB,CAAC,YAAY,IAAI,CAAC,OAAO,EAAE;gBAC5E,OAAO,GAAG,SAAS,CAAC,OAAO,EAAE,GAAG,2EAAiB,CAAC,mBAAmB,GAAG,IAAI,CAAC,WAAW,CAAC;aAC3F;iBAAM;gBACJ,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;aAC9B;YACD,OAAO,IAAI,aAAa,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;QAC1D,CAAC,CAAC;QAEM,iBAAY,GAAG,GAAG,EAAE;YACzB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAE7B,IAAI,IAAI,CAAC,kBAAkB,KAAK,oBAAoB,CAAC,YAAY,EAAE;gBAChE,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,GAAG,EAAE,EAAE;oBACjD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;oBAC5B,OAAO;iBACT;qBAAM;oBACJ,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;iBAC/B;aACH;iBAAM;gBACJ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBACjB,IAAI,CAAC,aAAa,GAAG,2DAAW,CAAC,SAAS,CAAC,qDAAqD,CAAC,CAAC;oBAClG,OAAO;iBACT;gBAED,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBACf,IAAI,CAAC,WAAW,GAAG,2DAAW,CAAC,SAAS,CAAC,mDAAmD,CAAC,CAAC;oBAC9F,OAAO;iBACT;gBAED,MAAM,WAAW,GAAW,2EAAiB,CAAC,mBAAmB,EAAE,CAAC,OAAO,EAAE,CAAC;gBAC9E,MAAM,SAAS,GAAW,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;gBAClD,MAAM,OAAO,GAAW,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;gBAC9C,IAAI,OAAO,GAAG,WAAW,GAAG,CAAC,EAAE;oBAC5B,yDAAyD;oBACzD,IAAI,CAAC,WAAW,GAAG,2DAAW,CAAC,SAAS,CAAC,6CAA6C,CAAC,CAAC;iBAC1F;qBAAM,IAAI,OAAO,GAAG,SAAS,IAAI,CAAC,EAAE;oBAClC,sDAAsD;oBACtD,IAAI,CAAC,aAAa,GAAG,2DAAW,CAAC,SAAS,CAAC,+CAA+C,CAAC,CAAC;iBAC9F;qBAAM,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,GAAG,2EAAiB,CAAC,mBAAmB,GAAG,EAAE,EAAE;oBAC5E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,GAAG,2DAAW,CAAC,SAAS,CAAC,uCAAuC,CAAC,CAAC;iBACzG;aACH;QACJ,CAAC,CAAC;QAEF,0BAAqB,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,kBAAkB,GAAG,oBAAoB,CAAC,YAAY,CAAC;QAC/D,CAAC,CAAC;QAEF,uBAAkB,GAAG,GAAG,EAAE;YACvB,IAAI,CAAC,kBAAkB,GAAG,oBAAoB,CAAC,YAAY,CAAC;QAC/D,CAAC,CAAC;QAMF,sBAAiB,GAAG,GAAG,EAAE;YACtB,IAAI,IAAI,CAAC,kBAAkB,KAAK,oBAAoB,CAAC,YAAY,EAAE;gBAChE,MAAM,SAAS,GAAS,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAChD,MAAM,OAAO,GAAS,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC5C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;aACnE;iBAAM,IAAI,IAAI,CAAC,kBAAkB,KAAK,oBAAoB,CAAC,YAAY,EAAE;gBACvE;;;mBAGG;gBACH,IAAI,CAAC,sBAAsB,EAAE,CAAC;aAChC;YAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAChD,CAAC,CAAC;IACL,CAAC;IAlKE,IAAI,WAAW;QACZ,OAAO,IAAI,CAAC,YAAY,CAAC;IAC5B,CAAC;IAED,IACI,WAAW,CAAC,KAAa;QAC1B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;IACvB,CAAC;IAKD,IAAI,QAAQ;QACT,OAAO,IAAI,CAAC,SAAS,CAAC;IACzB,CAAC;IAED,IAAI,QAAQ,CAAC,KAAW;QACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,YAAY,EAAE,CAAC;IACvB,CAAC;IAKD,IAAI,MAAM;QACP,OAAO,IAAI,CAAC,OAAO,CAAC;IACvB,CAAC;IAED,IAAI,MAAM,CAAC,KAAW;QACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,YAAY,EAAE,CAAC;IACvB,CAAC;IAID,IAAI,kBAAkB;QACnB,OAAO,IAAI,CAAC,mBAAmB,CAAC;IACnC,CAAC;IAED,IAAI,kBAAkB,CAAC,KAA2B;QAC/C,IAAI,IAAI,CAAC,mBAAmB,KAAK,KAAK,EAAE;YACrC,OAAO;SACT;QAED,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,QAAQ,KAAK,EAAE;YACZ,KAAK,oBAAoB,CAAC,YAAY;gBACnC,IAAI,CAAC,iBAAiB,GAAG,2DAAW,CAAC,SAAS,CAAC,mCAAmC,CAAC,CAAC;gBACpF,MAAM;YACT,KAAK,oBAAoB,CAAC,YAAY;gBACnC,IAAI,CAAC,iBAAiB,GAAG,2DAAW,CAAC,SAAS,CAAC,qCAAqC,CAAC,CAAC;gBACtF,MAAM;YACT;gBACG,mDAAM,CAAC,KAAK,CAAC,gCAAgC,GAAG,KAAK,CAAC,CAAC;SAC5D;QAED,IAAI,CAAC,YAAY,EAAE,CAAC;IACvB,CAAC;IAED,QAAQ;QACL,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,kBAAkB,GAAG,oBAAoB,CAAC,YAAY,CAAC;SAC9D;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACvC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACnC,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAChD,CAAC;IA2ED,IAAI,cAAc;QACf,OAAO,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,eAAe,CAAC;IAC9F,CAAC;CAiBH;AAED;;GAEG;AACH,IAAY,oBAGX,iBAHD,WAAY,oBAAoB;IAC7B,+EAAY;IACZ,+EAAY;WAFH,oBAAoB;CAG/B,KAH+B,CAG/B;AAEM,MAAM,aAAa;IACvB,YAAmB,IAAY,EAAS,EAAU;QAA/B,SAAI,GAAJ,IAAI,CAAQ;QAAS,OAAE,GAAF,EAAE,CAAQ;QAC/C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IAChB,CAAC;IAED,eAAe;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,2EAAiB,CAAC,mBAAmB,CAAC,CAAC;IACnF,CAAC;IAED,mBAAmB;QAChB,MAAM,KAAK,GAAU,IAAI,IAAI,EAAE,CAAC;QAChC,OAAO,2EAAiB,CAAC,eAAe,CAAC,KAAK,EAAE,0DAAU,CAAC,QAAQ,CAAC;YAC9D,2EAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,EAAE,0DAAU,CAAC,QAAQ,CAAC,CAAC;IACzE,CAAC;CACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9ND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFAAkF;AACM;AAC5C;AAEyC;AACjD;AAC8B;AAO3D,MAAM,uBAAuB;IAgFjC,YAAY,eAAqC;QA1EjD,eAAU,GAAuB,kBAAkB,CAAC,MAAM,CAAC;QAkB3D,eAAU,GAAe,iFAAU,CAAC,IAAI,CAAC;QAGzC,eAAU,GAAW,CAAC,CAAC;QA6CvB;;WAEG;QAEH,mBAAc,GAAuC,IAAI,0DAAY,EAAwB,CAAC;QAEtF,WAAM,GAAY,KAAK,CAAC;QAG7B,4BAA4B;QAC5B,eAAe,CAAC,SAAS,CAAC,2DAAW,CAAC,mBAAmB,EAAE,CAAC,CAAC;IAChE,CAAC;IA9CD,IACI,QAAQ,CAAC,GAAkC;QAC5C,uBAAuB;QACvB,IAAI,IAAI,CAAC,UAAU,KAAK,kBAAkB,CAAC,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,YAAY,IAAI,CAAC,EAAE;YACjF,mDAAM,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;YAC5C,OAAO;SACT;QACD,IAAI,IAAI,CAAC,UAAU,KAAK,kBAAkB,CAAC,KAAK,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,YAAY,oGAAa,CAAC;YACpF,CAAC,CAAC,GAAG,YAAY,KAAK,CAAC,EAAE;YAC5B,mDAAM,CAAC,KAAK,CAAC,oDAAoD,CAAC,CAAC;YACnE,OAAO;SACT;QAED,IAAI,GAAG,KAAK,IAAI,CAAC,aAAa,EAAE;YAC7B,OAAO;SACT;QACD,IAAI,CAAC,GAAG,EAAE;YACP,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC5B;QACD,IAAI,GAAG,YAAY,oGAAa,EAAE;YAC/B,GAAG,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;SAC/C;QAED,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QACzB,IAAI,GAAG,YAAY,KAAK,EAAE;YACvB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC;SAC1D;aAAM;YACJ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAChC;IACJ,CAAC;IAED,IAAI,QAAQ;QACT,OAAO,IAAI,CAAC,aAAa,CAAC;IAC7B,CAAC;IAeD,QAAQ;QACL,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,IAAI,CAAC,UAAU,KAAK,iFAAU,CAAC,KAAK,EAAE;gBACvC,IAAI,CAAC,WAAW,GAAG,2DAAW,CAAC,SAAS,CAAC,yBAAyB,CAAC,CAAC;aACtE;iBAAM;gBACJ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,KAAK,kBAAkB,CAAC,MAAM,CAAC,CAAC;oBAC5D,2DAAW,CAAC,SAAS,CAAC,gCAAgC,CAAC,CAAC,CAAC;oBACzD,2DAAW,CAAC,SAAS,CAAC,+BAA+B,CAAC,CAAC;aAC/D;SACH;IACJ,CAAC;IAEO,mBAAmB,CAAC,KAAa;QACtC,MAAM,IAAI,GAAW,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACzF,MAAM,EAAE,GAAW,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACvF,OAAO,IAAI,oGAAa,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IACtC,CAAC;IAED;;OAEG;IACH,OAAO,CAAC,MAAmB;QACxB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACf,MAAM,CAAC,KAAK,EAAE,CAAC;SACjB;IACJ,CAAC;IAED;;;OAGG;IACH,YAAY,CAAC,MAAe;QACzB,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,EAAE,GAAG,CAAC,CAAC;IAC/C,CAAC;CACH;AAED;;GAEG;AACH,IAAY,kBAIX,iBAJD,WAAY,kBAAkB;IAC3B,qEAAqE;IACrE,uCAAiB;IACjB,qCAAe;WAHN,kBAAkB;CAI7B,KAJ6B,CAI7B","file":"18-es2015.js","sourcesContent":["<!--Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<!-- Label and input filed -->\n<div class=\"horizontal-layout\">\n   <label id=\"datetime-picker-label-{{label}}\"\n          *ngIf=\"label\"\n          for=\"{{label}}\"\n          class=\"clr-control-label datetime-picker-label\">\n      {{label}}\n   </label>\n   <div class=\"clr-control-container\" [class.clr-error]=\"errorMessage\">\n      <div class=\"clr-input-wrapper\">\n         <input clrInput\n                id=\"{{label}}\"\n                ngDefaultControl\n                [(ngModel)]=\"datetime\"\n                [owlDateTime]=\"picker\"\n                [owlDateTimeTrigger]=\"picker\"\n                [selectMode]=\"selectMode\"\n                [placeholder]=\"placeholder\"\n                [attr.aria-describedby]=\"label+'-error'\"\n                (keyup.enter)=\"onEnter($event.target)\"\n                [min]=\"min\"\n                [max]=\"max\"/>\n         <clr-icon class=\"clr-validate-icon\"\n                   shape=\"exclamation-circle\"\n                   title=\"{{'vsan.common.srMessage.error' | localized}}\"\n                   [attr.aria-label]=\"'vsan.common.srMessage.error' | localized\">\n         </clr-icon>\n      </div>\n      <span id=\"{{label}}-error\" class=\"clr-subtext\" *ngIf=\"errorMessage\">{{errorMessage}}</span>\n   </div>\n</div>\n<!-- Data and time picker -->\n<!-- Setting the startAt is needed because of an issue in the owl-date-time component. Initially if no datetime has been\nspecified and the component is opened the visualized time is the max time. But when the component and closed(with OK)\nwithout any change, it doesn't set the shown date(which was the max time) but sets the current time, which could be\nbigger than the max time. -->\n<owl-date-time #picker ngDefaultControl\n               [disabled]=\"disabled\"\n               [pickerType]=\"pickerType\"\n               [stepMinute]=\"stepMinute\"\n               (afterPickerClosed)=\"togglePicker(false)\"\n               (afterPickerOpen)=\"togglePicker(true)\"\n               [startAt]=\"datetime ? datetime : max\">\n</owl-date-time>\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\n/**\n* Available date time picker types.\n*/\nexport enum PickerType {\n   TIMER = \"timer\",\n   CALENDAR = \"calendar\",\n   BOTH = \"both\",\n}","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {Logger} from \"@util/logger\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\nimport {PickerType} from \"@component/datetime-picker/picker-type\";\nimport {DateFormat} from \"@util/date-time\";\n\n@Component({\n   selector: \"vsan-date-range-picker\",\n   templateUrl: \"date-range-picker.html\",\n   styleUrls: [\"date-range-picker.scss\"],\n})\nexport class DateRangePickerComponent implements OnInit {\n   DateRangePickerState: typeof DateRangePickerState = DateRangePickerState;\n\n   @Input()\n   private enabled: boolean = true;\n\n   @Input()\n   signpostContent: string;\n\n   @Input()\n   pickerType: PickerType = PickerType.BOTH;\n\n   @Output()\n   changeRange: EventEmitter<DateRangeData> = new EventEmitter<DateRangeData>(true);\n\n   currentStateLabel: string;\n   currentDateRange: DateRangeData;\n\n   invalidInterval: boolean;\n\n   private _dayInterval: number = 1;\n\n   get dayInterval(): number {\n      return this._dayInterval;\n   }\n\n   @Input()\n   set dayInterval(value: number) {\n      this._dayInterval = value;\n      this.validateDate();\n   }\n\n   fromDateError: string;\n   private _fromDate: Date;\n\n   get fromDate(): Date {\n      return this._fromDate;\n   }\n\n   set fromDate(value: Date) {\n      this._fromDate = value;\n      this.validateDate();\n   }\n\n   toDateError: string;\n   private _toDate: Date;\n\n   get toDate(): Date {\n      return this._toDate;\n   }\n\n   set toDate(value: Date) {\n      this._toDate = value;\n      this.validateDate();\n   }\n\n   private _currentPickerState: DateRangePickerState;\n\n   get currentPickerState(): DateRangePickerState {\n      return this._currentPickerState;\n   }\n\n   set currentPickerState(value: DateRangePickerState) {\n      if (this._currentPickerState === value) {\n         return;\n      }\n\n      this._currentPickerState = value;\n      switch (value) {\n         case DateRangePickerState.LAST_X_HOURS:\n            this.currentStateLabel = VsanUiUtils.getString(\"vsan.date.range.picker.last.label\");\n            break;\n         case DateRangePickerState.CUSTOM_RANGE:\n            this.currentStateLabel = VsanUiUtils.getString(\"vsan.date.range.picker.custom.label\");\n            break;\n         default:\n            Logger.error(\"Unknown DateRangePickerState: \" + value);\n      }\n\n      this.validateDate();\n   }\n\n   ngOnInit(): void {\n      if (!this.currentPickerState) {\n         this.currentPickerState = DateRangePickerState.LAST_X_HOURS;\n      }\n      this.fromDate = this.createStartDate();\n      this.toDate = this.createEndDate();\n      this.updateCurrentDateRange();\n      this.changeRange.emit(this.currentDateRange);\n   }\n\n   updateCurrentDateRange = () => {\n      const startTime: Date = this.createStartDate();\n      this.currentDateRange = this.createDateRange(startTime);\n   };\n\n   private createStartDate = (): Date => {\n      const startTime: Date = new Date();\n      startTime.setHours(startTime.getHours() - this.dayInterval * 24);\n      startTime.setSeconds(0);\n      startTime.setMilliseconds(0);\n      return startTime;\n   };\n\n   private createEndDate = (): Date => {\n      return VsanDateTimeUtils.createNoSecondsDate();\n   };\n\n   private createDateRange = (startTime: Date, endTime?: Date): DateRangeData => {\n      let endDate: number;\n      if (this.currentPickerState === DateRangePickerState.LAST_X_HOURS || !endTime) {\n         endDate = startTime.getTime() + VsanDateTimeUtils.DAY_IN_MILLISECONDS * this.dayInterval;\n      } else {\n         endDate = endTime.getTime();\n      }\n      return new DateRangeData(startTime.getTime(), endDate);\n   };\n\n   private validateDate = () => {\n      this.fromDateError = \"\";\n      this.toDateError = \"\";\n      this.invalidInterval = false;\n\n      if (this.currentPickerState === DateRangePickerState.LAST_X_HOURS) {\n         if (this.dayInterval <= 0 || this.dayInterval > 30) {\n            this.invalidInterval = true;\n            return;\n         } else {\n            this.invalidInterval = false;\n         }\n      } else {\n         if (!this.fromDate) {\n            this.fromDateError = VsanUiUtils.getString(\"vsan.date.range.picker.custom.startTime.empty.error\");\n            return;\n         }\n\n         if (!this.toDate) {\n            this.toDateError = VsanUiUtils.getString(\"vsan.date.range.picker.custom.endTime.empty.error\");\n            return;\n         }\n\n         const currentTime: number = VsanDateTimeUtils.createNoSecondsDate().getTime();\n         const startTime: number = this.fromDate.getTime();\n         const endTime: number = this.toDate.getTime();\n         if (endTime - currentTime > 0) {\n            // The end time can not be greater than the current time.\n            this.toDateError = VsanUiUtils.getString(\"vsan.date.range.picker.custom.endTime.error\");\n         } else if (endTime - startTime <= 0) {\n            // The end time should be greater than the start time.\n            this.fromDateError = VsanUiUtils.getString(\"vsan.date.range.picker.custom.startTime.error\");\n         } else if ((endTime - startTime) / VsanDateTimeUtils.DAY_IN_MILLISECONDS > 30) {\n            this.fromDateError = this.toDateError = VsanUiUtils.getString(\"vsan.date.range.picker.interval.error\");\n         }\n      }\n   };\n\n   onRangeLastXDaysClick = () => {\n      this.currentPickerState = DateRangePickerState.LAST_X_HOURS;\n   };\n\n   onRangeCustomClick = () => {\n      this.currentPickerState = DateRangePickerState.CUSTOM_RANGE;\n   };\n\n   get disableRefresh(): boolean {\n      return !this.enabled || !!this.fromDateError || !!this.toDateError || this.invalidInterval;\n   }\n\n   onRefreshBtnClick = () => {\n      if (this.currentPickerState === DateRangePickerState.CUSTOM_RANGE) {\n         const startTime: Date = new Date(this.fromDate);\n         const endTime: Date = new Date(this.toDate);\n         this.currentDateRange = this.createDateRange(startTime, endTime);\n      } else if (this.currentPickerState === DateRangePickerState.LAST_X_HOURS) {\n         /**\n          * have to reset the current time range because the time range is not correct\n          * if user clicks the query button 30 minutes later after the page opened.\n          */\n         this.updateCurrentDateRange();\n      }\n\n      this.changeRange.emit(this.currentDateRange);\n   };\n}\n\n/**\n * date range picker states enum to indicate what option is selected\n */\nexport enum DateRangePickerState {\n   LAST_X_HOURS,\n   CUSTOM_RANGE,\n}\n\nexport class DateRangeData {\n   constructor(public from: number, public to: number) {\n      this.from = from;\n      this.to = to;\n   }\n\n   getNumberOfDays(): number {\n      return Math.ceil((this.to - this.from) / VsanDateTimeUtils.DAY_IN_MILLISECONDS);\n   }\n\n   isStartingFromToday(): boolean {\n      const today: Date =  new Date();\n      return VsanDateTimeUtils.applyFormatting(today, DateFormat.DAY_ONLY) ===\n            VsanDateTimeUtils.applyFormatting(this.to, DateFormat.DAY_ONLY);\n   }\n}\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnInit, Output, ViewChild} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {DateTimeAdapter, OwlDateTimeComponent} from \"ng-pick-datetime\";\nimport {DateRangeData} from \"@component/datetime-picker/date-range-picker.component\";\nimport {Logger} from \"@util/logger\";\nimport {PickerType} from \"@component/datetime-picker/picker-type\";\n\n@Component({\n   selector: 'vsan-datetime-picker',\n   styleUrls: ['datetime-picker.scss'],\n   templateUrl: 'datetime-picker.html',\n})\nexport class DatetimePickerComponent implements OnInit {\n\n   @ViewChild(\"picker\")\n   picker: OwlDateTimeComponent<any>;\n\n   @Input()\n   selectMode: DateTimeSelectMode = DateTimeSelectMode.SINGLE;\n\n   /**\n    * Optional label to display in front of the datetime picker input field\n    */\n   @Input()\n   label: string;\n\n   @Input()\n   disabled: boolean;\n\n   @Input()\n   placeholder: string;\n\n   @Input()\n   errorMessage: string;\n\n   @Input()\n   pickerType: PickerType = PickerType.BOTH;\n\n   @Input()\n   stepMinute: number = 1;\n\n   private datetimeValue: Date | Date[];\n\n   @Input()\n   min: Date;\n\n   @Input()\n   max: Date;\n\n   @Input()\n   set datetime(val: Date | Date[] | DateRangeData) {\n      // validate input value\n      if (this.selectMode === DateTimeSelectMode.SINGLE && val && !(val instanceof Date)) {\n         Logger.error(\"Expected input of type date\");\n         return;\n      }\n      if (this.selectMode === DateTimeSelectMode.RANGE && val && !(val instanceof DateRangeData) &&\n            !(val instanceof Array)) {\n         Logger.error(\"Expected input of type date array or DateRangeData\");\n         return;\n      }\n\n      if (val === this.datetimeValue) {\n         return;\n      }\n      if (!val) {\n         this.datetimeValue = null;\n      }\n      if (val instanceof DateRangeData) {\n         val = [new Date(val.from), new Date(val.to)];\n      }\n\n      this.datetimeValue = val;\n      if (val instanceof Array) {\n         this.datetimeChange.emit(this.createDateRangeData(val));\n      } else {\n         this.datetimeChange.emit(val);\n      }\n   }\n\n   get datetime(): Date | Date[] | DateRangeData {\n      return this.datetimeValue;\n   }\n\n   /**\n    * Triggered when new datetime is picked by the user\n    */\n   @Output()\n   datetimeChange: EventEmitter<Date | DateRangeData> = new EventEmitter<Date | DateRangeData>();\n\n   private isOpen: boolean = false;\n\n   constructor(dateTimeAdapter: DateTimeAdapter<any>) {\n      // Set time picker language.\n      dateTimeAdapter.setLocale(VsanUiUtils.getLocaleForDecimal());\n   }\n\n   ngOnInit(): void {\n      if (!this.placeholder) {\n         if (this.pickerType === PickerType.TIMER) {\n            this.placeholder = VsanUiUtils.getString(\"vsan.common.time.format\");\n         } else {\n            this.placeholder = this.selectMode === DateTimeSelectMode.SINGLE ?\n                  VsanUiUtils.getString(\"vsan.common.custom.date.format\") :\n                  VsanUiUtils.getString(\"vsan.common.range.date.format\");\n         }\n      }\n   }\n\n   private createDateRangeData(dates: Date[]): DateRangeData {\n      const from: number = (dates && dates.length > 0 && dates[0]) ? dates[0].getTime() : null;\n      const to: number = (dates && dates.length > 1 && dates[1]) ? dates[1].getTime() : null;\n      return new DateRangeData(from, to);\n   }\n\n   /**\n    * Open datetime picker when enter key is pressed on the input\n    */\n   onEnter(target: HTMLElement): void {\n      if (!this.isOpen) {\n         target.click();\n      }\n   }\n\n   /**\n    * Picker events for open/close are triggered before handling enter key. We need to delay setting\n    * the related isOpened variable in order to properly handle it in enter event.\n    */\n   togglePicker(isOpen: boolean): void {\n      setTimeout(() => this.isOpen = isOpen, 300);\n   }\n}\n\n/**\n * Available date time picker modes\n */\nexport enum DateTimeSelectMode {\n   // ref https://daniel-projects.firebaseapp.com/owlng/date-time-picker\n   SINGLE = \"single\",\n   RANGE = \"range\",\n}"],"sourceRoot":"webpack:///"}