{"version":3,"sources":["webpack:///src/app/vsan/cluster/configure/action/disable-vsan/turn-off-vsan.component.ts","webpack:///src/app/vsan/cluster/configure/action/disable-vsan/turn-off-vsan.html","webpack:///src/app/vsan/cluster/configure/action/disable-vsan/turn-off-vsan.module.ts","webpack:///src/app/vsan/common/service/status-updates/vsan-status-change.data.ts"],"names":["TurnOffVsanComponent","configureVsanClusterMutationProvider","csdService","vsanStatusService","alertMessages","loading","actionDisabled","canProceed","clusterName","getModalContext","isComputeOnlyCluster","loadCsdData","clusterRef","contextObject","isCsdSupported","Promise","all","getMountedDatastores","then","res","filter","ds","isLocal","map","shareableDatastore","serverCluster","getClientClusters","serverClusters","clientClusters","isEmpty","push","getString","cls","name","join","handleError","turnOffVsan","taskRef","storeChange","VSAN_SERVICE_DISABLED","closeModalDialog","error","routes","path","component","TurnOffVsanModule","VsanStatusChangeData","status","changeType","StatusChangeType"],"mappings":"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","file":"142-es5.js","sourcesContent":["/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ConfigureVsanClusterMutationProvider} from \"@generated/configure-vsan-cluster-mutation-provider\";\nimport {CsdService} from \"@generated/csd-service\";\nimport {InventoryNode} from \"@generated/inventory-node\";\nimport {VsanStatusService} from \"@service/status-updates/vsan-status.service\";\nimport {StatusChangeType, VsanStatusChangeData} from \"@service/status-updates/vsan-status-change.data\";\n\n@Component({\n   templateUrl: \"turn-off-vsan.html\",\n   selector: \"vsan-disable-dialog\",\n})\nexport class TurnOffVsanComponent implements OnInit {\n\n   alertMessages: string[] = [];\n   loading: boolean = false;\n   actionDisabled: boolean = false;\n   clusterName: string;\n   isComputeOnlyCluster: boolean;\n   serverClusters: InventoryNode[];\n   clientClusters: InventoryNode[];\n\n   constructor(\n         private configureVsanClusterMutationProvider: ConfigureVsanClusterMutationProvider,\n         private csdService: CsdService,\n         private vsanStatusService: VsanStatusService) {\n   }\n\n   ngOnInit(): void {\n      this.clusterName = VsanUiUtils.getModalContext().clusterName;\n      this.isComputeOnlyCluster = VsanUiUtils.getModalContext().isComputeOnlyCluster || false;\n      this.loadCsdData();\n   }\n\n   async loadCsdData(): Promise<void> {\n      const clusterRef: ManagedObject = ManagedObject.contextObject;\n      this.loading = true;\n      try {\n         if (await this.csdService.isCsdSupported(clusterRef)) {\n            [this.serverClusters, this.clientClusters] = await Promise.all([\n               this.csdService.getMountedDatastores(clusterRef)\n                     .then(res => res.filter(ds => !ds.isLocal).map(ds => ds.shareableDatastore.serverCluster)),\n               this.csdService.getClientClusters(clusterRef),\n            ]);\n\n            if (!VsanUiUtils.isEmpty(this.serverClusters)) {\n               this.alertMessages.push(VsanUiUtils.getString(\"vsan.generalConfig.disableVsan.error.mountsClusters\",\n                     this.serverClusters.map(cls => cls.name).join(\", \")));\n               this.actionDisabled = true;\n            }\n            if (!VsanUiUtils.isEmpty(this.clientClusters)) {\n               this.alertMessages.push(\n                     VsanUiUtils.getString(\"vsan.generalConfig.disableVsan.error.exportsToClusters\",\n                     this.clientClusters.map(cls => cls.name).join(\", \")));\n               this.actionDisabled = true;\n            }\n         }\n      } catch (e) {\n         this.handleError(e);\n      } finally {\n         this.loading = false;\n      }\n   }\n\n   canProceed = () => !this.actionDisabled && !this.loading;\n\n   async apply(): Promise<void> {\n      this.loading = true;\n      try {\n         const taskRef: ManagedObject = await this.configureVsanClusterMutationProvider\n               .turnOffVsan(ManagedObject.contextObject);\n         this.vsanStatusService.storeChange(\n               new VsanStatusChangeData(taskRef, StatusChangeType.VSAN_SERVICE_DISABLED));\n         VsanUiUtils.closeModalDialog(taskRef);\n      } catch (e) {\n         this.handleError(e);\n      }\n   }\n\n   handleError(error: any): void {\n      this.loading = false;\n      this.alertMessages = [error];\n   }\n}\n","<!--Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-delete-prompt\n      [title]=\"'vsan.generalConfig.disableVsan.warning.title' | localized\"\n      [subtitle]=\"clusterName\"\n      [confirmText]=\"'vsan.generalConfig.disableVsan.turn.off' | localized\"\n      [blockButton]=\"!canProceed()\"\n      [allowAlertClose]=\"!actionDisabled\"\n      [(alertMessages)]=\"alertMessages\"\n      (onConfirm)=\"apply()\">\n   <div *ngIf=\"canProceed()\" class=\"dialog-container\">\n      <div id=\"information\">\n         <ng-container *ngIf=\"!isComputeOnlyCluster\">\n            {{\"vsan.generalConfig.disableVsan.warning\" | localized}}\n         </ng-container>\n         <ng-container *ngIf=\"isComputeOnlyCluster\">\n            {{\"vsan.generalConfig.disableVsan.warning.computeOnly\" | localized}}\n         </ng-container>\n      </div>\n\n      <div id=\"confirmation\">\n         {{\"vsan.generalConfig.disableVsan.confirmation\" | localized : clusterName}}\n      </div>\n   </div>\n</vsan-delete-prompt>\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {TurnOffVsanComponent} from \"./turn-off-vsan.component\";\n\nconst routes: Routes = [\n   {\n      path: \"\",\n      component: TurnOffVsanComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      CommonPipeModule,\n      PromptModule,\n      RouterModule.forChild(routes),\n   ],\n   declarations: [\n      TurnOffVsanComponent,\n   ],\n})\nexport class TurnOffVsanModule {\n\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ManagedObject} from \"@service/managed-object\";\nimport {TaskStatus} from \"@service/task-monitor-service\";\n\n/**\n * Holds info for a status change initiated by the current user on the vSAN cluster.\n * This data is stored in the Browser local storage, check <code>VsanStatusService</code>\n * and is accessible across iframes.\n */\nexport class VsanStatusChangeData {\n\n   /**\n    * A cluster managed object reference associated with this status change\n    */\n   clusterRef: ManagedObject;\n\n   /**\n    * A task moref, that is changing the status of the vSAN cluster.\n    */\n   taskRef: ManagedObject;\n\n   /**\n    * Enum value, holding information about what status change is happening with the vSAN cluster exactly.\n    */\n   changeType: StatusChangeType;\n\n   /**\n    * Upon completion of the task will hold either SUCCESS or ERROR, which could be used by subscribers.\n    */\n   taskStatus: TaskStatus;\n\n   constructor(taskRef: ManagedObject, status: StatusChangeType,\n         clusterRef: ManagedObject = ManagedObject.contextObject) {\n      this.taskRef = taskRef;\n      this.changeType = status;\n      this.clusterRef = clusterRef;\n   }\n}\n\n/**\n * Enum with codes, used to differentiate different vSAN configuration events like\n * vSAN enabled, cluster shutdown, etc.\n */\nexport enum StatusChangeType {\n   /**\n    * A cluster has had the vSAN service enabled.\n    */\n   VSAN_SERVICE_ENABLED,\n   /**\n    * A cluster has had the vSAN service disabled.\n    */\n   VSAN_SERVICE_DISABLED,\n   /**\n    * A vSAN cluster has been powered on.\n    */\n   VSAN_CLUSTER_POWER_ON,\n   /**\n    * A vSAN cluster has been shut down.\n    */\n   VSAN_CLUSTER_POWER_OFF,\n}"]}