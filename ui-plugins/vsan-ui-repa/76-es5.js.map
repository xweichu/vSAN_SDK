{"version":3,"sources":["webpack:///src/app/vsan/common/component/configurations/fault-domain-config.html","webpack:///src/app/vsan/common/component/configurations/fault-domain-card.component.ts","webpack:///src/app/vsan/common/component/configurations/fault-domain-consumption.component.ts","webpack:///src/app/vsan/common/component/configurations/fault-domain-config.component.ts","webpack:///src/app/vsan/common/component/configurations/standalone-host-card.html","webpack:///src/app/vsan/common/component/configurations/fault-domain-consumption.html","webpack:///src/app/vsan/common/event/fault-domain.event.ts","webpack:///src/app/vsan/common/component/configurations/standalone-host-card.component.ts","webpack:///src/app/vsan/common/component/configurations/fault-domain-card.html"],"names":["FaultDomainCardComponent","Icon","onActionEvent","model","hosts","filter","host","isSelected","SELECTED","getDomainConsumption","totalBytes","event","isConnected","UNSELECTED","data","connectionState","connected","dragData","affected","selection","indexOf","push","length","forEach","affectedHost","isDragging","evt","targetDomain","uid","emit","getDomainConsumptionData","storageConsumption","isVsanMaxEnabled","getString","FaultDomainConsumptionComponent","highchartsThemeService","hasLabel","sectionsData","updateData","consumption","usedBytes","getTooltipData","themeChangedSubscribtion","whenThemeChanged","subscribe","theme","unsubscribe","result","Map","set","formatFileSize","reservedBytes","freeBytes","FaultDomainConfigComponent","navigationService","displayConfigureButtons","hasEditPermission","disableCfgStretchedClusterBtn","disableChangeWitnessHostBtnReason","disableReason","hostRef","isSharedWitnessAllowed","navigateTo","HOST_SHARED_WITNESS_CLUSTERS_LIST","LAST_VISITED_PAGE","FaultDomainEvent","CreateDomainEvent","EditDomainEvent","DeleteDomainEvent","MoveHostsEvent","PromoteDomainEvent","ConfigureStretchedClusterEvent","DisabledStretchedClusterEvent","ChangeWitnessHostEvent","StandaloneHostCardComponent","dropTargets"],"mappings":"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","file":"76-es5.js","sourcesContent":["<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"stack-view\">\n   <!-- Fault tolerance row -->\n   <div class=\"stack-block\">\n      <div class=\"stack-block-label\">\n         <div class=\"stack-view-key\">\n            {{\"vsan.cluster.configure.wizard.faultDomains.faultTolerance\" | localized}}\n         </div>\n         <div class=\"stack-block-content\">\n            <span [innerHTML]=\"faultToleranceInfo\"></span>\n         </div>\n      </div>\n   </div>\n   <!-- Config type -->\n   <div class=\"stack-block\">\n      <div class=\"stack-block-label\">\n         <div class=\"stack-view-key\">\n            {{\"vsan.cluster.configure.wizard.faultDomains.configType\" | localized}}\n         </div>\n         <div class=\"stack-block-content\">\n            <ng-container *ngIf=\"witnessInfos?.length\">\n               <ng-container *ngIf=\"isStretchedCluster\">\n                  {{\"vsan.cluster.configure.wizard.faultDomains.configType.stretchedCluster\" | localized}}\n                  <button id=\"disable-stretched-cluster-button\"\n                          *ngIf=\"displayConfigureButtons\"\n                          [disabled]=\"!hasEditPermission || disableCfgStretchedClusterBtn\"\n                          title=\"{{configureStretchedClusterBtnTitle}}\"\n                          class=\"btn btn-link btn-sm btn-action\"\n                          (click)=\"onDisableStretchedCluster()\">\n                     {{\"vsan.faultDomains.action.disable.tooltip\" | localized}}\n                  </button>\n               </ng-container>\n               <ng-container *ngIf=\"!isStretchedCluster\">\n                  {{\"vsan.cluster.configure.wizard.faultDomains.configType.extendedCluster\" | localized}}\n               </ng-container>\n            </ng-container>\n            <ng-container *ngIf=\"!witnessInfos?.length\">\n               {{\"vsan.cluster.configure.wizard.faultDomains.configType.singleSite\" | localized}}\n               <button id=\"configure-stretched-cluster-button\"\n                       *ngIf=\"displayConfigureButtons\"\n                       [disabled]=\"!hasEditPermission || disableCfgStretchedClusterBtn\"\n                       title=\"{{configureStretchedClusterBtnTitle}}\"\n                       class=\"btn btn-link btn-sm btn-action\"\n                       (click)=\"onConfigureStretchedCluster()\">\n                  {{\"vsan.faultDomains.action.configure.tooltip\" | localized}}\n               </button>\n            </ng-container>\n         </div>\n      </div>\n   </div>\n   <!-- Witness host row -->\n   <div class=\"stack-block\" *ngIf=\"witnessInfos?.length\">\n      <!-- Stretched cluster configuration. -->\n      <div *ngIf=\"isStretchedCluster\" class=\"stack-block-label\">\n         <div class=\"stack-view-key\">\n            {{\"vsan.cluster.configure.wizard.faultDomains.witnessHost\" | localized}}\n         </div>\n         <div class=\"stack-block-content\">\n            <a href=\"javascript://\"\n               *ngIf=\"!witnessInfos[0].isOutOfInventory\"\n               (click)=\"navigateToHost(witnessInfos[0].witnessHost)\">\n               <vsan-icon-item [label]=\"witnessInfos[0].witnessHostName\"\n                               [shape]=\"witnessInfos[0].witnessHostIcon\">\n               </vsan-icon-item>\n            </a>\n            <vsan-icon-item *ngIf=\"witnessInfos[0].isOutOfInventory\"\n                            [label]=\"witnessInfos[0].witnessHostName\"\n                            [shape]=\"witnessInfos[0].witnessHostIcon\">\n            </vsan-icon-item>\n            <button id=\"change-witness-button\"\n                    *ngIf=\"displayConfigureButtons\"\n                    class=\"btn btn-link btn-sm btn-action\"\n                    title=\"{{disableChangeWitnessHostBtnReason}}\"\n                    [disabled]=\"disableChangeWitnessHostBtnReason\"\n                    (click)=\"onChangeWitness()\">\n               {{\"vsan.faultDomains.action.changeHost.tooltip\" | localized}}\n            </button>\n         </div>\n      </div>\n      <!-- Metadata only nodes -->\n      <div *ngIf=\"!isStretchedCluster\" class=\"stack-block-label\">\n         <div class=\"stack-view-key\">\n            {{(witnessInfos.length === 1 ?\n               \"vsan.cluster.configure.wizard.faultDomains.metadataWitnessHost\" :\n               \"vsan.cluster.configure.wizard.faultDomains.metadataWitnessHosts\") | localized}}\n         </div>\n         <div class=\"stack-block-content\">\n            <ng-container *ngFor=\"let witnessInfo of witnessInfos; let i=index\">\n               <a href=\"javascript://\"\n                  (click)=\"navigateToHost(witnessInfo.witnessHost)\"\n                  class=\"metadata-witness-host-margin\"\n                  id=\"metadata-witness-host-{{i}}\">\n                  <clr-icon [attr.shape]=\"witnessInfo.witnessHostIcon\"></clr-icon>\n                  {{witnessInfo.witnessHostName}}\n               </a>\n            </ng-container>\n         </div>\n      </div>\n   </div>\n</div>\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {ClrSelectedState} from \"@clr/angular\";\nimport {Icon} from \"@util/icon\";\nimport {ConnectionState} from \"@generated/connection-state\";\nimport {FaultDomainModel} from \"@model/fault-domain.model\";\nimport {FaultDomainConsumptionData} from \"@model/fault-domain-consumption-data\";\nimport {FaultDomainEvent, MoveHostsEvent} from \"../../event/fault-domain.event\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   selector: \"fault-domain-card\",\n   templateUrl: \"fault-domain-card.html\",\n   styleUrls: [\"fault-domain-card.scss\", \"drag-directive.scss\"],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FaultDomainCardComponent {\n\n   readonly Icon: typeof Icon = Icon;\n\n   @Input()\n   isVsanMaxEnabled: boolean;\n\n   @Input()\n   model: FaultDomainModel;\n\n   @Input()\n   storageConsumption: any;\n\n   @Input()\n   hostReservedCapacitySupported: boolean;\n\n   @Output()\n   readonly onActionEvent: EventEmitter<FaultDomainEvent> = new EventEmitter<FaultDomainEvent>();\n\n   get selection(): FaultDomainModel[] {\n      if (!this.model.hosts) {\n         return [];\n      }\n      return this.model.hosts.filter(host => host.isSelected === ClrSelectedState.SELECTED);\n   }\n\n   hasCapacity(model: FaultDomainModel): boolean {\n      return !!(this.getDomainConsumption(model).totalBytes);\n   }\n\n   toggleHostSelection(host: FaultDomainModel, event: any): void {\n      if (this.isConnected(host)) {\n         if (host.isSelected === ClrSelectedState.SELECTED) {\n            host.isSelected = ClrSelectedState.UNSELECTED;\n         } else {\n            host.isSelected = ClrSelectedState.SELECTED;\n         }\n      }\n   }\n\n   isConnected(host: FaultDomainModel): boolean {\n      return (host.data.connectionState === ConnectionState.connected);\n   }\n\n   dropHost(event: any): void {\n      const host: FaultDomainModel = event.dragData.host;\n      const affected: FaultDomainModel[] = event.dragData.selection;\n      if (affected.indexOf(host) === -1) {\n         affected.push(host);\n      }\n      if (affected.length > 0) {\n         affected.forEach(affectedHost => affectedHost.isDragging = false);\n\n         const evt: MoveHostsEvent = new MoveHostsEvent();\n         evt.hosts = affected;\n         evt.targetDomain = this.model.data.uid;\n         this.onActionEvent.emit(evt);\n      }\n   }\n\n   dragStart(): void {\n      this.selection.forEach(model => model.isDragging = true);\n   }\n\n   dragEnd(): void {\n      this.model.hosts.forEach(model => model.isDragging = false);\n   }\n\n   getDomainConsumption(model: FaultDomainModel): FaultDomainConsumptionData {\n      return FaultDomainConsumptionData.getDomainConsumptionData(model, this.storageConsumption);\n   }\n\n   getNoCapacityLabel(): string {\n      return this.isVsanMaxEnabled ? VsanUiUtils.getString(\"vsan.faultDomains.host.noStoragePoolDisks.label\")\n            : VsanUiUtils.getString(\"vsan.faultDomains.host.noDiskGroup.label\");\n   }\n}\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnDestroy, OnInit} from \"@angular/core\";\nimport {FaultDomainConsumptionData} from \"@model/fault-domain-consumption-data\";\nimport {ChartSectionData} from \"@component/chart/model/chart-section.data\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {Subscription} from \"rxjs\";\nimport {HighchartsThemeService} from \"@component/chart/highcharts-theme.service\";\n\n@Component({\n   selector: \"fault-domain-consumption\",\n   templateUrl: \"fault-domain-consumption.html\",\n   styleUrls: [\"fault-domain-consumption.scss\"],\n})\nexport class FaultDomainConsumptionComponent implements OnInit, OnDestroy {\n\n   @Input()\n   consumption: FaultDomainConsumptionData;\n\n   @Input()\n   hostReservedCapacitySupported: boolean;\n\n   @Input()\n   hasLabel: boolean = true;\n\n   sectionsData: ChartSectionData[] = [];\n\n   private themeChangedSubscribtion: Subscription;\n\n   constructor(private highchartsThemeService: HighchartsThemeService) {\n      this.themeChangedSubscribtion = this.highchartsThemeService.whenThemeChanged.subscribe(\n            theme => this.updateData());\n   }\n\n   ngOnInit(): void {\n      this.updateData();\n   }\n\n   ngOnDestroy(): void {\n      this.themeChangedSubscribtion.unsubscribe();\n   }\n\n   private updateData = () => {\n      this.sectionsData = [];\n      this.sectionsData.push(new ChartSectionData(\n            VsanUiUtils.getString(\"vsan.faultDomains.card.capacity.label\"),\n            this.consumption.usedBytes,\n            \"faultDomainUsed\",\n            true,\n            \"\", // Empty string means use Blue palette\n            this.getTooltipData(),\n      ));\n   };\n\n   private getTooltipData(): Map<string, string> {\n      const result: Map<string, string> = new Map();\n      if (this.consumption.usedBytes > 0) {\n         result.set(VsanUiUtils.getString(\"vsan.faultDomains.card.capacity.used\"),\n               VsanUiUtils.formatFileSize(this.consumption.usedBytes));\n      }\n      if (this.consumption.reservedBytes > 0) {\n         result.set(VsanUiUtils.getString(\"vsan.faultDomains.card.capacity.reserved\"),\n               VsanUiUtils.formatFileSize(this.consumption.reservedBytes));\n      }\n      if (this.consumption.freeBytes > 0) {\n         result.set(VsanUiUtils.getString(\"vsan.faultDomains.card.capacity.free\"),\n               VsanUiUtils.formatFileSize(this.consumption.freeBytes));\n      }\n      result.set(VsanUiUtils.getString(\"vsan.faultDomains.card.capacity.total\"),\n            VsanUiUtils.formatFileSize(this.consumption.totalBytes));\n      return result;\n   }\n}\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {WitnessHostData} from \"@generated/witness-host-data\";\nimport {\n   ChangeWitnessHostEvent,\n   ConfigureStretchedClusterEvent,\n   DisabledStretchedClusterEvent,\n   FaultDomainEvent,\n} from \"../../event/fault-domain.event\";\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\n\n@Component({\n   selector: \"vsan-fault-domains-config\",\n   templateUrl: \"fault-domain-config.html\",\n   styleUrls: [\"fault-domain-config.scss\"],\n})\nexport class FaultDomainConfigComponent {\n   @Input()\n   displayConfigureButtons: boolean = true;\n\n   @Input()\n   witnessInfos: WitnessHostData[];\n\n   @Input()\n   isSharedWitnessAllowed: boolean;\n\n   @Input()\n   hasEditPermission: boolean = true;\n\n   @Input()\n   disableCfgStretchedClusterBtn: boolean = false;\n\n   @Input()\n   disableChangeWitnessHostBtnReason: string = \"\";\n\n   @Input()\n   disableReason: string;\n\n   @Input()\n   isStretchedCluster: boolean;\n\n   @Input()\n   faultToleranceInfo: string;\n\n   @Output()\n   onActionEvent: EventEmitter<FaultDomainEvent> = new EventEmitter<FaultDomainEvent>();\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   onConfigureStretchedCluster(): void {\n      this.onActionEvent.emit(new ConfigureStretchedClusterEvent());\n   }\n\n   get configureStretchedClusterBtnTitle(): string {\n      if (!this.hasEditPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      }\n      if (this.disableCfgStretchedClusterBtn) {\n         return this.disableReason;\n      }\n      return \"\";\n   }\n\n   onDisableStretchedCluster(): void {\n      this.onActionEvent.emit(new DisabledStretchedClusterEvent());\n   }\n\n   onChangeWitness(): void {\n      this.onActionEvent.emit(new ChangeWitnessHostEvent());\n   }\n\n   async navigateToHost(hostRef: ManagedObject): Promise<any> {\n      // Navigate to \"Two Host Clusters\" view  if the cluster is\n      // two-host type and sharedwitness capability is enabled on Vc and host\n      if (this.isSharedWitnessAllowed) {\n         this.navigationService.navigateTo(PlatformExtension.HOST_SHARED_WITNESS_CLUSTERS_LIST, hostRef);\n         return;\n      }\n      this.navigationService.navigateTo(PlatformExtension.LAST_VISITED_PAGE, hostRef);\n   }\n}\n","<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"card\" [class.disable-action]=\"!isConnected(host)\">\n   <div class=\"card-header\"\n        draggable=\"{{isConnected(host)}}\"\n        (onDragStart)=\"dragStart()\"\n        (onDragEnd)=\"dragEnd()\"\n        [dragScope]=\"dropTargets\"\n        [dragData]=\"{host: host, selection: selection || [], isStandalone: true}\">\n      <div class=\"host-drag\" *ngIf=\"host.isDragging\"></div>\n      <div class=\"draggable-content\">\n         <clr-tree>\n            <clr-tree-node [(clrSelected)]=\"host.isSelected\">\n               <div class=\"clr-treenode-link\" (click)=\"toggleHostSelection()\" [ngClass]=\"{'dragging': host.isDragging}\">\n                  <clr-icon [attr.shape]=\"host.data.iconId\"></clr-icon>\n                  <h4 title=\"{{host.data.label}}\">{{host.data.label}}</h4>\n               </div>\n            </clr-tree-node>\n         </clr-tree>\n         <fault-domain-consumption *ngIf=\"consumption.totalBytes\"\n                                   [consumption]=\"consumption\"\n                                   [hostReservedCapacitySupported]=\"hostReservedCapacitySupported\">\n         </fault-domain-consumption>\n         <div *ngIf=\"!consumption.totalBytes\" class=\"no-capacity-label\">{{getNoCapacityLabel()}}</div>\n      </div>\n   </div>\n</div>\n","<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n\n<div *ngIf=\"hasLabel\" class=\"consumption-label\">\n   {{'vsan.faultDomains.card.capacity.label' | localized}}\n</div>\n<vsan-capacity-bar-chart [barWidth]=\"14\"\n                         [chartHeight]=\"28\"\n                         [sections]=\"sectionsData\"\n                         [total]=\"consumption.totalBytes\"\n                         [isSharedTooltip]=\"true\"\n                         [enableKeyboardNavigation]=\"true\"\n                         class=\"consumption-bar\">\n</vsan-capacity-bar-chart>\n<div class=\"consumption-percentage\">\n   {{consumption.consumptionInfo}}\n</div>\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {FaultDomainModel} from \"@model/fault-domain.model\";\n\nexport class FaultDomainEvent {\n\n}\n\nexport class CreateDomainEvent extends FaultDomainEvent {\n   memberHosts: FaultDomainModel[];\n}\n\nexport class EditDomainEvent extends FaultDomainEvent{\n   targetDomain: FaultDomainModel;\n}\n\nexport class DeleteDomainEvent extends FaultDomainEvent {\n   targetDomain: FaultDomainModel;\n}\n\nexport class MoveHostsEvent extends FaultDomainEvent {\n   hosts: FaultDomainModel[];\n   targetDomain: string;\n}\n\nexport class PromoteDomainEvent extends FaultDomainEvent {\n   targetDomain: FaultDomainModel;\n}\n\nexport class ConfigureStretchedClusterEvent extends FaultDomainEvent {\n\n}\n\nexport class DisabledStretchedClusterEvent extends FaultDomainEvent {\n\n}\n\nexport class ChangeWitnessHostEvent extends FaultDomainEvent {\n\n}\n\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, Input} from \"@angular/core\";\nimport {FaultDomainModel} from \"@model/fault-domain.model\";\nimport {FaultDomainConsumptionData} from \"@model/fault-domain-consumption-data\";\nimport {ConnectionState} from \"@generated/connection-state\";\nimport {ClrSelectedState} from \"@clr/angular\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   selector: \"standalone-host-card\",\n   templateUrl: \"standalone-host-card.html\",\n   styleUrls: [\"standalone-host-card.scss\", \"drag-directive.scss\"],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StandaloneHostCardComponent {\n   @Input()\n   isVsanMaxEnabled: boolean;\n\n   @Input()\n   host: FaultDomainModel;\n\n   @Input()\n   selection: FaultDomainModel[];\n\n   @Input()\n   dropTargets: string[] = [];\n\n   @Input()\n   consumption: FaultDomainConsumptionData;\n\n   @Input()\n   hostReservedCapacitySupported: boolean;\n\n   toggleHostSelection(): void {\n      if (!this.isConnected(this.host)) {\n         return;\n      }\n      if (this.host.isSelected === ClrSelectedState.SELECTED) {\n         this.host.isSelected = ClrSelectedState.UNSELECTED;\n      } else {\n         this.host.isSelected = ClrSelectedState.SELECTED;\n      }\n   }\n\n   isConnected(host: FaultDomainModel): boolean {\n      return (host.data.connectionState === ConnectionState.connected);\n   }\n\n   dragStart(): void {\n      this.host.isDragging = true;\n      this.selection.forEach(model => model.isDragging = true);\n   }\n\n   dragEnd(): void {\n      this.host.isDragging = false;\n      this.selection.forEach(model => model.isDragging = false);\n   }\n\n   getNoCapacityLabel(): string {\n      return this.isVsanMaxEnabled ? VsanUiUtils.getString(\"vsan.faultDomains.host.noStoragePoolDisks.label\")\n            : VsanUiUtils.getString(\"vsan.faultDomains.host.noDiskGroup.label\");\n   }\n}\n","<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div id=\"fd-card\"\n     class=\"card\"\n     droppable=\"true\"\n     [dragOverClass]=\"'drag-overlay'\"\n     [dropScope]=\"model.dropScope\"\n     (onDrop)=\"dropHost($event)\">\n\n   <div id=\"fd-card-title\" *ngIf=\"model.title\" class=\"card-header\">\n      <div class=\"domain-title\">\n         <h4 [innerHTML]=\"model.title\" vsan-show-title></h4>\n         <ng-content select=\"vsan-fault-domain-action-menu\"></ng-content>\n      </div>\n      <div class=\"no-capacity-label\" *ngIf=\"!hasCapacity(model)\">\n         {{ \"vsan.faultDomains.host.noDiskGroup.label\" | localized }}\n      </div>\n      <fault-domain-consumption *ngIf=\"hasCapacity(model)\"\n                                [hostReservedCapacitySupported]=\"hostReservedCapacitySupported\"\n                                [consumption]=\"getDomainConsumption(model)\">\n      </fault-domain-consumption>\n   </div>\n\n   <div class=\"card-block\" *ngIf=\"model.hosts.length > 0\">\n      <clr-tree>\n         <clr-tree-node *ngFor=\"let host of model.hosts\"\n                        [(clrSelected)]=\"host.isSelected\">\n            <div id=\"fd-host_{{host.data.uid}}\"\n                 class=\"clr-treenode-link\"\n                 [class.active]=\"host.isDragging\"\n                 [class.disable-action]=\"!isConnected(host)\"\n                 (click)=\"toggleHostSelection(host, $event)\">\n               <div class=\"host-section\"\n                    (onDragStart)=\"dragStart()\"\n                    (onDragEnd)=\"dragEnd()\"\n                    draggable=\"{{isConnected(host)}}\"\n                    [dragScope]=\"host.validTargets\"\n                    [dragClass]=\"'host-drag-background'\"\n                    [dragData]=\"{host: host, selection: selection}\">\n                  <clr-icon [attr.shape]=\"host.data.iconId\"></clr-icon>\n                  <span vsan-show-title>{{host.data.label}}</span>\n               </div>\n               <div class=\"no-capacity-label\" *ngIf=\"!hasCapacity(host)\">\n                  {{getNoCapacityLabel()}}\n               </div>\n               <fault-domain-consumption *ngIf=\"hasCapacity(host)\"\n                                         [consumption]=\"getDomainConsumption(host)\"\n                                         [hostReservedCapacitySupported]=\"hostReservedCapacitySupported\"\n                                         [hasLabel]=\"false\">\n               </fault-domain-consumption>\n            </div>\n         </clr-tree-node>\n      </clr-tree>\n   </div>\n</div>\n"]}