{"version":3,"sources":["./src/app/vsan/overview/fault-domains-summary.component.ts","./src/app/vsan/overview/health-card.html","./src/app/vsan/overview/configurations-card.html","./src/app/vsan/overview/resyncing-data-card.html","./src/app/vsan/overview/vsan-cluster-overview.component.ts","./src/app/generated/vsan-health-check.ts","./src/app/vsan/overview/capacity-card.component.ts","./src/app/vsan/overview/capacity-card.html","./src/app/vsan/overview/health-card.component.ts","./src/app/vsan/overview/detail-view-wrapper.html","./src/app/vsan/overview/vsan-cluster-overview.html","./src/app/vsan/overview/resyncing-data-card.component.ts","./src/app/vsan/overview/fault-domains-summary.html","./src/app/vsan/overview/historical-health.html","./src/app/vsan/overview/configurations-card.component.ts","./src/app/vsan/overview/detail-view-wrapper.component.ts","./src/app/vsan/overview/vsan-cluster-overview.module.ts","./src/app/vsan/overview/vsan-overview-details-view.ts","./src/app/vsan/overview/historical-health.component.ts"],"names":[],"mappings":"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","file":"110-es2015.js","sourcesContent":["/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, Input, OnInit} from \"@angular/core\";\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {WitnessHostData} from \"@generated/witness-host-data\";\nimport {FaultDomainModel} from \"@model/fault-domain.model\";\nimport {FaultDomainsUtil} from \"@util/fault-domains-util\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {FaultDomainConsumptionData} from \"@model/fault-domain-consumption-data\";\n\n@Component({\n   selector: \"fault-domains-summary\",\n   templateUrl: \"fault-domains-summary.html\",\n   styleUrls: [\"fault-domains-summary.scss\"],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FaultDomainsSummaryComponent implements OnInit {\n   @Input()\n   isVsanMaxEnabled: boolean;\n\n   @Input()\n   availableDomains: DomainOrHostData[];\n\n   @Input()\n   storageConsumption: any;\n\n   @Input()\n   witnessInfos: WitnessHostData[];\n\n   @Input()\n   clusterCapabilityData: VsanCapabilityData;\n\n   @Input()\n   isStretchedCluster: boolean;\n\n   @Input()\n   isSharedWitnessAllowed: boolean;\n\n   faultToleranceInfo: string;\n   faultDomainModels: FaultDomainModel[] = [];\n   standaloneModels: FaultDomainModel[] = [];\n   private preferredDomain: string;\n\n   ngOnInit(): void {\n      this.preferredDomain = FaultDomainsUtil.getPreferredDomain(this.witnessInfos);\n      this.standaloneModels = FaultDomainsUtil.getStandaloneModels(this.availableDomains, this.witnessInfos);\n      this.faultDomainModels = FaultDomainsUtil.getFaultDomainModels(this.availableDomains, this.preferredDomain);\n      this.faultToleranceInfo = FaultDomainsUtil.getFaultToleranceInfo(\n            this.availableDomains,\n            this.witnessInfos,\n            this.standaloneModels,\n            this.faultDomainModels,\n            this.storageConsumption);\n   }\n\n   getDomainConsumption(model: FaultDomainModel): FaultDomainConsumptionData {\n      return FaultDomainConsumptionData.getDomainConsumptionData(model, this.storageConsumption);\n   }\n}\n","<!--Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-validation id=\"health-error\"\n                 *ngIf=\"error\"\n                 [allowClose]=\"false\"\n                 [alert]=\"error\">\n</vsan-validation>\n<div class=\"card\" id=\"health-overview\">\n   <h4 class=\"card-header\">{{\"vsan.home.health.overview.title\" | localized}}</h4>\n   <div class=\"card-block\">\n      <span class=\"spinner spinner-md central-spinner\" *ngIf=\"loading\"></span>\n      <ng-container *ngIf=\"!loading\">\n         <div>{{\"vsan.home.health.overview.description\" | localized}}</div>\n         <health-check-item *ngFor=\"let test of healthTestData\"\n                            [healthCheck]=\"test\"\n                            [clusterRef]=\"clusterRef\"\n                            [canNavigateToHealthView]=\"true\"\n                            [inlineHealthView]=\"true\"\n                            (onInlineHealthViewDisplay)=\"showHealthView($event)\">\n         </health-check-item>\n      </ng-container>\n   </div>\n</div>\n","<!--Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-validation id=\"services-validation\"\n                 *ngIf=\"errorMessages.length > 0\"\n                 [allowClose]=\"false\"\n                 [(alerts)]=\"errorMessages\"\n                 (onClosed)=\"errorMessages = []\">\n</vsan-validation>\n<div class=\"card\" id=\"capacity-overview\">\n   <h4 class=\"card-header\">{{\"vsan.home.configurations.card.title\" | localized}}</h4>\n   <div class=\"card-block\">\n      <span class=\"spinner spinner-md central-spinner\" *ngIf=\"loading\"></span>\n      <clr-tabs class=\"tab-container\" *ngIf=\"!loading\">\n         <clr-tab>\n            <button id=\"data-services-configuration\"\n                    clrTabLink>\n               {{\"vsan.services.data.management.label\" | localized}}\n            </button>\n            <clr-tab-content *clrIfActive>\n               <data-services-configuration [clusterRef]=\"clusterRef\"\n                                            [clusterCapabilityData]=\"clusterCapabilityData\"\n                                            [vsanConfig]=\"vsanConfig\">\n               </data-services-configuration>\n            </clr-tab-content>\n         </clr-tab>\n         <clr-tab>\n            <button id=\"capacity-reservation-configuration\"\n                    (click)=\"queryCapacityMgmtSettings()\"\n                    clrTabLink>\n               {{\"vsan.services.enforcereservation.title\" | localized}}\n            </button>\n            <clr-tab-content *clrIfActive>\n               <span id=\"loading-capacity-reservation-settings\"\n                     *ngIf=\"!capacityManagementData\"\n                     class=\"spinner spinner-md central-spinner\">\n               </span>\n               <capacity-reservation-configuration\n                     *ngIf=\"capacityManagementData\"\n                     [capacityManagementData]=\"capacityManagementData\"\n                     [isCapacityCustomizableThresholdsSupportedOnVc]=\"vcCapabilityData?.isCapacityCustomizableThresholdsSupported\"\n                     [isSlackSpaceCapacitySupported]=\"clusterCapabilityData?.isSlackSpaceReservationSupported\">\n               </capacity-reservation-configuration>\n            </clr-tab-content>\n         </clr-tab>\n         <clr-tab>\n            <button id=\"fault-domain-configuration\"\n                    (click)=\"queryStretchedClusterSettings()\"\n                    clrTabLink>\n               {{\"vsan.cluster.configure.summary.faultDomains\" | localized}}\n            </button>\n            <ng-template [(clrIfActive)]=\"faultDomainTabActive\">\n               <clr-tab-content>\n                  <span id=\"loading-fault-domain-settings\"\n                        *ngIf=\"loadingFaultDomains\"\n                        class=\"spinner spinner-md central-spinner\">\n                  </span>\n                  <fault-domains-summary\n                        *ngIf=\"!loadingFaultDomains\"\n                        [availableDomains]=\"availableDomains\"\n                        [storageConsumption]=\"storageConsumption\"\n                        [witnessInfos]=\"witnessInfos\"\n                        [isSharedWitnessAllowed]=\"isSharedWitnessAllowed\"\n                        [isStretchedCluster]=\"isStretchedCluster\">\n                  </fault-domains-summary>\n               </clr-tab-content>\n            </ng-template>\n         </clr-tab>\n         <clr-tab>\n            <button id=\"perf-configuration\"\n                    clrTabLink>\n               {{\"vsan.perf.monitor.label\" | localized}}\n            </button>\n            <clr-tab-content *clrIfActive>\n               <perf-configuration [status]=\"perfSvcStatus\"\n                                   [vcCapabilityData]=\"vcCapabilityData\"\n                                   [vcPermissions]=\"vcPermissions\"\n                                   [config]=\"perfSvcConfig\">\n               </perf-configuration>\n            </clr-tab-content>\n         </clr-tab>\n         <clr-tab>\n            <button id=\"iscsi-configuration\"\n                    (click)=\"queryIscsiTargetConfig()\"\n                    clrTabLink>\n               {{\"vsan.iscsiTargets\" | localized}}\n            </button>\n            <clr-tab-content *clrIfActive>\n               <span id=\"loading-iscsi-settings\"\n                     *ngIf=\"!iscsiSvcConfig\"\n                     class=\"spinner spinner-md central-spinner\">\n               </span>\n               <iscsi-configuration *ngIf=\"iscsiSvcConfig\"\n                                    [config]=\"iscsiSvcConfig\"\n                                    [status]=\"iscsiSvcStatus\">\n               </iscsi-configuration>\n            </clr-tab-content>\n         </clr-tab>\n         <clr-tab>\n            <button id=\"file-service-configuration\"\n                    clrTabLink>\n               {{\"vsan.services.fileservices.title\" | localized}}\n            </button>\n            <clr-tab-content *clrIfActive>\n               <file-service-configuration [clusterRef]=\"clusterRef\"\n                                           [vcCapabilityData]=\"vcCapabilityData\"\n                                           [isPerfServiceEnabled]=\"perfSvcEnabled\"\n                                           [availableDomains]=\"availableDomains\"\n                                           [isStretchedCluster]=\"isStretchedCluster\"\n                                           [editClusterPermission]=\"hasEditClusterPermission\">\n               </file-service-configuration>\n            </clr-tab-content>\n         </clr-tab>\n         <clr-tab>\n            <button id=\"historical-health-configuration\"\n                    clrTabLink>\n               {{\"vsan.services.historicalhealth.title\" | localized}}\n            </button>\n            <clr-tab-content *clrIfActive>\n               <historical-health-configuration [config]=\"vsanConfig?.historicalHealthConfig\">\n               </historical-health-configuration>\n            </clr-tab-content>\n         </clr-tab>\n      </clr-tabs>\n   </div>\n   <div class=\"card-footer\">\n      <button class=\"btn btn-sm btn-link\" (click)=\"showDetail()\">\n         {{\"vsan.generalConfig.button.edit\" | localized}}\n      </button>\n   </div>\n</div>\n","<!--Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-validation id=\"resyncing-error\"\n                 *ngIf=\"error\"\n                 [allowClose]=\"false\"\n                 [alert]=\"error\">\n</vsan-validation>\n<div class=\"card\" id=\"resyncing-objects\">\n   <h4 class=\"card-header\">{{\"vsan.monitor.resyncingComponents\" | localized}}</h4>\n   <div class=\"card-block\">\n      <span class=\"spinner spinner-md central-spinner\" *ngIf=\"loading\"></span>\n      <ng-container *ngIf=\"!loading\">\n         <div class=\"clr-row\">\n            <label class=\"clr-col-5\">{{\"vsan.monitor.resyncSummary.resyncingComponents\" | localized}}</label>\n            <div class=\"clr-col-7\">{{resyncingComponents}}</div>\n         </div>\n         <div class=\"clr-row\">\n            <label class=\"clr-col-5\">{{\"vsan.monitor.resyncSummary.bytesToResync\" | localized}}</label>\n            <div class=\"clr-col-7\">{{bytesLeft}}</div>\n         </div>\n         <ng-container *ngIf=\"isResyncETAImprovementSupported\">\n            <div class=\"clr-row\">\n               <label class=\"clr-col-5\">{{\"vsan.monitor.resyncSummary.totalResyncingEta\" | localized}}</label>\n               <div class=\"clr-col-7\">\n            <span *ngIf=\"suspendedResync\">\n               {{\"vsan.monitor.resyncSummary.resyncSuspended\" | localized}}\n            </span>\n                  <span *ngIf=\"!suspendedResync\">\n               {{totalResyncingEta | timeSpan}}\n            </span>\n               </div>\n            </div>\n            <div class=\"clr-row\">\n               <label class=\"clr-col-5\">{{\"vsan.monitor.resyncSummary.scheduledResync.label\" | localized}}</label>\n               <div class=\"clr-col-7\">{{scheduledResyncing}}</div>\n            </div>\n         </ng-container>\n      </ng-container>\n   </div>\n   <div class=\"card-footer\">\n      <button class=\"btn btn-sm btn-link\" (click)=\"showDetail()\">\n         {{\"vsan.cluster.summary.portlet.details.label\" | localized}}\n      </button>\n   </div>\n</div>\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit, QueryList, ViewChildren} from \"@angular/core\";\nimport {CardName, CardView} from \"@component/drag-and-drop/card-view\";\nimport {CardContainer, DragCardPosition} from \"@component/drag-and-drop/drag-card-position\";\nimport {DraggableCardDirective} from \"@component/drag-and-drop/draggable-card.directive\";\nimport {GeneralConfigData} from \"@component/general-settings/general-config.data\";\nimport {VsanGeneralConfigService} from \"@component/general-settings/vsan-general-config.service\";\nimport {UpgradeData} from \"@component/upgrade/upgrade.data\";\nimport {UpgradeService} from \"@component/upgrade/upgrade.service\";\nimport {environment} from \"@env/environment\";\nimport {CeipService} from \"@generated/ceip-service\";\nimport {ClusterMode} from \"@generated/cluster-mode\";\nimport {Privileges} from \"@generated/privileges\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {VsanConfigSpec} from \"@generated/vsan-config-spec\";\nimport {ClusterComputeResource, VirtualMachine} from \"@service/client/dataservice/data-service-property\";\nimport {DataServiceUtil} from \"@service/client/dataservice/data-service-util\";\nimport {DataServiceClient} from \"@service/client/dataservice/data-service.service\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {QuickstartNotificationService} from \"../hci/status/quickstart-notification.service\";\nimport {DetailsViewContext} from \"./details-view-context\";\n\n@Component({\n   selector: \"vsan-cluster-overview\",\n   templateUrl: \"vsan-cluster-overview.html\",\n   styleUrls: [\"vsan-cluster-overview.scss\"],\n})\nexport class VsanClusterOverviewComponent implements OnInit {\n   // cards\n   readonly CAPACITY_CARD: string = \"capacityService\";\n   readonly HEALTH_CARD: string = \"healthSummaryService\";\n   readonly CONFIGURATION_CARD: string = \"configurationService\";\n   readonly RESYNCING_OBJECTS_CARD: string = \"resyncingObjectService\";\n\n   clusterRef: ManagedObject;\n   cardsView: CardView;\n\n   // Common config data\n   vsanConfig: VsanConfigSpec;\n   isComputeOnlyCluster: boolean;\n   upgradeData: UpgradeData;\n   selectedHealthTestId: string;\n\n   // Permissions\n   clusterPermissions: Map<string, boolean>;\n   vcPermissions: Map<string, boolean>;\n   editClusterPermission: boolean = false;\n   configureStoragePermission: boolean = false;\n\n   // Capabilities\n   vcCapabilityData: VsanCapabilityData;\n   clusterCapabilityData: VsanCapabilityData;\n\n   isVsanUpgradeVisible: boolean = false;\n   showCards: boolean = true;\n   detailViewContext: DetailsViewContext;\n\n   errorMessages: string[] = [];\n\n   // The cards are defined inside templates, so they can be dragged\n   @ViewChildren(DraggableCardDirective) serviceTemplates: QueryList<DraggableCardDirective>;\n\n   @LoadingIndicator()\n   isLoading: boolean;\n\n   constructor(private dataService: DataServiceClient,\n         private vsanGeneralConfigService: VsanGeneralConfigService,\n         private ceipSvc: CeipService,\n         private taskService: TaskMonitorService,\n         private quickstartStatusNotification: QuickstartNotificationService,\n         private upgradeService: UpgradeService) {\n      this.cardsView = new CardView(CardName.VSAN_HOME_CARD_VIEW, this.getViewCards);\n   }\n\n   async ngOnInit(): Promise<void> {\n      // TODO: [rogerw] Right now we can only have the vSAN tab at VM level. If we get approval to add this tab\n      // to cluster level, this.getVmCluster() method call should be removed.\n      this.clusterRef = await this.getVmCluster();\n      if (this.showCards) {\n         await this.refresh();\n      }\n   }\n\n   private async getVmCluster(): Promise<ManagedObject> {\n      if (environment.repa) {\n         const clusterId: string = await this.dataService.getProperty(VirtualMachine.cluster, ManagedObject.contextObject);\n         return DataServiceUtil.moIdToManagedObject(ClusterComputeResource.type, clusterId);\n      } else {\n         return await this.dataService.getProperty(VirtualMachine.cluster, ManagedObject.contextObject);\n      }\n   }\n\n   @RefreshHandler\n   @Loader()\n   async refresh(): Promise<void> {\n      this.reset();\n      await this.queryVsanGeneralConfig();\n      if (!this.vsanConfig) {\n         this.errorMessages = [VsanUiUtils.getString(\"vsan.services.configuration.not.available\")];\n         return;\n      }\n\n      if (!this.isComputeOnlyCluster) {\n         this.fetchDisksUpgradeData();\n      }\n   }\n\n   @ErrorHandler()\n   handleError(error: string): void {\n      this.errorMessages = [error];\n   }\n\n   fetchPrecheckUpgradeData(): void {\n      this.upgradeService.getUpgradeStatus(this.clusterRef)\n            .then(upgradeStatus => {\n               // Create a new instance to trigger the upgrade component's refresh\n               this.upgradeData = this.upgradeData.getNewInstance(upgradeStatus);\n            })\n            .catch(e => this.errorMessages.push(e));\n   }\n\n   vsanUpgradeComplete(): void {\n      this.isVsanUpgradeVisible = true;\n      this.fetchDisksUpgradeData();\n   }\n\n   fetchDisksUpgradeData(): void {\n      this.upgradeData = null;\n      this.upgradeService.getUpgradeData(this.clusterRef)\n            .then(data => this.upgradeData = data)\n            .catch(e => this.errorMessages.push(e));\n   }\n\n   async queryVsanGeneralConfig(): Promise<void> {\n      try {\n         const generalConfig: GeneralConfigData = await this.vsanGeneralConfigService.getVsanGeneralConfigData(\n               this.clusterRef);\n         this.vsanConfig = generalConfig.cloneVsanConfigSpec();\n         this.vcCapabilityData = generalConfig.vcCapabilityData;\n         this.clusterCapabilityData = generalConfig.clusterCapabilityData;\n         this.clusterPermissions = generalConfig.clusterPermissions;\n         this.vcPermissions = generalConfig.vcPermissions;\n         this.editClusterPermission = this.clusterPermissions.get(Privileges.EDIT_CLUSTER());\n         this.configureStoragePermission = this.clusterPermissions.get(Privileges.CONFIG_STORAGE());\n         this.isComputeOnlyCluster = this.vsanConfig && this.vsanConfig.clusterMode === ClusterMode.COMPUTE;\n      } catch (e) {\n         this.errorMessages.push(e);\n      }\n   }\n\n   showDetailsView(context: DetailsViewContext): void {\n      this.detailViewContext = context;\n      this.showCards = false;\n   }\n\n   private reset(): void {\n      this.errorMessages = [];\n      this.upgradeData = null;\n   }\n\n   private getViewCards = (): Map<string, DragCardPosition> => {\n      const result: Map<string, DragCardPosition> = new Map<string, DragCardPosition>();\n      result.set(this.CAPACITY_CARD, new DragCardPosition(CardContainer.LEFT, 0));\n      result.set(this.CONFIGURATION_CARD, new DragCardPosition(CardContainer.LEFT, 1));\n      result.set(this.HEALTH_CARD, new DragCardPosition(CardContainer.RIGHT, 0));\n      result.set(this.RESYNCING_OBJECTS_CARD, new DragCardPosition(CardContainer.RIGHT, 1));\n      return result;\n   };\n}\n","import {VsanHealthStatus} from '@generated/vsan-health-status';\n\nexport interface VsanHealthCheck {\n\n   perspective: string;\n   healthGroup: string;\n   healthTestId: string;\n   healthTest: string;\n   healthCheckLabel: string;\n   status: VsanHealthStatus;\n   isHardwareCheck: boolean;\n} //class VsanHealthCheck\n\nexport module VsanHealthCheck{\nexport class Factory {\n\n   static create = (perspective: string, healthGroup: string, healthTestId: string, healthTest: string, healthCheckLabel: string, status: VsanHealthStatus, isHardwareCheck: boolean): VsanHealthCheck => {\n      return { perspective: perspective, healthGroup: healthGroup, healthTestId: healthTestId, healthTest: healthTest, healthCheckLabel: healthCheckLabel, status: status, isHardwareCheck: isHardwareCheck, };\n   }\n\n\n} //class Factory\n\n} //module VsanHealthCheck\n","/* Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {NavigationService} from \"@navigation/navigation.service\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {DetailsViewContext} from \"./details-view-context\";\nimport {VsanOverviewDetailsView} from \"./vsan-overview-details-view\";\n\n@Component({\n   selector: \"capacity-card\",\n   templateUrl: \"capacity-card.html\",\n   styleUrls: [\"capacity-card.scss\"],\n})\nexport class CapacityCardComponent {\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Output()\n   onShowDetails: EventEmitter<DetailsViewContext> = new EventEmitter<DetailsViewContext>();\n\n   datastoresCapacityData: Map<DatastoreType, CapacityData>;\n\n   capacityData: CapacityData;\n   clusterCapabilityData: VsanCapabilityData;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   @ErrorMessage()\n   error: string;\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   constructor(private capacityService: VsanCapacityService,\n         private capabilitiesService: VsanCapabilityProvider,\n         private navigationService: NavigationService) {\n   }\n\n   async ngOnInit(): Promise<void> {\n      await this.refresh();\n      this.srOnlyMessage = VsanUiUtils.getString(\"vsan.screenReader.message.page.loaded\",\n            VsanUiUtils.getString(\"vsan.monitor.capacity.overview.title\"));\n   }\n\n   @RefreshHandler\n   @Loader()\n   async refresh(): Promise<void> {\n      [this.datastoresCapacityData, this.clusterCapabilityData] = await Promise.all([\n         this.capacityService.getCapacityDataPerDatastore(this.clusterRef, false),\n         this.capabilitiesService.getClusterCapabilityData(this.clusterRef),\n      ]);\n      this.capacityData = this.datastoresCapacityData.get(DatastoreType.VSAN);\n   }\n\n   showDetail(): void {\n      const context: DetailsViewContext = {\n         view: VsanOverviewDetailsView.CAPACITY,\n      };\n      this.onShowDetails.emit(context);\n   }\n}\n","<!--Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-validation id=\"services-validation\"\n                 *ngIf=\"error\"\n                 [allowClose]=\"false\"\n                 [alert]=\"error\">\n</vsan-validation>\n\n<div class=\"card\" id=\"capacity-overview\">\n   <h4 class=\"card-header\">{{\"vsan.monitor.capacity.overview.title\" | localized}}</h4>\n   <div class=\"card-block\">\n      <span class=\"spinner spinner-md central-spinner\" *ngIf=\"loading\"></span>\n      <vsan-capacity-overview-chart *ngIf=\"!loading\"\n                                    [capacityData]=\"capacityData\">\n      </vsan-capacity-overview-chart>\n   </div>\n   <div class=\"card-footer\">\n      <button class=\"btn btn-sm btn-link\" (click)=\"showDetail()\">\n         {{\"vsan.home.capacity.btn.details.label\" | localized}}\n      </button>\n   </div>\n</div>\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanHealthPropertyProvider} from \"@generated/vsan-health-property-provider\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {Loader} from '@service/flow/loader.decorator';\nimport {RefreshHandler} from '@service/global-refresh.service';\nimport {VsanHealthData} from \"@generated/vsan-health-data\";\nimport {VsanHealthStatus} from \"@generated/vsan-health-status\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {VsanHealthCheck} from \"@generated/vsan-health-check\";\nimport {VsanTestData} from \"@generated/vsan-test-data\";\nimport {HealthContext} from \"@navigation/context/health-context\";\nimport {DetailsViewContext} from \"./details-view-context\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanOverviewDetailsView} from \"./vsan-overview-details-view\";\n\n@Component({\n   selector: \"health-card\",\n   templateUrl: \"health-card.html\",\n   styleUrls: [\"health-card.scss\"],\n})\nexport class HealthCardComponent implements OnInit {\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Output()\n   onShowDetails: EventEmitter<DetailsViewContext> = new EventEmitter<DetailsViewContext>();\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   @ErrorMessage()\n   error: string;\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   healthTestData: VsanHealthCheck[];\n\n   constructor(private healthProvider: VsanHealthPropertyProvider) {}\n\n   async ngOnInit(): Promise<void> {\n      await this.refresh();\n      this.srOnlyMessage = VsanUiUtils.getString(\"vsan.screenReader.message.page.loaded\",\n            VsanUiUtils.getString(\"vsan.monitor.capacity.overview.title\"));\n   }\n\n   @RefreshHandler\n   @Loader()\n   async refresh(): Promise<void> {\n      const healthData: VsanHealthData = await this.healthProvider.getVsanHealthSummaryFromCache(this.clusterRef);\n      this.healthTestData = [];\n      healthData.testsData\n            .filter(test => this.isUnhealthyItem(test))\n            .filter(test => !VsanUiUtils.isEmpty(test.subtests))\n            .forEach(test => {\n               const subtests: VsanHealthCheck[] = test.subtests\n                     .filter(subtest => this.isUnhealthyItem(subtest))\n                     .map(subtest => this.createVsahHealthCheck(test, subtest));\n               this.healthTestData.push(...subtests);\n            });\n   }\n\n   showHealthView(healthContext: HealthContext): void {\n      const context: DetailsViewContext = {\n         view: VsanOverviewDetailsView.HEALTH,\n         content: healthContext,\n      };\n\n      this.onShowDetails.emit(context);\n   }\n\n   private createVsahHealthCheck(test: VsanTestData, subtest: VsanTestData): VsanHealthCheck {\n      return VsanHealthCheck.Factory.create(\n            \"defaultView\",\n            test.testName,\n            subtest.testId,\n            subtest.testName,\n            subtest.testName,\n            subtest.status,\n            false);\n   }\n\n   private isUnhealthyItem(item: VsanTestData): boolean {\n      return item.status === VsanHealthStatus.red || item.status === VsanHealthStatus.yellow;\n   }\n\n   @ErrorHandler()\n   handleError(error: string): void {\n      this.error = error;\n   }\n}\n","<!--Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"action-btn-container\">\n   <button class=\"btn btn-sm btn-link no-spacing\"\n           (click)=\"backToOverview()\">\n      {{\"vsan.home.overview.btn.back.label\" | localized}}\n   </button>\n</div>\n<router-outlet name=\"details\"></router-outlet>\n","<!--Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<h5 vsan-auto-focus>\n   {{\"vsan.home.overview.title\" | localized}}\n</h5>\n\n<span *ngIf=\"isLoading\" id=\"loading-indicator\" class=\"spinner central-spinner\"></span>\n\n<vsan-validation id=\"services-validation\"\n                 *ngIf=\"errorMessages.length > 0\"\n                 [allowClose]=\"false\"\n                 [(alerts)]=\"errorMessages\"\n                 (onClosed)=\"errorMessages = []\">\n</vsan-validation>\n\n<ng-container *ngIf=\"!isLoading\">\n   <ng-container *ngIf=\"vsanConfig?.isEnabled || isComputeOnlyCluster\">\n      <!-- Common upgrade component, only visible when old disks or old format objects exist. -->\n      <vsan-upgrade *ngIf=\"upgradeData\"\n                    [upgradeData]=\"upgradeData\"\n                    [hasUpgradePermission]=\"editClusterPermission && configureStoragePermission\"\n                    [showCompatibilityWarning]=\"true\"\n                    [visibleWhenUpToDate]=\"isVsanUpgradeVisible\"\n                    (precheckComplete)=\"fetchPrecheckUpgradeData()\"\n                    (upgradeComplete)=\"vsanUpgradeComplete()\">\n      </vsan-upgrade>\n      <vsan-drag-and-drop *ngIf=\"showCards\"\n                          [view]=\"cardsView\"\n                          [cardTemplates]=\"serviceTemplates\">\n      </vsan-drag-and-drop>\n      <detail-view-wrapper *ngIf=\"!showCards\"\n                           [clusterRef]=\"clusterRef\"\n                           [context]=\"detailViewContext\">\n      </detail-view-wrapper>\n   </ng-container>\n</ng-container>\n<ng-template vsan-drag-service=\"{{CAPACITY_CARD}}\"\n             [visible]=\"!isComputeOnlyCluster\">\n   <capacity-card [clusterRef]=\"clusterRef\"\n                  (onShowDetails)=\"showDetailsView($event)\">\n   </capacity-card>\n</ng-template>\n<ng-template vsan-drag-service=\"{{CONFIGURATION_CARD}}\"\n             [visible]=\"!isComputeOnlyCluster\">\n   <configurations-card [clusterRef]=\"clusterRef\"\n                        [vcCapabilityData]=\"vcCapabilityData\"\n                        [clusterCapabilityData]=\"clusterCapabilityData\"\n                        [vcPermissions]=\"vcPermissions\"\n                        [clusterPermissions]=\"clusterPermissions\"\n                        (onShowDetails)=\"showDetailsView($event)\">\n   </configurations-card>\n</ng-template>\n<ng-template vsan-drag-service=\"{{RESYNCING_OBJECTS_CARD}}\"\n             [visible]=\"!isComputeOnlyCluster\">\n   <resyncing-data-card [clusterRef]=\"clusterRef\"\n                        [isResyncETAImprovementSupported]=\"clusterCapabilityData?.isResyncETAImprovementSupported\"\n                        (onShowDetails)=\"showDetailsView($event)\">\n   </resyncing-data-card>\n</ng-template>\n<ng-template vsan-drag-service=\"{{HEALTH_CARD}}\"\n             [visible]=\"!isComputeOnlyCluster\">\n   <health-card [clusterRef]=\"clusterRef\"\n                (onShowDetails)=\"showDetailsView($event)\"></health-card>\n</ng-template>\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanResyncingComponentsProvider} from \"@generated/vsan-resyncing-components-provider\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {ResyncMonitorData} from \"@generated/resync-monitor-data\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ResyncObjectsUtil} from \"../resync/resync-objects-util\";\nimport {DetailsViewContext} from \"./details-view-context\";\nimport {VsanOverviewDetailsView} from \"./vsan-overview-details-view\";\n\n@Component({\n   selector: \"resyncing-data-card\",\n   templateUrl: \"resyncing-data-card.html\",\n   styleUrls: [\"resyncing-data-card.scss\"],\n})\nexport class ResyncingDataCardComponent implements OnInit {\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Input()\n   isResyncETAImprovementSupported: boolean;\n\n   @Output()\n   onShowDetails: EventEmitter<DetailsViewContext> = new EventEmitter<DetailsViewContext>();\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   @ErrorMessage()\n   error: string;\n\n   resyncData: ResyncMonitorData;\n   resyncingComponents: string;\n   bytesLeft: string;\n   totalResyncingEta: number;\n   scheduledResyncing: string;\n   suspendedResync: boolean;\n\n   constructor(private vsanResyncProvider: VsanResyncingComponentsProvider) {}\n\n   async ngOnInit(): Promise<void> {\n      this.refresh();\n   }\n\n   showDetail(): void {\n      const context: DetailsViewContext = {\n         view: VsanOverviewDetailsView.RESYNCINGOBJECTS,\n         content: this.clusterRef,\n      };\n      this.onShowDetails.emit(context);\n   }\n\n   @RefreshHandler\n   private async refresh(): Promise<void> {\n      await this.fetch();\n      this.resyncingComponents = VsanUiUtils.isUnset(this.resyncData.componentsToSync)\n            ? VsanUiUtils.getString(\"vsan.na.label\")\n            : this.resyncData.componentsToSync.toString();\n      this.bytesLeft = VsanUiUtils.isUnset(this.resyncData.bytesToResync)\n            ? VsanUiUtils.getString(\"vsan.na.label\")\n            : VsanUiUtils.formatFileSize(this.resyncData.bytesToResync);\n      // show suspended resync status label if there are only suspended bytes to resync and the returned ETA is 0\n      this.suspendedResync = !!this.resyncData.suspendedBytesToResync\n            && !this.resyncData.suspendedETA\n            && !this.resyncData.activeBytesToResync\n            && !this.resyncData.queuedBytesToResync;\n      this.totalResyncingEta = this.calculateTotalResyncingEta();\n      this.scheduledResyncing = ResyncObjectsUtil.getScheduledResync(this.resyncData,\n            this.isResyncETAImprovementSupported);\n   }\n\n   private calculateTotalResyncingEta(): number {\n      const hasTotalResyncObjects: boolean = !!this.resyncData?.bytesToResync\n            && (!!this.resyncData?.activeBytesToResync || !!this.resyncData?.queuedBytesToResync);\n      return hasTotalResyncObjects ? 0 : this.resyncData.etaToResync;\n   }\n\n   @Loader()\n   private async fetch(): Promise<void> {\n      if (this.isResyncETAImprovementSupported) {\n         this.resyncData = await this.vsanResyncProvider.getResyncingDataForAutoRefresh(this.clusterRef);\n      } else {\n         this.resyncData = await this.vsanResyncProvider.getResyncingData(this.clusterRef, 100);\n      }\n   }\n}\n","<!--Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-fault-domains-config\n      [displayConfigureButtons]=\"false\"\n      [witnessInfos]=\"witnessInfos\"\n      [faultToleranceInfo]=\"faultToleranceInfo\"\n      [isSharedWitnessAllowed]=\"isSharedWitnessAllowed\"\n      [isStretchedCluster]=\"isStretchedCluster\">\n</vsan-fault-domains-config>\n<div class=\"fault-domains\">\n   <fault-domain-card\n         *ngFor=\"let model of faultDomainModels\"\n         [model]=\"model\"\n         [isVsanMaxEnabled]=\"isVsanMaxEnabled\"\n         [storageConsumption]=\"storageConsumption\"\n         [hostReservedCapacitySupported]=\"clusterCapabilityData?.isHostReservedCapacitySupported\">\n   </fault-domain-card>\n</div>\n<h5 *ngIf=\"!isStretchedCluster || standaloneModels.length > 0\">\n   {{\"vsan.faultDomains.card.category.standalone\" | localized: standaloneModels?.length}}\n</h5>\n<div class=\"fault-domains\"\n     *ngIf=\"!isStretchedCluster || standaloneModels.length > 0\">\n   <standalone-host-card\n         *ngFor=\"let host of standaloneModels\"\n         [host]=\"host\"\n         [isVsanMaxEnabled]=\"isVsanMaxEnabled\"\n         [consumption]=\"getDomainConsumption(host)\"\n         [hostReservedCapacitySupported]=\"clusterCapabilityData?.isHostReservedCapacitySupported\">\n   </standalone-host-card>\n</div>\n","<!--Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"clr-row\">\n   <label class=\"clr-col-5\">{{\"vsan.services.historicalhealth.title\" | localized}}</label>\n   <div class=\"clr-col-7\">{{getStatusLabel()}}</div>\n</div>\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {DetailsViewContext} from \"./details-view-context\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\nimport {VsanConfigService} from \"@generated/vsan-config-service\";\nimport {VsanServiceData} from \"@generated/vsan-service-data\";\nimport {PerfStatsObjectInfo} from \"@generated/perf-stats-object-info\";\nimport {VsanServiceStatus} from \"@generated/vsan-service-status\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {VsanOverviewDetailsView} from \"./vsan-overview-details-view\";\nimport {VsanIscsiTargetConfig} from \"@generated/vsan-iscsi-target-config\";\nimport {Privileges} from \"@generated/privileges\";\nimport {VsanStretchedClusterService} from \"@generated/vsan-stretched-cluster-service\";\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {GeneralConfigData} from \"@component/general-settings/general-config.data\";\nimport {VsanGeneralConfigService} from \"@component/general-settings/vsan-general-config.service\";\nimport {VsanConfigSpec} from \"@generated/vsan-config-spec\";\nimport {CapacityManagementService} from \"@generated/capacity-management-service\";\nimport {CapacityManagementData} from \"@generated/capacity-management-data\";\nimport {WitnessHostData} from \"@generated/witness-host-data\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {CapacityDataService} from \"@generated/capacity-data-service\";\nimport {HostStorageConsumptionData} from \"@generated/host-storage-consumption-data\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\n\n@Component({\n   selector: \"configurations-card\",\n   templateUrl: \"configurations-card.html\",\n   styleUrls: [\"configurations-card.scss\"],\n})\nexport class ConfigurationsCardComponent implements OnInit {\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Input()\n   vcCapabilityData: VsanCapabilityData;\n\n   @Input()\n   clusterCapabilityData: VsanCapabilityData;\n\n   @Input()\n   vcPermissions: Map<string, boolean>;\n\n   @Input()\n   clusterPermissions: Map<string, boolean>;\n\n   @Output()\n   onShowDetails: EventEmitter<DetailsViewContext> = new EventEmitter<DetailsViewContext>();\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   @ErrorMessage()\n   error: string;\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   @LoadingIndicator({name: \"fault-domains\"})\n   loadingFaultDomains: boolean;\n\n   vsanConfig: VsanConfigSpec;\n\n   availableDomains: DomainOrHostData[];\n   isStretchedCluster: boolean;\n   witnessInfos: WitnessHostData[] = null; // will be null if stretched cluster/metadata only node is disabled\n   isSharedWitnessAllowed: boolean;\n   storageConsumption: any;\n   faultDomainTabActive: boolean;\n\n   hasEditClusterPermission: boolean;\n\n   perfSvcStatus: VsanServiceStatus;\n   perfSvcConfig: PerfStatsObjectInfo;\n   perfSvcEnabled: boolean;\n\n   iscsiSvcStatus: VsanServiceStatus;\n   iscsiSvcConfig: VsanIscsiTargetConfig;\n\n   capacityManagementData: CapacityManagementData;\n\n   errorMessages: string[] = [];\n\n   constructor(private configService: VsanConfigService,\n         private vsanGeneralConfigService: VsanGeneralConfigService,\n         private capacityManagementService: CapacityManagementService,\n         private capabilityProvider: VsanCapabilityProvider,\n         private capacityDataService: CapacityDataService,\n         private stretchedClusterService: VsanStretchedClusterService) {}\n\n   ngOnInit(): void {\n      this.srOnlyMessage = \"\";\n      this.hasEditClusterPermission = this.clusterPermissions.get(Privileges.EDIT_CLUSTER());\n      this.fetch();\n   }\n\n   @RefreshHandler\n   @Loader()\n   async fetch(): Promise<void> {\n      this.reset();\n      await Promise.all([\n            this.queryVsanGeneralConfig(),\n            this.queryPerfServiceConfig(),\n            this.fetchStretchedClusterData(),\n            this.fetchIsStretchedCluster(),\n      ]);\n   }\n\n   private async queryVsanGeneralConfig(): Promise<void> {\n      const generalConfig: GeneralConfigData = await this.vsanGeneralConfigService.getVsanGeneralConfigData(\n            this.clusterRef);\n      this.vsanConfig = generalConfig.cloneVsanConfigSpec();\n   }\n\n   private async queryPerfServiceConfig(): Promise<void> {\n      const result: VsanServiceData = await this.configService.getPerformanceStatus(this.clusterRef);\n      this.perfSvcStatus = result.status;\n      this.perfSvcConfig = result.details as PerfStatsObjectInfo;\n      this.perfSvcEnabled = result.status === VsanServiceStatus.ENABLED;\n   }\n\n   private async fetchStretchedClusterData(): Promise<any> {\n      this.availableDomains = await this.stretchedClusterService.getAvailableDomains(this.clusterRef);\n   }\n\n   private async fetchIsStretchedCluster(): Promise<any> {\n      this.isStretchedCluster = await this.stretchedClusterService.getIsVsanStretchedCluster(this.clusterRef);\n   }\n\n   async queryIscsiTargetConfig(): Promise<void> {\n      if (this.iscsiSvcConfig) {\n         return;\n      }\n      const result: VsanServiceData = await this.configService.getIscsiTargetStatus(this.clusterRef);\n      this.iscsiSvcConfig = result.details as VsanIscsiTargetConfig;\n      this.iscsiSvcStatus = result.status;\n   }\n\n   async queryCapacityMgmtSettings(): Promise<void> {\n      this.capacityManagementData = await this.capacityManagementService.getCapacityManagementData(this.clusterRef);\n   }\n\n   @Loader({name: \"fault-domains\"})\n   async queryStretchedClusterSettings(): Promise<void> {\n      const hostsStorageData: HostStorageConsumptionData[] =\n            await this.capacityDataService.getStorageConsumptionByHost(this.clusterRef);\n      this.storageConsumption = this.processHostsCapacity(hostsStorageData);\n      this.witnessInfos = await this.stretchedClusterService.getWitnessHostData(this.clusterRef);\n      if (this.vcCapabilityData.isSharedWitnessSupported) {\n         this.isSharedWitnessAllowed = await this.checkIfSharedWitnessIsAllowed();\n      }\n   }\n\n   @ErrorHandler()\n   private handleError(error: string): void {\n      this.errorMessages.push(error);\n   }\n\n   private async checkIfSharedWitnessIsAllowed(): Promise<boolean> {\n      if (!this.isStretchedCluster) {\n         return false;\n      }\n      const allHostsCount: number =\n            this.availableDomains.reduce((sum, item) => sum += item.isHost ? 1 : item.children.length, 0);\n      if (allHostsCount === 2) {\n         const hostRef: ManagedObject = this.witnessInfos[0].witnessHost;\n         return await this.capabilityProvider.getIsSharedWitnessSupported(hostRef);\n      }\n      return false;\n   }\n\n   private processHostsCapacity(hostsStorageData: HostStorageConsumptionData[]): any {\n      const storageConsumption: any = {};\n      hostsStorageData.forEach(item => {\n         if (item.hostRef) {\n            storageConsumption[ManagedObject.uid(item.hostRef)] = item;\n         }\n      });\n      return storageConsumption;\n   }\n\n   private reset(): void {\n      this.errorMessages = [];\n      this.perfSvcStatus = null;\n      this.perfSvcConfig = null;\n      this.iscsiSvcStatus = null;\n      this.iscsiSvcConfig = null;\n      this.availableDomains = [];\n      this.capacityManagementData = null;\n      this.isStretchedCluster = false;\n   }\n\n   showDetail(): void {\n      const context: DetailsViewContext = {\n         view: this.faultDomainTabActive ? VsanOverviewDetailsView.FAULTDOMAINS : VsanOverviewDetailsView.SERVICES,\n         content: this.clusterRef,\n      };\n      this.onShowDetails.emit(context);\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {DetailsViewContext} from \"./details-view-context\";\nimport {VsanOverviewDetailsView} from \"./vsan-overview-details-view\";\nimport {HealthContext} from \"@navigation/context/health-context\";\nimport {PersistentStorageService} from \"@service/browser-storage.service\";\nimport {VsanRoutes} from \"../../vsan-routes\";\nimport {InlineViewContextKey} from \"@model/inline-view-context-key.data\";\n\n@Component({\n   selector: \"detail-view-wrapper\",\n   templateUrl: \"detail-view-wrapper.html\",\n   styleUrls: [\"detail-view-wrapper.scss\"],\n})\nexport class DetailViewWrapperComponent implements OnInit {\n   private readonly OVERVIEW_DETAILS_PATH: string = \"details\";\n   @Input()\n   clusterRef: ManagedObject;\n\n   @Input()\n   context: DetailsViewContext;\n\n   constructor(private router: Router, private storageService: PersistentStorageService) {}\n\n   ngOnInit(): void {\n      this.expandDetailsView();\n   }\n\n   backToOverview(): void {\n      this.router.navigate([\"/\" + VsanRoutes.CLUSTER_OVERVIEW_VIEW]);\n   }\n\n   private expandDetailsView(): void {\n      switch (this.context?.view) {\n         case VsanOverviewDetailsView.HEALTH:\n            this.setHealthContext();\n            this.navigateToDetails(VsanRoutes.HEALTH_VIEW);\n            break;\n         case VsanOverviewDetailsView.CAPACITY:\n            this.navigateToDetails(VsanRoutes.CAPACITY_VIEW);\n            break;\n         case VsanOverviewDetailsView.SERVICES:\n            this.setGeneralContext(InlineViewContextKey.SERVICES_CONTEXT_KEY);\n            this.navigateToDetails(VsanRoutes.SERVICES_VIEW);\n            break;\n         case VsanOverviewDetailsView.FAULTDOMAINS:\n            this.setGeneralContext(InlineViewContextKey.FAULT_DOMAINS_CONTEXT_KEY);\n            this.navigateToDetails(VsanRoutes.FAULT_DOMAINS_VIEW);\n            break;\n         case VsanOverviewDetailsView.RESYNCINGOBJECTS:\n            this.setGeneralContext(InlineViewContextKey.RESYNCING_OBJECTS_CONTEXT_KEY);\n            this.navigateToDetails(VsanRoutes.RESYNCING_COMPONENTS_VIEW);\n            break;\n      }\n   }\n\n   private setHealthContext(): void {\n      this.storageService.set(InlineViewContextKey.HEALTH_CHECK_CONTEXT_KEY, this.healthContext);\n   }\n\n   private navigateToDetails(details: string): void {\n      this.router.navigate([\n            \"/\" + VsanRoutes.CLUSTER_OVERVIEW_VIEW + \"/\" + this.OVERVIEW_DETAILS_PATH,\n            {outlets: {\"details\": [details]}},\n         ]);\n   }\n\n   private get healthContext(): HealthContext {\n      const healthContext: HealthContext = this.context.content as HealthContext;\n      healthContext.clusterRef = this.clusterRef;\n      return healthContext;\n   }\n\n   private setGeneralContext(key: string): void {\n      this.storageService.set(key, this.clusterRef);\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {VsanClusterOverviewComponent} from \"./vsan-cluster-overview.component\";\nimport {VsanCommonModule} from \"../common/vsan-common.module\";\nimport {VsanChartModule} from \"@component/chart/chart.module\";\nimport {DragAndDropModule} from \"@component/drag-and-drop/drag-and-drop.module\";\nimport {CardModule} from \"@component/card/card.module\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {UpgradeModule} from \"@component/upgrade/upgrade.module\";\nimport {CommonModule} from \"@angular/common\";\nimport {VsanGeneralConfigService} from \"@component/general-settings/vsan-general-config.service\";\nimport {CapacityCommonModule} from \"@component/capacity/capacity-common.module\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CapacityCardComponent} from \"./capacity-card.component\";\nimport {HealthCardComponent} from \"./health-card.component\";\nimport {HealthCheckItemModule} from \"@component/health/health-check-item.module\";\nimport {DetailViewWrapperComponent} from \"./detail-view-wrapper.component\";\nimport {PersistentStorageService} from \"@service/browser-storage.service\";\nimport {ConfigurationsCardComponent} from \"./configurations-card.component\";\nimport {VsanConfigService} from \"@generated/vsan-config-service\";\nimport {ConfigurationsModule} from \"@component/configurations/configurations.module\";\nimport {HistoricalHealthComponent} from \"./historical-health.component\";\nimport {CapacityManagementService} from \"@generated/capacity-management-service\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {CapacityDataService} from \"@generated/capacity-data-service\";\nimport {VsanStretchedClusterService} from \"@generated/vsan-stretched-cluster-service\";\nimport {FaultDomainsSummaryComponent} from \"./fault-domains-summary.component\";\nimport {ResyncingDataCardComponent} from \"./resyncing-data-card.component\";\nimport {VsanResyncingComponentsProvider} from \"@generated/vsan-resyncing-components-provider\";\n\nconst routes: Routes = [\n   {\n      path: \"\",\n      component: VsanClusterOverviewComponent,\n   },\n   {\n      path: \"details\",\n      component: DetailViewWrapperComponent,\n      children: [\n         {\n            path: \"capacity\",\n            loadChildren: () => import(\"../capacity/capacity.module\")\n                  .then(mod => mod.CapacityModule),\n            outlet: \"details\",\n         },\n         {\n            path: \"health\",\n            loadChildren: () => import(\"../health/health.module\")\n                  .then(mod => mod.HealthModule),\n            outlet: \"details\",\n         },\n         {\n            path: \"services\",\n            loadChildren: () => import(\"../services/services.module\")\n                  .then(mod => mod.ServicesModule),\n            outlet: \"details\",\n         },\n         {\n            path: \"faultDomains\",\n            loadChildren: () => import(\"../faultdomains/fault-domains.module\")\n                  .then(mod => mod.FaultDomainsModule),\n            outlet: \"details\",\n         },\n         {\n            path: \"resyncingComponents\",\n            loadChildren: () => import(\"../resync/resync-monitor.module\")\n                  .then(mod => mod.ResyncMonitorModule),\n            outlet: \"details\",\n         },\n      ],\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      VsanCommonModule,\n      VsanChartModule,\n      CapacityCommonModule,\n      ClarityModule,\n      DragAndDropModule,\n      CardModule,\n      UpgradeModule,\n      HealthCheckItemModule,\n      RouterModule.forChild(routes),\n      ConfigurationsModule,\n   ],\n   declarations: [\n      VsanClusterOverviewComponent,\n      CapacityCardComponent,\n      HealthCardComponent,\n      DetailViewWrapperComponent,\n      ConfigurationsCardComponent,\n      HistoricalHealthComponent,\n      FaultDomainsSummaryComponent,\n      ResyncingDataCardComponent,\n   ],\n   providers: [\n      VsanConfigService,\n      VsanGeneralConfigService,\n      VsanCapacityService,\n      PersistentStorageService,\n      CapacityManagementService,\n      VsanCapabilityProvider,\n      CapacityDataService,\n      VsanStretchedClusterService,\n      VsanResyncingComponentsProvider,\n   ],\n})\nexport class VsanClusterOverviewModule {}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nexport enum VsanOverviewDetailsView {\n   CAPACITY,\n   HEALTH,\n   SERVICES,\n   FAULTDOMAINS,\n   RESYNCINGOBJECTS,\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, Input} from \"@angular/core\";\nimport {HistoricalHealthConfig} from \"@generated/historical-health-config\";\nimport {ServiceUtils} from \"../services/service.utils\";\n\n@Component({\n   selector: \"historical-health-configuration\",\n   templateUrl: \"historical-health.html\",\n   styleUrls: [\"historical-health.scss\"],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HistoricalHealthComponent {\n   @Input()\n   config: HistoricalHealthConfig;\n\n   getStatusLabel(): string {\n      return ServiceUtils.enabledStateLabel(this.config.isEnabled);\n   }\n}\n"],"sourceRoot":"webpack:///"}