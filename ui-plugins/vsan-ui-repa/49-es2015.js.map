{"version":3,"sources":["./src/app/vsan/common/component/upgrade/upgrade-action.component.ts","./src/app/vsan/common/component/upgrade/upgrade.module.ts","./src/app/vsan/common/component/upgrade/upgrade-action.html","./src/app/generated/vsan-upgrade-spec.ts"],"names":[],"mappings":"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","file":"49-es2015.js","sourcesContent":["/* Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component} from \"@angular/core\";\nimport {UpgradeData} from \"@component/upgrade/upgrade.data\";\nimport {VsanUpgradeMutationProvider} from \"@generated/vsan-upgrade-mutation-provider\";\nimport {VsanUpgradePropertyProvider} from \"@generated/vsan-upgrade-property-provider\";\nimport {VsanUpgradeSpec} from \"@generated/vsan-upgrade-spec\";\nimport {ClusterComputeResource} from \"@service/client/dataservice/data-service-property\";\nimport {DataServiceClient} from \"@service/client/dataservice/data-service.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {KnowledgeBaseId} from \"@service/navigation/model/knowledge-base-id\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"upgrade-action.html\",\n   styleUrls: [\"upgrade-action.scss\"],\n   selector: \"vsan-diskmgmt-upgrade\",\n})\nexport class UpgradeActionComponent {\n\n   static readonly NO_DATA_MOVEMENT_REQUIRED_HEIGHT: number = 280;\n   KnowledgeBaseId: typeof KnowledgeBaseId = KnowledgeBaseId;\n\n   allowReducedRedundancy: boolean = false;\n   validationErrors: string[] = [];\n   title: string;\n   subtitle: string;\n   confirmText: string;\n   upgradeData: UpgradeData;\n   hasDiskFormatVersionTwo: boolean = false;\n\n   constructor(private dataService: DataServiceClient,\n         private upgradeMutationProvider: VsanUpgradeMutationProvider,\n         private upgradePropertyProvider: VsanUpgradePropertyProvider) {\n   }\n\n   async ngOnInit(): Promise<void> {\n      this.title = VsanUiUtils.getString(\"vsan.upgrade.manage.upgrade.confirm.title\");\n      this.confirmText = VsanUiUtils.getString(\"vsan.upgrade.manage.upgrade.confirm.yes\");\n\n      const context: any = VsanUiUtils.getModalContext();\n      if (context) {\n         this.subtitle = context.clusterName;\n         this.upgradeData = context.upgradeData;\n         this.hasDiskFormatVersionTwo = context.upgradeData.upgradeDiskData.minVersion <= 2;\n      } else {\n         [this.subtitle, this.hasDiskFormatVersionTwo] = await Promise.all([\n            this.dataService.getProperty(ClusterComputeResource.name, ManagedObject.contextObject),\n            this.upgradePropertyProvider.hasDiskFormatVersionTwoOrLower(ManagedObject.contextObject),\n         ]);\n      }\n\n      if (!this.dataMovementRequired) {\n         VsanUiUtils.setModalDialogHeight(UpgradeActionComponent.NO_DATA_MOVEMENT_REQUIRED_HEIGHT);\n      }\n   }\n\n   get dataMovementRequired(): boolean {\n      if (this.upgradeData && this.upgradeData.hasPrecheckRunInformation) {\n         return this.upgradeData.isDataMovementRequired;\n      }\n      return this.hasDiskFormatVersionTwo;\n   }\n\n   ok(): void {\n      // NOTE: set default values here, don't expose to user.\n      const vsanUpgradeSpec: VsanUpgradeSpec = VsanUpgradeSpec.Factory.create(\n            true, // performObjectUpgrade\n            false, // downgradeFormat\n            this.allowReducedRedundancy);\n      this.upgradeMutationProvider.performUpgrade(ManagedObject.contextObject, vsanUpgradeSpec)\n            .then((taskRef: ManagedObject) => {\n               this.close(taskRef);\n            })\n            .catch(this.handleError);\n   }\n\n   close = (taskRef?: ManagedObject) => {\n      // Just close the window\n      VsanUiUtils.closeModalDialog(taskRef);\n   };\n\n   // Display error in the wizard\n   private handleError = (error: any) => {\n      this.validationErrors.push(error);\n   };\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {UpgradeComponent} from \"@component/upgrade/upgrade.component\";\nimport {UpgradeActionComponent} from \"@component/upgrade/upgrade-action.component\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {UpgradeService} from \"@component/upgrade/upgrade.service\";\n\nconst routes: Routes = [\n   {\n      path: \"upgrade\",\n      component: UpgradeActionComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      PromptModule,\n      CommonPipeModule,\n      CommonDirectiveModule,\n      RouterModule.forChild(routes),\n   ],\n   declarations: [\n      UpgradeComponent,\n      UpgradeActionComponent,\n   ],\n   exports: [\n      UpgradeComponent,\n      UpgradeActionComponent,\n   ],\n   providers: [\n         UpgradeService,\n   ],\n})\nexport class UpgradeModule {\n}","<!--Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-default-prompt [title]=\"title\"\n                     [subtitle]=\"subtitle\"\n                     [confirmText]=\"confirmText\"\n                     (onConfirm)=\"ok()\">\n   <!-- Validation errors container -->\n   <vsan-validation *ngIf=\"validationErrors\" [(alerts)]=\"validationErrors\"></vsan-validation>\n   <form>\n      <div>\n         <ng-container *ngIf=\"dataMovementRequired\">\n            <span>{{\"vsan.upgrade.manage.dialog.content.normal.dfcDataMovement.part1\" | localized}}</span>\n            <a [external-link]=\"'vsan.common.kb' | localized\" [articleId]=\"KnowledgeBaseId.UPGRADE\" ></a>\n            <span>{{\"vsan.upgrade.manage.dialog.content.normal.dfcDataMovement.part2\" | localized}}</span>\n         </ng-container>\n         <ng-container *ngIf=\"!dataMovementRequired\">\n            <span>{{\"vsan.upgrade.manage.dialog.content.normal.dfcNoDataMovement.part1\" | localized}}</span>\n            <a [external-link]=\"'vsan.common.kb' | localized\" [articleId]=\"KnowledgeBaseId.UPGRADE\" ></a>\n            <span>{{\"vsan.upgrade.manage.dialog.content.normal.dfcNoDataMovement.part2\" | localized}}</span>\n         </ng-container>\n      </div>\n      <clr-checkbox-container *ngIf=\"dataMovementRequired\">\n         <clr-checkbox-wrapper>\n            <input id=\"allowReducedRedundancyCheckBox\"\n                   name=\"allowReducedRedundancy\"\n                   class=\"clr-checkbox\"\n                   [(ngModel)]=\"allowReducedRedundancy\"\n                   type=\"checkbox\"\n                   clrCheckbox>\n            <label for=\"allowReducedRedundancyCheckBox\">\n               {{'vsan.generalConfig.dataEfficiency.allowReducedRedundancy' | localized}}\n            </label>\n            <clr-signpost [vsan-signpost-title]=\"'vsan.generalConfig.dataEfficiency.allowReducedRedundancy.signpost.label' | localized\">\n               <clr-signpost-content *clrIfOpen clrPosition=\"bottom-right\">\n                  {{\"vsan.upgrade.manage.dialog.reducedRedundancyText\" | localized}}\n               </clr-signpost-content>\n            </clr-signpost>\n         </clr-checkbox-wrapper>\n      </clr-checkbox-container>\n   </form>\n</vsan-default-prompt>\n","\nexport interface VsanUpgradeSpec {\n\n   performObjectUpgrade: boolean;\n   downgradeFormat: boolean;\n   allowReducedRedundancy: boolean;\n} //class VsanUpgradeSpec\n\nexport module VsanUpgradeSpec{\nexport class Factory {\n\n   static create = (performObjectUpgrade: boolean, downgradeFormat: boolean, allowReducedRedundancy: boolean): VsanUpgradeSpec => {\n      return { performObjectUpgrade: performObjectUpgrade, downgradeFormat: downgradeFormat, allowReducedRedundancy: allowReducedRedundancy, };\n   }\n\n\n} //class Factory\n\n} //module VsanUpgradeSpec\n"],"sourceRoot":"webpack:///"}