{"version":3,"sources":["webpack:///src/app/vsan/common/component/capacity/capacity-common.module.ts","webpack:///src/app/vsan/common/component/datagrid/tree-datagrid.module.ts","webpack:///src/app/vsan/common/component/popup-list/popup-list.module.ts","webpack:///src/app/vsan/common/component/capacity/capacity-usage-overview.ts","webpack:///src/app/vsan/common/component/capacity/capacity-summary.html","webpack:///src/app/vsan/common/component/navigation/vsan-breadcrumb.module.ts","webpack:///src/app/vsan/common/component/capacity/capacity-usage-overview.html","webpack:///src/app/vsan/common/component/cell/common-cells.module.ts","webpack:///src/app/vsan/common/component/inventory/inventory-browser.module.ts","webpack:///src/app/vsan/common/component/capacity/capacity-summary.component.ts","webpack:///src/app/vsan/common/component/capacity/capacity-usage-overview.component.ts","webpack:///src/app/vsan/common/vsan-common.module.ts","webpack:///src/app/vsan/common/component/search/search.module.ts","webpack:///src/app/vsan/common/component/action-button/action-button.module.ts"],"names":["CapacityCommonModule","TreeDatagridModule","PopupListModule","CapacityUsageOverview","totalCapacity","VsanBreadcrumbModule","CommonCellsModule","InventoryBrowserModule","CapacitySummaryComponent","capacityService","capabilityProvider","refWatcher","loading","capacityUsages","getCapacityDataFailed","handleCapacityData","result","orderDatastoreTypes","Array","from","keys","map","datastoreType","getUsageOverview","get","watchGlobalRefreshSubscription","prototype","constructor","name","fetch","managedObject","contextObject","isDatastore","contextObjectUid","getInitialCapacityUsage","Promise","all","getIsSlackSpaceCapacitySupported","getCapacityDataPerDatastore","isSlackSpaceCapacitySupported","datastoresCapacityData","emit","getString","log","usage","getUsageName","VSAN","type","capacityData","capacityUsage","totalSpace","usageLabel","getUsageLabel","sections","getUsageSections","plotLines","getPlotLines","thresholds","warningThreshold","errorThreshold","VSAN_DIRECT","PMEM","error","formatFileSize","usedSpace","localizeNumber","asPercentage","parseCapacityOverviewDataSections","reservationChartData","parseCapacityReservationDataSections","isEmpty","push","transientCapacity","parseTransientOverviewDataSections","CapacityUsageOverviewComponent","navigationService","NO_CAPACITY_LABEL","isCluster","navigateTo","CLUSTER_CAPACITY","DATASTORE_CAPACITY","VsanCommonModule","SearchModule","ActionButtonModule"],"mappings":"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","file":"75-es5.js","sourcesContent":["/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {VsanCommonModule} from \"app/vsan/common/vsan-common.module\";\nimport {VsanCapacityService} from \"./capacity.service\";\nimport {CapacitySummaryComponent} from \"@component/capacity/capacity-summary.component\";\nimport {SystemCapacityBreakdownComponent} from \"@component/capacity/system-capacity-breakdown.component\";\nimport {UserCapacityBreakdownComponent} from \"@component/capacity/user-capacity-breakdown.component\";\nimport {VmCapacityBreakdownComponent} from \"@component/capacity/vm-capacity-breakdown.component\";\nimport {VsanChartModule} from \"@component/chart/chart.module\";\nimport {SpaceEfficiencyService} from \"@service/space-efficiency-service\";\nimport {CapacityUsageOverviewComponent} from \"@component/capacity/capacity-usage-overview.component\";\nimport {CapacityOverviewChartComponent} from \"@component/capacity/capacity-overview-chart.component\";\nimport {SnapshotCapacityBreakdownComponent} from \"@component/capacity/snapshot-capacity-breakdown.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      VsanCommonModule,\n      VsanChartModule,\n   ],\n   declarations: [\n      CapacitySummaryComponent,\n      CapacityUsageOverviewComponent,\n      SystemCapacityBreakdownComponent,\n      UserCapacityBreakdownComponent,\n      VmCapacityBreakdownComponent,\n      CapacityOverviewChartComponent,\n      SnapshotCapacityBreakdownComponent,\n   ],\n   exports: [\n      CapacitySummaryComponent,\n      SystemCapacityBreakdownComponent,\n      UserCapacityBreakdownComponent,\n      VmCapacityBreakdownComponent,\n      CapacityOverviewChartComponent,\n      SnapshotCapacityBreakdownComponent,\n   ],\n   providers: [\n      VsanCapacityService,\n      SpaceEfficiencyService,\n   ],\n})\nexport class CapacityCommonModule {\n}\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {TreeExpanderComponent} from \"@component/datagrid/tree-expander.component\";\nimport {TreeColumnComponent} from \"@component/datagrid/tree-column.component\";\nimport {EnumeratedFilterComponent} from \"./filter/enumerated-filter.component\";\nimport {EnumeratedFilterItemComponent} from \"./filter/enumerated-filter-item.component\";\nimport {EnumFilterComponent} from \"@component/datagrid/filter/enum-filter.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n   ],\n   declarations: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumeratedFilterComponent,\n      EnumFilterComponent,\n   ],\n   exports: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumFilterComponent,\n   ],\n})\nexport class TreeDatagridModule {\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {PopupListComponent} from \"@component/popup-list/popup-list.component\";\nimport {PopupListItemDirective} from \"@component/popup-list/popup-list-item.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      CommonPipeModule\n   ],\n   declarations: [\n      PopupListComponent,\n      PopupListItemDirective\n   ],\n   exports: [\n      PopupListComponent,\n      PopupListItemDirective\n   ]\n})\nexport class PopupListModule {\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChartSectionData, ChartSectionPlotLine} from \"@component/chart/model/chart-section.data\";\n\n/**\n * Used to display capacity usage in Summary->vSAN Overview portlet.\n */\nexport class CapacityUsageOverview {\n   name: string;\n   totalCapacity: number;\n   usageLabel: string;\n   sections: ChartSectionData[];\n   plotLines: ChartSectionPlotLine[];\n   warningThreshold: number;\n   errorThreshold: number;\n\n   get hasCapacity(): boolean {\n      return this.totalCapacity > 0;\n   }\n}\n","<!-- Copyright 2020 VMware, Inc. All rights reserved. VMware Confidential -->\n<vsan-capacity-usage-overview *ngFor=\"let usage of capacityUsages; let i = index\"\n                              [loading]=\"loading\"\n                              [capacityUsage]=\"usage\"\n                              [isDetailVisible]=\"i==0\">\n</vsan-capacity-usage-overview>\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {VsanBreadcrumbNavComponent} from \"./vsan-breadcrumb-nav.component\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\n\n@NgModule({\n   imports: [CommonModule, ClarityModule, CommonDirectiveModule, CommonPipeModule],\n   declarations: [VsanBreadcrumbNavComponent],\n   exports: [\n      VsanBreadcrumbNavComponent,\n   ],\n})\nexport class VsanBreadcrumbModule {}\n","<!-- Copyright 2020 VMware, Inc. All rights reserved. VMware Confidential -->\n<div class=\"clr-row\">\n   <label *ngIf=\"capacityUsage.name\" class=\"clr-col-3 clr-control-label\">\n      {{capacityUsage.name}}\n   </label>\n   <div class=\"bar-chart-container\" [ngClass]=\"capacityUsage.name ? 'clr-col-7' : 'clr-col-10'\">\n      <div *ngIf=\"loading\">\n         <span class=\"spinner spinner-inline\"></span>\n         <span>{{\"vsan.loading\" | localized}}</span>\n      </div>\n      <ng-container *ngIf=\"!loading\">\n         <ng-container *ngIf=\"!capacityUsage.hasCapacity\">\n            {{NO_CAPACITY_LABEL}}\n         </ng-container>\n         <ng-container *ngIf=\"capacityUsage.hasCapacity\">\n            <span vsan-show-title>{{capacityUsage.usageLabel}}</span>\n            <vsan-capacity-bar-chart [sections]=\"capacityUsage.sections\"\n                                     [total]=\"capacityUsage.totalCapacity\"\n                                     [plotLines]=\"capacityUsage.plotLines\"\n                                     [warningThreshold]=\"capacityUsage.warningThreshold\"\n                                     [errorThreshold]=\"capacityUsage.errorThreshold\">\n            </vsan-capacity-bar-chart>\n         </ng-container>\n      </ng-container>\n   </div>\n   <a id=\"vsan-usage-details\"\n      *ngIf=\"isDetailVisible\"\n      href=\"javascript://\"\n      class=\"clr-col-2 details\"\n      (click)=\"navigateToCapacity()\">\n      {{\"vsan.cluster.summary.portlet.details.label\" | localized}}\n   </a>\n</div>\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {HealthStatusCell} from \"@component/cell/health-status-cell.component\";\nimport {LabelCell} from \"@component/cell/label-cell.component\";\nimport {StoragePolicyCell} from \"@component/cell/storage-policy-cell.component\";\nimport {MorCell} from \"@component/cell/mor-cell.component\";\nimport {IconItemComponent} from \"@component/cell/icon-item.component\";\nimport {HealthStateItemComponent} from \"@component/cell/health-state-item.component\";\nimport {ListCell} from \"@component/cell/list-cell.component\";\nimport {PspHealthStateItemComponent} from \"@component/cell/psp-health-state-item.component\";\nimport {HealthTestValueComponent} from \"@component/cell/health-test-value.component\";\nimport {HealthLinkCellComponent} from \"@component/cell/health-link-cell.component\";\nimport {HealthMorCellComponent} from \"@component/cell/health-mor-cell.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n      CommonDirectiveModule,\n   ],\n   // TODO: (vasilevd) Move health specific components to a separate common health module\n   declarations: [\n      HealthStatusCell,\n      HealthTestValueComponent,\n      LabelCell,\n      StoragePolicyCell,\n      MorCell,\n      HealthMorCellComponent,\n      ListCell,\n      IconItemComponent,\n      HealthStateItemComponent,\n      PspHealthStateItemComponent,\n      HealthLinkCellComponent,\n   ],\n   exports: [\n      HealthStatusCell,\n      HealthTestValueComponent,\n      LabelCell,\n      StoragePolicyCell,\n      MorCell,\n      HealthMorCellComponent,\n      ListCell,\n      IconItemComponent,\n      HealthStateItemComponent,\n      PspHealthStateItemComponent,\n      HealthLinkCellComponent,\n   ],\n})\nexport class CommonCellsModule {\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {InventoryBrowserComponent} from \"@component/inventory/inventory-browser.component\";\nimport {InventoryNodeComponent} from \"@component/inventory/inventory-node.component\";\nimport {WitnessCandidateInventoryService} from \"@generated/witness-candidate-inventory-service\";\nimport {DatacenterInventoryService} from \"@generated/datacenter-inventory-service\";\nimport {NetworkInventoryService} from \"@generated/network-inventory-service\";\nimport {ComputeInventoryService} from \"@generated/compute-inventory-service\";\nimport {IoInsightInventoryService} from \"@generated/io-insight-inventory-service\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {TreeNodeComponent} from \"@component/inventory/tree-view/tree-node.component\";\nimport {TreeViewComponent} from \"@component/inventory/tree-view/tree-view.component\";\nimport {DropdownObjectSelectorComponent} from \"@component/inventory/dropdown-object-selector/dropdown-object-selector.component\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {InventoryNodesComponent} from \"@component/inventory/inventory-nodes.component\";\nimport {TreeNodesComponent} from \"@component/inventory/tree-view/tree-nodes.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule,\n      SearchModule,\n      CommonDirectiveModule,\n   ],\n   declarations: [\n      InventoryBrowserComponent,\n      InventoryNodesComponent,\n      InventoryNodeComponent,\n      TreeNodeComponent,\n      TreeNodesComponent,\n      TreeViewComponent,\n      DropdownObjectSelectorComponent,\n   ],\n   exports: [\n      InventoryBrowserComponent,\n      DropdownObjectSelectorComponent,\n      TreeViewComponent,\n   ],\n   providers: [\n      WitnessCandidateInventoryService,\n      DatacenterInventoryService,\n      NetworkInventoryService,\n      ComputeInventoryService,\n      IoInsightInventoryService,\n   ],\n})\nexport class InventoryBrowserModule {\n}","/* Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, OnInit, Output} from \"@angular/core\";\nimport {CapacityUsageOverview} from \"@component/capacity/capacity-usage-overview\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {ChartSectionData} from \"@component/chart/model/chart-section.data\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject, ManagedObjectUtils} from \"@service/managed-object\";\nimport {DiskMgmtUtil} from \"@util/disk-mgmt.util\";\nimport {Logger} from \"@util/logger\";\nimport {ReferenceWatcher} from \"@util/reference-watcher\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * The cluster and datastore summary page use this component.\n */\n@Component({\n   templateUrl: \"capacity-summary.html\",\n   styleUrls: [\"capacity-summary.scss\"],\n   selector: \"vsan-capacity-summary\",\n   providers: [ReferenceWatcher],\n})\nexport class CapacitySummaryComponent implements OnInit {\n   loading: boolean = false;\n   // On datastore->summary view, we only display vSAN usage bar chart without label \"vSAN usage\".\n   isDatastore: boolean;\n   capacityUsages: CapacityUsageOverview[] = [];\n\n   @Output()\n   private getCapacityDataFailed: EventEmitter<string> = new EventEmitter<string>();\n\n   private isSlackSpaceCapacitySupported: boolean;\n   private datastoresCapacityData: Map<DatastoreType, CapacityData>;\n\n   constructor(private capacityService: VsanCapacityService,\n         private capabilityProvider: VsanCapabilityProvider,\n         private refWatcher: ReferenceWatcher) {\n      this.refWatcher.watchGlobalRefreshSubscription(CapacitySummaryComponent.prototype.constructor.name);\n   }\n\n   ngOnInit(): void {\n      this.fetch();\n   }\n\n   @RefreshHandler\n   async fetch(): Promise<void> {\n      this.loading = true;\n      const managedObject: ManagedObject = ManagedObject.contextObject;\n      this.isDatastore = ManagedObjectUtils.isDatastore(ManagedObject.contextObjectUid);\n      // Set capacityUsages after setting this.isDatastore.\n      this.capacityUsages = this.getInitialCapacityUsage();\n\n      try {\n         [\n            this.isSlackSpaceCapacitySupported,\n            this.datastoresCapacityData,\n         ] = await Promise.all([\n            this.capabilityProvider.getIsSlackSpaceCapacitySupported(managedObject),\n            this.capacityService.getCapacityDataPerDatastore(managedObject, true),\n         ]);\n         this.handleCapacityData(this.datastoresCapacityData);\n      } catch (error) {\n         this.getCapacityDataFailed.emit(VsanUiUtils.getString(\"vsan.capacity.summary.errors.message\"));\n         Logger.log(\"Unable to query capacity overview data: \" + error);\n      } finally {\n         this.loading = false;\n      }\n   }\n\n   private getInitialCapacityUsage(): CapacityUsageOverview[] {\n      const usage: CapacityUsageOverview = new CapacityUsageOverview();\n      usage.name = this.getUsageName(DatastoreType.VSAN);\n      return [usage];\n   }\n\n   private handleCapacityData = (result: Map<DatastoreType, CapacityData>) => {\n      if (!result) {\n         return;\n      }\n      this.capacityUsages = DiskMgmtUtil.orderDatastoreTypes(Array.from(result.keys()))\n            .map((datastoreType: DatastoreType) => this.getUsageOverview(datastoreType,\n                  result.get(datastoreType)));\n   };\n\n   private getUsageOverview(type: DatastoreType, capacityData: CapacityData): CapacityUsageOverview {\n      const capacityUsage: CapacityUsageOverview = new CapacityUsageOverview();\n      capacityUsage.name = this.getUsageName(type);\n      capacityUsage.totalCapacity = capacityData.totalSpace;\n      capacityUsage.usageLabel = this.getUsageLabel(capacityData);\n      capacityUsage.sections = this.getUsageSections(capacityData);\n      capacityUsage.plotLines = this.capacityService.getPlotLines(capacityData, true);\n\n      if (capacityData.thresholds) {\n         capacityUsage.warningThreshold = capacityData.thresholds.warningThreshold;\n         capacityUsage.errorThreshold = capacityData.thresholds.errorThreshold;\n      }\n\n      return capacityUsage;\n   }\n\n   private getUsageName(type: DatastoreType): string {\n      switch (type) {\n         case DatastoreType.VSAN:\n            return this.isDatastore\n                  ? null\n                  : VsanUiUtils.getString(\"vsan.capacity.usage.label\");\n         case DatastoreType.VSAN_DIRECT:\n            return VsanUiUtils.getString(\"vsan.capacity.direct.usage.label\");\n         case DatastoreType.PMEM:\n            return VsanUiUtils.getString(\"vsan.capacity.pmem.usage.label\");\n         default:\n            Logger.error(\"Invalid datastore type\");\n            return \"\";\n      }\n   }\n\n   private getUsageLabel(capacityData: CapacityData): string {\n      return VsanUiUtils.getString(\n            \"vsan.capacity.overview.label\",\n            VsanUiUtils.formatFileSize(capacityData.usedSpace),\n            VsanUiUtils.formatFileSize(capacityData.totalSpace),\n            VsanUiUtils.localizeNumber(VsanUiUtils.asPercentage(capacityData.usedSpace, capacityData.totalSpace)));\n   }\n\n   private getUsageSections(capacityData: CapacityData): ChartSectionData[] {\n      // TODO: (cuicollins) Unify this method and CapacityOverviewComponent.parseSlackSpaceCapacity.\n      const sections: ChartSectionData[] = this.capacityService.parseCapacityOverviewDataSections(capacityData);\n\n      if (!this.isSlackSpaceCapacitySupported) {\n         return sections;\n      }\n\n      const reservationChartData: ChartSectionData[] =\n            this.capacityService.parseCapacityReservationDataSections(capacityData);\n      if (!VsanUiUtils.isEmpty(reservationChartData)) {\n         sections.push(...reservationChartData);\n      }\n\n      // Add transientCapacity last to make sure it appears at the end of the bar chart\n      const transientCapacity: ChartSectionData = this.capacityService.parseTransientOverviewDataSections(\n            capacityData);\n      if (transientCapacity) {\n         sections.push(transientCapacity);\n      }\n\n      return sections;\n   }\n}\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {CapacityUsageOverview} from \"@component/capacity/capacity-usage-overview\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {ManagedObject, ManagedObjectUtils} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"capacity-usage-overview.html\",\n   styleUrls: [\"capacity-usage-overview.scss\"],\n   selector: \"vsan-capacity-usage-overview\",\n})\nexport class CapacityUsageOverviewComponent {\n   readonly NO_CAPACITY_LABEL: string = VsanUiUtils.formatFileSize(0);\n\n   @Input()\n   loading: boolean;\n\n   @Input()\n   isDetailVisible: boolean;\n\n   @Input()\n   capacityUsage: CapacityUsageOverview;\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   navigateToCapacity(): void {\n      if (ManagedObjectUtils.isCluster(ManagedObject.contextObject)) {\n         this.navigationService.navigateTo(PlatformExtension.CLUSTER_CAPACITY);\n      } else {\n         this.navigationService.navigateTo(PlatformExtension.DATASTORE_CAPACITY);\n      }\n   }\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {ActionButtonModule} from \"@component/action-button/action-button.module\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {CommonCellsModule} from \"@component/cell/common-cells.module\";\nimport {InventoryBrowserModule} from \"@component/inventory/inventory-browser.module\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {TreeDatagridModule} from \"@component/datagrid/tree-datagrid.module\";\nimport {DatetimePickerModule} from \"@component/datetime-picker/datetime-picker.module\";\nimport {PopupListModule} from \"@component/popup-list/popup-list.module\";\nimport {VsanBreadcrumbModule} from \"@component/navigation/vsan-breadcrumb.module\";\n\n@NgModule({\n   imports: [\n         CommonDirectiveModule,\n         CommonPipeModule,\n         ValidationModule,\n         ActionButtonModule,\n         PromptModule,\n         CommonCellsModule,\n         InventoryBrowserModule,\n         SearchModule,\n         TreeDatagridModule,\n         DatetimePickerModule,\n         PopupListModule,\n         VsanBreadcrumbModule,\n   ],\n   exports: [\n      CommonDirectiveModule,\n      CommonPipeModule,\n      ValidationModule,\n      ActionButtonModule,\n      PromptModule,\n      CommonCellsModule,\n      InventoryBrowserModule,\n      SearchModule,\n      TreeDatagridModule,\n      DatetimePickerModule,\n      PopupListModule,\n      VsanBreadcrumbModule,\n   ],\n})\nexport class VsanCommonModule { }","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {SearchComponent} from \"@component/search/search.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule\n   ],\n   declarations: [\n      SearchComponent\n   ],\n   exports: [\n      SearchComponent\n   ],\n})\nexport class SearchModule {\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ActionButtonSeparatorComponent} from \"@component/action-button/action-button-separator.component\";\nimport {ButtonTitleDirective} from \"@component/action-button/button-title.directive\";\nimport {ButtonGroupDirective} from \"@component/action-button/button-group.directive\";\nimport {ButtonGroupWrapDirective} from \"@component/action-button/button-group-wrap.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n   ],\n   declarations: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ],\n   exports: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ]\n})\nexport class ActionButtonModule {\n}\n"]}