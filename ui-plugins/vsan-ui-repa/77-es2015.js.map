{"version":3,"sources":["./src/app/vsan/resync/view/resync-monitor.component.ts","./src/app/vsan/resync/action/edit-resync-throttling.html","./src/app/generated/resync-throttling-spec.ts","./src/app/vsan/common/directive/clr-button-group/clr-button-group-common.directive.ts","./src/app/vsan/resync/view/resync-monitor.html","./src/app/vsan/resync/view/resync-monitor-list.html","./src/app/vsan/resync/view/resync-monitor-list.component.ts","./src/app/vsan/resync/resync-monitor.module.ts","./src/app/vsan/resync/action/edit-resync-throttling.component.ts"],"names":[],"mappings":"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","file":"77-es2015.js","sourcesContent":["/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {DelayTimerData} from \"@generated/delay-timer-data\";\nimport {ObjectHealthIncomplianceReason} from \"@generated/object-health-incompliance-reason\";\nimport {ObjectHealthRebuildState} from \"@generated/object-health-rebuild-state\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {ResyncComponent} from \"@generated/resync-component\";\nimport {ResyncMonitorData} from \"@generated/resync-monitor-data\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {VsanConfigService} from \"@generated/vsan-config-service\";\nimport {VsanHealthMutationProvider} from \"@generated/vsan-health-mutation-provider\";\nimport {VsanObjectHealthState} from \"@generated/vsan-object-health-state\";\nimport {VsanResyncingComponentsProvider} from \"@generated/vsan-resyncing-components-provider\";\nimport {InlineViewContextKey} from \"@model/inline-view-context-key.data\";\nimport {TimePipe} from \"@pipe/TimePipe\";\nimport {PersistentStorageService} from \"@service/browser-storage.service\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {HealthContext} from \"@service/navigation/context/health-context\";\nimport {VirtualObjectsContext} from \"@service/navigation/context/virtual-objects-context\";\nimport {NavigationService, PlatformExtension} from \"@service/navigation/navigation.service\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {Logger} from \"@util/logger\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {BaseHealthState} from \"@util/vsan-health-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ResyncObjectsUtil} from \"../resync-objects-util\";\nimport {ResyncMonitorListComponent} from \"./resync-monitor-list.component\";\nimport ResyncReasonCode = ResyncComponent.ResyncReasonCode;\nimport ResyncStatusCode = ResyncComponent.ResyncStatusCode;\n\n@Component({\n   templateUrl: \"resync-monitor.html\",\n   styleUrls: [\"resync-monitor.scss\"],\n   selector: \"vsan-resync-monitor\",\n})\nexport class ResyncMonitorComponent implements OnInit {\n   VsanUiUtils: typeof VsanUiUtils = VsanUiUtils;\n   ResyncMonitorComponent: typeof ResyncMonitorComponent = ResyncMonitorComponent;\n   ResyncMonitorListComponent: typeof ResyncMonitorListComponent = ResyncMonitorListComponent;\n\n   private readonly HEALTH_STATES_WITH_DELAY: BaseHealthState[] = [\n      VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_NO_REBUILD_DELAY_TIMER,\n      ObjectHealthIncomplianceReason.REDUCED_AVAILABILITY_WITH_DURABILITY,\n      ObjectHealthIncomplianceReason.REDUCED_AVAILABILITY_WITHOUT_DURABILITY,\n      ObjectHealthRebuildState.SCHEDULED];\n\n   private readonly HEALTH_STATES_WITHOUT_DELAY: BaseHealthState[] = [\n      VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_NO_REBUILD,\n      ObjectHealthIncomplianceReason.REDUCED_AVAILABILITY_WITH_DURABILITY,\n      ObjectHealthIncomplianceReason.REDUCED_AVAILABILITY_WITHOUT_DURABILITY,\n      ObjectHealthRebuildState.NONE];\n\n   private static readonly REFRESH_SUMMARY_TIMEOUT_MS: number = 10 * 1000;\n   private static readonly TIME_FORMATTER: TimePipe = new TimePipe();\n   private static readonly DISK_CAPACITY_TEST_ID: string = \"com.vmware.vsan.health.test.physdiskcapacity\";\n\n   readonly limitOptions: number[] = [50, 100, 150, 200];\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   private timer: any;\n\n   private clusterCapabilityData: VsanCapabilityData;\n   isResyncETAImprovementSupported: boolean = false;\n\n   static readonly ALL_INTENT: string = \"all\";\n   selectedIntent: string | ResyncReasonCode = ResyncMonitorComponent.ALL_INTENT;\n   intentList: ResyncReasonCode[] = [\n      ResyncReasonCode.evacuate,\n      ResyncReasonCode.dying_evacuate,\n      ResyncReasonCode.rebalance,\n      // ResyncReasonCode.repair and ResyncReasonCode.reconfigure have the same label, just show one on UI.\n      ResyncReasonCode.reconfigure,\n      ResyncReasonCode.stale,\n      ResyncReasonCode.merge_concat,\n      ResyncReasonCode.object_format_change,\n      ResyncReasonCode.VsanSyncReason_Unknown,\n   ];\n\n   selectedStatus: ResyncStatusCode = ResyncStatusCode.active;\n   statusList: ResyncStatusCode[] = [\n      ResyncStatusCode.active,\n      ResyncStatusCode.queued,\n      ResyncStatusCode.suspended,\n   ];\n\n   resyncingObjectsData: ResyncMonitorData;\n   loadingResyncingObjects: boolean = false;\n\n   allowReload: boolean = false;\n   resyncData: ResyncMonitorData;\n   alertMessages: string[];\n   showPartitionWarning: boolean;\n   isResyncThrottlingSupported: boolean;\n   isResyncFilterSupported: boolean;\n   hasEditPermission: boolean;\n\n   activeComponentsToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n   queuedComponentsToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n   suspendedComponentsToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n\n   activeBytesToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n   queuedBytesToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n   suspendedBytesToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n\n   totalETAToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n   activeETAToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n   queuedETAToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n   suspendedETAToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n\n   scheduledObjectsToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n   pendingObjectsToResync: string = VsanUiUtils.getString(\"vsan.loading\");\n   hasPendingObjectsToResync: boolean;\n\n   private _limitResults: number = 100;\n\n   get limitResults(): number {\n      return this._limitResults;\n   }\n\n   set limitResults(value: number) {\n      // The Number function call is needed because runtime the setter is invoked with a \"string\" value.\n      this._limitResults = Number(value);\n   }\n\n   private clusterRef: ManagedObject;\n\n   constructor(private vsanResyncProvider: VsanResyncingComponentsProvider,\n         private taskService: TaskMonitorService,\n         private configService: VsanConfigService,\n         private permissionService: PermissionService,\n         private healthMutationProvider: VsanHealthMutationProvider,\n         private capabilityProvider: VsanCapabilityProvider,\n         private storageService: PersistentStorageService,\n         private navigationService: NavigationService) {\n   }\n\n   ngOnInit(): void {\n      this.clusterRef = this.getClusterRefFromLocalStorage() || ManagedObject.contextObject;\n      this.retrieveData().then(() => {\n         this.isResyncETAImprovementSupported = this.clusterCapabilityData.isResyncETAImprovementSupported;\n         this.fetch();\n      }).catch(error => Logger.error(error));\n   }\n\n   private getClusterRefFromLocalStorage(): ManagedObject {\n      return this.storageService.pop(InlineViewContextKey.RESYNCING_OBJECTS_CONTEXT_KEY);\n   }\n\n   private async retrieveData(): Promise<void> {\n      [this.clusterCapabilityData, this.hasEditPermission] = await Promise.all([\n         this.capabilityProvider.getClusterCapabilityData(this.clusterRef),\n         this.permissionService.hasPermissions(this.clusterRef, [Privileges.EDIT_CLUSTER()])]);\n   }\n\n   @RefreshHandler\n   fetch(): void {\n      if (!this.isResyncETAImprovementSupported) {\n         this.updatePage();\n      } else {\n         this.updateSummaryData();\n         this.updateResyncingObjects();\n      }\n   }\n\n   /**\n    * Update all data on this page when resync ETA improvement is not supported.\n    */\n   private updatePage = () => {\n      this.resyncData = null;\n      this.loadingResyncingObjects = true;\n      this.resyncingObjectsData = null;\n\n      this.vsanResyncProvider.getResyncingData(this.clusterRef, this.limitResults)\n            .then((result: ResyncMonitorData) => {\n               this.loadingResyncingObjects = false;\n               this.resyncingObjectsData = result;\n               this.handleResyncData(result);\n            }, (error) => {\n               this.alertMessages = [VsanUiUtils.getString(\"vsan.monitor.resyncComponents.errorLoadingData\")];\n               this.loadingResyncingObjects = false;\n               this.allowReload = true;\n               // TODO (REPA) [mavrodievd] Replace with ResyncMonitorDataFactory.createEmpty() once we fully migrate to REPA.\n               this.resyncData = ResyncMonitorData.Factory.create.call(this, new Array(20).fill(null));\n            });\n   };\n\n   private get isThrottlingButtonHidden(): boolean {\n      return this.clusterCapabilityData.isAdaptiveResyncOnlySupported;\n   }\n\n   private handleResyncData = (vsanResyncData: ResyncMonitorData) => {\n      this.resyncData = vsanResyncData;\n      this.showPartitionWarning = vsanResyncData.isVsanClusterPartitioned;\n\n      this.isResyncThrottlingSupported = vsanResyncData.isResyncThrottlingSupported &&\n            !this.isThrottlingButtonHidden;\n\n      this.isResyncFilterSupported = vsanResyncData.isResyncFilterApiSupported;\n\n      this.alertMessages = [];\n      if (this.resyncData.delayTimerData && this.resyncData.delayTimerData.errorMessage) {\n         this.alertMessages.push(this.resyncData.delayTimerData.errorMessage);\n      }\n\n      if (this.isResyncETAImprovementSupported) {\n         this.updateComponentsToResyncLabels();\n         this.updateBytesToResyncLabels();\n         this.updateETAResyncLabels();\n         this.updateScheduledResyncLabels();\n      }\n      this.srOnlyMessage = VsanUiUtils.getString(\"vsan.monitor.resyncComponents.srMessage.resyncingData\");\n   };\n\n   /**\n    * Only refresh the summary data in the top pane when auto-refresh(resync ETA improvement is supported).\n    */\n   private updateSummaryData = () => {\n      this.vsanResyncProvider.getResyncingDataForAutoRefresh(this.clusterRef)\n            .then((result: ResyncMonitorData) => {\n               this.handleResyncData(result);\n               clearTimeout(this.timer);\n               // Auto refresh the top pane every 10 seconds.\n               this.timer = setTimeout(() => this.updateSummaryData(),\n                     ResyncMonitorComponent.REFRESH_SUMMARY_TIMEOUT_MS);\n            }, (error) => {\n               this.alertMessages = [VsanUiUtils.getString(\"vsan.monitor.resyncComponents.errorLoadingData\")];\n               this.allowReload = true;\n               // TODO (REPA) [mavrodievd] Replace with ResyncMonitorDataFactory.createEmpty() once we fully migrate to REPA.\n               this.resyncData = ResyncMonitorData.Factory.create.call(this, new Array(20).fill(null));\n               this.updateComponentsToResyncLabels();\n               this.updateBytesToResyncLabels();\n               this.updateETAResyncLabels();\n               this.updateScheduledResyncLabels();\n            });\n   };\n\n   refresh = () => {\n      if (!this.isResyncETAImprovementSupported) {\n         this.updatePage();\n      } else {\n         this.updateResyncingObjects();\n      }\n   };\n\n   /**\n    * Only update resyncing objects in the bottom pane after clicking Refresh button\n    * when supporting resync ETA improvement.\n    */\n   updateResyncingObjects = () => {\n      this.loadingResyncingObjects = true;\n      this.resyncingObjectsData = null;\n\n      this.vsanResyncProvider.getVsanDatastoreResyncingData(this.clusterRef, this.limitResults,\n            this.getResyncTypes(), this.selectedStatus.toString()).then(result => {\n         this.loadingResyncingObjects = false;\n         this.resyncingObjectsData = result;\n\n         if (this.selectedStatus === ResyncComponent.ResyncStatusCode.queued) {\n            if (!!this.resyncingObjectsData.bytesToResync || !!this.resyncingObjectsData.componentsToSync) {\n               this.resyncingObjectsData.components = [this.createQueuedComponent(\n                     this.resyncingObjectsData.bytesToResync, this.resyncingObjectsData.componentsToSync)];\n            }\n         }\n         this.srOnlyMessage = VsanUiUtils.getString(\"vsan.monitor.resyncComponents.srMessage.resyncingObjects\");\n      }).catch(error => {\n         this.loadingResyncingObjects = false;\n         this.alertMessages = [VsanUiUtils.getString(\"vsan.monitor.resyncComponents.list.error\")];\n         this.allowReload = true;\n         Logger.error(\"Unable to query resyncing objects. \" + error);\n      });\n   };\n\n   private getResyncTypes = (): string[] => {\n      if (this.selectedIntent === ResyncMonitorComponent.ALL_INTENT) {\n         // Using \"null\" to query all resyncing objects.\n         return [null];\n      } else if (this.selectedIntent === ResyncReasonCode.reconfigure) {\n         // repair and reconfigure have the same label \"Compliance\",\n         // we need to query data for both of them when selecting \"Compliance\" on the UI.\n         return [ResyncReasonCode.repair.toString(), ResyncReasonCode.reconfigure.toString()];\n      } else {\n         return [this.selectedIntent.toString()];\n      }\n   };\n\n   private createQueuedComponent = (bytes: number, components: number): ResyncComponent => {\n      const name: string = components === 1 ?\n            VsanUiUtils.getString(\"vsan.monitor.resyncComponents.queued.object\") :\n            VsanUiUtils.getString(\"vsan.monitor.resyncComponents.queued.objects\", components);\n      return ResyncComponent.Factory.create(name, null, null, null, null, bytes, null, null, null, true, null, null);\n   };\n\n   getStatusLabel = (status: ResyncStatusCode) => {\n      if (!status) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n\n      switch (status) {\n         case ResyncStatusCode.active:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.status.active\");\n         case ResyncStatusCode.queued:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.status.queued\");\n         case ResyncStatusCode.suspended:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.status.suspended\");\n         default:\n            throw new Error(\"Invalid resync status received: \" + status);\n      }\n   };\n\n   getSummaryResyncEtaLabel = (resyncingObjectsData: ResyncMonitorData) => {\n      let noETADefaultValue: string = VsanUiUtils.getString(\"vsan.monitor.resyncSummary.calculatingEta\");\n      // for suspended objects no ETA can be provided\n      if (this.selectedStatus === ResyncStatusCode.suspended) {\n         noETADefaultValue = VsanUiUtils.getString(\"vsan.monitor.resyncSummary.resyncSuspended\");\n      }\n\n      const etaValue: string = !resyncingObjectsData.etaToResync && resyncingObjectsData.bytesToResync\n            ? noETADefaultValue : ResyncMonitorComponent.TIME_FORMATTER.transform(resyncingObjectsData.etaToResync);\n\n      return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.list.eta.label\",\n            ResyncMonitorListComponent.getReasonLabel(this.selectedIntent as ResyncReasonCode), etaValue);\n   };\n\n   get pageDescription(): string {\n      return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.header\",\n            this.isResyncETAImprovementSupported ? \"\" : VsanUiUtils.getString(\"vsan.monitor.resyncComponents.header2\"));\n   }\n\n   navigateToHealthPage = () => {\n      const context: HealthContext = {\n         selectedSubTestId: ResyncMonitorComponent.DISK_CAPACITY_TEST_ID,\n      };\n      this.navigationService.navigateTo(PlatformExtension.CLUSTER_HEALTH, null, context);\n   };\n\n   get delayTimer(): string {\n      if (!this.resyncData) {\n         return VsanUiUtils.getString(\"vsan.loading\");\n      } else if (!this.resyncData.delayTimerData) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      } else {\n         const delayTimerData: DelayTimerData = this.resyncData.delayTimerData;\n         if (!delayTimerData.isSupported) {\n            return VsanUiUtils.getString(\"vsan.monitor.resyncSummary.delayTimer.notSupported\");\n         } else {\n            if (delayTimerData.delayTimer === 1) {\n               return VsanUiUtils.getString(\"vsan.monitor.resyncSummary.delayTimer.minute\");\n            } else {\n               return VsanUiUtils.getString(\"vsan.monitor.resyncSummary.delayTimer.minutes\", delayTimerData.delayTimer);\n            }\n         }\n      }\n   }\n\n   get componentsCount(): string {\n      if (!this.resyncData) {\n         return VsanUiUtils.getString(\"vsan.loading\");\n      } else if (VsanUiUtils.isUnset(this.resyncData.componentsToSync)) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      } else {\n         return this.resyncData.componentsToSync + \"\";\n      }\n   }\n\n   get bytesLeftToResync(): string {\n      if (!this.resyncData) {\n         return VsanUiUtils.getString(\"vsan.loading\");\n      } else if (VsanUiUtils.isUnset(this.resyncData.bytesToResync)) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      } else {\n         return VsanUiUtils.formatFileSize(this.resyncData.bytesToResync);\n      }\n   }\n\n   get etaToCompliance(): string | number {\n      if (!this.resyncData) {\n         return VsanUiUtils.getString(\"vsan.loading\");\n      } else if (VsanUiUtils.isUnset(this.resyncData.etaToResync)) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      } else if (this.resyncData.etaToResync <= 0) {\n         return VsanUiUtils.getString(\"vsan.monitor.resyncSummary.eta.unknown\");\n      } else {\n         return this.resyncData.etaToResync;\n      }\n   }\n\n   get scheduledResync(): string {\n      return ResyncObjectsUtil.getScheduledResync(this.resyncData, this.isResyncETAImprovementSupported);\n   }\n\n   navigateToVirtualObjects = (hasDelayTimer: boolean) => {\n      const context: VirtualObjectsContext = {};\n      context.filterHealthStates = hasDelayTimer ? this.HEALTH_STATES_WITH_DELAY : this.HEALTH_STATES_WITHOUT_DELAY;\n\n      this.navigationService.navigateTo(PlatformExtension.VIRTUAL_OBJECTS, null, context);\n   };\n\n\n   get isResyncNowEnabled(): boolean {\n      if (!this.resyncData || !this.resyncData.repairTimerData || !this.resyncData.repairTimerData.isSupported) {\n         return false;\n      }\n\n      return this.isResyncETAImprovementSupported\n            ? this.resyncData.repairTimerData.objectsCountWithRepairTimer > 0\n            : this.resyncData.repairTimerData.objectsCount > 0;\n   }\n\n   onResyncNowClicked(): void {\n      this.healthMutationProvider.repairClusterObjectsImmediate(this.clusterRef)\n            .then(r => this.fetch())\n            .catch((err) => {\n               Logger.error(err);\n               this.alertMessages = [VsanUiUtils.getString(\"vsan.monitor.cluster.repair.error\")];\n               this.allowReload = false;\n            });\n   }\n\n   onResyncThrottling(): void {\n      new ModalBuilder(\"resyncingComponents/editThrottling\")\n            .setSize(700, 510)\n            .open({\n               resyncThresholdValue: this.resyncData.resyncThrottlingValue,\n            })\n            .then((taskRef: ManagedObject) => this.awaitTask(taskRef));\n   }\n\n   awaitTask = (task: ManagedObject): void => {\n      // Await task completion and notify parent view so it gets refreshed\n      this.taskService.getAwaitResult(task)\n            .then(() => {\n               this.configService.getResyncIopsLimit(this.clusterRef)\n                     .then(value => this.resyncData.resyncThrottlingValue = value)\n                     .catch(this.handleResyncThrottlingValueError);\n            }).catch(this.handleTaskStatusError);\n   };\n\n   private handleResyncThrottlingValueError = (error: any): void => {\n      Logger.error(\"Unable to get RESYNC_THROTTLING_PROPERTY result. Check vpshere client logs for errors.\", error);\n   };\n\n   private handleTaskStatusError = (error: any): void => {\n      Logger.error(\"Unable to get task status result. Check vpshere client logs for errors.\", error);\n   };\n\n   get resyncingObjectsSummaryVisible(): boolean {\n      return !this.loadingResyncingObjects && this.hasResyncingObjects &&\n            this.selectedIntent.toString() !== ResyncMonitorComponent.ALL_INTENT;\n   }\n\n   get hasResyncingObjects(): boolean {\n      return !!this.resyncingObjectsData && !!this.resyncingObjectsData.components &&\n            this.resyncingObjectsData.components.length > 0;\n   }\n\n   private updateComponentsToResyncLabels = () => {\n      if (!this.resyncData) {\n         this.activeComponentsToResync = VsanUiUtils.getString(\"vsan.loading\");\n         this.queuedComponentsToResync = VsanUiUtils.getString(\"vsan.loading\");\n         this.suspendedComponentsToResync = VsanUiUtils.getString(\"vsan.loading\");\n      } else if (VsanUiUtils.isUnset(this.resyncData.activeComponentsToResync) &&\n            VsanUiUtils.isUnset(this.resyncData.queuedComponentsToResync) &&\n            VsanUiUtils.isUnset(this.resyncData.suspendedComponentsToResync)) {\n         this.activeComponentsToResync = VsanUiUtils.getString(\"vsan.na.label\");\n         this.queuedComponentsToResync = VsanUiUtils.getString(\"vsan.na.label\");\n         this.suspendedComponentsToResync = VsanUiUtils.getString(\"vsan.na.label\");\n      } else {\n         this.activeComponentsToResync = this.resyncData.activeComponentsToResync + \"\";\n         this.queuedComponentsToResync = this.resyncData.queuedComponentsToResync + \"\";\n         this.suspendedComponentsToResync = this.resyncData.suspendedComponentsToResync + \"\";\n      }\n   };\n\n   private updateBytesToResyncLabels = () => {\n      if (!this.resyncData) {\n         this.activeBytesToResync = VsanUiUtils.getString(\"vsan.loading\");\n         this.queuedBytesToResync = VsanUiUtils.getString(\"vsan.loading\");\n         this.suspendedBytesToResync = VsanUiUtils.getString(\"vsan.loading\");\n      } else {\n         this.activeBytesToResync = VsanUiUtils.formatFileSize(this.resyncData.activeBytesToResync);\n         this.queuedBytesToResync = VsanUiUtils.formatFileSize(this.resyncData.queuedBytesToResync);\n         this.suspendedBytesToResync = VsanUiUtils.formatFileSize(this.resyncData.suspendedBytesToResync);\n      }\n   };\n\n   private updateETAResyncLabels = () => {\n      if (!this.resyncData) {\n         this.totalETAToResync = VsanUiUtils.getString(\"vsan.loading\");\n         this.activeETAToResync = VsanUiUtils.getString(\"vsan.loading\");\n         this.queuedETAToResync = VsanUiUtils.getString(\"vsan.loading\");\n         this.suspendedETAToResync = VsanUiUtils.getString(\"vsan.loading\");\n         return;\n      } else if (VsanUiUtils.isUnset(this.resyncData.bytesToResync) &&\n            VsanUiUtils.isUnset(this.resyncData.activeETA) &&\n            VsanUiUtils.isUnset(this.resyncData.queuedETA) &&\n            VsanUiUtils.isUnset(this.resyncData.suspendedETA)) {\n         this.totalETAToResync = VsanUiUtils.getString(\"vsan.na.label\");\n         this.activeETAToResync = VsanUiUtils.getString(\"vsan.na.label\");\n         this.queuedETAToResync = VsanUiUtils.getString(\"vsan.na.label\");\n         this.suspendedETAToResync = VsanUiUtils.getString(\"vsan.na.label\");\n         return;\n      }\n\n      // Show ETA label based on it's corresponding resyncing objects\n      const hasActiveResyncObjects: boolean = !!this.resyncData.activeBytesToResync;\n      const hasQueuedResyncObjects: boolean = !!this.resyncData.queuedBytesToResync;\n      // for total ETA consider total bytes to resync to resync, only if they include active or queued bytes to resync\n      const hasTotalResyncObjects: boolean = !!this.resyncData.bytesToResync\n            && (!!this.resyncData.activeBytesToResync || !!this.resyncData.queuedBytesToResync);\n      // for Suspended ETA consider suspended bytes to resync, only if active bytes are also present\n      const hasSuspendedResyncObjects: boolean =\n            !!this.resyncData.suspendedBytesToResync && !!this.resyncData.activeBytesToResync;\n\n      this.activeETAToResync = this.getResyncEtaLabel(this.resyncData.activeETA, hasActiveResyncObjects);\n      this.queuedETAToResync = this.getResyncEtaLabel(this.resyncData.queuedETA, hasQueuedResyncObjects);\n\n      // show suspended resync status label if there are suspended bytes to resync, suspended ETA is not provided and\n      // there are no active bytes to resync as well (if there are ETA is supposed to be calculated)\n      if (!!this.resyncData.suspendedBytesToResync && !this.resyncData.suspendedETA\n            && !this.resyncData.activeBytesToResync) {\n         this.suspendedETAToResync = VsanUiUtils.getString(\"vsan.monitor.resyncSummary.resyncSuspended\");\n      } else {\n         this.suspendedETAToResync = this.getResyncEtaLabel(this.resyncData.suspendedETA, hasSuspendedResyncObjects);\n      }\n\n      // show suspended resync status label if there are only suspended bytes to resync and the returned ETA is 0\n      if (!!this.resyncData.suspendedBytesToResync && !this.resyncData.suspendedETA\n            && !this.resyncData.activeBytesToResync && !this.resyncData.queuedBytesToResync) {\n         this.totalETAToResync = VsanUiUtils.getString(\"vsan.monitor.resyncSummary.resyncSuspended\");\n      } else {\n         this.totalETAToResync = this.getResyncEtaLabel(this.resyncData.etaToResync, hasTotalResyncObjects);\n      }\n   };\n\n   private getResyncEtaLabel(resyncEta: number, hasResyncingObjects: boolean): string {\n      if (!hasResyncingObjects) {\n         return ResyncMonitorComponent.TIME_FORMATTER.transform(0);\n      }\n\n      return !!resyncEta ? ResyncMonitorComponent.TIME_FORMATTER.transform(resyncEta)\n            : VsanUiUtils.getString(\"vsan.monitor.resyncSummary.calculatingEta\");\n   }\n\n   private updateScheduledResyncLabels = () => {\n      this.hasPendingObjectsToResync = false;\n\n      if (!this.resyncData) {\n         this.scheduledObjectsToResync = VsanUiUtils.getString(\"vsan.loading\");\n         this.pendingObjectsToResync = VsanUiUtils.getString(\"vsan.loading\");\n      } else if (!this.resyncData.repairTimerData) {\n         this.scheduledObjectsToResync = VsanUiUtils.getString(\"vsan.na.label\");\n         this.pendingObjectsToResync = VsanUiUtils.getString(\"vsan.na.label\");\n      } else {\n         this.scheduledObjectsToResync = ResyncObjectsUtil.getFormattedScheduledResync(\n               this.resyncData.repairTimerData.objectsCountWithRepairTimer,\n               this.resyncData.repairTimerData.minTimer,\n               this.resyncData.repairTimerData.maxTimer);\n\n         if (this.resyncData.repairTimerData.objectsCountPending) {\n            this.pendingObjectsToResync = this.resyncData.repairTimerData.objectsCountPending === 1\n                  ? VsanUiUtils.getString(\"vsan.monitor.resyncSummary.pendingResync.message.pending.one.object\")\n                  : VsanUiUtils.getString(\"vsan.monitor.resyncSummary.pendingResync.message.pending.many.objects\",\n                        this.resyncData.repairTimerData.objectsCountPending);\n            this.hasPendingObjectsToResync = true;\n         } else {\n            this.pendingObjectsToResync = VsanUiUtils.getString(\n                  \"vsan.monitor.resyncSummary.scheduledResync.message.none\");\n         }\n      }\n   };\n}\n","<!--Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-edit-prompt\n      [title]=\"'vsan.monitor.resyncComponents.resync.throttling.action.title' | localized\"\n      [(alertMessage)]=\"alertMessage\"\n      (onConfirm)=\"onOkClicked()\">\n   <div id=\"dialog-container\" class=\"dialog-container\">\n      <span id=\"edit-resync-info\">\n         {{\"vsan.monitor.resyncComponents.resync.throttling.action.info\" | localized}}\n      </span>\n      <vsan-validation\n            id=\"edit-resync-warning\"\n            [alert]=\"'vsan.monitor.resyncComponents.resync.throttling.action.warning' | localized\"\n            alertType=\"warning\"\n            [allowClose]=\"false\">\n      </vsan-validation>\n      <clr-checkbox-wrapper>\n         <input type=\"checkbox\"\n                clrCheckbox\n                id=\"enable-resync-throttling-checkbox\"\n                name=\"enableResyncThrottlingCheckbox\"\n                [(ngModel)]=\"resyncThrottlingEnabled\"/>\n         <label>{{\"vsan.monitor.resyncComponents.resync.throttling.action.enable.label\" | localized}}</label>\n      </clr-checkbox-wrapper>\n      <div class=\"nested\" [class.disable-action]=\"!resyncThrottlingEnabled\">\n         <div>\n            {{\"vsan.monitor.resyncComponents.resync.throttling.action.slider.text\" | localized}}\n         </div>\n         <div id=\"throttling-limit\">\n            <span>{{\"vsan.monitor.resyncComponents.resync.throttling.limit\" | localized : 1}}</span>\n            <input name=\"throttling-limit\"\n                   type=\"range\"\n                   [class.disable-action]=\"!resyncThrottlingEnabled\"\n                   [disabled]=\"!resyncThrottlingEnabled\"\n                   [(ngModel)]=\"resyncThresholdSliderValue\"\n                   min=0 max=9 step=1\n                   title=\"{{resyncThresholdValue}}\"/>\n            <span>{{\"vsan.monitor.resyncComponents.resync.throttling.limit\" | localized : 512}}</span>\n         </div>\n         <div id=\"resync-throttling-value\">\n            {{\"vsan.monitor.resyncComponents.resync.throttling.selected.limit\" | localized : resyncThresholdValue}}\n         </div>\n      </div>\n      <a href=\"javascript://\"\n         *ngIf=\"!showHostResyncTraffic\"\n         id=\"show-host-traffic-link\"\n         (click)=\"showHostResyncData()\">\n         {{\"vsan.monitor.resyncComponents.resync.throttling.showHostsLinkText\" | localized}}\n      </a>\n      <ng-container *ngIf=\"showHostResyncTraffic\">\n         <clr-button-group class=\"btn-link\">\n            <clr-button id=\"refresh\"\n                        name=\"refresh\"\n                        (click)=\"fetch()\"\n                        class=\"btn btn-sm\">\n               {{\"vsan.common.refresh\" | localized}}\n            </clr-button>\n         </clr-button-group>\n         <clr-datagrid id=\"resync-host-traffic-grid\"\n                       [clrDgLoading]=\"resyncDataLoading\">\n            <clr-dg-column [clrDgField]=\"'name'\">\n               {{\"vsan.monitor.resyncComponents.resync.throttling.host\" | localized}}\n            </clr-dg-column>\n            <clr-dg-column [clrDgField]=\"'resyncTraffic'\">\n               {{\"vsan.monitor.resyncComponents.resync.throttling.currentResyncTraffic\" | localized}}\n            </clr-dg-column>\n            <clr-dg-row\n                  *clrDgItems=\"let host of hostsResyncData\"\n                  [clrDgItem]=\"host\">\n               <clr-dg-cell>\n                  <clr-icon [attr.shape]=\"host.primaryIconId\"></clr-icon>\n                  <span title=\"{{host.name}}\">{{host.name}}</span>\n               </clr-dg-cell>\n               <clr-dg-cell>{{host.resyncTraffic}}</clr-dg-cell>\n            </clr-dg-row>\n            <!-- Datagrid Footer -->\n            <clr-dg-footer> {{getDatagridFooterLabel()}}</clr-dg-footer>\n         </clr-datagrid>\n      </ng-container>\n   </div>\n</vsan-edit-prompt>\n","\nexport interface ResyncThrottlingSpec {\n\n   iopsLimit: number;\n} //class ResyncThrottlingSpec\n\nexport module ResyncThrottlingSpec{\nexport class Factory {\n\n   static create = (iopsLimit: number): ResyncThrottlingSpec => {\n      return { iopsLimit: iopsLimit, };\n   }\n\n\n} //class Factory\n\n} //module ResyncThrottlingSpec\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterContentInit, ContentChildren, Directive, ElementRef} from \"@angular/core\";\nimport {ClrButton} from \"@clr/angular\";\nimport {ClrButtonBaseDirective, DirectiveHolder} from \"@directive/clr-button-group/clr-button-base.directive\";\n\n/**\n * Applies on every clr-button-group and help to link the clr-button with directive applieds on it,  which extends\n * {@link ClrButtonBaseDirective}, to the actual rendered html button.\n */\n@Directive({\n   selector: \"clr-button-group\",\n})\nexport class ClrButtonGroupCommonDirective implements AfterContentInit {\n\n   @ContentChildren(ClrButton, {descendants: true})\n   clrButtons: ClrButton[];\n\n   constructor(private elRef: ElementRef) {}\n\n   ngAfterContentInit(): void {\n      setTimeout(() => {\n         const allButtons: NodeListOf<HTMLButtonElement> = this.elRef.nativeElement.querySelectorAll(\"button\");\n         // match button with clrButton and notify directives\n         this.clrButtons.filter(clrButton => !!(clrButton as DirectiveHolder).directives)\n               .forEach((clrButton, index) => {\n                  const buttonFound: HTMLButtonElement = this.findButtonByName(clrButton.name, allButtons);\n                  if (buttonFound) {\n                     (clrButton as DirectiveHolder).directives.forEach(directive => {\n                        directive.resolveButton(clrButton, buttonFound, index);\n                     });\n                  }\n               });\n      });\n   }\n\n   private findButtonByName(name: string, buttons: NodeListOf<HTMLButtonElement>): HTMLButtonElement {\n      for (let i: number = 0; i < buttons.length; i++) {\n         if (buttons.item(i).name === name) {\n            return buttons.item(i);\n         }\n      }\n      return null;\n   }\n\n}","<!--Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<h5 vsan-auto-focus>\n   {{\"vsan.monitor.resyncingComponents\" | localized}}\n</h5>\n<vsan-validation id=\"validation-message\"\n                 *ngIf=\"alertMessages?.length > 0\"\n                 [(alerts)]=\"alertMessages\"\n                 [allowReload]=\"allowReload\"\n                 (onReload)=\"fetch()\"\n                 (onClosed)=\"alertMessages = null\">\n</vsan-validation>\n<span>{{pageDescription}}</span>\n<!--- TODO: Add support for \"See more\" link to the validation component -->\n<vsan-validation id=\"networkPartitionWarning\"\n                 *ngIf=\"showPartitionWarning\"\n                 alert=\"{{'vsan.monitor.virtualDisks.networkPartitionLabel' | localized}}\"\n                 [alertType]=\"'warning'\"\n                 [allowClose]=\"false\">\n</vsan-validation>\n<vsan-validation id=\"resyncThrottlingWarning\"\n                 *ngIf=\"resyncData?.resyncThrottlingValue > 0\"\n                 alert=\"{{'vsan.monitor.resyncSummary.resyncThrottlingSetWarning' | localized}}\"\n                 [alertType]=\"'warning'\"\n                 [allowClose]=\"false\">\n</vsan-validation>\n<vsan-validation id=\"resync-suspended-warning\"\n                 *ngIf=\"!!resyncData?.suspendedBytesToResync\"\n                 alert=\"{{'vsan.monitor.resyncComponents.suspended.warning' | localized}}\"\n                 [alertType]=\"'warning'\"\n                 [allowClose]=\"false\"\n                 [allowReload]=\"true\"\n                 actionLabel=\"{{'vsan.common.details' | localized}}\"\n                 (onReload)=\"navigateToHealthPage()\">\n</vsan-validation>\n\n<clr-stack-view>\n   <clr-stack-header>\n      <div class=\"section-info\">\n         <span id=\"object-repair-timer\">{{\"vsan.monitor.resyncSummary.delayTimer\"|localized}}</span>\n         <span id=\"delay-timer\">{{delayTimer}}</span>\n         <clr-signpost [vsan-signpost-title]=\"'vsan.monitor.resyncSummary.delayTimer.signpost.label' | localized\">\n            <clr-signpost-content *clrIfOpen clrPosition=\"right-bottom\">\n               <h3 id=\"object-repair-timer-title\">{{\"vsan.monitor.resyncSummary.delayTimer.title\"|localized}}</h3>\n               <span>{{\"vsan.services.advancedOptions.objectRepairTimer.signpost\"|localized}}</span>\n            </clr-signpost-content>\n         </clr-signpost>\n      </div>\n      <div *ngIf=\"isResyncETAImprovementSupported\" class=\"section-info\">\n         {{\"vsan.monitor.resyncComponents.resync.autoRefresh.hint\" | localized}}\n      </div>\n      <button id=\"resyncThrottlingButton\"\n              *ngIf=\"isResyncThrottlingSupported\"\n              class=\"btn btn-sm btn-outline stack-action\"\n              type=\"button\"\n              [class.disable-action]=\"!hasEditPermission\"\n              (click)=\"onResyncThrottling()\">\n         {{\"vsan.monitor.resyncComponents.resync.throttling.action.label\" | localized}}\n      </button>\n   </clr-stack-header>\n   <clr-stack-block>\n      <clr-stack-label id=\"componentsCountLabel\">{{\"vsan.monitor.resyncSummary.resyncingComponents\" | localized}}\n      </clr-stack-label>\n      <clr-stack-content id=\"componentsCount\">\n         {{componentsCount}}\n         <clr-signpost *ngIf=\"isResyncETAImprovementSupported && resyncData?.componentsToSync\"\n                       [vsan-signpost-title]=\"'vsan.monitor.resyncSummary.resyncingObjects.totalObjects.signpost.label' | localized\">\n            <clr-signpost-content id=\"total-objects-resync-info-label\" *clrIfOpen>\n               {{\"vsan.monitor.resyncSummary.resyncingObjects.totalObjects.description\"|localized}}\n            </clr-signpost-content>\n         </clr-signpost>\n      </clr-stack-content>\n      <!--Show detailed view when isResyncETAImprovementSupported is supported-->\n      <ng-container ngProjectAs=\"clr-stack-block\" *ngIf=\"isResyncETAImprovementSupported\">\n         <clr-stack-block id=\"active-components-to-resync-block\">\n            <clr-stack-label>{{\"vsan.monitor.resyncSummary.resyncingObjects.active\" | localized}}</clr-stack-label>\n            <clr-stack-content>{{activeComponentsToResync}}</clr-stack-content>\n         </clr-stack-block>\n         <clr-stack-block id=\"queued-components-to-resync-block\">\n            <clr-stack-label>{{\"vsan.monitor.resyncSummary.resyncingObjects.queued\" | localized}}</clr-stack-label>\n            <clr-stack-content>{{queuedComponentsToResync}}</clr-stack-content>\n         </clr-stack-block>\n         <clr-stack-block id=\"suspended-components-to-resync-block\">\n            <clr-stack-label>{{\"vsan.monitor.resyncSummary.resyncingObjects.suspended\" | localized}}</clr-stack-label>\n            <clr-stack-content>{{suspendedComponentsToResync}}</clr-stack-content>\n         </clr-stack-block>\n      </ng-container>\n   </clr-stack-block>\n   <clr-stack-block>\n      <clr-stack-label id=\"bytesLeftLabel\">\n         {{\"vsan.monitor.resyncSummary.bytesToResync\" | localized}}\n      </clr-stack-label>\n      <clr-stack-content id=\"bytesLeft\">{{bytesLeftToResync}}</clr-stack-content>\n      <!--Show detailed view when isResyncETAImprovementSupported is supported-->\n      <ng-container ngProjectAs=\"clr-stack-block\" *ngIf=\"isResyncETAImprovementSupported\">\n         <clr-stack-block id=\"active-bytes-to-resync-block\">\n            <clr-stack-label>\n               {{\"vsan.monitor.resyncSummary.resyncingObjects.active\" | localized}}\n            </clr-stack-label>\n            <clr-stack-content>{{activeBytesToResync}}</clr-stack-content>\n         </clr-stack-block>\n         <clr-stack-block id=\"queued-bytes-to-resync-block\">\n            <clr-stack-label>\n               {{\"vsan.monitor.resyncSummary.resyncingObjects.queued\" | localized}}\n            </clr-stack-label>\n            <clr-stack-content>{{queuedBytesToResync}}</clr-stack-content>\n         </clr-stack-block>\n         <clr-stack-block id=\"suspended-bytes-to-resync-block\">\n            <clr-stack-label>\n               {{\"vsan.monitor.resyncSummary.resyncingObjects.suspended\" | localized}}\n            </clr-stack-label>\n            <clr-stack-content>{{suspendedBytesToResync}}</clr-stack-content>\n         </clr-stack-block>\n      </ng-container>\n   </clr-stack-block>\n   <clr-stack-block *ngIf=\"!isResyncETAImprovementSupported\">\n      <clr-stack-label id=\"etaToComplianceLabel\">\n         {{\"vsan.monitor.resyncSummary.eta\" | localized}}\n      </clr-stack-label>\n      <clr-stack-content id=\"etaToCompliance\">\n         {{etaToCompliance | timeSpan}}\n      </clr-stack-content>\n   </clr-stack-block>\n   <!--Show detailed view when isResyncETAImprovementSupported is supported-->\n   <clr-stack-block *ngIf=\"isResyncETAImprovementSupported\">\n      <clr-stack-label id=\"resyncing-eta-label\">\n         {{\"vsan.monitor.resyncSummary.totalResyncingEta\" | localized}}\n      </clr-stack-label>\n      <clr-stack-content id=\"resyncing-eta\">{{totalETAToResync}}</clr-stack-content>\n      <ng-container ngProjectAs=\"clr-stack-block\">\n         <clr-stack-block id=\"active-eta-to-resync-block\">\n            <clr-stack-label>\n               {{\"vsan.monitor.resyncSummary.resyncingObjects.active\" | localized}}\n            </clr-stack-label>\n            <clr-stack-content>{{activeETAToResync}}</clr-stack-content>\n         </clr-stack-block>\n         <clr-stack-block id=\"queued-eta-to-resync-block\">\n            <clr-stack-label>\n               {{\"vsan.monitor.resyncSummary.resyncingObjects.queued\" | localized}}\n            </clr-stack-label>\n            <clr-stack-content>{{queuedETAToResync}}</clr-stack-content>\n         </clr-stack-block>\n         <clr-stack-block id=\"suspended-eta-to-resync-block\">\n            <clr-stack-label>\n               {{\"vsan.monitor.resyncSummary.resyncingObjects.suspended\" | localized}}\n            </clr-stack-label>\n            <clr-stack-content>{{suspendedETAToResync}}</clr-stack-content>\n         </clr-stack-block>\n      </ng-container>\n   </clr-stack-block>\n   <clr-stack-block>\n      <clr-stack-label id=\"scheduled-resync-stack-label\">\n         {{'vsan.monitor.resyncSummary.scheduledResync.label' | localized}}\n         <ng-container *ngIf=\"!isResyncETAImprovementSupported\">\n            <ng-container *ngTemplateOutlet=\"scheduledResyncSignpostInfo\"></ng-container>\n         </ng-container>\n      </clr-stack-label>\n      <clr-stack-content id=\"scheduled-resync\">\n         <span id=\"scheduled-resync-text\">\n            {{scheduledResync}}\n         </span>\n         <ng-container *ngIf=\"!isResyncETAImprovementSupported\">\n            <ng-container *ngTemplateOutlet=\"scheduledResyncNavigationControls\"></ng-container>\n         </ng-container>\n      </clr-stack-content>\n      <!--Show detailed view when isResyncETAImprovementSupported is supported-->\n      <ng-container ngProjectAs=\"clr-stack-block\" *ngIf=\"isResyncETAImprovementSupported\">\n         <clr-stack-block id=\"scheduled-to-resync-objects-block\">\n            <clr-stack-label>\n               {{\"vsan.monitor.resyncSummary.scheduledObjectsResync.label\" | localized}}\n               <ng-container *ngTemplateOutlet=\"scheduledResyncSignpostInfo\"></ng-container>\n            </clr-stack-label>\n            <clr-stack-content>\n               <span id=\"scheduled-objects-to-resync\">{{scheduledObjectsToResync}}</span>\n               <ng-container *ngTemplateOutlet=\"scheduledResyncNavigationControls\"></ng-container>\n            </clr-stack-content>\n         </clr-stack-block>\n         <clr-stack-block id=\"pending-resync-block\">\n            <clr-stack-label>\n               {{\"vsan.monitor.resyncSummary.pendingResync.label\" | localized}}\n               <clr-signpost [vsan-signpost-title]=\"'vsan.monitor.resyncSummary.pendingResync.signpost.label' | localized\">\n                  <clr-signpost-content id=\"pending-resync-info-label\" *clrIfOpen>\n                     {{\"vsan.monitor.resyncSummary.pendingResync.description\"|localized}}\n                     <ul class=\"list\">\n                        <li>{{\"vsan.monitor.resyncSummary.pendingResync.description.lackOfSpaceReason\"|localized}}</li>\n                        <li>{{\"vsan.monitor.resyncSummary.pendingResync.description.lackOfFaultDomains\"|localized}}</li>\n                        <li>{{\"vsan.monitor.resyncSummary.pendingResync.description.componentLimitReached\"|localized}}</li>\n                     </ul>\n                  </clr-signpost-content>\n               </clr-signpost>\n            </clr-stack-label>\n            <clr-stack-content>\n               <span id=\"pending-objects-to-resync\">{{pendingObjectsToResync}}</span>\n               <button id=\"pending-objects-view-details\"\n                       [disabled]=\"!hasPendingObjectsToResync\"\n                       (click)=\"navigateToVirtualObjects(false)\"\n                       class=\"btn btn-sm btn-link\">\n                  {{\"vsan.monitor.resyncSummary.pendingResync.viewDetails\" | localized}}\n               </button>\n            </clr-stack-content>\n         </clr-stack-block>\n      </ng-container>\n   </clr-stack-block>\n   <!--Template with signpost information for scheduled resync objects-->\n   <ng-template #scheduledResyncSignpostInfo>\n      <clr-signpost [vsan-signpost-title]=\"'vsan.monitor.resyncSummary.scheduledResync.signpost.label' | localized\">\n         <clr-signpost-content id=\"scheduled-resync-info-label\" *clrIfOpen>\n            {{\"vsan.monitor.resyncSummary.scheduledResync.description\"|localized}}\n         </clr-signpost-content>\n      </clr-signpost>\n   </ng-template>\n   <!--Template with navigation options for resync objects with valid delay timer-->\n   <ng-template #scheduledResyncNavigationControls>\n      <button id=\"navigate-virtual-objects\"\n              [disabled]=\"!isResyncNowEnabled\"\n              (click)=\"navigateToVirtualObjects(true)\"\n              class=\"btn btn-sm btn-link\">\n         {{\"vsan.monitor.resyncSummary.pendingResync.viewDetails\"|localized}}\n      </button>\n      <button id=\"resync-now\"\n              [disabled]=\"!isResyncNowEnabled\"\n              (click)=\"onResyncNowClicked()\"\n              class=\"btn btn-sm btn-link\">\n         {{\"vsan.monitor.resyncSummary.scheduledResync.resyncNow\" | localized}}\n      </button>\n   </ng-template>\n</clr-stack-view>\n<h6 id=\"resync-summary-object-list-header\">{{\"vsan.monitor.resyncSummary.overview.objectListSection\"|localized}}</h6>\n\n<div id=\"limit-results-container\"\n     class=\"limit-results-container\"\n     role=\"group\"\n     aria-labelledby=\"resync-summary-object-list-header\">\n   <ng-container *ngIf=\"isResyncETAImprovementSupported\">\n      <div class=\"filter-input\">\n         <label id=\"intent-label\"\n                for=\"intent-list\">\n            {{\"vsan.monitor.resyncComponents.intent.label\" | localized}}\n         </label>\n         <clr-select-container>\n            <select id=\"intent-list\"\n                    clrSelect\n                    name=\"selectedIntent\"\n                    [(ngModel)]=\"selectedIntent\"\n                    (change)=\"updateResyncingObjects()\">\n               <option selected [ngValue]=\"ResyncMonitorComponent.ALL_INTENT\">\n                  {{\"vsan.monitor.resyncComponents.intent.all\" | localized}}\n               </option>\n               <option *ngFor=\"let intent of intentList\"\n                       [ngValue]=\"intent\">\n                  {{ResyncMonitorListComponent.getReasonLabel(intent)}}\n               </option>\n            </select>\n         </clr-select-container>\n         <clr-signpost [vsan-signpost-title]=\"'vsan.monitor.resyncComponents.intent.signpost.label' | localized\">\n            <clr-signpost-content class=\"large-signpost-content\" clrPosition=\"bottom-right\" *clrIfOpen>\n               <ul id=\"intent-list-signpost\" class=\"list\">\n                  <li>{{'vsan.monitor.resyncComponents.intent.decommission.detailed' | localized}}</li>\n                  <li>{{'vsan.monitor.resyncComponents.intent.compliance.detailed' | localized}}</li>\n                  <li>{{'vsan.monitor.resyncComponents.intent.ddh.detailed' | localized}}</li>\n                  <li>{{'vsan.monitor.resyncComponents.intent.rebalance.detailed' | localized}}</li>\n                  <li>{{'vsan.monitor.resyncComponents.intent.stale.detailed' | localized}}</li>\n                  <li>{{'vsan.monitor.resyncComponents.intent.mergeConcat.detailed' | localized}}</li>\n                  <li>{{'vsan.monitor.resyncComponents.intent.formatChange.detailed' | localized}}</li>\n                  <li>{{'vsan.monitor.resyncComponents.intent.unknown.detailed' | localized}}</li>\n               </ul>\n            </clr-signpost-content>\n         </clr-signpost>\n      </div>\n      <div class=\"filter-input\">\n         <label id=\"status-label\"\n                for=\"status-list\">\n            {{'vsan.monitor.resyncComponents.status.label' | localized}}\n         </label>\n         <clr-select-container>\n            <select id=\"status-list\"\n                    clrSelect\n                    name=\"selectedStatus\"\n                    [(ngModel)]=\"selectedStatus\"\n                    (change)=\"updateResyncingObjects()\">\n               <option *ngFor=\"let status of statusList\"\n                       [ngValue]=\"status\">\n                  {{getStatusLabel(status)}}\n               </option>\n            </select>\n         </clr-select-container>\n         <clr-signpost [vsan-signpost-title]=\"'vsan.monitor.resyncComponents.status.signpost.label' | localized\">\n            <clr-signpost-content clrPosition=\"bottom-right\" *clrIfOpen>\n               <ul id=\"status-list-signpost\" class=\"list\">\n                  <li>{{'vsan.monitor.resyncComponents.status.active.detailed' | localized}}</li>\n                  <li>{{'vsan.monitor.resyncComponents.status.queued.detailed' | localized}}</li>\n                  <li>{{'vsan.monitor.resyncComponents.status.suspended.detailed' | localized}}</li>\n               </ul>\n            </clr-signpost-content>\n         </clr-signpost>\n      </div>\n      <div class=\"filter-input\">\n         <label id=\"limit-label\"\n                for=\"limitResults\">\n            {{\"vsan.monitor.resyncComponents.list.filter.label\" | localized}}\n         </label>\n         <select id=\"limitResults\"\n                 clrSelect\n                 name=\"limitResults\"\n                 [(ngModel)]=\"limitResults\">\n            <option *ngFor=\"let option of limitOptions\" [ngValue]=\"option\">\n               {{option}}\n            </option>\n         </select>\n      </div>\n   </ng-container>\n   <!-- Keep refresh button visible even if Resync ETA Improvement is NOT supported -->\n   <div class=\"filter-input\">\n      <button type=\"button\"\n              class=\"btn btn-sm btn-link\"\n              id=\"filter-list-button\"\n              title=\"{{'vsan.monitor.resyncComponents.list.refresh.label' | localized}}\"\n              (click)=\"refresh()\">\n         {{'vsan.common.refresh' | localized}}\n      </button>\n   </div>\n</div>\n\n<div id=\"resyncing-objects-summary\" *ngIf=\"isResyncETAImprovementSupported\">\n   <ng-container *ngIf=\"resyncingObjectsSummaryVisible\">\n      <div id=\"number-of-components-to-resync\">\n         {{\"vsan.monitor.resyncComponents.list.components.label\" | localized: resyncingObjectsData.componentsToSync}}\n      </div>\n      <div id=\"bytes-to-resync\">{{\"vsan.monitor.resyncComponents.list.bytes.label\" | localized:\n            VsanUiUtils.formatFileSize(resyncingObjectsData.bytesToResync)}}</div>\n      <div id=\"eta-for-intent\">{{getSummaryResyncEtaLabel(resyncingObjectsData)}}</div>\n      <vsan-validation class=\"resync-eta-info-container\"\n                       [alertType]=\"'info'\"\n                       [allowClose]=\"false\"\n                       [alert]=\"'vsan.monitor.resyncComponents.list.eta.description' | localized\">\n      </vsan-validation>\n   </ng-container>\n</div>\n\n<vsan-resync-monitor-list id=\"resyncComponentsList\"\n                          [data]=\"resyncingObjectsData?.components\"\n                          [loading]=\"loadingResyncingObjects\"\n                          [isResyncETAImprovementSupported]=\"isResyncETAImprovementSupported\">\n</vsan-resync-monitor-list>\n","<clr-datagrid id=\"resync-components\" [clrDgLoading]=\"loading\">\n   <clr-dg-placeholder>{{\"vsan.monitor.resyncComponents.list.no.data\" | localized}}</clr-dg-placeholder>\n   <!-- Header columns -->\n   <clr-dg-column class=\"name-column\">\n      <vsan-tree-column id=\"resync-name-column\"\n                        [dataField]=\"'name'\"\n                        [dataProvider]=\"datagrid\"\n                        [title]=\"'vsan.monitor.resyncComponents.list.name' | localized\">\n      </vsan-tree-column>\n   </clr-dg-column>\n   <clr-dg-column>\n      <vsan-tree-column id=\"resync-policy-column\"\n                        [dataField]=\"'storageProfile'\"\n                        [dataProvider]=\"datagrid\"\n                        [filterObject]=\"policyNameFilter\"\n                        [title]=\"'vsan.monitor.resyncComponents.list.vmStorageProfile' | localized\">\n      </vsan-tree-column>\n   </clr-dg-column>\n   <clr-dg-column>\n      <vsan-tree-column id=\"resync-host-column\"\n                        [dataField]=\"'hostName'\"\n                        [dataProvider]=\"datagrid\"\n                        [filterObject]=\"hostNameFilter\"\n                        [title]=\"'vsan.monitor.resyncComponents.list.host' | localized\">\n      </vsan-tree-column>\n   </clr-dg-column>\n   <clr-dg-column>\n      <vsan-tree-column id=\"resync-bytes-column\"\n                        [dataField]=\"'bytesToResync'\"\n                        [dataProvider]=\"datagrid\"\n                        [filterObject]=\"bytesFilter\"\n                        [title]=\"'vsan.monitor.resyncComponents.list.bytesToResync' | localized\">\n      </vsan-tree-column>\n   </clr-dg-column>\n   <clr-dg-column *ngIf=\"!isResyncETAImprovementSupported\">\n      <vsan-tree-column id=\"resync-eta-column\"\n                        [dataField]=\"'etaToResync'\"\n                        [dataProvider]=\"datagrid\"\n                        [filterObject]=\"etaFilter\"\n                        [title]=\"'vsan.monitor.resyncComponents.list.eta' | localized\">\n      </vsan-tree-column>\n   </clr-dg-column>\n   <clr-dg-column>\n      <vsan-tree-column id=\"resync-intent-column\"\n                        [dataField]=\"'reason'\"\n                        [dataProvider]=\"datagrid\"\n                        [filterObject]=\"intentFilter\"\n                        [title]=\"'vsan.monitor.resyncComponents.list.intent' | localized\">\n      </vsan-tree-column>\n   </clr-dg-column>\n\n   <!-- Datagrid Content -->\n   <clr-dg-row\n         *clrDgItems=\"let row of datagrid.rows\"\n         (click)=\"selectTarget(row, $event)\"\n         [class.datagrid-selected]=\"isRowSelected(row)\">\n      <clr-dg-cell id=\"resync-name-cell\">\n         <span *ngIf=\"row.data.isQueued\">{{row.data.name}}</span>\n         <ng-container *ngIf=\"!row.data.isQueued\">\n            <vsan-expand [row]=\"row\"></vsan-expand>\n            <!--Only \"real\" objects have UUIDs. The grouping items like VMs and \"Other\" sections should not be links-->\n            <a *ngIf=\"row.data.uuid\"\n               href=\"javascript://\"\n               (click)=\"openVirtualObjects(row.data)\">\n               <clr-icon *ngIf=\"row.data.iconId\" [attr.shape]=\"row.data.iconId\"></clr-icon>\n               <span>{{row.data.name}}</span>\n            </a>\n            <span *ngIf=\"!row.data.uuid\">\n               <clr-icon *ngIf=\"row.data.iconId\" [attr.shape]=\"row.data.iconId\"></clr-icon>\n               <span>{{row.data.name}}</span>\n            </span>\n         </ng-container>\n      </clr-dg-cell>\n      <clr-dg-cell id=\"resync-policy-cell\">{{getName(row.data.storageProfile)}}</clr-dg-cell>\n      <clr-dg-cell id=\"resync-host-cell\">{{getName(row.data.hostName)}}</clr-dg-cell>\n      <clr-dg-cell id=\"resync-bytes-cell\">{{row.data.bytesToResync | fileSize}}</clr-dg-cell>\n      <clr-dg-cell id=\"resync-eta-cell\"\n                   *ngIf=\"!isResyncETAImprovementSupported\">\n         {{row.data.etaToResync | timeSpan}}\n      </clr-dg-cell>\n      <clr-dg-cell id=\"resync-intent-cell\">{{ResyncMonitorListComponent.getReasonLabel(row.data.reason)}}</clr-dg-cell>\n   </clr-dg-row>\n\n   <!-- Datagrid Footer -->\n   <clr-dg-footer id=\"resync-grid-footer\">\n      <clr-dg-pagination [clrDgPageSize]=\"20\">{{datagridFooterLabel}}</clr-dg-pagination>\n   </clr-dg-footer>\n</clr-datagrid>\n","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {TreeDatagridView} from \"@component/datagrid/tree-datagrid-view\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ResyncComponent} from \"@generated/resync-component\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {TimePipe} from \"@pipe/TimePipe\";\nimport {FunctionFilter} from \"@component/datagrid/filter/function-filter\";\nimport {NavigationService, PlatformExtension} from \"@service/navigation/navigation.service\";\nimport ResyncReasonCode = ResyncComponent.ResyncReasonCode;\nimport {Logger} from \"@util/logger\";\n\n@Component({\n   templateUrl: \"resync-monitor-list.html\",\n   selector: \"vsan-resync-monitor-list\",\n   styleUrls: [\"resync-monitor-list.scss\"],\n})\nexport class ResyncMonitorListComponent extends TreeDatagridView {\n   ResyncMonitorListComponent = ResyncMonitorListComponent;\n   private static readonly TIME_FORMATTER: TimePipe = new TimePipe();\n\n   @Input()\n   set data(data: ResyncComponent[]) {\n      this.initData(data);\n   }\n\n   @Input()\n   loading: boolean = true;\n\n   @Input()\n   isResyncETAImprovementSupported: boolean = false;\n\n   constructor(private navigationService: NavigationService) {\n      super(\"children\");\n   }\n\n   policyNameFilter: FunctionFilter<ResyncComponent> = new FunctionFilter((data: ResyncComponent) => {\n      return this.getName(data.storageProfile);\n   });\n\n   hostNameFilter: FunctionFilter<ResyncComponent> = new FunctionFilter((data: ResyncComponent) => {\n      return this.getName(data.hostName);\n   });\n\n   bytesFilter: FunctionFilter<ResyncComponent> = new FunctionFilter((data: ResyncComponent) => {\n      return VsanUiUtils.formatFileSize(data.bytesToResync);\n   });\n\n   etaFilter: FunctionFilter<ResyncComponent> = new FunctionFilter((data: ResyncComponent) => {\n      return ResyncMonitorListComponent.TIME_FORMATTER.transform(data.etaToResync);\n   });\n\n   intentFilter: FunctionFilter<ResyncComponent> = new FunctionFilter((data: ResyncComponent) => {\n      return ResyncMonitorListComponent.getReasonLabel(data.reason);\n   });\n\n   /**\n    * This method is used to format the policy and hostname columns.\n    */\n   getName = (name: string): string => {\n      if (!name) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n      return name;\n   };\n\n   static getReasonLabel(reason: ResyncReasonCode): string {\n      if (reason == null) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n\n      switch (reason) {\n         case ResyncReasonCode.dying_evacuate:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.intent.ddh\");\n         case ResyncReasonCode.repair:\n         case ResyncReasonCode.reconfigure:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.intent.compliance\");\n         case ResyncReasonCode.evacuate:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.intent.decommission\");\n         case ResyncReasonCode.rebalance:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.intent.rebalance\");\n         case ResyncReasonCode.stale:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.intent.stale\");\n         case ResyncReasonCode.merge_concat:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.intent.mergeConcat\");\n         case ResyncReasonCode.object_format_change:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.intent.formatChange\");\n         case ResyncReasonCode.VsanSyncReason_Unknown:\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.intent.unknown\");\n         default:\n            Logger.warn(\"Invalid component state received: \" + reason);\n            return VsanUiUtils.getString(\"vsan.monitor.resyncComponents.intent.unknown\");\n      }\n   }\n\n   openVirtualObjects(item: ResyncComponent) {\n      const context = {\n         presentVirtualObjectUuids: [item.uuid],\n      };\n      this.navigationService.navigateTo(PlatformExtension.VIRTUAL_OBJECTS,\n            ManagedObject.contextObject, context);\n   }\n\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {VsanCommonModule} from \"../common/vsan-common.module\";\nimport {ResyncMonitorComponent} from \"./view/resync-monitor.component\";\nimport {ResyncMonitorListComponent} from \"./view/resync-monitor-list.component\";\nimport {EditResyncThrottlingComponent} from \"./action/edit-resync-throttling.component\";\nimport {PersistentStorageService} from \"@service/browser-storage.service\";\n\nconst resyncMonitorRoutes: Routes = [\n   {\n      path: \"\",\n      component: ResyncMonitorComponent,\n   },\n   {\n      path: \"editThrottling\",\n      component: EditResyncThrottlingComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      FormsModule,\n      CommonModule,\n      ClarityModule,\n      VsanCommonModule,\n      RouterModule.forChild(resyncMonitorRoutes),\n   ],\n   declarations: [\n      ResyncMonitorComponent,\n      ResyncMonitorListComponent,\n      EditResyncThrottlingComponent,\n   ],\n   providers: [\n      PersistentStorageService,\n   ],\n})\nexport class ResyncMonitorModule {\n}\n","/* Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ConfigureVsanClusterMutationProvider} from \"@generated/configure-vsan-cluster-mutation-provider\";\nimport {HostResyncTrafficData} from \"@generated/host-resync-traffic-data\";\nimport {ResyncThrottlingSpec} from \"@generated/resync-throttling-spec\";\nimport {VsanResyncingComponentsProvider} from \"@generated/vsan-resyncing-components-provider\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   selector: \"vsan-edit-resync-throttling\",\n   templateUrl: \"edit-resync-throttling.html\",\n   styleUrls: [\"edit-resync-throttling.scss\"],\n})\nexport class EditResyncThrottlingComponent implements OnInit {\n\n   resyncThresholdValue: number;\n   originalThresholdValue: number;\n\n   resyncThrottlingEnabled: boolean;\n   originalResyncThrottlingEnabled: boolean;\n\n   showHostResyncTraffic: boolean;\n   hostsResyncData: HostResyncTrafficData[];\n   resyncDataLoading: boolean = true;\n   alertMessage: string = null;\n\n   constructor(\n         private vsanResyncProvider: VsanResyncingComponentsProvider,\n         private configureClusterMutationProvider: ConfigureVsanClusterMutationProvider) {\n   }\n\n   ngOnInit(): void {\n      const context: any = VsanUiUtils.getModalContext();\n      if (context && context.hasOwnProperty(\"resyncThresholdValue\")) {\n         this.resyncThresholdValue = context.resyncThresholdValue;\n      } else {\n         this.resyncThresholdValue = 0;\n      }\n      this.resyncThrottlingEnabled = this.resyncThresholdValue > 0;\n\n      // If not enabled, overide resyncThresholdValue to 1, as it is the min allowed value\n      if (!this.resyncThrottlingEnabled) {\n         this.resyncThresholdValue = 1;\n      }\n\n      if (this.originalThresholdValue === undefined) {\n         this.originalThresholdValue = this.resyncThresholdValue;\n         this.originalResyncThrottlingEnabled = this.resyncThrottlingEnabled;\n      }\n   }\n\n   showHostResyncData(): void {\n      VsanUiUtils.setModalDialogHeight(750);\n      this.showHostResyncTraffic = true;\n      this.fetch();\n   }\n\n   fetch(): void {\n      this.resyncDataLoading = true;\n      this.vsanResyncProvider.getHostsResyncTraffic(ManagedObject.contextObject)\n            .then(this.handleHostResyncData, this.handleError);\n   }\n\n   private handleHostResyncData = (resyncData: HostResyncTrafficData[]) => {\n      this.hostsResyncData = resyncData;\n      this.resyncDataLoading = false;\n   };\n\n   private handleError = (error: any) => {\n      this.alertMessage = VsanUiUtils.getString(\"vsan.monitor.resyncComponents.resync.throttling.loadingHostsError\");\n      this.resyncDataLoading = false;\n   };\n\n   onOkClicked(): void {\n      if (!this.resyncThrottlingEnabled && this.originalResyncThrottlingEnabled) {\n         // Trying to disable throttling\n         this.inovokeResyncThrottling(0);\n      } else if ((this.originalThresholdValue === this.resyncThresholdValue // The checkbox is not changed and the slider is not changed\n                  && this.originalResyncThrottlingEnabled === this.resyncThrottlingEnabled)\n            || (this.originalResyncThrottlingEnabled === this.resyncThrottlingEnabled // The checkbox is not changed and the throttling is disabled\n                  && this.resyncThrottlingEnabled === false)) {\n         // Nothing has changed, just close the dialog.\n         VsanUiUtils.closeModalDialog();\n      } else {\n         this.inovokeResyncThrottling(this.resyncThresholdValue);\n      }\n   }\n\n   private inovokeResyncThrottling = (value: number): void => {\n      // Invoke mutation operation on server\n      const resyncSpec: ResyncThrottlingSpec = ResyncThrottlingSpec.Factory.create(value);\n      this.configureClusterMutationProvider.resyncThrottling(ManagedObject.contextObject, resyncSpec)\n            .then((result: ManagedObject) => {\n               VsanUiUtils.closeModalDialog(result);\n            });\n   };\n\n   onCancelClicked(): void {\n      VsanUiUtils.closeModalDialog();\n   }\n\n   get resyncThresholdSliderValue(): number {\n      return EditResyncThrottlingComponent.log2(this.resyncThresholdValue);\n   }\n\n   set resyncThresholdSliderValue(value: number) {\n      this.resyncThresholdValue = 2 ** value;\n   }\n\n   /**\n    * Calculates the logarithm with base 2 of the given value. If the result is not an integer, then returns\n    * the part before the decimal sign.\n    */\n   private static log2(value: number): number {\n      return Math.floor(Math.log(value) / Math.LN2);\n   }\n\n   getDatagridFooterLabel(): string {\n      return VsanUiUtils.getDatagridFooterLabel(this.hostsResyncData);\n   }\n}\n"],"sourceRoot":"webpack:///"}