{"version":3,"sources":["./src/app/vsan/faultdomains/actions/move/move-hosts-context.ts","./src/app/vsan/faultdomains/fault-domains.module.ts","./src/app/vsan/faultdomains/fault-domains.component.ts","./src/app/vsan/faultdomains/fault-domains.html","./src/app/vsan/faultdomains/actions/edit/edit-domain.html","./src/app/vsan/faultdomains/actions/move/move-hosts-confirmation.component.ts","./src/app/vsan/faultdomains/component/category-label/category-label.component.ts","./src/app/vsan/faultdomains/actions/edit/edit-domain.component.ts","./src/app/vsan/faultdomains/component/category-label/category-label.html","./src/app/vsan/faultdomains/view/fault-domain-action-menu.html","./src/app/vsan/faultdomains/actions/move/move-hosts-confirmation.html","./src/app/vsan/faultdomains/actions/stretchedcluster/promote-domain.component.ts","./src/app/vsan/faultdomains/actions/stretchedcluster/disable-stretched-cluster.html","./src/app/generated/preferred-fault-domain-data.ts","./src/app/vsan/faultdomains/actions/edit/edit-domain-context.ts","./src/app/vsan/faultdomains/view/standalone-hosts-action-menu.component.ts","./src/app/vsan/faultdomains/view/fault-domain-action-menu.component.ts","./src/app/vsan/faultdomains/actions/stretchedcluster/promote-domain.html","./src/app/vsan/faultdomains/actions/stretchedcluster/disable-stretched-cluster.component.ts","./src/app/vsan/faultdomains/view/standalone-hosts-action-menu.html"],"names":[],"mappings":";;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAA2D;AACf;AAE5C;;GAEG;AACI,MAAM,gBAAgB;IA0D1B,YACM,UAA8B,EACvB,SAAiB,EACjB,OAAe,EACf,YAAoB,EACpB,iBAAyB,EACzB,iBAAiB,GAAW,EAAE,EAC9B,mBAAmB,GAAY,KAAK,EACpC,uBAAuB,GAAY,KAAK;QANxC,cAAS,GAAT,SAAS,CAAQ;QACjB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAQ;QACpB,sBAAiB,GAAjB,iBAAiB,CAAQ;QACzB,sBAAiB,GAAjB,iBAAiB,CAAa;QAC9B,wBAAmB,GAAnB,mBAAmB,CAAiB;QACpC,4BAAuB,GAAvB,uBAAuB,CAAiB;QAClD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QACvC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;QACzD,IAAI,CAAC,8BAA8B,GAAG,IAAI,CAAC,oCAAoC,CAAC,UAAU,CAAC,CAAC;IAC/F,CAAC;IA3DD,MAAM,CAAC,YAAY,CAAC,KAAyB;QAC1C,OAAO,IAAI,gBAAgB,CACrB,KAAK,EACL,2DAAW,CAAC,SAAS,CAAC,6CAA6C,CAAC,EACpE,2DAAW,CAAC,SAAS,CAAC,sDAAsD,CAAC,EAC7E,IAAI,EACJ,2DAAW,CAAC,SAAS,CAAC,oBAAoB,CAAC,EAC3C,aAAa,EACb,IAAI,CAAC,CAAC;IACf,CAAC;IAED,MAAM,CAAC,YAAY,CAAC,MAAwB;QACzC,OAAO,IAAI,gBAAgB,CACrB,MAAM,CAAC,KAAK,EACZ,2DAAW,CAAC,SAAS,CAAC,uCAAuC,CAAC,EAC9D,2DAAW,CAAC,SAAS,CAAC,+CAA+C,CAAC,EACtE,IAAI,EACJ,2DAAW,CAAC,SAAS,CAAC,8CAA8C,CAAC,EACrE,EAAE,EACF,IAAI,EACJ,IAAI,CAAC,CAAC;IACf,CAAC;IAED,MAAM,CAAC,YAAY,CAAC,MAAwB;QACzC,OAAO,IAAI,gBAAgB,CACrB,MAAM,CAAC,KAAK,EACZ,2DAAW,CAAC,SAAS,CAAC,uCAAuC,CAAC,EAC9D,2DAAW,CAAC,SAAS,CAAC,+CAA+C,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EACvF,IAAI,EACJ,2DAAW,CAAC,SAAS,CAAC,oBAAoB,CAAC,EAC3C,YAAY,EACZ,KAAK,EACL,IAAI,CAAC,CAAC;IACf,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,KAAyB,EAAE,YAAoB;QAC7D,MAAM,aAAa,GAAW,2DAAW,CAAC,SAAS,CAAC,YAAY;YAC1D,CAAC,CAAC,2CAA2C;YAC7C,CAAC,CAAC,4CAA4C,CAAC,CAAC;QACtD,MAAM,OAAO,GAAW,YAAY;YAC9B,CAAC,CAAC,2DAAW,CAAC,SAAS,CAAC,mDAAmD,EAAE,YAAY,CAAC;YAC1F,CAAC,CAAC,2DAAW,CAAC,SAAS,CAAC,oDAAoD,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC9G,MAAM,UAAU,GAAW,2DAAW,CAAC,SAAS,CAAC,2CAA2C,CAAC,CAAC;QAC9F,OAAO,IAAI,gBAAgB,CAAC,KAAK,EAAE,aAAa,EAAE,OAAO,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;IACxF,CAAC;IAiBO,QAAQ,CAAC,UAA8B;QAC5C,OAAO,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAEO,aAAa,CAAC,UAA8B,EAAE,KAAyB;QAC5E,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAC/B,mBAAmB;YACnB,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;SACvC;QACD,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;SACxB;QACD,OAAO,2DAAW,CAAC,SAAS,CAAC,oCAAoC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IACpF,CAAC;IAEO,mBAAmB,CAAC,UAA8B;;QACvD,IAAI,CAAC,CAAD,MAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,0CAAE,IAAI,GAAE;YAC9B,OAAO,IAAI,CAAC;SACd;QACD,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;IACxC,CAAC;IAEO,oCAAoC,CAAC,UAA8B;QACxE,OAAO,CAAC,IAAI,CAAC,uBAAuB,IAAI,0EAAgB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IACpF,CAAC;CAEH;;;;;;;;;;;;;;ACnGD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;AACgD;AACrB;AAClB;AACuB;AAShG,MAAM,MAAM,GAAW;IACpB;QACG,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8EAAqB;KAClC;IACD;QACG,IAAI,EAAE,yBAAyB;QAC/B,SAAS,EAAE,8HAAgC;KAC7C;IACD;QACG,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,yGAAsB;KACnC;IACD;QACG,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,uFAAmB;KAChC;IACD;QACG,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8GAA8B;KAC3C;CACH,CAAC;AA6BK,MAAM,kBAAkB;CAC9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtE6C;AACF;AACU;AACS;AACd;AAKW;AAWhB;AACR;AAC+B;AAClB;AACoB;AACW;AAKD;AAGP;AAGc;AAEzC;AACc;AACc;AAEf;AAQnD;UAAM,qBAAqB;QAkC/B,YACc,OAA2B,EAC3B,iBAAoC,EACpC,kBAA0C,EAC1C,iBAAoC,EACpC,uBAAoD,EACpD,mBAAwC,EACxC,sBAA8C,EAC9C,cAAwC,EACxC,WAA4B;YAR5B,YAAO,GAAP,OAAO,CAAoB;YAC3B,sBAAiB,GAAjB,iBAAiB,CAAmB;YACpC,uBAAkB,GAAlB,kBAAkB,CAAwB;YAC1C,sBAAiB,GAAjB,iBAAiB,CAAmB;YACpC,4BAAuB,GAAvB,uBAAuB,CAA6B;YACpD,wBAAmB,GAAnB,mBAAmB,CAAqB;YACxC,2BAAsB,GAAtB,sBAAsB,CAAwB;YAC9C,mBAAc,GAAd,cAAc,CAA0B;YACxC,gBAAW,GAAX,WAAW,CAAiB;YAzCjC,qBAAgB,GAA4B,2EAAgB,CAAC;YAC7D,0BAAqB,GAAiC,qBAAqB,CAAC;YAIrF,sBAAiB,GAAuB,EAAE,CAAC;YAC3C,qBAAgB,GAAuB,EAAE,CAAC;YAI1C,uBAAkB,GAAQ,EAAE,CAAC;YAE7B,iBAAY,GAAW,IAAI,CAAC;YAC5B,iBAAY,GAAsB,IAAI,CAAC,CAAC,mEAAmE;YAC3G,sBAAiB,GAAY,IAAI,CAAC;YAClC,kBAAa,GAAW,CAAC,CAAC;YAClB,yBAAoB,GAAY,KAAK,CAAC;YAC9C,kCAA6B,GAAY,KAAK,CAAC;YAE/C,gCAA2B,GAAY,KAAK,CAAC;YAC7C,oCAA+B,GAAY,KAAK,CAAC;YACjD,oBAAe,GAAY,KAAK,CAAC;YACjC,oCAA+B,GAAY,KAAK,CAAC;YACjD,2BAAsB,GAAY,KAAK,CAAC;YACxC,iCAA4B,GAAY,KAAK,CAAC;YAC9C,kBAAa,GAAY,KAAK,CAAC;YA2KvB,2BAAsB,GAAG,CAAC,KAAY,EAAW,EAAE,CACrD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,KAAK,2EAAe,CAAC,SAAS,CAAC,CAAC;YAErE,sCAAiC,GAAG,GAAY,EAAE;gBACvD,OAAO,IAAI,CAAC,aAAa,IAAI,qBAAqB,CAAC,iCAAiC,CAAC;YACxF,CAAC,CAAC;YAmOF;;;;eAIG;YACK,mBAAc,GAAG,CAAC,QAAkB,EAAE,EAAE;gBAC7C,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC7C,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,OAAO;iBACT;gBAED,MAAM,QAAQ,GAAmB,EAAE,CAAC;gBACpC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,qEAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5F,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;YAC5E,CAAC,CAAC;YAEM,sBAAiB,GAAG,GAAG,EAAE;gBAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;gBAC5B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;gBAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAC3B,CAAC,CAAC;QAzZF,CAAC;QAED,QAAQ;YACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,6BAA6B,EAAE,IAAI,qEAAa,CAAC,aAAa,CAAC;YACtF,IAAI,CAAC,KAAK,EAAE,CAAC;QAChB,CAAC;QAGD,KAAK;YACF,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAEzB,MAAM,QAAQ,GAAmB,EAAE,CAAC;YAEpC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC;iBAChE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAExE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC;iBACxE,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,CAAC,CAAC;YAErD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC;iBACvE,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC;YAE7D,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,2BAA2B,CAAC,IAAI,CAAC,UAAU,CAAC;iBAC5E,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAExE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,sBAAsB,CAAC,IAAI,CAAC,UAAU,CAAC;iBAC1E,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAE9E,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC;iBACtD,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC,CAAC,CAAC;YAElE,MAAM,4BAA4B,GAAa,CAAC,iEAAU,CAAC,YAAY,EAAE,EAAE,iEAAU,CAAC,cAAc,EAAE,CAAC,CAAC;YACxG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,4BAA4B,CAAC;iBAC3F,IAAI,CAAC,CAAC,MAAe,EAAE,EAAE,CAAC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC;iBAC1D,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,CAAC,CAAC;YAEnD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,CAAC,IAAI,CAAC,UAAU,CAAC;iBACxE,IAAI,CAAC,UAAU,CAAC,EAAE;gBAChB,IAAI,CAAC,2BAA2B,GAAG,UAAU,CAAC,2BAA2B,CAAC;gBAC1E,IAAI,CAAC,+BAA+B,GAAG,UAAU,CAAC,+BAA+B,CAAC;gBAClF,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC,eAAe,CAAC;gBAClD,IAAI,CAAC,+BAA+B,GAAG,UAAU,CAAC,+BAA+B,CAAC;YACrF,CAAC,CAAC,CAAC,CAAC;YAEV,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;iBACd,IAAI,CAAC,GAAS,EAAE,CAAC,uDAAD;gBACd,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBACvG,IAAI,IAAI,CAAC,aAAa,KAAK,CAAC,EAAE;oBAC3B,IAAI,CAAC,WAAW,GAAG,sGAAmB,CAAC,2BAA2B,CAAC;oBACnE,OAAO;iBACT;gBACD,IAAI,CAAC,sBAAsB,GAAG,MAAM,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBACnE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YAC9C,CAAC,EAAC;iBACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;gBACV,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;gBACtB,mDAAM,CAAC,IAAI,CAAC,mCAAmC,EAAE,CAAC,CAAC,CAAC;YACvD,CAAC,CAAC;iBACD,OAAO,CAAC,GAAG,EAAE;gBACX,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC5B,CAAC,CAAC,CAAC;QACZ,CAAC;QAEO,6BAA6B;YAClC,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,yFAAoB,CAAC,yBAAyB,CAAC,CAAC;QAClF,CAAC;QAEO,oBAAoB,CAAC,gBAA8C;YACxE,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;YAC7B,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC7B,IAAI,IAAI,CAAC,OAAO,EAAE;oBACf,IAAI,CAAC,kBAAkB,CAAC,qEAAa,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC;iBAClE;YACJ,CAAC,CAAC,CAAC;QACN,CAAC;QAEO,sBAAsB,CAAC,eAAoC;YAChE,IAAI,CAAC,eAAe,IAAI,CAAC,eAAe,CAAC,yBAAyB,EAAE;gBACjE,IAAI,CAAC,4BAA4B,GAAG,KAAK,CAAC;gBAC1C,OAAO;aACT;YACD,MAAM,iBAAiB,GAA8B,eAAe,CAAC,yBAAyB,CAAC;YAC/F,IAAI,CAAC,4BAA4B;gBAC3B,wFAAuB,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,sBAAsB,CAAC;oBACvF,wFAAuB,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,CAAC;QACnG,CAAC;QAEa,uBAAuB;;gBAClC,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,aAAa,KAAK,CAAC,EAAE;oBACtD,MAAM,OAAO,GAAkB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;oBAChE,IAAI,wBAAiC,CAAC;oBACtC,IAAI,4BAAqC,CAAC;oBAC1C,IAAI;wBACD,CAAC,wBAAwB,EAAE,4BAA4B,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;4BAC1E,IAAI,CAAC,kBAAkB,CAAC,+BAA+B,CAAC,OAAO,CAAC;4BAChE,IAAI,CAAC,kBAAkB,CAAC,2BAA2B,CAAC,OAAO,CAAC;yBAAC,CAAC,CAAC;qBACpE;oBAAC,OAAO,CAAC,EAAE;wBACT,mDAAM,CAAC,IAAI,CAAC,4CAA4C,EAAE,CAAC,CAAC,CAAC;wBAC7D,OAAO,KAAK,CAAC;qBACf;oBACD,OAAO,wBAAwB,IAAI,4BAA4B,CAAC;iBAClE;qBAAM;oBACJ,OAAO,KAAK,CAAC;iBACf;YACJ,CAAC;SAAA;QAEO,OAAO,CAAC,IAAwB,EAAE,YAA+B;YACtE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACb,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC;gBAChE,OAAO;aACT;YAED,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;YAEpE,8FAA8F;YAC9F,MAAM,eAAe,GAAW,0EAAgB,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;YAClF,IAAI,eAAe,EAAE;gBAClB,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;gBACvC,MAAM,MAAM,GAAqB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,GAAG,KAAK,eAAe,CAAC,CAAC;gBACpG,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;aACpD;iBAAM;gBACJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;gBAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;aAC9B;YAED,IAAI,CAAC,iBAAiB,GAAG,0EAAgB,CAAC,oBAAoB,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;YACtF,IAAI,CAAC,gBAAgB,GAAG,0EAAgB,CAAC,mBAAmB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YACjF,IAAI,CAAC,oBAAoB;gBACnB,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAE7F,IAAI,CAAC,6BAA6B;gBAC5B,IAAI,CAAC,oBAAoB;uBACtB,CAAC,IAAI,CAAC,2BAA2B;uBACjC,CAAC,IAAI,CAAC,iCAAiC,EAAE;uBACzC,IAAI,CAAC,4BAA4B;uBACjC,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;YAC/F,IAAI,CAAC,aAAa,GAAG,2DAAW,CAAC,SAAS,CAAC,uCAAuC,EAC5E,2DAAW,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,yBAAyB,GAAG,0EAAgB,CAAC,qBAAqB,CAAC,IAAI,EACtE,YAAY,EACZ,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAClC,CAAC;QAEO,uBAAuB,CAAC,eAAmC,EAC7D,iBAAqC;YACxC,IAAI,MAAM,GAAY,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;YACnE,IAAI,CAAC,MAAM,EAAE;gBACV,MAAM,GAAG,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;aAC3F;YACD,OAAO,MAAM,CAAC;QACjB,CAAC;QASD,IAAI,8BAA8B;YAC/B,IAAI,IAAI,CAAC,6BAA6B,EAAE;gBACrC,IAAI,CAAC,IAAI,CAAC,2BAA2B,EAAE;oBACpC,OAAO,2DAAW,CAAC,SAAS,CAAC,sCAAsC,CAAC,CAAC;iBACvE;qBAAM,IAAI,IAAI,CAAC,oBAAoB,EAAE;oBACnC,OAAO,2DAAW,CAAC,SAAS,CAAC,0CAA0C,CAAC,CAAC;iBAC3E;qBAAM,IAAI,CAAC,IAAI,CAAC,iCAAiC,EAAE,EAAE;oBACnD,OAAO,2DAAW,CAAC,SAAS,CAAC,4CAA4C,CAAC,CAAC;iBAC7E;qBAAM,IAAI,IAAI,CAAC,4BAA4B,EAAE;oBAC3C,OAAO,2DAAW,CAAC,SAAS,CAAC,oDAAoD,CAAC,CAAC;iBACrF;qBAAM,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,+BAA+B,EAAE;oBAC7F,OAAO,2DAAW,CAAC,SAAS,CAAC,qCAAqC,CAAC,CAAC;iBACtE;aACH;YACD,OAAO,EAAE,CAAC;QACb,CAAC;QAED,IAAI,gCAAgC;YACjC,IAAI,IAAI,CAAC,4BAA4B,EAAE;gBACpC,OAAO,2DAAW,CAAC,SAAS,CAAC,oDAAoD,CAAC,CAAC;aACrF;iBAAM,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;gBACjC,OAAO,2DAAW,CAAC,SAAS,CAAC,2BAA2B,CAAC,CAAC;aAC5D;YACD,OAAO,EAAE,CAAC;QACb,CAAC;QAED,IAAI,iCAAiC;YAClC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;gBAC1B,OAAO,2DAAW,CAAC,SAAS,CAAC,2BAA2B,CAAC,CAAC;aAC5D;iBAAM,IAAI,IAAI,CAAC,oBAAoB,EAAE;gBACnC,OAAO,2DAAW,CAAC,SAAS,CAAC,mDAAmD,CAAC,CAAC;aACpF;iBAAM,IAAI,CAAC,IAAI,CAAC,2BAA2B,EAAE;gBAC3C,OAAO,2DAAW,CAAC,SAAS,CAAC,sCAAsC,CAAC,CAAC;aACvE;iBAAM,IAAI,IAAI,CAAC,aAAa,GAAG,qBAAqB,CAAC,iCAAiC,EAAE;gBACtF,OAAO,2DAAW,CAAC,SAAS,CAAC,4CAA4C,CAAC,CAAC;aAC7E;YACD,OAAO,EAAE,CAAC;QACb,CAAC;QAED,oBAAoB,CAAC,KAAuB;YACzC,OAAO,gGAA0B,CAAC,wBAAwB,CAAC,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC9F,CAAC;QAED,iBAAiB,CAAC,KAAuB;YACtC,IAAI,KAAK,YAAY,kFAAiB,EAAE;gBACrC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;aACzC;iBAAM,IAAI,KAAK,YAAY,gFAAe,EAAE;gBAC1C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;aACxC;iBAAM,IAAI,KAAK,YAAY,kFAAiB,EAAE;gBAC5C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;aAC1C;iBAAM,IAAI,KAAK,YAAY,+EAAc,EAAE;gBACzC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;aACtD;iBAAM,IAAI,KAAK,YAAY,mFAAkB,EAAE;gBAC7C,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;aAC7C;iBAAM,IAAI,KAAK,YAAY,+FAA8B,EAAE;gBACzD,IAAI,CAAC,2BAA2B,EAAE,CAAC;aACrC;iBAAM,IAAI,KAAK,YAAY,8FAA6B,EAAE;gBACxD,IAAI,CAAC,yBAAyB,EAAE,CAAC;aACnC;iBAAM,IAAI,KAAK,YAAY,uFAAsB,EAAE;gBACjD,IAAI,CAAC,eAAe,EAAE,CAAC;aACzB;iBAAM;gBACJ,mDAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;aAC7C;QACJ,CAAC;QAED,aAAa,CAAC,aAAiC,EAAE,YAAoB;YAClE,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC7B,OAAO;aACT;YACD,mDAAmD;YACnD,IAAI,IAAI,CAAC,kBAAkB,EAAE;gBAC1B,uDAAuD;gBACvD,MAAM,sBAAsB,GAAY,CAAC,YAAY,CAAC;gBACtD,IAAI,sBAAsB,EAAE;oBACzB,OAAO;iBACT;gBACD,2GAA2G;gBAC3G,MAAM,iBAAiB,GAAY,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC;gBAElG,IAAI,2EAAgB,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,IAAI,iBAAiB,CAAC,EAAE;oBAC3G,OAAO;iBACT;aACH;YAED,MAAM,aAAa,GAAqB,iFAAgB,CAAC,SAAS,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;YAEhG,IAAI,gEAAY,CAAC,wBAAwB,CAAC;iBACnC,OAAO,CAAC,GAAG,EAAE,aAAa,CAAC,8BAA8B,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;iBACtE,IAAI,CAAC,aAAa,CAAC;iBACnB,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,qEAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACjF,CAAC;QAED,cAAc,CAAC,aAAiC;YAC7C,MAAM,OAAO,GAAqB,iFAAgB,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;YAC/E,IAAI,gEAAY,CAAC,wBAAwB,CAAC;iBACnC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,8BAA8B,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;iBAChE,IAAI,CAAC,OAAO,CAAC;iBACb,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,qEAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACjF,CAAC;QAED,YAAY,CAAC,MAAM,GAAqB,IAAI;YACzC,IAAI,OAA0B,CAAC;YAC/B,mDAAmD;YACnD,MAAM,WAAW,GAAoB,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAC3F,IAAI,MAAM,EAAE;gBACT,OAAO,GAAG,oFAAiB,CAAC,UAAU,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;aAC/E;iBAAM;gBACJ,MAAM,gBAAgB,GAAU,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACxF,KAAK,MAAM,WAAW,IAAI,IAAI,CAAC,iBAAiB,EAAE;oBAC/C,gBAAgB,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,KAAK;yBACnC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,KAAK,6DAAgB,CAAC,QAAQ,CAAC;yBAC7D,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;iBACrC;gBACD,OAAO,GAAG,oFAAiB,CAAC,YAAY,CAAC,gBAAgB,EAAE,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;aAC3F;YAED,IAAI,gEAAY,CAAC,yBAAyB,CAAC;iBACpC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;iBACjB,IAAI,CAAC,OAAO,CAAC;iBACb,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,qEAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACjF,CAAC;QAED,cAAc,CAAC,MAAwB;YACpC,IAAI,gEAAY,CAAC,wBAAwB,CAAC;iBACnC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;iBACjB,IAAI,CAAC,iFAAgB,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;iBAC3C,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,qEAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACjF,CAAC;QAED,2BAA2B;YACxB,IAAI,gEAAY,CAAC,wDAAU,CAAC,kCAAkC,CAAC;iBACxD,aAAa,CAAC,gEAAY,CAAC,SAAS,CAAC;iBACrC,IAAI,EAAE;iBACN,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,qEAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/E,CAAC;QAED,yBAAyB;YACtB,MAAM,OAAO,GAAQ;gBAClB,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW;gBAC7C,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,eAAe;aACnD,CAAC;YACF,IAAI,gEAAY,CAAC,sCAAsC,CAAC;iBACjD,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;iBACjB,IAAI,CAAC,OAAO,CAAC;iBACb,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,qEAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/E,CAAC;QAED,iBAAiB,CAAC,MAAwB;YACvC,MAAM,OAAO,GAAQ;gBAClB,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG;aAC7B,CAAC;YACF,IAAI,gEAAY,CAAC,4BAA4B,CAAC;iBACvC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;iBACjB,IAAI,CAAC,OAAO,CAAC;iBACb,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,qEAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpF,CAAC;QAED,eAAe;YACZ,MAAM,OAAO,GAAyB;gBACnC,eAAe,EAAE,IAAI,CAAC,eAAe;gBACrC,kBAAkB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW;aACtD,CAAC;YACF,IAAI,gEAAY,CAAC,wDAAU,CAAC,kCAAkC,CAAC;iBACxD,aAAa,CAAC,gEAAY,CAAC,SAAS,CAAC;iBACrC,IAAI,CAAC,OAAO,CAAC;iBACb,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,qEAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/E,CAAC;QAED,mBAAmB,CAAC,KAAU,EAAE,cAAuB;YACpD,MAAM,KAAK,GAAuB,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YAChE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBACxE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAClC;YACD,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC;YAC/C,IAAI,cAAc,EAAE;gBACjB,2EAA2E;gBAC3E,IAAI,IAAI,CAAC,kBAAkB,EAAE;oBAC1B,OAAO;iBACT;gBACD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;aAClC;iBAAM;gBACJ,qEAAqE;gBACrE,MAAM,mBAAmB,GAAY,2EAAgB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACzE,MAAM,iBAAiB,GAAY,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC;gBAClF,IAAI,IAAI,CAAC,kBAAkB,IAAI,mBAAmB,IAAI,iBAAiB,EAAE;oBACtE,OAAO;iBACT;gBAED,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;aAC7B;QACJ,CAAC;QAED,IAAI,kBAAkB;YACnB,OAAO,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,qBAAqB,CAAC;QAC/G,CAAC;QAED,0BAA0B;YACvB,OAAO,CAAC,CAAC,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChE,CAAC,IAAI,CAAC,4BAA4B,CAAC;QAC5C,CAAC;QAED,IAAI,8BAA8B;YAC/B,IAAI,IAAI,CAAC,4BAA4B,EAAE;gBACpC,oEAAoE;gBACpE,OAAO,EAAE,CAAC;aACZ;YACD,MAAM,MAAM,GAAa,CAAC,2EAAgB,CAAC,yBAAyB,CAAC,CAAC;YACtE,IAAI,IAAI,CAAC,IAAI,EAAE;gBACZ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;qBAC/B,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;qBACrB,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;aAC5C;YACD,OAAO,MAAM,CAAC;QACjB,CAAC;QAED,IAAI,uBAAuB;YACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU,KAAK,6DAAgB,CAAC,QAAQ,CAAC,CAAC;QAChG,CAAC;QAED,IAAI,UAAU;YACX,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,KAAK,CAAC,CAAC;QAC9C,CAAC;;IAxauB,uDAAiC,GAAW,CAAC,CAAC;IA4BtE;QADC,uGAAqB,EAAE;;gEACF;IAoBtB;QADC,8EAAc;;;;sDAsDd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mECxJJ;YAAA;YAAA,YAKkD;YADjC;;gCAAoB;;YACpB;;gCAAgC;;YALjD;QAAA,khBAKkD,gFAClD,mDAJiB,mBAAsB,eACtB,oBAAoB,EAHrC,YAKkD,EAHjC,SAAsB,EACtB,SAAoB;AAAA;2GAMrC,kJAAgD,kFAC7C,kKAAsC,KAAO,0EAChD;2GAEA,2lCAG8D,8EAC9D,mDAHuB,mBAAmC,cAEnC,mBAAsC,oBADtC,mBAAyB,aAFhD,YAG8D,EAFvC,SAAmC,EAEnC,SAAsC,EADtC,SAAyB;2GAkB1C,+IAA6C,obAE7C;2GACA,gJAA6C,sbAE7C;2GANH,4JAA2E,qFACxE,qZAA6C,IAEvC,gFACN,qZAA6C,IAEvC,6EACT,mDANQ,oBAAmB,aAAxB,YAA6C,EAAxC,SAAmB,GAGnB,mBAAkB,aAAvB,YAA6C,EAAxC,SAAkB;;mEAKvB;YAAA;YAAA,YAOkD;YAA5C;;gCAA2C;;YAPjD;QAAA,8rBAOkD,2FAE/C;YAAA;YAAA,YAKkD;YAA5C;;gCAA2C;;YALjD;QAAA,6lBAKkD,yFAClD,MAAgC,gFACnC,mDAbM,mBAAqC,mBACrC,kBAAe,oBACf,mBAAyC,qBACzC,mBAAiE,kCANvE,YAOkD,EAJ5C,SAAqC,EACrC,SAAe,EACf,SAAyC,EACzC,SAAiE,GAI9D,kBAAgB,oBAEhB,mBAAyC,qBADzC,oBAA+B,oBAE/B,kBAA0C,uCAJhD,YAKkD,EAJ5C,SAAgB,EAEhB,SAAyC,EADzC,SAA+B,EAE/B,SAA0C;AAAA;;mEAMnD;YAAA;YAAA;YAAA;;gCAOmD;;YAA9C;;gCAA6C;;YAPlD;QAAA,+jBAOmD,yFAChD;YAAA;YAAA,YAGyE;YAFjE;;gCAAwB;;YADhC;QAAA,aAGyE,IAAjE,uDAAgE,IAAC,sFACtE,mjBAAiC,IAAW,mFAC/C,MAAS,mFACT,gJAA6D,IAAvD,wDAAsD,IAAQ,gFACvE,mDAVK,8BAAgC,EAChC,2BAA6B,EAF7B,mBAAwD,6CAJ7D,YAOmD,EAF9C,SAAgC,EAChC,SAA6B,EAF7B,SAAwD,mDAMlD,oBAA+B,oBAC/B,sMAAgE,IAHxE,YAGyE,EADjE,SAA+B,EAC/B,SAAgE,GAGlE,kMAAsD,IAA5D,aAA6D,EAAvD,SAAsD;AAAA;4GAKlE,mnBAGgG,GAD1F,uDAAsE,GACtE,uDAAyF,IAAC,iJAEhG,yBAHM,qNAAsE,IACtE,+NAAyF,IAH/F,YAGgG,EAD1F,SAAsE,EACtE,SAAyF,mDAAC,wQAEhG;;mEACA;YAAA;YAAA,YAOkD;YAA5C;;gCAA2C;;YAPjD;QAAA,4rBAOkD,mFAClD,mDAHM,mBAAoC,mBACpC,mBAAmC,oBAHnC,8CAA+D,gCAC/D,mBAAmD,mCAFnD,mBAAgD,qBAFtD,YAOkD,EAF5C,SAAoC,EACpC,SAAmC,EAHnC,SAA+D,EAC/D,SAAmD,EAFnD,SAAgD;AAAA;;mEAUnD;YAAA;YAAA,YAQkD;YAA5C;;gCAA2C;;YARjD;QAAA,ytBAQkD,oFAClD,mDAPM,mBAAqC,mBAGrC,kBAAa,oBADb,mBAAqC,0BADrC,mBAA8C,iCAG9C,2CAA0C,qBAC1C,mBAAiE,kCAPvE,YAQkD,EAN5C,SAAqC,EAGrC,SAAa,EADb,SAAqC,EADrC,SAA8C,EAG9C,SAA0C,EAC1C,SAAiE;AAAA;;mEAT1E,qJACgE,qFAC7D,+dAQkD,IAC3B,kFAEvB,MAA2D,gFAC3D;YAAA;YAAA;YAAA;;gCAKkD;;YAA7C;;gCAA4C;;YALjD;QAAA,+jBAKkD,yFAC/C,+IAA+D,IAAzD,wDAAwD,IAAQ,gFACzE,MAAM,6EACT,mDAnBS,mBAAqC,mBAD3C,YAQkD,EAP5C,SAAqC,GActC,8BAAgC,EAChC,2BAA6B,EAF7B,mBAAqD,0CAF1D,YAKkD,EAF7C,SAAgC,EAChC,SAA6B,EAF7B,SAAqD,2BAIjD,mMAAwD,IAA9D,YAA+D,EAAzD,SAAwD;AAAA;;mEAhGvE,yHAAoD,kFACjD;YAAA;YAAA,YASkD;YAA5C;;gCAA2C;;YATjD;QAAA,wgCASkD,mFAClD,MAA4B,+EAE5B,qZAA2E,IAOrE,6EACN,uJAA2B,qFACxB,+dAOkD,IAS9B,kFAEpB,MAA8D,gFAC9D,sZAOmD,IAQ7C,6EACT,MAAM,+EAEN,MAAiC,6EACjC,uZAGgG,IAE1E,6EACtB,uZAOkD,IACnB,+EAE/B,uZACgE,IAqB1D,0EACT,mDAjGS,mBAA6B,eAC7B,mBAAiD,yBAEjD,mBAAuC,oBACvC,mBAA+D,gCAE/D,mBAAuE,oCADvE,mBAAgD,iCAHhD,mBAAyC,qBAKzC,mBAAgD,4BARtD,YASkD,EAR5C,SAA6B,EAC7B,SAAiD,EAEjD,SAAuC,EACvC,SAA+D,EAE/D,SAAuE,EADvE,SAAgD,EAHhD,SAAyC,EAKzC,SAAgD,GAIhB,mBAAoC,+BAA1E,YAA2E,EAArC,SAAoC,GAWjE,mBAAuC,oBAF7C,aAOkD,EAL5C,SAAuC,GAkBxC,oBAAoC,+BADzC,aAOmD,EAN9C,UAAoC,GAmBtC,6EAA0D,IADhE,aAGgG,EAF1F,UAA0D,GAM1D,iDAAmC,GADzC,aAOkD,EAN5C,UAAmC,GAUpC,6EAA0D,IAD/D,aACgE,EAA3D,UAA0D;AAAA;uPArGgB,0EAClF,o1BAAoB,kJAEpB,IAAK,4EAEL,qZAKkD,IAChC,4EAElB,MAAuB,0EACvB,sZAAgD,IAEzC,4EAEP,sZAG8D,IACtC,4EAExB,sZAAoD,IAmGrC,0EACf,mDA3HI,kBAAe,EAAnB,YAAoB,EAAhB,SAAe,GAKF,mBAAoB,eADrC,YAKkD,EAJjC,SAAoB,GAQT,mBAAmB,cAA/C,aAAgD,EAApB,SAAmB,GAIxB,wCAAmC,eAA1D,aAG8D,EAHvC,SAAmC,GAM5C,wCAAqC,iBAAnD,aAAoD,EAAtC,SAAqC,2BAvB/B,oMAEpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yGC8BS,ykGAEoE,0FACjE,i3DAA6B,0FAC1B,2jBAC4C,6FAC5C,MAAiB,mFACpB,MAAc,sFACd,4hCAAa,0FACV,2jBACiE,6FACjE,MAAiB,mFACpB,MAAc,mFACjB,mIAXY,gFAAuD,GAFnE,YAEoE,EAAxD,SAAuD,GADvD,kBAAkB,oBAD9B,YAEoE,EADxD,SAAkB,GAE3B,6BAA6B,GACV,iEAA0B,gCAC1B,iEAA2B,iCAD3C,aAC4C,EAD5B,UAA0B,EAC1B,UAA2B,GAG9C,aAAa,GACM,mEAA+B,qCAC/B,4EAAgD,GADhE,aACiE,EADjD,UAA+B,EAC/B,UAAgD,2BAVtE,qOAEoE,GACjE,4QAA6B,GAK7B,+JAAa;yGAQhB,wHAAgC,maAEhC;yGACG,wHAAgC,0cAEnC;;2SAtD0E,0EACnF;YAAA;YAAA,YAQuC;YAD1B;;gCAAiC;;YACjC;;gCAAyB;;YARtC;QAAA,g2BAQuC,KAN1B,uDAAkG,GAElG,uDAA+C,IAIrB,0EACpC,yJAA8B,qFAC3B;YAAA;YAAA;;;;;;;;;;;;;spDAAkE,uFAC/D,86DAAgD,0FAC7C,6mBAAgD,4KAEhD,IAAQ,sFACR;YAAA;YAAA;;;;;;;;;;;;;;;;;;;;;siFAIwB,0FACxB,4nBAAmB,6EAA6B,MAAoB,mFACvE,MAAsB,gFACzB,MAAO,kFAEP;YAAA;YAAA,YAA+D;YAAlC;;gCAAiC;;YAA9D;QAAA,q/MAA+D,uFAC5D,48FAA+D,mKAE/D,IAAgB,mFAChB,m7FAAgD,qKAEhD,IAAgB,qFAEhB,2hBAEoE,IAWvD,qFAEb,0uBAAe,sFACf,iZAAgC,IAEzB,mFACJ,iZAAgC,IAE5B,gFACP,MAAgB,gFACnB,MAAe,6EAClB,MAAM,uEACT,MAAc,0EACd,mDA1Da,mBAAe,QACf,mBAAuB,aACvB,+NAAkG,KAClG,4EAA0E,GAC1E,0KAA+C,IAG/C,mBAAiC,gBADjC,mCAAiD,0BADjD,mBAAwB,UALrC,YAQuC,EAR1B,SAAe,EACf,SAAuB,EACvB,SAAkG,EAClG,SAA0E,EAC1E,SAA+C,EAG/C,SAAiC,EADjC,SAAiD,EADjD,SAAwB,GAKM,oBAA4B,iBAAjE,aAAkE,EAA7B,UAA4B,GAAnD,6BAAsB,EAApC,aAAkE,EAApD,UAAsB,GAE9B,aAAgD,GAMzC,6BAA4B,EAHnC,aAIwB,EADjB,UAA4B,GAH5B,oCAAsB,EAA7B,aAIwB,EAJjB,UAAsB,GAItB,mBAAe,EAJtB,aAIwB,EAAjB,UAAe,GAKC,oBAAiC,gBAA9D,aAA+D,EAAlC,UAAiC,GAC5C,6BAA2B,EAA1C,aAA+D,EAAhD,UAA2B,GAG3B,kCAAgC,EAA/C,aAAgD,EAAjC,UAAgC,GAInC,oBAA+B,QAA3C,cAEoE,EAFxD,UAA+B,GAgBrC,uCAAyB,GAA/B,cAAgC,EAA1B,UAAyB,GAGtB,uCAAyB,GAA/B,cAAgC,EAA1B,UAAyB,mDAzCrC,4+BAAkE,GAC/D,qVAAgD,GAC7C,8GAAgD,2OAEhD,GACA,m2BAIwB,GACxB,4IAAmB,4EAA6B,GAItD,8JAA+D,GAC5D,kJAA+D,2OAE/D,GACA,kJAAgD,gPAEhD,GAiBA,iDAAe;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9C2F;AAGvD;AAEU;AACH;AACb;AACqB;AACD;AAC9B;AAQrC;UAAM,8BAA8B;QAcxC,YAAoB,gCAAsE,EAC5E,WAAwB;YADlB,qCAAgC,GAAhC,gCAAgC,CAAsC;YAC5E,gBAAW,GAAX,WAAW,CAAa;YAoCtC,oBAAe,GAAgB,CAAC,OAAwB,EAA2B,EAAE;;gBAClF,IAAI,CAAC,yBAAyB,GAAG,EAAE,CAAC;gBACpC,IAAI,CAAC,CAAD,MAAC,IAAI,CAAC,OAAO,0CAAE,mBAAmB,GAAE;oBACrC,6CAA6C;oBAC7C,OAAO;iBACT;gBAED,MAAM,UAAU,GAAW,IAAI,CAAC,aAAa,EAAE,CAAC;gBAChD,IAAI,CAAC,UAAU,EAAE;oBACd,IAAI,CAAC,yBAAyB,GAAG,2DAAW,CAAC,SAAS,CAChD,yDAAyD,CAAC,CAAC;iBACnE;qBAAM,IAAI,UAAU,CAAC,MAAM,GAAG,GAAG,EAAE;oBACjC,IAAI,CAAC,yBAAyB,GAAG,2DAAW,CAAC,SAAS,CAChD,8DAA8D,CAAC,CAAC;iBACxE;gBACD,IAAI,IAAI,CAAC,yBAAyB,EAAE;oBACjC,OAAO,EAAC,eAAe,EAAE,EAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAC,EAAC,CAAC;iBACnD;gBACD,OAAO,IAAI,CAAC;YACf,CAAC,CAAC;YAtDC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBAC1C,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aACzD,CAAC,CAAC;QACN,CAAC;QAED,QAAQ;YACL,IAAI,CAAC,OAAO,GAAG,2DAAW,CAAC,eAAe,EAAE,CAAC;YAC7C,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;gBAC5B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAC,CAAC,CAAC;aACxE;YACD,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACpC,CAAC;QAGK,MAAM;;gBACT,6FAA6F;gBAC7F,mFAAmF;gBACnF,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;oBAC9B,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;oBACxC,OAAO;iBACT;gBAED,IAAI,CAAC,IAAI,CAAC,yBAAyB,EAAE,EAAE;oBACpC,OAAO;iBACT;gBACD,MAAM,QAAQ,GAA6B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAsB,EAAE,EAAE;oBAC1F,MAAM,OAAO,GAAkB,0EAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACpE,MAAM,IAAI,GAAwB,qFAAmB,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,OAAO,CAAC,CAAC;oBACpG,OAAO,IAAI,CAAC,gCAAgC,CAAC,qBAAqB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;gBACrF,CAAC,CAAC,CAAC;gBAEH,MAAM,KAAK,GAAoB,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAC3D,2DAAW,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YACvC,CAAC;SAAA;QAuBO,aAAa;YAClB,OAAO,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK;mBAChE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAC/D,CAAC;QAEO,yBAAyB;YAC9B,MAAM,iBAAiB,GAAuB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CACjE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,KAAK,2EAAe,CAAC,SAAS,CAAC,CAAC;YAClE,IAAI,CAAC,kBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,MAAM,GAAE;gBAC7B,OAAO,IAAI,CAAC;aACd;YAED,IAAI,iBAAiB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACjC,IAAI,CAAC,YAAY;oBACX,2DAAW,CAAC,SAAS,CACf,mEAAmE,EACnE,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;aAC1C;iBAAM;gBACJ,IAAI,CAAC,YAAY;oBACX,2DAAW,CAAC,SAAS,CACf,oEAAoE,EACpE,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;aAC3C;YACD,OAAO,KAAK,CAAC;QAChB,CAAC;;IA5FD;QADC,0FAAY,EAAE;;wEACM;IAErB;QADC,kGAAgB,EAAE;;gEACL;IAwBd;QADC,6EAAM,EAAE;;;;gEAoBR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DJ;AAAA;AAAO,MAAM,sBAAsB;CAOlC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbqD;AACV;AACZ;AAE4B;AACU;AACU;AAUxD;AAImC;AAOpD,MAAM,mBAAmB;IAiB7B,YAAoB,uBAAoD,EAC1D,gCAAsE,EACtE,gCAAsE,EACtE,WAAwB;QAHlB,4BAAuB,GAAvB,uBAAuB,CAA6B;QAC1D,qCAAgC,GAAhC,gCAAgC,CAAsC;QACtE,qCAAgC,GAAhC,gCAAgC,CAAsC;QACtE,gBAAW,GAAX,WAAW,CAAa;QAlB7B,SAAI,GAAgB,+CAAI,CAAC;QAC1B,oBAAe,GAAQ,EAAE,CAAC;QAGlC,UAAK,GAAuB,EAAE,CAAC;QAC/B,kBAAa,GAAuB,EAAE,CAAC;QACvC,YAAO,GAAY,IAAI,CAAC;QA+HxB,oBAAe,GAAgB,CAAC,OAAwB,EAA2B,EAAE;YAClF,IAAI,CAAC,yBAAyB,GAAG,EAAE,CAAC;YACpC,MAAM,UAAU,GAAW,IAAI,CAAC,aAAa,EAAE,CAAC;YAChD,IAAI,CAAC,UAAU,EAAE;gBACd,IAAI,CAAC,yBAAyB,GAAG,2DAAW,CAAC,SAAS,CAChD,yDAAyD,CAAC,CAAC;aACnE;iBAAM,IAAI,UAAU,CAAC,MAAM,GAAG,GAAG,EAAE;gBACjC,IAAI,CAAC,yBAAyB,GAAG,2DAAW,CAAC,SAAS,CAChD,8DAA8D,CAAC,CAAC;aACxE;iBAAM,IAAI,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,KAAK,UAAU,EAAE;gBACzF,IAAI,CAAC,yBAAyB,GAAG,2DAAW,CAAC,SAAS,CAChD,gEAAgE,CAAC,CAAC;aAC1E;YACD,IAAI,IAAI,CAAC,yBAAyB,EAAE;gBACjC,OAAO,EAAC,eAAe,EAAE,EAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAC,EAAC,CAAC;aACnD;YACD,OAAO,IAAI,CAAC;QACf,CAAC,CAAC;QAnIC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC1C,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACzD,CAAC,CAAC;IACN,CAAC;IAEK,QAAQ;;YACX,IAAI,CAAC,OAAO,GAAG,2DAAW,CAAC,eAAe,EAAE,CAAC;YAC7C,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;gBAC/C,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,eAAe,EAAC,CAAC,CAAC;aAC3E;YAED,IAAI;gBACD,MAAM,SAAS,GAAuB,MAAM,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CACtF,qEAAa,CAAC,aAAa,CAAC,CAAC;gBACnC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;gBAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACvB;YAAC,OAAO,KAAK,EAAE;gBACb,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,aAAa,GAAG,CAAC,KAAK,CAAC,CAAC;aAC/B;QACJ,CAAC;KAAA;IAED,UAAU,CAAC,IAAwB;QAChC,MAAM,KAAK,GAAuB,IAAI;aAC/B,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC;aAC3B,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,0EAAgB,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QAChE,MAAM,OAAO,GAAuB,IAAI;aACjC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;aAC5B,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,0EAAgB,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QAC5D,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC;QAC1E,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QAEvD,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACvB,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC5D,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAChC;SACH;QACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,SAAS;QACN,6FAA6F;QAC7F,mFAAmF;QACnF,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;YAC9B,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;YACxC,OAAO;SACT;QAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAC1C,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;YACxD,OAAO;SACT;QAED,MAAM,UAAU,GAAW,IAAI,CAAC,aAAa,EAAE,CAAC;QAEhD,MAAM,KAAK,GAA0B,IAAI,CAAC,aAAa;aAChD,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,UAAU,CAAC;aACnE,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,qFAAmB,CAAC,OAAO,CAAC,MAAM,CACzC,UAAU,EAAE,qEAAa,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAE/D,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1C,2BAA2B;YAC3B,MAAM,MAAM,GAAqB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YACpF,MAAM,SAAS,GAAuB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3G,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAC9B,qFAAmB,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,qEAAa,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SACzF;QAED,MAAM,QAAQ,GAA6B,KAAK;aACzC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,gCAAgC,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;QAEpG,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,2DAAW,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;YACjC,OAAO;SACT;QACD,6FAA6F;QAC7F,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;YAC3B,MAAM,wBAAwB,GACxB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,wBAAwB,KAAK,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;YACzF,MAAM,sBAAsB,GAAY,UAAU,KAAK,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;YACpF,IAAI,wBAAwB,IAAI,sBAAsB,EAAE;gBACrD,MAAM,IAAI,GAA6B,+FAAwB,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBAC3F,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,uBAAuB,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;aAC9G;SACH;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;aACd,IAAI,CAAC,CAAC,KAAsB,EAAE,EAAE,CAAC,2DAAW,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;aACrE,KAAK,CAAC,GAAG,EAAE,CAAC,2DAAW,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,aAAa;QACV,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YAClC,OAAO,CAAC,2DAAW,CAAC,SAAS,CAAC,yDAAyD,CAAC,CAAC,CAAC;SAC5F;QAED,MAAM,uBAAuB,GAAa,IAAI,CAAC,aAAa;aACrD,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,KAAK,2EAAe,CAAC,SAAS,CAAC;aACvE,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,2DAAW,CAAC,SAAS,CAC5B,mEAAmE,EACnE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAC9B,IAAI,uBAAuB,CAAC,MAAM,GAAG,CAAC,EAAE;YACrC,OAAO,uBAAuB,CAAC;SACjC;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;YAC3B,MAAM,oCAAoC,GAAW,IAAI,CAAC,qCAAqC,EAAE,CAAC;YAClG,IAAI,oCAAoC,EAAE;gBACvC,OAAO,CAAC,oCAAoC,CAAC,CAAC;aAChD;SACH;IACJ,CAAC;IAqBD,aAAa;QACV,OAAO,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK;eAChE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IAC/D,CAAC;IAEO,qCAAqC;QAC1C,IAAI,IAAI,CAAC,+CAA+C,EAAE,EAAE;YACzD,OAAO,2DAAW,CAAC,SAAS,CAAC,iFAAiF,CAAC,CAAC;SAClH;QACD,IAAI,IAAI,CAAC,iDAAiD,EAAE,EAAE;YAC3D,OAAO,2DAAW,CAAC,SAAS,CAAC,gFAAgF,CAAC,CAAC;SACjH;QACD,IAAI,IAAI,CAAC,iDAAiD,EAAE,EAAE;YAC3D,OAAO,2DAAW,CAAC,SAAS,CAAC,gFAAgF,CAAC,CAAC;SACjH;IACJ,CAAC;IAEO,+CAA+C;QACpD,uFAAuF;QACvF,MAAM,aAAa,GAAqB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QAC3F,IAAI,CAAC,aAAa,EAAE;YACjB,OAAO,KAAK,CAAC;SACf;QACD,MAAM,mCAAmC,GAAW,IAAI,CAAC,aAAa,CAAC,MAAM,CACvE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC;QAC3F,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,KAAK,mCAAmC,CAAC,CAAC;IAC/E,CAAC;IAEO,iDAAiD;QACtD,2DAA2D;QAC3D,MAAM,mBAAmB,GAAW,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,wBAAwB,CAAC;QACtF,IAAI,CAAC,CAAC,mBAAmB,IAAI,mBAAmB,KAAK,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;YACjF,OAAO,KAAK,CAAC;SACf;QACD,MAAM,eAAe,GAAqB,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC;QACpF,MAAM,qCAAqC,GAAW,IAAI,CAAC,aAAa,CAAC,MAAM,CACzE,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACtG,OAAO,CAAC,eAAe,IAAI,eAAe,CAAC,KAAK,CAAC,MAAM,KAAK,qCAAqC,CAAC,CAAC;IACtG,CAAC;IAEO,iDAAiD;QACtD,sEAAsE;QACtE,MAAM,2BAA2B,GAAuC,IAAI,CAAC,kCAAkC,EAAE,CAAC,OAAO,EAAE,CAAC;QAC5H,IAAI,eAAe,GAAW,CAAC,CAAC;QAChC,OAAO,IAAI,EAAE;YACV,MAAM,gBAAgB,GAAqC,2BAA2B,CAAC,IAAI,EAAE,CAAC;YAC9F,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE;gBACzB,MAAM,UAAU,GAAW,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACrD,MAAM,UAAU,GAAW,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACrD,MAAM,WAAW,GAAqB,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;gBACvE,IAAI,WAAW,CAAC,KAAK,CAAC,MAAM,KAAK,UAAU,EAAE;oBAC1C,eAAe,EAAE,CAAC;iBACpB;aACH;iBAAM;gBACJ,MAAM;aACR;SACH;QACD,OAAO,CAAC,eAAe,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAClG,CAAC;IAEO,kCAAkC;QACvC,MAAM,aAAa,GAAqB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QAC3F,MAAM,4BAA4B,GAAwB,IAAI,GAAG,EAAE,CAAC;QACpE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC/B,wEAAwE;YACxE,MAAM,yBAAyB,GACzB,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;YACjG,IAAI,yBAAyB,EAAE;gBAC5B,IAAI,gBAAgB,GAAW,CAAC,CAAC;gBACjC,IAAI,4BAA4B,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;oBACzD,gBAAgB,IAAI,4BAA4B,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAC7E;gBACD,4BAA4B,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC;aAC3E;QACJ,CAAC,CAAC,CAAC;QACH,OAAO,4BAA4B,CAAC;IACvC,CAAC;IAED,aAAa,CAAC,IAAsB;QACjC,OAAO,2EAAe,CAAC,SAAS,KAAK,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;IAClE,CAAC;IAED,IAAI,KAAK;QACN,OAAO,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC;YACxC,CAAC,CAAC,2DAAW,CAAC,SAAS,CAAC,6CAA6C,CAAC;YACtE,CAAC,CAAC,2DAAW,CAAC,SAAS,CAAC,6CAA6C,CAAC,CAAC;IAChF,CAAC;IAED,IAAI,UAAU;QACX,OAAO,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC;IACxF,CAAC;CACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4GC3QE,irCAAgE,iFAC7D,2HAAM,gFAAQ,MAAO,0EACxB,2BAFiC,8BAA8B,EAA/D,YAAgE,EAA/B,SAA8B,mDAA/D,uPAAgE,GACvD,iDAAQ;4GAHpB,mrDACoD,8EACjD,4dAAgE,IAEzC,uEAC1B,mDAJc,mBAAqC,gBADnD,YACoD,EAAtC,SAAqC,GAC1B,oBAAU,EAAhC,aAAgE,EAA1C,SAAU,2BAFnC,6CACoD;4GAN8B,0EAClF,oJAAwB,kFACrB,+DAAY,IAAa,0EAC5B,MAAK,4EAEL,qZACoD,IAIrC,0EACf,mDANc,mBAAY,OAA1B,YACoD,EADtC,SAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mECkBpB;YAAA;YAAA,YAKwB;YAHhB;;gCAAqB;;YAF7B;QAAA,mgCAKwB,8JAExB,yBAJQ,uCAA0B,EAHlC,YAKwB,EAFhB,SAA0B,2BAHlC,2jBAKwB,mQAExB;AAAA;;mEA2BG;YAAA;YAAA,YAOwB;YAFhB;;gCAA8C;;YALtD;QAAA,89CAOwB,0FACrB,+IAA8G,IAAxG,uDAAuG,IAAQ,mFACxH,mDAPQ,+BAAqB,EAErB,mFAAsE,GAJ9E,YAOwB,EALhB,SAAqB,EAErB,SAAsE,GADtE,2CAAmD,uBAGnD,sCAAyB,EANjC,YAOwB,EAJhB,SAAmD,EAGnD,SAAyB,mDANjC,2jBAOwB,GACf,kQAAuG,KAA7G,YAA8G,EAAxG,UAAuG;AAAA;;mEAa1G;YAAA;YAAA,YAKwB;YADhB;;gCAAoB;;YAJ5B;QAAA,mgCAKwB,gLAExB,yBALQ,mCAAsB,EAF9B,YAKwB,EAHhB,SAAsB,2BAF9B,2jBAKwB,8PAExB;AAAA;;mEACA;YAAA;YAAA,YAKwB;YADhB;;gCAAsB;;YAJ9B;QAAA,mgCAKwB,gGACrB,+IAAmG,IAA7F,uDAA4F,IAAQ,yFAC7G,2BALQ,mCAAsB,EAF9B,YAKwB,EAHhB,SAAsB,mDAF9B,2jBAKwB,GACf,8OAA4F,oBAAlG,YAAmG,EAA7F,SAA4F;AAAA;;mEAOlG;YAAA;YAAA,YAKwB;YADhB;;gCAAwB;;YAJhC;QAAA,mgCAKwB,0HAExB,2BAJQ,wHAAuB,GAH/B,YAKwB,EAFhB,SAAuB,2BAH/B,2jBAKwB,gEAExB;AAAA;oHAZH,yHAA2D,iGACxD,0JAA8B,KAAM,4FACpC,2kBAA+B,sLAE/B,IAAQ,4FACR,weAKwB,IAEf,yFACZ,mDAXG,YAA+B,GAKvB,mBAAgD,4BAFxD,aAKwB,EAHhB,SAAgD,2BALxD,0GAA+B,+QAE/B;;mEA/BT,g8EACoF,wFACjF;YAAA;YAAA;;;;;q0BAI0B,4KAE1B,IAAS,mFACT,04BACqH,KAAlG,wDAAiG,IAAC,sFAClH,2ZAKwB,IAEf,sFACT,2ZAKwB,IAEf,sFACT,2ZAA2D,IAa5C,mFAClB,MAAoB,gFACvB,mDAxCW,0CAAgC,EAEhC,0DAAgD,GAFxD,aAI0B,EAJlB,SAAgC,EAEhC,UAAgD,GAU7C,sFAAmE,IAH3E,aAKwB,EAFhB,UAAmE,GAQnE,qBAA2B,qBAHnC,aAKwB,EAFhB,UAA2B,GAKrB,0DAA4C,GAA1D,aAA2D,EAA7C,UAA4C,mDA3BhE,sJACoF,GAIzE,mBAA+B,qBAHvC,ueAI0B,EADlB,SAA+B,EAHvC,gEAI0B,yPAE1B,GAEmB,sPAAiG,IADpH,sJACqH,EAAlG,UAAiG,EADpH,kCACqH;AAAA;oHA5B3H,yHAAyC,0FAEtC,0JAA8B,KAAM,qFAEpC,2kBAA+B,oKAE/B,IAAQ,qFAER,8ZAOwB,IAEf,mFACT,8ZACoF,IAyCrE,gFAClB,mDAzDG,YAA+B,GAKvB,sFAAoE,IAD5E,aAOwB,EANhB,SAAoE,GAU9D,uFAAqE,IADnF,aACoF,EAAtE,SAAqE,mDAfnF,0GAA+B,iQAE/B;;mEAzCN,85BAG8H,KAA3G,uDAA0G,IAAC,+EAE3H,wkBAA+B,kGAE/B,MAAQ,+EAER,2ZAKwB,IAEf,+EAET;YAAA;YAAA,YAIwB;YAFhB;;gCAAkB;;YAF1B;QAAA,ogCAIwB,gKAExB,IAAS,+EAET;YAAA;YAAA,YAKwB;YAHhB;;gCAAoB;;YAF5B;QAAA,mjCAKwB,gKAExB,IAAS,+EAET,2ZAAyC,IA6D1B,0EAClB,mDAhGmB,4DAAuD,GAD1E,YAG8H,EAF3G,SAAuD,GAIvE,YAA+B,GAQvB,+CAAiD,sBAJzD,aAKwB,EADhB,SAAiD,GAQjD,qCAAuB,EAH/B,aAIwB,EADhB,UAAuB,GAQvB,kFAAmF,uBACnF,uCAAyB,EAJjC,aAKwB,EAFhB,UAAmF,EACnF,UAAyB,GAKnB,wCAA0B,GAAxC,aAAyC,EAA3B,UAA0B,mDAhCxB,8OAA0G,IAH7H,iJAG8H,EAA3G,SAA0G,EAH7H,+BAG8H,GAE3H,0GAA+B,+DAE/B,GAWA,ykBAIwB,+PAExB,GAEA,6kBAKwB,+PAExB;AAAA;;mEA9CN,s9EAEuC,iFAEpC;YAAA;YAAA;;;;;wZAK8E,GAAtE,wDAAqE,IAAC,gFAC3E,w7BAAgF,IAAW,6EAC9F,MAAS,4EAET,oeAG8H,IA8F1G,uEACvB,mDArGsC,2DAA+C,GAA/E,aAAgF,EAAhD,UAA+C,GAK/D,qBAAU,EAF7B,aAG8H,EAD3G,UAAU,mDAfhC,sJAEuC,GAI5B,mBAAqB,WAGrB,sMAAqE,IAL7E,ueAK8E,EAHtE,SAAqB,EAGrB,SAAqE,EAL7E,gEAK8E,GACjE,oBAAqB,SAA/B,aAAgF,EAAtE,UAAqB;AAAA;+PAX8C,0EACnF,6ZAEuC,IA6GxB,0EACf,mDA9Gc,kCAAwB,UAFtC,YAEuC,EAAzB,SAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mECahC;YAAA;YAAA;;;;;;;;;;;;;2oDAGmC,uFAChC,86DAAgD,0FAC7C,6mBAAgD,4KAEhD,IAAQ,sFACR;YAAA;YAAA;;;;;;;;;;;;;;;;;;;;;uhFAIwB,0FACxB,4nBAAmB,6EAA6B,MAAoB,mFACvE,MAAsB,gFACzB,mDAZM,oBAA4B,iBAHlC,YAGmC,EAA7B,UAA4B,GAD5B,6BAAsB,EAF5B,YAGmC,EAD7B,UAAsB,GAGtB,aAAgD,GAMzC,6BAA4B,EAHnC,aAIwB,EADjB,UAA4B,GAH5B,oCAAsB,EAA7B,aAIwB,EAJjB,UAAsB,GAItB,mBAAe,EAJtB,aAIwB,EAAjB,UAAe,mDAZ5B,k9BAGmC,GAChC,qVAAgD,GAC7C,8GAAgD,kPAEhD,GACA,m2BAIwB,GACxB,4IAAmB,4EAA6B;AAAA;oHAItD,yKAEoG,IAA9F,uDAA6F,IAAC,gFACpG,yDADM,+MAA6F,yBAFnG,YAEoG,EAA9F,SAA6F;;2SAnCtB,0EACnF;YAAA;YAAA,YAU6B;YADvB;;gCAA+B;;YAC/B;;gCAAsB;;YAV5B;QAAA,01BAU6B,KANvB,uDAAqD,GACrD,uDAA+C,IAKxB,4EAE1B,uJAA8B,qFAC3B,4KAA4D,KAAO,kFAEnE,+ZAGmC,IAY5B,kFAEP,+ZAEoG,IAC7F,6EACV,MAAM,uEACT,MAAc,0EACd,mDApCM,mBAA2B,oBAC3B,mBAA+B,qBAC/B,yJAAqD,8BAErD,mBAA0C,4BAD1C,0KAA+C,IAI/C,mBAA+B,eAF/B,+DAAwE,2BACxE,mBAAqB,OAR3B,YAU6B,EARvB,SAA2B,EAC3B,SAA+B,EAC/B,SAAqD,EAErD,SAA0C,EAD1C,SAA+C,EAI/C,SAA+B,EAF/B,SAAwE,EACxE,SAAqB,GAQf,mDAAoC,+BAD1C,aAGmC,EAF7B,SAAoC,GAiBpC,oBAA8C,yCADpD,aAEoG,EAD9F,UAA8C,mDApBtB,mBAA6B,kBAA3D,aAA4D,EAA9B,SAA6B;AAAA;;;;;;;;;;;;;;;;;ACXjE;AAAA;AAAA;AAAA;AAA4C;AACoC;AAQzE,MAAM,sBAAsB;IAUhC,YAAoB,gBAAsD;QAAtD,qBAAgB,GAAhB,gBAAgB,CAAsC;QAJ1E,SAAI,GAAY,KAAK,CAAC;QAEb,gBAAW,GAAW,2DAAW,CAAC,SAAS,CAAC,yDAAyD,CAAC,CAAC;QAUhH,UAAK,GAAG,GAAG,EAAE;YACV,IAAI,IAAI,GAAG,+FAAwB,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACpE,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC;iBAC7D,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,2DAAW,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;iBACvE,KAAK,CAAC,CAAC,CAAC,EAAE;gBACR,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YACrB,CAAC,CAAC,CAAC;YAET,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACpB,CAAC;IAlB4E,CAAC;IAE9E,QAAQ;QACL,IAAI,OAAO,GAAQ,2DAAW,CAAC,eAAe,EAAE,CAAC;QACjD,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;QACrC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;IACxC,CAAC;CAaH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8MCzCkF,0EACnF;YAAA;YAAA,YAK4B;YAHtB;;gCAA0B;;YAG1B;;gCAAqB;;YAL3B;QAAA,wuBAK4B,KADtB,uDAAgD,IAC1B,0EACzB,4JAAmC,yJAEnC,IAAO,0EACP,4IAA6G,IAAxG,wDAAuG,IAAO,uEACtH,MAAqB,0EACrB,mDAVM,mBAAqB,cAGrB,0KAAgD,IAFhD,mBAA0B,SAC1B,mBAAoB,OAH1B,YAK4B,EAJtB,SAAqB,EAGrB,SAAgD,EAFhD,SAA0B,EAC1B,SAAoB,mDAGY,qPAEnC,GACK,6NAAuG,gBAA5G,aAA6G,EAAxG,SAAuG;AAAA;;;;;;;;;;;;;;;;;ACJ/G;AAAA;AAAO,IAAO,wBAAwB,CAUrC;AAVD,WAAc,wBAAwB;IACtC,MAAa,OAAO;MAOlB,eAAe;IALP,cAAM,GAAG,CAAC,wBAAgC,EAA4B,EAAE;QAC5E,OAAO,EAAE,wBAAwB,EAAE,wBAAwB,GAAG,CAAC;IAClE,CAAC;IAJS,gCAAO,UAOnB;AAED,CAAC,EAVa,wBAAwB,KAAxB,wBAAwB,QAUrC,CAAC,iCAAiC;;;;;;;;;;;;;;ACXnC;AAAA;AAAO,MAAM,iBAAiB;IAA9B;QACG,oBAAe,GAAW,EAAE,CAAC;QAC7B,mBAAc,GAAa,EAAE,CAAC;IA0BjC,CAAC;IAtBE,MAAM,CAAC,YAAY,CACb,cAAwB,EACxB,WAA4B,EAC5B,UAAyB;QAC5B,OAAO;YACJ,eAAe,EAAE,EAAE;YACnB,cAAc,EAAE,cAAc;YAC9B,WAAW,EAAE,WAAW;YACxB,UAAU,EAAE,UAAU;SACxB,CAAC;IACL,CAAC;IACD,MAAM,CAAC,UAAU,CACX,MAAwB,EACxB,WAA4B,EAC5B,UAAyB;QAC5B,OAAO;YACJ,eAAe,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG;YAChC,cAAc,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;YACjD,WAAW,EAAE,WAAW;YACxB,UAAU,EAAE,UAAU;SACxB,CAAC;IACL,CAAC;CACH;;;;;;;;;;;;;;ACjCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFAAkF;AACb;AACvB;AAE4D;AAC9D;AAOrC,MAAM,kCAAkC;IAL/C;QAcG,aAAQ,GAAY,KAAK,CAAC;QAM1B,8BAAyB,GAAY,KAAK,CAAC;QAG3C,kBAAa,GAAmC,IAAI,0DAAY,EAAoB,CAAC;IA2BxF,CAAC;IAzBE,QAAQ;QACL,MAAM,iBAAiB,GAAG,IAAI,kFAAiB,EAAE,CAAC;QAClD,iBAAiB,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC;QAC/C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC9C,CAAC;IAED,MAAM,CAAC,YAAoB;QACxB,MAAM,cAAc,GAAG,IAAI,+EAAc,EAAE,CAAC;QAC5C,cAAc,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;QACtC,cAAc,CAAC,YAAY,GAAG,YAAY,CAAC;QAC3C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC3C,CAAC;IAED,IAAI,SAAS;QACV,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,KAAK,6DAAgB,CAAC,QAAQ,CAAC,CAAC;IAC7F,CAAC;IAED,IAAI,aAAa;QACd,IAAI,2DAAW,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YACtC,OAAO,EAAE,CAAC;SACZ;QACD,MAAM,QAAQ,GAAW,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;YAChD,uCAAuC,CAAC,CAAC,CAAC,oCAAoC,CAAC;QACrF,OAAO,2DAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACjE,CAAC;CACH;;;;;;;;;;;;;;ACzDD;AAAA;AAAA;AAAA;AAAA;AAAA,kFAAkF;AACb;AAQtB;AACD;AAQvC,MAAM,8BAA8B;IAL3C;QAcG,WAAM,GAAW,mBAAmB,CAAC;QASrC,kBAAa,GAAmC,IAAI,0DAAY,EAAoB,CAAC;IA6CxF,CAAC;IA3CE,IAAI,cAAc;QACf,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,KAAM,6DAAgB,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;IAClG,CAAC;IAED,IAAI,kBAAkB;QACnB,qDAAqD;QACrD,wDAAwD;QACxD,uEAAuE;QACvE,OAAO,IAAI,CAAC,kBAAkB,IAAI,CAAC,IAAI,CAAC,cAAc,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;YAC9E,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;IACjF,CAAC;IAED,SAAS;QACN,MAAM,KAAK,GAAuB,IAAI,mFAAkB,EAAE,CAAC;QAC3D,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IAED,MAAM;QACH,MAAM,KAAK,GAAoB,IAAI,gFAAe,EAAE,CAAC;QACrD,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IAED,QAAQ;QACL,MAAM,KAAK,GAAsB,IAAI,kFAAiB,EAAE,CAAC;QACzD,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IAED,QAAQ;QACL,MAAM,KAAK,GAAsB,IAAI,kFAAiB,EAAE,CAAC;QACzD,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,KAAK,6DAAgB,CAAC,QAAQ,CAAC,CAAC;QACpG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IAED,MAAM,CAAC,YAAoB;QACxB,MAAM,KAAK,GAAmB,IAAI,+EAAc,EAAE,CAAC;QACnD,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,KAAK,6DAAgB,CAAC,QAAQ,CAAC,CAAC;QAC9F,KAAK,CAAC,YAAY,GAAG,YAAY,CAAC;QAClC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;CAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8MCjFkF,0EACnF;YAAA;YAAA,YAI4B;YAFtB;;gCAA0B;;YAE1B;;gCAAqB;;YAJ3B;QAAA,2rBAI4B,gFACzB,wJAA8B,qFAC3B,ksBAIsC,GAFrB,uDAAiF,IAE5D,gFACtC,MAAkB,kFAElB,gJACyG,IAAnG,wDAAkG,IAAC,gFACzG,MAAO,kFAEP,+HAAM,iKAEN,IAAO,kFAEP,+HAAM,iKAEN,IAAO,6EACV,MAAM,uEACT,MAAmB,0EACnB,mDAzBM,mBAAqB,cACrB,mBAA0B,SAC1B,mBAAoB,OAH1B,YAI4B,EAHtB,SAAqB,EACrB,SAA0B,EAC1B,SAAoB,GAIH,yBAAuB,EACvB,iNAAiF,IACjF,qBAAqB,EACrB,qBAAoB,EAJrC,YAIsC,EAHrB,SAAuB,EACvB,SAAiF,EACjF,SAAqB,EACrB,SAAoB,mDAI/B,yNAAkG,eADxG,aACyG,EAAnG,SAAkG,GAGlG,wPAEN,GAEM,oPAEN;AAAA;;;;;;;;;;;;;;;;;ACxBN;AAAA;AAAA;AAAA;AAAA,kFAAkF;AACZ;AAG1B;AAOrC,MAAM,gCAAgC;IAY1C,YAAoB,gBAAsD;QAAtD,qBAAgB,GAAhB,gBAAgB,CAAsC;QAX1E,eAAU,GAAkB,IAAI,CAAC;QACjC,gBAAW,GAAkB,IAAI,CAAC;QAClC,gBAAW,GAAW,EAAE,CAAC;QAEzB,WAAM,GAAa,IAAI,CAAC;QACxB,SAAI,GAAY,KAAK,CAAC;QACb,gBAAW,GAAW,2DAAW,CAAC,SAAS,CAAC,yDAAyD,CAAC,CAAC;QAGxG,YAAO,GAAyB,IAAI,0DAAY,EAAU,CAAC;IAGnE,CAAC;IAED,QAAQ;QACL,MAAM,OAAO,GAAQ,2DAAW,CAAC,eAAe,EAAE,CAAC;QACnD,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;QACrC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;IAC1C,CAAC;IAED,KAAK;QACF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC;aACnE,IAAI,CAAC,CAAC,IAAmB,EAAE,EAAE;YAC3B,2DAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAa,EAAE,EAAE;YACxB,IAAI,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC;YACtB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC,CAAC;IACZ,CAAC;CACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mECxBK;YAAA;YAAA,YAKwB;YADhB;;gCAAoB;;YAJ5B;QAAA,mgCAKwB,8JAExB,yBAJQ,mCAAsB,EAH9B,YAKwB,EAFhB,SAAsB,2BAH9B,2jBAKwB,yOAExB;AAAA;;mEAWM;YAAA;YAAA,YAKwB;YADhB;;gCAAiC;;YAJzC;QAAA,mgCAKwB,8GAExB,2BAJQ,iIAAgC,GAHxC,YAKwB,EAFhB,SAAgC,2BAHxC,2jBAKwB,yEAExB;AAAA;;mEAhBN,g8EAAmE,qFAChE;YAAA;YAAA;;;;;wZAE0B,sKAE1B,IAAS,gFACT,y4BAE4H,KAAtH,wDAAqH,IAAC,mFACzH,weAKwB,IAEf,gFACZ,MAAoB,6EACvB,mDAPc,oBAAoC,gBAF5C,aAKwB,EAHhB,UAAoC,2BAXlD,sJAAmE,GAChE,yiBAE0B,6PAE1B,GAGM,2PAAqH,IAF3H,sJAE4H,EAAtH,SAAqH,EAF3H,kCAE4H;AAAA;wHAvBlI,87BACkI,KAA/G,uDAA8G,IAAC,6EAC/H,wkBAA+B,kGAE/B,MAAQ,+EAER,+ZAKwB,IAEf,+EAET,+ZAAmE,IAkBpD,4EAElB,mDAnCsC,6BAAyB,EAA/D,YACkI,EAD5F,SAAyB,GAE5D,YAA+B,GAIvB,uHAA+D,IAAvE,aAKwB,EALhB,SAA+D,GAStC,oFAAiC,GAAlE,aAAmE,EAAlC,SAAiC,mDAdlD,2OAA8G,IADjI,iJACkI,EAA/G,SAA8G,EADjI,+BACkI,GAC/H,0GAA+B,6DAE/B;;8MAjB6E,0EACnF,k8EAAiC,+EAC9B;YAAA;YAAA;;;;;wZAK0B,oFACvB,6JAAgC,iKAEhC,IAAM,gFACN,0iBAA6B,IAAW,6EAC3C,MAAS,0EACT,weACkI,IAkC9G,uEACvB,MAAe,0EACf,2BArCmE,qBAAU,EAA1E,aACkI,EADlE,UAAU,mDAZ7E,sJAAiC,GAGtB,2DAA8C,IAC9C,kJAAsD,GAH9D,ueAK0B,EAHlB,SAA8C,EAC9C,SAAsD,EAH9D,gEAK0B,GACS,0NAEhC;AAAA","file":"72-es2015.js","sourcesContent":["/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {FaultDomainModel} from \"@model/fault-domain.model\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * Holds the data for the MoveHostsConfirmationComponent dialog.\n */\nexport class MoveHostsContext {\n\n   hosts: DomainOrHostData[];\n   objectInfo: string;\n   sourceDomain: string;\n   /**\n    * Whether this operation will result in\n    * the source domain being destroyed\n    * because all its hosts are going to be removed.\n    */\n   warnDestructiveForSourceDomain: boolean;\n\n   static createDomain(hosts: FaultDomainModel[]): MoveHostsContext {\n      return new MoveHostsContext(\n            hosts,\n            VsanUiUtils.getString(\"vsan.faultDomains.action.createDomain.title\"),\n            VsanUiUtils.getString(\"vsan.faultDomains.action.createDomain.message.create\"),\n            null,\n            VsanUiUtils.getString(\"vsan.common.create\"),\n            \"btn-success\",\n            true);\n   }\n\n   static renameDomain(domain: FaultDomainModel): MoveHostsContext {\n      return new MoveHostsContext(\n            domain.hosts,\n            VsanUiUtils.getString(\"vsan.faultDomains.action.renameDomain\"),\n            VsanUiUtils.getString(\"vsan.faultDomains.action.renameDomain.message\"),\n            null,\n            VsanUiUtils.getString(\"vsan.faultDomains.action.renameDomain.action\"),\n            \"\",\n            true,\n            true);\n   }\n\n   static deleteDomain(domain: FaultDomainModel): MoveHostsContext {\n      return new MoveHostsContext(\n            domain.hosts,\n            VsanUiUtils.getString(\"vsan.faultDomains.action.deleteDomain\"),\n            VsanUiUtils.getString(\"vsan.faultDomains.action.deleteDomain.message\", domain.data.uid),\n            null,\n            VsanUiUtils.getString(\"vsan.common.delete\"),\n            \"btn-danger\",\n            false,\n            true);\n   }\n\n   static moveHosts(hosts: FaultDomainModel[], targetDomain: string): MoveHostsContext {\n      const operationName: string = VsanUiUtils.getString(targetDomain\n            ? \"vsan.faultDomains.action.moveHosts.moveIn\"\n            : \"vsan.faultDomains.action.moveHosts.moveOut\");\n      const message: string = targetDomain\n            ? VsanUiUtils.getString(\"vsan.faultDomains.action.moveHosts.moveIn.message\", targetDomain)\n            : VsanUiUtils.getString(\"vsan.faultDomains.action.moveHosts.moveOut.message\", hosts[0].domain.data.uid);\n      const buttonText: string = VsanUiUtils.getString(\"vsan.faultDomains.action.moveHosts.action\");\n      return new MoveHostsContext(hosts, operationName, message, targetDomain, buttonText);\n   }\n\n   constructor(\n         hostModels: FaultDomainModel[],\n         public operation: string,\n         public message: string,\n         public targetDomain: string,\n         public actionButtonLabel: string,\n         public actionButtonClass: string = \"\",\n         public promptForDomainName: boolean = false,\n         public suppressDestructiveWarn: boolean = false) {\n      this.hosts = this.getHosts(hostModels);\n      this.objectInfo = this.getObjectInfo(hostModels, this.hosts);\n      this.sourceDomain = this.getSourceDomainName(hostModels);\n      this.warnDestructiveForSourceDomain = this.shouldWarnDestructiveForSourceDomain(hostModels);\n   }\n\n   private getHosts(hostModels: FaultDomainModel[]): DomainOrHostData[] {\n      return hostModels.map(model => model.data);\n   }\n\n   private getObjectInfo(hostModels: FaultDomainModel[], hosts: DomainOrHostData[]): string {\n      if (this.suppressDestructiveWarn) {\n         // domain operation\n         return hostModels[0].domain.data.uid;\n      }\n      if (hosts.length === 1) {\n         return hosts[0].label;\n      }\n      return VsanUiUtils.getString(\"vsan.faultDomains.action.hostCount\", hosts.length);\n   }\n\n   private getSourceDomainName(hostModels: FaultDomainModel[]): string {\n      if (!hostModels[0].domain?.data) {\n         return null;\n      }\n      return hostModels[0].domain.data.uid;\n   }\n\n   private shouldWarnDestructiveForSourceDomain(hostModels: FaultDomainModel[]): boolean {\n      return !this.suppressDestructiveWarn && FaultDomainModel.allAffected(hostModels);\n   }\n\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {DiskmgmtCommonModule} from \"@component/diskmgmt/diskmgmt-common.module\";\nimport {VsanCommonModule} from \"app/vsan/common/vsan-common.module\";\nimport {FaultDomainsComponent} from \"./fault-domains.component\";\nimport {DisableStretchedClusterComponent} from \"./actions/stretchedcluster/disable-stretched-cluster.component\";\nimport {PromoteDomainComponent} from \"./actions/stretchedcluster/promote-domain.component\";\nimport {EditDomainComponent} from \"./actions/edit/edit-domain.component\";\nimport {MoveHostsConfirmationComponent} from \"./actions/move/move-hosts-confirmation.component\";\nimport {StandaloneHostsActionMenuComponent} from \"./view/standalone-hosts-action-menu.component\";\nimport {CategoryLabelComponent} from \"./component/category-label/category-label.component\";\nimport {FaultDomainActionMenuComponent} from \"./view/fault-domain-action-menu.component\";\nimport {NgDragDropModule} from \"ng-drag-drop\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\nimport {ConfigurationsModule} from \"@component/configurations/configurations.module\";\nimport {PersistentStorageService} from \"@service/browser-storage.service\";\n\nconst routes: Routes = [\n   {\n      path: \"\",\n      component: FaultDomainsComponent,\n   },\n   {\n      path: \"disableStretchedCluster\",\n      component: DisableStretchedClusterComponent,\n   },\n   {\n      path: \"promoteDomain\",\n      component: PromoteDomainComponent,\n   },\n   {\n      path: \"editDomain\",\n      component: EditDomainComponent,\n   },\n   {\n      path: \"moveHosts\",\n      component: MoveHostsConfirmationComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      ClarityModule,\n      VsanCommonModule,\n      ConfigurationsModule,\n      DiskmgmtCommonModule,\n      UnavailableViewModule,\n      RouterModule.forChild(routes),\n      NgDragDropModule.forRoot(),\n   ],\n   declarations: [\n      FaultDomainsComponent,\n      CategoryLabelComponent,\n      DisableStretchedClusterComponent,\n      PromoteDomainComponent,\n      EditDomainComponent,\n      MoveHostsConfirmationComponent,\n      StandaloneHostsActionMenuComponent,\n      FaultDomainActionMenuComponent,\n   ],\n   providers: [\n      PersistentStorageService,\n   ],\n})\nexport class FaultDomainsModule {\n}\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ClrSelectedState} from \"@clr/angular\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {WitnessHostData} from \"@generated/witness-host-data\";\nimport {ConnectionState} from \"@generated/connection-state\";\nimport {\n   ChangeWitnessHostEvent,\n   ConfigureStretchedClusterEvent,\n   CreateDomainEvent,\n   DeleteDomainEvent,\n   DisabledStretchedClusterEvent,\n   EditDomainEvent,\n   FaultDomainEvent,\n   MoveHostsEvent,\n   PromoteDomainEvent,\n} from \"../common/event/fault-domain.event\";\nimport {Logger} from \"@util/logger\";\nimport {MoveHostsContext} from \"./actions/move/move-hosts-context\";\nimport {Privileges} from \"@generated/privileges\";\nimport {EditDomainContext} from \"./actions/edit/edit-domain-context\";\nimport {FaultDomainConsumptionData} from \"@model/fault-domain-consumption-data\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {ChangeWitnessContext} from \"@navigation/context/change-witness-context\";\nimport {VsanStretchedClusterService} from \"@generated/vsan-stretched-cluster-service\";\nimport {CapacityDataService} from \"@generated/capacity-data-service\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\nimport {AdvancedOptionsService} from \"@generated/advanced-options-service\";\nimport {AdvancedOptionsInfo} from \"@generated/advanced-options-info\";\nimport {CapacityReservationUtil} from \"@util/capacity-reservation-util\";\nimport {CapacityReservationConfig} from \"@generated/capacity-reservation-config\";\nimport {HostStorageConsumptionData} from \"@generated/host-storage-consumption-data\";\nimport {UnavailableViewSpec} from \"@component/unavailable-view/unavailable-view-spec\";\nimport {VsanRdmaService} from \"@generated/vsan-rdma-service\";\nimport {VsanRoutes} from \"../../vsan-routes\";\nimport {FaultDomainModel} from \"@model/fault-domain.model\";\nimport {InlineViewContextKey} from \"@model/inline-view-context-key.data\";\nimport {PersistentStorageService} from \"@service/browser-storage.service\";\nimport {FaultDomainsUtil} from \"@util/fault-domains-util\";\nimport {VsanConfigService} from \"@generated/vsan-config-service\";\n\n@Component({\n   templateUrl: \"fault-domains.html\",\n   styleUrls: [\"fault-domains.scss\"],\n   selector: \"vsan-fault-domains\",\n})\nexport class FaultDomainsComponent implements OnInit {\n\n   readonly FaultDomainModel: typeof FaultDomainModel = FaultDomainModel;\n   readonly FaultDomainsComponent: typeof FaultDomainsComponent = FaultDomainsComponent;\n   private static readonly STRETCHED_CLUSTER_MIN_HOSTS_COUNT: number = 2;\n\n   clusterRef: ManagedObject;\n   faultDomainModels: FaultDomainModel[] = [];\n   standaloneModels: FaultDomainModel[] = [];\n   preferredDomain: string;\n   secondaryDomain: string;\n   data: DomainOrHostData[];\n   storageConsumption: any = {};\n   isVsanMaxEnabled: boolean;\n   alertMessage: string = null;\n   witnessInfos: WitnessHostData[] = null; // will be null if stretched cluster/metadata only node is disabled\n   hasEditPermission: boolean = true;\n   allHostsCount: number = 0;\n   private hasDisconnectedHosts: boolean = false;\n   disableCfgStretchedClusterBtn: boolean = false;\n   showSpinner: boolean;\n   isStretchedClusterSupported: boolean = false;\n   isHostReservedCapacitySupported: boolean = false;\n   isRdmaSupported: boolean = false;\n   isRdmaStretchedClusterSupported: boolean = false;\n   isSharedWitnessAllowed: boolean = false;\n   isCapacityReservationEnabled: boolean = false;\n   isRdmaEnabled: boolean = false;\n   noHostsView: UnavailableViewSpec;\n   faultToleranceDescription: string;\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   constructor(\n         private taskSvc: TaskMonitorService,\n         private permissionService: PermissionService,\n         private capabilityProvider: VsanCapabilityProvider,\n         private vsanConfigService: VsanConfigService,\n         private stretchedClusterService: VsanStretchedClusterService,\n         private capacityDataService: CapacityDataService,\n         private advancedOptionsService: AdvancedOptionsService,\n         private storageService: PersistentStorageService,\n         private rdmaService: VsanRdmaService) {\n   }\n\n   ngOnInit(): void {\n      this.clusterRef = this.getClusterRefFromLocalStorage() || ManagedObject.contextObject;\n      this.fetch();\n   }\n\n   @RefreshHandler\n   fetch(): void {\n      this.initializeLoading();\n\n      const promises: Promise<any>[] = [];\n\n      promises.push(this.vsanConfigService.getVsanConfigSpec(this.clusterRef)\n            .then(config => this.isVsanMaxEnabled = config.isVsanMaxEnabled));\n\n      promises.push(this.stretchedClusterService.getAvailableDomains(this.clusterRef)\n            .then(domainsData => this.data = domainsData));\n\n      promises.push(this.stretchedClusterService.getWitnessHostData(this.clusterRef)\n            .then(witnessData => this.witnessInfos = witnessData));\n\n      promises.push(this.capacityDataService.getStorageConsumptionByHost(this.clusterRef)\n            .then(hostsCapacity => this.processHostsCapacity(hostsCapacity)));\n\n      promises.push(this.advancedOptionsService.getAdvancedOptionsInfo(this.clusterRef)\n            .then(advancedOptions => this.processAdvancedOptions(advancedOptions)));\n\n      promises.push(this.rdmaService.isRdmaEnabled(this.clusterRef)\n            .then(isRdmaEnabled => this.isRdmaEnabled = isRdmaEnabled));\n\n      const manageFaultDomainPermissions: string[] = [Privileges.EDIT_CLUSTER(), Privileges.CONFIG_STORAGE()];\n      promises.push(this.permissionService.hasPermissions(this.clusterRef, manageFaultDomainPermissions)\n            .then((result: boolean) => this.hasEditPermission = result)\n            .catch(() => this.hasEditPermission = true));\n\n      promises.push(this.capabilityProvider.getClusterCapabilityData(this.clusterRef)\n            .then(capability => {\n               this.isStretchedClusterSupported = capability.isStretchedClusterSupported;\n               this.isHostReservedCapacitySupported = capability.isHostReservedCapacitySupported;\n               this.isRdmaSupported = capability.isRdmaSupported;\n               this.isRdmaStretchedClusterSupported = capability.isRdmaStretchedClusterSupported;\n            }));\n\n      Promise.all(promises)\n            .then(async () => {\n               this.allHostsCount = this.data.reduce((sum, item) => sum += item.isHost ? 1 : item.children.length, 0);\n               if (this.allHostsCount === 0) {\n                  this.noHostsView = UnavailableViewSpec.FAULT_DOMAINS_VIEW_NO_HOSTS;\n                  return;\n               }\n               this.isSharedWitnessAllowed = await this.getSharedWitnessAllowed();\n               this.refresh(this.data, this.witnessInfos);\n            })\n            .catch((e) => {\n               this.alertMessage = e;\n               Logger.warn(\"Failed to get Fault Domains data!\", e);\n            })\n            .finally(() => {\n               this.showSpinner = false;\n            });\n   }\n\n   private getClusterRefFromLocalStorage(): ManagedObject {\n      return this.storageService.pop(InlineViewContextKey.FAULT_DOMAINS_CONTEXT_KEY);\n   }\n\n   private processHostsCapacity(hostsStorageData: HostStorageConsumptionData[]): void {\n      this.storageConsumption = [];\n      hostsStorageData.forEach(item => {\n         if (item.hostRef) {\n            this.storageConsumption[ManagedObject.uid(item.hostRef)] = item;\n         }\n      });\n   }\n\n   private processAdvancedOptions(advancedOptions: AdvancedOptionsInfo): void {\n      if (!advancedOptions || !advancedOptions.capacityReservationConfig) {\n         this.isCapacityReservationEnabled = false;\n         return;\n      }\n      const reservationConfig: CapacityReservationConfig = advancedOptions.capacityReservationConfig;\n      this.isCapacityReservationEnabled =\n            CapacityReservationUtil.isReservationEnforced(reservationConfig.hostFailureReservation) ||\n            CapacityReservationUtil.isReservationEnforced(reservationConfig.vsanOperationReservation);\n   }\n\n   private async getSharedWitnessAllowed(): Promise<boolean>  {\n      if (this.isStretchedCluster && this.allHostsCount === 2) {\n         const hostRef: ManagedObject = this.witnessInfos[0].witnessHost;\n         let isSharedWitnessSupported: boolean;\n         let isSharedWitnessSupportedOnVc: boolean;\n         try {\n            [isSharedWitnessSupported, isSharedWitnessSupportedOnVc] = await Promise.all([\n               this.capabilityProvider.getIsSharedWitnessSupportedOnVc(hostRef),\n               this.capabilityProvider.getIsSharedWitnessSupported(hostRef)]);\n         } catch (e) {\n            Logger.warn(\"Failed to fetch shared witness capability!\", e);\n            return false;\n         }\n         return isSharedWitnessSupported && isSharedWitnessSupportedOnVc;\n      } else {\n         return false;\n      }\n   }\n\n   private refresh(data: DomainOrHostData[], witnessInfos: WitnessHostData[]): void {\n      if (!this.data) {\n         this.faultDomainModels.forEach(model => model.isLoading = true);\n         return;\n      }\n\n      data.sort((item1, item2) => item1.label.localeCompare(item2.label));\n\n      // Preferred domain name should be the same for all witness hosts, retrieve it from the first.\n      const preferredDomain: string = FaultDomainsUtil.getPreferredDomain(witnessInfos);\n      if (preferredDomain) {\n         this.preferredDomain = preferredDomain;\n         const domain: DomainOrHostData = data.find(model => !model.isHost && model.uid !== preferredDomain);\n         this.secondaryDomain = domain ? domain.uid : null;\n      } else {\n         this.preferredDomain = null;\n         this.secondaryDomain = null;\n      }\n\n      this.faultDomainModels = FaultDomainsUtil.getFaultDomainModels(data, preferredDomain);\n      this.standaloneModels = FaultDomainsUtil.getStandaloneModels(data, witnessInfos);\n      this.hasDisconnectedHosts =\n            this.hasAnyDisconnectedState(data.filter(item => item.isHost), this.faultDomainModels);\n\n      this.disableCfgStretchedClusterBtn =\n            this.hasDisconnectedHosts\n            || !this.isStretchedClusterSupported\n            || !this.hasEnoughHostsForStretchedCluster()\n            || this.isCapacityReservationEnabled\n            || (this.isRdmaSupported && this.isRdmaEnabled && !this.isRdmaStretchedClusterSupported);\n      this.srOnlyMessage = VsanUiUtils.getString(\"vsan.screenReader.message.page.loaded\",\n            VsanUiUtils.getString(\"vsan.faultDomains\"));\n      this.faultToleranceDescription = FaultDomainsUtil.getFaultToleranceInfo(data,\n            witnessInfos,\n            this.standaloneModels,\n            this.faultDomainModels,\n            this.storageConsumption);\n   }\n\n   private hasAnyDisconnectedState(standaloneHosts: DomainOrHostData[],\n         faultDomainModels: FaultDomainModel[]): boolean {\n      let result: boolean = this.checkDisconnectedState(standaloneHosts);\n      if (!result) {\n         result = faultDomainModels.some(item => this.checkDisconnectedState(item.data.children));\n      }\n      return result;\n   }\n\n   private checkDisconnectedState = (hosts: any[]): boolean =>\n         hosts.some(item => item.connectionState !== ConnectionState.connected);\n\n   private hasEnoughHostsForStretchedCluster = (): boolean => {\n      return this.allHostsCount >= FaultDomainsComponent.STRETCHED_CLUSTER_MIN_HOSTS_COUNT;\n   };\n\n   get stretchedClusterDisabledReason(): string {\n      if (this.disableCfgStretchedClusterBtn) {\n         if (!this.isStretchedClusterSupported) {\n            return VsanUiUtils.getString(\"vsan.faultDomains.label.notSupported\");\n         } else if (this.hasDisconnectedHosts) {\n            return VsanUiUtils.getString(\"vsan.faultDomains.label.hostDisconnected\");\n         } else if (!this.hasEnoughHostsForStretchedCluster()) {\n            return VsanUiUtils.getString(\"vsan.faultDomains.label.minHostsRquirement\");\n         } else if (this.isCapacityReservationEnabled) {\n            return VsanUiUtils.getString(\"vsan.faultDomains.label.capacityReservationEnabled\");\n         } else if (this.isRdmaSupported && this.isRdmaEnabled && !this.isRdmaStretchedClusterSupported) {\n            return VsanUiUtils.getString(\"vsan.faultDomains.label.rdmaEnabled\");\n         }\n      }\n      return \"\";\n   }\n\n   get faultDomainActionsDisbaledReason(): string {\n      if (this.isCapacityReservationEnabled) {\n         return VsanUiUtils.getString(\"vsan.faultDomains.label.capacityReservationEnabled\");\n      } else if (!this.hasEditPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      }\n      return \"\";\n   }\n\n   get disableChangeWitnessHostBtnReason(): string {\n      if (!this.hasEditPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      } else if (this.hasDisconnectedHosts) {\n         return VsanUiUtils.getString(\"vsan.faultDomains.action.changeHost.disable.label\");\n      } else if (!this.isStretchedClusterSupported) {\n         return VsanUiUtils.getString(\"vsan.faultDomains.label.notSupported\");\n      } else if (this.allHostsCount < FaultDomainsComponent.STRETCHED_CLUSTER_MIN_HOSTS_COUNT) {\n         return VsanUiUtils.getString(\"vsan.faultDomains.label.minHostsRquirement\");\n      }\n      return \"\";\n   }\n\n   getDomainConsumption(model: FaultDomainModel): FaultDomainConsumptionData {\n      return FaultDomainConsumptionData.getDomainConsumptionData(model, this.storageConsumption);\n   }\n\n   handleActionEvent(event: FaultDomainEvent): void {\n      if (event instanceof CreateDomainEvent) {\n         this.onCreateDomain(event.memberHosts);\n      } else if (event instanceof EditDomainEvent) {\n         this.onEditDomain(event.targetDomain);\n      } else if (event instanceof DeleteDomainEvent) {\n         this.onDeleteDomain(event.targetDomain);\n      } else if (event instanceof MoveHostsEvent) {\n         this.onMoveRequest(event.hosts, event.targetDomain);\n      } else if (event instanceof PromoteDomainEvent) {\n         this.onMarkAsPreferred(event.targetDomain);\n      } else if (event instanceof ConfigureStretchedClusterEvent) {\n         this.onConfigureStretchedCluster();\n      } else if (event instanceof DisabledStretchedClusterEvent) {\n         this.onDisableStretchedCluster();\n      } else if (event instanceof ChangeWitnessHostEvent) {\n         this.onChangeWitness();\n      } else {\n         Logger.warn(\"unknown action event\", event);\n      }\n   }\n\n   onMoveRequest(affectedHosts: FaultDomainModel[], targetDomain: string): void {\n      if (affectedHosts.length === 0) {\n         return;\n      }\n      // Prevent invalid stretched cluster configuration:\n      if (this.isStretchedCluster) {\n         // 1) Don't move host from a domain to standalone hosts\n         const isStandaloneHostTarget: boolean = !targetDomain;\n         if (isStandaloneHostTarget) {\n            return;\n         }\n         // 2) Don't move all hosts from domain 'A' to domain 'B' if domain 'A' is preferred or all domains are =< 2\n         const isDomainPreferred: boolean = affectedHosts[0].domain && affectedHosts[0].domain.isPreferred;\n\n         if (FaultDomainModel.allAffected(affectedHosts) && (this.faultDomainModels.length <= 2 || isDomainPreferred)) {\n            return;\n         }\n      }\n\n      const actionContext: MoveHostsContext = MoveHostsContext.moveHosts(affectedHosts, targetDomain);\n\n      new ModalBuilder(\"faultDomains/moveHosts\")\n            .setSize(640, actionContext.warnDestructiveForSourceDomain ? 260 : 220)\n            .open(actionContext)\n            .then(taskRefs => this.handleTaskList(taskRefs.map(ManagedObject.uid)));\n   }\n\n   onCreateDomain(affectedHosts: FaultDomainModel[]): void {\n      const context: MoveHostsContext = MoveHostsContext.createDomain(affectedHosts);\n      new ModalBuilder(\"faultDomains/moveHosts\")\n            .setSize(640, context.warnDestructiveForSourceDomain ? 320 : 280)\n            .open(context)\n            .then(taskRefs => this.handleTaskList(taskRefs.map(ManagedObject.uid)));\n   }\n\n   onEditDomain(domain: FaultDomainModel = null): void {\n      let context: EditDomainContext;\n      // pass witnessInfo for stretched cluster case only\n      const witnessInfo: WitnessHostData = this.isStretchedCluster ? this.witnessInfos[0] : null;\n      if (domain) {\n         context = EditDomainContext.editDomain(domain, witnessInfo, this.clusterRef);\n      } else {\n         const allSelectedHosts: any[] = this.selectedStandaloneHosts.map(host => host.data.uid);\n         for (const domainModel of this.faultDomainModels) {\n            allSelectedHosts.push(...domainModel.hosts\n                  .filter(host => host.isSelected === ClrSelectedState.SELECTED)\n                  .map(host => host.data.uid));\n         }\n         context = EditDomainContext.createDomain(allSelectedHosts, witnessInfo, this.clusterRef);\n      }\n\n      new ModalBuilder(\"faultDomains/editDomain\")\n            .setSize(650, 540)\n            .open(context)\n            .then(taskRefs => this.handleTaskList(taskRefs.map(ManagedObject.uid)));\n   }\n\n   onDeleteDomain(domain: FaultDomainModel): void {\n      new ModalBuilder(\"faultDomains/moveHosts\")\n            .setSize(640, 260)\n            .open(MoveHostsContext.deleteDomain(domain))\n            .then(taskRefs => this.handleTaskList(taskRefs.map(ManagedObject.uid)));\n   }\n\n   onConfigureStretchedCluster(): void {\n      new ModalBuilder(VsanRoutes.CONFIGURE_STRETCHED_CLUSTER_WIZARD)\n            .setDimensions(ModalBuilder.WIZARD_XL)\n            .open()\n            .then((taskRef) => this.handleTaskList([ManagedObject.uid(taskRef)]));\n   }\n\n   onDisableStretchedCluster(): void {\n      const context: any = {\n         clusterRef: this.clusterRef,\n         witnessHost: this.witnessInfos[0].witnessHost,\n         witnessName: this.witnessInfos[0].witnessHostName,\n      };\n      new ModalBuilder(\"faultDomains/disableStretchedCluster\")\n            .setSize(640, 220)\n            .open(context)\n            .then((taskRef) => this.handleTaskList([ManagedObject.uid(taskRef)]));\n   }\n\n   onMarkAsPreferred(domain: FaultDomainModel): void {\n      const context: any = {\n         clusterRef: this.clusterRef,\n         domainName: domain.data.uid,\n      };\n      new ModalBuilder(\"faultDomains/promoteDomain\")\n            .setSize(640, 380)\n            .open(context)\n            .then((taskRefs) => this.handleTaskList([ManagedObject.uid(taskRefs[0])]));\n   }\n\n   onChangeWitness(): void {\n      const context: ChangeWitnessContext = {\n         preferredDomain: this.preferredDomain,\n         currentWitnessHost: this.witnessInfos[0].witnessHost,\n      };\n      new ModalBuilder(VsanRoutes.CONFIGURE_STRETCHED_CLUSTER_WIZARD)\n            .setDimensions(ModalBuilder.WIZARD_XL)\n            .open(context)\n            .then((taskRef) => this.handleTaskList([ManagedObject.uid(taskRef)]));\n   }\n\n   onDropInPlaceholder(event: any, intoStandalone: boolean): void {\n      const hosts: FaultDomainModel[] = [...event.dragData.selection];\n      if (!hosts.find(model => model.data.uid === event.dragData.host.data.uid)) {\n         hosts.push(event.dragData.host);\n      }\n      hosts.forEach(host => host.isDragging = false);\n      if (intoStandalone) {\n         // For stretched cluster don't move hosts from a domain to standalone hosts\n         if (this.isStretchedCluster) {\n            return;\n         }\n         this.onMoveRequest(hosts, null);\n      } else {\n         // For stretched cluster don't move all hosts from a preferred domain\n         const allHostsAreAffected: boolean = FaultDomainModel.allAffected(hosts);\n         const isDomainPreferred: boolean = hosts[0].domain && hosts[0].domain.isPreferred;\n         if (this.isStretchedCluster && allHostsAreAffected && isDomainPreferred) {\n            return;\n         }\n\n         this.onCreateDomain(hosts);\n      }\n   }\n\n   get isStretchedCluster(): boolean {\n      return !!this.witnessInfos && this.witnessInfos.length === 1 && !this.witnessInfos[0].isMetadataWitnessHost;\n   }\n\n   isCreateFaultDomainAllowed(): boolean {\n      return (!this.isStretchedCluster || this.faultDomainModels.length < 2) &&\n            !this.isCapacityReservationEnabled;\n   }\n\n   get validTargetsForStandaloneHosts(): string[] {\n      if (this.isCapacityReservationEnabled) {\n         // Prevent the drag and drop action when capacity reserve is enabled\n         return [];\n      }\n      const result: string[] = [FaultDomainModel.CREATE_DOMAIN_PLACEHOLDER];\n      if (this.data) {\n         this.data.filter(item => !item.isHost)\n               .map(item => item.uid)\n               .forEach(item => result.push(item));\n      }\n      return result;\n   }\n\n   get selectedStandaloneHosts(): FaultDomainModel[] {\n      return this.standaloneModels.filter(model => model.isSelected === ClrSelectedState.SELECTED);\n   }\n\n   get hasDomains(): boolean {\n      return this.faultDomainModels.length === 0;\n   }\n\n   /**\n    * handles the list of task UIDs returned by various action dialogs.\n    * waits for the task results and refreshes the view.\n    * @param taskUids\n    */\n   private handleTaskList = (taskUids: string[]) => {\n      this.initializeLoading();\n      if (taskUids === null || taskUids.length === 0) {\n         this.fetch();\n         return;\n      }\n\n      const promises: Promise<any>[] = [];\n      taskUids.forEach(t => promises.push(this.taskSvc.getAwaitResult(ManagedObject.fromUid(t))));\n      Promise.all(promises).then(() => this.fetch()).catch(() => this.fetch());\n   };\n\n   private initializeLoading = () => {\n      this.data = null;\n      this.faultDomainModels = [];\n      this.standaloneModels = [];\n      this.showSpinner = true;\n      this.noHostsView = null;\n   };\n}\n","<!-- Copyright 2018-2021 VMware, Inc. All rights reserved. VMware Confidential -->\n<h5 vsan-auto-focus>\n   {{\"vsan.faultDomains\" | localized}}\n</h5>\n\n<vsan-validation id=\"validation-message\"\n                 *ngIf=\"alertMessage\"\n                 [alert]=\"alertMessage\"\n                 [allowReload]=\"true\"\n                 (onReload)=\"fetch()\"\n                 (onClosed)=\"alertMessage = null\">\n</vsan-validation>\n\n<!-- busy indicator -->\n<span class=\"busy-backdrop\" *ngIf=\"showSpinner\">\n   <span class=\"spinner central-spinner\"></span>\n</span>\n\n<vsan-unavailable-view *ngIf=\"!showSpinner && noHostsView\"\n                       [unavailableViewSpec]=\"noHostsView\"\n                       [clusterRef]=\"clusterRef\"\n                       [hasEditPrivilege]=\"hasEditPermission\">\n</vsan-unavailable-view>\n\n<ng-container *ngIf=\"!showSpinner && allHostsCount\">\n   <vsan-fault-domains-config\n         [witnessInfos]=\"witnessInfos\"\n         [isSharedWitnessAllowed]=\"isSharedWitnessAllowed\"\n         [isStretchedCluster]=\"isStretchedCluster\"\n         [hasEditPermission]=\"hasEditPermission\"\n         [disableCfgStretchedClusterBtn]=\"disableCfgStretchedClusterBtn\"\n         [disableReason]=\"stretchedClusterDisabledReason\"\n         [disableChangeWitnessHostBtnReason]=\"disableChangeWitnessHostBtnReason\"\n         [faultToleranceInfo]=\"faultToleranceDescription\"\n         (onActionEvent)=\"handleActionEvent($event)\">\n   </vsan-fault-domains-config>\n\n   <div id=\"new-domain-action-container\" *ngIf=\"isCreateFaultDomainAllowed()\">\n      <div *ngIf=\"!hasDomains\" id=\"no-domain-desc\">\n         {{'vsan.faultDomains.action.createDomain.noDomain' | localized}}\n      </div>\n      <div *ngIf=\"hasDomains\" id=\"has-domain-desc\">\n         {{'vsan.faultDomains.action.createDomain.hasDomains' | localized}}\n      </div>\n   </div>\n   <div class=\"fault-domains\">\n      <fault-domain-card\n            #card\n            *ngFor=\"let model of faultDomainModels\"\n            [isVsanMaxEnabled]=\"isVsanMaxEnabled\"\n            [model]=\"model\"\n            [storageConsumption]=\"storageConsumption\"\n            [hostReservedCapacitySupported]=\"isHostReservedCapacitySupported\"\n            (onActionEvent)=\"handleActionEvent($event)\">\n\n         <vsan-fault-domain-action-menu\n               [domain]=\"model\"\n               [disabled]=\"!hasEditPermission\"\n               [isStretchedCluster]=\"isStretchedCluster\"\n               [targetDomains]=\"model.validTargetDomains\"\n               (onActionEvent)=\"handleActionEvent($event)\">\n         </vsan-fault-domain-action-menu>\n      </fault-domain-card>\n\n      <!-- placeholder card for dropping hosts into a new domain -->\n      <div id=\"new-fault-domain\"\n           *ngIf=\"isCreateFaultDomainAllowed()\"\n           class=\"card\"\n           droppable=\"true\"\n           [dropScope]=\"FaultDomainModel.CREATE_DOMAIN_PLACEHOLDER\"\n           [dragOverClass]=\"'drag-overlay'\"\n           [dragHintClass]=\"'drag-hint'\"\n           (onDrop)=\"onDropInPlaceholder($event, false)\">\n         <button class=\"btn btn-icon\"\n                 (click)=\"onEditDomain()\"\n                 [disabled]=\"!hasEditPermission\"\n                 [attr.aria-label]=\"'vsan.faultDomains.newFaultDomain'|localized\">\n            <clr-icon shape=\"plus\" size=\"64\"></clr-icon>\n         </button>\n         <span [innerHTML]=\"'vsan.faultDomains.dropHint' | localized\"></span>\n      </div>\n   </div>\n\n   <!-- Standalone Hosts section -->\n   <vsan-category-label\n         *ngIf=\"!isStretchedCluster || standaloneModels.length > 0\"\n         [info]=\"'vsan.faultDomains.card.category.standalone.info' | localized\"\n         [signpostLabel]=\"'vsan.faultDomains.card.category.standalone.signpost.label' | localized\">\n      {{'vsan.faultDomains.card.category.standalone' | localized: standaloneModels.length}}\n   </vsan-category-label>\n   <standalone-hosts-action-menu\n         *ngIf=\"standaloneModels.length > 0\"\n         [isStretchedClusterEnabled]=\"isStretchedCluster\"\n         [disabled]=\"!hasEditPermission || isCapacityReservationEnabled\"\n         [disabledReason]=\"faultDomainActionsDisbaledReason\"\n         [standaloneHosts]=\"standaloneModels\"\n         [targetDomains]=\"faultDomainModels\"\n         (onActionEvent)=\"handleActionEvent($event)\">\n   </standalone-hosts-action-menu>\n\n   <div class=\"standalone-hosts\"\n        *ngIf=\"!isStretchedCluster || standaloneModels.length > 0\">\n      <standalone-host-card\n            *ngFor=\"let host of standaloneModels\"\n            [isVsanMaxEnabled]=\"isVsanMaxEnabled\"\n            [dropTargets]=\"validTargetsForStandaloneHosts\"\n            [selection]=\"selectedStandaloneHosts\"\n            [host]=\"host\"\n            [consumption]=\"getDomainConsumption(host)\"\n            [hostReservedCapacitySupported]=\"isHostReservedCapacitySupported\"\n            (onActionEvent)=\"handleActionEvent($event)\">\n      </standalone-host-card>\n\n      <!-- placeholder card for dropping hosts out of domains -->\n      <div class=\"card drop-hosts-container\"\n           droppable=\"true\"\n           [dropScope]=\"FaultDomainModel.STANDALONE_PLACEHOLDER\"\n           [dragOverClass]=\"'drag-overlay'\"\n           [dragHintClass]=\"'drag-hint'\"\n           (onDrop)=\"onDropInPlaceholder($event, true)\">\n         <span [innerHTML]=\"'vsan.faultDomains.removeHint' | localized\"></span>\n      </div>\n   </div>\n</ng-container>\n","<!--Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-prompt [title]=\"title\"\n             [subtitle]=\"objectName\"\n             [confirmText]=\"(context.prepopulateName ? 'vsan.common.apply' : 'vsan.common.create') | localized\"\n             [confirmStyle]=\"(context.prepopulateName ? 'btn-primary' : 'btn-success')\"\n             [cancelText]=\"'vsan.common.cancel' | localized\"\n             [blockContent]=\"loading\"\n             [blockButton]=\"loading || domainSettings.invalid\"\n             [(alertMessages)]=\"alertMessages\"\n             (onConfirm)=\"onConfirm()\">\n   <div class=\"dialog-container\">\n      <form clrForm clrLayout=\"horizontal\" [formGroup]=\"domainSettings\">\n         <clr-input-container class=\"control-full-width\">\n            <label id=\"domain-name-label\" class=\"clr-col-3\">\n               {{\"vsan.faultDomains.action.createDomain.label.name\" | localized}}\n            </label>\n            <input id=\"domain-name-input\"\n                   class=\"clr-col-9\"\n                   clrInput\n                   formControlName=\"domainName\"\n                   vsan-auto-focus/>\n            <clr-control-error>{{domainNameValidationError}}</clr-control-error>\n         </clr-input-container>\n      </form>\n\n      <clr-datagrid id=\"host-list\" [(clrDgSelected)]=\"selectedHosts\">\n         <clr-dg-column [clrDgField]=\"'data.label'\" class=\"name-column\">\n            {{'vsan.faultDomains.action.createDomain.hostColumn' | localized}}\n         </clr-dg-column>\n         <clr-dg-column [clrDgField]=\"'domain.data.uid'\">\n            {{'vsan.faultDomains.action.createDomain.domainColumn' | localized}}\n         </clr-dg-column>\n\n         <clr-dg-row *clrDgItems=\"let item of hosts\"\n                     [clrDgItem]=\"item\"\n                     [ngClass]=\"isHostEnabled(item) ? '' : 'disable-action'\">\n            <clr-dg-cell vsan-show-title>\n               <vsan-icon-item [label]=\"item.data?.label\"\n                               [shape]=\"item.data?.iconId\">\n               </vsan-icon-item>\n            </clr-dg-cell>\n            <clr-dg-cell>\n               <vsan-icon-item [label]=\"item.domain?.data.uid\"\n                               [shape]=\"item.domain ? Icon.FAULT_DOMAIN : null\">\n               </vsan-icon-item>\n            </clr-dg-cell>\n         </clr-dg-row>\n\n         <clr-dg-footer>\n         <span *ngIf=\"hosts.length == 1\">\n            {{'vsan.faultDomains.action.hostCountOne' | localized}}\n         </span>\n            <span *ngIf=\"hosts.length != 1\">\n            {{'vsan.faultDomains.action.hostCount' | localized: hosts.length}}\n         </span>\n         </clr-dg-footer>\n      </clr-datagrid>\n   </div>\n</vsan-prompt>\n","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit, ViewChild} from \"@angular/core\";\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, ValidationErrors, ValidatorFn} from \"@angular/forms\";\nimport {ClrForm} from \"@clr/angular\";\nimport {ConfigureVsanClusterMutationProvider} from \"@generated/configure-vsan-cluster-mutation-provider\";\nimport {ConnectionState} from \"@generated/connection-state\";\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {VsanFaultDomainSpec} from \"@generated/vsan-fault-domain-spec\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject, ManagedObjectUtils} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {MoveHostsContext} from \"./move-hosts-context\";\n\n@Component({\n   selector: \"fault-domains-move-hosts\",\n   templateUrl: \"move-hosts-confirmation.html\",\n   styleUrls: [\"move-hosts-confirmation.scss\"],\n})\nexport class MoveHostsConfirmationComponent implements OnInit {\n\n   context: MoveHostsContext;\n   @ErrorMessage()\n   alertMessage: string;\n   @LoadingIndicator()\n   busy: boolean;\n   domainNameValidationError: string;\n\n   domainSettings: FormGroup;\n\n   @ViewChild(ClrForm, {static: true})\n   domainSettingsForm: ClrForm;\n\n   constructor(private configureClusterMutationProvider: ConfigureVsanClusterMutationProvider,\n         private formBuilder: FormBuilder) {\n      this.domainSettings = this.formBuilder.group({\n         domainName: new FormControl(\"\", [this.domainValidator]),\n      });\n   }\n\n   ngOnInit(): void {\n      this.context = VsanUiUtils.getModalContext();\n      if (this.context.targetDomain) {\n         this.domainSettings.setValue({domainName: this.context.targetDomain});\n      }\n      this.checkForInaccessibleHosts();\n   }\n\n   @Loader()\n   async onMove(): Promise<void> {\n      // The form has already been marked as touched by the vsan-auto-focus directive on the input.\n      // The code, however, is left to ensure that behavior in case of directive removal.\n      if (this.domainSettings.invalid) {\n         this.domainSettingsForm.markAsTouched();\n         return;\n      }\n\n      if (!this.checkForInaccessibleHosts()) {\n         return;\n      }\n      const promises: Promise<ManagedObject>[] = this.context.hosts.map((host: DomainOrHostData) => {\n         const hostRef: ManagedObject = ManagedObjectUtils.fromUid(host.uid);\n         const spec: VsanFaultDomainSpec = VsanFaultDomainSpec.Factory.create(this.getDomainName(), hostRef);\n         return this.configureClusterMutationProvider.updateFaultDomainInfo(hostRef, spec);\n      });\n\n      const tasks: ManagedObject[] = await Promise.all(promises);\n      VsanUiUtils.closeModalDialog(tasks);\n   }\n\n   domainValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n      this.domainNameValidationError = \"\";\n      if (!this.context?.promptForDomainName) {\n         // No domain name needed, nothing to validate\n         return;\n      }\n\n      const domainName: string = this.getDomainName();\n      if (!domainName) {\n         this.domainNameValidationError = VsanUiUtils.getString(\n               \"vsan.faultDomains.action.createDomain.validation.noName\");\n      } else if (domainName.length > 256) {\n         this.domainNameValidationError = VsanUiUtils.getString(\n               \"vsan.faultDomains.action.renameDomain.validation.nameTooLong\");\n      }\n      if (this.domainNameValidationError) {\n         return {\"domainInvalid\": {value: control.value}};\n      }\n      return null;\n   };\n\n   private getDomainName(): string {\n      return this.domainSettings && this.domainSettings.get(\"domainName\").value\n            && this.domainSettings.get(\"domainName\").value.trim();\n   }\n\n   private checkForInaccessibleHosts(): boolean {\n      const inaccessibleHosts: DomainOrHostData[] = this.context.hosts.filter(\n            host => host.connectionState !== ConnectionState.connected);\n      if (!inaccessibleHosts?.length) {\n         return true;\n      }\n\n      if (inaccessibleHosts.length === 1) {\n         this.alertMessage =\n               VsanUiUtils.getString(\n                     \"vsan.faultDomains.action.deleteDomain.validation.hostDisconnected\",\n                     inaccessibleHosts[0].label);\n      } else {\n         this.alertMessage =\n               VsanUiUtils.getString(\n                     \"vsan.faultDomains.action.deleteDomain.validation.hostsDisconnected\",\n                     inaccessibleHosts.join(\",\"));\n      }\n      return false;\n   }\n\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\n\n@Component({\n   selector: \"vsan-category-label\",\n   templateUrl: \"category-label.html\",\n   styleUrls: [\"category-label.scss\"],\n})\nexport class CategoryLabelComponent {\n\n   @Input()\n   info: string;\n\n   @Input()\n   signpostLabel: string;\n}\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit, ViewChild} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {Icon} from \"@util/icon\";\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {ConnectionState} from \"@generated/connection-state\";\nimport {VsanFaultDomainSpec} from \"@generated/vsan-fault-domain-spec\";\nimport {PreferredFaultDomainData} from \"@generated/preferred-fault-domain-data\";\nimport {VsanStretchedClusterMutationProvider} from \"@generated/vsan-stretched-cluster-mutation-provider\";\nimport {EditDomainContext} from \"./edit-domain-context\";\nimport {\n   AbstractControl,\n   FormBuilder,\n   FormControl,\n   FormGroup,\n   ValidationErrors,\n   ValidatorFn,\n} from \"@angular/forms\";\nimport {ClrForm} from \"@clr/angular\";\nimport {VsanStretchedClusterService} from \"@generated/vsan-stretched-cluster-service\";\nimport {ConfigureVsanClusterMutationProvider} from \"@generated/configure-vsan-cluster-mutation-provider\";\nimport {FaultDomainModel} from \"@model/fault-domain.model\";\n\n@Component({\n   templateUrl: \"edit-domain.html\",\n   styleUrls: [\"edit-domain.scss\"],\n   selector: \"vsan-fault-domains-edit-domain\",\n})\nexport class EditDomainComponent implements OnInit {\n\n   readonly Icon: typeof Icon = Icon;\n   private existingDomains: any = {};\n\n   context: EditDomainContext;\n   hosts: FaultDomainModel[] = [];\n   selectedHosts: FaultDomainModel[] = [];\n   loading: boolean = true;\n   alertMessages: string[];\n   domainNameValidationError: string;\n\n   domainSettings: FormGroup;\n\n   @ViewChild(ClrForm, {static: true})\n   domainSettingsForm: ClrForm;\n\n   constructor(private stretchedClusterService: VsanStretchedClusterService,\n         private configureClusterMutationProvider: ConfigureVsanClusterMutationProvider,\n         private stretchedClusterMutationProvider: VsanStretchedClusterMutationProvider,\n         private formBuilder: FormBuilder) {\n      this.domainSettings = this.formBuilder.group({\n         domainName: new FormControl(\"\", [this.domainValidator]),\n      });\n   }\n\n   async ngOnInit(): Promise<void> {\n      this.context = VsanUiUtils.getModalContext();\n      if (this.context && this.context.prepopulateName) {\n         this.domainSettings.setValue({domainName: this.context.prepopulateName});\n      }\n\n      try {\n         const hostsData: DomainOrHostData[] = await this.stretchedClusterService.getAvailableDomains(\n               ManagedObject.contextObject);\n         this.handleData(hostsData);\n         this.loading = false;\n      } catch (error) {\n         this.loading = false;\n         this.alertMessages = [error];\n      }\n   }\n\n   handleData(data: DomainOrHostData[]): void {\n      const hosts: FaultDomainModel[] = data\n            .filter(item => item.isHost)\n            .map(item => FaultDomainModel.createHost(item, null, []));\n      const domains: FaultDomainModel[] = data\n            .filter(item => !item.isHost)\n            .map(item => FaultDomainModel.createDomain(item, []));\n      domains.forEach(domain => this.existingDomains[domain.data.uid] = domain);\n      domains.forEach(domain => hosts.push(...domain.hosts));\n\n      for (const host of hosts) {\n         if (this.context.preselectHosts.indexOf(host.data.uid) !== -1) {\n            this.selectedHosts.push(host);\n         }\n      }\n      this.hosts = hosts;\n   }\n\n   onConfirm(): void {\n      // The form has already been marked as touched by the vsan-auto-focus directive on the input.\n      // The code, however, is left to ensure that behavior in case of directive removal.\n      if (this.domainSettings.invalid) {\n         this.domainSettingsForm.markAsTouched();\n         return;\n      }\n\n      this.alertMessages = this.validateHosts();\n      if (!!this.alertMessages && this.alertMessages.length > 0) {\n         return;\n      }\n\n      const domainName: string = this.getDomainName();\n\n      const specs: VsanFaultDomainSpec[] = this.selectedHosts\n            .filter(host => !host.domain || host.domain.data.uid !== domainName)\n            .map(host => VsanFaultDomainSpec.Factory.create(\n                  domainName, ManagedObject.fromUid(host.data.uid)));\n\n      if (this.context.prepopulateName.length > 0) {\n         // renaming existing domain\n         const domain: FaultDomainModel = this.existingDomains[this.context.prepopulateName];\n         const unchecked: FaultDomainModel[] = domain.hosts.filter(host => this.selectedHosts.indexOf(host) === -1);\n         unchecked.forEach(host => specs.push(\n               VsanFaultDomainSpec.Factory.create(null, ManagedObject.fromUid(host.data.uid))));\n      }\n\n      const promises: Promise<ManagedObject>[] = specs\n            .map(spec => this.configureClusterMutationProvider.updateFaultDomainInfo(spec.hostRef, spec));\n\n      if (promises.length === 0) {\n         VsanUiUtils.closeModalDialog([]);\n         return;\n      }\n      // Call setPreferredFaultDomain() when you rename a preferred domain from a stretched cluster\n      if (this.context.witnessInfo) {\n         const isCurrentDomainPreferred: boolean =\n               this.context.witnessInfo.preferredFaultDomainName === this.context.prepopulateName;\n         const isCurrentDomainRenamed: boolean = domainName !== this.context.prepopulateName;\n         if (isCurrentDomainPreferred && isCurrentDomainRenamed) {\n            const spec: PreferredFaultDomainData = PreferredFaultDomainData.Factory.create(domainName);\n            promises.push(this.stretchedClusterMutationProvider.setPreferredFaultDomain(this.context.clusterRef, spec));\n         }\n      }\n\n      this.loading = true;\n      Promise.all(promises)\n            .then((tasks: ManagedObject[]) => VsanUiUtils.closeModalDialog(tasks))\n            .catch(() => VsanUiUtils.closeModalDialog([]));\n   }\n\n   validateHosts(): string[] {\n      if (this.selectedHosts.length === 0) {\n         return [VsanUiUtils.getString(\"vsan.faultDomains.action.createDomain.validation.noHost\")];\n      }\n\n      const disconnectedHostWarning: string[] = this.selectedHosts\n            .filter(host => host.data.connectionState !== ConnectionState.connected)\n            .map(host => VsanUiUtils.getString(\n                  \"vsan.faultDomains.action.createDomain.validation.disconnectedHost\",\n                  host.data.label));\n      if (disconnectedHostWarning.length > 0) {\n         return disconnectedHostWarning;\n      }\n\n      if (this.context.witnessInfo) {\n         const stretchedClusterConfigurationWarning: string = this.validateStretchedClusterConfiguration();\n         if (stretchedClusterConfigurationWarning) {\n            return [stretchedClusterConfigurationWarning];\n         }\n      }\n   }\n\n   domainValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n      this.domainNameValidationError = \"\";\n      const domainName: string = this.getDomainName();\n      if (!domainName) {\n         this.domainNameValidationError = VsanUiUtils.getString(\n               \"vsan.faultDomains.action.createDomain.validation.noName\");\n      } else if (domainName.length > 256) {\n         this.domainNameValidationError = VsanUiUtils.getString(\n               \"vsan.faultDomains.action.renameDomain.validation.nameTooLong\");\n      } else if (this.existingDomains[domainName] && this.context.prepopulateName !== domainName) {\n         this.domainNameValidationError = VsanUiUtils.getString(\n               \"vsan.faultDomains.action.createDomain.validation.duplicateName\");\n      }\n      if (this.domainNameValidationError) {\n         return {\"domainInvalid\": {value: control.value}};\n      }\n      return null;\n   };\n\n   getDomainName(): string {\n      return this.domainSettings && this.domainSettings.get(\"domainName\").value\n            && this.domainSettings.get(\"domainName\").value.trim();\n   }\n\n   private validateStretchedClusterConfiguration(): string {\n      if (this.validateStretchedClusterStandaloneHostsNotAdded()) {\n         return VsanUiUtils.getString(\"vsan.faultDomains.stretchedCluster.action.moveHosts.validation.moveToStandalone\");\n      }\n      if (this.validateStretchedClusterPreferredDomainNotRemoved()) {\n         return VsanUiUtils.getString(\"vsan.faultDomains.stretchedCluster.action.moveHosts.validation.removePreferred\");\n      }\n      if (this.validateStretchedClusterRequiredDomainsNotRemoved()) {\n         return VsanUiUtils.getString(\"vsan.faultDomains.stretchedCluster.action.moveHosts.validation.insufficientFDs\");\n      }\n   }\n\n   private validateStretchedClusterStandaloneHostsNotAdded(): boolean {\n      // Validate not pulling out hosts from an existing domain to standalone via edit action\n      const currentDomain: FaultDomainModel = this.existingDomains[this.context.prepopulateName];\n      if (!currentDomain) {\n         return false;\n      }\n      const selectedHostsFromCurrentDomainCount: number = this.selectedHosts.filter(\n            host => host.domain && host.domain.data.uid === this.context.prepopulateName).length;\n      return (currentDomain.hosts.length !== selectedHostsFromCurrentDomainCount);\n   }\n\n   private validateStretchedClusterPreferredDomainNotRemoved(): boolean {\n      // Validate all hosts of a preferred domain are not removed\n      const preferredDomainName: string = this.context.witnessInfo.preferredFaultDomainName;\n      if (!(preferredDomainName && preferredDomainName !== this.context.prepopulateName)) {\n         return false;\n      }\n      const preferredDomain: FaultDomainModel = this.existingDomains[preferredDomainName];\n      const selectedHostsFromPreferredDomainCount: number = this.selectedHosts.reduce(\n            (sum, host) => sum += (host.domain && host.domain.data.uid === preferredDomainName) ? 1 : 0, 0);\n      return (preferredDomain && preferredDomain.hosts.length === selectedHostsFromPreferredDomainCount);\n   }\n\n   private validateStretchedClusterRequiredDomainsNotRemoved(): boolean {\n      // Validate FDs are not less than 2 when moving hosts to particular FD\n      const hostsCountFromDomainEntries: IterableIterator<[string, number]> = this.countSelectedHostsFromOtherDomains().entries();\n      let domainsToRemove: number = 0;\n      while (true) {\n         const domainHostsCount: IteratorResult<[string, number]> = hostsCountFromDomainEntries.next();\n         if (!domainHostsCount.done) {\n            const domainName: string = domainHostsCount.value[0];\n            const hostsCount: number = domainHostsCount.value[1];\n            const domainModel: FaultDomainModel = this.existingDomains[domainName];\n            if (domainModel.hosts.length === hostsCount) {\n               domainsToRemove++;\n            }\n         } else {\n            break;\n         }\n      }\n      return (domainsToRemove && ((Object.keys(this.existingDomains).length - domainsToRemove) < 2));\n   }\n\n   private countSelectedHostsFromOtherDomains(): Map<string, number>  {\n      const currentDomain: FaultDomainModel = this.existingDomains[this.context.prepopulateName];\n      const selectedHostsCountFromDomain: Map<string, number> = new Map();\n      this.selectedHosts.forEach(host => {\n         // Count hosts that reside in other domains /exclude the current domain/\n         const isHostFromDifferentDomain: boolean =\n               host.domain && (!currentDomain || (host.domain.data.uid !== this.context.prepopulateName));\n         if (isHostFromDifferentDomain) {\n            let domainHostsCount: number = 1;\n            if (selectedHostsCountFromDomain.has(host.domain.data.uid)) {\n               domainHostsCount += selectedHostsCountFromDomain.get(host.domain.data.uid);\n            }\n            selectedHostsCountFromDomain.set(host.domain.data.uid, domainHostsCount);\n         }\n      });\n      return selectedHostsCountFromDomain;\n   }\n\n   isHostEnabled(host: FaultDomainModel): boolean {\n      return ConnectionState.connected === host.data.connectionState;\n   }\n\n   get title(): string {\n      return this.context.prepopulateName.length > 0\n            ? VsanUiUtils.getString(\"vsan.faultDomains.action.renameDomain.title\")\n            : VsanUiUtils.getString(\"vsan.faultDomains.action.createDomain.title\");\n   }\n\n   get objectName(): string {\n      return this.context.prepopulateName.length > 0 ? this.context.prepopulateName : null;\n   }\n}\n","<!-- Copyright 2019-2021 VMware, Inc. All rights reserved. VMware Confidential -->\n<h5 class=\"label-title\">\n   <ng-content></ng-content>\n</h5>\n\n<clr-signpost *ngIf=\"info\"\n              [vsan-signpost-title]=\"signpostLabel\">\n   <clr-signpost-content *clrIfOpen [clrPosition]=\"'bottom-right'\">\n      <span>{{info}}</span>\n   </clr-signpost-content>\n</clr-signpost>\n","<!--Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-dropdown id=\"fd-action-list\"\n              class=\"raise-menu\"\n              *ngIf=\"domain || iconId\">\n\n   <button id=\"fd-actions-toggle\"\n           type=\"button\"\n           [disabled]=\"disabled\"\n           class=\"btn btn-sm btn-link btn-quick-actions\"\n           clrDropdownToggle\n           [attr.aria-label]=\"'vsan.faultDomains.action.quickActions'|localized\">\n      <clr-icon [attr.shape]=\"iconId\" [ngClass]=\"selectionCount > 0 ? 'is-info' : ''\"></clr-icon>\n   </button>\n\n   <clr-dropdown-menu class=\"raise-menu\"\n                      [clrPosition]=\"iconId ? 'bottom-right' : 'bottom-left'\"\n                      *clrIfOpen\n                      [attr.aria-label]=\"'vsan.faultDomains.action.faultDomainActions.srMessage.dropdownMenu.label' | localized\">\n\n      <label class=\"dropdown-header\">\n         {{domain.data.uid}}\n      </label>\n\n      <button type=\"button\"\n              class=\"dropdown-item\"\n              (click)=\"onPromote()\"\n              id=\"promote-domain-button\"\n              *ngIf=\"isStretchedCluster && !domain.isPreferred\"\n              clrDropdownItem>\n         {{'vsan.faultDomains.stretchedCluster.action.promote.action' | localized}}\n      </button>\n\n      <button type=\"button\"\n              class=\"dropdown-item\"\n              (click)=\"onEdit()\"\n              id=\"edit-domain-button\"\n              clrDropdownItem>\n         {{'vsan.faultDomains.action.renameDomain.additionalAction' | localized}}\n      </button>\n\n      <button type=\"button\"\n              class=\"dropdown-item\"\n              (click)=\"onRemove()\"\n              [disabled]=\"isStretchedCluster && (targetDomains.length < 2 || domain.isPreferred)\"\n              id=\"remove-domain-button\"\n              clrDropdownItem>\n         {{'vsan.faultDomains.action.deleteDomain.additionalAction' | localized}}\n      </button>\n\n      <ng-container *ngIf=\"selectionCount > 0\">\n\n         <div class=\"dropdown-divider\"></div>\n\n         <label class=\"dropdown-header\">\n            {{'vsan.faultDomains.action.hostCount' | localized : selectionCount}}\n         </label>\n\n         <button type=\"button\"\n                 *ngIf=\"isStretchedCluster && domain.validTargetDomains.length === 1\"\n                 class=\"dropdown-item\"\n                 [disabled]=\"selectionCount === domain.hosts.length\"\n                 [ngClass]=\"(selectionCount === domain.hosts.length) ? 'disabled' : ''\"\n                 (click)=\"onMove(domain.validTargetDomains[0])\"\n                 id=\"move-selected-button\"\n                 clrDropdownItem>\n            <span [innerHTML]=\"'vsan.faultDomains.action.moveHosts.hint.move' | localized : domain.validTargetDomains[0]\"></span>\n         </button>\n         <clr-dropdown class=\"raise-menu\"\n                       *ngIf=\"!isStretchedCluster || domain.validTargetDomains.length !== 1\">\n            <button class=\"dropdown-item expandable\"\n                    type=\"button\"\n                    [ngClass]=\"moveActionDisabled ? 'disabled' : ''\"\n                    [disabled]=\"moveActionDisabled\"\n                    clrDropdownToggle>\n               {{'vsan.faultDomains.action.moveHosts' | localized}}\n            </button>\n            <clr-dropdown-menu class=\"raise-menu\"\n                               [attr.aria-label]=\"'vsan.faultDomains.action.moveHosts.srMessage.dropdownMenu.label' | localized\">\n               <button type=\"button\"\n                       class=\"dropdown-item\"\n                       id=\"create-domain-btn\"\n                       *ngIf=\"!isStretchedCluster || domain.validTargetDomains.length < 2\"\n                       (click)=\"onCreate()\"\n                       clrDropdownItem>\n                  {{'vsan.faultDomains.action.createDomain' | localized}}\n               </button>\n               <button type=\"button\"\n                       class=\"dropdown-item\"\n                       id=\"remove-domain-btn\"\n                       *ngIf=\"!isStretchedCluster\"\n                       (click)=\"onMove(null)\"\n                       clrDropdownItem>\n                  <span [innerHTML]=\"'vsan.faultDomains.action.moveHosts.hint.remove' | localized : domain.data.uid\"></span>\n               </button>\n               <ng-container *ngIf=\"domain.validTargetDomains.length > 0\">\n                  <div class=\"dropdown-divider\"></div>\n                  <label class=\"dropdown-header\">\n                     {{'vsan.faultDomains.action.moveHosts.hint.moveToExisting' | localized}}\n                  </label>\n                  <button type=\"button\"\n                          class=\"dropdown-item\"\n                          *ngFor=\"let target of domain.validTargetDomains\"\n                          id=\"move-to-{{target}}\"\n                          (click)=\"onMove(target)\"\n                          clrDropdownItem>\n                     {{target}}\n                  </button>\n               </ng-container>\n            </clr-dropdown-menu>\n         </clr-dropdown>\n      </ng-container>\n   </clr-dropdown-menu>\n</clr-dropdown>\n","<!--Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-prompt\n      id=\"move-hosts-dialog\"\n      [title]=\"context.operation\"\n      [subtitle]=\"context.objectInfo\"\n      [confirmText]=\"context.actionButtonLabel | localized\"\n      [cancelText]=\"'vsan.common.cancel' | localized\"\n      [confirmStyle]=\"context.actionButtonClass\"\n      [blockButton]=\"busy || domainSettings.touched && domainSettings.invalid\"\n      [blockContent]=\"busy\"\n      [(alertMessage)]=\"alertMessage\"\n      (onConfirm)=\"onMove()\">\n\n   <div class=\"dialog-container\">\n      <span id=\"move-hosts-message\" [innerHTML]=\"context.message\"></span>\n\n      <form clrForm\n            *ngIf=\"context?.promptForDomainName\"\n            clrLayout=\"horizontal\"\n            [formGroup]=\"domainSettings\">\n         <clr-input-container class=\"control-full-width\">\n            <label id=\"domain-name-label\" class=\"clr-col-3\">\n               {{\"vsan.faultDomains.action.createDomain.label.name\" | localized}}\n            </label>\n            <input id=\"domain-name-input\"\n                   class=\"clr-col-9\"\n                   clrInput\n                   formControlName=\"domainName\"\n                   vsan-auto-focus/>\n            <clr-control-error>{{domainNameValidationError}}</clr-control-error>\n         </clr-input-container>\n      </form>\n\n      <span id=\"destroy-domain-message\"\n            *ngIf=\"context.warnDestructiveForSourceDomain\"\n            [innerHTML]=\"'vsan.faultDomains.action.destructiveWarning' | localized: context.sourceDomain\">\n      </span>\n   </div>\n</vsan-prompt>\n","/* Copyright 2017 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {PreferredFaultDomainData} from \"@generated/preferred-fault-domain-data\";\nimport {VsanStretchedClusterMutationProvider} from \"@generated/vsan-stretched-cluster-mutation-provider\";\n\n@Component({\n   templateUrl: 'promote-domain.html',\n   styleUrls: ['promote-domain.scss'],\n   selector: 'promote-fault-domain-prompt'\n})\nexport class PromoteDomainComponent implements OnInit {\n\n   clusterRef: ManagedObject;\n   domainName: string;\n\n   errors: string[];\n   busy: boolean = false;\n\n   readonly dialogTitle: string = VsanUiUtils.getString(\"vsan.faultDomains.stretchedCluster.action.promote.title\");\n\n   constructor(private mutationProvider: VsanStretchedClusterMutationProvider) {}\n\n   ngOnInit() {\n      let context: any = VsanUiUtils.getModalContext();\n      this.clusterRef = context.clusterRef;\n      this.domainName = context.domainName;\n   }\n\n   apply = () => {\n      let spec = PreferredFaultDomainData.Factory.create(this.domainName);\n      this.mutationProvider.setPreferredFaultDomain(this.clusterRef, spec)\n            .then(taskRef => VsanUiUtils.closeModalDialog(taskRef ? [taskRef] : []))\n            .catch(e => {\n               this.errors = [e];\n               this.busy = false;\n            });\n\n      this.busy = true;\n   }\n}","<!--Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-delete-prompt\n      [title]=\"dialogTitle\"\n      [(alertMessages)]=\"errors\"\n      [blockButton]=\"busy\"\n      [confirmText]=\"'vsan.common.remove' | localized\"\n      (onConfirm)=\"apply()\">\n   <span class=\"confirmation-padding\">\n      {{'vsan.faultDomains.stretchedCluster.action.disable.confirmationText' | localized}}\n   </span>\n   <div [innerHTML]=\"'vsan.faultDomains.stretchedCluster.action.disable.confirmation' | localized: witnessName\"></div>\n</vsan-delete-prompt>\n","\nexport interface PreferredFaultDomainData {\n\n   preferredFaultDomainName: string;\n} //class PreferredFaultDomainData\n\nexport module PreferredFaultDomainData{\nexport class Factory {\n\n   static create = (preferredFaultDomainName: string): PreferredFaultDomainData => {\n      return { preferredFaultDomainName: preferredFaultDomainName, };\n   }\n\n\n} //class Factory\n\n} //module PreferredFaultDomainData\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ManagedObject} from \"@service/managed-object\";\nimport {WitnessHostData} from \"@generated/witness-host-data\";\nimport {FaultDomainModel} from \"@model/fault-domain.model\";\n\nexport class EditDomainContext {\n   prepopulateName: string = \"\";\n   preselectHosts: string[] = [];\n   witnessInfo: WitnessHostData;\n   clusterRef: ManagedObject;\n\n   static createDomain(\n         preselectHosts: string[],\n         witnessInfo: WitnessHostData,\n         clusterRef: ManagedObject): EditDomainContext {\n      return {\n         prepopulateName: \"\",\n         preselectHosts: preselectHosts,\n         witnessInfo: witnessInfo,\n         clusterRef: clusterRef,\n      };\n   }\n   static editDomain(\n         domain: FaultDomainModel,\n         witnessInfo: WitnessHostData,\n         clusterRef: ManagedObject): EditDomainContext {\n      return {\n         prepopulateName: domain.data.uid,\n         preselectHosts: domain.hosts.map(h => h.data.uid),\n         witnessInfo: witnessInfo,\n         clusterRef: clusterRef,\n      };\n   }\n}\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {ClrSelectedState} from \"@clr/angular\";\nimport {FaultDomainModel} from \"@model/fault-domain.model\";\nimport {CreateDomainEvent, FaultDomainEvent, MoveHostsEvent} from \"../../common/event/fault-domain.event\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   selector: \"standalone-hosts-action-menu\",\n   templateUrl: \"standalone-hosts-action-menu.html\",\n   styleUrls: [\"fault-domain-action-menu.scss\"],\n})\nexport class StandaloneHostsActionMenuComponent {\n\n   @Input()\n   standaloneHosts: FaultDomainModel[];\n\n   @Input()\n   targetDomains: FaultDomainModel[];\n\n   @Input()\n   disabled: boolean = false;\n\n   @Input()\n   disabledReason: string;\n\n   @Input()\n   isStretchedClusterEnabled: boolean = false;\n\n   @Output()\n   onActionEvent: EventEmitter<FaultDomainEvent> = new EventEmitter<FaultDomainEvent>();\n\n   onCreate() {\n      const createDomainEvent = new CreateDomainEvent();\n      createDomainEvent.memberHosts = this.selection;\n      this.onActionEvent.emit(createDomainEvent);\n   }\n\n   onMove(targetDomain: string) {\n      const moveHostsEvent = new MoveHostsEvent();\n      moveHostsEvent.hosts = this.selection;\n      moveHostsEvent.targetDomain = targetDomain;\n      this.onActionEvent.emit(moveHostsEvent);\n   }\n\n   get selection(): FaultDomainModel[] {\n      return this.standaloneHosts.filter(host => host.isSelected === ClrSelectedState.SELECTED);\n   }\n\n   get dropdownLabel(): string {\n      if (VsanUiUtils.isEmpty(this.selection)) {\n         return \"\";\n      }\n      const labelKey: string = this.selection.length === 1 ?\n            \"vsan.faultDomains.action.hostCountOne\" : \"vsan.faultDomains.action.hostCount\";\n      return VsanUiUtils.getString(labelKey, this.selection.length);\n   }\n}\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {\n   CreateDomainEvent,\n   DeleteDomainEvent,\n   EditDomainEvent,\n   FaultDomainEvent,\n   MoveHostsEvent,\n   PromoteDomainEvent,\n} from \"../../common/event/fault-domain.event\";\nimport {ClrSelectedState} from \"@clr/angular\";\nimport {FaultDomainModel} from \"@model/fault-domain.model\";\n\n@Component({\n   selector: \"vsan-fault-domain-action-menu\",\n   templateUrl: \"fault-domain-action-menu.html\",\n   styleUrls: [\"fault-domain-action-menu.scss\"],\n})\nexport class FaultDomainActionMenuComponent {\n\n   @Input()\n   domain: FaultDomainModel;\n\n   @Input()\n   isStretchedCluster: boolean;\n\n   @Input()\n   iconId: string = \"ellipsis-vertical\";\n\n   @Input()\n   disabled: boolean;\n\n   @Input()\n   targetDomains: string[];\n\n   @Output()\n   onActionEvent: EventEmitter<FaultDomainEvent> = new EventEmitter<FaultDomainEvent>();\n\n   get selectionCount(): number {\n      return this.domain.hosts.filter(host => host.isSelected  === ClrSelectedState.SELECTED).length;\n   }\n\n   get moveActionDisabled(): boolean {\n      // Disable hosts moving for a stretched cluster when:\n      // 1) All the hosts within the fault domain are selected\n      // 2) And the fault domain is preferred or there are <= 2 fault domains\n      return this.isStretchedCluster && (this.selectionCount === this.domain.hosts.length) &&\n            (this.domain.isPreferred || this.domain.validTargetDomains.length <= 1);\n   }\n\n   onPromote(): void {\n      const event: PromoteDomainEvent = new PromoteDomainEvent();\n      event.targetDomain = this.domain;\n      this.onActionEvent.emit(event);\n   }\n\n   onEdit(): void {\n      const event: EditDomainEvent = new EditDomainEvent();\n      event.targetDomain = this.domain;\n      this.onActionEvent.emit(event);\n   }\n\n   onRemove(): void {\n      const event: DeleteDomainEvent = new DeleteDomainEvent();\n      event.targetDomain = this.domain;\n      this.onActionEvent.emit(event);\n   }\n\n   onCreate(): void {\n      const event: CreateDomainEvent = new CreateDomainEvent();\n      event.memberHosts = this.domain.hosts.filter(host => host.isSelected === ClrSelectedState.SELECTED);\n      this.onActionEvent.emit(event);\n   }\n\n   onMove(targetDomain: string): void {\n      const event: MoveHostsEvent = new MoveHostsEvent();\n      event.hosts = this.domain.hosts.filter(host => host.isSelected === ClrSelectedState.SELECTED);\n      event.targetDomain = targetDomain;\n      this.onActionEvent.emit(event);\n   }\n\n}\n","<!--Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-edit-prompt\n      [title]=\"dialogTitle\"\n      [(alertMessages)]=\"errors\"\n      [blockButton]=\"busy\"\n      (onConfirm)=\"apply()\">\n   <div class=\"dialog-container\">\n      <vsan-validation id=\"promote-domain-warning\"\n                       [alertType]=\"'warning'\"\n                       [alert]=\"'vsan.faultDomains.stretchedCluster.action.promote.warning' | localized\"\n                       [allowReload]=\"false\"\n                       [allowClose]=\"false\">\n      </vsan-validation>\n\n      <span\n            [innerHTML]=\"'vsan.faultDomains.stretchedCluster.action.promote.infoText' | localized: domainName\">\n      </span>\n\n      <span>\n         {{'vsan.faultDomains.stretchedCluster.action.promote.confirmationText' | localized}}\n      </span>\n\n      <span>\n         {{'vsan.faultDomains.stretchedCluster.action.promote.confirmation' | localized}}\n      </span>\n   </div>\n</vsan-edit-prompt>\n","/* Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, OnInit, Output} from \"@angular/core\";\nimport {VsanStretchedClusterMutationProvider} from \"@generated/vsan-stretched-cluster-mutation-provider\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"disable-stretched-cluster.html\",\n   styleUrls: [\"disable-stretched-cluster.scss\"],\n   selector: \"disable-stretched-cluster-prompt\",\n})\nexport class DisableStretchedClusterComponent implements OnInit {\n   clusterRef: ManagedObject = null;\n   witnessHost: ManagedObject = null;\n   witnessName: string = \"\";\n\n   errors: string[] = null;\n   busy: boolean = false;\n   readonly dialogTitle: string = VsanUiUtils.getString(\"vsan.faultDomains.stretchedCluster.action.disable.title\");\n\n   @Output()\n   private onError: EventEmitter<string> = new EventEmitter<string>();\n\n   constructor(private mutationProvider: VsanStretchedClusterMutationProvider) {\n   }\n\n   ngOnInit(): void {\n      const context: any = VsanUiUtils.getModalContext();\n      this.clusterRef = context.clusterRef;\n      this.witnessHost = context.witnessHost;\n      this.witnessName = context.witnessName;\n   }\n\n   apply(): void {\n      this.busy = true;\n      this.mutationProvider.removeWitnessHost(this.clusterRef, this.witnessHost)\n            .then((task: ManagedObject) => {\n               VsanUiUtils.closeModalDialog(task);\n            }).catch((error: string) => {\n               this.errors = [error];\n               this.busy = false;\n            });\n   }\n}","<!--Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-dropdown class=\"raise-menu\">\n   <button id=\"dropdown-button\"\n           type=\"button\"\n           [disabled]=\"disabled || selection.length == 0\"\n           title=\"{{selection.length > 0 ? disabledReason : ''}}\"\n           class=\"btn btn-sm btn-link\"\n           clrDropdownToggle>\n      <div class=\"action-menu-toggle\">\n         {{\"vsan.faultDomains.action.moveHosts\" | localized}}\n      </div>\n      <clr-icon shape=\"caret down\"></clr-icon>\n   </button>\n   <clr-dropdown-menu class=\"raise-menu\" clrPosition=\"bottom-left\" *clrIfOpen\n                      [attr.aria-label]=\"'vsan.faultDomains.action.standaloneHostsActions.srMessage.dropdownMenu.label' | localized\">\n      <label class=\"dropdown-header\">\n         {{dropdownLabel}}\n      </label>\n\n      <button *ngIf=\"!isStretchedClusterEnabled || targetDomains?.length < 2\"\n              type=\"button\"\n              class=\"dropdown-item\"\n              id=\"create-domain-btn\"\n              (click)=\"onCreate()\"\n              clrDropdownItem>\n         {{'vsan.faultDomains.action.createDomain' | localized}}\n      </button>\n\n      <clr-dropdown class=\"raise-menu\" *ngIf=\"targetDomains?.length > 0\">\n         <button class=\"dropdown-item expandable\"\n                 type=\"button\"\n                 clrDropdownToggle>\n            {{'vsan.faultDomains.action.moveHosts.hint.moveToExisting' | localized}}\n         </button>\n         <clr-dropdown-menu\n               class=\"raise-menu\"\n               [attr.aria-label]=\"'vsan.faultDomains.action.moveHosts.hint.moveToExisting.srMessage.dropdownMenu.label' | localized\">\n            <button type=\"button\"\n                    class=\"dropdown-item\"\n                    *ngFor=\"let target of targetDomains\"\n                    id=\"move-to-{{target.data.uid}}\"\n                    (click)=\"onMove(target.data.uid)\"\n                    clrDropdownItem>\n               {{target.data.uid}}\n            </button>\n         </clr-dropdown-menu>\n      </clr-dropdown>\n\n   </clr-dropdown-menu>\n</clr-dropdown>\n"],"sourceRoot":"webpack:///"}