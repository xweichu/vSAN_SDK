{"version":3,"sources":["webpack:///src/app/vsan/common/component/capacity/capacity-common.module.ts","webpack:///src/app/vsan/common/component/capacity/capacity-overview-chart.component.ts","webpack:///src/app/vsan/common/component/capacity/capacity-overview-chart.html"],"names":["CapacityCommonModule","CapacityOverviewChartComponent","capacityService","spaceEfficiencyService","highchartsThemeService","capacityOverviewData","capacityLegendData","reservationChartData","capacityOverviewUsed","capacityOverviewTotal","capacityOverviewFree","plotLines","showFreeSpaceOnDisk","isVsanMaxEnabled","hoveredSeriesChange","CAPACITY_DATA_PROPERTY","onBarChartHover","event","hoveredSeries","emit","addPlotLines","getPlotLines","capacityData","themeChangedSubscribtion","whenThemeChanged","subscribe","theme","updateCapacityData","changes","unsubscribe","resetCapacityData","totalSpace","usedSpace","freeSpace","spaceEfficiencyCapacity","parseCapacityOverviewDataSections","push","thresholds","warningThreshold","errorThreshold","parseSlackSpaceCapacity","parseCapacityReservationDataSections","isEmpty","transientCapacity","parseTransientOverviewDataSections","capacityPercentage","asPercentage","getString","formatFileSize","localizeNumber","isUsedCapacityExceedingThreshold","CLR_ERROR_STANDARD_ICON_SHAPE","CLR_WARN_STANDARD_ICON_SHAPE","CLR_SUCCESS_STANDARD_ICON_SHAPE","capacityIconShape","usedOverallCapacityIconShape","clrIconShapeClassMap","spaceEfficiencyRatio","ratio","toFixed","spaceEfficiencySavings","savings","capacitySavingsLabel","spaceEfficiencyConfig"],"mappings":"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","file":"90-es5.js","sourcesContent":["/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {VsanCommonModule} from \"app/vsan/common/vsan-common.module\";\nimport {VsanCapacityService} from \"./capacity.service\";\nimport {CapacitySummaryComponent} from \"@component/capacity/capacity-summary.component\";\nimport {SystemCapacityBreakdownComponent} from \"@component/capacity/system-capacity-breakdown.component\";\nimport {UserCapacityBreakdownComponent} from \"@component/capacity/user-capacity-breakdown.component\";\nimport {VmCapacityBreakdownComponent} from \"@component/capacity/vm-capacity-breakdown.component\";\nimport {VsanChartModule} from \"@component/chart/chart.module\";\nimport {SpaceEfficiencyService} from \"@service/space-efficiency-service\";\nimport {CapacityUsageOverviewComponent} from \"@component/capacity/capacity-usage-overview.component\";\nimport {CapacityOverviewChartComponent} from \"@component/capacity/capacity-overview-chart.component\";\nimport {SnapshotCapacityBreakdownComponent} from \"@component/capacity/snapshot-capacity-breakdown.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      VsanCommonModule,\n      VsanChartModule,\n   ],\n   declarations: [\n      CapacitySummaryComponent,\n      CapacityUsageOverviewComponent,\n      SystemCapacityBreakdownComponent,\n      UserCapacityBreakdownComponent,\n      VmCapacityBreakdownComponent,\n      CapacityOverviewChartComponent,\n      SnapshotCapacityBreakdownComponent,\n   ],\n   exports: [\n      CapacitySummaryComponent,\n      SystemCapacityBreakdownComponent,\n      UserCapacityBreakdownComponent,\n      VmCapacityBreakdownComponent,\n      CapacityOverviewChartComponent,\n      SnapshotCapacityBreakdownComponent,\n   ],\n   providers: [\n      VsanCapacityService,\n      SpaceEfficiencyService,\n   ],\n})\nexport class CapacityCommonModule {\n}\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {Component, EventEmitter, Input, OnChanges, OnDestroy, Output, SimpleChange} from \"@angular/core\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {SpaceEfficiencyService} from \"@service/space-efficiency-service\";\nimport {HighchartsThemeService} from \"@component/chart/highcharts-theme.service\";\nimport {Subscription} from \"rxjs\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ChartSectionData, ChartSectionPlotLine} from \"@component/chart/model/chart-section.data\";\nimport {SpaceEfficiencyCapacityData} from \"@generated/space-efficiency-capacity-data\";\nimport {Icon} from \"@util/icon\";\n\n@Component({\n   templateUrl: \"capacity-overview-chart.html\",\n   styleUrls: [\"capacity-overview-chart.scss\"],\n   selector: \"vsan-capacity-overview-chart\",\n})\nexport class CapacityOverviewChartComponent implements OnChanges, OnDestroy {\n\n   @Input()\n   capacityData: CapacityData;\n\n   capacityOverviewData: ChartSectionData[] = [];\n   /*\n      We need separate entries for the legend as not all items are displayed in it,\n      e.g. the capacity reservations have their own legend.\n    */\n   capacityLegendData: ChartSectionData[] = [];\n\n   /*\n     We need to keep the capacity reservation chart data separately as it has its own legend.\n    */\n   reservationChartData: ChartSectionData[] = [];\n\n   capacityOverviewUsed: number = 0;\n   capacityOverviewTotal: number = 0;\n   capacityOverviewFree: number = 0;\n   spaceEfficiencyCapacity: SpaceEfficiencyCapacityData;\n   plotLines: ChartSectionPlotLine[] = [];\n   warningThreshold: number;\n   errorThreshold: number;\n\n   @Input()\n   showFreeSpaceOnDisk: boolean = true;\n\n   @Input()\n   isVsanMaxEnabled: boolean = false;\n\n   @Input()\n   hoveredSeries: any;\n\n   @Output()\n   hoveredSeriesChange: EventEmitter<any> = new EventEmitter<any>();\n\n   private readonly CAPACITY_DATA_PROPERTY: string = \"capacityData\";\n\n   private themeChangedSubscribtion: Subscription;\n\n   constructor(private capacityService: VsanCapacityService,\n         private spaceEfficiencyService: SpaceEfficiencyService,\n         private highchartsThemeService: HighchartsThemeService) {\n      this.themeChangedSubscribtion = this.highchartsThemeService.whenThemeChanged.subscribe(\n            theme => this.updateCapacityData());\n   }\n\n   ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n      if (changes[this.CAPACITY_DATA_PROPERTY]) {\n         this.updateCapacityData();\n      }\n   }\n\n   ngOnDestroy() {\n      this.themeChangedSubscribtion.unsubscribe();\n   }\n\n   private updateCapacityData() {\n      this.resetCapacityData();\n\n      this.capacityOverviewTotal = this.capacityData.totalSpace;\n      this.capacityOverviewUsed = this.capacityData.usedSpace;\n      this.capacityOverviewFree = this.capacityData.freeSpace;\n      this.spaceEfficiencyCapacity = this.capacityData.spaceEfficiencyCapacity;\n      this.capacityOverviewData = this.capacityService.parseCapacityOverviewDataSections(this.capacityData);\n      this.capacityLegendData.push(...this.capacityOverviewData);\n      if (this.capacityData.thresholds) {\n         this.warningThreshold = this.capacityData.thresholds.warningThreshold;\n         this.errorThreshold = this.capacityData.thresholds.errorThreshold;\n      }\n      this.parseSlackSpaceCapacity();\n   }\n\n   private resetCapacityData() {\n      this.capacityOverviewData = [];\n      this.capacityLegendData = [];\n      this.reservationChartData = [];\n      this.plotLines = [];\n   }\n\n   private parseSlackSpaceCapacity() {\n      this.reservationChartData = this.capacityService.parseCapacityReservationDataSections(this.capacityData);\n      if (!VsanUiUtils.isEmpty(this.reservationChartData)) {\n         this.capacityOverviewData.push(...this.reservationChartData);\n      }\n\n      // Add transientCapacity last to make sure it appears at the end of the bar chart\n      const transientCapacity: ChartSectionData = this.capacityService.parseTransientOverviewDataSections(\n            this.capacityData);\n      if (transientCapacity) {\n         this.capacityLegendData.push(transientCapacity);\n         this.capacityOverviewData.push(transientCapacity);\n      }\n\n      this.addPlotLines();\n   }\n\n   get usedOverallCapacityLabel(): string {\n      const capacityPercentage: number = VsanUiUtils.asPercentage(\n            this.capacityOverviewUsed, this.capacityOverviewTotal);\n      return VsanUiUtils.getString(\"vsan.monitor.capacity.overview.used.label\",\n            VsanUiUtils.formatFileSize(this.capacityOverviewUsed),\n            VsanUiUtils.formatFileSize(this.capacityOverviewTotal),\n            VsanUiUtils.localizeNumber(capacityPercentage));\n   }\n\n   get usedOverallCapacityIconShape(): string {\n      if (this.capacityService.isUsedCapacityExceedingThreshold(this.capacityData, this.errorThreshold)) {\n         return Icon.CLR_ERROR_STANDARD_ICON_SHAPE;\n      } else if (this.capacityService.isUsedCapacityExceedingThreshold(this.capacityData, this.warningThreshold)) {\n         return Icon.CLR_WARN_STANDARD_ICON_SHAPE;\n      } else {\n         return Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE;\n      }\n   }\n\n   get usedOverallCapacityIconClass(): string {\n      const capacityIconShape: string = this.usedOverallCapacityIconShape;\n      return Icon.clrIconShapeClassMap[capacityIconShape];\n   }\n\n   get capacityOverviewFreeLabel(): string {\n      return VsanUiUtils.getString(\"vsan.monitor.capacity.overview.free.label\",\n            VsanUiUtils.formatFileSize(this.capacityOverviewFree));\n   }\n\n   get spaceEfficiencyCapacityLabel(): string {\n      if (!this.spaceEfficiencyCapacity) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n\n      const spaceEfficiencyRatio: string = VsanUiUtils.localizeNumber((this.spaceEfficiencyCapacity.ratio).toFixed(2));\n      const spaceEfficiencySavings: string = VsanUiUtils.formatFileSize(this.spaceEfficiencyCapacity.savings);\n\n      return this.spaceEfficiencyService.capacitySavingsLabel(\n            this.spaceEfficiencyCapacity.spaceEfficiencyConfig,\n            spaceEfficiencySavings,\n            spaceEfficiencyRatio,\n            this.isVsanMaxEnabled);\n   }\n\n   onBarChartHover = (event: any) => {\n      this.hoveredSeries = event;\n      this.hoveredSeriesChange.emit(event);\n   };\n\n   private addPlotLines = () => {\n      this.plotLines = this.capacityService.getPlotLines(this.capacityData, true);\n   };\n}\n","<!--Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"used-capacity-overview\">\n   <div class=\"used-label\">\n      <clr-icon [attr.shape]=\"usedOverallCapacityIconShape\"\n                class=\"is-solid\"\n                size=\"18\"\n                [ngClass]=\"usedOverallCapacityIconClass\">\n      </clr-icon>\n      <span class=\"used-overall-label\">{{usedOverallCapacityLabel}}</span>\n   </div>\n   <div *ngIf=\"showFreeSpaceOnDisk\" class=\"free-label\">\n      <span>{{capacityOverviewFreeLabel}}</span>\n      <clr-signpost [vsan-signpost-title]=\"'vsan.monitor.capacity.overview.signpost.label' | localized\">\n         <clr-signpost-content *clrIfOpen clrPosition=\"bottom-left\">\n            {{'vsan.monitor.capacity.overview.tooltip' | localized}}\n         </clr-signpost-content>\n      </clr-signpost>\n   </div>\n</div>\n<vsan-capacity-bar-chart class=\"capacity-overview-bar-chart\"\n                         [sections]=\"capacityOverviewData\"\n                         [total]=\"capacityOverviewTotal\"\n                         [plotLines]=\"plotLines\"\n                         (hoverBarChart)=\"onBarChartHover($event)\"\n                         [warningThreshold]=\"warningThreshold\"\n                         [errorThreshold]=\"errorThreshold\">\n</vsan-capacity-bar-chart>\n<vsan-capacity-legend class=\"capacity-legend\"\n                      [chartSectionData]=\"capacityLegendData\"\n                      [used]=\"capacityOverviewUsed\"\n                      [total]=\"capacityOverviewTotal\"\n                      [warningThreshold]=\"warningThreshold\"\n                      [errorThreshold]=\"errorThreshold\"\n                      [hoveredSeries]=\"hoveredSeries\">\n</vsan-capacity-legend>\n<span *ngIf=\"spaceEfficiencyCapacity\"\n      class=\"space-efficiency-capacity-label\">\n      {{spaceEfficiencyCapacityLabel}}\n</span>\n<!-- TODO (tnojarova): clarify with UX if signpost is needed to explain vSAN Max space efficiency -->"]}