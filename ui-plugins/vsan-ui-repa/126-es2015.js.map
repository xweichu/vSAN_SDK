{"version":3,"sources":["./src/app/vsan/cluster/configure/action/capacity/capacity-reservation-settings.html","./src/app/vsan/common/service/navigation/model/documentation-id.ts","./src/app/vsan/cluster/configure/action/capacity/capacity-management.module.ts","./src/app/vsan/cluster/configure/action/capacity/capacity-reservation-settings.component.ts","./src/app/vsan/cluster/configure/action/capacity/capacity-management-dialog.component.ts","./src/app/vsan/cluster/configure/action/capacity/capacity-management-dialog.html","./src/app/vsan/common/component/alert-threshold/customize-alert-threshold.component.ts","./src/app/vsan/common/component/alert-threshold/customize-alert-threshold.module.ts","./src/app/vsan/common/component/alert-threshold/customize-alert-threshold.html"],"names":[],"mappings":"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","file":"126-es2015.js","sourcesContent":["<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-toggle-container *ngIf=\"!isDisabled(reservationConfig.vsanOperationReservation)\">\n   <clr-toggle-wrapper>\n      <input id=\"vsan-operation-space-reservation\"\n             type=\"checkbox\"\n             clrToggle\n             name=\"slackSpaceCapacityReservation\"\n             [(ngModel)]=\"vsanOperationReservation\"\n             [disabled]=\"!isSupported(reservationConfig.vsanOperationReservation)\"\n             (change)=\"updateReservation()\"/>\n      <label id=\"vsan-operation-space-label\">\n         {{\"vsan.services.enforcereservation.vsanOperationSpace.label\" | localized}}\n      </label>\n   </clr-toggle-wrapper>\n   <clr-control-helper *ngIf=\"!isSupported(reservationConfig.vsanOperationReservation)\">\n      {{\"vsan.services.enforcereservation.action.notsupported\" | localized}}\n   </clr-control-helper>\n</clr-toggle-container>\n\n<clr-toggle-container *ngIf=\"!isDisabled(reservationConfig.hostFailureReservation)\">\n   <clr-toggle-wrapper>\n      <input id=\"host-rebuild-reservation\"\n             type=\"checkbox\"\n             clrToggle\n             name=\"hostFailureCapacityReservation\"\n             [(ngModel)]=\"hostFailureReservation\"\n             [disabled]=\"!isSupported(reservationConfig.hostFailureReservation) || !vsanOperationReservation\"\n             (change)=\"updateReservation()\"/>\n      <label id=\"host-rebuild-label\">\n         {{\"vsan.services.enforcereservation.hostRebuild.label\" | localized}}\n      </label>\n   </clr-toggle-wrapper>\n   <clr-control-helper *ngIf=\"isSupported(reservationConfig.hostFailureReservation) && !vsanOperationReservation\">\n      {{\"vsan.services.enforcereservation.hostRebuild.disabled.vsanOpSpace.reason\" | localized}}\n   </clr-control-helper>\n   <clr-control-helper *ngIf=\"!isSupported(reservationConfig.hostFailureReservation)\">\n      {{\"vsan.services.enforcereservation.action.notsupported\" | localized}}\n   </clr-control-helper>\n</clr-toggle-container>","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n/**\n * IDs used in external navigation to official documentation\n */\nexport enum DocumentationId {\n   RDMA_DOCUMENTATION = \"GUID-48154235-C557-4074-8BEB-AB9A7BD84A92\",\n   IO_INSIGHT_DOCUMENTATION = \"GUID-3ABCB8EA-1FC7-40A4-B834-C9FEDF02A902\",\n   ENFORCE_RESERVATION_DOCUMENTATION = \"GUID-CD510EAE-1A9F-45D2-BB66-E893C8AAF20A\",\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {VsanChartModule} from \"@component/chart/chart.module\";\nimport {CapacityManagementDialogComponent} from \"./capacity-management-dialog.component\";\nimport {CapacityReservationSettingsComponent} from \"./capacity-reservation-settings.component\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CustomizableThresholdsModule} from \"@component/alert-threshold/customize-alert-threshold.module\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {SpaceEfficiencyService} from \"@service/space-efficiency-service\";\n\nconst routes: Routes = [\n   {\n      path: \"\",\n      component: CapacityManagementDialogComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule,\n      CommonDirectiveModule,\n      ValidationModule,\n      PromptModule,\n      VsanChartModule,\n      CustomizableThresholdsModule,\n      RouterModule.forChild(routes),\n   ],\n   declarations: [\n      CapacityManagementDialogComponent,\n      CapacityReservationSettingsComponent,\n   ],\n   providers: [\n      VsanCapacityService,\n      SpaceEfficiencyService,\n   ],\n})\nexport class CapacityManagementModule {\n}","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {CapacityReservationConfig} from \"@generated/capacity-reservation-config\";\nimport {CapacityReservationUtil} from \"@util/capacity-reservation-util\";\nimport {ReservationStatus} from \"@generated/reservation-status\";\n\n@Component({\n   templateUrl: \"capacity-reservation-settings.html\",\n   styleUrls: [\"capacity-reservation-settings.scss\"],\n   selector: \"vsan-capacity-reservation-settings\",\n})\nexport class CapacityReservationSettingsComponent implements OnInit {\n\n   vsanOperationReservation: boolean;\n   hostFailureReservation: boolean;\n\n   @Input()\n   reservationConfig: CapacityReservationConfig;\n\n   @Output()\n   reservationConfigChange: EventEmitter<CapacityReservationConfig> = new EventEmitter();\n\n   ngOnInit(): void {\n      if (this.isSupported(this.reservationConfig.vsanOperationReservation)) {\n         this.vsanOperationReservation = this.isEnabled(this.reservationConfig.vsanOperationReservation);\n      }\n      if (this.isSupported(this.reservationConfig.hostFailureReservation)) {\n         this.hostFailureReservation = this.isEnabled(this.reservationConfig.hostFailureReservation);\n      }\n   }\n\n   updateReservation(): void {\n      if (!this.vsanOperationReservation) {\n         // Make sure to set host failure reservation to false if vSAN operation space is turned off\n         this.hostFailureReservation = false;\n      }\n      this.reservationConfig.vsanOperationReservation = CapacityReservationUtil.getReservationFromBoolean(\n            this.reservationConfig.vsanOperationReservation, this.vsanOperationReservation);\n      this.reservationConfig.hostFailureReservation = CapacityReservationUtil.getReservationFromBoolean(\n            this.reservationConfig.hostFailureReservation, this.hostFailureReservation);\n      this.reservationConfigChange.emit(this.reservationConfig);\n   }\n\n   isDisabled(reservation: ReservationStatus): boolean {\n      return CapacityReservationUtil.isReservationDisabled(reservation);\n   }\n\n   isSupported(reservation: ReservationStatus): boolean {\n      return CapacityReservationUtil.isReservationSupported(reservation);\n   }\n\n   private isEnabled(reservationConfig: ReservationStatus) {\n      return CapacityReservationUtil.isReservationEnforced(reservationConfig);\n   }\n}\n","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {CapacityAlertThreshold} from \"@component/chart/model/capacity-alert-threshold.model\";\nimport {ChartSectionData, ChartSectionPlotLine} from \"@component/chart/model/chart-section.data\";\nimport {AlertThreshold} from \"@generated/alert-threshold\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {CapacityManagementData} from \"@generated/capacity-management-data\";\nimport {CapacityManagementService} from \"@generated/capacity-management-service\";\nimport {CapacityReservationConfig} from \"@generated/capacity-reservation-config\";\nimport {CapacityReservationOption} from \"@generated/capacity-reservation-option\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {CapacityManagementContext} from \"@navigation/context/capacity-management-context\";\nimport {DocumentationId} from \"@navigation/model/documentation-id\";\nimport {NavigationService} from \"@navigation/navigation.service\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {AlertThresholdsUtil} from \"@util/alert-thresholds-util\";\nimport {CapacityReservationUtil} from \"@util/capacity-reservation-util\";\nimport {DiskMgmtUtil} from \"@util/disk-mgmt.util\";\nimport {Icon} from \"@util/icon\";\nimport {MapUtil} from \"@util/map-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport * as cloneDeep from \"lodash/cloneDeep\";\n\n@Component({\n   templateUrl: \"capacity-management-dialog.html\",\n   selector: \"vsan-capacity-management-dialog\",\n   styleUrls: [\"capacity-management-dialog.scss\"],\n})\nexport class CapacityManagementDialogComponent implements OnInit {\n   Icon: typeof Icon = Icon;\n\n   @ErrorMessage()\n   alertMessage: string;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   clusterName: string;\n   showOldFormatInfo: boolean = false;\n   capacityTotal: number;\n   capacityUsed: number;\n   capacitySectionsData: ChartSectionData[] = [];\n\n   /*\n      We need the used and reservations chart data separately to be able to add/remove the reservations dynamically\n    */\n   legendSectionsData: ChartSectionData[] = [];\n\n   plotLines: ChartSectionPlotLine[] = [];\n   warningThreshold: CapacityAlertThreshold;\n   errorThreshold: CapacityAlertThreshold;\n   /**\n    * The hovered series in capacity bar chart component, used to display the corresponding legend border.\n    */\n   hoveredSeries: any;\n\n   isCapacityCustomizableThresholdsSupportedOnVc: boolean = false;\n\n   selectedDatastoreType: DatastoreType = DatastoreType.VSAN;\n   availableDatastoreTypes: DatastoreType[];\n\n   reservationConfig: CapacityReservationConfig;\n   private contextRef: ManagedObject;\n   private originalReservationConfig: CapacityReservationConfig;\n\n   /*\n    Holds the validation result of the current used capacity compared to the errorThreshold, based on the\n    selected reservation. This is used to disable the apply button as used cannot exceed the error threshold,\n    when configuring the reservation.\n    */\n   isReservationConfigInvalid: boolean;\n\n   isCustomizableThresholdsInvalid: boolean;\n\n   private vSanDatastoreCapacityThresholdsData: Map<CapacityReservationOption, AlertThreshold>;\n   private capacityDataPerDatastore: Map<DatastoreType, CapacityData>;\n   private alertThresholdsPerDatastore: Map<DatastoreType, AlertThreshold>;\n   private originalAlertThresholdsPerDatastore: Map<DatastoreType, AlertThreshold>;\n   private datastoreValidState: Map<DatastoreType, boolean> = new Map<DatastoreType, boolean>();\n   private readonly DATASTORE_TYPE_KEY_GENERATOR = (propKey: string) => propKey as DatastoreType;\n\n   documentationUrl: string;\n\n   constructor(private capacityManagementService: CapacityManagementService,\n         private capacityService: VsanCapacityService,\n         private navigationService: NavigationService,\n         private capabilityProvider: VsanCapabilityProvider) {\n      this.documentationUrl = this.navigationService.getVmwareHelpUrl(NavigationService.MONITORING_URL,\n            DocumentationId.ENFORCE_RESERVATION_DOCUMENTATION);\n   }\n\n   @Loader({\n      srMessage: \"vsan.services.enforcereservation.title\",\n      srMessageType: SrMessageType.PAGE_TITLE,\n   })\n   async ngOnInit(): Promise<void> {\n      const context: CapacityManagementContext = VsanUiUtils.getModalContext();\n      this.clusterName = context.clusterName;\n      this.showOldFormatInfo = context.showOldFormatInfo;\n      this.contextRef = ManagedObject.contextObject;\n\n      let capacityManagementData: CapacityManagementData;\n      if (!context.isCapacityCustomizableThresholdsSupported) {\n         [capacityManagementData, this.isCapacityCustomizableThresholdsSupportedOnVc] = await Promise.all([\n            this.capacityManagementService.getCapacityManagementData(this.contextRef),\n            this.capabilityProvider.isCapacityCustomizableThresholdsSupportedOnVc(this.contextRef),\n         ]);\n      } else {\n         this.isCapacityCustomizableThresholdsSupportedOnVc = context.isCapacityCustomizableThresholdsSupported;\n         capacityManagementData = await this.capacityManagementService.getCapacityManagementData(this.contextRef);\n      }\n      this.parseAvailableDatastoresCapacityData(capacityManagementData);\n\n      if (capacityManagementData.capacityReservationConfig != null) {\n         this.updateCapacityReservationData(capacityManagementData);\n      }\n\n      if (this.isCapacityCustomizableThresholdsSupportedOnVc && capacityManagementData.customizableAlertThresholds) {\n         this.parseCustomizableThresholdsData(capacityManagementData);\n      }\n\n      this.updateCapacityChartData();\n   }\n\n   private parseAvailableDatastoresCapacityData(capacityManagementData: CapacityManagementData): void {\n      this.capacityDataPerDatastore = MapUtil.toMap<DatastoreType, CapacityData>(\n            capacityManagementData.allDatastoresCapacityData, this.DATASTORE_TYPE_KEY_GENERATOR);\n      this.availableDatastoreTypes =\n            DiskMgmtUtil.orderDatastoreTypes(Array.from(this.capacityDataPerDatastore.keys()));\n   }\n\n   private updateCapacityReservationData(capacityManagementData: CapacityManagementData): void {\n      const reservationOptionKeyGenerator: (propKey: string) => CapacityReservationOption\n            = (propKey: string) => CapacityReservationOption[propKey];\n      this.vSanDatastoreCapacityThresholdsData =\n            MapUtil.toMap<CapacityReservationOption, AlertThreshold>(\n                  capacityManagementData.vSanDatastoreCapacityThresholdsData, reservationOptionKeyGenerator);\n      this.reservationConfig = capacityManagementData.capacityReservationConfig;\n      this.originalReservationConfig = VsanUiUtils.deepClone<CapacityReservationConfig>(this.reservationConfig);\n   }\n\n   private parseCustomizableThresholdsData(capacityManagementData: CapacityManagementData): void {\n      this.alertThresholdsPerDatastore = MapUtil.toMap<DatastoreType, AlertThreshold>(\n            capacityManagementData.customizableAlertThresholds, this.DATASTORE_TYPE_KEY_GENERATOR);\n      this.originalAlertThresholdsPerDatastore = cloneDeep(this.alertThresholdsPerDatastore);\n   }\n\n   private getCapacityData(): CapacityData {\n      return this.capacityDataPerDatastore.get(this.selectedDatastoreType);\n   }\n\n   set customizedAlertThreshold(alertThreshold: AlertThreshold) {\n      this.onCustomizedAlertThresholdChange(alertThreshold);\n   }\n\n   get customizedAlertThreshold(): AlertThreshold {\n      if (!this.alertThresholdsPerDatastore) {\n         return null;\n      }\n      return this.alertThresholdsPerDatastore.get(this.selectedDatastoreType);\n   }\n\n   private onCustomizedAlertThresholdChange(alertThreshold: AlertThreshold): void {\n      this.datastoreValidState.set(this.selectedDatastoreType, alertThreshold.isValid);\n      this.isCustomizableThresholdsInvalid = false;\n      this.datastoreValidState.forEach(isValid =>\n            this.isCustomizableThresholdsInvalid = this.isCustomizableThresholdsInvalid || !isValid);\n      if (alertThreshold.isValid) {\n         this.alertThresholdsPerDatastore.set(this.selectedDatastoreType, alertThreshold);\n         this.updateCapacityChartData();\n      }\n   }\n\n   private getDefaultAlertThreshold(): AlertThreshold {\n      return AlertThresholdsUtil.getDefaultThreshold(\n            this.selectedDatastoreType,\n            this.getCapacityData(),\n            this.originalReservationConfig,\n            this.reservationConfig,\n            this.vSanDatastoreCapacityThresholdsData);\n   }\n\n   get isVsanDatastoreSelected(): boolean {\n      return this.selectedDatastoreType === DatastoreType.VSAN;\n   }\n\n   setDatastoreType(datastoreType: DatastoreType): void {\n      this.selectedDatastoreType = datastoreType;\n      this.updateCapacityChartData();\n   }\n\n   getDatastoreTypeLabel(datastoreType: DatastoreType): string {\n      return DiskMgmtUtil.getLocalizedDatastoreType(datastoreType);\n   }\n\n   getDescription(): string {\n      if (!this.reservationConfig) {\n         return \"\";\n      }\n      const hostRebuildDisabled: boolean = CapacityReservationUtil.isReservationDisabled(\n            this.reservationConfig.hostFailureReservation);\n      const descrKey: string = hostRebuildDisabled\n            ? \"vsan.services.enforcereservation.edit.description.operations.hostReserveDisabled\"\n            : \"vsan.services.enforcereservation.edit.description.operations\";\n      return VsanUiUtils.getString(descrKey);\n   }\n\n   get defaultThresholdsDescription(): string {\n      switch (this.selectedDatastoreType) {\n         case DatastoreType.VSAN:\n            return VsanUiUtils.getString(\"vsan.services.customizableThresholds.vsanDatastore.default.description\");\n         case DatastoreType.VSAN_DIRECT:\n            return VsanUiUtils.getString(\n                  \"vsan.services.customizableThresholds.nonVsanDatastore.default.description\", \"vSAN Direct\");\n         case DatastoreType.PMEM:\n            return VsanUiUtils.getString(\n                  \"vsan.services.customizableThresholds.nonVsanDatastore.default.description\", \"PMEM\");\n      }\n   }\n\n   isCustomizedAlertThresholdValid(datastoreType: DatastoreType): boolean {\n      return !this.datastoreValidState.has(datastoreType) ||\n            this.datastoreValidState.get(datastoreType);\n   }\n\n   updateCapacityChartData(): void {\n      const capacityData: CapacityData = this.getCapacityData();\n      this.capacitySectionsData = [];\n      this.legendSectionsData = [];\n      this.capacityTotal = capacityData.totalSpace;\n      this.capacityUsed = capacityData.usedSpace;\n      this.capacitySectionsData.push(...this.capacityService.parseCapacityOverviewDataSections(capacityData));\n      this.legendSectionsData.push(...this.capacitySectionsData);\n      this.updateChartThresholds();\n\n      if (this.isVsanDatastoreSelected && this.reservationConfig) {\n         this.plotLines = this.capacityService.getPlotLines(capacityData);\n         this.parseSlackSpaceCapacity(capacityData);\n      } else {\n         this.plotLines = [];\n      }\n\n      this.isReservationConfigInvalid = this.capacityService.isUsedCapacityExceedingThreshold(\n            capacityData, this.errorThreshold.basedOnTotalSpace);\n      this.alertMessage = this.isReservationConfigInvalid\n            ? VsanUiUtils.getString(\"vsan.services.enforcereservation.edit.invalid.config.error\")\n            : null;\n   }\n\n   /**\n    * This method processes the slack space related capacity and adds its series to the chart.\n    * It is important that the order of adding these series is maintained as otherwise, the chart will not be correct.\n    * Current order of how these must appear: host rebuild reservation > vSAN operation space > transient space.\n    */\n   private parseSlackSpaceCapacity(capacityData: CapacityData): void {\n      if (CapacityReservationUtil.isReservationEnforced(this.reservationConfig.hostFailureReservation)) {\n         const hostReservationChartData: ChartSectionData = this.capacityService.parseHostReservationDataSection(\n               capacityData);\n         if (hostReservationChartData) {\n            this.capacitySectionsData.push(hostReservationChartData);\n         }\n      }\n      if (CapacityReservationUtil.isReservationEnforced(this.reservationConfig.vsanOperationReservation)) {\n         const operationReservationChartData: ChartSectionData = this.capacityService.parseVsanOperationDataSection(\n               capacityData);\n         if (operationReservationChartData) {\n            this.capacitySectionsData.push(operationReservationChartData);\n         }\n      }\n      const transientCapacity: ChartSectionData = this.capacityService.parseTransientOverviewDataSections(\n            capacityData);\n      if (transientCapacity) {\n         this.legendSectionsData.push(transientCapacity);\n         this.capacitySectionsData.push(transientCapacity);\n      }\n   }\n\n   private updateChartThresholds(): void {\n      const capacityData: CapacityData = this.getCapacityData();\n      const customizedAlertThreshold: AlertThreshold = this.customizedAlertThreshold;\n      if (customizedAlertThreshold && customizedAlertThreshold.isEnabled) {\n         this.setCustomizedChartThresholds(capacityData, customizedAlertThreshold);\n      } else {\n         this.setDefaultChartThresholds(capacityData);\n      }\n   }\n\n   private setCustomizedChartThresholds(capacityData: CapacityData, customizedAlertThreshold: AlertThreshold): void {\n      this.warningThreshold = AlertThresholdsUtil.getCustomizedCapacityThreshold(\n            this.selectedDatastoreType,\n            customizedAlertThreshold.warningThreshold,\n            capacityData,\n            this.reservationConfig);\n      this.errorThreshold = AlertThresholdsUtil.getCustomizedCapacityThreshold(\n            this.selectedDatastoreType,\n            customizedAlertThreshold.errorThreshold,\n            capacityData,\n            this.reservationConfig);\n   }\n\n   private setDefaultChartThresholds(capacityData: CapacityData): void {\n      const defaultAlertThreshold: AlertThreshold = this.getDefaultAlertThreshold();\n      this.warningThreshold = AlertThresholdsUtil.getDefaultCapacityThreshold(\n            this.selectedDatastoreType,\n            defaultAlertThreshold.warningThreshold,\n            capacityData,\n            this.reservationConfig);\n      this.errorThreshold = AlertThresholdsUtil.getDefaultCapacityThreshold(\n            this.selectedDatastoreType,\n            defaultAlertThreshold.errorThreshold,\n            capacityData,\n            this.reservationConfig);\n\n      if (this.customizedAlertThreshold?.isDefault) {\n         // If customizable threshold is not set yet,\n         // use the current reservation threshold as customizable threshold by default.\n         this.customizedAlertThreshold.warningThreshold =\n               Math.floor(this.warningThreshold.basedOnTotalSpaceWithoutReservation);\n         this.customizedAlertThreshold.errorThreshold =\n               Math.floor(this.errorThreshold.basedOnTotalSpaceWithoutReservation);\n      }\n   }\n\n   @Loader()\n   async ok(): Promise<void> {\n      if (!this.isConfigChanged()) {\n         VsanUiUtils.closeModalDialog();\n         return;\n      }\n\n      const taskRef: ManagedObject = await this.capacityManagementService.configureCapacityManagement(\n            this.contextRef, this.reservationConfig, this.getChangedAlertThresholds());\n      VsanUiUtils.closeModalDialog(taskRef);\n   }\n\n   private isConfigChanged = (): boolean => {\n      let isReservationConfigChanged: boolean = false;\n      if (this.reservationConfig && this.originalReservationConfig) {\n         isReservationConfigChanged =\n               this.originalReservationConfig.vsanOperationReservation !==\n               this.reservationConfig.vsanOperationReservation\n               || this.originalReservationConfig.hostFailureReservation !==\n               this.reservationConfig.hostFailureReservation;\n      }\n\n      let isCustomizableThresholdsChanged: boolean = false;\n      if (this.isCapacityCustomizableThresholdsSupportedOnVc) {\n         isCustomizableThresholdsChanged = this.getChangedAlertThresholds().length > 0;\n      }\n\n      return isReservationConfigChanged || isCustomizableThresholdsChanged;\n   };\n\n   private getChangedAlertThresholds(): AlertThreshold[] {\n      if (!this.isCapacityCustomizableThresholdsSupportedOnVc) {\n         return [];\n      }\n      const changedAlertThresholds: AlertThreshold[] = [];\n      for (const datastoreType of this.availableDatastoreTypes) {\n         const changedThreshold: AlertThreshold = this.alertThresholdsPerDatastore.get(datastoreType);\n         const originalThreshold: AlertThreshold = this.originalAlertThresholdsPerDatastore.get(datastoreType);\n\n         if (!changedThreshold.isEnabled) {\n            // If the customizable threshold is disabled, then revert to the original values.\n            changedThreshold.warningThreshold = originalThreshold.warningThreshold;\n            changedThreshold.errorThreshold = originalThreshold.errorThreshold;\n         }\n\n         if (!AlertThresholdsUtil.areEqual(changedThreshold, originalThreshold)) {\n            changedAlertThresholds.push(changedThreshold);\n         }\n      }\n\n      return changedAlertThresholds;\n   }\n}\n","<!--Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-edit-prompt\n      [title]=\"'vsan.services.enforcereservation.title' | localized\"\n      [subtitle]=\"clusterName\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"loading || isReservationConfigInvalid || isCustomizableThresholdsInvalid\"\n      (onConfirm)=\"ok()\">\n   <div class=\"dialog-container\" *ngIf=\"!loading\">\n      <clr-tabs *ngIf=\"availableDatastoreTypes.length > 1\">\n         <clr-tab *ngFor=\"let datastoreType of availableDatastoreTypes\">\n            <button id=\"{{'datastore-type-' + datastoreType}}\"\n                    clrTabLink\n                    (click)=\"setDatastoreType(datastoreType)\">\n               <span>\n                  {{getDatastoreTypeLabel(datastoreType)}}\n               </span>\n               <clr-icon *ngIf=\"!isCustomizedAlertThresholdValid(datastoreType)\"\n                         [attr.shape]=\"Icon.CLR_ERROR_STANDARD_ICON_SHAPE\"\n                         class=\"is-error\">\n               </clr-icon>\n            </button>\n            <clr-tab-content *clrIfActive=\"datastoreType === selectedDatastoreType\">\n               <ng-container *ngTemplateOutlet=\"datastoreSections\"></ng-container>\n            </clr-tab-content>\n         </clr-tab>\n      </clr-tabs>\n      <vsan-validation *ngIf=\"alertMessage\"\n                       [alert]=\"alertMessage\"\n                       [allowClose]=\"false\">\n      </vsan-validation>\n      <vsan-validation *ngIf=\"showOldFormatInfo && isVsanDatastoreSelected\"\n                       [alertType]=\"'info'\"\n                       [alert]=\"'vsan.services.enforcereservation.edit.oldobjects.text' | localized\"\n                       [isSmall]=\"true\"\n                       [allowClose]=\"false\">\n      </vsan-validation>\n\n      <ng-container *ngIf=\"availableDatastoreTypes.length === 1\">\n         <ng-container *ngTemplateOutlet=\"datastoreSections\"></ng-container>\n      </ng-container>\n\n      <ng-template #datastoreSections>\n         <div id=\"datastore-sections-container\">\n            <div *ngIf=\"isVsanDatastoreSelected\">\n               <span>{{getDescription()}}</span>\n               <a id=\"learn-more\"\n                  [external-link]=\"'vsan.services.enforcereservation.link' | localized\"\n                  [url]=\"documentationUrl\">\n               </a>\n            </div>\n            <ng-container *ngIf=\"capacityTotal > 0\">\n               <!-- only show the capacity chart if there are any disks claimed, e.g. capacity > 0 -->\n               <span *ngIf=\"isVsanDatastoreSelected\">\n                  {{\"vsan.services.enforcereservation.edit.description.part2\" | localized}}\n               </span>\n               <vsan-capacity-bar-chart id=\"capacity-overview-bar-chart\"\n                                        [sections]=\"capacitySectionsData\"\n                                        [total]=\"capacityTotal\"\n                                        [plotLines]=\"plotLines\"\n                                        [showAlertThresholds]=\"isCapacityCustomizableThresholdsSupportedOnVc\"\n                                        (hoverBarChart)=\"hoveredSeries=$event\"\n                                        [warningThreshold]=\"warningThreshold\"\n                                        [errorThreshold]=\"errorThreshold\">\n               </vsan-capacity-bar-chart>\n               <vsan-capacity-legend id=\"capacity-legend\"\n                                     [chartSectionData]=\"legendSectionsData\"\n                                     [used]=\"capacityUsed\"\n                                     [total]=\"capacityTotal\"\n                                     [hoveredSeries]=\"hoveredSeries\">\n               </vsan-capacity-legend>\n            </ng-container>\n         </div>\n         <form class=\"capacity-management-controls\" clrForm>\n            <vsan-capacity-reservation-settings\n                  *ngIf=\"isVsanDatastoreSelected && reservationConfig\"\n                  [(reservationConfig)]=\"reservationConfig\"\n                  (reservationConfigChange)=\"updateCapacityChartData()\">\n            </vsan-capacity-reservation-settings>\n            <vsan-customize-alert-threshold\n                  *ngIf=\"isCapacityCustomizableThresholdsSupportedOnVc && customizedAlertThreshold\"\n                  [defaultThresholdsDescription]=\"defaultThresholdsDescription\"\n                  [(alertThreshold)]=\"customizedAlertThreshold\">\n            </vsan-customize-alert-threshold>\n         </form>\n      </ng-template>\n   </div>\n</vsan-edit-prompt>\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {Icon} from \"@util/icon\";\nimport {AlertThreshold} from \"@generated/alert-threshold\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"customize-alert-threshold.html\",\n   styleUrls: [\"customize-alert-threshold.scss\"],\n   selector: \"vsan-customize-alert-threshold\",\n})\nexport class CustomizeAlertThresholdsComponent {\n   readonly ALERT_THRESHOLD_MIN_VALUE: number = 1;\n   readonly ALERT_THRESHOLD_MAX_VALUE: number = 100;\n   readonly WARNING_THRESHOLD_CONTROL_NAME: string = \"warning-threshold\";\n   readonly ERROR_THRESHOLD_CONTROL_NAME: string = \"error-threshold\";\n   readonly ERRORS: any = {\n      [this.WARNING_THRESHOLD_CONTROL_NAME]: \"\",\n      [this.ERROR_THRESHOLD_CONTROL_NAME]: \"\",\n   };\n\n   Icon: typeof Icon = Icon;\n\n   @Input()\n   defaultThresholdsDescription: string;\n\n   _alertThreshold: AlertThreshold;\n\n   @Input()\n   set alertThreshold(value: AlertThreshold) {\n      this._alertThreshold = value;\n      this.onThresholdChange();\n   }\n\n   get alertThreshold(): AlertThreshold {\n      return this._alertThreshold;\n   }\n\n   @Output()\n   alertThresholdChange: EventEmitter<AlertThreshold> = new EventEmitter();\n\n   toggle(isCustomizeAlertsSelected: boolean): void {\n      this.alertThreshold.isEnabled = isCustomizeAlertsSelected;\n      this.onThresholdChange();\n   }\n\n   onThresholdChange(): void {\n      if (this.alertThreshold.isEnabled) {\n         this.validateAll();\n      }\n      this.alertThreshold.isValid = !this.alertThreshold.isEnabled || !this.haveErrors;\n      this.alertThresholdChange.emit(this.alertThreshold);\n   }\n\n   private get haveErrors(): boolean {\n      return !!this.ERRORS[this.WARNING_THRESHOLD_CONTROL_NAME] || !!this.ERRORS[this.ERROR_THRESHOLD_CONTROL_NAME];\n   }\n\n   private validateAll(): void {\n      this.validate(this.WARNING_THRESHOLD_CONTROL_NAME, this.alertThreshold.warningThreshold);\n      this.validate(this.ERROR_THRESHOLD_CONTROL_NAME, this.alertThreshold.errorThreshold);\n   }\n\n   private validate(validatedControlName: string, value: number): void {\n      this.ERRORS[validatedControlName] = null;\n\n      if (VsanUiUtils.isDecimal(value)) {\n         this.ERRORS[validatedControlName] =\n               VsanUiUtils.getString(\"vsan.common.setThreshold.input.floatingPointNumber.error\");\n      } else if (this.isThresholdOutOfRange(value)) {\n         this.ERRORS[validatedControlName] = this.thresholdRangeErrorMessage;\n      } else if (this.areThresholdsOverlapping()) {\n         this.ERRORS[this.WARNING_THRESHOLD_CONTROL_NAME] = this.thresholdsOverlappingErrorMessage;\n      }\n   }\n\n   private isThresholdOutOfRange(value: number): boolean {\n      return value == null || value < this.ALERT_THRESHOLD_MIN_VALUE || value > this.ALERT_THRESHOLD_MAX_VALUE;\n   }\n\n   private areThresholdsOverlapping(): boolean {\n      return this.alertThreshold.warningThreshold > this.alertThreshold.errorThreshold;\n   }\n\n   private get thresholdRangeErrorMessage(): string {\n      return VsanUiUtils.getString(\"vsan.services.customizableThresholds.input.range.error\",\n          this.ALERT_THRESHOLD_MIN_VALUE, this.ALERT_THRESHOLD_MAX_VALUE);\n   }\n\n   private get thresholdsOverlappingErrorMessage(): string {\n      return VsanUiUtils.getString(\"vsan.services.customizableThresholds.input.order.error\");\n   }\n}\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {CustomizeAlertThresholdsComponent} from \"./customize-alert-threshold.component\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule,\n      CommonDirectiveModule,\n   ],\n   declarations: [\n      CustomizeAlertThresholdsComponent,\n   ],\n   exports: [\n      CustomizeAlertThresholdsComponent,\n   ],\n})\nexport class CustomizableThresholdsModule {\n}\n","<!-- Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div>{{defaultThresholdsDescription}}</div>\n<div class=\"icon-name-container\">\n   <clr-checkbox-wrapper>\n      <input #customizeAlerts\n             type=\"checkbox\"\n             clrCheckbox\n             ngModel\n             [ngModel]=\"alertThreshold.isEnabled\"\n             (change)=\"toggle(customizeAlerts.checked)\"/>\n      <label>\n         {{\"vsan.services.customizableThresholds.action.label\" | localized}}\n      </label>\n   </clr-checkbox-wrapper>\n   <clr-signpost id=\"customizable-thresholds-help\"\n                 [vsan-signpost-title]=\"'vsan.services.customizableThresholds.signpost.label' | localized\">\n      <clr-signpost-content *clrIfOpen clrPosition=\"top-right\">\n         {{\"vsan.services.customizableThresholds.action.description\" | localized}}\n      </clr-signpost-content>\n   </clr-signpost>\n</div>\n<div id=\"thresholds-container\" class=\"indent clr-form clr-form-horizontal\" *ngIf=\"alertThreshold.isEnabled\">\n   <div class=\"clr-form-control\">\n      <span>\n         <clr-icon id=\"warning-threshold\"\n                   aria-hidden=\"true\"\n                   class=\"is-solid is-warning\"\n                   [attr.shape]=\"Icon.CLR_WARN_STANDARD_ICON_SHAPE\"></clr-icon>\n         <span class=\"threshold-label\">{{\"vsan.services.customizableThresholds.input.label.warning\" | localized}}</span>\n      </span>\n      <div class=\"clr-control-container warning-threshold-container\"\n           [class.clr-error]=\"ERRORS[WARNING_THRESHOLD_CONTROL_NAME]\">\n         <div class=\"clr-row clr-input-wrapper\">\n            <label>\n               <input id=\"{{WARNING_THRESHOLD_CONTROL_NAME}}\"\n                      name=\"{{WARNING_THRESHOLD_CONTROL_NAME}}\"\n                      type=\"number\"\n                      [min]=\"ALERT_THRESHOLD_MIN_VALUE\"\n                      [max]=\"ALERT_THRESHOLD_MAX_VALUE\"\n                      class=\"clr-input warning-threshold-input\"\n                      [(ngModel)]=\"alertThreshold.warningThreshold\"\n                      (change)=\"onThresholdChange()\"\n                      aria-describedby=\"warning-threshold-error\">\n               <clr-icon class=\"clr-validate-icon\"\n                         shape=\"exclamation-circle\"\n                         title=\"{{'vsan.common.srMessage.error' | localized}}\"\n                         [attr.aria-label]=\"'vsan.common.srMessage.error' | localized\">\n               </clr-icon>\n            </label>\n         </div>\n         <span id=\"warning-threshold-error\" class=\"clr-subtext\" *ngIf=\"ERRORS[WARNING_THRESHOLD_CONTROL_NAME]\">\n             {{ERRORS[WARNING_THRESHOLD_CONTROL_NAME]}}\n         </span>\n         <span id=\"warning-threshold-helper-text\" class=\"clr-subtext\" *ngIf=\"!ERRORS[WARNING_THRESHOLD_CONTROL_NAME]\">\n             {{\"vsan.services.customizableThresholds.input.helperText.warning\" | localized}}\n         </span>\n      </div>\n   </div>\n\n   <div class=\"clr-form-control\">\n      <span>\n         <clr-icon id=\"error-threshold\"\n                   aria-hidden=\"true\"\n                   class=\"is-solid is-error\"\n                   [attr.shape]=\"Icon.CLR_ERROR_STANDARD_ICON_SHAPE\"></clr-icon>\n         <span class=\"threshold-label\">{{\"vsan.services.customizableThresholds.input.label.error\" | localized}}</span>\n      </span>\n      <div class=\"clr-control-container error-threshold-container\"\n           [class.clr-error]=\"ERRORS[ERROR_THRESHOLD_CONTROL_NAME]\">\n         <div class=\"clr-row clr-input-wrapper\">\n            <label>\n               <input id=\"{{ERROR_THRESHOLD_CONTROL_NAME}}\"\n                      name=\"{{ERROR_THRESHOLD_CONTROL_NAME}}\"\n                      type=\"number\"\n                      [min]=\"ALERT_THRESHOLD_MIN_VALUE\"\n                      [max]=\"ALERT_THRESHOLD_MAX_VALUE\"\n                      class=\"clr-input error-threshold-input\"\n                      [(ngModel)]=\"alertThreshold.errorThreshold\"\n                      (change)=\"onThresholdChange()\"\n                      aria-describedby=\"error-threshold-error\">\n               <clr-icon class=\"clr-validate-icon\"\n                         shape=\"exclamation-circle\"\n                         title=\"{{'vsan.common.srMessage.error' | localized}}\"\n                         [attr.aria-label]=\"'vsan.common.srMessage.error' | localized\">\n               </clr-icon>\n            </label>\n         </div>\n         <span id=\"error-threshold-error\" class=\"clr-subtext\" *ngIf=\"ERRORS[ERROR_THRESHOLD_CONTROL_NAME]\">\n           {{ERRORS[ERROR_THRESHOLD_CONTROL_NAME]}}\n         </span>\n         <span id=\"error-threshold-helper-text\" class=\"clr-subtext\" *ngIf=\"!ERRORS[ERROR_THRESHOLD_CONTROL_NAME]\">\n           {{\"vsan.services.customizableThresholds.input.helperText.error\" | localized}}\n         </span>\n      </div>\n   </div>\n</div>\n"],"sourceRoot":"webpack:///"}