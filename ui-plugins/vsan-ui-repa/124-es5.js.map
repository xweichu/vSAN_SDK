{"version":3,"sources":["webpack:///src/app/vsan/vm/remote-objects-table/remote-objects-table.component.ts","webpack:///src/app/vsan/common/component/datagrid/comparator/pipe-comparator.ts","webpack:///src/app/vsan/common/service/flow/error-handler.decorator.ts","webpack:///src/app/vsan/vm/remote-objects-table/remote-objects-table.html","webpack:///src/app/vsan/vm/vm-disk-placement.module.ts","webpack:///src/app/vsan/common/component/datagrid/comparator/base-comparator.ts","webpack:///src/app/vsan/common/pipe/virtual-objects/health-state-label.pipe.ts","webpack:///src/app/vsan/vm/vm-disk-placement.component.ts","webpack:///src/app/vsan/common/component/datagrid/filter/object-filter.ts","webpack:///src/app/vsan/vm/remote-objects-table/remote-object.data.ts","webpack:///src/app/vsan/common/pipe/virtual-objects/health-state-icon-shape.pipe.ts","webpack:///src/app/vsan/vm/vm-disk-placement.html","webpack:///src/app/vsan/common/pipe/virtual-objects/health-state-icon-class.pipe.ts"],"names":["RemoteObjectsTableComponent","navigationService","Icon","nameComparator","accessibilityComparator","policyComparator","uuidComparator","nameFilter","accessibilityFilter","policyFilter","uuidFilter","policy","navigateToVmStoragePoliciesView","remoteObjects","length","getString","PipeComparator","pipe","dataField","a","b","transform","stringify","toLowerCase","localeCompare","ErrorHandler","props","targetClass","functionName","descriptor","name","errorHandler","value","routes","path","component","VmDiskPlacementModule","BaseComparator","data","field","Error","compareValue","VirtualObjectHealthStateLabelPipe","state","getVsanObjectHealthStatusText","VmDiskPlacementComponent","csdVmService","csdObjectService","virtualObjectsService","diskPlacementProvider","capabilityProvider","permissionService","IllustratedMessageType","vmObjectsModel","hasStorageClusterPermissions","objectIdentitiesSupported","hasPoliciesPrivilege","vmRef","contextObject","fetch","loadBasicData","isStretchedVm","isRemoteVm","objectHealth","Promise","all","getCsdObjectHealth","computeCluster","moRef","vmObjectUuids","listVmVirtualObjects","children","map","vmObject","displayName","iconId","storageCluster","uid","storagePolicy","childrenVmObjectsModel","getChildrenVmObjectsModel","getVmCsdConfig","vmCsdConfig","hasStorageClusterReadAccess","getIsObjectIdentitiesSupportedOnCluster","getVmObjectUuids","hasVcPermissions","READ_POLICIES","storageClusters","isRemote","isEmpty","result","forEach","objectModel","push","child","navigateTo","LAST_VISITED_PAGE","e","error","srMessage","ObjectFilter","RemoteObjectData","icon","healthState","uuid","VirtualObjectHealthStateIconShapePipe","getVsanObjectHealthStatusIconShape","VirtualObjectHealthStateIconClassPipe","getVsanObjectHealthStatusIconClass"],"mappings":"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","file":"124-es5.js","sourcesContent":["/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {PipeComparator} from \"@component/datagrid/comparator/pipe-comparator\";\nimport {StringComparator} from \"@component/datagrid/comparator/string-comparator\";\nimport {ObjectFilter} from \"@component/datagrid/filter/object-filter\";\nimport {PipeFilter} from \"@component/datagrid/filter/pipe-filter\";\nimport {NavigationService} from \"@navigation/navigation.service\";\nimport {VirtualObjectHealthStateLabelPipe} from \"@pipe/virtual-objects/health-state-label.pipe\";\nimport {Icon} from \"@util/icon\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {RemoteObjectData} from \"./remote-object.data\";\n\n@Component({\n   templateUrl: \"remote-objects-table.html\",\n   styleUrls: [\"remote-objects-table.scss\"],\n   selector: \"vsan-remote-objects-table\",\n})\nexport class RemoteObjectsTableComponent {\n\n   Icon: typeof Icon = Icon;\n\n   @Input()\n   remoteObjects: RemoteObjectData[];\n\n   @Input()\n   showPoliciesColumn: boolean;\n\n   nameComparator: StringComparator<RemoteObjectData> = new StringComparator<RemoteObjectData>(\"name\");\n   accessibilityComparator: PipeComparator<RemoteObjectData> =\n         new PipeComparator<RemoteObjectData>(new VirtualObjectHealthStateLabelPipe(), \"healthState\");\n   policyComparator: StringComparator<RemoteObjectData> = new StringComparator<RemoteObjectData>(\"policy\");\n   uuidComparator: StringComparator<RemoteObjectData> = new StringComparator<RemoteObjectData>(\"uuid\");\n\n   nameFilter: ObjectFilter<RemoteObjectData> = new ObjectFilter<RemoteObjectData>(\"name\");\n   accessibilityFilter: PipeFilter<RemoteObjectData> =\n         new PipeFilter(new VirtualObjectHealthStateLabelPipe(), \"healthState\");\n   policyFilter: ObjectFilter<RemoteObjectData> = new ObjectFilter<RemoteObjectData>(\"policy\");\n   uuidFilter: ObjectFilter<RemoteObjectData> = new ObjectFilter<RemoteObjectData>(\"uuid\");\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   navigateToPolicy(policy: string): void {\n      this.navigationService.navigateToVmStoragePoliciesView(policy);\n   }\n\n   get footerLabel(): string {\n      if (!this.remoteObjects || !this.remoteObjects.length) {\n         return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n\n      if (this.remoteObjects.length === 1) {\n         return VsanUiUtils.getString(\"vsan.vm.monitor.diskPlacement.remoteObjectsTable.footer.singular\");\n      }\n\n      return VsanUiUtils\n            .getString(\"vsan.vm.monitor.diskPlacement.remoteObjectsTable.footer.plural\", this.remoteObjects.length);\n   }\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {PipeTransform} from \"@angular/core\";\nimport {BaseComparator} from \"@component/datagrid/comparator/base-comparator\";\n\n/**\n * Extends BaseComparator by allowing the consumer to provide a pipe that will be used in the filtering process.\n */\nexport class PipeComparator<T> extends BaseComparator<T> {\n\n   constructor(private pipe: PipeTransform, private dataField: string = null) {\n      super();\n   }\n\n   protected compareValue(a: T, b: T): number {\n      return this.pipe.transform(this.stringify(a, this.dataField)).toLowerCase()\n            .localeCompare(this.pipe.transform(this.stringify(b, this.dataField)).toLowerCase());\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {LoadingFlowWrapper} from \"@service/flow/loading-flow-wrapper.data\";\n\n/**\n * This property decorator is supposed to be used along with the @Loader decorator.\n * If an exception is thrown during the execution of the method decorated with @Loader\n * the ErrorHandler method will be invoked. You can define as many ErrorHandlers as you want,\n * but they must be with different names. The name can be provided as input to the decorator.\n * If a name is set to the ErrorHandler it will handle only the errors thrown by Loader functions\n * with the same name. If no name is passed to the ErrorHandler, it will handle only the errors\n * from Loader functions with no name.\n *\n * <pre>\n * // Example 1:\n * @Loader()\n * loadSyncData(): any {\n *    throw new Error(\"Failed to load sync data\");\n * }\n *\n * @ErrorHandler()\n * handleError(err: any) {\n *    // handle the error.\n * }\n *...\n *\n * // Example 2\n *\n * @Loader({name: \"data-loading-flow})\n * async loadAsyncData(): Promise<any> {\n *    return Promise.reject(\"Failed to load async data\");\n * }\n *\n * @ErrorHandler({name: \"data-loading-flow})\n * handleError(err: any) {\n *    // handle the error.\n * }\n * ...\n * </pre>\n */\nexport function ErrorHandler(props?: ErrorHandlerProperties): MethodDecorator {\n   props = props || {};\n   return (targetClass: any, functionName: string, descriptor: PropertyDescriptor): void => {\n      (new LoadingFlowWrapper(targetClass, props.name)).errorHandler = descriptor.value;\n   };\n}\n\n/**\n * Properties of the ErrorHandler decorator.\n */\nexport interface ErrorHandlerProperties {\n\n   /**\n    * Indicates which @Loder should be handled by this @ErrorHandler\n    */\n   name?: string;\n}\n","<!--Copyright 2020 VMware, Inc. All rights reserved. &#45;&#45; VMware Confidential-->\n<clr-datagrid [clrDgLoading]=\"!remoteObjects\">\n   <clr-dg-column [clrDgSortBy]=\"nameComparator\">\n      {{\"vsan.vm.monitor.diskPlacement.remoteObjectsTable.col.name\"|localized}}\n      <clr-dg-string-filter [clrDgStringFilter]=\"nameFilter\"></clr-dg-string-filter>\n   </clr-dg-column>\n   <clr-dg-column [clrDgSortBy]=\"accessibilityComparator\">\n      {{\"vsan.vm.monitor.diskPlacement.remoteObjectsTable.col.accessibility\"|localized}}\n      <clr-dg-string-filter [clrDgStringFilter]=\"accessibilityFilter\"></clr-dg-string-filter>\n   </clr-dg-column>\n   <clr-dg-column *ngIf=\"showPoliciesColumn\" [clrDgSortBy]=\"policyComparator\">\n      {{\"vsan.vm.monitor.diskPlacement.remoteObjectsTable.col.policy\"|localized}}\n      <clr-dg-string-filter [clrDgStringFilter]=\"policyFilter\"></clr-dg-string-filter>\n   </clr-dg-column>\n   <clr-dg-column [clrDgSortBy]=\"uuidComparator\">\n      {{\"vsan.vm.monitor.diskPlacement.remoteObjectsTable.col.uuid\"|localized}}\n      <clr-dg-string-filter [clrDgStringFilter]=\"uuidFilter\"></clr-dg-string-filter>\n   </clr-dg-column>\n\n   <clr-dg-row *clrDgItems=\"let obj of remoteObjects\"\n               [clrDgItem]=\"obj\">\n\n      <clr-dg-cell vsan-show-title>\n         <clr-icon *ngIf=\"obj.icon\" [attr.shape]=\"obj.icon\"></clr-icon>\n         <span>{{obj.name}}</span>\n      </clr-dg-cell>\n\n      <clr-dg-cell>\n         <vsan-icon-item [label]=\"obj.healthState | healthStateLabel\"\n                         [iconClass]=\"obj.healthState | healthStateIconClass\"\n                         [shape]=\"obj.healthState | healthStateIconShape\">\n         </vsan-icon-item>\n      </clr-dg-cell>\n\n      <clr-dg-cell *ngIf=\"showPoliciesColumn\" vsan-show-title>\n         <ng-container *ngIf=\"obj.policy\">\n            <clr-icon [attr.shape]=\"Icon.VM_STORAGE_PROFILE_IMAGE\" aria-hidden=\"true\"></clr-icon>\n            <a href=\"javascript://\" (click)=\"navigateToPolicy(obj.policy)\">\n               {{obj.policy}}\n            </a>\n         </ng-container>\n      </clr-dg-cell>\n\n      <clr-dg-cell vsan-show-title>{{obj.uuid}}</clr-dg-cell>\n   </clr-dg-row>\n\n   <clr-dg-footer>{{footerLabel}}</clr-dg-footer>\n</clr-datagrid>\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {VsanCommonModule} from \"app/vsan/common/vsan-common.module\";\nimport {VmDiskPlacementComponent} from \"./vm-disk-placement.component\";\nimport {PlacementDetailsModule} from \"@component/placement-details/placement-details.module\";\nimport {RemoteObjectsTableComponent} from \"./remote-objects-table/remote-objects-table.component\";\nimport {IllustratedMessageModule} from \"@component/illustrated-message/illustrated-message.module\";\n\nconst routes: Routes = [\n   {\n      path: \"\",\n      component: VmDiskPlacementComponent\n   }\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      VsanCommonModule,\n      PlacementDetailsModule,\n      IllustratedMessageModule,\n      RouterModule.forChild(routes)\n   ],\n   declarations: [\n      RemoteObjectsTableComponent,\n      VmDiskPlacementComponent\n   ],\n})\nexport class VmDiskPlacementModule {\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ClrDatagridComparatorInterface} from \"@clr/angular\";\nimport { VsanUiUtils } from '@util/vsan-util';\n\n/**\n * Basic comparator, the child component should override the compareValue method\n * We don't expect the compared value to be json format\n */\nexport class BaseComparator<T> implements ClrDatagridComparatorInterface<T> {\n   protected stringify(data: T, field: string): string {\n      return VsanUiUtils.stringify(data, field);\n   }\n\n   protected compareValue(a: T, b: T): number {\n      throw new Error(\"Method not implemented\");\n   }\n\n   compare(a: T, b: T): number {\n      return this.compareValue(a, b);\n   }\n}","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {BaseHealthState, VsanHealthUtil} from \"@util/vsan-health-util\";\n\n@Pipe({\n   name: \"healthStateLabel\",\n})\nexport class VirtualObjectHealthStateLabelPipe implements PipeTransform {\n   transform(state: BaseHealthState | string): string {\n      return VsanHealthUtil.getVsanObjectHealthStatusText(state);\n   }\n}","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterViewInit, Component} from \"@angular/core\";\nimport {IllustratedMessageType} from \"@component/illustrated-message/illustrated-message.component\";\nimport {CsdObjectService} from \"@generated/csd-object-service\";\nimport {CsdVmService} from \"@generated/csd-vm-service\";\nimport {InventoryNode} from \"@generated/inventory-node\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {VirtualObjectsService} from \"@generated/virtual-objects-service\";\nimport {VmCsdConfig} from \"@generated/vm-csd-config\";\nimport {VmDiskPlacementProvider} from \"@generated/vm-disk-placement-provider\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\nimport {Logger} from \"@util/logger\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {RemoteObjectData} from \"./remote-objects-table/remote-object.data\";\n\n@Component({\n   templateUrl: \"vm-disk-placement.html\",\n   styleUrls: [\"vm-disk-placement.scss\"],\n   selector: \"vsan-vm-disk-placement\",\n})\nexport class VmDiskPlacementComponent implements AfterViewInit {\n   IllustratedMessageType: typeof IllustratedMessageType = IllustratedMessageType;\n   vmObjectsModel: VirtualObjectModel[] = [];\n   remoteObjects: RemoteObjectData[];\n   hasStorageClusterPermissions: boolean = true;\n   error: boolean;\n   vmCsdConfig: VmCsdConfig;\n   vmRef: ManagedObject;\n   vmObjectUuids: string[];\n   objectIdentitiesSupported: boolean = false;\n   hasPoliciesPrivilege: boolean = false;\n   childrenVmObjectsModel: VirtualObjectModel[];\n\n   @LoadingIndicator({name: \"basic-data-loader\"})\n   loadingBasicData: boolean;\n   @LoadingIndicator()\n   loadingObjects: boolean;\n\n   constructor(private csdVmService: CsdVmService,\n         private csdObjectService: CsdObjectService,\n         private virtualObjectsService: VirtualObjectsService,\n         private diskPlacementProvider: VmDiskPlacementProvider,\n         private navigationService: NavigationService,\n         private capabilityProvider: VsanCapabilityProvider,\n         private permissionService: PermissionService) {\n   }\n\n   async ngAfterViewInit(): Promise<void> {\n      this.vmRef = ManagedObject.contextObject;\n      await this.fetch();\n   }\n\n   @RefreshHandler\n   @Loader({srMessage: \"vsan.vm.monitor.diskPlacement\"})\n   async fetch(): Promise<void> {\n      this.remoteObjects = null;\n\n      await this.loadBasicData();\n\n      if (this.isStretchedVm || !this.objectIdentitiesSupported || !this.hasStorageClusterPermissions) {\n         return;\n      }\n\n      if (this.isRemoteVm) {\n         let objectHealth: any = null;\n         [objectHealth, this.vmObjectsModel] = await Promise.all([\n            this.csdObjectService.getCsdObjectHealth(this.computeCluster.moRef, this.vmObjectUuids),\n            this.listVmVirtualObjects(),\n         ]);\n\n         // It is just a single VM so we can use the first item from the list\n         this.remoteObjects = this.vmObjectsModel[0].children.map(vmObject => new RemoteObjectData(vmObject.displayName,\n                  vmObject.iconId,\n                  this.storageCluster,\n                  objectHealth[vmObject.uid],\n                  vmObject.storagePolicy?.name,\n                  vmObject.uid));\n      } else {\n         this.vmObjectsModel = await this.listVmVirtualObjects();\n      }\n      this.childrenVmObjectsModel = this.getChildrenVmObjectsModel();\n   }\n\n   @Loader({name: \"basic-data-loader\"})\n   private async loadBasicData(): Promise<void> {\n      this.vmCsdConfig = await this.csdVmService.getVmCsdConfig(this.vmRef);\n\n      this.hasStorageClusterPermissions = this.vmCsdConfig.hasStorageClusterReadAccess;\n\n      [this.objectIdentitiesSupported, this.vmObjectUuids, this.hasPoliciesPrivilege] = await Promise.all([\n         this.capabilityProvider.getIsObjectIdentitiesSupportedOnCluster(this.storageCluster.moRef),\n         this.diskPlacementProvider.getVmObjectUuids(this.vmRef),\n         this.permissionService.hasVcPermissions(this.vmRef, [Privileges.READ_POLICIES()]),\n      ]);\n   }\n\n   private async listVmVirtualObjects(): Promise<VirtualObjectModel[]> {\n      return this.virtualObjectsService.listVmVirtualObjects(\n            this.storageCluster.moRef,\n            this.vmRef,\n            this.vmObjectUuids);\n   }\n\n   get computeCluster(): InventoryNode {\n      return this.vmCsdConfig ? this.vmCsdConfig.computeCluster : null;\n   }\n\n   get storageCluster(): InventoryNode {\n      return this.vmCsdConfig && this.vmCsdConfig.storageClusters ? this.vmCsdConfig.storageClusters[0] : null;\n   }\n\n   get isRemoteVm(): boolean {\n      return !!this.vmCsdConfig?.isRemote;\n   }\n\n   get isStretchedVm(): boolean {\n      return this.vmCsdConfig\n            && this.vmCsdConfig.storageClusters\n            && this.vmCsdConfig.storageClusters.length !== 1;\n   }\n\n   private getChildrenVmObjectsModel(): VirtualObjectModel[] {\n      if (VsanUiUtils.isEmpty(this.vmObjectsModel)) {\n         return [];\n      }\n      const result: VirtualObjectModel[] = [];\n      this.vmObjectsModel.forEach(objectModel => {\n         if (objectModel.uid) {\n            result.push(objectModel);\n         }\n         if (objectModel.children) {\n            objectModel.children.forEach(child => {\n               if (child.uid) {\n                  result.push(child);\n               }\n            });\n         }\n      });\n      return result;\n   }\n\n   navigateToCluster(): void {\n      this.navigationService.navigateTo(PlatformExtension.LAST_VISITED_PAGE, this.storageCluster.moRef);\n   }\n\n   @ErrorHandler()\n   private handleDataError(e: string): void {\n      this.error = true;\n   }\n}\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {BaseFilter} from \"./base-filter\";\nimport {VsanUiUtils} from '@util/vsan-util';\n\n/**\n * Extends BaseFilter by allowing the consumer to filter the hierarchical data field.\n * It tries to find the final string value of the data field by visiting the attribute hirarchy.\n */\nexport class ObjectFilter<T> extends BaseFilter<T> {\n   constructor(protected dataField: string){\n      super();\n   }\n\n   protected stringify(data: T): string {\n      return VsanUiUtils.stringify(data, this.dataField);\n   }\n}\n","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {InventoryNode} from \"@generated/inventory-node\";\nimport {VsanObjectHealthState} from \"@generated/vsan-object-health-state\";\n\n/**\n * Model holding the data needed for the RemoteObjectTable component\n */\nexport class RemoteObjectData {\n\n   constructor(public name: string,\n         public icon: string,\n         public storageCluster: InventoryNode,\n         public healthState: VsanObjectHealthState,\n         public policy: string,\n         public uuid: string) {\n   }\n}\n","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {VsanHealthUtil} from \"@util/vsan-health-util\";\nimport {VsanObjectHealthState} from \"@generated/vsan-object-health-state\";\n\n@Pipe({\n   name: \"healthStateIconShape\",\n})\nexport class VirtualObjectHealthStateIconShapePipe implements PipeTransform {\n   transform(state: VsanObjectHealthState | string): string {\n      return VsanHealthUtil.getVsanObjectHealthStatusIconShape(state);\n   }\n}","<!--Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<h5 vsan-auto-focus>\n   {{\"vsan.vm.monitor.diskPlacement\" | localized}}\n</h5>\n<span class=\"spinner central-spinner\" *ngIf=\"loadingBasicData\"></span>\n<vsan-validation id=\"validation-message\"\n                 *ngIf=\"error\"\n                 [alert]=\"'vsan.common.error.dataExtraction' | localized\"\n                 [allowReload]=\"true\"\n                 (onReload)=\"fetch()\"\n                 (onClosed)=\"error = false\">\n</vsan-validation>\n\n<ng-container *ngIf=\"!loadingBasicData\">\n\n   <vsan-illustrated-message *ngIf=\"!hasStorageClusterPermissions\"\n                             [type]=\"IllustratedMessageType.ACCESS_DENIED\"\n                             [message]=\"'vsan.csd.noStorageClusterAccess' | localized\">\n   </vsan-illustrated-message>\n\n   <div *ngIf=\"hasStorageClusterPermissions && !objectIdentitiesSupported\"\n        class=\"not-supported-container bold-no-selection\">\n      {{'vsan.vm.monitor.diskPlacement.objectIdentitiesNotSupported' | localized}}\n   </div>\n\n   <ng-container *ngIf=\"objectIdentitiesSupported && hasStorageClusterPermissions\">\n\n      <!-- Local VM -->\n      <ng-container *ngIf=\"!isRemoteVm; else remoteVmSection\">\n         <ng-container *ngTemplateOutlet=\"placementDetails\"></ng-container>\n      </ng-container>\n\n      <!-- Remote VM -->\n      <ng-template #remoteVmSection>\n\n         <!-- Stretched VMs are not supported -->\n         <vsan-validation id=\"stretched-remote-vm-message\"\n                          *ngIf=\"isStretchedVm; else normalRemoteVm\"\n                          [alert]=\"'vsan.vm.monitor.diskPlacement.stretchedRemoteVm' | localized\"\n                          [allowReload]=\"false\"\n                          [allowClose]=\"false\">\n         </vsan-validation>\n\n         <ng-template #normalRemoteVm>\n            <clr-alert [clrAlertClosable]=\"false\">\n               <clr-alert-item>\n                  <div class=\"alert-text\">\n                     <span>{{\"vsan.vm.monitor.diskPlacement.remoteVm\" | localized}}</span>\n                     <clr-icon [attr.shape]=\"storageCluster?.primaryIconId\"></clr-icon>\n                     <a href=\"javascript://\"\n                        (click)=\"navigateToCluster()\">\n                        {{storageCluster?.name}}\n                     </a>\n                  </div>\n               </clr-alert-item>\n            </clr-alert>\n\n            <clr-tabs class=\"tabs\">\n               <clr-tab>\n                  <button clrTabLink\n                          id=\"remote-objects-tab\">\n                     {{\"vsan.vm.monitor.diskPlacement.tab.remoteObjects\" | localized}}\n                  </button>\n                  <clr-tab-content id=\"remote-objects-content\"\n                                   *clrIfActive=\"true\">\n                     <vsan-remote-objects-table [remoteObjects]=\"remoteObjects\"\n                                                [showPoliciesColumn]=\"hasPoliciesPrivilege\">\n                     </vsan-remote-objects-table>\n                  </clr-tab-content>\n               </clr-tab>\n               <clr-tab>\n                  <button clrTabLink\n                          id=\"remote-objects-details-tab\">\n                     {{\"vsan.vm.monitor.diskPlacement.tab.remoteObjectsDetails\" | localized}}\n                  </button>\n                  <clr-tab-content id=\"remote-objects-details-content\"\n                                   *clrIfActive>\n                     <ng-container *ngTemplateOutlet=\"placementDetails\"></ng-container>\n                  </clr-tab-content>\n               </clr-tab>\n            </clr-tabs>\n         </ng-template>\n      </ng-template>\n   </ng-container>\n</ng-container>\n\n<ng-template #placementDetails>\n   <vsan-placement-details\n         *ngIf=\"vmObjectsModel && objectIdentitiesSupported\"\n         [loadingObjects]=\"loadingObjects\"\n         [clusterRef]=\"storageCluster?.moRef\"\n         [vmRef]=\"vmRef\"\n         [selectedVirtualObjects]=\"childrenVmObjectsModel\"\n         [virtualObjects]=\"vmObjectsModel\">\n   </vsan-placement-details>\n</ng-template>\n","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {VsanHealthUtil} from \"@util/vsan-health-util\";\nimport {VsanObjectHealthState} from \"@generated/vsan-object-health-state\";\n\n@Pipe({\n   name: \"healthStateIconClass\",\n})\nexport class VirtualObjectHealthStateIconClassPipe implements PipeTransform {\n   transform(state: VsanObjectHealthState | string): string {\n      return VsanHealthUtil.getVsanObjectHealthStatusIconClass(state);\n   }\n}\n"]}