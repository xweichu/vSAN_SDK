{"version":3,"sources":["./src/app/vsan/common/component/wizard/flow-wizard-footer.html","./src/app/vsan/common/component/wizard/page-item.ts","./src/app/vsan/common/component/wizard/flow-wizard-body.component.ts","./src/app/vsan/common/component/wizard/flow-wizard-footer.component.ts","./src/app/vsan/common/component/wizard/flow-wizard-nav.component.ts","./src/app/vsan/common/component/wizard/flow-wizard.html","./src/app/vsan/common/component/wizard/page-host.directive.ts","./src/app/vsan/common/component/wizard/flow-wizard.component.ts","./src/app/vsan/common/component/wizard/flow-metadata.ts","./src/app/vsan/common/component/wizard/page-container.component.ts","./src/app/vsan/common/component/wizard/flow-wizard-nav.html","./src/app/vsan/common/component/wizard/flow-wizard-body.html","./src/app/vsan/common/component/wizard/flow-wizard.module.ts","./src/app/vsan/common/component/wizard/page-container.html"],"names":[],"mappings":"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","file":"17-es2015.js","sourcesContent":["<!-- Copyright 2021 VMware, Inc. All rights reserved. VMware Confidential -->\n<div class=\"modal-footer wizard-footer\">\n   <button id=\"wzdCancel\"\n           class=\"btn btn-link\"\n           (click)=\"onCancelClick()\">\n      {{'vsan.common.cancel' | localized}}\n   </button>\n   <button id=\"wzdBack\"\n           class=\"btn btn-outline\"\n           *ngIf=\"showBack\"\n           (click)=\"onBackClick()\">\n      {{'vsan.common.back' | localized}}\n   </button>\n   <button id=\"wzdNext\"\n           class=\"btn btn-primary\"\n           *ngIf=\"showNext\"\n           (click)=\"onNextClick()\"\n           [disabled]=\"nextDisabled\">\n      {{'vsan.common.next' | localized}}\n   </button>\n   <button id=\"wzdFinish\"\n           class=\"btn btn-primary\"\n           [ngClass]=\"finishButtonStyle\"\n           *ngIf=\"showFinish\"\n           (click)=\"onFinishClick()\"\n           [disabled]=\"nextDisabled\">\n      {{finishButtonText}}\n   </button>\n</div>","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {EventEmitter, Type} from \"@angular/core\";\nimport {PageData} from \"./flow-metadata\";\nimport {Logger} from \"@util/logger\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {PageControls} from \"./flow-wizard.component\";\n\n/**\n * Holds the state of the page, serves as data model for the TOC.\n * Used also by the component factory to build pages.\n * Implements the PageControls interface\n * @see PageControls\n */\nexport class PageItem implements PageControls {\n\n   static createPlaceholder(component: any): PageItem {\n      return new PageItem(-1, component);\n   }\n   index: number;\n   pageComponent: Type<any>;\n\n   onWire: EventEmitter<any> = new EventEmitter<any>();\n\n   // binding for the error box above the page\n   errors: string[] = [];\n\n   // binding for the busy indicator text\n   busyMessages: string[] = [];\n   metadata: PageData;\n   nextButtonIsDisabled: boolean;\n\n   /**\n    * The view instance of the page\n    */\n   private view: any = {};\n\n   /**\n    * The input for the next page instance\n    */\n   pageInput: any = {};\n\n   /**\n    * @param index the index in the TOC (may differ due to PageSet conditions)\n    * @param pageComponent\n    */\n   constructor(index: number, pageComponent: any) {\n      this.index = index;\n      if (pageComponent) {\n         this.pageComponent = pageComponent;\n         this.metadata = PageData.get(pageComponent.name);\n      } else {\n         this.metadata = new PageData();\n      }\n   }\n\n   set viewInstance(value: any) {\n      this.view = value;\n\n      // assign the input\n      this.metadata.input.forEach((i) => {\n         if (this.pageInput.hasOwnProperty(i.name)) {\n            this.viewInstance[i.selector] = this.pageInput[i.name];\n         }\n      });\n\n      if (this.view.fetch) {\n         this.view.fetch();\n      }\n   }\n\n   get viewInstance(): any {\n      return this.view;\n   }\n\n   /**\n    * Assigns the input property values to be wired for the next\n    * assigned view instance.\n    */\n   wire(input: any): string {\n      // put the page controls in the\n      input.pageControls = this;\n      this.metadata.input.forEach((i) => {\n         if (i.isRequired && typeof input[i.name] === \"undefined\") {\n            Logger.error(\"missing property '\" + i.name + \"' in \" + this.metadata.pageTypeName);\n            return VsanUiUtils.getString(\"vsan.common.wizard.missingProperty\");\n         }\n      });\n\n      this.pageInput = input;\n      this.onWire.emit(input);\n      return null;\n   }\n\n   get busyMessage(): string {\n      return this.busyMessages.length > 0 ? this.busyMessages[this.busyMessages.length - 1] : null;\n   }\n\n   setBusyState = (message: string = VsanUiUtils.getString(\"vsan.loading\")) => this.busyMessages.push(message);\n   clearBusyState = () => this.busyMessages.pop();\n   addValidationErrors = (messages: string[]) => this.errors.push(...messages);\n   setValidationErrors = (messages: string[]) => this.errors = messages;\n   clearValidationErrors = () => this.errors = [];\n   collect: (property: string) => Promise<any>;\n   rebuildToc: () => void;\n}\n","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {PageItem} from \"./page-item\";\nimport {FlowWizardNavComponent} from \"@component/wizard/flow-wizard-nav.component\";\n\n@Component({\n   selector: \"vsan-wizard-body\",\n   templateUrl: \"flow-wizard-body.html\",\n   styleUrls: [\"flow-wizard-body.scss\"],\n})\nexport class FlowWizardBodyComponent {\n   FlowWizardNavComponent: typeof FlowWizardNavComponent = FlowWizardNavComponent;\n\n   @Input() pages: PageItem[];\n   @Input() visiblePage: number;\n   @Input() activePage: number;\n   @Input() placeholderPage: PageItem;\n\n}\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, Output, EventEmitter} from '@angular/core';\nimport {PageItem} from \"./page-item\";\n\n/**\n * Footer component for flow wizard\n */\n@Component({\n   selector: \"vsan-wizard-footer\",\n   templateUrl: \"flow-wizard-footer.html\",\n   styleUrls: [\"flow-wizard-footer.scss\"]\n})\nexport class FlowWizardFooterComponent {\n   @Input() pages: PageItem[];\n   @Input() visiblePage:number;\n   @Input() finishButtonText: string;\n   @Input() finishButtonStyle: string;\n\n   @Output() onCancel: EventEmitter<any> = new EventEmitter<any>();\n   @Output() onBack: EventEmitter<any> = new EventEmitter<any>();\n   @Output() onNext: EventEmitter<any> = new EventEmitter<any>();\n   @Output() onFinish: EventEmitter<any> = new EventEmitter<any>();\n\n   get showBack():boolean {\n      return this.visiblePage > 0;\n   }\n   get showNext():boolean {\n      return this.visiblePage < this.pages.length - 1;\n   }\n\n   get showFinish():boolean {\n      return this.visiblePage == this.pages.length - 1;\n   }\n\n   get nextDisabled():boolean {\n      return this.visiblePage == -1 || this.pages[this.visiblePage].busyMessage != null ||\n            this.pages[this.visiblePage].nextButtonIsDisabled;\n   }\n\n   onCancelClick = () => this.onCancel.emit({});\n   onBackClick = () => this.onBack.emit({});\n   onNextClick = () => this.onNext.emit({});\n   onFinishClick = () => this.onFinish.emit({});\n}","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {PageItem} from \"./page-item\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * Footer component for flow wizard\n */\n@Component({\n   selector: \"vsan-wizard-nav\",\n   templateUrl: \"flow-wizard-nav.html\",\n   styleUrls: [\"flow-wizard-nav.scss\"],\n})\nexport class FlowWizardNavComponent {\n   FlowWizardNavComponent: typeof FlowWizardNavComponent = FlowWizardNavComponent;\n   static readonly NAV_BUTTON_ID_SUFFIX: string = \"-tab\";\n\n   @Input() pages: PageItem[];\n   @Input() visiblePage: number;\n   @Input() activePage: number;\n   @Input() title: string;\n\n   @Output() onPage: EventEmitter<number> = new EventEmitter<number>();\n\n   onPageClick(pageIndex: number): void {\n      if (pageIndex > this.activePage) {\n         return;\n      }\n      this.onPage.emit(pageIndex);\n   }\n\n   focusOn(pageIndex: number): void {\n      if (pageIndex < 0) {\n         // If focus is on the first tab, moves focus to the last active tab.\n         pageIndex = this.activePage;\n      }\n      if (pageIndex > this.activePage) {\n         // If focus is on the last tab, moves focus to the first tab.\n         pageIndex = 0;\n      }\n      const buttonId: string = this.pages[pageIndex].pageComponent.name + FlowWizardNavComponent.NAV_BUTTON_ID_SUFFIX;\n      document.getElementById(buttonId).focus();\n   }\n\n   navClass(item: PageItem): string {\n      if (item.index === this.visiblePage) {\n         if (this.visiblePage === this.activePage) {\n            return \"nav-active\";\n         } else {\n            return \"nav-complete nav-active\";\n         }\n      }\n      if (item.index < this.activePage) {\n         return \"nav-complete\";\n      }\n      return \"\";\n   }\n\n   isDisabled(item: PageItem): boolean {\n      return item.index > this.activePage;\n   }\n\n   getScreenReaderLabel(stepNumber: number, item: PageItem): string {\n      let state: string;\n      if (item.index < this.activePage) {\n         state = VsanUiUtils.getString(\"vsan.common.wizard.status.completed\");\n      } else if (item.index === this.activePage) {\n         state = VsanUiUtils.getString(\"vsan.common.wizard.status.inProgress\");\n      } else {\n         state = VsanUiUtils.getString(\"vsan.common.wizard.status.notStarted\");\n      }\n      return VsanUiUtils.getString(\"vsan.common.wizard.status.ariaLabel\",\n            stepNumber + 1, item.metadata.title, state);\n   }\n}\n","<!-- Copyright 2021 VMware, Inc. All rights reserved. VMware Confidential -->\n<vsan-wizard-nav id=\"wizardNav\"\n                 [title]=\"title\"\n                 [pages]=\"pages\"\n                 [visiblePage]=\"visiblePage\"\n                 [activePage]=\"activePage\"\n                 (onPage)=\"onPage($event)\">\n</vsan-wizard-nav>\n<div id=\"wizardContentArea\" class=\"wizard-content\">\n   <vsan-wizard-body id=\"wizardBody\"\n                     [visiblePage]=\"visiblePage\"\n                     [activePage]=\"activePage\"\n                     [pages]=\"pages\"\n                     [placeholderPage]=\"placeholderPage\">\n   </vsan-wizard-body>\n   <vsan-wizard-footer [pages]=\"pages\"\n                       [visiblePage]=\"visiblePage\"\n                       [finishButtonText]=\"finishButtonText\"\n                       [finishButtonStyle]=\"finishButtonStyle\"\n                       (onCancel)=\"onCancel()\"\n                       (onBack)=\"onBack()\"\n                       (onNext)=\"onNext()\"\n                       (onFinish)=\"onNext()\">\n   </vsan-wizard-footer>\n</div>","/* Copyright 2017 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Directive, ViewContainerRef} from \"@angular/core\";\n\n@Directive({\n   selector: '[page-host]',\n})\nexport class PageHostDirective {\n   constructor(public viewContainerRef: ViewContainerRef) { }\n}","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {FocusTrapFactory} from \"@angular/cdk/a11y\";\nimport {Component, ElementRef, EventEmitter, Injector, Input, OnInit, Output} from \"@angular/core\";\nimport {OutputPropertyData} from \"@component/wizard/flow-metadata\";\nimport {ServiceData} from \"@service/service-metadata\";\nimport {Logger} from \"@util/logger\";\nimport {WebPlatform} from \"@util/platform\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {PageItem} from \"./page-item\";\n\n/**\n * Implements an unnecessarily complex wizard concept\n * allowing independent page components to pass data around through\n * dependency injection.\n * Internal: Asynchronous services injection is also supported for async invokers\n * described in ServiceMetadata.\n * @see ServiceMetadata\n */\n@Component({\n   selector: \"vsan-flow-wizard\",\n   templateUrl: \"flow-wizard.html\",\n   styleUrls: [\"flow-wizard.scss\"],\n})\nexport class FlowWizardComponent implements OnInit {\n\n   /**\n    * The default name of the property to be looked for in the services when\n    * finish is clicked.\n    */\n   static readonly DEFAULT_STARTING_TASK_PROPERTY: string = \"finishTask\";\n\n   /**\n    * The error to be shown when a required property is nowhere to be found.\n    */\n   private static readonly ERROR_COLLECTING_PROPERTY: string =\n         VsanUiUtils.getString(\"vsan.common.wizard.missingProperty\");\n\n   /**\n    * The interval on which the visible page is checked for changed output properties.\n    * If such are found, the TOC is rebuilt.\n    */\n   private static readonly PAGE_OUTPUT_SCAN_DELAY: number = 420; // ms\n\n   /**\n    * The name of the property to be looked for in the services when\n    * finish is clicked. The property will be looked for in the last page's services\n    * and then in the wizard services. The returned value will be passed to the future\n    * returned by the show method.\n    */\n   @Input()\n   startingTaskProperty: string = FlowWizardComponent.DEFAULT_STARTING_TASK_PROPERTY;\n\n   @Input()\n   title: string = \"\";\n\n   @Input()\n   finishButtonText: string = VsanUiUtils.getString(\"vsan.common.finish\");\n\n   @Input()\n   finishButtonStyle: string = \"btn-success\";\n\n   /**\n    * Local properties that will be looked up after the pages output.\n    */\n   @Input()\n   set contextProperties(value: any) {\n      this.context = value;\n      if (this.context && this.sets) {\n         this.rebuildToc();\n      }\n   }\n\n   get contextProperties(): any {\n      return this.context ? this.context : {};\n   }\n\n   /**\n    * Table of contents segments. Each page set has its lambda condition\n    * in order to include the set of pages.\n    * @see PageSet\n    */\n   @Input()\n   set pageSets(value: PageSet[]) {\n      this.sets = value;\n      if (this.context && this.sets) {\n         this.rebuildToc();\n      }\n   }\n\n   get pageSets(): PageSet[] {\n      return this.sets ? this.sets : [];\n   }\n\n   /**\n    * The wizard services. Will be looked up after all page outputs,\n    * page services and context properties fail to resolve a property.\n    * @type {Array}\n    */\n   @Input()\n   services: any[] = [];\n\n   /**\n    * Placeholder page for when no page is active.\n    * For convenience purposes with error / busy indication\n    * and null-pointer safety.\n    */\n   @Input()\n   placeholderPage: PageItem = new PageItem(-1, null);\n\n   /**\n    * Provides a hook for closing the wizard in a way that allows any additional processing.\n    * If this is subscribed to, the default closeModalDialog method will not be invoked and\n    * it is the caller's responsibility to close the modal.\n    * The data will hold whatever is returned by the startingTaskProperty invocation,\n    * most likely a task ref that can be monitored.\n    */\n   @Output()\n   onFinish: EventEmitter<any> = new EventEmitter<any>();\n\n   /**\n    * The pages to show in the wizard. Will be placed inside the host component.\n    */\n   pages: PageItem[] = [];\n\n   /**\n    * The page the user is currently seeing\n    */\n   visiblePage: number = -1;\n\n   /**\n    * The last cached page\n    */\n   activePage: number = -1;\n\n   private context: any;\n   private sets: PageSet[];\n   private isOpen: boolean = false;\n   private pageSnapshot: any = {\n      index: -1,\n      output: {},\n   };\n\n   constructor(private injector: Injector, private el: ElementRef, private focusTrap: FocusTrapFactory) {\n      // Create a focus trap region and move the focus into it.\n      focusTrap.create(el.nativeElement).focusInitialElement();\n   }\n\n   /**\n    * When wizard is opened via platform modal dialog, trigger open() upon creation.\n    */\n   ngOnInit(): void {\n      this.visiblePage = -1;\n      this.activePage = -1;\n      this.pages = [];\n\n      // loads the TOC, will trigger load of page 0\n      // this.rebuildToc();\n      WebPlatform.setAccessibilityTitle(this.title);\n      this.isOpen = true;\n      this.listenOnPageOutput();\n   }\n\n   onNext(): void {\n\n      if (this.visiblePage < this.activePage) {\n         // we are on a cached page, so do whatever clicking on the TOC does\n         this.onPage(this.visiblePage + 1);\n         return;\n      }\n\n      if (this.visiblePage > this.activePage) {\n         // should not be reachable\n         Logger.error(\"illegal wizard state: \" +\n               \"visiblePage=\" + this.visiblePage + \" > \" +\n               \"activePage=\" + this.activePage);\n         return;\n      }\n\n      if (this.activePage === -1) {\n         this.preparePlaceholderPage();\n      } else {\n         this.prepareToLeavePage(this.pages[this.activePage]);\n      }\n   }\n\n   private preparePlaceholderPage = () => {\n      const propertiesToCollect: any[] = this.placeholderPage.metadata.input.map(i => i.name);\n      const servicesToLookup: any[] = this.placeholderPage.metadata.services.concat(...this.services);\n\n      this.placeholderPage.setBusyState();\n\n      // collect the properties with (1) traversal offset so the service input\n      // is collected from the previous pages. it is not correct to start collecting\n      // from the page itself either as it may override properties and in this case its\n      // input would depend on its output.vmsValidationResult\n      this.collect(propertiesToCollect, -1, servicesToLookup).then(pInput => {\n         this.placeholderPage.clearBusyState();\n\n         const error: string = this.placeholderPage.wire(pInput);\n         // force wire as the view has already been set (valid for placeholder page only)\n         this.placeholderPage.viewInstance = this.placeholderPage.viewInstance;\n\n         if (error) {\n            this.placeholderPage.errors.push(error);\n         } else {\n            this.prepareToLeavePage(this.placeholderPage);\n         }\n      }).catch(e => {\n         Logger.error(\"A property couldn't be resolved\", e);\n         this.placeholderPage.setValidationErrors([e]);\n      });\n   };\n\n   private prepareToLeavePage = (page: PageItem) => {\n      // here visiblePage is the active page (may be -1 if the wizard is fresh)\n      if (page.busyMessages.length > 0) {\n         // next shouldn't be enabled but yet lets be safe\n         return;\n      }\n\n      page.errors = [];\n      if (!this.doLocalValidate()) {\n         return;\n      }\n\n      // remember in local variable as currentPage might be changed by the user while loading\n      const proceed: any = (this.activePage === this.pages.length - 1) ? this.startFinishTask : this.proceedToNextPage;\n\n      this.validate(page).then(errorMessages => {\n         if (!!errorMessages) {\n            page.addValidationErrors(errorMessages);\n         } else {\n            page.setBusyState(VsanUiUtils.getString(\"vsan.common.validating\"));\n            this.doRemoteValidate(page).then(remoteSucceeded => {\n               page.clearBusyState();\n               if (remoteSucceeded) {\n                  proceed(page);\n               }\n            }).catch(e => {\n               page.clearBusyState();\n            });\n         }\n      }).catch(exceptionMessage => {\n         page.clearBusyState();\n\n         if (exceptionMessage) {\n            page.addValidationErrors(exceptionMessage);\n         }\n      });\n   };\n\n   onBack(): void {\n      if (this.visiblePage > 0) {\n         this.onPage(this.visiblePage - 1);\n      }\n   }\n\n   onCancel(): void {\n      if (this.isOpen) {\n         this.close();\n      }\n      VsanUiUtils.closeModalDialog();\n   }\n\n   private validate(page: PageItem): Promise<string[]> {\n      const result: any = page.viewInstance.validate && page.viewInstance.validate.call(page.viewInstance);\n      return VsanUiUtils.isPromise(result)\n            ? result\n            : new Promise<string[]>((accept, reject) => !result ? accept(null) : reject(result));\n   }\n\n   protected doLocalValidate(): boolean {\n      const page: PageItem = this.visiblePage === -1 ? this.placeholderPage : this.pages[this.visiblePage];\n      for (const o of page.metadata.output) {\n         // FIXME: the validator function is defined as a decorated function (by the @OutputProperty function).\n         // This causes the 'this' to be the component rather than the passed viewInstance.\n         // 'this' refers to the page instance only if\n         // the validator function is defined inline and NOT as lambda expression:\n         // e.g. @OutputProperty(p => p.validate(function(value) { return [\"some error\"]; }))\n         // A possible solution is to specify the validator functions through separate annotation\n         // that does not collect its settings through decorator lambda function.\n         const error: any = o.validator.call(page.viewInstance, page.viewInstance[o.selector]);\n         if (error) {\n            page.errors.push(error);\n            return false;\n         }\n      }\n      // clear any previous errors\n      page.errors = [];\n\n      // The motivation of this change is because the reactive form validation errors cannot stop the user going\n      // to next view, to achieve this w/o this change, we have to add a general error message in the validate method.\n      // In order to support reactive forms in wizard ,we use the new inlineValidate method of the page component,\n      // if all the inputs are valid, inlineValidate method returns true, then the validate method will be executed;\n      // otherwise the page is stopped with only inline validation errors displayed.\n      return !page.viewInstance.inlineValidate || page.viewInstance.inlineValidate.call(page.viewInstance);\n   }\n\n   protected doRemoteValidate(page: PageItem): Promise<boolean> {\n      const services: any[] = page.metadata.services.concat(...this.services);\n\n      // list of all remote validator properties for the page\n      const validators: string[] = page.metadata.output\n            .filter(out => !!out.remoteValidatorProperty)\n            .map(out => out.remoteValidatorProperty);\n\n      if (validators.length === 0) {\n         return Promise.resolve(true);\n      }\n\n      return new Promise<boolean>((accept, reject) => {\n         // request the values of the validator properties\n         this.collect(validators, page.index, services).then(map => {\n\n            // flag whether a failure was found in the result\n            let accepted: boolean = false;\n\n            for (const key of validators) {\n               if (map.hasOwnProperty(key)) {\n\n                  // non-null result means validation error\n                  if (map[key]) {\n                     page.errors.push(map[key]);\n                     accept(false);\n                     accepted = true;\n                     break;\n                  }\n               } else {\n                  Logger.error(\"validator input not found: \" + key);\n                  page.errors.push(FlowWizardComponent.ERROR_COLLECTING_PROPERTY);\n                  accept(false);\n                  accepted = true;\n                  break;\n               }\n            }\n            if (!accepted) {\n               // if nothing was accepted at this point, that means everything went well\n               accept(true);\n            }\n         }).catch(error => {\n            Logger.error(\"A property couldn't be resolved\", error);\n            page.errors.push(error);\n            reject(error);\n         });\n      });\n   }\n\n   protected proceedToNextPage = (currentPage: PageItem) => {\n      // the page that is to be loaded\n      const nextPage: PageItem = this.pages[currentPage.index + 1];\n      const propertiesToCollect: any[] = nextPage.metadata.input.map(i => i.name);\n      const servicesToLookup: any[] = nextPage.metadata.services.concat(...this.services);\n\n      currentPage.setBusyState();\n\n      // collect the properties with (1) traversal offset so the service input\n      // is collected from the previous pages. it is not correct to start collecting\n      // from the page itself either as it may override properties and in this case its\n      // input would depend on its output.\n      this.collect(propertiesToCollect, currentPage.index, servicesToLookup).then(pInput => {\n         currentPage.clearBusyState();\n\n         const error: string = nextPage.wire(pInput);\n         if (!error) {\n            this.activePage = nextPage.index;\n\n            if (this.visiblePage === currentPage.index) {\n               // proceed only if the user is still on the last active page,\n               // they may have gone to a previous page while the last was loading.\n               this.visiblePage++;\n            }\n            this.activePage = nextPage.index;\n         } else {\n            // wire may return error if a required property is missing\n            currentPage.errors.push(error);\n         }\n      }).catch(e => {\n         Logger.error(\"A property couldn't be resolved\", e);\n         currentPage.clearBusyState();\n         currentPage.errors.push(e);\n      });\n   };\n\n   protected startFinishTask = (lastPage: PageItem) => {\n      const services: any[] = lastPage.metadata.services.concat(this.services);\n\n      lastPage.setBusyState(VsanUiUtils.getString(\"vsan.common.validating\"));\n      this.collect([this.startingTaskProperty], lastPage.index, services)\n            .then(resultMap => {\n               this.isOpen = false;\n               const startedTask: any = resultMap[this.startingTaskProperty];\n               if (this.onFinish.observers.length) {\n                  this.onFinish.emit(startedTask);\n               } else {\n                  VsanUiUtils.closeModalDialog(startedTask);\n               }\n            }).catch(e => {\n         lastPage.clearValidationErrors();\n         lastPage.clearBusyState();\n\n         lastPage.addValidationErrors([e]);\n         Logger.error(\"failed to start wizard task \", this.startingTaskProperty, \" with \", e);\n      });\n   };\n\n   /**\n    * Closes the wizard, causing also the result promise to be rejected.\n    */\n   private close(): void {\n      this.isOpen = false;\n   }\n\n   onPage(index: number): void {\n      this.visiblePage = index;\n   }\n\n   protected rebuildToc = (fromPageIndex: number = this.visiblePage + 1) => {\n\n      this.activePage = fromPageIndex - 1;\n\n      // unique and combined set of properties required by all page set conditions\n      const propertyMap: any = {};\n      this.pageSets.forEach((set) => {\n         VsanUiUtils.getParamNames(set.condition).forEach((param) => propertyMap[param] = {});\n      });\n\n      // collect the properties only locally starting from the last page\n      this.collect(Object.keys(propertyMap), fromPageIndex - 1, this.services).then((propValues: any) => {\n         const result: any[] = [];\n         let pageIndex: number = 0;\n         for (let i: number = 0; i < this.pageSets.length; i++) {\n            const set: PageSet = this.pageSets[i];\n            if (FlowWizardComponent.invokeCondition(propValues, set.condition)) {\n               if (pageIndex + set.pageComponents.length > fromPageIndex) {\n                  const setSliceIndex: number = fromPageIndex - pageIndex >= 0 ? fromPageIndex - pageIndex : 0;\n                  result.push(...set.pageComponents.slice(setSliceIndex));\n               }\n\n               pageIndex += set.pageComponents.length;\n            }\n         }\n\n         // removed cached page items\n         this.pages.splice(fromPageIndex);\n\n         // push back fresh page items\n         result.forEach((pageComp) => {\n            const pageItem: PageItem = new PageItem(this.pages.length, pageComp);\n            pageItem.collect = this.collectCallback(pageItem);\n            pageItem.rebuildToc = (() => this.rebuildToc(pageItem.index + 1));\n            this.pages.push(pageItem);\n         });\n\n         if (fromPageIndex === 0 && this.pages.length > 0) {\n            // load first page if such\n            this.onNext();\n         }\n      }).catch(error => {\n         Logger.error(\"A property couldn't be resolved\", error);\n         (fromPageIndex === 0 ? this.placeholderPage : this.pages[fromPageIndex - 1]).errors.push(error);\n      });\n   };\n\n   // creates and returns a callback for fetching a single property value\n   protected collectCallback(pageItem: PageItem): any {\n      return (property: string): Promise<any> => {\n         return new Promise<any>((accept, reject) => {\n\n            const iterateServices: any[] = pageItem.metadata.services.concat(...this.services);\n\n            pageItem.setBusyState();\n\n            this.collect([property], pageItem.index, iterateServices).then(map => {\n               pageItem.clearBusyState();\n               if (map.hasOwnProperty(property)) {\n                  accept(map[property]);\n               } else {\n                  reject(FlowWizardComponent.ERROR_COLLECTING_PROPERTY);\n\n               }\n            }).catch(reason => {\n               pageItem.clearBusyState();\n               reject(reason);\n            });\n         });\n      };\n   }\n\n   protected collectLocal = (props: string[], startPage: number): any[] => {\n\n      const result: any = {};\n      for (const prop of props) {\n\n         // iterate previous pages and look for their output\n         for (let page: any = startPage; page >= 0; page--) {\n\n            const potentialOutputMatch: OutputPropertyData = this.pages[page].metadata.outputByName(prop);\n            if (potentialOutputMatch) {\n               // page before the current one has matching output\n               const view: any = this.pages[page].viewInstance;\n               const value: any = view[potentialOutputMatch.selector];\n\n               // local properties are directly resolved\n               result[prop] = value;\n               break;\n            }\n\n         }\n\n         if (!result.hasOwnProperty(prop) && this.contextProperties.hasOwnProperty(prop)) {\n            result[prop] = this.contextProperties[prop];\n            continue;\n         }\n\n         if (!result.hasOwnProperty(prop)) {\n            throw new Error(\"missing property: \" + prop);\n         }\n      }\n\n      return props.map((name) => result[name]);\n\n   };\n\n   /**\n    * Collects the specified properties. First iterates the pages starting from the specified one\n    * and going down to index 0.\n    * The properties that are not found are then looked up in the context properties.\n    * The properties that are not found are then looked up in the specified services.\n    * If a property is found in a service, its input is collected from the pages and context properties only.\n    * @param props list of properties\n    * @param startPage the first page (with highest index) to be looked for output when\n    *    collecting the properties\n    * @returns Promise<any> Map property name to value\n    *    Accepts: Map property name to property value for all found properties.\n    *       properties that do not cause rejection, it is just not included in the map.\n    *       The caller is responsible to check if their requested property is in the result.\n    *    Rejects: If a property invoker in a service throws an exception\n    */\n   protected collect = (props: string[], startPage: number,\n         services: any[]) => {\n      return new Promise<any>((accept, reject) => {\n\n         const result: any = {};\n         for (const prop of props) {\n\n            // iterate previous pages and look for their output\n            for (let page: any = startPage; page >= 0; page--) {\n\n               const potentialOutputMatch: OutputPropertyData = this.pages[page].metadata.outputByName(prop);\n               if (potentialOutputMatch) {\n                  // page before the current one has matching output\n                  const view: any = this.pages[page].viewInstance;\n                  const value: any = view[potentialOutputMatch.selector];\n\n                  // local properties are directly resolved\n                  result[prop] = Promise.resolve(value);\n                  break;\n               }\n\n            }\n\n            if (!result.hasOwnProperty(prop) && this.contextProperties.hasOwnProperty(prop)) {\n               result[prop] = Promise.resolve(this.contextProperties[prop]);\n            }\n\n            if (!result.hasOwnProperty(prop)) {\n\n               // iterate page and wizard services and look for their output\n               for (const svc of services) {\n                  const data: ServiceData = ServiceData.get(svc);\n                  const selector: string = data.getSelector(prop);\n\n                  if (selector) {\n                     // recursively collect the invoker input from the pages (no services)\n                     const proxy: any = this.injector.get(svc);\n                     const invoker: (...params: any[]) => Promise<any> = proxy[selector];\n                     const argNames: string[] = data.getArgNames(prop) || VsanUiUtils.getParamNames(invoker);\n                     const input: any[] = this.collectLocal(argNames, startPage);\n                     result[prop] = invoker.apply(proxy, input);\n                     break;\n                  }\n               }\n            }\n         }\n\n         // This method is to collect the given property values, such as InputProperty.\n         // Some properties are local variable and some are from service calls.\n         // The local properties already have values, only properties from service calls are pending.\n         // The logic below is to get the value from promise calls, so e need to handle the promises.\n         const keys: string[] = Object.keys(result).filter(key => VsanUiUtils.isPromise(result[key]));\n         let pending: number = keys.length;\n\n         if (pending === 0) {\n            accept(result);\n            return;\n         }\n\n         keys.forEach((name: string) => {\n            const promise: Promise<any> = result[name];\n            promise.then(value => {\n               result[name] = value;\n               pending -= 1;\n               if (pending === 0) {\n                  // that was the last value to be received\n                  accept(result);\n               }\n            }).catch(error => {\n               Logger.error(\"property collect failed: \", error);\n               reject(error);\n            });\n         });\n      });\n   };\n\n   /**\n    * Schedules periodic checks for changed output properties of the currently visible page.\n    */\n   protected listenOnPageOutput(): void {\n      setTimeout(() => {\n         if (this.isOpen) {\n            const page: PageItem = this.visiblePage !== -1 ? this.pages[this.visiblePage] : this.placeholderPage;\n            if (page.index < this.activePage && page.busyMessages.length === 0) {\n\n               // take the current page output\n               const output: any = {};\n               for (const o of page.metadata.output) {\n                  output[o.name] = page.viewInstance[o.selector];\n               }\n\n               if (page.index !== this.pageSnapshot.index) {\n                  // this is the first time we take snapshot of this cached page\n                  // this happens when the user just visited it\n                  // remember it for later comparison\n                  this.pageSnapshot = {\n                     index: page.index,\n                     output: output,\n                  };\n               } else {\n                  // the last snapshot belongs to the currently visible page\n                  // look for changed properties\n                  for (const key in output) {\n                     if (this.pageSnapshot.output.hasOwnProperty(key)) {\n\n                        if (!Object.is(this.pageSnapshot.output[key], output[key])) {\n                           Logger.debug(\"property '\" + key + \"' changed, rebuilding TOC, old:\",\n                                 this.pageSnapshot.output[key], \"new:\", output[key]);\n\n                           // remember the current snapshot for the next check\n                           this.pageSnapshot = {\n                              index: page.index,\n                              output: output,\n                           };\n\n                           this.rebuildToc(page.index + 1);\n                           break;\n                        }\n                     } else {\n                        // should not be possible, page metadata cannot change runtime\n                        Logger.error(\"property '\" + key + \"' not found in snapshot: \", this.pageSnapshot);\n                     }\n                  }\n               }\n            }\n            this.listenOnPageOutput();\n         }\n      }, FlowWizardComponent.PAGE_OUTPUT_SCAN_DELAY);\n   }\n\n   /**\n    * Invokes the condition function and returns its result.\n    * Parameters are resolved from the map\n    * @param propValues\n    * @param condition\n    * @returns {boolean}\n    */\n   protected static invokeCondition(propValues: any, condition: any): boolean {\n      const params: any[] = [];\n\n      const paramNames: string[] = VsanUiUtils.getParamNames(condition);\n      paramNames.forEach((param) => {\n         if (param === \"...vals\") {\n            // This is the default condition, nothing to evaluate\n            params.push(null);\n         } else if (propValues.hasOwnProperty(param)) {\n            params.push(propValues[param]);\n         } else {\n            Logger.warn(\"page condition param \" + param + \" not found, assuming null\");\n            params.push(null);\n         }\n      });\n\n      return !!condition.apply(condition, params);\n   }\n\n}\n\n/**\n * Interface to the pages to access the wizard functionality.\n * A page must wire the 'pageControls' property in order get a reference.\n */\nexport interface PageControls {\n   /**\n    * Collects a property accessible to the current page.\n    * Note that this page output is also looked up, so\n    * property validators can be invoked this way. The side effect\n    * is that this method will resolve overridden properties (such that\n    * are both input and output) from the current page and not\n    * the original received value.\n    */\n   collect(property: string): Promise<any>;\n\n   setBusyState(value?: string): void;\n\n   clearBusyState(): void;\n\n   addValidationErrors(message: string[]): void;\n\n   setValidationErrors(message: string[]): void;\n\n   clearValidationErrors(): void;\n\n   /**\n    * Rebuilds the pages after the invoking one.\n    */\n   rebuildToc(): void;\n}\n\n/**\n * Set of pages, containing block of the TOC sharing existence condition.\n * The condition is evaluated as a function accepting named properties.\n * The properties are collected from pages.\n */\nexport class PageSet {\n\n   /**\n    * @param pageComponents the list of page components in this set\n    * @param condition function(...): boolean\n    */\n   constructor(public pageComponents: any[], public condition: Function = (...vals) => true) {\n   }\n\n   /**\n    * number of components\n    */\n   get length(): number {\n      return this.pageComponents.length;\n   }\n\n}\n\n/**\n * A page can implement this interface to provide custom validation.\n */\nexport interface OnValidate {\n   /**\n    * A non-null result is interpreted as error.\n    * Supports both synchronous (string as result)\n    * and asynchronous validation (promise as result).\n    */\n   validate(): string[] | Promise<string[]>;\n\n   /**\n    * required only when the view is using inline validation.\n    * returns true if the form is valid\n    */\n   inlineValidate?(): boolean;\n}\n\n/**\n * A page can implement this interface to perform additional data manipulation\n * upon loading all page properties.\n */\nexport interface OnFetch {\n   fetch(): void;\n}\n","/* Copyright 2017-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\n\n/**\n * Annotation for marking a page input property\n * @param builder so you can tweak stuff\n * @returns {(target:any, name:string) => void} field decorator\n */\nexport function InputProperty(... decorators: any[]): (target: any, name: string) => void {\n   let data = new InputPropertyData();\n   if (decorators) {\n      decorators.forEach(d => {\n         if (typeof d == \"string\") {\n            d = InputProperty.named(d);\n         }\n         d(data)\n      });\n   }\n   return (target: any, name: string) => {\n      let className = target.constructor.name;\n\n      data.selector = name;\n      if (!data.name) {\n         data.name = name;\n      }\n      PageData.get(className).input.push(data);\n   };\n}\n\nexport module InputProperty {\n   export function named(name: string) {\n      return function(builder: InputPropertyBuilder) {\n         builder.named(name);\n      }\n   }\n   export function required(value: boolean) {\n      return function(builder: InputPropertyBuilder){\n         builder.required(value);\n      }\n   }\n}\n\n/**\n * Annotation for marking a page output property\n * @param builder for convenient neatness\n */\nexport function OutputProperty(... decorators: any[]): (target: any, name: string) => void {\n   let data = new OutputPropertyData();\n   if (decorators) {\n      decorators.forEach(d => {\n         if (typeof d == \"string\") {\n            d = InputProperty.named(d);\n         }\n         d(data)\n      });\n   }\n   return (target: any, name: string) => {\n      let className = target.constructor.name;\n\n      data.selector = name;\n\n      if (typeof data.name === 'undefined') {\n         data.name = name;\n      }\n      PageData.get(className).output.push(data);\n   }\n}\n\nexport module OutputProperty {\n   export function named(name: string) {\n      return function(builder: OutputPropertyBuilder) {\n         builder.named(name);\n      }\n   }\n   export function validatorProperty(property: string) {\n      return function(builder: OutputPropertyBuilder) {\n         builder.validateRemote(property);\n      }\n   }\n   export function ifNull(nullMessage: string) {\n      return function(builder: OutputPropertyBuilder) {\n         builder.validateNotNull(nullMessage);\n      }\n   }\n   export function ifEmpty(emptyMessage: string) {\n      return function(builder: OutputPropertyBuilder) {\n         builder.validateNotEmpty(emptyMessage);\n      }\n   }\n}\n\n/**\n * Annotation for marking a component as page.\n * @param title\n * @param description - string or function (all page inputs may be used as incoming parameters)\n * @param services specific list of services for the page\n * @returns {(pageClass:any)=>undefined} type decorator\n */\nexport function WizardPage(\n      title: string,\n      description?: string | Function,\n      services?: any[]): (type: any) => void {\n   return (pageClass: any) => {\n      let data: PageData = PageData.get(pageClass.name);\n      data.title = title;\n      data.pageTypeName = pageClass.name;\n\n      if (description) {\n         if (typeof description === \"function\") {\n            data.description = <any> description;\n         } else {\n            data.description = () => (\"\" + description);\n         }\n      } else {\n         data.description = null;\n      }\n\n      if (services) {\n         data.services = services || [];\n      }\n   }\n}\n\n/**\n * Accessible in the @InputProperty annotation to\n * customize the property data.\n */\nexport interface InputPropertyBuilder {\n\n   /**\n    * Override the name of the property.\n    * Default is accessor name.\n    */\n   named(name: string): InputPropertyBuilder;\n\n   /**\n    * Overrides whether the input property is required.\n    * Default is true.\n    */\n   required(value: boolean): InputPropertyBuilder;\n\n}\n\n\n/**\n * Accessible in the @InputProperty annotation to\n * customize the property data.\n */\nexport interface OutputPropertyBuilder {\n\n   /**\n    * Override the name of the property.\n    * Default is accessor name.\n    */\n   named(name: string): OutputPropertyBuilder;\n\n   /**\n    * Sets the local validator callback for the property to\n    * not-null checker returning the specified message as error.\n    */\n   validateNotNull(message: string): OutputPropertyBuilder;\n\n   /**\n    * Sets the local validator callback for the property to\n    * not-null-or-empty checker returning the specified message as error.\n    * @param message\n    */\n   validateNotEmpty(message: string): OutputPropertyBuilder;\n\n   /**\n    * Assigns a remote property name to be collected during the page\n    * remote validation phase. A non-null result is interpreted as error.\n    */\n   validateRemote(propertyName: string): OutputPropertyBuilder;\n\n}\n\n/**\n * Holds the annotation data for an input property.\n */\nexport class InputPropertyData implements InputPropertyBuilder {\n\n   public selector: string;\n   public name: string;\n   public isRequired: boolean = true;\n\n   constructor() {}\n\n   public named(name: string) {\n      this.name = name;\n      return this;\n   }\n\n   public required(value: boolean): InputPropertyData {\n      this.isRequired = value;\n      return this;\n   }\n\n   public toString(): string {\n      return this.name;\n   }\n\n}\n\n/**\n * Holds the annotation data of an output property.\n */\nexport class OutputPropertyData implements OutputPropertyBuilder {\n\n   public selector: string;\n   public name: string;\n   public validator: (value: any) => string[] = (anyVal) => null;\n   public remoteValidatorProperty: string;\n\n   constructor() {}\n\n   public named(name: string) {\n      this.name = name;\n      return this;\n   }\n\n   public validate(validator: (value: any) => string[]) {\n      this.validator = validator;\n      return this;\n   }\n\n   public validateNotNull(message: string) {\n      return this.validate(value => value ? null : [message]);\n   }\n\n   public validateNotEmpty(message: string) {\n      return this.validate(value => {\n         if (typeof value === 'undefined' || value == null) {\n            return [message];\n         }\n         if (value.hasOwnProperty('length') && value['length'] == 0) {\n            return [message];\n         }\n         return null;\n      });\n   }\n\n   public validateRemote(propertyName: string) {\n      this.remoteValidatorProperty = propertyName;\n      return this;\n   }\n\n   public toString(): string {\n      return this.name;\n   }\n\n}\n\n/**\n * Holds the annotation data of a page, like\n * title, description, input and output properties.\n */\nexport class PageData {\n\n   private static content = {};\n\n   public static get(pageClass: string): PageData {\n      if (!PageData.content.hasOwnProperty(pageClass)) {\n         let data = new PageData();\n         data.title = pageClass;\n         data.description = () => pageClass;\n         data.pageTypeName = pageClass;\n         PageData.content[pageClass] = data;\n      }\n      return PageData.content[pageClass];\n   }\n\n   public title: string;\n   public description: () => string;\n   public input: InputPropertyData[] = [];\n   public output: OutputPropertyData[] = [];\n   public services: any[] = [];\n   public pageTypeName: string;\n\n   public inputByName(name: string): InputPropertyData {\n      let index = this.input.findIndex((item) => item.name == name);\n      return index != -1 ? this.input[index] : null;\n   }\n\n   public inputBySelector(selector: string): InputPropertyData {\n      let index = this.input.findIndex((item) => item.selector == selector);\n      return index != -1 ? this.input[index] : null;\n   }\n\n   public outputByName(name: string): OutputPropertyData {\n      let index = this.output.findIndex((item) => item.name == name);\n      return index != -1 ? this.output[index] : null;\n   }\n\n   public outputBySelector(selector: string): OutputPropertyData {\n      let index = this.output.findIndex((item) => item.selector == selector);\n      return index != -1 ? this.output[index] : null;\n   }\n\n}\n\n","/* Copyright 2017-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {\n   AfterViewInit,\n   ChangeDetectorRef,\n   Component,\n   ComponentFactoryResolver,\n   forwardRef,\n   Input,\n   OnInit,\n   ViewChild} from \"@angular/core\";\nimport {Logger} from \"../../util/logger\";\nimport {VsanUiUtils} from \"../../util/vsan-util\";\nimport {PageHostDirective} from \"./page-host.directive\";\nimport {PageItem} from \"./page-item\";\n\n/**\n * The container for a wizard page.\n * Manages page description, busy indicator and validation messages.\n */\n@Component({\n   selector: 'vsan-flow-page-container',\n   templateUrl: 'page-container.html',\n   styleUrls: ['page-container.scss']\n})\nexport class PageContainer implements OnInit, AfterViewInit {\n\n   @Input()\n   page: PageItem;\n\n   description: string;\n   /**\n    * The host page content holding the wizard page views\n    */\n   @ViewChild(forwardRef(() => PageHostDirective), {static: true}) pageContentHost: PageHostDirective;\n\n   constructor(private factoryResolver: ComponentFactoryResolver, private detector: ChangeDetectorRef) {}\n\n   public ngOnInit(): void {\n      // loads the page dynamically from its component\n      if (this.page.pageComponent) {\n         Logger.log(\"Loading page: \" + this.page.pageComponent.name);\n         let componentFactory = this.factoryResolver.resolveComponentFactory(this.page.pageComponent);\n         let viewContainerRef = this.pageContentHost.viewContainerRef;\n         if (viewContainerRef.length > 0) {\n            viewContainerRef.remove(0);\n         }\n         let pageRef = viewContainerRef.createComponent(componentFactory);\n         this.page.viewInstance = pageRef.instance;\n\n         if (this.page.metadata.description) {\n            // TODO: Look through the whole wizard context, not only page input\n            let data = this.page.pageInput;\n            let func: Function = this.page.metadata.description;\n            let paramNames: string[] = VsanUiUtils.getParamNames(func);\n            let params = this.collectParams(paramNames, data);\n\n            if (params) {\n               this.description = func.apply(func, params);\n            } else {\n               this.page.onWire.subscribe(((input) => {\n                  params = this.collectParams(paramNames, input);\n                  if (params) {\n                     this.description = func.call(func, params);\n                  }\n               }));\n            }\n         }\n      }\n   }\n\n   ngAfterViewInit() {\n      // To fix the 'ExpressionChangedAfterItHasBeenCheckedError', details check below:\n      // https://blog.angularindepth.com/everything-you-need-to-know-about-the-expressionchangedafterithasbeencheckederror-error-e3fd9ce7dbb4\n      this.detector.detectChanges();\n   }\n\n   private collectParams(names: string[], data: any): any[] {\n      let result = [];\n      for (let name of names) {\n         if (data.hasOwnProperty(name)) {\n            result.push(data[name]);\n         } else {\n            return null;\n         }\n      }\n      return result;\n   }\n\n   public closeWizard() {\n      VsanUiUtils.closeModalDialog();\n   }\n}\n","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"wizard-nav\">\n   <h3 id=\"wizard-title\">\n      {{title}}\n   </h3>\n   <div role=\"tablist\" [attr.aria-label]=\"'vsan.common.wizard.navigation' | localized: title\">\n      <div *ngFor=\"let item of pages; let stepNumber = index\" class=\"nav-item\" [ngClass]=\"navClass(item)\">\n         <!--Set button tabindex to make sure that only the selected tab is in the page Tab sequence.-->\n         <button id=\"{{item.pageComponent.name + FlowWizardNavComponent.NAV_BUTTON_ID_SUFFIX}}\"\n                 [attr.aria-controls]=\"item.pageComponent.name\"\n                 class=\"btn btn-link item-button\"\n                 (click)=\"onPageClick(stepNumber)\"\n                 [disabled]=\"isDisabled(item)\"\n                 role=\"tab\"\n                 [attr.aria-selected]=\"item.index === visiblePage\"\n                 [attr.aria-current]=\"item.index === visiblePage\"\n                 [attr.aria-label]=\"getScreenReaderLabel(stepNumber, item)\"\n                 [attr.tabindex]=\"item.index === visiblePage ? 0 : -1\"\n                 (keyup.arrowLeft)=\"focusOn(stepNumber-1)\"\n                 (keyup.arrowRight)=\"focusOn(stepNumber+1)\"\n                 (keyup.enter)=\"onPageClick(stepNumber)\"\n                 (keyup.space)=\"onPageClick(stepNumber)\"\n                 (keyup.home)=\"focusOn(0)\"\n                 (keyup.end)=\"focusOn(activePage)\">\n            <span class=\"item-number\">{{stepNumber+1}}</span>\n            <span id=\"item-label-{{stepNumber+1}}\">{{item.metadata.title}}</span>\n         </button>\n      </div>\n   </div>\n</div>\n","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<!-- placeholder page view -->\n<vsan-flow-page-container id=\"placeholderPage\"\n                          *ngIf=\"visiblePage == -1\"\n                          [page]=\"placeholderPage\">\n</vsan-flow-page-container>\n\n<!-- real page view -->\n<ng-container *ngIf=\"visiblePage > -1\">\n   <ng-container *ngFor=\"let item of pages\">\n         <vsan-flow-page-container id=\"{{item.pageComponent.name}}\"\n                                   role=\"tabpanel\"\n                                   [attr.aria-labelledby]=\"item.pageComponent.name + FlowWizardNavComponent.NAV_BUTTON_ID_SUFFIX\"\n                                   *ngIf=\"item.index <= activePage\"\n                                   [hidden]=\"item.index != visiblePage\"\n                                   [page]=\"item\">\n         </vsan-flow-page-container>\n   </ng-container>\n</ng-container>\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {FlowWizardComponent} from \"@component/wizard/flow-wizard.component\";\nimport {PageContainer} from \"@component/wizard/page-container.component\";\nimport {PageHostDirective} from \"@component/wizard/page-host.directive\";\nimport {FlowWizardBodyComponent} from \"@component/wizard/flow-wizard-body.component\";\nimport {FlowWizardFooterComponent} from \"@component/wizard/flow-wizard-footer.component\";\nimport {FlowWizardNavComponent} from \"@component/wizard/flow-wizard-nav.component\";\nimport {SummaryPageEntryComponent} from \"@component/wizard/wizard-summary-entry.component\";\nimport {SummaryPageCategoryComponent} from \"@component/wizard/wizard-summary-category.component\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\n\n@NgModule({\n   imports: [\n      A11yModule,\n      CommonModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n      CommonDirectiveModule\n   ],\n   declarations: [\n      FlowWizardComponent,\n      FlowWizardBodyComponent,\n      PageContainer,\n      PageHostDirective,\n      FlowWizardFooterComponent,\n      FlowWizardNavComponent,\n      SummaryPageEntryComponent,\n      SummaryPageCategoryComponent,\n   ],\n   exports: [\n      FlowWizardComponent,\n      SummaryPageEntryComponent,\n      SummaryPageCategoryComponent,\n   ],\n})\nexport class FlowWizardModule {\n}\n","<!--Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<!-- page header -->\n<div class=\"page-header\">\n   <div class=\"title-container\">\n      <h3 id=\"vsan-wizard-page-title\" class=\"title\" vsan-auto-focus>\n         {{page.metadata.title}}\n      </h3>\n      <button id=\"closeBtn\" class=\"close\" (click)=\"closeWizard()\"\n              [attr.aria-label]=\"'vsan.common.closeWizard'|localized: page.metadata.title\">\n         <clr-icon shape=\"close\" size=\"24\" title=\"{{'vsan.common.srMessage.close' | localized}}\"></clr-icon>\n      </button>\n   </div>\n   <h6 id=\"pageInfo\"\n       *ngIf=\"description\"\n       [ngClass]=\"page.busyMessage ? 'page-info-disabled' : ''\"\n       [innerHTML]=\"description\">\n   </h6>\n</div>\n\n<!-- Content of active page goes in here -->\n<div class=\"page-body\"\n     #pageContainer\n     role=\"group\"\n     [attr.aria-label]=\"page.metadata.title\">\n\n   <vsan-validation *ngIf=\"page?.errors?.length > 0\"\n                    [alerts]=\"page.errors\"\n                    (onClosed)=\"page.clearValidationErrors()\">\n   </vsan-validation>\n\n   <!-- busy indicator -->\n   <span class=\"busy-backdrop\" *ngIf=\"page.busyMessage\">\n      <span class=\"spinner spinner-lg central-spinner\"></span>\n   </span>\n\n   <!-- page view -->\n   <ng-template page-host></ng-template>\n</div>\n"],"sourceRoot":"webpack:///"}