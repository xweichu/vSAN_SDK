{"version":3,"sources":["webpack:///src/app/vsan/file-services/shared/file-services-common.module.ts","webpack:///src/app/vsan/services/service.utils.ts","webpack:///src/app/vsan/file-services/shared/share-net-permission.component.ts","webpack:///src/app/vsan/file-services/shared/share-net-permission.html"],"names":["FileServicesCommonModule","ServiceUtils","option","supported","getString","enabledStateLabel","serviceStatus","ENABLED","Enabled","PARTIAL","Partial","Disabled","status","DISABLED","NOT_SUPPORTED","getActionTitleByServiceStatus","getServiceStatus","ShareNetPermissionComponent","PERMISSION_SEPARATOR","AccessType","permission","chunks","isReadonly","push","isWriteAllowed","isRootSquashed","length","join"],"mappings":"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","file":"89-es5.js","sourcesContent":["/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {FileServicesOvfSettings} from \"./file-services-ovf-settings.component\";\nimport {ShareNetPermissionComponent} from \"./share-net-permission.component\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {EditFileAnalyticsComponent} from \"./edit-file-analytics.component\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {EditShareFileAnalyticsComponent} from \"./edit-share-file-analytics.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      CommonPipeModule,\n      FormsModule,\n      ValidationModule,\n   ],\n   declarations: [\n      FileServicesOvfSettings,\n      ShareNetPermissionComponent,\n      EditFileAnalyticsComponent,\n      EditShareFileAnalyticsComponent,\n   ],\n   exports: [\n      FileServicesOvfSettings,\n      ShareNetPermissionComponent,\n      EditFileAnalyticsComponent,\n      EditShareFileAnalyticsComponent\n   ],\n})\nexport class FileServicesCommonModule {\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanServiceStatus} from \"@generated/vsan-service-status\";\nimport {Status} from \"@component/card/status\";\n\n/**\n * Utility methods for services.\n */\nexport class ServiceUtils {\n\n   static geStatusLabel(option: boolean, supported: boolean): string {\n      if (!supported) {\n         return VsanUiUtils.getString(\"vsan.services.not.supported\");\n      }\n      return ServiceUtils.enabledStateLabel(option);\n   }\n\n   static enabledStateLabel(option: boolean): string {\n      return option ? VsanUiUtils.getString(\"vsan.services.enabled\") :\n            VsanUiUtils.getString(\"vsan.services.disabled\");\n   }\n\n   static getServiceStatus(serviceStatus: VsanServiceStatus): Status {\n      switch (serviceStatus) {\n         case VsanServiceStatus.ENABLED:\n            return Status.Enabled;\n         case VsanServiceStatus.PARTIAL:\n            return Status.Partial;\n         default:\n            return Status.Disabled;\n      }\n   }\n\n   static isEnabled(status: VsanServiceStatus): boolean {\n      return status === VsanServiceStatus.ENABLED;\n   }\n\n   static isDisabled(status: VsanServiceStatus): boolean {\n      return status === VsanServiceStatus.DISABLED;\n   }\n\n   static isSupported(status: VsanServiceStatus): boolean {\n      return status !== VsanServiceStatus.NOT_SUPPORTED;\n   }\n\n   static getActionTitle(status: VsanServiceStatus): string {\n      return VsanUiUtils.getActionTitleByServiceStatus(this.getServiceStatus(status));\n   }\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {VsanFileServiceShareConfig} from \"@generated/vsan-file-service-share-config\";\nimport {VsanFileServiceShareNetPermission} from \"@generated/vsan-file-service-share-net-permission\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanFileServiceShareAccessType} from \"@generated/vsan-file-service-share-access-type\";\n\n@Component({\n   selector: \"vsan-file-share-net-permission\",\n   templateUrl: \"share-net-permission.html\",\n   styleUrls: [\"share-net-permission.scss\"]\n})\nexport class ShareNetPermissionComponent {\n   private readonly PERMISSION_SEPARATOR: string = \"/\";\n\n   @Input()\n   shareConfig: VsanFileServiceShareConfig;\n\n   AccessType = VsanFileServiceShareAccessType;\n\n   convertNetPermissionsToText(permission: VsanFileServiceShareNetPermission): string {\n      if (!permission) {\n         return VsanUiUtils.getString(\"vsan.fileservices.shares.create.noaccess\");\n      }\n\n      const chunks: string[] = [];\n\n      if (permission.isReadonly) {\n         chunks.push(VsanUiUtils.getString(\"vsan.fileservices.shares.create.read\"));\n      }\n\n      if (permission.isWriteAllowed) {\n         chunks.push(VsanUiUtils.getString(\"vsan.fileservices.shares.create.write\"));\n      }\n\n      if (permission.isRootSquashed) {\n         chunks.push(VsanUiUtils.getString(\"vsan.fileservices.shares.create.rootSquash\"));\n      }\n      return chunks.length ? chunks.join(this.PERMISSION_SEPARATOR) :\n            VsanUiUtils.getString(\"vsan.fileservices.shares.create.noaccess\");\n   }\n}\n","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<span *ngIf=\"shareConfig.accessType == AccessType.ALL_ACCESS\">\n   {{\"vsan.fileservices.shares.create.allowAllAccess\" | localized}}\n</span>\n\n<span *ngIf=\"shareConfig.accessType == AccessType.NO_ACCESS\">\n   {{\"vsan.fileservices.shares.create.allowNoAccess.warning\" | localized}}\n</span>\n\n<table class=\"table\" *ngIf=\"shareConfig.accessType == AccessType.CUSTOM_ACCESS\">\n   <thead>\n      <tr>\n         <th class=\"left\" scope=\"col\">{{\"vsan.fileservices.shares.create.ipSet\" | localized}}</th>\n         <th class=\"left\" scope=\"col\">{{\"vsan.fileservices.shares.create.permission\" | localized}}</th>\n      </tr>\n   </thead>\n   <tbody>\n      <tr *ngFor=\"let permission of shareConfig.netPermissions;\">\n         <td class=\"left\">\n            {{permission.ipAddress}}\n         </td>\n         <td class=\"left\">\n            {{convertNetPermissionsToText(permission)}}\n         </td>\n      </tr>\n   </tbody>\n</table>\n"]}