{"version":3,"sources":["./src/app/vsan/common/util/reactive-form-util.ts","./src/app/generated/vsan-iscsi-auth-spec.ts","./src/app/vsan/common/component/iscsi-authentication/authentication.component.ts","./src/app/vsan/common/component/iscsi-authentication/authentication.module.ts","./src/app/vsan/common/component/iscsi-authentication/authentication.html","./src/app/vsan/common/directive/reactive-forms/disable-control.directive.ts"],"names":[],"mappings":"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","file":"57-es2015.js","sourcesContent":["/* Copyright 2017 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {FormArray, FormControl, FormGroup} from \"@angular/forms\";\n\nexport class ReactiveFormUtil {\n\n   private static readonly FORM_CONTROLS_DELIMITER: string = \".\";\n\n   /*\n    * Trigger validation on all controls in a form group and mark them as touched to display errors\n    */\n   static validateAllFormFields = (formGroup: FormGroup): void => {\n      formGroup.markAsTouched();\n      Object.keys(formGroup.controls).forEach(field => {\n         const control = formGroup.get(field);\n         control.markAsTouched({ onlySelf: true });\n         if (control instanceof FormGroup) {\n            ReactiveFormUtil.validateAllFormFields(control);\n         } else if (control instanceof FormArray) {\n            control.controls.forEach(\n                  (childControl: FormGroup) => ReactiveFormUtil.validateAllFormFields(childControl));\n         } else if (control instanceof FormControl) {\n            ReactiveFormUtil.validateControls([control]);\n         }\n      });\n   };\n\n   static validateControls = (controls: FormControl[]): void => {\n      controls.forEach((control) => {\n         control.markAsTouched({onlySelf: true});\n         control.updateValueAndValidity({\n            onlySelf: false,\n            emitEvent: true\n         });\n      });\n   };\n\n   /**\n    * Trigger updateValueAndValidity() to call ValidatorFn and update validity of all controls in a form group.\n    */\n   static updateFormControlsValueAndValidity = (formGroup: FormGroup) => {\n      Object.keys(formGroup.controls).forEach(control => {\n         if (formGroup.get(control) instanceof FormControl) {\n            formGroup.get(control).updateValueAndValidity();\n         }\n      })\n   };\n\n   static getFormControlPath = (...parts: string[]): string => {\n      return parts.join(ReactiveFormUtil.FORM_CONTROLS_DELIMITER);\n   };\n}\n","\nexport interface VsanIscsiAuthSpec {\n\n   authType: string;\n   initiatorUsername: string;\n   initiatorSecret: string;\n   targetUsername: string;\n   targetSecret: string;\n} //class VsanIscsiAuthSpec\n\nexport module VsanIscsiAuthSpec{\nexport class Factory {\n\n   static create = (authType: string, initiatorUsername: string, initiatorSecret: string, targetUsername: string, targetSecret: string): VsanIscsiAuthSpec => {\n      return { authType: authType, initiatorUsername: initiatorUsername, initiatorSecret: initiatorSecret, targetUsername: targetUsername, targetSecret: targetSecret, };\n   }\n\n\n} //class Factory\n\n} //module VsanIscsiAuthSpec\n","/* Copyright 2017-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Output} from \"@angular/core\";\nimport {\n   AbstractControl,\n   ControlValueAccessor,\n   FormBuilder, FormControl, FormGroup,\n   NG_VALIDATORS, NG_VALUE_ACCESSOR,\n   ValidationErrors,\n   Validator, ValidatorFn\n} from \"@angular/forms\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanIscsiUtil} from \"@util/vsan-iscsi-util\";\nimport {VsanIscsiAuthSpec} from \"@generated/vsan-iscsi-auth-spec\";\nimport {VsanIscsiTargetConfig} from \"@generated/vsan-iscsi-target-config\";\nimport IscsiTargetAuthType = VsanIscsiTargetConfig.IscsiTargetAuthType;\nimport {ReactiveFormUtil} from \"@util/reactive-form-util\";\n\n@Component({\n   selector: \"vsan-authentication\",\n   templateUrl: \"authentication.html\",\n   styleUrls: [\"authentication.scss\"],\n   providers: [\n      {\n         provide: NG_VALUE_ACCESSOR,\n         multi: true,\n         useExisting: AuthenticationComponent\n      },\n      {\n         provide: NG_VALIDATORS,\n         multi: true,\n         useExisting: AuthenticationComponent\n      }\n   ],\n   host: {\n      // Announce messages for screen reader users when showing incoming/outgoing CHAP information.\n      \"aria-live\": \"polite\"\n   }\n})\nexport class AuthenticationComponent implements ControlValueAccessor, Validator {\n   private static readonly SECRET_PLACEHOLDER: string = \"••••••••\";\n   private static readonly VALID_USERNAME_PATTERN: RegExp = /^([a-zA-Z0-9][a-zA-Z0-9_\\-.@\\\\:]*)$/;\n   private static readonly VALID_SECRET_PATTERN: RegExp =\n         /^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#\\\\$%\\\\^&\\\\*]).{12,16}$/;\n\n   availableAuthTypes: any[] = VsanIscsiUtil.AUTHENTICATION_TYPES;\n\n   private onTouched: any;\n\n   private originalAuthSpec: VsanIscsiAuthSpec;\n   isDisabled: boolean;\n   authForm: FormGroup;\n\n   @Output()\n   authTypeChange: EventEmitter<IscsiTargetAuthType> = new EventEmitter<IscsiTargetAuthType>();\n\n   constructor(private formBuilder: FormBuilder) {\n      this.authForm = this.formBuilder.group({\n         authType: new FormControl({disabled: this.isDisabled}),\n         targetUsername: new FormControl(\"\", [\n               this.validateTargetUsername()\n         ]),\n         targetSecret: new FormControl(\"\", [\n               this.validateTargetPassword()\n         ]),\n         initiatorUsername: new FormControl(\"\", [\n               this.validateInitiatorUsername()\n         ]),\n         initiatorSecret: new FormControl(\"\", [\n               this.validateInitiatorSecret()\n         ])\n      });\n   }\n\n   writeValue(controlValue: any): void {\n      let authSpec: VsanIscsiAuthSpec = controlValue;\n      if (!authSpec) {\n         authSpec = VsanIscsiAuthSpec.Factory.create(\n               IscsiTargetAuthType.NoAuth.toString(), null, null, null, null);\n      }\n      // Keep the original value for validation checks later on\n      this.originalAuthSpec = authSpec;\n\n      // Update the form values\n      this.authForm.setValue({\n         authType: IscsiTargetAuthType[this.originalAuthSpec.authType],\n         targetUsername: this.originalAuthSpec.targetUsername,\n         targetSecret: this.originalAuthSpec.targetSecret,\n         initiatorUsername: this.originalAuthSpec.initiatorUsername,\n         initiatorSecret: this.originalAuthSpec.initiatorSecret\n      }, {emitEvent: false}); // Avoid emitting initial event\n      // Trigger auth change event for parent component\n      this.authTypeChange.emit(this.getAuthType());\n   }\n\n   registerOnChange(fn: (value: any) => void) {\n      this.authForm.valueChanges.subscribe(value => {\n         // Update the value of the component to match the expected model of type VsanIscsiAuthSpec\n         fn(this.createAuthSpec());\n      });\n   }\n\n   registerOnTouched(fn: (value: any) => void) {\n      this.onTouched = fn;\n   }\n\n   setDisabledState(isDisabled: boolean) {\n      this.isDisabled = isDisabled;\n      isDisabled ? this.authForm.disable({ emitEvent: false }) : this.authForm.enable({ emitEvent: false });\n   }\n\n   onBlur = () => {\n      this.onTouched();\n      ReactiveFormUtil.updateFormControlsValueAndValidity(this.authForm);\n   };\n\n   onAuthChange() {\n      if (!!this.originalAuthSpec &&\n            this.getAuthType() == IscsiTargetAuthType[this.originalAuthSpec.authType]) {\n         this.restoreAuthData();\n      } else {\n         this.cleanAuthData();\n      }\n      ReactiveFormUtil.updateFormControlsValueAndValidity(this.authForm);\n      this.authTypeChange.emit(this.getAuthType());\n   }\n\n   private restoreAuthData = () => {\n      if (this.getAuthType() == IscsiTargetAuthType.CHAP\n            || this.getAuthType() == IscsiTargetAuthType.CHAP_Mutual) {\n         this.authForm.patchValue({\n            targetUsername: this.originalAuthSpec.targetUsername,\n            targetSecret: this.originalAuthSpec.targetSecret\n         });\n      }\n      if (this.getAuthType() == IscsiTargetAuthType.CHAP_Mutual) {\n         this.authForm.patchValue({\n            initiatorUsername: this.originalAuthSpec.initiatorUsername,\n            initiatorSecret: this.originalAuthSpec.initiatorSecret\n         });\n      }\n   };\n\n   private cleanAuthData = () => {\n      this.authForm.patchValue({\n         targetUsername: null,\n         targetSecret: null,\n         initiatorUsername: null,\n         initiatorSecret: null\n      });\n   };\n\n   validate(ctrl: AbstractControl): ValidationErrors {\n      return this.authForm && this.authForm.touched && this.authForm.invalid ?\n            {'invalidAuthSettings' : { value: ctrl.value}} :\n            null;\n   }\n\n   validateTargetUsername(): ValidatorFn {\n      return (ctrl: AbstractControl): ValidationErrors | null => {\n         if (!this.authForm || this.isOriginalAuthData()) {\n            return null;\n         }\n\n         if ((this.getAuthType() == IscsiTargetAuthType.CHAP\n               || this.getAuthType() == IscsiTargetAuthType.CHAP_Mutual)\n               && !this.isValidUsername(this.getTargetUser())) {\n               return {'invalidTargetUser': {value: ctrl.value}};\n         }\n         return null;\n      };\n   }\n\n   validateTargetPassword(): ValidatorFn {\n      return (ctrl: AbstractControl): ValidationErrors | null => {\n         if (!this.authForm || this.isOriginalAuthData()) {\n            return null;\n         }\n\n         if ((this.getAuthType() == IscsiTargetAuthType.CHAP\n               || this.getAuthType() == IscsiTargetAuthType.CHAP_Mutual)\n               && !this.isValidSecret(this.getTargetPassword())) {\n            return {'invalidTargetSecret': {value: ctrl.value}};\n         }\n         return null;\n      };\n   }\n\n   validateInitiatorUsername(): ValidatorFn {\n      return (ctrl: AbstractControl): ValidationErrors | null => {\n         if (!this.authForm || this.isOriginalAuthData()) {\n            return null;\n         }\n\n         if (this.getAuthType() == IscsiTargetAuthType.CHAP_Mutual\n               && !this.isValidUsername(this.getInitiatorUser())) {\n            return {'invalidInitiatorUsername': {value: ctrl.value}};\n         }\n         return null;\n      };\n   }\n\n   validateInitiatorSecret(): ValidatorFn {\n      return (ctrl: AbstractControl): ValidationErrors | null => {\n         if (!this.authForm || this.isOriginalAuthData()) {\n            return null;\n         }\n\n         if (this.getAuthType() == IscsiTargetAuthType.CHAP_Mutual\n               && (!this.isValidSecret(this.getInitiatorPassword())\n                     || this.getTargetPassword() == this.getInitiatorPassword())) {\n            return {'invalidInitiatorSecret': {value: ctrl.value}};\n         }\n         return null;\n      };\n   }\n\n   private isOriginalAuthData = (): boolean => {\n      if (this.getAuthType().toString() !== this.originalAuthSpec.authType) {\n         return false;\n      }\n      switch (this.getAuthType()) {\n         case IscsiTargetAuthType.CHAP:\n            return this.getTargetUser() === this.originalAuthSpec.targetUsername\n                  && !this.getTargetPassword();\n         case IscsiTargetAuthType.CHAP_Mutual:\n            return this.getTargetUser() === this.originalAuthSpec.targetUsername\n                  && !this.getTargetPassword() &&\n                  this.getInitiatorUser() === this.originalAuthSpec.initiatorUsername\n                  && !this.getInitiatorPassword();\n         default:\n            return true;\n      }\n   };\n\n   private isValidUsername = (username: string): boolean => {\n      return username !== null && AuthenticationComponent.VALID_USERNAME_PATTERN.test(username);\n   };\n\n   private isValidSecret = (secret: string): boolean => {\n      return AuthenticationComponent.VALID_SECRET_PATTERN.test(secret) && secret == secret.trim();\n   };\n\n   /**\n    * If the authentication data is changed, return new authentication data.\n    * Otherwise, return null.\n    */\n   private createAuthSpec = (): VsanIscsiAuthSpec => {\n      if (this.isOriginalAuthData()) {\n         return null;\n      }\n\n      const authSpec: VsanIscsiAuthSpec = VsanIscsiAuthSpec.Factory.create(\n            this.getAuthType().toString(), null, null, null, null);\n      if (this.getAuthType() === IscsiTargetAuthType.CHAP || this.getAuthType() === IscsiTargetAuthType.CHAP_Mutual) {\n         authSpec.targetUsername = this.getTargetUser();\n         authSpec.targetSecret = this.getTargetPassword();\n      }\n      if (this.getAuthType() === IscsiTargetAuthType.CHAP_Mutual) {\n         authSpec.initiatorUsername = this.getInitiatorUser();\n         authSpec.initiatorSecret = this.getInitiatorPassword();\n      }\n      return authSpec;\n   };\n\n   private getAuthType(): IscsiTargetAuthType {\n      return this.authForm.get('authType').value;\n   }\n\n   private getTargetUser(): string {\n      return this.authForm.get('targetUsername').value;\n   }\n\n   private getTargetPassword(): string {\n      return this.authForm.get('targetSecret').value;\n   }\n\n   private getInitiatorUser(): string {\n      return this.authForm.get('initiatorUsername').value;\n   }\n\n   private getInitiatorPassword(): string {\n      return this.authForm.get('initiatorSecret').value;\n   }\n\n   get secretPlaceholder() {\n      if (this.isOriginalAuthData()) {\n         return AuthenticationComponent.SECRET_PLACEHOLDER;\n      }\n      return this.originalAuthSpec.authType === this.getAuthType().toString() ?\n            VsanUiUtils.getString(\"vsan.configure.iscsiTargets.target.dialog.secret.placeholder\") : \"\";\n   }\n\n   get incomingFieldsVisible(): boolean {\n      return this.getAuthType() == IscsiTargetAuthType.CHAP\n            || this.getAuthType() == IscsiTargetAuthType.CHAP_Mutual;\n   }\n\n   get outgoingFieldsVisible(): boolean {\n      return this.getAuthType() == IscsiTargetAuthType.CHAP_Mutual;\n   }\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {AuthenticationComponent} from \"@component/iscsi-authentication/authentication.component\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      ClarityModule,\n      CommonDirectiveModule,\n      CommonPipeModule,\n   ],\n   declarations: [\n      AuthenticationComponent\n   ],\n   exports: [\n      AuthenticationComponent\n   ]\n})\nexport class IscsiAuthenticationModule {\n}","<!-- Authentication -->\n<ng-container [formGroup]=\"authForm\">\n   <clr-select-container>\n      <label for=\"auth-selector\" class=\"clr-col-12 clr-col-md-4\">\n         {{'vsan.configure.iscsiTargets.target.dialog.auth' | localized}}\n      </label>\n      <select clrSelect\n              id=\"auth-selector\"\n              class=\"clr-col-12 clr-col-md-8\"\n              name=\"auth-selector\"\n              formControlName=\"authType\"\n              (change)=\"onAuthChange()\"\n              [vsan-disable-form-control]=\"isDisabled\">\n         <option *ngFor=\"let auth of availableAuthTypes\"\n                 [ngValue]=\"auth.id\">\n            {{auth.label}}\n         </option>\n      </select>\n   </clr-select-container>\n\n   <ng-container *ngIf=\"incomingFieldsVisible\">\n      <!-- Incoming user -->\n      <clr-input-container>\n         <label for=\"incoming-username-input\" class=\"clr-col-12 clr-col-md-4\">\n            {{\"vsan.iscsi.action.edit.incomingUserLabel\" | localized}}\n         </label>\n         <input clrInput\n                id=\"incoming-username-input\"\n                class=\"clr-col-12 clr-col-md-8\"\n                name=\"incoming-username-input\"\n                formControlName=\"targetUsername\"\n                (blur)=\"onBlur()\"\n                [vsan-disable-form-control]=\"isDisabled\"/>\n         <clr-control-error id=\"incoming-username-rules\">\n            {{'vsan.configure.iscsiTargets.target.dialog.username.invalid' | localized}}\n            <ul class=\"list\">\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.userName.requirement1\" | localized}}</li>\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.userName.requirement2\" | localized}}</li>\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.userName.requirement3\" | localized}}</li>\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.userName.requirement4\" | localized}}</li>\n            </ul>\n         </clr-control-error>\n      </clr-input-container>\n      <!-- Incoming secret -->\n      <clr-input-container>\n         <label for=\"incoming-secret-input\" class=\"clr-col-12 clr-col-md-4\">\n            {{\"vsan.iscsi.action.edit.incomingSecretLabel\" | localized}}\n         </label>\n         <input clrInput\n                id=\"incoming-secret-input\"\n                class=\"clr-col-12 clr-col-md-8\"\n                name=\"incoming-secret-input\"\n                type=\"password\"\n                formControlName=\"targetSecret\"\n                (blur)=\"onBlur()\"\n                placeholder=\"{{secretPlaceholder}}\"\n                [vsan-disable-form-control]=\"isDisabled\"/>\n         <clr-control-error id=\"incoming-secret-rules\">\n            {{'vsan.configure.iscsiTargets.target.dialog.secret.invalid' | localized}}\n            <ul class=\"list\">\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.secret.requirement1\" | localized}}</li>\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.secret.requirement2\" | localized}}</li>\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.secret.requirement3\" | localized}}</li>\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.secret.requirement4\" | localized}}</li>\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.secret.requirement5\" | localized}}</li>\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.secret.requirement6\" | localized}}</li>\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.secret.requirement7.end\" | localized}}</li>\n            </ul>\n         </clr-control-error>\n      </clr-input-container>\n   </ng-container>\n   <ng-container *ngIf=\"outgoingFieldsVisible\">\n      <!-- Outgoing user -->\n      <clr-input-container>\n         <label for=\"outgoing-username-input\" class=\"clr-col-12 clr-col-md-4\">\n            {{\"vsan.iscsi.action.edit.outgoingUserLabel\" | localized}}\n         </label>\n         <input clrInput\n                id=\"outgoing-username-input\"\n                class=\"clr-col-12 clr-col-md-8\"\n                name=\"outgoing-username-input\"\n                formControlName=\"initiatorUsername\"\n                (blur)=\"onBlur()\"\n                [vsan-disable-form-control]=\"isDisabled\"/>\n         <clr-control-error id=\"outgoing-username-rules\">\n            {{'vsan.configure.iscsiTargets.target.dialog.username.invalid' | localized}}\n            <ul class=\"list\">\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.userName.requirement1\" | localized}}</li>\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.userName.requirement2\" | localized}}</li>\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.userName.requirement3\" | localized}}</li>\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.userName.requirement4\" | localized}}</li>\n            </ul>\n         </clr-control-error>\n      </clr-input-container>\n      <!-- Outgoing secret -->\n      <clr-input-container>\n         <label for=\"outgoing-secret-input\" class=\"clr-col-12 clr-col-md-4\">\n            {{\"vsan.iscsi.action.edit.outgoingSecretLabel\" | localized}}\n         </label>\n         <input clrInput\n                id=\"outgoing-secret-input\"\n                class=\"clr-col-12 clr-col-md-8\"\n                name=\"outgoing-secret-input\"\n                type=\"password\"\n                formControlName=\"initiatorSecret\"\n                (blur)=\"onBlur()\"\n                placeholder=\"{{secretPlaceholder}}\"\n                [vsan-disable-form-control]=\"isDisabled\"/>\n         <clr-control-error id=\"outgoing-secret-rules\">\n            {{'vsan.configure.iscsiTargets.target.dialog.secret.invalid' | localized}}\n            <ul class=\"list\">\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.secret.requirement1\" | localized}}</li>\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.secret.requirement2\" | localized}}</li>\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.secret.requirement3\" | localized}}</li>\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.secret.requirement4\" | localized}}</li>\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.secret.requirement5\" | localized}}</li>\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.secret.requirement6\" | localized}}</li>\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.secret.requirement7.middle\" | localized}}</li>\n               <li>{{\"vsan.configure.iscsiTargets.target.dialog.secret.requirement8\" | localized}}</li>\n            </ul>\n         </clr-control-error>\n      </clr-input-container>\n   </ng-container>\n</ng-container>","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport { NgControl } from '@angular/forms';\nimport {Directive, Input, OnInit} from \"@angular/core\";\n\n/**\n * This directive is used to provide declarative style disabling for angular reactive forms's input elements.\n * This is required since the reactive forms only provide a way to disable them initially,\n * but there is no binding as it seems and subsequent changes to the argument doesn't affect the\n * input's disabled element.\n * Here is a stackoverflow thread with the given issue and some more details on the current approach:\n * https://stackoverflow.com/questions/40494968/reactive-forms-disabled-attribute\n */\n@Directive({\n   selector: \"[vsan-disable-form-control]\"\n})\nexport class DisableControlDirective implements OnInit {\n\n   private isInit: boolean = false;\n\n   constructor( private ngControl : NgControl ) {\n   }\n\n   private _disableControl: boolean;\n\n   @Input(\"vsan-disable-form-control\")\n   set disableControl(value: boolean ) {\n      this._disableControl = value;\n      if (!this.ngControl.control || !this.isInit) {\n         return;\n      }\n      this.setDisabled();\n   }\n\n   get disableControl(): boolean {\n      return this._disableControl;\n   }\n\n   ngOnInit(): void {\n      this.setDisabled();\n      this.isInit = true;\n   }\n\n   private setDisabled(): void {\n      this.disableControl ? this.ngControl.control.disable() : this.ngControl.control.enable();\n   }\n}"],"sourceRoot":"webpack:///"}