{"version":3,"sources":["./src/app/vsan/common/directive/flex-expand/flex-expandable.directive.ts","./src/app/vsan/common/directive/signpost-title/signpost-title.directive.ts","./src/app/vsan/common/component/datagrid/tree-datagrid.module.ts","./src/app/vsan/common/util/modal-builder.ts","./src/app/vsan/common/directive/flex-expand/flex-expandable-anchor.component.ts","./src/app/vsan/supervisorservices/edit/eula-page.component.ts","./src/app/vsan/common/component/action-button/button-title.directive.ts","./src/app/vsan/common/component/popup-list/popup-list.module.ts","./src/app/vsan/common/directive/clr-button-group/clr-button-group-common.directive.ts","./src/app/vsan/supervisorservices/edit/edit-supervisor-service-wizard.component.ts.EditSupervisorServiceWizardComponent.html","./src/app/vsan/supervisorservices/disable/disable-supervisor-service.component.ts","./src/app/vsan/supervisorservices/disable/disable-supervisor-service.html","./src/app/vsan/supervisorservices/edit/eula-page.html","./src/app/vsan/common/component/navigation/vsan-breadcrumb.module.ts","./src/app/vsan/common/component/action-button/button-group.directive.ts","./src/app/vsan/supervisorservices/supervisor-services.module.ts","./src/app/vsan/supervisorservices/list/supervisor-services.component.ts","./src/app/vsan/supervisorservices/edit/settings-page.component.ts","./src/app/vsan/supervisorservices/edit/edit-supervisor-service.component.ts","./src/app/vsan/common/component/inventory/inventory-browser.module.ts","./src/app/vsan/supervisorservices/edit/edit-supervisor-service-wizard.component.ts","./src/app/vsan/supervisorservices/edit/edit-supervisor-service.html","./src/app/vsan/supervisorservices/edit/settings-page.html","./src/app/generated/advanced-setting.ts","./src/app/vsan/supervisorservices/list/supervisor-services.html","./src/app/vsan/common/vsan-common.module.ts","./src/app/vsan/common/component/search/search.module.ts","./src/app/vsan/common/component/action-button/action-button.module.ts"],"names":[],"mappings":"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","file":"108-es2015.js","sourcesContent":["/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {\n   AfterContentInit,\n   ComponentFactory,\n   ComponentFactoryResolver,\n   ComponentRef,\n   Directive,\n   ElementRef,\n   Renderer2,\n   ViewContainerRef\n} from \"@angular/core\";\nimport {FlexExpandableAnchorComponent} from \"./flex-expandable-anchor.component\";\n\n/**\n * When applied on container in flex parent - expands it to fill the parent. If there is content which stays hidden\n * because lack of space displays \"show more...\" link. Clicking on the link the container expands in order to show all\n * content. \"show less...\" link also appears with possibility to collapse the container back to initial state.\n *\n */\n@Directive({\n   selector: \"[vsan-flex-expandable]\",\n   host: {\n      \"[style.overflow]\": \"'hidden'\",\n      \"[style.flex]\": \"'1 1 auto'\",\n      \"[style.position]\": \"'relative'\",\n   }\n})\nexport class FlexExpandableDirective implements AfterContentInit {\n\n   private isOverflow: boolean;\n\n   private initialFlexValue: string;\n\n   constructor(private viewContainerRef: ViewContainerRef,\n         private el:ElementRef<HTMLElement>,\n         private resolver: ComponentFactoryResolver,\n         private renderer: Renderer2) {\n   }\n\n   ngAfterContentInit(): void {\n      setTimeout(() => {\n         // cache the initial flex property value in order to restore them on collapsing\n         this.initialFlexValue = this.el.nativeElement.style.flex;\n         // calculate if there is hidden content\n         this.isOverflow = this.el.nativeElement.scrollHeight > this.el.nativeElement.clientHeight;\n         if (this.isOverflow) {\n            this.addAnchor();\n         }\n      });\n   }\n\n   expand = (doExpand: boolean) => {\n      this.el.nativeElement.style.flex = doExpand ? '0 0 auto' : this.initialFlexValue;\n   }\n\n   private addAnchor(): void {\n      const factory: ComponentFactory<FlexExpandableAnchorComponent> =\n            this.resolver.resolveComponentFactory(FlexExpandableAnchorComponent);\n      const anchorRef: ComponentRef<FlexExpandableAnchorComponent> = this.viewContainerRef.createComponent(factory);\n      const anchor: FlexExpandableAnchorComponent = anchorRef.instance;\n      anchor.expandState.subscribe(isExpanded => this.expand(isExpanded));\n      this.renderer.appendChild(this.el.nativeElement, anchor.element.nativeElement);\n   }\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterViewInit, Directive, ElementRef, Input, Renderer2} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * Attribute directive for setting a custom title to the clr-icon inside a clr-signpost.\n * It also adds aria-label with the same value and aria-expanded=\"false\" to the button, holding the icon.\n * Used for changing the title when a clr-icon is not explicitly added inside a clr-signpost.\n */\n@Directive({\n   selector: \"clr-signpost\",\n})\nexport class SignpostTitleDirective implements AfterViewInit {\n   private readonly BUTTON_TAG_NAME: string = \"button\";\n   private readonly CLR_ICON_TAG_NAME: string = \"clr-icon\";\n\n   private readonly TITLE_ATTRIBUTE: string = \"title\";\n   private readonly ARIA_EXPANDED_ATTRIBUTE: string = \"aria-expanded\";\n   private readonly ARIA_LABEL_ATTRIBUTE: string = \"aria-label\";\n\n   @Input(\"vsan-signpost-title\")\n   signpostTitle: string;\n\n   constructor(private el: ElementRef<HTMLElement>,\n         private renderer: Renderer2) {\n   }\n\n   ngAfterViewInit(): void {\n      if (!this.signpostTitle) {\n         return;\n      }\n\n      const signpostIcon: Element = this.el.nativeElement.getElementsByTagName(this.CLR_ICON_TAG_NAME).item(0);\n      if (signpostIcon) {\n         this.renderer.setAttribute(signpostIcon, this.TITLE_ATTRIBUTE, VsanUiUtils.getString(this.signpostTitle));\n      }\n      const button: Element = this.el.nativeElement.getElementsByTagName(this.BUTTON_TAG_NAME).item(0);\n      if (button) {\n         this.renderer.setAttribute(button, this.ARIA_EXPANDED_ATTRIBUTE, \"false\");\n         this.renderer.setAttribute(button, this.ARIA_LABEL_ATTRIBUTE, VsanUiUtils.getString(this.signpostTitle));\n      }\n   }\n}\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {TreeExpanderComponent} from \"@component/datagrid/tree-expander.component\";\nimport {TreeColumnComponent} from \"@component/datagrid/tree-column.component\";\nimport {EnumeratedFilterComponent} from \"./filter/enumerated-filter.component\";\nimport {EnumeratedFilterItemComponent} from \"./filter/enumerated-filter-item.component\";\nimport {EnumFilterComponent} from \"@component/datagrid/filter/enum-filter.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n   ],\n   declarations: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumeratedFilterComponent,\n      EnumFilterComponent,\n   ],\n   exports: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumFilterComponent,\n   ],\n})\nexport class TreeDatagridModule {\n}\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {environment} from \"@env/environment\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Logger} from \"./logger\";\nimport {WebPlatform} from \"./platform\";\nimport {VsanUiUtils} from \"./vsan-util\";\n\nexport class ModalBuilder {\n\n   static readonly WIDTH: number = 0;\n   static readonly HEIGHT: number = 1;\n\n   static readonly DEFAULT_SIZE: number[] = [1000, 530];\n   static readonly WIZARD_XL: number[] = [1200, 700];\n\n   static readonly APP_URL: string = (environment.repa && environment.repaExtension)\n         ? \"index.html\"\n         : \"/ui/h5-vsan-ui/\";\n\n   private size: number[] = ModalBuilder.DEFAULT_SIZE;\n\n   // When null, the modal dialog will be headless and the docked\n   // view is expected to provide a title bar.\n   private title: string = null;\n\n   private accessibilityTitle: string = null;\n\n   private urlParams: any = {};\n\n   private eventTarget: EventTarget;\n\n   constructor(private appId: string) {\n   }\n\n   setDimensions(dimensions: number[]): ModalBuilder {\n      if (!dimensions || dimensions.length !== 2) {\n         Logger.warn(\"invalid modal dimensions\", dimensions);\n         dimensions = ModalBuilder.DEFAULT_SIZE;\n      }\n      return this.setSize(dimensions[ModalBuilder.WIDTH], dimensions[ModalBuilder.HEIGHT]);\n   }\n\n   setSize(width: number, height: number): ModalBuilder {\n      this.size = [width, height];\n      return this;\n   }\n\n   setUrlParameters(params: any): ModalBuilder {\n      this.urlParams = params;\n      return this;\n   }\n\n   /**\n    * Set to null if the view provides its own title bar\n    */\n   setTitle(title: string): ModalBuilder {\n      this.title = title;\n      return this;\n   }\n\n   setAccessibilityTitle(accessibilityTitle: string): ModalBuilder {\n      this.accessibilityTitle = accessibilityTitle;\n      return this;\n   }\n\n   /**\n    * Set explicit event target if it is changed before opening the modal.\n    * For example when making a preceding request the event target is the XMLHttpRequest object.\n    */\n   setEventTarget(eventTarget: EventTarget): ModalBuilder {\n      this.eventTarget = eventTarget;\n      return this;\n   }\n\n   /**\n    * Opens a modal dialog and returns a promise to collect the result; On close the target element is focused.\n    * @param context - any JS data object, can be retrieved by WebPlatform.getModalContext()\n    * @returns {Promise<any>} - Invoked if the dialog invokes WebPlatform.closeModalDialog(arg)\n    *       with non-null arg. The promise is never rejected.\n    */\n   open(context?: any): Promise<any> {\n      return new Promise<any>((accept) => {\n         VsanUiUtils.pluginContext.targetElement = this.eventTarget ? this.eventTarget :\n               (event && event.target ? event.target : null);\n         VsanUiUtils.pluginContext.modalResultHandler = (data?: any) => {\n            if (typeof data !== \"undefined\") {\n               // Deep copy of the object was required to resolve an issue with object's prototype overriding when\n               // passing complex objects in IE11/Edge; Keep it for safety.\n               accept(JSON.parse(JSON.stringify(data)));\n            } else if (VsanUiUtils.pluginContext.targetElement && VsanUiUtils.pluginContext.targetElement.focus) {\n               // On cancel just focus the target element. Timeout is required as otherwise the focus may be\n               // consumed by the mouse click.\n               setTimeout(() => VsanUiUtils.pluginContext.targetElement.focus(), 100);\n            }\n         };\n\n         let actionUrl: string = `${ModalBuilder.APP_URL}?viewId=${this.appId}`;\n\n         let separator: string = \"?\";\n         for (const param in this.urlParams) {\n            actionUrl += separator + param + \"=\" + this.urlParams[param];\n            separator = \"&\";\n         }\n\n         WebPlatform.openModalDialog(this.title,\n               actionUrl,\n               ManagedObject.contextObjectUid,\n               this.size[0], this.size[1],\n               this.title != null,\n               VsanUiUtils.pluginContext.modalResultHandler /* onClose */,\n               context /* retrieve with Platform.getModalContext() */,\n               this.accessibilityTitle);\n      });\n   }\n\n}\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {Component, ElementRef, EventEmitter, HostBinding, Output} from \"@angular/core\";\n\n/**\n * Helper component used by flex-expandable.directive.ts. Displays an anchor for expand / collapse functionality.\n */\n@Component({\n   templateUrl: \"flex-expandable-anchor.html\",\n   styleUrls: [\"flex-expandable-anchor.scss\"],\n   selector: \"vsan-flex-expandable-anchor\",\n})\nexport class FlexExpandableAnchorComponent {\n\n   private _isExpanded: boolean = false;\n   set isExpanded( value: boolean) {\n      this._isExpanded = value;\n      this.isCollapsedContainer = !value;\n      this.isExpandedContainer = value;\n   }\n\n   get isExpanded(): boolean {\n      return this._isExpanded;\n   }\n\n   @HostBinding(\"class.collapsed-state\")\n   isCollapsedContainer: boolean = !this.isExpanded;\n\n   @HostBinding(\"class.expanded-state\")\n   isExpandedContainer: boolean = this.isExpanded;\n\n   @Output()\n   expandState: EventEmitter<boolean> = new EventEmitter();\n\n   constructor(public element: ElementRef) {}\n\n   expand(isExpanded: boolean): void {\n      this.expandState.emit(isExpanded);\n      this.isExpanded = isExpanded;\n   }\n\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {SupervisorService} from \"@generated/supervisor-service\";\nimport {OnValidate} from \"@component/wizard/flow-wizard.component\";\nimport {InputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\n\n@WizardPage(VsanUiUtils.getString(\"vsan.config.ss.edit.eula.title\"))\n@Component({\n   templateUrl: \"eula-page.html\",\n   styleUrls: [\"eula-page.scss\"]\n})\nexport class EulaPageComponent implements OnValidate {\n\n   @InputProperty()\n   supervisorService: SupervisorService;\n\n   isEulaAccepted: boolean;\n\n   validate(): string[] | Promise<string[]> {\n      return this.isEulaAccepted\n            ? null\n            : [VsanUiUtils.getString(\"vsan.persistence.enable.acceptEula.error\")];\n   }\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Directive, Input, OnInit} from '@angular/core';\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {ClrButton} from \"@clr/angular\";\n\n/**\n * Attribute directive for detecting button title change and storing title.\n * Only used for clr-button in clr-button-group.\n * @title - The title of clr-button\n */\n@Directive({\n   selector: \"clr-button[vsan-button-title]\"\n})\nexport class ButtonTitleDirective implements OnInit {\n\n   constructor(public host: ClrButton) {}\n\n   private _title: string;\n\n   @Input(\"vsan-button-title\")\n   set title(value: string) {\n      if (this._title !== value) {\n         this.titleChange.next(value);\n      }\n      this._title = value;\n   }\n\n   get title(): string {\n      return this._title;\n   }\n\n   private titleChange: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n\n   get titleChangeEvent(): Observable<string> {\n      return this.titleChange.asObservable();\n   }\n\n   ngOnInit(): void {\n      // name should be set, if not provided in template - generate one. ClrButtom#name is used to generate the name\n      // attribute of the markup button. Later the name is used to match the generated markup with the directive.\n      if (!this.host.name) {\n         this.host.name = Math.random().toString();\n      }\n   }\n\n   ngOnDestroy() {\n      this.titleChange.unsubscribe();\n   }\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {PopupListComponent} from \"@component/popup-list/popup-list.component\";\nimport {PopupListItemDirective} from \"@component/popup-list/popup-list-item.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      CommonPipeModule\n   ],\n   declarations: [\n      PopupListComponent,\n      PopupListItemDirective\n   ],\n   exports: [\n      PopupListComponent,\n      PopupListItemDirective\n   ]\n})\nexport class PopupListModule {\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterContentInit, ContentChildren, Directive, ElementRef} from \"@angular/core\";\nimport {ClrButton} from \"@clr/angular\";\nimport {ClrButtonBaseDirective, DirectiveHolder} from \"@directive/clr-button-group/clr-button-base.directive\";\n\n/**\n * Applies on every clr-button-group and help to link the clr-button with directive applieds on it,  which extends\n * {@link ClrButtonBaseDirective}, to the actual rendered html button.\n */\n@Directive({\n   selector: \"clr-button-group\",\n})\nexport class ClrButtonGroupCommonDirective implements AfterContentInit {\n\n   @ContentChildren(ClrButton, {descendants: true})\n   clrButtons: ClrButton[];\n\n   constructor(private elRef: ElementRef) {}\n\n   ngAfterContentInit(): void {\n      setTimeout(() => {\n         const allButtons: NodeListOf<HTMLButtonElement> = this.elRef.nativeElement.querySelectorAll(\"button\");\n         // match button with clrButton and notify directives\n         this.clrButtons.filter(clrButton => !!(clrButton as DirectiveHolder).directives)\n               .forEach((clrButton, index) => {\n                  const buttonFound: HTMLButtonElement = this.findButtonByName(clrButton.name, allButtons);\n                  if (buttonFound) {\n                     (clrButton as DirectiveHolder).directives.forEach(directive => {\n                        directive.resolveButton(clrButton, buttonFound, index);\n                     });\n                  }\n               });\n      });\n   }\n\n   private findButtonByName(name: string, buttons: NodeListOf<HTMLButtonElement>): HTMLButtonElement {\n      for (let i: number = 0; i < buttons.length; i++) {\n         if (buttons.item(i).name === name) {\n            return buttons.item(i);\n         }\n      }\n      return null;\n   }\n\n}","\n      <vsan-flow-wizard\n            [title]=\"'vsan.config.ss.supervisorServices.action.enable.title' | localized\"\n            [pageSets]=\"pages\"\n            [contextProperties]=\"context\"\n            [startingTaskProperty]=\"'updateSupervisorService'\"\n            [services]=\"services\">\n      </vsan-flow-wizard>","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {SupervisorServiceContext} from \"../model/supervisor-service-context\";\nimport {SupervisorService} from \"@generated/supervisor-service\";\nimport {SupervisorNamespaceService} from \"@generated/supervisor-namespace-service\";\n\n@Component({\n   templateUrl: \"disable-supervisor-service.html\",\n   styleUrls: [\"disable-supervisor-service.scss\"],\n   selector: \"vsan-disable-supervisor-service\"\n})\nexport class DisableSupervisorServiceComponent implements OnInit {\n\n   alertMessages: string[] = null;\n   loading: boolean = false;\n   clusterRef: ManagedObject;\n   clusterName: string;\n   supervisorService: SupervisorService;\n\n   constructor(private supervisorNamespaceService: SupervisorNamespaceService) {\n   }\n\n   ngOnInit(): void {\n      const context: SupervisorServiceContext = VsanUiUtils.getModalContext() as SupervisorServiceContext;\n      this.clusterRef = context.clusterRef;\n      this.clusterName = context.clusterName;\n      this.supervisorService = context.supervisorService;\n   }\n\n   apply = () => {\n      this.loading = true;\n      this.supervisorService.isEnabled = false;\n      this.supervisorNamespaceService\n            .updateSupervisorService(this.clusterRef, this.supervisorService)\n            .then(VsanUiUtils.closeModalDialog)\n            .catch(this.handleError);\n   };\n\n   handleError = (error: any) => {\n      this.loading = false;\n      this.alertMessages = [error];\n   };\n}\n","<!-- Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-delete-prompt\n      [title]=\"'vsan.persistence.disable.title' | localized\"\n      [subtitle]=\"clusterName\"\n      [blockButton]=\"loading\"\n      [(alertMessages)]=\"alertMessages\"\n      [confirmText]=\"'vsan.persistence.disable.confirm' | localized\"\n      (onConfirm)=\"apply()\">\n   <div class=\"dialog-container\">\n      <div>{{'vsan.persistence.disable.info' | localized: supervisorService.name}}</div>\n      <div>{{'vsan.persistence.disable.confirmation' | localized: supervisorService.name}}</div>\n   </div>\n</vsan-delete-prompt>\n","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<textarea id=\"eula\"\n          [(ngModel)]=\"supervisorService.eula\"\n          readonly>\n            </textarea>\n<clr-checkbox-wrapper>\n   <input id=\"eula-accept\"\n          type=\"checkbox\"\n          clrCheckbox\n          [(ngModel)]=\"isEulaAccepted\"/>\n   <label>{{'vsan.persistence.enable.acceptEula'|localized}}</label>\n</clr-checkbox-wrapper>\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {VsanBreadcrumbNavComponent} from \"./vsan-breadcrumb-nav.component\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\n\n@NgModule({\n   imports: [CommonModule, ClarityModule, CommonDirectiveModule, CommonPipeModule],\n   declarations: [VsanBreadcrumbNavComponent],\n   exports: [\n      VsanBreadcrumbNavComponent,\n   ],\n})\nexport class VsanBreadcrumbModule {}\n","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ContentChildren, Directive, ElementRef, Input} from \"@angular/core\";\nimport {ClrButton} from \"@clr/angular\";\nimport {ButtonTitleDirective} from \"./button-title.directive\";\n\n/**\n * Attribute directive used to dynamically arrange child buttons, align some horizontally and\n * put the others into the drop-down list, this directive also add title attribute to the buttons.\n * It can only used on clr-button-group and there should be clr-button in the button group.\n * @maximumInlineActions - The maximum value of inline buttons.\n */\n@Directive({\n   selector: \"clr-button-group[vsan-button-group]\",\n})\nexport class ButtonGroupDirective {\n\n   private static readonly TOGGLE_MENU_BUTTON_SELECTOR: string = \"button.btn.dropdown-toggle\";\n   private static readonly VISIBLE_BUTTON_ELEMENTS_SELECTOR: string = \"button\";\n   private static readonly IN_MENU_BUTTON_ELEMENTS_SELECTOR: string = \"div.clr-button-group-menu > button\";\n\n   // Set the maximum value to 10 to display all buttons inline when there is enough space.\n   private _maximumInlineActions: number = 10;\n\n   @Input(\"vsan-button-group\")\n   set maximumInlineActions(value: number) {\n      if (!!value) {\n         this._maximumInlineActions = value;\n      }\n   }\n\n   private _buttonTitleDirectives: ButtonTitleDirective[] = [];\n\n   @ContentChildren(ButtonTitleDirective, {descendants: true})\n   set buttons(value: ButtonTitleDirective[]) {\n      this._buttonTitleDirectives = value;\n      this._buttonTitleDirectives.forEach(titleDirective => {\n         // Update button title when its title in directive changes.\n         titleDirective.titleChangeEvent.subscribe(() => {\n            setTimeout(this.updateButtonTitles);\n         });\n      });\n\n      // when action buttons with directive are changed (added / removed) some of them may go to the menu with\n      // additional actions. There is no other way found to handle toggle menu event, but click on the toggle button.\n      this.subscribeToggleButtonClick();\n   }\n\n   private _btns: ClrButton[];\n\n   @ContentChildren(ClrButton, {descendants: true})\n   set clrButtons(btns: ClrButton[]) {\n      this._btns = btns;\n      this.updateInMenuButtons();\n   }\n\n   constructor(private elRef: ElementRef) {\n   }\n\n   private updateInMenuButtons(): void {\n      const groupWithMenu: boolean = this._btns.length > this._maximumInlineActions;\n      this._btns.forEach((btn, index) => {\n         if (groupWithMenu) {\n            // When the number of buttons exceeds the maximum and the button overflows, place the button in the menu.\n            btn.inMenu = index >= this._maximumInlineActions - 1;\n         } else {\n            btn.inMenu = false;\n         }\n      });\n   }\n\n   private updateButtonTitles = (): void => {\n      const allButtons: HTMLButtonElement[] = this.getVisibleButtons().concat(this.getInMenuButtons());\n      if (!allButtons.length) {\n         return;\n      }\n\n      // if there is a rendered button for the directive - update its title.\n      this._buttonTitleDirectives.forEach(titleDirective => {\n         allButtons.forEach((button: HTMLElement) => {\n            if (button.getAttribute(\"name\") === titleDirective.host.name) {\n               button.title = titleDirective.title;\n            }\n         });\n      });\n   };\n\n   private subscribeToggleButtonClick(): void {\n      // If there is menu with additional buttons, find the toggle button and update button names on click.\n      setTimeout(() => {\n         const toggleButton: HTMLElement | null = this.getToggleButton();\n\n         // if there is a toggle button set function to handle the click event only once.\n         if (toggleButton && !toggleButton.onclick) {\n            toggleButton.onclick = this.updateButtonTitles;\n         }\n      });\n   }\n\n   // the buttons are visible buttons in button group, toggle menu button\n   private getVisibleButtons(): HTMLButtonElement[] {\n      return Array.from(this.elRef.nativeElement.querySelectorAll(\n            ButtonGroupDirective.VISIBLE_BUTTON_ELEMENTS_SELECTOR));\n   }\n\n   // inMenu buttons are rendered outside of the elRef, get them directly from the document\n   private getInMenuButtons(): HTMLButtonElement[] {\n      return Array.from(this.elRef.nativeElement.ownerDocument.querySelectorAll(\n            ButtonGroupDirective.IN_MENU_BUTTON_ELEMENTS_SELECTOR));\n   }\n\n   private getToggleButton(): HTMLElement | null {\n      return this.elRef.nativeElement.querySelector(ButtonGroupDirective.TOGGLE_MENU_BUTTON_SELECTOR);\n   }\n}","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {VsanCommonModule} from \"../common/vsan-common.module\";\nimport {SupervisorServicesComponent} from \"./list/supervisor-services.component\";\nimport {EditSupervisorServiceComponent} from \"./edit/edit-supervisor-service.component\";\nimport {DisableSupervisorServiceComponent} from \"./disable/disable-supervisor-service.component\";\nimport {EditSupervisorServiceWizardComponent} from \"./edit/edit-supervisor-service-wizard.component\";\nimport {EulaPageComponent} from \"./edit/eula-page.component\";\nimport {FlowWizardModule} from \"@component/wizard/flow-wizard.module\";\nimport {SettingsPageComponent} from \"./edit/settings-page.component\";\n\nconst supervisorServicesRoutes: Routes = [\n   {\n      path: \"\",\n      component: SupervisorServicesComponent\n   },\n   {\n      path: \"editDialog\",\n      component: EditSupervisorServiceComponent\n   },\n   {\n      path: \"editWizard\",\n      component: EditSupervisorServiceWizardComponent\n   },\n   {\n      path: \"disable\",\n      component: DisableSupervisorServiceComponent\n   },\n];\n\n@NgModule({\n   imports: [\n      FormsModule,\n      CommonModule,\n      ClarityModule,\n      FlowWizardModule,\n      VsanCommonModule,\n      RouterModule.forChild(supervisorServicesRoutes)\n   ],\n   declarations: [\n      SupervisorServicesComponent,\n      EditSupervisorServiceComponent,\n      EditSupervisorServiceWizardComponent,\n      SettingsPageComponent,\n      EulaPageComponent,\n      DisableSupervisorServiceComponent,\n   ],\n   entryComponents: [\n      EditSupervisorServiceComponent,\n      SettingsPageComponent,\n      EulaPageComponent,\n   ]\n})\nexport class SupervisorServicesModule {\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {SupervisorService} from \"@generated/supervisor-service\";\nimport {SupervisorServicesService} from \"@generated/supervisor-services-service\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {ClusterComputeResource} from \"@service/client/dataservice/data-service-property\";\nimport {DataServiceClient} from \"@service/client/dataservice/data-service.service\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Icon} from \"@util/icon\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {SupervisorServiceContext} from \"../model/supervisor-service-context\";\n\n@Component({\n   templateUrl: \"supervisor-services.html\",\n   styleUrls: [\"supervisor-services.scss\"],\n   selector: \"vsan-all-supervisor-services\",\n})\nexport class SupervisorServicesComponent implements OnInit {\n   Icon: typeof Icon = Icon;\n\n   private static readonly EDIT_DIALOG_WIDTH: number = 670;\n   private static readonly EDIT_DIALOG_HEIGHT: number = 505;\n   private readonly PRIVILEGES: string[] = [Privileges.NAMESPACES_CONFIGURE(), Privileges.NAMESPACES_MANAGE()];\n\n   @LoadingIndicator()\n   loading: boolean;\n   clusterRef: ManagedObject;\n   clusterName: string;\n   selectedService: SupervisorService;\n   services: SupervisorService[];\n   @ErrorMessage()\n   error: string;\n   hasEditPrivileges: boolean;\n\n   private isAirGapSupported: boolean = false;\n\n   constructor(private supervisorServicesService: SupervisorServicesService,\n         private permissionService: PermissionService,\n         private capabilityService: VsanCapabilityProvider,\n         private dataService: DataServiceClient) {\n   }\n\n   ngOnInit(): void {\n      this.clusterRef = ManagedObject.contextObject;\n\n      this.loadClusterProps();\n      this.loadCapabilities();\n      this.loadPermissions();\n      this.loadServices();\n   }\n\n   @Loader()\n   private async loadClusterProps(): Promise<void> {\n      this.clusterName = await this.dataService.getProperty(ClusterComputeResource.name, this.clusterRef);\n   }\n\n   @Loader()\n   private async loadCapabilities(): Promise<void> {\n      this.isAirGapSupported = await this.capabilityService.isPersistenceServiceAirGapSupportedOnVc(this.clusterRef);\n   }\n\n   @Loader()\n   private loadPermissions(): Promise<boolean> {\n      return this.permissionService.hasPermissions(this.clusterRef, this.PRIVILEGES)\n            .then((result: boolean) => this.hasEditPrivileges = result)\n            .catch(() => this.hasEditPrivileges = true);\n   }\n\n   @RefreshHandler\n   @Loader({srMessage: \"vsan.config.ss.supervisorServices\"})\n   private async loadServices(): Promise<void> {\n      this.services = await this.supervisorServicesService.list(this.clusterRef);\n   }\n\n   getStatusLabel(isEnabled: boolean): string {\n      const key: string = isEnabled ? \"vsan.config.ss.supervisorServices.header.status.enabled\" :\n            \"vsan.config.ss.supervisorServices.header.status.disabled\";\n      return VsanUiUtils.getString(key);\n   }\n\n   enable(): void {\n      const context: SupervisorServiceContext = {\n         supervisorService: this.selectedService,\n         clusterRef: this.clusterRef,\n         clusterName: this.clusterName,\n      };\n      if (this.isAirGapSupported) {\n         new ModalBuilder(\"supervisorServices/editWizard\")\n               .setDimensions(ModalBuilder.WIZARD_XL)\n               .open(context)\n               .then(() => this.loadServices());\n      } else {\n         new ModalBuilder(\"supervisorServices/editDialog\")\n               .setSize(SupervisorServicesComponent.EDIT_DIALOG_WIDTH, SupervisorServicesComponent.EDIT_DIALOG_HEIGHT)\n               .open(context)\n               .then(() => this.loadServices());\n      }\n   }\n\n   disable(): void {\n      const context: SupervisorServiceContext = {\n         supervisorService: this.selectedService,\n         clusterRef: this.clusterRef,\n         clusterName: this.clusterName,\n      };\n      new ModalBuilder(\"supervisorServices/disable\")\n            .setSize(600, 260)\n            .open(context)\n            .then(() => this.loadServices());\n   }\n\n   isEnableButtonDisabled(): boolean {\n      return this.selectedService == null\n            || this.selectedService.availableVersions == null\n            || this.selectedService.availableVersions.length === 0\n            || !this.hasEditPrivileges;\n   }\n\n   getEnableButtonTitle(): string {\n      if (!this.hasEditPrivileges) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      }\n\n      if (this.selectedService.availableVersions != null && this.selectedService.availableVersions.length > 0) {\n         return VsanUiUtils.getString(\"vsan.config.ss.supervisorServices.action.enable.title\");\n      }\n\n      return VsanUiUtils.getString(\"vsan.config.ss.supervisorServices.action.enable.title.noVersions\");\n   }\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {SupervisorService} from \"@generated/supervisor-service\";\nimport {InputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {OnValidate, PageControls} from \"@component/wizard/flow-wizard.component\";\nimport {AdvancedSetting} from \"@generated/advanced-setting\";\nimport {Logger} from \"@util/logger\";\nimport {NavigationService} from \"@navigation/navigation.service\";\n\n@WizardPage(VsanUiUtils.getString(\"vsan.config.ss.edit.general.title\"))\n@Component({\n   templateUrl: \"settings-page.html\",\n   styleUrls: [\"settings-page.scss\"],\n})\nexport class SettingsPageComponent implements OnInit, OnValidate {\n\n   readonly KB_PSP_SERVICE_SETTINGS: string = \"https://docs.vmware.com/\";\n   readonly SETTING_KEY_MAX_LENGTH: number = 1048;\n   readonly SETTING_VALUE_MAX_LENGTH: number = 1048;\n   private static readonly MAX_SETTINGS: number = 12;\n\n   @InputProperty()\n   supervisorService: SupervisorService;\n\n   @InputProperty()\n   pageControls: PageControls;\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   ngOnInit() {\n      if (!this.supervisorService.version) {\n         this.supervisorService.version = this.supervisorService.desiredVersion;\n      }\n   }\n\n   validate(): string[] | Promise<string[]> {\n      const errorKeys: string[] = [];\n      if (this.supervisorService.username && VsanUiUtils.isEmpty(this.supervisorService.repo)) {\n         errorKeys.push(\"vsan.persistence.enable.noRepo\");\n      }\n      if (this.supervisorService.password && VsanUiUtils.isEmpty(this.supervisorService.username)) {\n         errorKeys.push(\"vsan.persistence.enable.noUsername\");\n      }\n      const incompleteSettings: boolean = this.supervisorService.advancedSettings\n            .some(setting => VsanUiUtils.isEmpty(setting.key) || VsanUiUtils.isEmpty(setting.value));\n      if (incompleteSettings) {\n         errorKeys.push(\"vsan.persistence.enable.incompleteSettings\");\n      }\n\n      return errorKeys.length\n            ? errorKeys.map(key => VsanUiUtils.getString(key))\n            : null;\n   }\n\n   invalidate() {\n      this.pageControls.rebuildToc();\n   }\n\n   get isAddAllowed(): boolean {\n      return this.supervisorService.advancedSettings.length < SettingsPageComponent.MAX_SETTINGS;\n   }\n\n   get addButtonTooltip(): string {\n      return this.isAddAllowed\n            ? VsanUiUtils.getString(\"vsan.persistence.enable.add.allowed\")\n            : VsanUiUtils.getString(\"vsan.persistence.enable.add.disabled\");\n   }\n\n   addSetting() {\n      if (this.isAddAllowed) {\n         this.supervisorService.advancedSettings.push(AdvancedSetting.Factory.create(\"\", \"\"));\n         this.invalidate();\n      } else {\n         Logger.debug(\"Adding more advanced settings is not allowed.\");\n      }\n   }\n\n   removeSetting(index: number) {\n      this.supervisorService.advancedSettings.splice(index, 1);\n      this.invalidate();\n   }\n}\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {SupervisorServiceContext} from \"../model/supervisor-service-context\";\nimport {SupervisorService} from \"@generated/supervisor-service\";\nimport {SupervisorNamespaceService} from \"@generated/supervisor-namespace-service\";\n\n@Component({\n   templateUrl: \"edit-supervisor-service.html\",\n   styleUrls: [\"edit-supervisor-service.scss\"],\n   selector: \"vsan-edit-supervisor-service\"\n})\nexport class EditSupervisorServiceComponent implements OnInit {\n\n   alertMessages: string[] = null;\n   loading: boolean = false;\n   clusterRef: ManagedObject;\n   clusterName: string;\n   supervisorService: SupervisorService;\n   isEulaAccepted: boolean;\n   version: string;\n\n   constructor(private supervisorNamespaceService: SupervisorNamespaceService) {\n   }\n\n   ngOnInit(): void {\n      const context: SupervisorServiceContext = VsanUiUtils.getModalContext() as SupervisorServiceContext;\n      this.clusterRef = context.clusterRef;\n      this.clusterName = context.clusterName;\n      this.supervisorService = context.supervisorService;\n      if (this.supervisorService.availableVersions.indexOf(this.supervisorService.desiredVersion) !== -1) {\n         // If the desired version is present in the available versions list, preselect it\n         this.version = this.supervisorService.desiredVersion;\n      } else {\n         // Otherwise - preselect the latest one from the list\n         this.version = this.supervisorService.availableVersions[this.supervisorService.availableVersions.length - 1];\n      }\n   }\n\n   apply = () => {\n      this.loading = true;\n      const clone: SupervisorService = VsanUiUtils.deepClone(this.supervisorService);\n      clone.isEnabled = true;\n      clone.version = this.version;\n      this.supervisorNamespaceService\n            .updateSupervisorService(this.clusterRef, clone)\n            .then(VsanUiUtils.closeModalDialog)\n            .catch(this.handleError);\n   };\n\n   handleError = (error: any) => {\n      this.loading = false;\n      this.alertMessages = [error];\n   };\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {InventoryBrowserComponent} from \"@component/inventory/inventory-browser.component\";\nimport {InventoryNodeComponent} from \"@component/inventory/inventory-node.component\";\nimport {WitnessCandidateInventoryService} from \"@generated/witness-candidate-inventory-service\";\nimport {DatacenterInventoryService} from \"@generated/datacenter-inventory-service\";\nimport {NetworkInventoryService} from \"@generated/network-inventory-service\";\nimport {ComputeInventoryService} from \"@generated/compute-inventory-service\";\nimport {IoInsightInventoryService} from \"@generated/io-insight-inventory-service\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {TreeNodeComponent} from \"@component/inventory/tree-view/tree-node.component\";\nimport {TreeViewComponent} from \"@component/inventory/tree-view/tree-view.component\";\nimport {DropdownObjectSelectorComponent} from \"@component/inventory/dropdown-object-selector/dropdown-object-selector.component\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {InventoryNodesComponent} from \"@component/inventory/inventory-nodes.component\";\nimport {TreeNodesComponent} from \"@component/inventory/tree-view/tree-nodes.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule,\n      SearchModule,\n      CommonDirectiveModule,\n   ],\n   declarations: [\n      InventoryBrowserComponent,\n      InventoryNodesComponent,\n      InventoryNodeComponent,\n      TreeNodeComponent,\n      TreeNodesComponent,\n      TreeViewComponent,\n      DropdownObjectSelectorComponent,\n   ],\n   exports: [\n      InventoryBrowserComponent,\n      DropdownObjectSelectorComponent,\n      TreeViewComponent,\n   ],\n   providers: [\n      WitnessCandidateInventoryService,\n      DatacenterInventoryService,\n      NetworkInventoryService,\n      ComputeInventoryService,\n      IoInsightInventoryService,\n   ],\n})\nexport class InventoryBrowserModule {\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {PageSet} from \"@component/wizard/flow-wizard.component\";\nimport {SupervisorNamespaceService} from \"@generated/supervisor-namespace-service\";\nimport {SupervisorServiceContext} from \"../model/supervisor-service-context\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {EulaPageComponent} from \"./eula-page.component\";\nimport {SupervisorServiceWizardContext} from \"../model/supervisor-service-wizard-context\";\nimport {SettingsPageComponent} from \"./settings-page.component\";\nimport {SupervisorService} from \"@generated/supervisor-service\";\n\n@Component({\n   selector: \"vsan-edit-supervisor-service-wizard\",\n   template: `\n      <vsan-flow-wizard\n            [title]=\"'vsan.config.ss.supervisorServices.action.enable.title' | localized\"\n            [pageSets]=\"pages\"\n            [contextProperties]=\"context\"\n            [startingTaskProperty]=\"'updateSupervisorService'\"\n            [services]=\"services\">\n      </vsan-flow-wizard>`,\n})\nexport class EditSupervisorServiceWizardComponent implements OnInit {\n\n   context: SupervisorServiceWizardContext;\n   readonly services: any[] = [SupervisorNamespaceService];\n\n   readonly pages: PageSet[] = [\n      new PageSet([SettingsPageComponent]),\n      new PageSet([EulaPageComponent]),\n   ];\n\n   ngOnInit(): void {\n      const navigationContext: SupervisorServiceContext = VsanUiUtils.getModalContext() as SupervisorServiceContext;\n      if (!navigationContext.supervisorService.advancedSettings) {\n         navigationContext.supervisorService.advancedSettings = [];\n      }\n\n      const clone: SupervisorService = VsanUiUtils.deepClone(navigationContext.supervisorService);\n      clone.isEnabled = true;\n\n      this.context = {\n         clusterRef: navigationContext.clusterRef,\n         supervisorService: clone,\n      };\n   }\n}\n","<!-- Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-default-prompt\n      [title]=\"'vsan.persistence.enable.title' | localized\"\n      [subtitle]=\"clusterName\"\n      [blockButton]=\"loading || !isEulaAccepted || !version\"\n      [(alertMessages)]=\"alertMessages\"\n      (onConfirm)=\"apply()\">\n   <div class=\"dialog-container\">\n      <h4>{{supervisorService.name}}</h4>\n      <div vsan-flex-expandable class=\"description-section\">\n         {{supervisorService.description}}\n      </div>\n      <section class=\"version-section\">\n         <label for=\"version\" class=\"clr-control-label\">{{'vsan.persistence.enable.version'|localized}}</label>\n         <div class=\"select clr-select-wrapper\">\n            <select id=\"version\"\n                    name=\"version\"\n                    class=\"clr-select\"\n                    [(ngModel)]=\"version\">\n               <option *ngFor=\"let v of supervisorService.availableVersions\" [value]=\"v\">{{v}}</option>\n            </select>\n         </div>\n      </section>\n      <section class=\"eula-section\">\n            <label for=\"eula\">{{'vsan.persistence.enable.eula'|localized}}</label>\n            <textarea id=\"eula\"\n                      [(ngModel)]=\"supervisorService.eula\"\n                      readonly>\n            </textarea>\n            <clr-checkbox-wrapper>\n               <input id=\"eula-accept\"\n                      type=\"checkbox\"\n                      clrCheckbox\n                      [(ngModel)]=\"isEulaAccepted\" />\n               <label>{{'vsan.persistence.enable.acceptEula'|localized}}</label>\n            </clr-checkbox-wrapper>\n      </section>\n   </div>\n</vsan-default-prompt>\n","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<form clrForm clrLayout=\"horizontal\">\n   <clr-select-container>\n      <label class=\"clr-col-3 clr-col-sm-3\">{{'vsan.persistence.enable.version'|localized}}</label>\n      <select clrSelect\n              id=\"version\"\n              class=\"clr-col-9 clr-col-sm-9\"\n              name=\"version\"\n              (change)=\"invalidate()\"\n              [(ngModel)]=\"supervisorService.version\">\n         <option *ngFor=\"let v of supervisorService.availableVersions\" [value]=\"v\">{{v}}</option>\n      </select>\n   </clr-select-container>\n\n   <!--   TODO [kaleksandrov] Update vsan-validation component to support external links and switch back to it after the cut off-->\n   <div class=\"alert alert-info\" role=\"alert\">\n      <div class=\"alert-items\">\n         <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n               <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">{{'vsan.persistence.enable.security.warning'|localized}}</span>\n            <div class=\"alert-actions\">\n               <a [external-link] href=\"KB_PSP_SERVICE_SETTINGS\" class=\"alert-action\"></a>\n            </div>\n         </div>\n      </div>\n   </div>\n\n   <clr-input-container>\n      <label class=\"clr-col-3 clr-col-sm-3\">{{'vsan.persistence.enable.repo'|localized}}</label>\n      <input id=\"repo-input\"\n             class=\"clr-col-9 clr-col-sm-9 text-input\"\n             clrInput\n             name=\"repo\"\n             (change)=\"invalidate()\"\n             [(ngModel)]=\"supervisorService.repo\"/>\n   </clr-input-container>\n\n   <clr-input-container>\n      <label class=\"clr-col-3 clr-col-sm-3\">{{'vsan.persistence.enable.username'|localized}}</label>\n      <input id=\"username-input\"\n             clrInput\n             class=\"clr-col-9 clr-col-sm-9 text-input\"\n             name=\"username\"\n             (change)=\"invalidate()\"\n             [(ngModel)]=\"supervisorService.username\"/>\n   </clr-input-container>\n\n   <clr-input-container>\n      <label class=\"clr-col-3 clr-col-sm-3\">{{'vsan.persistence.enable.password'|localized}}</label>\n      <input id=\"password-input\"\n             clrInput\n             type=\"password\"\n             class=\"clr-col-9 clr-col-sm-9 text-input\"\n             name=\"password\"\n             (change)=\"invalidate()\"\n             [(ngModel)]=\"supervisorService.password\"/>\n   </clr-input-container>\n\n   <clr-input-container>\n      <label id=\"advanced-settings-label\"\n             class=\"clr-control-label clr-col-12 clr-col-sm-12\">\n         {{'vsan.persistence.enable.labels'|localized}}\n         <clr-signpost id=\"advanced-settings-signpost\">\n            <clr-signpost-content clrPosition=\"right-top\" *clrIfOpen>\n               {{'vsan.persistence.enable.labels.signpost'|localized}}\n            </clr-signpost-content>\n         </clr-signpost>\n      </label>\n   </clr-input-container>\n</form>\n\n<div class=\"clr-row header-row\">\n   <div class=\"clr-col-5\">\n      {{'vsan.persistence.enable.key' | localized}}\n   </div>\n   <div class=\"clr-col-5\">\n      {{'vsan.persistence.enable.value' | localized}}\n   </div>\n</div>\n\n<div *ngFor=\"let setting of supervisorService.advancedSettings; let i=index\"\n     id=\"row-setting-{{i}}\"\n     class=\"clr-row\">\n\n   <div class=\"clr-col-5\">\n      <clr-input-container>\n         <input id=\"key-{{i}}\"\n                clrInput\n                type=\"text\"\n                name=\"key-{{i}}\"\n                class=\"text-input\"\n                [maxlength]=\"SETTING_KEY_MAX_LENGTH\"\n                [(ngModel)]=\"setting.key\"\n                (ngModelChange)=\"invalidate()\"/>\n      </clr-input-container>\n   </div>\n   <clr-input-container class=\"clr-col-5\">\n      <input id=\"value-{{i}}\"\n             clrInput\n             type=\"text\"\n             name=\"value-{{i}}\"\n             class=\"text-input\"\n             [maxlength]=\"SETTING_VALUE_MAX_LENGTH\"\n             [(ngModel)]=\"setting.value\"\n             (ngModelChange)=\"invalidate()\"/>\n   </clr-input-container>\n\n   <button id=\"remove-setting-{{i}}\"\n           type=\"button\"\n           class=\"btn btn-icon btn-link clr-col-1\"\n           title=\"{{'vsan.common.remove' | localized}}\"\n           (click)=\"removeSetting(i)\">\n      <clr-icon shape=\"times-circle\" [attr.alt]=\"'vsan.common.remove' | localized\"></clr-icon>\n   </button>\n</div>\n<button id=\"add-setting\"\n        type=\"button\"\n        [disabled]=\"!isAddAllowed\"\n        [title]=\"addButtonTooltip\"\n        class=\"btn btn-icon btn-link\"\n        title=\"{{'vsan.common.add' | localized}}\"\n        (click)=\"addSetting()\">\n   <clr-icon shape=\"plus-circle\" [attr.alt]=\"'vsan.common.add' | localized\"></clr-icon>\n</button>\n","\nexport interface AdvancedSetting {\n\n   key: string;\n   value: string;\n} //class AdvancedSetting\n\nexport module AdvancedSetting{\nexport class Factory {\n\n   static create = (key: string, value: string): AdvancedSetting => {\n      return { key: key, value: value, };\n   }\n\n\n} //class Factory\n\n} //module AdvancedSetting\n","<!-- Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<h5 vsan-auto-focus>\n   {{\"vsan.config.ss.supervisorServices\" | localized}}\n</h5>\n\n<vsan-validation *ngIf=\"error\" [alert]=\"error\"></vsan-validation>\n\n<clr-button-group vsan-button-group class=\"btn-link\">\n   <clr-button id=\"enable-action\"\n               *ngIf=\"selectedService && !selectedService?.isEnabled\"\n               name=\"enable-action\"\n               class=\"btn btn-sm\"\n               [disabled]=\"isEnableButtonDisabled()\"\n               [vsan-button-title]= \"getEnableButtonTitle()\"\n               (click)=\"enable()\">\n      {{\"vsan.config.ss.supervisorServices.action.enable\" | localized}}\n   </clr-button>\n   <clr-button id=\"disable-action\"\n               *ngIf=\"selectedService && selectedService?.isEnabled\"\n               name=\"disable-action\"\n               class=\"btn btn-sm\"\n               [disabled]=\"!hasEditPrivileges\"\n               [vsan-button-title]=\"'vsan.common.nopermissions' | localized\"\n               (click)=\"disable()\">\n      {{\"vsan.config.ss.supervisorServices.action.disable\" | localized}}\n   </clr-button>\n</clr-button-group>\n\n<clr-datagrid id=\"supervisor-services-grid\"\n              class=\"supervisor-services-grid\"\n              [(clrDgSingleSelected)]=\"selectedService\"\n              [clrDgRowSelection]=\"true\"\n              [clrDgLoading]=\"loading\">\n   <clr-dg-column class=\"content-title\" [clrDgField]=\"'name'\">\n      {{\"vsan.config.ss.supervisorServices.header.service\" | localized}}\n   </clr-dg-column>\n   <clr-dg-column class=\"content-short\" [clrDgField]=\"'isEnabled'\">\n      {{\"vsan.config.ss.supervisorServices.header.status\" | localized}}\n      <clr-dg-filter>\n         <vsan-enumerated-filter vsanDgField=\"isEnabled\">\n            <vsan-enumerated-filter-item [iconClass]=\"Icon.CLR_SUCCESS_ICON_CLASS\"\n                                         [iconShape]=\"Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE\"\n                                         [label]=\"getStatusLabel(true)\"\n                                         [value]=\"true\"></vsan-enumerated-filter-item>\n            <vsan-enumerated-filter-item [iconClass]=\"Icon.CLR_DISABLED_ICON_CLASS\"\n                                         [iconShape]=\"Icon.CLR_MINUS_CIRCLE_ICON_SHAPE\"\n                                         [label]=\"getStatusLabel(false)\"\n                                         [value]=\"false\"></vsan-enumerated-filter-item>\n         </vsan-enumerated-filter>\n      </clr-dg-filter>\n   </clr-dg-column>\n   <clr-dg-column class=\"content-short\" [clrDgField]=\"'version'\">\n      {{\"vsan.config.ss.supervisorServices.header.currentVersion\" | localized}}\n   </clr-dg-column>\n   <clr-dg-column class=\"content-short\">\n      {{\"vsan.config.ss.supervisorServices.header.desiredVersion\" | localized}}\n   </clr-dg-column>\n\n   <clr-dg-placeholder>{{\"vsan.config.ss.supervisorServices.no.installed.services\" | localized}}</clr-dg-placeholder>\n\n   <clr-dg-row *clrDgItems=\"let service of services\" [clrDgItem]=\"service\">\n      <clr-dg-cell vsan-show-title>\n         {{service.name}}\n      </clr-dg-cell>\n      <clr-dg-cell>\n         <vsan-icon-item\n               iconClass=\"{{service.isEnabled ? Icon.CLR_SUCCESS_ICON_CLASS : Icon.CLR_DISABLED_ICON_CLASS}}\"\n               [shape]=\"service.isEnabled ? Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE : Icon.CLR_MINUS_CIRCLE_ICON_SHAPE\"\n               [label]=\"getStatusLabel(service.isEnabled)\">\n         </vsan-icon-item>\n      </clr-dg-cell>\n      <clr-dg-cell>{{service.version | notEmpty}}</clr-dg-cell>\n      <clr-dg-cell>{{service.desiredVersion | notEmpty}}</clr-dg-cell>\n      <clr-dg-row-detail *clrIfExpanded>\n         {{service.description}}\n      </clr-dg-row-detail>\n   </clr-dg-row>\n   <clr-dg-footer>\n      {{\"vsan.config.ss.supervisorServices.footer.items\" | localized: services?.length.toString() }}\n   </clr-dg-footer>\n</clr-datagrid>\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {ActionButtonModule} from \"@component/action-button/action-button.module\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {CommonCellsModule} from \"@component/cell/common-cells.module\";\nimport {InventoryBrowserModule} from \"@component/inventory/inventory-browser.module\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {TreeDatagridModule} from \"@component/datagrid/tree-datagrid.module\";\nimport {DatetimePickerModule} from \"@component/datetime-picker/datetime-picker.module\";\nimport {PopupListModule} from \"@component/popup-list/popup-list.module\";\nimport {VsanBreadcrumbModule} from \"@component/navigation/vsan-breadcrumb.module\";\n\n@NgModule({\n   imports: [\n         CommonDirectiveModule,\n         CommonPipeModule,\n         ValidationModule,\n         ActionButtonModule,\n         PromptModule,\n         CommonCellsModule,\n         InventoryBrowserModule,\n         SearchModule,\n         TreeDatagridModule,\n         DatetimePickerModule,\n         PopupListModule,\n         VsanBreadcrumbModule,\n   ],\n   exports: [\n      CommonDirectiveModule,\n      CommonPipeModule,\n      ValidationModule,\n      ActionButtonModule,\n      PromptModule,\n      CommonCellsModule,\n      InventoryBrowserModule,\n      SearchModule,\n      TreeDatagridModule,\n      DatetimePickerModule,\n      PopupListModule,\n      VsanBreadcrumbModule,\n   ],\n})\nexport class VsanCommonModule { }","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {SearchComponent} from \"@component/search/search.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      CommonPipeModule\n   ],\n   declarations: [\n      SearchComponent\n   ],\n   exports: [\n      SearchComponent\n   ],\n})\nexport class SearchModule {\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ActionButtonSeparatorComponent} from \"@component/action-button/action-button-separator.component\";\nimport {ButtonTitleDirective} from \"@component/action-button/button-title.directive\";\nimport {ButtonGroupDirective} from \"@component/action-button/button-group.directive\";\nimport {ButtonGroupWrapDirective} from \"@component/action-button/button-group-wrap.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n   ],\n   declarations: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ],\n   exports: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ]\n})\nexport class ActionButtonModule {\n}\n"],"sourceRoot":"webpack:///"}