{"version":3,"sources":["webpack:///src/app/vsan/file-services/file-service-util.ts","webpack:///src/app/vsan/file-services/create-share/create-share-wizard.component.ts","webpack:///src/app/vsan/file-services/create-share/create-share-general-page.html","webpack:///src/app/vsan/file-services/create-share/create-share-file-analytics-page.html","webpack:///src/app/vsan/file-services/create-share/create-share-wizard.component.ts.CreateShareWizardComponent.html","webpack:///src/app/vsan/file-services/create-share/create-share-file-analytics-page.component.ts","webpack:///src/app/vsan/file-services/create-share/create-share-review-page.component.ts","webpack:///src/app/vsan/file-services/create-share/create-share-net-permissions-page.component.ts","webpack:///src/app/vsan/file-services/create-share/create-share-general-page.component.ts","webpack:///src/app/vsan/file-services/create-share/create-share-net-permissions-page.html","webpack:///src/app/vsan/file-services/create-share/create-share-review-page.html","webpack:///src/app/vsan/common/directive/icon-title/icon-title.directive.ts","webpack:///src/app/vsan/file-services/create-share/create-share-wizard.module.ts","webpack:///src/app/vsan/file-services/create-share/create-share-general-page.service.ts"],"names":["FileServiceUtil","site","availableDomains","PREFERRED_DOMAIN","preferredDomain","find","domain","isPreferred","getString","label","NON_PREFERRED_DOMAIN","secondaryDomain","isHost","vdfsConfig","config","domainConfig","ipSettings","map","ipSetting","ip","getIpLabel","fqdn","dnsName","affinitySite","getAffinitySiteLabel","affinityLocation","isDefault","address","SHARE_NAME_PROPERTY","SHARE_UUID_PROPERTY","SHARE_FILE_INDEXING_ENABLED_PROPERTY","CreateShareWizardComponent","services","createOrCloneShare","share","domainName","JSON","parse","stringify","Factory","create","GB","NO_ACCESS","NFSV3_AND_NFSV4","AUTH_SYS","DISABLED","NONE","modalContext","getModalContext","name","pages","protocol","SMB","isFileAnalyticsEnabledOnCluster","isEdit","title","methodName","quotaSize","softQuotaSize","context","clusterRef","fsDomainConfig","isAffinitySiteSupported","shareUuid","isSmbProtocolSupported","isKerberosSupported","isSmbAbeSupported","policies","vcCapabilityData","CreateShareFileAnalyticsPageComponent","isFileAnalyticsEnabled","CreateShareReviewPageComponent","VsanFileShareProtocol","ServiceUtils","getShareProtocolLabel","getSmbEncryptionText","smbShareOptions","encryption","getSecurityModeText","securityType","getKerberosText","size","getSizeLabel","number","localizeNumber","getSmbAbeOptionText","accessBasedEnumeration","CreateShareNetPermissionsPageComponent","ipParser","PermissionType","AccessType","populatePermissions","netPermissions","p","ipAddress","permissionType","READONLY","READWRITE","isRootSquashed","NOACCESS","accessType","ALL_ACCESS","CUSTOM_ACCESS","length","NetPermissionWrapper","permission","getPermissionType","isReadonly","isWriteAllowed","push","id","splice","pageControls","rebuildToc","validationErrors","isCustomAccess","isEmpty","permit","perm","isValidIpData","ipString","ipStringTrimmed","trim","type","getIpDataType","IpRangeType","SINGLE","isValidIpAddress","RANGE","chunks","split","SUBNET","ipSections","isSubnetForIpValid","isIpv6","isIpv6AddressValid","isIpv4AddressValid","ipType","V6","data","SINGLE_IP_ADDRESS","test","IP_ADDRESS_RANGE","IP_ADDRESS_SUBNET","CreateShareGeneralPageComponent","spbmService","generalPageService","VsanUiUtils","KERBEROS","removedLabelKeys","protocols","sizes","MB","TB","kerberosTypes","KRB5P","KRB5I","KRB5","_securityMode","_selectedProtocol","krbOptions","value","nfsProtocols","NFSv3","NFSv4","warningThresholdSize","hardQuotaSize","nfsVersionChangedWarning","isAffinitySiteChangeWarningShown","updateLabels","isAddEnabled","addLabel","val","isKerberos","_smbEncryptionEnabled","enabled","MANDATORY","invalidate","initPageValues","error","addValidationErrors","setPolicyForEdittingShare","setPolicyForNewShare","activeDirectoryEnabled","adConfig","isHardQuotaSelected","quota","hardQuotaValue","isWarningThresholdSelected","softQuota","warningThresholdValue","getAvailableProtocols","originalShareName","originalProtocol","originalAffinitySiteLocation","securityMode","smbEncryptionEnabled","currentPolicy","policyId","selectedPolicy","fakePolicy","unshift","defaultPolicy","indexOf","labels","trimmedKey","labelKey","trimmedVal","labelValue","existingLabel","key","filter","some","LABELS_MAX_COUNT","isLabelInputDisabled","isLabelValid","nameValidationError","validateName","policyError","validatePolicy","thresholdsErrors","validateThresholds","convertLocalizedStringToNumber","nameChanged","setBusyState","validateDuplicatedName","then","result","clearBusyState","err","sites","Set","has","add","Array","from","isVsanStretchedCluster","IconTitleDirective","el","SHAPE_ATTRIBUTE","TITLE_ATTRIBUTE","nativeElement","getAttribute","iconTitle","shape","getDefaultVsanIconTitle","setAttribute","fileSharesRoutes","path","component","CreateShareWizardModule","CreateShareGeneralPageService","shareService","ALLOWED_CHARS","MULTIPLE_DASHES","shareName","Promise","accept","reject","queryShareByName","contextObject","policy","isCompatible","isSoftQuotaSelected","softQuotaValue","softQuotaInKB","hardQuotaInKB","toKilobytes","isNaN","MINIMUM_QUOTA_SIZE_IN_KB","MAXIMUM_QUOTA_SIZE_IN_KB","NaN","power","Error"],"mappings":"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","file":"121-es5.js","sourcesContent":["/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AffinitySiteLocation} from \"@generated/affinity-site-location\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {IpSettingData} from \"@component/configurations/file-service-configuration.component\";\nimport {VsanFileServiceHostIpSettings} from \"@generated/vsan-file-service-host-ip-settings\";\nimport {VsanVdfsConfig} from \"@generated/vsan-vdfs-config\";\n\n/**\n * Holds the common properties and methods used for file service UI\n */\nexport class FileServiceUtil {\n   // properties used for API fileServiceConfigService.getFileShareAttributes\n   static readonly SHARE_NAME_PROPERTY: string = \"sharenames\";\n   static readonly SHARE_UUID_PROPERTY: string = \"shareuuids\";\n   static readonly SHARE_FILE_INDEXING_ENABLED_PROPERTY: string = \"fileIndexingEnabled\";\n\n   static getAffinitySiteLabel(site: AffinitySiteLocation, availableDomains: DomainOrHostData[]): string {\n      switch (site) {\n         case AffinitySiteLocation.PREFERRED_DOMAIN:\n            const preferredDomain: DomainOrHostData = availableDomains.find(domain => domain.isPreferred);\n            return preferredDomain ?\n                  VsanUiUtils.getString(\"vsan.fileservices.affinitySite.preferred.label\", preferredDomain.label):\n                  VsanUiUtils.getString(\"vsan.cluster.configure.summary.preferredFd\");\n         case AffinitySiteLocation.NON_PREFERRED_DOMAIN:\n            const secondaryDomain: DomainOrHostData =\n                  availableDomains.find(domain => !domain.isPreferred && !domain.isHost);\n            return secondaryDomain ?\n                  VsanUiUtils.getString(\"vsan.fileservices.affinitySite.nonPreferred.label\", secondaryDomain.label) :\n                  VsanUiUtils.getString(\"vsan.cluster.configure.summary.secondaryFd\");\n         default:\n            return VsanUiUtils.getString(\"vsan.fileservices.affinitySite.none.label\");\n      }\n   }\n\n   /**\n    * Returns the IP addresses from the File Service configuration in the form of a string, separated by commas.\n    */\n   static getIpSettings(vdfsConfig: VsanVdfsConfig, availableDomains: DomainOrHostData[]): IpSettingData[] {\n      if (!vdfsConfig\n            || !vdfsConfig.config\n            || !vdfsConfig.config.domainConfig\n            || !vdfsConfig.config.domainConfig.ipSettings) {\n         return [];\n      }\n\n      return vdfsConfig.config.domainConfig.ipSettings.map((ipSetting: VsanFileServiceHostIpSettings) => {\n         return {\n            ip: this.getIpLabel(ipSetting),\n            fqdn: ipSetting.dnsName,\n            affinitySite: FileServiceUtil.getAffinitySiteLabel(ipSetting.affinityLocation, availableDomains),\n         };\n      });\n   }\n\n   private static getIpLabel(ipSetting: VsanFileServiceHostIpSettings): string {\n      return ipSetting.isDefault\n            ? VsanUiUtils.getString(\"vsan.services.fileservices.primaryIp\", ipSetting.address)\n            : ipSetting.address;\n   }\n}\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {PageSet} from \"@component/wizard/flow-wizard.component\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanFileSharesService} from \"@generated/vsan-file-shares-service\";\nimport {FileServicesCreateShareWizardModalContext} from \"./create-share-modal-context.data\";\nimport {CreateShareReviewPageComponent} from \"./create-share-review-page.component\";\nimport {CreateShareGeneralPageComponent} from \"./create-share-general-page.component\";\nimport {VsanFileServiceShareSize} from \"@generated/vsan-file-service-share-size\";\nimport {CreateShareNetPermissionsPageComponent} from \"./create-share-net-permissions-page.component\";\nimport {VsanFileServiceShareConfig} from \"@generated/vsan-file-service-share-config\";\nimport {VsanFileServiceShareAccessType} from \"@generated/vsan-file-service-share-access-type\";\nimport {VsanFileShareProtocol} from \"@generated/vsan-file-share-protocol\";\nimport {VsanFileShareNfsSecurityType} from \"@generated/vsan-file-share-nfs-security-type\";\nimport {AffinitySiteLocation} from \"@generated/affinity-site-location\";\nimport {CreateShareFileAnalyticsPageComponent} from \"./create-share-file-analytics-page.component\";\nimport {SmbShareOptions} from \"@generated/smb-share-options\";\nimport {SmbEncryptionOption} from \"@generated/smb-encryption-option\";\n\n@Component({\n   selector: \"vsan-file-services-create-share-wizard\",\n   template: `\n      <vsan-flow-wizard\n            [title]=\"title\"\n            [pageSets]=\"pages\"\n            [contextProperties]=\"context\"\n            [startingTaskProperty]=\"methodName\"\n            [services]=\"services\">\n      </vsan-flow-wizard>`,\n})\nexport class CreateShareWizardComponent implements OnInit {\n\n   services: any[] = [VsanFileSharesService];\n   pages: PageSet[];\n   context: any;\n   title: string;\n   methodName: string;\n\n   ngOnInit(): void {\n      const modalContext: FileServicesCreateShareWizardModalContext =\n            VsanUiUtils.getModalContext() as FileServicesCreateShareWizardModalContext;\n      // We have to clone the passed in share object, otherwise if user changes a property of this share,\n      // and then close the dialog, the shares list will be updated.\n      const share: VsanFileServiceShareConfig = this.createOrCloneShare(modalContext.share, modalContext.domain.name);\n\n      this.pages = [\n            new PageSet([CreateShareGeneralPageComponent]),\n            new PageSet([CreateShareNetPermissionsPageComponent],\n                  () => share.protocol !== VsanFileShareProtocol.SMB),\n            new PageSet([CreateShareFileAnalyticsPageComponent],\n                  () => modalContext.isFileAnalyticsEnabledOnCluster),\n            new PageSet([CreateShareReviewPageComponent]),\n      ];\n\n      // If a share is passed to the context, this means the user is editing an existing share\n      const isEdit: boolean = !!modalContext.share;\n      if (isEdit) {\n         this.title = VsanUiUtils.getString(\"vsan.fileservices.shares.edit.title\");\n         this.methodName = \"updateShare\";\n         if (!share.quotaSize) {\n            share.quotaSize = VsanFileServiceShareSize.GB;\n         }\n         if (!share.softQuotaSize) {\n            share.softQuotaSize = VsanFileServiceShareSize.GB;\n         }\n      } else {\n         this.title = VsanUiUtils.getString(\"vsan.fileservices.shares.create.title\");\n         this.methodName = \"createShare\";\n      }\n\n      this.context = {\n         isEdit: isEdit,\n         clusterRef: modalContext.clusterRef,\n         share: share,\n         fsDomainConfig: modalContext.domain,\n         isAffinitySiteSupported: modalContext.isAffinitySiteSupported,\n         shareUuid: modalContext.shareUuid,\n         isFileAnalyticsEnabledOnCluster: modalContext.isFileAnalyticsEnabledOnCluster,\n         isSmbProtocolSupported: modalContext.isSmbProtocolSupported,\n         isKerberosSupported: modalContext.isKerberosSupported,\n         isSmbAbeSupported: modalContext.isSmbAbeSupported,\n         policies: modalContext.policies,\n         vcCapabilityData: modalContext.vcCapabilityData,\n      };\n   }\n\n   private createOrCloneShare = (share: VsanFileServiceShareConfig, domainName: string): VsanFileServiceShareConfig => {\n      // Clone the existing file share object\n      if (share) {\n         return JSON.parse(JSON.stringify(share));\n      }\n\n      return VsanFileServiceShareConfig.Factory.create(\n            \"\",\n            domainName,\n            null,\n            VsanFileServiceShareSize.GB,\n            null,\n            VsanFileServiceShareSize.GB,\n            [],\n            \"\",\n            [],\n            VsanFileServiceShareAccessType.NO_ACCESS,\n            VsanFileShareProtocol.NFSV3_AND_NFSV4, // Default value of protocol since the first FS release\n            VsanFileShareNfsSecurityType.AUTH_SYS, // Default value of the security type is auth_sys at backend\n            SmbShareOptions.Factory.create(SmbEncryptionOption.DISABLED, false),\n            AffinitySiteLocation.NONE,\n            false, // File analytics disabled\n      );\n   };\n}\n","<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<form clrForm clrLayout=\"horizontal\">\n   <vsan-validation id=\"nfs-protocol-change-warning\"\n                    *ngIf=\"nfsVersionChangedWarning\"\n                    alertType=\"warning\"\n                    [allowClose]=\"false\"\n                    [alert]=\"'vsan.fileservices.shares.edit.nfs.protocol.warning' | localized\">\n   </vsan-validation>\n   <clr-input-container id=\"share-name\" class=\"control-full-width\">\n      <label class=\"clr-col-4\">{{\"vsan.fileservices.shares.create.name\" | localized}}</label>\n      <input clrInput\n             id=\"name\"\n             name=\"name\"\n             type=\"text\"\n             class=\"clr-col-7\"\n             vsan-auto-focus\n             [(ngModel)]=\"share.name\"\n             (change)=\"invalidate()\"\n             autocomplete=\"off\"\n             autofocus/>\n   </clr-input-container>\n   <div class=\"clr-row\" *ngIf=\"!isKerberosSupported else protocolSelection\">\n      <label class=\"clr-col-4 clr-control-label\">\n         {{\"vsan.fileservices.shares.create.protocol\" | localized}}\n      </label>\n      <div class=\"clr-col-8\">\n         {{\"vsan.fileservices.shares.create.protocol.nfsv3_and_nfsv41\" | localized}}\n      </div>\n   </div>\n   <ng-template #protocolSelection>\n      <ng-container *ngIf=\"!(isEdit && isSmbProtocolSelected) else smb_only\">\n         <clr-select-container *ngIf=\"!isEdit else nfs_only\" class=\"control-full-width\">\n            <label class=\"clr-col-4\">{{\"vsan.fileservices.shares.create.protocol\" | localized}}</label>\n            <select clrSelect\n                    id=\"protocol-select\"\n                    (ngModelChange)=\"protocolChange($event)\"\n                    [(ngModel)]=\"selectedProtocol\"\n                    class=\"clr-col-7\"\n                    name=\"protocol-select\">\n               <option *ngFor=\"let protocol of protocols\" [value]=\"protocol.value\">{{protocol.label}}</option>\n            </select>\n            <clr-control-helper *ngIf=\"!isEdit && isSmbProtocolSupported && !activeDirectoryEnabled\">\n               {{\"vsan.fileservices.shares.create.protocol.tooltip\" | localized}}\n            </clr-control-helper>\n         </clr-select-container>\n\n         <ng-template #nfs_only>\n            <div class=\"clr-row\">\n               <label class=\"clr-col-4 clr-control-label\">\n                  {{\"vsan.fileservices.shares.create.protocol\" | localized}}\n               </label>\n               <div class=\"clr-col-8\">\n                  {{\"vsan.fileservices.shares.create.protocol.nfs\" | localized}}\n               </div>\n            </div>\n         </ng-template>\n\n         <clr-select-container *ngIf=\"!isSmbProtocolSelected\" class=\"control-full-width\">\n            <label id=\"protocol-version-select-label\"\n                   class=\"clr-col-4\">{{\"vsan.fileservices.shares.create.protocol.versions.label\" | localized}}</label>\n            <select clrSelect\n                    id=\"protocol-version-select\"\n                    [(ngModel)]=\"share.protocol\"\n                    (change)=\"onEditNfsVersion()\"\n                    class=\"clr-col-7\"\n                    name=\"protocol-version-select\">\n               <option *ngFor=\"let protocol of nfsProtocols\" [value]=\"protocol.value\">{{protocol.label}}</option>\n            </select>\n         </clr-select-container>\n      </ng-container>\n   </ng-template>\n   <ng-template #smb_only>\n      <div class=\"clr-row\">\n         <label class=\"clr-col-4 clr-control-label\">{{\"vsan.fileservices.shares.create.protocol\" | localized}}</label>\n         <div class=\"clr-col-8\">\n            {{\"vsan.fileservices.shares.create.protocol.smb\" | localized}}\n         </div>\n      </div>\n   </ng-template>\n   <div class=\"control-full-width clr-form-control clr-row\" *ngIf=\"isKerberosSupported && !isSmbProtocolSelected\">\n      <label class=\"clr-col-4 clr-control-label\"\n             id=\"security-mode-label\">\n         {{\"vsan.services.fileservices.wizard.activeDirectoryPage.security.label\" | localized}}</label>\n      <div class=\"clr-control-container clr-col-md-7\"\n           id=\"security-mode-auth-sys-value\"\n           *ngIf=\"!isKerberosAllowed else security_mode_radio_group\">\n         {{\"vsan.services.fileservices.wizard.activeDirectoryPage.security.authSys\" | localized}}\n         <clr-control-helper *ngIf=\"isKerberosSupported && !activeDirectoryEnabled\">\n            {{\"vsan.fileservices.shares.create.security.tooltip\" | localized}}\n         </clr-control-helper>\n      </div>\n      <ng-template #security_mode_radio_group>\n         <div class=\"clr-control-container clr-col-md-7\"\n              role=\"radiogroup\"\n              aria-labelledby=\"security-mode-label\">\n            <div class=\"clr-radio-wrapper\">\n               <input id=\"auth-sys\"\n                      type=\"radio\"\n                      name=\"security-mode\"\n                      [(ngModel)]=\"securityMode\"\n                      [value]=\"AUTH_SYS\"\n                      (change)=\"invalidate()\">\n               <label for=\"auth-sys\" class=\"clr-control-label clr-col-2\">\n                  {{\"vsan.services.fileservices.wizard.activeDirectoryPage.security.authSys\" | localized}}\n               </label>\n               <clr-signpost class=\"indent clr-col-1\"\n                             id=\"auth-sys-signpost\"\n                             [vsan-signpost-title]=\"'vsan.services.fileservices.wizard.activeDirectoryPage.security.authSys.signpost.label' | localized\">\n                  <clr-signpost-content clrPosition=\"bottom-middle\" *clrIfOpen>\n                     {{\"vsan.services.fileservices.wizard.activeDirectoryPage.security.authSys.info\" | localized}}\n                  </clr-signpost-content>\n               </clr-signpost>\n            </div>\n            <div class=\"clr-radio-wrapper\">\n               <input id=\"kerberos\"\n                      type=\"radio\"\n                      name=\"security-mode\"\n                      [(ngModel)]=\"securityMode\"\n                      [value]=\"KERBEROS\"\n                      (change)=\"invalidate()\">\n               <label for=\"kerberos\" class=\"clr-control-label clr-col-2\">\n                  {{\"vsan.services.fileservices.wizard.activeDirectoryPage.security.kerberos\" | localized}}\n               </label>\n               <clr-signpost class=\"indent clr-col-1\"\n                             id=\"kerberos-signpost\"\n                             [vsan-signpost-title]=\"'vsan.services.fileservices.wizard.activeDirectoryPage.security.kerberos.signpost.label' | localized\">\n                  <clr-signpost-content clrPosition=\"bottom-middle\" *clrIfOpen>\n                     {{\"vsan.services.fileservices.wizard.activeDirectoryPage.security.kerberos.info\" | localized}}\n                  </clr-signpost-content>\n               </clr-signpost>\n            </div>\n         </div>\n      </ng-template>\n   </div>\n   <ng-container *ngIf=\"securityMode === KERBEROS && isKerberosAllowed\">\n      <clr-select-container class=\"control-full-width\">\n         <label class=\"clr-col-4\">\n            {{\"vsan.services.fileservices.wizard.activeDirectoryPage.security.kerberos.requirements.label\" | localized}}\n         </label>\n         <select clrSelect\n                 id=\"kerberos-requirement\"\n                 name=\"kerberos-requirement\"\n                 class=\"clr-col-7\"\n                 [(ngModel)]=\"share.securityType\"\n                 (change)=\"invalidate()\">\n            <option *ngFor=\"let secType of krbOptions\"\n                    [ngValue]=\"secType.value\">\n               {{secType.label}}\n            </option>\n         </select>\n      </clr-select-container>\n   </ng-container>\n\n   <!--Has to use html format to render the toggle because of PR 2636697-->\n   <div *ngIf=\"isSmbProtocolSelected\" class=\"control-full-width clr-form-control clr-row\">\n      <div class=\"clr-col-4 label-signpost-container\">\n         <label id=\"smb-encryption-option-label\"\n                class=\"clr-control-label clr-col-auto\"\n                for=\"smb-encryption-option\">\n            {{\"vsan.fileservices.shares.create.protocol.smb.encryption\" | localized}}\n         </label>\n         <clr-signpost id=\"smb-encryption-signpost\"\n                       [vsan-signpost-title]=\"'vsan.fileservices.shares.create.protocol.smb.encryption.signpost.label' | localized\">\n            <clr-signpost-content clrPosition=\"right-bottom\" *clrIfOpen>\n               {{\"vsan.fileservices.shares.create.protocol.smb.mandatory.desc\" | localized}}\n            </clr-signpost-content>\n         </clr-signpost>\n      </div>\n      <div class=\"clr-control-container clr-col-7\">\n         <div class=\"clr-toggle-wrapper\">\n            <input id=\"smb-encryption-option\"\n                   name=\"smb-encryption-option\"\n                   type=\"checkbox\"\n                   clrToggle\n                   [(ngModel)]=\"smbEncryptionEnabled\"/>\n         </div>\n      </div>\n   </div>\n\n   <div *ngIf=\"isSmbProtocolSelected && isSmbAbeSupported\" class=\"control-full-width clr-form-control clr-row\">\n      <div class=\"clr-col-4 label-signpost-container\">\n         <label id=\"smb-abe-option-label\"\n                class=\"clr-control-label clr-col-auto\"\n                for=\"smb-abe-option\">\n            {{\"vsan.fileservices.shares.create.protocol.smb.abe\" | localized}}\n         </label>\n         <clr-signpost id=\"smb-abe-signpost\"\n                       [vsan-signpost-title]=\"'vsan.fileservices.shares.create.protocol.smb.abe.signpost.label' | localized\">\n            <clr-signpost-content clrPosition=\"right-bottom\" *clrIfOpen>\n               {{\"vsan.fileservices.shares.create.protocol.smb.abe.desc\" | localized}}\n            </clr-signpost-content>\n         </clr-signpost>\n      </div>\n      <div class=\"clr-control-container clr-col-7\">\n         <div class=\"clr-toggle-wrapper\">\n            <input id=\"smb-abe-option\"\n                   name=\"smb-abe-option\"\n                   type=\"checkbox\"\n                   clrToggle\n                   [(ngModel)]=\"share.smbShareOptions.accessBasedEnumeration\"/>\n         </div>\n      </div>\n   </div>\n   <vsan-validation id=\"abe-info\"\n                    *ngIf=\"share?.smbShareOptions?.accessBasedEnumeration\"\n                    [alertType]=\"'info'\"\n                    [isSmall]=\"true\"\n                    [allowClose]=\"false\"\n                    [alert]=\"'vsan.fileservices.shares.create.protocol.smb.abe.info' | localized\">\n   </vsan-validation>\n\n   <clr-select-container class=\"control-full-width\">\n      <label class=\"clr-col-4\">{{\"vsan.fileservices.shares.create.storagePolicy\" | localized}}</label>\n      <select clrSelect\n              id=\"policy\"\n              class=\"clr-col-7\"\n              name=\"policy\"\n              (change)=\"invalidate()\"\n              [(ngModel)]=\"selectedPolicy\">\n         <option *ngFor=\"let policy of policies\"\n                 [ngValue]=\"policy\">\n            {{policy.name}}\n         </option>\n      </select>\n   </clr-select-container>\n\n   <clr-select-container *ngIf=\"displayAffinitySiteSelection\"\n                         class=\"control-full-width\">\n      <label class=\"clr-control-label clr-col-4\">\n         {{\"vsan.fileservices.affinitySite.label\" | localized}}\n         <clr-signpost id=\"share-affinity-signpost\"\n                       [vsan-signpost-title]=\"'vsan.fileservices.affinitySite.signpost.label' | localized\">\n            <clr-signpost-content clrPosition=\"right-top\" *clrIfOpen>\n               {{\"vsan.fileservices.share.create.affinitySite.signpost\" | localized}}\n            </clr-signpost-content>\n         </clr-signpost>\n      </label>\n      <select clrSelect\n              id=\"affinity-location\"\n              name=\"affinity-location\"\n              class=\"clr-col-7\"\n              (change)=\"toggleAffinitySiteWarning()\"\n              [(ngModel)]=\"share.affinityLocation\">\n         <option *ngFor=\"let site of affinitySites\"\n                 [ngValue]=\"site\">\n            {{getAffinitySiteLabel(site)}}\n         </option>\n      </select>\n      <clr-control-helper>\n         {{\"vsan.fileservices.affinitySite.selection.disabled.reason\" | localized}}\n      </clr-control-helper>\n   </clr-select-container>\n   <vsan-validation id=\"affinity-site-change-warning\"\n                    *ngIf=\"displayAffinitySiteSelection && isAffinitySiteChangeWarningShown\"\n                    isSmall=\"true\"\n                    alertType=\"info\"\n                    [alert]=\"'vsan.fileservices.share.affinitySite.change.warning' | localized\">\n   </vsan-validation>\n\n   <clr-input-container>\n      <label class=\"clr-col-4\" id=\"storage-space-quotas-label\">\n         {{\"vsan.fileservices.shares.create.quota\" | localized}}\n      </label>\n   </clr-input-container>\n\n   <div class=\"clr-row\"\n        role=\"group\"\n        aria-labelledby=\"storage-space-quotas-label\">\n      <clr-checkbox-wrapper class=\"clr-col-4 indent\">\n         <input type=\"checkbox\"\n                clrCheckbox\n                id=\"warning-threshold-check\"\n                name=\"warning-threshold-check\"\n                (change)=\"invalidate()\"\n                [(ngModel)]=\"isWarningThresholdSelected\"/>\n         <label class=\"clr-col-12\">\n            {{\"vsan.fileservices.shares.create.shareWarningThreshold\" | localized}}\n         </label>\n      </clr-checkbox-wrapper>\n      <div class=\"clr-col-7 clr-row quota-field\">\n         <input id=\"warning-threshold-value\"\n                name=\"warning-threshold-value-1\"\n                type=\"text\"\n                class=\"clr-col-3 clr-input\"\n                [disabled]=\"!isWarningThresholdSelected\"\n                [(ngModel)]=\"warningThresholdValue\"\n                (change)=\"invalidate()\"\n                (input)=\"VsanUiUtils.numberValidator($event)\"/>\n\n         <div class=\"clr-col\">\n            <div class=\"clr-select-wrapper\">\n               <select id=\"warning-threshold-size\"\n                       name=\"warning-threshold-size\"\n                       [disabled]=\"!isWarningThresholdSelected\"\n                       (change)=\"invalidate()\"\n                       [(ngModel)]=\"warningThresholdSize\">\n                  <option *ngFor=\"let size of sizes\"\n                          [value]=\"size\"\n                          [attr.selected]=\"warningThresholdSize === size\">\n                     {{getSizeLabel(size)}}\n                  </option>\n               </select>\n            </div>\n         </div>\n      </div>\n   </div>\n\n   <div class=\"clr-row\"\n        role=\"group\"\n        aria-labelledby=\"storage-space-quotas-label\">\n      <clr-checkbox-wrapper class=\"clr-col-4 indent\">\n         <input type=\"checkbox\"\n                clrCheckbox\n                id=\"hard-quota-check\"\n                name=\"hard-quota-check\"\n                (change)=\"invalidate()\"\n                [(ngModel)]=\"isHardQuotaSelected\"/>\n         <label class=\"clr-col-12\">{{\"vsan.fileservices.shares.create.shareHardQuota\" | localized}}</label>\n      </clr-checkbox-wrapper>\n\n      <div class=\"clr-col-7 clr-row quota-field\">\n         <input id=\"hard-quota-value\"\n                name=\"hard-quota-value\"\n                type=\"text\"\n                class=\"clr-col-3 clr-input\"\n                [disabled]=\"!isHardQuotaSelected\"\n                [(ngModel)]=\"hardQuotaValue\"\n                (change)=\"invalidate()\"\n                (input)=\"VsanUiUtils.numberValidator($event)\"/>\n\n         <div class=\"clr-col\">\n            <div class=\"clr-select-wrapper\">\n               <select id=\"hard-quota-size\"\n                       name=\"hard-quota-size\"\n                       class=\"clr-select\"\n                       [disabled]=\"!isHardQuotaSelected\"\n                       (change)=\"invalidate()\"\n                       [(ngModel)]=\"hardQuotaSize\">\n                  <option *ngFor=\"let size of sizes\"\n                          [value]=\"size\"\n                          [attr.selected]=\"hardQuotaSize === size\">\n                     {{getSizeLabel(size)}}\n                  </option>\n               </select>\n            </div>\n         </div>\n      </div>\n   </div>\n\n   <div class=\"clr-row\">\n      <label id=\"share-labels-label\"\n             class=\"clr-control-label clr-col-4\"\n             for=\"label-key\">\n         {{\"vsan.fileservices.shares.create.label\" | localized}}\n         <clr-signpost id=\"share-labels-signpost\"\n                       [vsan-signpost-title]=\"'vsan.fileservices.shares.create.label.signpost.label' | localized\">\n            <clr-signpost-content clrPosition=\"right-top\" *clrIfOpen>\n               {{\"vsan.fileservices.shares.create.label.signpost\" | localized}}\n            </clr-signpost-content>\n         </clr-signpost>\n      </label>\n\n      <div class=\"clr-col-7 labels\"\n           role=\"group\"\n           aria-labelledby=\"share-labels-label\">\n         <input id=\"label-key\"\n                name=\"label-key\"\n                class=\"clr-col-4 clr-input\"\n                placeholder=\"{{'vsan.fileservices.shares.create.label.key.placeholder' | localized}}\"\n                [(ngModel)]=\"labelKey\"\n                [disabled]=\"isLabelInputDisabled\"\n                [title]=\"labelInputTitle\"\n                (change)=\"invalidate()\"/>\n\n         <input id=\"label-value\"\n                name=\"label-value\"\n                class=\"clr-col-4 clr-input label-value\"\n                placeholder=\"{{'vsan.fileservices.shares.create.label.value.placeholder' | localized}}\"\n                [disabled]=\"isLabelInputDisabled\"\n                [title]=\"labelInputTitle\"\n                [(ngModel)]=\"labelValue\"\n                (change)=\"invalidate()\"/>\n\n         <button id=\"add-label\"\n                 [disabled]=\"!isAddEnabled\"\n                 (click)=\"addLabel()\"\n                 class=\"btn btn-link btn-sm btn-add clr-col-3\">\n            {{\"vsan.fileservices.shares.create.add\"|localized}}\n         </button>\n      </div>\n   </div>\n   <div class=\"clr-row\">\n      <div class=\"clr-col-8 clr-offset-4\">\n         <button *ngFor=\"let label of share.labels\"\n                 class=\"label label-light-blue btn-link\"\n                 [attr.aria-label]=\"'vsan.fileservices.shares.create.removeLabel' | localized\">\n            {{label.key}}\n            <span class=\"badge badge-light-blue\">{{label.value}}</span>\n            <clr-icon shape=\"times\"\n                      class=\"btn-close\"\n                      (click)=\"removeLabel(label.key)\">\n            </clr-icon>\n         </button>\n      </div>\n   </div>\n</form>\n","<!-- Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-edit-share-file-analytics [share]=\"share\"></vsan-edit-share-file-analytics>","\n      <vsan-flow-wizard\n            [title]=\"title\"\n            [pageSets]=\"pages\"\n            [contextProperties]=\"context\"\n            [startingTaskProperty]=\"methodName\"\n            [services]=\"services\">\n      </vsan-flow-wizard>","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {InputProperty, OutputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanFileServiceShareConfig} from \"@generated/vsan-file-service-share-config\";\n\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.fileservices.shares.create.fileAnalytics.title\"),\n)\n@Component({\n   templateUrl: \"create-share-file-analytics-page.html\",\n   styleUrls: [\"create-share-file-analytics-page.scss\"],\n})\nexport class CreateShareFileAnalyticsPageComponent implements OnInit {\n   @InputProperty()\n   @OutputProperty()\n   share: VsanFileServiceShareConfig;\n\n   @InputProperty()\n   isEdit: boolean;\n\n   ngOnInit() {\n      if (!this.isEdit) {\n         // When creating file share - file analytics should be enabled by default.\n         this.share.isFileAnalyticsEnabled = true;\n      }\n   }\n}\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component} from \"@angular/core\";\nimport {InputProperty, OutputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {StoragePolicyData} from \"@generated/storage-policy-data\";\nimport {VsanFileServiceShareConfig} from \"@generated/vsan-file-service-share-config\";\nimport {VsanFileShareProtocol} from \"@generated/vsan-file-share-protocol\";\nimport {VsanFileShareNfsSecurityType} from \"@generated/vsan-file-share-nfs-security-type\";\nimport {VsanFileShareUtils} from \"../shares/file-share-util\";\nimport {VsanFileServiceShareSize} from \"@generated/vsan-file-service-share-size\";\nimport {AffinitySiteLocation} from \"@generated/affinity-site-location\";\nimport {FileServiceUtil} from \"../file-service-util\";\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {ServiceUtils} from \"../../services/service.utils\";\n\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.fileservices.shares.create.page.review.title\"),\n)\n@Component({\n   templateUrl: \"create-share-review-page.html\",\n   styleUrls: [\"create-share-net-permissions-page.scss\"],\n})\nexport class CreateShareReviewPageComponent {\n   @InputProperty()\n   selectedPolicy: StoragePolicyData;\n\n   @InputProperty()\n   share: VsanFileServiceShareConfig;\n\n   @InputProperty()\n   isVsanStretchedCluster: boolean;\n\n   @InputProperty()\n   isAffinitySiteSupported: boolean;\n\n   @InputProperty()\n   availableDomains: DomainOrHostData[];\n\n   @InputProperty()\n   isFileAnalyticsEnabledOnCluster: boolean;\n\n   @InputProperty()\n   @OutputProperty()\n   isSmbAbeSupported: boolean;\n\n   VsanFileShareProtocol: typeof VsanFileShareProtocol = VsanFileShareProtocol;\n\n   ServiceUtils: typeof ServiceUtils = ServiceUtils;\n\n   getProtocolText(): string {\n      return VsanFileShareUtils.getShareProtocolLabel(this.share.protocol);\n   }\n\n   getEncryptionText(): string {\n      return VsanFileShareUtils.getSmbEncryptionText(this.share.smbShareOptions.encryption);\n   }\n\n   getSecurityModeText(): string {\n      return VsanFileShareUtils.getSecurityModeText(this.share.securityType);\n   }\n\n   isKerberos(): boolean {\n      return this.share.protocol !== VsanFileShareProtocol.SMB\n            && this.share.securityType !== VsanFileShareNfsSecurityType.AUTH_SYS;\n   }\n\n   getKerberosText(): string {\n      return VsanFileShareUtils.getKerberosText(this.share.securityType);\n   }\n\n   getSizeLabel(size: VsanFileServiceShareSize): string {\n      return VsanFileShareUtils.getSizeLabel(size);\n   }\n\n   getLocalizedNumber(number: number): string {\n      return VsanUiUtils.localizeNumber(number);\n   }\n\n   getAffinitySiteLabel(site: AffinitySiteLocation): string {\n      return FileServiceUtil.getAffinitySiteLabel(site, this.availableDomains);\n   }\n\n   getSmbAbeOptionText(): string {\n      return VsanFileShareUtils.getSmbAbeOptionText(this.share.smbShareOptions.accessBasedEnumeration);\n   }\n}\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {InputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {PageControls} from \"@component/wizard/flow-wizard.component\";\nimport {VsanFileServiceDomain} from \"@generated/vsan-file-service-domain\";\nimport {VsanFileServiceIpType} from \"@generated/vsan-file-service-ip-type\";\nimport {VsanFileServiceShareAccessType} from \"@generated/vsan-file-service-share-access-type\";\nimport {VsanFileServiceShareConfig} from \"@generated/vsan-file-service-share-config\";\nimport {VsanFileServiceShareNetPermission} from \"@generated/vsan-file-service-share-net-permission\";\nimport {IpParserService} from \"@service/ip-parser.service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.fileservices.shares.create.page.netAccessControl.title\"),\n)\n@Component({\n   templateUrl: \"create-share-net-permissions-page.html\",\n   styleUrls: [\"create-share-net-permissions-page.scss\"],\n})\nexport class CreateShareNetPermissionsPageComponent implements OnInit {\n\n   private static readonly SINGLE_IP_ADDRESS: RegExp = /^[\\a-z\\d:.]+$/;\n   private static readonly IP_ADDRESS_RANGE: RegExp = /^[\\a-z\\d:.]+-[\\a-z\\d:.]+$/;\n   private static readonly IP_ADDRESS_SUBNET: RegExp = /^[\\a-z\\d:.\\/]+$/;\n\n   @InputProperty()\n   share: VsanFileServiceShareConfig;\n\n   @InputProperty()\n   fsDomainConfig: VsanFileServiceDomain;\n\n   @InputProperty()\n   pageControls: PageControls;\n\n   netPermissions: NetPermissionWrapper[];\n\n   PermissionType: typeof PermissionType = PermissionType;\n\n   AccessType: typeof VsanFileServiceShareAccessType = VsanFileServiceShareAccessType;\n\n   constructor(private ipParser: IpParserService) {\n   }\n\n   get accessWarningMessage(): string {\n      if (this.share.accessType === VsanFileServiceShareAccessType.ALL_ACCESS) {\n         return VsanUiUtils.getString(\"vsan.fileservices.shares.create.allowAllAccess.warning\");\n      } else if (this.share.accessType === VsanFileServiceShareAccessType.NO_ACCESS) {\n         return VsanUiUtils.getString(\"vsan.fileservices.shares.create.allowNoAccess.warning\");\n      }\n   }\n\n   get isCustomAccess(): boolean {\n      return VsanFileServiceShareAccessType.CUSTOM_ACCESS === this.share.accessType;\n   }\n\n   ngOnInit(): void {\n      // Initially add one empty permission\n      if (!this.share.netPermissions || this.share.netPermissions.length === 0) {\n         this.netPermissions = [new NetPermissionWrapper()];\n      } else {\n         this.netPermissions = this.share.netPermissions.map(permission => {\n            const p: NetPermissionWrapper = new NetPermissionWrapper();\n            p.permissionType = this.getPermissionType(permission);\n            p.isRootSquashed = permission.isRootSquashed;\n            p.ipAddress = permission.ipAddress;\n            return p;\n         });\n      }\n   }\n\n   private getPermissionType(permission: VsanFileServiceShareNetPermission): PermissionType {\n      if (permission.isReadonly) {\n         return PermissionType.READONLY;\n      }\n      if (permission.isWriteAllowed) {\n         return PermissionType.READWRITE;\n      }\n      return PermissionType.NOACCESS;\n   }\n\n   add(): void {\n      this.netPermissions.push(new NetPermissionWrapper());\n   }\n\n   remove(id: number): void {\n      this.netPermissions.splice(id, 1);\n   }\n\n   invalidate(): void {\n      this.pageControls.rebuildToc();\n   }\n\n   validate(): string[] {\n      const validationErrors: string[] = [];\n      if (this.isCustomAccess) {\n         this.populatePermissions();\n         if (this.share.netPermissions.find(permission => VsanUiUtils.isEmpty(permission.ipAddress))) {\n            validationErrors.push(VsanUiUtils.getString(\"vsan.fileservices.shares.validation.noIpAddress\"));\n            return validationErrors;\n         }\n         const permit: VsanFileServiceShareNetPermission =\n               this.share.netPermissions.find(perm => !this.isValidIpData(perm.ipAddress));\n         if (permit) {\n            validationErrors.push(\n                  VsanUiUtils.getString(\"vsan.fileservices.shares.validation.invalidIpAddresses\", permit.ipAddress));\n            return validationErrors;\n         }\n      }\n      return null;\n   }\n\n   private populatePermissions = () => {\n      this.share.netPermissions = this.netPermissions.map(p => {\n         return VsanFileServiceShareNetPermission.Factory.create(\n               p.ipAddress,\n               +p.permissionType === PermissionType.READONLY,\n               +p.permissionType === PermissionType.READWRITE,\n               p.isRootSquashed,\n               +p.permissionType === PermissionType.NOACCESS);\n      });\n   };\n\n   private isValidIpData(ipString: string): boolean {\n      const ipStringTrimmed: string = ipString.trim();\n      if (\"*\" === ipStringTrimmed) { // We allow customer to use * to match all the IPs\n         return true;\n      }\n      const type: IpRangeType = this.getIpDataType(ipStringTrimmed);\n\n      switch (type) {\n         case IpRangeType.SINGLE:\n            if (!this.isValidIpAddress(ipStringTrimmed)) {\n               return false;\n            }\n            break;\n         case IpRangeType.RANGE:\n            const chunks: string[] = ipStringTrimmed.split(\"-\");\n            if (chunks.length !== 2\n                  || !this.isValidIpAddress(chunks[0])\n                  || !this.isValidIpAddress(chunks[1])) {\n               // TODO [kaleksandrov] Probably we need to verify if the IPs are in the same network but for that we need a mask. Waiting for input from Yang.\n               return false;\n            }\n            break;\n         case IpRangeType.SUBNET:\n            const ipSections: string[] = ipStringTrimmed.split(\"/\");\n            if (!this.isValidIpAddress(ipSections[0]) || !this.ipParser.isSubnetForIpValid(ipStringTrimmed)) {\n               return false;\n            }\n            break;\n         default:\n            return false;\n      }\n      return true;\n   }\n\n   private isValidIpAddress(ip: string): boolean {\n      return this.isIpv6()\n            ? this.ipParser.isIpv6AddressValid(ip)\n            : this.ipParser.isIpv4AddressValid(ip);\n   }\n\n   private isIpv6(): boolean {\n      return this.fsDomainConfig.ipType === VsanFileServiceIpType.V6;\n   }\n\n   private getIpDataType(data: string): IpRangeType {\n      if (CreateShareNetPermissionsPageComponent.SINGLE_IP_ADDRESS.test(data)) {\n         return IpRangeType.SINGLE;\n      }\n\n      if (CreateShareNetPermissionsPageComponent.IP_ADDRESS_RANGE.test(data)) {\n         return IpRangeType.RANGE;\n      }\n\n      if (CreateShareNetPermissionsPageComponent.IP_ADDRESS_SUBNET.test(data)) {\n         return IpRangeType.SUBNET;\n      }\n\n      return null;\n   }\n}\n\n/**\n * Wrapper class for VsanFileServiceShareNetPermission\n * We need this because the readonly and writeAllowed can't be true at the same time\n */\nclass NetPermissionWrapper {\n   permissionType: PermissionType = PermissionType.READONLY;\n   isRootSquashed: boolean;\n   ipAddress: string;\n}\n\nenum IpRangeType {\n   SINGLE,\n   RANGE,\n   SUBNET,\n}\n\nenum PermissionType {\n   NOACCESS,\n   READONLY,\n   READWRITE,\n}\n","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {InputProperty, OutputProperty, WizardPage} from \"@component/wizard/flow-metadata\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {PbmDataProvider} from \"@generated/pbm-data-provider\";\nimport {StoragePolicyData} from \"@generated/storage-policy-data\";\nimport {PageControls} from \"@component/wizard/flow-wizard.component\";\nimport {VsanFileServiceShareSize} from \"@generated/vsan-file-service-share-size\";\nimport {VsanFileServiceShareConfig} from \"@generated/vsan-file-service-share-config\";\nimport {CreateShareGeneralPageService} from \"./create-share-general-page.service\";\nimport {LabelData} from \"@generated/label-data\";\nimport {VsanFileShareProtocol} from \"@generated/vsan-file-share-protocol\";\nimport {VsanFileShareNfsSecurityType} from \"@generated/vsan-file-share-nfs-security-type\";\nimport {SmbEncryptionOption} from \"@generated/smb-encryption-option\";\nimport {VsanFileShareUtils} from \"../shares/file-share-util\";\nimport {SelectOption} from \"../select-option\";\nimport {VsanStretchedClusterService} from \"@generated/vsan-stretched-cluster-service\";\nimport {DomainOrHostData} from \"@generated/domain-or-host-data\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {AffinitySiteLocation} from \"@generated/affinity-site-location\";\nimport {FileServiceUtil} from \"../file-service-util\";\nimport {VsanFileServiceDomain} from \"@generated/vsan-file-service-domain\";\n\n@WizardPage(\n      VsanUiUtils.getString(\"vsan.fileservices.shares.create.page.general.title\"),\n      null,\n      [VsanStretchedClusterService],\n)\n@Component({\n   templateUrl: \"create-share-general-page.html\",\n   styleUrls: [\"create-share-general-page.scss\"],\n})\nexport class CreateShareGeneralPageComponent implements OnInit {\n   VsanUiUtils: typeof VsanUiUtils = VsanUiUtils;\n\n   private static readonly AUTH_SYS: string = \"auth_sys\";\n   private static readonly KERBEROS: string = \"kerberos\";\n   private static readonly LABELS_MAX_COUNT: number = 5;\n\n   AUTH_SYS: string = CreateShareGeneralPageComponent.AUTH_SYS;\n   KERBEROS: string = CreateShareGeneralPageComponent.KERBEROS;\n\n   @InputProperty()\n   isEdit: boolean;\n\n   @InputProperty()\n   clusterRef: ManagedObject;\n\n   @InputProperty()\n   share: VsanFileServiceShareConfig;\n\n   @InputProperty()\n   fsDomainConfig: VsanFileServiceDomain;\n\n   @InputProperty()\n   isAffinitySiteSupported: boolean;\n\n   @InputProperty()\n   isKerberosSupported: boolean;\n\n   @InputProperty()\n   isSmbProtocolSupported: boolean;\n\n   @InputProperty()\n   policies: StoragePolicyData[];\n\n   @InputProperty()\n   pageControls: PageControls;\n\n   @InputProperty()\n   vcCapabilityData: VsanCapabilityData;\n\n   @InputProperty()\n   @OutputProperty()\n   isVsanStretchedCluster: boolean;\n\n   @InputProperty()\n   @OutputProperty()\n   availableDomains: DomainOrHostData[];\n\n   @OutputProperty()\n   selectedPolicy: StoragePolicyData;\n\n   @OutputProperty()\n   removedLabelKeys: string[] = [];\n\n   @InputProperty()\n   @OutputProperty()\n   isSmbAbeSupported: boolean;\n\n   protocols: SelectOption<VsanFileShareProtocol>[] = [];\n\n   sizes: VsanFileServiceShareSize[] = [\n      VsanFileServiceShareSize.MB,\n      VsanFileServiceShareSize.GB,\n      VsanFileServiceShareSize.TB,\n   ];\n\n   private readonly kerberosTypes: VsanFileShareNfsSecurityType[] = [\n      VsanFileShareNfsSecurityType.KRB5P,\n      VsanFileShareNfsSecurityType.KRB5I,\n      VsanFileShareNfsSecurityType.KRB5,\n   ];\n\n   private _securityMode: string = CreateShareGeneralPageComponent.AUTH_SYS;\n\n   set securityMode(val: string) {\n      this._securityMode = val;\n      if (val === CreateShareGeneralPageComponent.AUTH_SYS) {\n         this.share.securityType = VsanFileShareNfsSecurityType.AUTH_SYS;\n      } else {\n         // Only change the value when the previous value is not kerberos related\n         if (!this.isKerberos()) {\n            this.share.securityType = VsanFileShareNfsSecurityType.KRB5;\n         }\n      }\n   }\n\n   get securityMode(): string {\n      return this._securityMode;\n   }\n\n   private _smbEncryptionEnabled: boolean;\n\n   set smbEncryptionEnabled(enabled: boolean) {\n      this._smbEncryptionEnabled = enabled;\n      this.share.smbShareOptions.encryption = enabled ? SmbEncryptionOption.MANDATORY : SmbEncryptionOption.DISABLED;\n      this.invalidate();\n   }\n\n   get smbEncryptionEnabled(): boolean {\n      return this._smbEncryptionEnabled;\n   }\n\n   private _selectedProtocol: VsanFileShareProtocol = VsanFileShareProtocol.NFSV3_AND_NFSV4;\n\n   set selectedProtocol(val: VsanFileShareProtocol) {\n      this._selectedProtocol = val;\n      if (val === VsanFileShareProtocol.SMB) {\n         this.share.protocol = val;\n      } else {\n         this.share.protocol = VsanFileShareProtocol.NFSV3_AND_NFSV4;\n      }\n   }\n\n   get selectedProtocol(): VsanFileShareProtocol {\n      return this._selectedProtocol;\n   }\n\n   // Supported Kerberos security requirements\n   krbOptions: SelectOption<VsanFileShareNfsSecurityType>[] = [\n      {\n         value: VsanFileShareNfsSecurityType.KRB5,\n         label: VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.security.kerberos.krb5\"),\n      },\n      {\n         value: VsanFileShareNfsSecurityType.KRB5I,\n         label: VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.security.kerberos.krb5i\"),\n      },\n      {\n         value: VsanFileShareNfsSecurityType.KRB5P,\n         label: VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.security.kerberos.krb5p\"),\n      },\n   ];\n\n   // Supported NFS protocols\n   nfsProtocols: SelectOption<VsanFileShareProtocol>[] = [\n      {\n         label: VsanFileShareUtils.getShareProtocolLabel(VsanFileShareProtocol.NFSv3),\n         value: VsanFileShareProtocol.NFSv3,\n      } as SelectOption<VsanFileShareProtocol>,\n      {\n         label: VsanFileShareUtils.getShareProtocolLabel(VsanFileShareProtocol.NFSv4),\n         value: VsanFileShareProtocol.NFSv4,\n      } as SelectOption<VsanFileShareProtocol>,\n      {\n         label: VsanFileShareUtils.getShareProtocolLabel(VsanFileShareProtocol.NFSV3_AND_NFSV4),\n         value: VsanFileShareProtocol.NFSV3_AND_NFSV4,\n      } as SelectOption<VsanFileShareProtocol>,\n   ];\n\n   originalShareName: string;\n\n   isWarningThresholdSelected: boolean;\n   warningThresholdValue: string;\n   warningThresholdSize: VsanFileServiceShareSize = VsanFileServiceShareSize.MB;\n\n   isHardQuotaSelected: boolean;\n   hardQuotaValue: string;\n   hardQuotaSize: VsanFileServiceShareSize = VsanFileServiceShareSize.MB;\n\n   labelKey: string;\n   labelValue: string;\n\n   activeDirectoryEnabled: boolean;\n\n   nfsVersionChangedWarning: boolean = false;\n\n   isAffinitySiteChangeWarningShown: boolean = false;\n\n   private originalProtocol: VsanFileShareProtocol;\n   private originalAffinitySiteLocation: AffinitySiteLocation;\n\n   constructor(private spbmService: PbmDataProvider,\n         private generalPageService: CreateShareGeneralPageService) {\n   }\n\n   async ngOnInit(): Promise<void> {\n      this.initPageValues();\n\n      if (VsanUiUtils.isEmpty(this.policies)) {\n         const error: string = VsanUiUtils.getString(\"vsan.fileservices.shares.validation.noPolicies\");\n         this.pageControls.addValidationErrors([error]);\n      } else {\n         this.isEdit ? this.setPolicyForEdittingShare() : this.setPolicyForNewShare();\n      }\n   }\n\n   private initPageValues(): void {\n      this.activeDirectoryEnabled = !!this.fsDomainConfig.adConfig?.domain;\n      this.isHardQuotaSelected = !!this.share.quota;\n      this.hardQuotaValue = VsanUiUtils.localizeNumber(this.share.quota);\n      this.hardQuotaSize = this.share.quotaSize;\n      this.isWarningThresholdSelected = !!this.share.softQuota;\n      this.warningThresholdValue = VsanUiUtils.localizeNumber(this.share.softQuota);\n      this.warningThresholdSize = this.share.softQuotaSize;\n      this.protocols = this.getAvailableProtocols();\n\n      if (this.isEdit) {\n         this.originalShareName = this.share.name;\n         this.originalProtocol = this.share.protocol;\n         this.originalAffinitySiteLocation = this.share.affinityLocation;\n         this.securityMode = this.isKerberos() ?\n               CreateShareGeneralPageComponent.KERBEROS : CreateShareGeneralPageComponent.AUTH_SYS;\n         if (this.share.protocol === VsanFileShareProtocol.SMB) {\n            this.smbEncryptionEnabled =\n                  this.share.smbShareOptions.encryption === SmbEncryptionOption.MANDATORY;\n         }\n      }\n\n      // kerberosSupported === false means it's FS 7.0, but protocol is not acceptable in 7.0 release.\n      // so UI has to set it null\n      if (!this.isKerberosSupported) {\n         this.share.protocol = null;\n      }\n   }\n\n   private setPolicyForEdittingShare(): void {\n      const currentPolicy: StoragePolicyData = this.policies.find(p => p.id === this.share.policyId);\n      if (currentPolicy) {\n         this.selectedPolicy = currentPolicy;\n      } else {\n         // The share's policy cannot be found in the list of existing policies. This could mean either the\n         // share was created without a policy (e.g. by directly using the API or the policy the share is\n         // assigned with was deleted. In that case we are adding a new fake policy to the policies list\n         // which is going to act like \"leave it as it is\"\n         const fakePolicy: StoragePolicyData = StoragePolicyData.Factory.create(this.share.policyId,\n               VsanUiUtils.getString(\"vsan.fileservices.shares.create.emptyPolicy\"), // name\n               false, // isDefault\n               true, // hasVsanNamespace\n               false, // isVmCrypt\n               0, // ftt\n               null, // locality\n               true); // isCompatible\n         this.policies.unshift(fakePolicy);\n         this.selectedPolicy = fakePolicy;\n      }\n   }\n\n   private setPolicyForNewShare(): void {\n      const defaultPolicy: StoragePolicyData = this.policies.find(p => p.isDefault);\n      this.selectedPolicy = defaultPolicy ? defaultPolicy : this.policies[0];\n      this.share.policyId = this.selectedPolicy.id;\n   }\n\n   /**\n    * Logic of determine if the share is using kerberos security mode\n    */\n   private isKerberos(): boolean {\n      return this.kerberosTypes.indexOf(this.share.securityType) !== -1;\n   }\n\n   /**\n    * Kerberos is only allowd when the protocol is nfsv4\n    */\n   get isKerberosAllowed(): boolean {\n      return this.isKerberosSupported\n            && this.activeDirectoryEnabled\n            && (this.share.protocol === VsanFileShareProtocol.NFSv4);\n   }\n\n   get isSmbProtocolSelected(): boolean {\n      return this.share.protocol === VsanFileShareProtocol.SMB;\n   }\n\n   private getAvailableProtocols(): SelectOption<VsanFileShareProtocol>[] {\n      const protocols: SelectOption<VsanFileShareProtocol>[] = [];\n      if (this.activeDirectoryEnabled && this.isSmbProtocolSupported && !this.isEdit) {\n         protocols.push({\n            label: VsanFileShareUtils.getShareProtocolLabel(VsanFileShareProtocol.SMB),\n            value: VsanFileShareProtocol.SMB,\n         } as SelectOption<VsanFileShareProtocol>);\n      }\n      protocols.push({\n         label: VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.nfs\"),\n         value: VsanFileShareProtocol.NFSV3_AND_NFSV4,\n      } as SelectOption<VsanFileShareProtocol>);\n\n      return protocols;\n   }\n\n   addLabel(): void {\n      this.share.labels = this.share.labels || [];\n      const trimmedKey: string = this.labelKey.trim();\n      const trimmedVal: string = this.labelValue.trim();\n      const existingLabel: LabelData = this.share.labels.find(label => label.key === trimmedKey);\n      if (existingLabel) {\n         existingLabel.value = trimmedVal;\n      } else {\n         this.share.labels.push(\n               LabelData.Factory.create(trimmedKey, trimmedVal));\n      }\n      if (this.isEdit) {\n         // due to the vmodl API change, we have to pass an array of the keys of the removed labels,\n         // otherwise the labels wont be removed.\n         // If user first removes a label, and then adds a new label with the same key,\n         // we have to remove the key from removedLabelKeys\n         this.removedLabelKeys = this.removedLabelKeys.filter(key => key !== trimmedKey);\n      }\n      this.labelKey = \"\";\n      this.labelValue = \"\";\n   }\n\n   removeLabel(labelKey: string): void {\n      const trimmedKey: string = labelKey.trim();\n      this.share.labels = this.share.labels.filter(label => label.key !== trimmedKey);\n      if (this.isEdit) {\n         // due to the vmodl API change, we have to pass an array of the keys of the removed labels,\n         // otherwise the labels wont be removed. We build the array here, but we should not add duplicated records\n         if (!this.removedLabelKeys.some(key => key === trimmedKey)) {\n            this.removedLabelKeys.push(trimmedKey);\n         }\n      }\n   }\n\n   get isLabelInputDisabled(): boolean {\n      return !VsanUiUtils.isEmpty(this.share.labels) &&\n            this.share.labels.length >= CreateShareGeneralPageComponent.LABELS_MAX_COUNT;\n   }\n\n   get labelInputTitle(): string {\n      return this.isLabelInputDisabled ? VsanUiUtils.getString(\"vsan.fileservices.shares.create.label.maximum\") : \"\";\n   }\n\n   get isAddEnabled(): boolean {\n      return this.generalPageService.isLabelValid(this.labelKey, this.labelValue);\n   }\n\n   invalidate(): void {\n      this.pageControls.rebuildToc();\n   }\n\n   validate(): string[] | Promise<string[]> | Promise<void> {\n      const validationErrors: string[] = [];\n\n      // Validate name\n      const nameValidationError: string = this.generalPageService.validateName(this.share);\n      if (nameValidationError) {\n         validationErrors.push(nameValidationError);\n      }\n\n      // Validate the policy\n      const policyError: string = this.generalPageService.validatePolicy(this.selectedPolicy);\n      if (policyError) {\n         validationErrors.push(policyError);\n      } else {\n         this.share.policyId = this.selectedPolicy.id;\n      }\n\n      // Validate thresholds\n      const thresholdsErrors: string[] = this.generalPageService.validateThresholds(this.isWarningThresholdSelected,\n            this.warningThresholdValue,\n            this.warningThresholdSize,\n            this.isHardQuotaSelected,\n            this.hardQuotaValue,\n            this.hardQuotaSize);\n      if (thresholdsErrors) {\n         validationErrors.push(...thresholdsErrors);\n      } else {\n         if (this.isWarningThresholdSelected) {\n            this.share.softQuota = VsanUiUtils.convertLocalizedStringToNumber(this.warningThresholdValue);\n            this.share.softQuotaSize = this.warningThresholdSize;\n         } else {\n            this.share.softQuota = null;\n            this.share.softQuotaSize = null;\n         }\n\n         if (this.isHardQuotaSelected) {\n            this.share.quota = VsanUiUtils.convertLocalizedStringToNumber(this.hardQuotaValue);\n            this.share.quotaSize = this.hardQuotaSize;\n         } else {\n            this.share.quota = null;\n            this.share.quotaSize = null;\n         }\n      }\n\n      if (validationErrors.length) {\n         return validationErrors;\n      }\n      if (!this.isEdit || this.nameChanged) {\n         this.pageControls.setBusyState();\n         return this.generalPageService.validateDuplicatedName(this.share.name).then((result) => {\n               this.pageControls.clearBusyState();\n               this.updateLabels();\n               return result;\n            }).catch(err => {\n               this.pageControls.clearBusyState();\n               return [err];\n            });\n      } else {\n         this.updateLabels();\n      }\n      return null;\n   }\n\n   /**\n    * If all the validation is successful we check if there is some data left in the \"label\" fields.\n    * If so we assume that the user has entered the data but forgot to click \"Add\" so we have to do it for them.\n    * For more infor see https://bz3-prod-wwwd.eng.vmware.com/show_bug.cgi?id=2218701\n    */\n   private updateLabels = () => {\n      if (this.isAddEnabled) {\n         this.addLabel();\n      }\n   };\n\n   private get nameChanged(): boolean {\n      return this.share.name !== this.originalShareName;\n   }\n\n   protocolChange(value: VsanFileShareProtocol): void {\n      this.invalidate();\n   }\n\n   getSizeLabel(size: VsanFileServiceShareSize): string {\n      return VsanFileShareUtils.getSizeLabel(size);\n   }\n\n   onEditNfsVersion(): void {\n      // No need to show the warning if it's creating a file share\n      if (!this.isEdit) {\n         return;\n      }\n      this.nfsVersionChangedWarning = this.share.protocol !== this.originalProtocol;\n   }\n\n   getAffinitySiteLabel(site: AffinitySiteLocation): string {\n      return FileServiceUtil.getAffinitySiteLabel(site, this.availableDomains);\n   }\n\n   get affinitySites(): AffinitySiteLocation[] {\n      const sites: Set<AffinitySiteLocation> =\n            new Set(this.fsDomainConfig.ipSettings.map(ipSetting => ipSetting.affinityLocation));\n\n      // it's possible that 'Either' is not included in the configuration, but it can't be missed here\n      if (!sites.has(AffinitySiteLocation.NONE)) {\n         sites.add(AffinitySiteLocation.NONE);\n      }\n      return Array.from(sites);\n   }\n\n   get displayAffinitySiteSelection(): boolean {\n      return this.isAffinitySiteSupported && this.isVsanStretchedCluster;\n   }\n\n   toggleAffinitySiteWarning(): void {\n      this.isAffinitySiteChangeWarningShown = this.isEdit\n            && this.share.affinityLocation !== this.originalAffinitySiteLocation;\n   }\n}\n","<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-validation id=\"all-access-warning\"\n                 *ngIf=\"!isCustomAccess\"\n                 alertType=\"warning\"\n                 [allowClose]=\"false\"\n                 [alert]=\"accessWarningMessage\"\n                 [isSmall]=\"true\">\n</vsan-validation>\n<div class=\"radio-container\">\n   <clr-radio-wrapper>\n      <input id=\"no-access-allowed\"\n             type=\"radio\"\n             clrRadio\n             name=\"network-access-allowed\"\n             [(ngModel)]=\"share.accessType\"\n             [value]=\"AccessType.NO_ACCESS\"\n             (change)=\"invalidate()\">\n      <label for=\"no-access-allowed\">\n         {{'vsan.fileservices.shares.create.noaccess'|localized}}\n      </label>\n   </clr-radio-wrapper>\n   <clr-radio-wrapper>\n      <input id=\"all-access-allowed\"\n             type=\"radio\"\n             clrRadio\n             name=\"network-access-allowed\"\n             [(ngModel)]=\"share.accessType\"\n             [value]=\"AccessType.ALL_ACCESS\"\n             (change)=\"invalidate()\">\n      <label for=\"all-access-allowed\">\n         {{'vsan.fileservices.shares.create.allowAllAccess'|localized}}\n      </label>\n      <clr-signpost [vsan-signpost-title]=\"'vsan.fileservices.shares.create.allowAllAccess.signpost.label' | localized\">\n         <clr-signpost-content [clrPosition]=\"'right-bottom'\" *clrIfOpen>\n            <span>{{'vsan.fileservices.shares.create.allowAllAccess.tooltip' | localized}}</span>\n         </clr-signpost-content>\n      </clr-signpost>\n   </clr-radio-wrapper>\n   <clr-radio-wrapper>\n      <input id=\"customize-network-access\"\n             type=\"radio\"\n             clrRadio\n             name=\"network-access-allowed\"\n             [(ngModel)]=\"share.accessType\"\n             [value]=\"AccessType.CUSTOM_ACCESS\"\n             (change)=\"invalidate()\">\n      <label id=\"customize-network-access-label\"\n             for=\"customize-network-access\">\n         {{'vsan.fileservices.shares.create.customizeAccess'|localized}}\n      </label>\n   </clr-radio-wrapper>\n</div>\n\n<vsan-validation id=\"custom-access-warning\"\n                 *ngIf=\"isCustomAccess\"\n                 alertType=\"info\"\n                 [allowClose]=\"false\"\n                 [alertsExpanded]=\"true\"\n                 [alert]=\"'vsan.fileservices.shares.create.customizeAccess.info' | localized\"\n                 [isSmall]=\"true\">\n</vsan-validation>\n<div class=\"indent header-row clr-row\"\n     [class.disable-action]=\"!isCustomAccess\">\n   <div class=\"clr-col-5\">\n      {{'vsan.fileservices.shares.create.ipSet'|localized}}\n   </div>\n   <div class=\"clr-col-3\">\n      {{'vsan.fileservices.shares.create.permission'|localized}}\n   </div>\n   <div class=\"clr-col-4\">\n      {{\"vsan.fileservices.shares.create.squashOption\" | localized}}\n   </div>\n</div>\n<div id=\"permission-list-item-{{i}}\"\n     class=\"indent clr-row\"\n     role=\"group\"\n     aria-labelledby=\"customize-network-access-label\"\n     *ngFor=\"let permission of netPermissions; let i=index\">\n   <div class=\"clr-col-5 control-full-width\">\n      <input id=\"ip-set-{{i}}\"\n             name=\"ip-set-{{i}}\"\n             type=\"text\"\n             class=\"clr-input control-full-width\"\n             placeholder=\"{{'vsan.fileservices.shares.create.ipSet.placeholder' | localized}}\"\n             [disabled]=\"!isCustomAccess\"\n             [(ngModel)]=\"permission.ipAddress\"\n             (change)=\"invalidate()\">\n   </div>\n   <clr-select-container class=\"clr-col-3 control-full-width\">\n      <select clrSelect\n              id=\"permission-select-{{i}}\"\n              [(ngModel)]=\"permission.permissionType\"\n              (ngModelChange)=\"invalidate()\"\n              [disabled]=\"!isCustomAccess\"\n              name=\"permission-select-{{i}}\">\n         <option [value]=\"PermissionType.NOACCESS\">\n            {{\"vsan.fileservices.shares.create.noaccess\" | localized}}\n         </option>\n         <option [value]=\"PermissionType.READONLY\">{{\"vsan.fileservices.shares.create.read\" | localized}}</option>\n         <option [value]=\"PermissionType.READWRITE\">{{'vsan.fileservices.shares.create.write'|localized}}</option>\n      </select>\n   </clr-select-container>\n   <div class=\"clr-col-4\">\n      <clr-checkbox-container>\n         <clr-checkbox-wrapper>\n            <input type=\"checkbox\"\n                   clrCheckbox\n                   id=\"is-root-squash-{{i}}\"\n                   name=\"is-root-squash-{{i}}\"\n                   [disabled]=\"!isCustomAccess\"\n                   (change)=\"invalidate()\"\n                   [(ngModel)]=\"permission.isRootSquashed\"/>\n            <label>{{'vsan.fileservices.shares.create.rootSquash'|localized}}</label>\n         </clr-checkbox-wrapper>\n      </clr-checkbox-container>\n   </div>\n   <button id=\"remove-{{i}}\"\n           *ngIf=\"i !== 0\"\n           type=\"button\"\n           [disabled]=\"!isCustomAccess\"\n           class=\"btn btn-icon btn-link\"\n           (click)=\"remove(i)\"\n           [attr.aria-label]=\"'vsan.fileservices.shares.add'|localized\">\n      <clr-icon shape=\"times-circle\"\n                class=\"remove-icon\">\n      </clr-icon>\n   </button>\n</div>\n<div class=\"indent\">\n   <button id=\"add-ip-btn\"\n           type=\"button\"\n           [disabled]=\"!isCustomAccess\"\n           class=\"btn btn-icon btn-link\"\n           (click)=\"add()\"\n           [attr.aria-label]=\"'vsan.fileservices.shares.remove'|localized\">\n      <clr-icon shape=\"plus-circle\"></clr-icon>\n   </button>\n</div>\n","<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div>\n   <h5>{{\"vsan.fileservices.shares.create.page.general.title\" | localized}}</h5>\n   <div class=\"indent\">\n      <div class=\"clr-row\">\n         <label class=\"clr-col-4 clr-control-label\">\n            {{\"vsan.fileservices.shares.create.name\" | localized}}\n         </label>\n         <span id=\"name\">{{share.name}}</span>\n      </div>\n      <div class=\"clr-row\">\n         <label class=\"clr-col-4 clr-control-label\">\n            {{\"vsan.fileservices.shares.create.protocol\" | localized}}\n         </label>\n         <span>{{getProtocolText()}}</span>\n      </div>\n      <ng-container *ngIf=\"share.protocol === VsanFileShareProtocol.SMB else non_smb_security_mode\">\n         <div class=\"clr-row\">\n            <label class=\"clr-col-4 clr-control-label\">\n               {{\"vsan.fileservices.shares.create.protocol.smb.encryption\" | localized}}\n            </label>\n            <span>{{getEncryptionText()}}</span>\n         </div>\n      </ng-container>\n      <ng-template #non_smb_security_mode>\n         <div class=\"clr-row\">\n            <label class=\"clr-col-4 clr-control-label\">\n               {{\"vsan.services.fileservices.wizard.activeDirectoryPage.security.label\" | localized}}\n            </label>\n            <span>{{getSecurityModeText()}}</span>\n         </div>\n\n         <div class=\"clr-row\" *ngIf=\"isKerberos()\">\n            <label class=\"clr-col-4 clr-control-label\">\n               {{\"vsan.services.fileservices.wizard.activeDirectoryPage.security.kerberos.requirements.label\" | localized}}\n            </label>\n            <span>{{getKerberosText()}}</span>\n         </div>\n      </ng-template>\n      <div class=\"clr-row\" *ngIf=\"share.protocol === VsanFileShareProtocol.SMB && isSmbAbeSupported\">\n         <label class=\"clr-col-4 clr-control-label\">\n            {{\"vsan.fileservices.shares.create.protocol.smb.abe\" | localized}}\n         </label>\n         <span>{{getSmbAbeOptionText()}}</span>\n      </div>\n      <div class=\"clr-row\">\n         <label class=\"clr-col-4 clr-control-label\">\n            {{\"vsan.fileservices.shares.create.storagePolicy\" | localized}}\n         </label>\n         <span id=\"policy\">{{selectedPolicy.name}}</span>\n      </div>\n      <div class=\"clr-row\">\n         <label class=\"clr-col-4 clr-control-label\">\n            {{\"vsan.fileservices.shares.create.shareWarningThreshold\" | localized}}\n         </label>\n         <span id=\"shareWarningThreshold\" *ngIf=\"share.softQuota && share.softQuotaSize\">\n            {{getLocalizedNumber(share.softQuota)}} {{getSizeLabel(share.softQuotaSize)}}\n         </span>\n         <span id=\"noShareWarningThreshold\" *ngIf=\"!share.softQuota || !share.softQuotaSize\">\n            {{'vsan.na.label'|localized}}\n         </span>\n      </div>\n      <div class=\"clr-row\">\n         <label class=\"clr-col-4 clr-control-label\">\n            {{\"vsan.fileservices.shares.create.shareHardQuota\" | localized}}\n         </label>\n         <span id=\"shareHardQuota\" *ngIf=\"share.quota && share.quotaSize\">\n            {{getLocalizedNumber(share.quota)}} {{getSizeLabel(share.quotaSize)}}\n         </span>\n         <span id=\"noShareHardQuota\" *ngIf=\"!share.quota || !share.quotaSize\">\n            {{'vsan.na.label'|localized}}\n         </span>\n      </div>\n      <div class=\"clr-row\">\n         <label class=\"clr-col-4 clr-control-label\">\n            {{\"vsan.fileservices.shares.create.label\" | localized}}\n         </label>\n         <span id=\"labels\" *ngIf=\"share.labels?.length\">\n            <span *ngFor=\"let label of share.labels\" class=\"label label-light-blue\">\n               {{label.key}}\n               <span class=\"badge badge-light-blue\">{{label.value}}</span>\n            </span>\n         </span>\n         <span id=\"noLabels\"\n               *ngIf=\"!share.labels?.length\">\n            {{\"vsan.na.label\"|localized}}\n         </span>\n      </div>\n      <div class=\"clr-row\" *ngIf=\"isAffinitySiteSupported && isVsanStretchedCluster\">\n         <label class=\"clr-col-4 clr-control-label\">\n            {{\"vsan.fileservices.affinitySite.label\" | localized}}\n         </label>\n         <span id=\"affinity-site\">\n            {{getAffinitySiteLabel(share.affinityLocation)}}\n         </span>\n      </div>\n   </div>\n</div>\n\n<div *ngIf=\"share.protocol !== VsanFileShareProtocol.SMB\"\n     id=\"netAccessControl\">\n   <h5>{{\"vsan.fileservices.shares.create.page.netAccessControl.title\" | localized}}</h5>\n   <div class=\"indent\">\n      <vsan-file-share-net-permission [shareConfig]=\"share\"></vsan-file-share-net-permission>\n   </div>\n</div>\n<div *ngIf=\"isFileAnalyticsEnabledOnCluster\" id=\"fileAnalytics\">\n   <h5>{{\"vsan.fileservices.shares.create.fileAnalytics.title\" | localized}}</h5>\n   <div class=\"indent clr-row\">\n      <label class=\"clr-col-4 clr-control-label\">\n         {{\"vsan.fileservices.shares.create.fileAnalytics.title\" | localized}}\n      </label>\n      <span>{{ServiceUtils.enabledStateLabel(share.isFileAnalyticsEnabled)}}</span>\n   </div>\n</div>\n\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Directive, ElementRef, AfterViewInit, Input} from '@angular/core';\nimport {Icon} from \"@util/icon\";\n\n/**\n * Attribute directive for setting the title of clr-icon according to its shape.\n */\n@Directive({\n   selector: \"clr-icon\"\n})\nexport class IconTitleDirective implements AfterViewInit {\n\n   private readonly SHAPE_ATTRIBUTE: string = \"shape\";\n   private readonly TITLE_ATTRIBUTE: string = \"title\";\n\n   @Input(\"vsan-icon-title\")\n   iconTitle: string;\n\n   constructor(private el: ElementRef) { }\n\n   ngAfterViewInit() {\n      // Return if clr-icon already has title attribute.\n      if (this.el.nativeElement.getAttribute(this.TITLE_ATTRIBUTE)) {\n         return;\n      }\n\n      let title: string = this.iconTitle;\n      if (!title) {\n         const shape: string = this.el.nativeElement.getAttribute(this.SHAPE_ATTRIBUTE);\n         title = Icon.getDefaultVsanIconTitle(shape);\n      }\n      if (title) {\n         this.el.nativeElement.setAttribute(this.TITLE_ATTRIBUTE, title);\n      }\n   }\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CreateShareWizardComponent} from \"./create-share-wizard.component\";\nimport {CreateShareNetPermissionsPageComponent} from \"./create-share-net-permissions-page.component\";\nimport {CreateShareFileAnalyticsPageComponent} from \"./create-share-file-analytics-page.component\";\nimport {CreateShareReviewPageComponent} from \"./create-share-review-page.component\";\nimport {CreateShareGeneralPageComponent} from \"./create-share-general-page.component\";\nimport {CreateShareGeneralPageService} from \"./create-share-general-page.service\";\nimport {FlowWizardModule} from \"@component/wizard/flow-wizard.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {FileServicesCommonModule} from \"../shared/file-services-common.module\";\nimport {IpParserService} from \"@service/ip-parser.service\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\n\nconst fileSharesRoutes: Routes = [\n   {\n      path: \"\",\n      component: CreateShareWizardComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      FlowWizardModule,\n      ValidationModule,\n      CommonPipeModule,\n      FileServicesCommonModule,\n      RouterModule.forChild(fileSharesRoutes),\n      CommonDirectiveModule,\n   ],\n   declarations: [\n      CreateShareWizardComponent,\n      CreateShareGeneralPageComponent,\n      CreateShareReviewPageComponent,\n      CreateShareNetPermissionsPageComponent,\n      CreateShareFileAnalyticsPageComponent,\n   ],\n   entryComponents: [\n      CreateShareGeneralPageComponent,\n      CreateShareReviewPageComponent,\n      CreateShareNetPermissionsPageComponent,\n      CreateShareFileAnalyticsPageComponent,\n   ],\n   providers: [\n      CreateShareGeneralPageService,\n      IpParserService,\n   ],\n})\nexport class CreateShareWizardModule {\n}\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Injectable} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanFileServiceShareSize} from \"@generated/vsan-file-service-share-size\";\nimport {VsanFileServiceShareConfig} from \"@generated/vsan-file-service-share-config\";\nimport {StoragePolicyData} from \"@generated/storage-policy-data\";\nimport {VsanFileSharesService} from \"@generated/vsan-file-shares-service\";\nimport {ManagedObject} from \"@service/managed-object\";\n\n@Injectable()\nexport class CreateShareGeneralPageService {\n\n   constructor(private shareService: VsanFileSharesService) {\n   }\n\n   // More info about share's name requirements - https://bugzilla.eng.vmware.com/show_bug.cgi?id=2156239#c2\n   private static readonly ALLOWED_CHARS: RegExp = /^[\\da-zA-Z][\\da-zA-Z-]{1,61}[\\da-zA-Z]$/;\n   private static readonly MULTIPLE_DASHES: RegExp = /--/;\n   private static readonly MAXIMUM_QUOTA_SIZE_IN_KB: number =\n         CreateShareGeneralPageService.toKilobytes(16777215, VsanFileServiceShareSize.TB);\n   private static readonly MINIMUM_QUOTA_SIZE_IN_KB: number =\n         CreateShareGeneralPageService.toKilobytes(1, VsanFileServiceShareSize.MB);\n\n   /**\n    * Validates if both the key and value are not empty strings\n    */\n   isLabelValid(key: string, value: string): boolean {\n      return key && key.trim().length !== 0 && value && value.trim().length !== 0;\n   }\n\n   /**\n    * Validates that the name matches the backend requirements\n    */\n   validateName(share: VsanFileServiceShareConfig): string | null {\n      if (!share.name) {\n         return VsanUiUtils.getString(\"vsan.fileservices.shares.validation.emptyName\");\n      } else {\n         if (!CreateShareGeneralPageService.ALLOWED_CHARS.test(share.name)\n               || CreateShareGeneralPageService.MULTIPLE_DASHES.test(share.name)) {\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.validation.invalidName\");\n         }\n      }\n   }\n\n   /**\n    * Validates if the share name is existing or not\n    */\n   validateDuplicatedName(shareName: string): Promise<string[]> {\n      return new Promise<string[]>((accept, reject) => {\n         this.shareService.queryShareByName(ManagedObject.contextObject, shareName)\n               .then(share => {\n                  if (share) {\n                     return accept([VsanUiUtils.getString(\n                           \"vsan.fileservices.shares.validation.duplicateName\", shareName)]);\n                  }\n                  return accept(null);\n               }).catch(err => {\n                  reject(err);\n               });\n      });\n   }\n\n   /**\n    * Validates if the given policy is not null and is compatible with the underlying vSAN datastore\n    * @param policy\n    */\n   validatePolicy(policy: StoragePolicyData): string | null {\n      if (!policy) {\n         return VsanUiUtils.getString(\"vsan.fileservices.shares.validation.noPolicy\");\n      } else if (!policy.isCompatible) {\n         return VsanUiUtils.getString(\"vsan.fileservices.shares.validation.nonCompatiblePolicy\");\n      }\n   }\n\n   /**\n    * Validates share's quotas\n    */\n   validateThresholds(isSoftQuotaSelected: boolean, softQuotaValue: string, softQuotaSize: VsanFileServiceShareSize,\n         isHardQuotaSelected: boolean, hardQuotaValue: string,\n         hardQuotaSize: VsanFileServiceShareSize): string[] | null {\n      const validationErrors: string[] = [];\n      let softQuotaInKB: number;\n      let hardQuotaInKB: number;\n\n      if (isSoftQuotaSelected) {\n         if (VsanUiUtils.isEmpty(softQuotaValue)) {\n            validationErrors.push(VsanUiUtils.getString(\"vsan.fileservices.shares.validation.emptyWarningThreshold\"));\n         } else {\n            softQuotaInKB = CreateShareGeneralPageService.toKilobytes(\n                  VsanUiUtils.convertLocalizedStringToNumber(softQuotaValue), softQuotaSize);\n            if (isNaN(softQuotaInKB)) {\n               validationErrors.push(\n                     VsanUiUtils.getString(\"vsan.fileservices.shares.validation.invalidWarningThreshold\"));\n            } else if (softQuotaInKB < CreateShareGeneralPageService.MINIMUM_QUOTA_SIZE_IN_KB) {\n               validationErrors.push(\n                     VsanUiUtils.getString(\"vsan.fileservices.shares.validation.warningThresholdTooLittle\"));\n            } else if (softQuotaInKB > CreateShareGeneralPageService.MAXIMUM_QUOTA_SIZE_IN_KB) {\n               validationErrors.push(\n                     VsanUiUtils.getString(\"vsan.fileservices.shares.validation.warningThresholdTooBig\"));\n            }\n         }\n      }\n\n      if (isHardQuotaSelected) {\n         if (VsanUiUtils.isEmpty(hardQuotaValue)) {\n            validationErrors.push(VsanUiUtils.getString(\"vsan.fileservices.shares.validation.emptyHardQuota\"));\n         } else {\n            hardQuotaInKB = CreateShareGeneralPageService.toKilobytes(\n                  VsanUiUtils.convertLocalizedStringToNumber(hardQuotaValue), hardQuotaSize);\n            if (isNaN(hardQuotaInKB)) {\n               validationErrors.push(VsanUiUtils.getString(\"vsan.fileservices.shares.validation.invalidHardQuota\"));\n            } else if (hardQuotaInKB < CreateShareGeneralPageService.MINIMUM_QUOTA_SIZE_IN_KB) {\n               validationErrors.push(VsanUiUtils.getString(\"vsan.fileservices.shares.validation.hardQuotaTooLittle\"));\n            } else if (hardQuotaInKB > CreateShareGeneralPageService.MAXIMUM_QUOTA_SIZE_IN_KB) {\n               validationErrors.push(VsanUiUtils.getString(\"vsan.fileservices.shares.validation.hardQuotaTooBig\"));\n            }\n         }\n      }\n\n      if (isSoftQuotaSelected\n            && softQuotaValue\n            && isHardQuotaSelected\n            && hardQuotaValue\n            && softQuotaInKB > hardQuotaInKB) {\n         validationErrors\n               .push(VsanUiUtils.getString(\"vsan.fileservices.shares.validation.softQuotaGreaterThanHardQuota\"));\n      }\n\n      return !!validationErrors.length ? validationErrors : null;\n   }\n\n   /**\n    * Converts threshold's value to KBs so different thresholds can be compared\n    */\n   private static toKilobytes(value: number, size: VsanFileServiceShareSize): number {\n      if (isNaN(value) || !size) {\n         return NaN;\n      }\n\n      let power: number = 1;\n      switch (size) {\n         case VsanFileServiceShareSize.MB:\n            power = 1;\n            break;\n         case VsanFileServiceShareSize.GB:\n            power = 2;\n            break;\n         case VsanFileServiceShareSize.TB:\n            power = 3;\n            break;\n         default:\n            throw new Error(\"Not supported size.\");\n      }\n\n      return value * (1024 ** power);\n   }\n}\n"]}