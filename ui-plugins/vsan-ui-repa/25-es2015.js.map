{"version":3,"sources":["./src/app/vsan/common/service/navigation/model/ask-vmware-id.ts","./src/app/vsan/common/component/chart/performance/perf-export-data.ts","./src/app/vsan/common/directive/clr-button-group/clr-button-group-common.directive.ts","./src/app/vsan/common/component/chart/performance/perf-charts-container.component.ts","./src/app/vsan/common/component/chart/performance/perf-charts-container.html"],"names":[],"mappings":"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","file":"25-es2015.js","sourcesContent":["/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n/**\n * IDs used in external navigation to Ask VMware pages\n */\nexport enum AskVmwareId {\n   CLUSTER_SHUTDOWN = \"com.vmware.vsan.clustershutdown.vmshutdown\",\n   FILE_SERVICE = \"fileservice.user.guide\",\n   FILE_SERVICE_IMBALANCE = \"com.vmware.vsan.fileservice.remediate.imbalance\",\n   TOP_CONTRIBUTORS = \"com.vmware.vsan.perf.graph.topn\",\n   OBFUSCATED_DATA = \"com.vmware.vsan.obfuscation.data.map\",\n   VM_CONSUMPTION_IOPS = \"com.vmware.vsan.perf.graph.cluster-domclient.iops\",\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\n\n/**\n * The data needed for the export all charts functionality\n */\nexport class PerfExportData {\n   chart: Highcharts.Chart;\n\n   graphName: string;\n\n   entityName: string;\n\n   subEntityName: string;\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterContentInit, ContentChildren, Directive, ElementRef} from \"@angular/core\";\nimport {ClrButton} from \"@clr/angular\";\nimport {ClrButtonBaseDirective, DirectiveHolder} from \"@directive/clr-button-group/clr-button-base.directive\";\n\n/**\n * Applies on every clr-button-group and help to link the clr-button with directive applieds on it,  which extends\n * {@link ClrButtonBaseDirective}, to the actual rendered html button.\n */\n@Directive({\n   selector: \"clr-button-group\",\n})\nexport class ClrButtonGroupCommonDirective implements AfterContentInit {\n\n   @ContentChildren(ClrButton, {descendants: true})\n   clrButtons: ClrButton[];\n\n   constructor(private elRef: ElementRef) {}\n\n   ngAfterContentInit(): void {\n      setTimeout(() => {\n         const allButtons: NodeListOf<HTMLButtonElement> = this.elRef.nativeElement.querySelectorAll(\"button\");\n         // match button with clrButton and notify directives\n         this.clrButtons.filter(clrButton => !!(clrButton as DirectiveHolder).directives)\n               .forEach((clrButton, index) => {\n                  const buttonFound: HTMLButtonElement = this.findButtonByName(clrButton.name, allButtons);\n                  if (buttonFound) {\n                     (clrButton as DirectiveHolder).directives.forEach(directive => {\n                        directive.resolveButton(clrButton, buttonFound, index);\n                     });\n                  }\n               });\n      });\n   }\n\n   private findButtonByName(name: string, buttons: NodeListOf<HTMLButtonElement>): HTMLButtonElement {\n      for (let i: number = 0; i < buttons.length; i++) {\n         if (buttons.item(i).name === name) {\n            return buttons.item(i);\n         }\n      }\n      return null;\n   }\n\n}","/* Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {\n   AfterViewInit,\n   ChangeDetectorRef,\n   Component,\n   EventEmitter,\n   Input,\n   OnInit,\n   Output,\n   ViewRef,\n} from \"@angular/core\";\nimport {ChartPlotLineSelectionData} from \"@component/chart/model/chart-plot-line-selection.data\";\nimport {PefGraphId} from \"@component/chart/model/perf-graph-id\";\nimport {PerfChartContextData} from \"@component/chart/performance/perf-chart-context.data\";\nimport {PerfConsolidatedMetricSeries} from \"@component/chart/performance/perf-consolidated-metric-series\";\nimport {PerfExportData} from \"@component/chart/performance/perf-export-data\";\nimport {PerfGraph} from \"@component/chart/performance/perf-graph\";\nimport {SeriesPointHovered} from \"@component/chart/performance/series-point-hovered\";\nimport {DateRangeData} from \"@component/datetime-picker/date-range-picker.component\";\nimport {UnavailableViewSpec} from \"@component/unavailable-view/unavailable-view-spec\";\nimport {PerfGraphMetricsData} from \"@generated/perf-graph-metrics-data\";\nimport {PerfGraphThreshold} from \"@generated/perf-graph-threshold\";\nimport {PerfTimeRangeData} from \"@generated/perf-time-range-data\";\nimport {AskVmwareId} from \"@service/navigation/model/ask-vmware-id\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\nimport {IdGenerator} from \"@util/id-generator\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {PerfOrchestratorService} from \"@util/performance/perf-orchestrator-service\";\nimport {ReferenceWatcher} from \"@util/reference-watcher\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ConsolidatedEntitiesData} from \"../../../../performance/view/consolidated-entities-data.data\";\nimport {ChartZoomOption} from \"./chart-zoom-option\";\nimport {FlatGraphMetric} from \"./flat-graph-metric\";\nimport {GraphMetric} from \"./graph-metrics.data\";\nimport {PerfChartUtil} from \"./perf-chart-util\";\n\n@Component({\n   selector: \"vsan-perf-charts-container\",\n   templateUrl: \"perf-charts-container.html\",\n   styleUrls: [\"perf-charts-container.scss\"],\n   providers: [ReferenceWatcher],\n})\nexport class PerfChartsContainerComponent implements OnInit, AfterViewInit {\n   private readonly BOTTOM_MIDDLE_POSITION: string = \"bottom-middle\";\n   private readonly BOTTOM_LEFT_POSITION: string = \"bottom-left\";\n   private readonly BOTTOM_RIGHT_POSITION: string = \"bottom-right\";\n\n   VsanUiUtils: typeof VsanUiUtils = VsanUiUtils;\n   PefGraphId: typeof PefGraphId = PefGraphId;\n   readonly AskVmwareId: typeof AskVmwareId = AskVmwareId;\n\n   private loadedCharts: PerfExportData[] = [];\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   flatData: FlatGraphMetric[] = [];\n   visibleData: FlatGraphMetric;\n   isZoomed: boolean;\n\n   id: string;\n\n   @Input()\n   title: string;\n\n   @Input()\n   icon: string;\n\n   @Input()\n   subtitle: string;\n\n   @Input()\n   parentLoading: boolean;\n\n   @Input()\n   isShowAllLinkVisible: boolean;\n\n   @Input()\n   isAskVmwareLinkVisible: boolean;\n\n   @Input()\n   looseXAxisLabel: boolean = false;\n\n   @Input()\n   isZoomButtonVisible: boolean = true;\n\n   @Input()\n   isEmptyChartsVisible: boolean = true;\n\n   @Input()\n   isShowGraphDescription: boolean = true;\n\n   @Input()\n   showHeaderSection: boolean = true;\n\n   @Input()\n   currentTimeRange: PerfTimeRangeData | DateRangeData;\n\n   @Output()\n   clickShowAllLink: EventEmitter<void> = new EventEmitter<void>();\n\n   @Output()\n   zoom: EventEmitter<ChartZoomOption> = new EventEmitter<ChartZoomOption>(true);\n\n   @Input()\n   zoomOutOptions: ChartZoomOption;\n\n   pointHoveredOption: SeriesPointHovered;\n\n   @Input()\n   chartLegendPosition: string = PerfChartUtil.LEGEND_BOTTOM;\n\n   @Input()\n   collapsible: boolean;\n\n   /**\n    * compact mode means we need to display the small charts and keep them in one line\n    * currently only \"performance for support\" view has compact mode\n    */\n   @Input()\n   compactMode: boolean = false;\n\n   @Input()\n   customizableThresholds: PerfGraphThreshold[];\n\n   /**\n    * In top contributors view all the cluster vm graphs are requested, but only one is visible\n    * at a time, based on the selected cluster metric\n    */\n   @Input()\n   visibleGraphId: string;\n\n   @Input()\n   keepPlotLineOnClick: boolean = false;\n\n   @Output()\n   allChartsLoaded: EventEmitter<PerfExportData[]> = new EventEmitter<PerfExportData[]>();\n\n   @Output()\n   onPlotLineChanged: EventEmitter<ChartPlotLineSelectionData> = new EventEmitter<ChartPlotLineSelectionData>();\n\n   @Output()\n   onTooltipActionClicked: EventEmitter<ChartPlotLineSelectionData> = new EventEmitter<ChartPlotLineSelectionData>();\n\n   @Input()\n   selectedPlotLineValue: string;\n\n   @Input()\n   actionLink: string;\n\n   @Input()\n   consolidatedEntitiesData: ConsolidatedEntitiesData;\n\n   private _graphMetrics: GraphMetric[];\n\n   @Input()\n   set data(value: GraphMetric[]) {\n      if (value === this._graphMetrics) {\n         return;\n      }\n\n      if (value) {\n         this._graphMetrics = value;\n      } else {\n         if (this._graphMetrics && this._graphMetrics.length === 0) {\n            return;\n         } else {\n            this._graphMetrics = [];\n         }\n      }\n\n      this.loadedCharts = [];\n      // Update the flat collection\n      const metrics: FlatGraphMetric[] = [];\n      this._graphMetrics.forEach((entry: GraphMetric) => {\n         metrics.push(\n               ...entry.graphs.map(graph =>\n                     new FlatGraphMetric(entry.entityRefId, entry.metrics, graph, entry.entityIdentifier)));\n      });\n      if (VsanUiUtils.isEmpty(this.flatData) || !this.isRealtime) {\n         this.flatData = metrics;\n      } else {\n         this.flatData.forEach((oldMetric, index) => {\n            const newMetric: FlatGraphMetric = metrics[index];\n            oldMetric.metrics = newMetric.metrics;\n            oldMetric.graph.metrics = newMetric.graph.metrics;\n            oldMetric.graph.secondGraph = newMetric.graph.secondGraph;\n            oldMetric.entityIdentifier = newMetric.entityIdentifier;\n         });\n      }\n\n      // If there is no chart data available, PerfChartComponent.load.emit() cannot be triggered,\n      // we need to manually call this.allChartsLoaded.emit() to update the data of PerfChartExportComponent.\n      if (VsanUiUtils.isEmpty(this.flatData)) {\n         this.allChartsLoaded.emit(null);\n      }\n\n      this.setSecondGraphData();\n   }\n\n   @Input()\n   chartWidth: number;\n\n   @Input()\n   chartHeight: number;\n\n   @Input()\n   isRealtime: boolean;\n\n   setSecondGraphData(): void {\n      // Passed second graph metrics\n      this.flatData.forEach(flatMetric => {\n         if (flatMetric.graph.secondGraph == null) {\n            return;\n         }\n\n         const data: FlatGraphMetric =\n               this.flatData.find((metric: FlatGraphMetric) => metric.graph.id === flatMetric.graph.secondGraph.id);\n         if (!data) {\n            return;\n         }\n\n         flatMetric.graph.secondGraph = data.graph;\n\n         const series: PerfGraphMetricsData[] = data.metrics.metricsSeries;\n         flatMetric.metrics.metricsSeries.push(...series);\n      });\n   }\n\n   differentConsolidatedGraphs: PerfGraph[];\n\n   @Input()\n   set consolidatedData(value: GraphMetric[]) {\n      this.loadedCharts = [];\n      const consolidatedFlatDataMap: any = {};\n      this.differentConsolidatedGraphs = [];\n\n      value.forEach((entry: GraphMetric) => {\n         entry.graphs.forEach((graph: PerfGraph) => {\n            if (this.visibleGraphId && graph.id !== this.visibleGraphId) {\n               return;\n            }\n            if (consolidatedFlatDataMap[graph.id] == null) {\n               consolidatedFlatDataMap[graph.id] = [];\n               this.differentConsolidatedGraphs.push(graph);\n            }\n\n            // Set all metrics for current graph in map object\n            consolidatedFlatDataMap[graph.id]\n                  .push(...this.perfOrchestrator.data.entitiesFlatData\n                        .filter(x => x.graph.id === graph.id));\n         });\n      });\n   }\n\n   constructor(private perfOrchestrator: PerfOrchestratorService,\n         private changeDetector: ChangeDetectorRef,\n         private refWatcher: ReferenceWatcher) {\n   }\n\n   ngOnInit(): void {\n      this.id = IdGenerator.getGuid();\n\n      this.refWatcher.watchSubscriptionRef(this.perfOrchestrator.consolidatedViewHelper.change.subscribe(() => {\n         if (this.perfOrchestrator.isShowSpecificModeEnabled && this.perfOrchestrator.isConsolidatedViewStateEnabled) {\n            this.consolidatedData = this.perfOrchestrator.data.entitiesGraphData;\n         }\n      }));\n   }\n\n   ngAfterViewInit(): void {\n      /**\n       * If view state is changed (from \"Show specific vms\" to \"Cluster level metrics for example\")\n       * while some entity perf data is still fetching, then loading has to be stopped because\n       * this entity perf data is not needed and wouldn't be loaded.\n       */\n      if (this.perfOrchestrator.isLoading) {\n         this.perfOrchestrator.remainingEntitiesToLoad = 0;\n      }\n   }\n\n   onChartZoomIn(opt: ChartZoomOption): void {\n      this.isZoomed = !opt.isZoomOut;\n      this.zoomOutOptions = opt;\n      this.zoom.emit(opt);\n      if (!(this.changeDetector as ViewRef).destroyed) {\n         this.changeDetector.detectChanges();\n      }\n   }\n\n   onPointHovered(value: SeriesPointHovered): void {\n      this.pointHoveredOption = value;\n   }\n\n   onChartLoad(chart: Highcharts.Chart, graph: PerfGraph): void {\n      const exportChartData: PerfExportData = new PerfExportData();\n      exportChartData.chart = chart;\n      exportChartData.graphName = graph.label;\n\n      this.loadedCharts.push(exportChartData);\n\n      const chartsNumber: number = this.getExpectedChartsCount();\n\n      // Announce messages for screen reader users when all charts finish loading.\n      if (this.loadedCharts.length === chartsNumber) {\n         this.allChartsLoaded.emit(this.loadedCharts);\n         const message: string = chartsNumber === 1\n               ? VsanUiUtils.getString(\"vsan.monitor.performance.chart.loaded.singular\")\n               : VsanUiUtils.getString(\"vsan.monitor.performance.chart.loaded.plural\", chartsNumber);\n         this.srOnlyMessage = message;\n      }\n   }\n\n   getExpectedChartsCount(): number {\n      let chartsNumber: number = 0;\n      if (this.flatData && this.flatData.length > 0) {\n         // we expect only one graph to be visible\n         if (this.visibleGraphId) {\n            chartsNumber = 1;\n         } else {\n            chartsNumber = this.flatData.length;\n         }\n      } else if (this.differentConsolidatedGraphs && this.differentConsolidatedGraphs.length > 0) {\n         chartsNumber = this.differentConsolidatedGraphs.length;\n      }\n\n      return chartsNumber;\n   }\n\n   get noDataView(): UnavailableViewSpec {\n      return VsanDateTimeUtils.isRecentTimeRange(this.currentTimeRange)\n            ? UnavailableViewSpec.PERF_VIEW_NO_DATA\n            : UnavailableViewSpec.PERF_VIEW_NO_DATA_FOR_SELECTED_PERIOD;\n   }\n\n   get emptyChartsVisible(): boolean {\n      // in composite chart case if no vm is selected or all vms are unchecked the view should be empty without\n      // unavailable view shown. differentConsolidatedGraphs in this case is [], so check it only for null.\n      return this.currentTimeRange\n            && this.isEmptyChartsVisible\n            && VsanUiUtils.isEmpty(this.flatData)\n            && this.differentConsolidatedGraphs == null;\n   }\n\n   graphTooltipVisible = (entry: FlatGraphMetric): boolean => {\n      return this.isShowGraphDescription && !!entry.graph.description;\n   };\n\n   /**\n    * Expand the charts to full screen width when the screen\n    * size is small or we only have one chart\n    */\n   get useFullWidth(): boolean {\n      const smallResolution: boolean = document.body.scrollWidth < 1000;\n      const isOnlyOneChart: boolean = !VsanUiUtils.isEmpty(this.flatData) && this.flatData.length === 1;\n      return !!this.visibleGraphId || smallResolution || isOnlyOneChart;\n   }\n\n   /**\n    * Reset the zoom level to default\n    * @param event\n    */\n   onZoomOut(): void {\n      const zoomOut: ChartZoomOption = new ChartZoomOption();\n      zoomOut.isZoomOut = true;\n      this.zoomOutOptions = zoomOut;\n   }\n\n   /**\n    * Open dialog with expanded graphic\n    * @param event\n    */\n   onExpand(entry: FlatGraphMetric): void {\n      const context: PerfChartContextData = {\n         entry: entry,\n         isShowZoomButton: this.isZoomButtonVisible,\n         isShowGraphDescription: this.isShowGraphDescription,\n         looseXAxisLabel: this.looseXAxisLabel,\n         chartLegendPosition: this.chartLegendPosition,\n         zoomOptions: this.zoomOutOptions,\n         customizableThresholds: this.customizableThresholds,\n      };\n\n      new ModalBuilder(\"chart/expandChart\")\n            .setSize(1200, 600)\n            .open(context)\n            .then(this.refreshZoomOnCollapseChart);\n   }\n\n   private refreshZoomOnCollapseChart = async (zoomOptions: ChartZoomOption) => {\n      if (zoomOptions) {\n         this.onChartZoomIn(zoomOptions);\n      }\n   };\n\n   /**\n    * Calculates the popup position of the signpost to avoid been cut off by the small screens\n    */\n   getPopUpPosition = (chartIndex: number): string => {\n      if (this.useFullWidth) {\n         return this.BOTTOM_MIDDLE_POSITION;\n      }\n      if (!this.compactMode && chartIndex % 2 === 0) {\n         return this.BOTTOM_RIGHT_POSITION;\n      }\n      return this.BOTTOM_LEFT_POSITION;\n   };\n\n   isHeaderSectionVisible(): boolean {\n      return !this.emptyChartsVisible && (!!this.title || !!this.subtitle || this.isAskVmwareLinkVisible ||\n            this.isShowAllLinkVisible || this.isZoomButtonVisible) && this.showHeaderSection;\n   }\n\n   getSpecifiedEntitiesFlatDataByGraph(graph: PerfGraph): PerfConsolidatedMetricSeries[] {\n      return this.perfOrchestrator.getSpecifiedEntitiesFlatDataByGraph(graph);\n   }\n}\n","<!--Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"vsan-actions\" *ngIf=\"isHeaderSectionVisible()\">\n   <div id=\"title\" class=\"title\">\n      <div class=\"icon-name-container\">\n         <clr-icon *ngIf=\"icon\" [attr.shape]=\"icon\"></clr-icon>\n         <h6 *ngIf=\"title\" [innerHTML]=\"title\"></h6>\n      </div>\n      <clr-button-group class=\"btn-link buttons-group\">\n         <clr-button id=\"ask-vmware\"\n                     name=\"ask-vmware\"\n                     *ngIf=\"isAskVmwareLinkVisible\"\n                     class=\"btn btn-sm\"\n                     [external-link]=\"'vsan.perf.chart.link' | localized\"\n                     [helpId]=\"AskVmwareId.VM_CONSUMPTION_IOPS\">\n         </clr-button>\n         <clr-button id=\"show-all-btn\"\n                     name=\"show-all-btn\"\n                     *ngIf=\"isShowAllLinkVisible\"\n                     (click)=\"clickShowAllLink.emit()\"\n                     class=\"btn btn-sm\">\n            {{\"vsan.perf.diagnostics.fullPerormanceDetailsLink\" | localized}}\n         </clr-button>\n         <clr-button id=\"zoom-btn\"\n                     name=\"zoom-btn\"\n                     *ngIf=\"isZoomButtonVisible && isZoomed\"\n                     (click)=\"onZoomOut()\"\n                     class=\"btn btn-sm\">\n            {{\"vsan.perf.chart.zoom\" | localized}}\n         </clr-button>\n      </clr-button-group>\n   </div>\n   <span id=\"subtitle\" *ngIf=\"subtitle\">{{subtitle}}</span>\n</div>\n\n<vsan-unavailable-view *ngIf=\"emptyChartsVisible\"\n                       [unavailableViewSpec]=\"noDataView\">\n</vsan-unavailable-view>\n\n<section id=\"consolidated-charts\"\n         *ngIf=\"differentConsolidatedGraphs != null\"\n         [class.small-charts]=\"compactMode\">\n   <div *ngFor=\"let graph of differentConsolidatedGraphs; let i = index\"\n        class=\"chart-container\"\n        [class.full-width]=\"useFullWidth\">\n      <vsan-perf-chart [graph]=\"graph\"\n                       [consolidatedMetrics]=\"getSpecifiedEntitiesFlatDataByGraph(graph)\"\n                       [consolidatedEntitiesData]=\"consolidatedEntitiesData\"\n                       [extremes]=\"zoomOutOptions\"\n                       (zoom)=\"onChartZoomIn($event)\"\n                       (load)=\"onChartLoad($event, graph)\"\n                       [index]=\"i\"\n                       [showSmall]=\"compactMode\"\n                       [containerId]=\"id\"\n                       [showExpandButton]=\"false\"\n                       [showExportButton]=\"false\"\n                       [tooltipPopUpPosition]=\"getPopUpPosition(i)\"\n                       [looseXAxisLabel]=\"looseXAxisLabel\"\n                       [legendPosition]=\"chartLegendPosition\"\n                       [customizableThresholds]=\"customizableThresholds\"\n                       [chartWidth]=\"chartWidth\"\n                       [chartHeight]=\"chartHeight\"\n                       (pointHovered)=\"onPointHovered($event)\"\n                       [pointHoveredOption]=\"pointHoveredOption\">\n      </vsan-perf-chart>\n   </div>\n</section>\n<section id=\"charts\"\n         *ngIf=\"flatData?.length > 0 && !visibleGraphId\"\n         [class.small-charts]=\"compactMode\">\n   <div *ngFor=\"let entry of flatData; let i = index;\"\n        class=\"chart-container\"\n        [class.full-width]=\"useFullWidth\">\n      <vsan-perf-chart [graph]=\"entry.graph\"\n                       [metrics]=\"entry.metrics\"\n                       [entityRefId]=\"entry.entityRefId ? entry.entityRefId : entry.metrics.entityRefId\"\n                       (zoom)=\"onChartZoomIn($event)\"\n                       (expand)=\"onExpand(entry)\"\n                       (load)=\"onChartLoad($event, entry.graph)\"\n                       [index]=\"i\"\n                       [isRealtime]=\"isRealtime\"\n                       [isZoomAllowed]=\"!isRealtime\"\n                       [containerId]=\"id\"\n                       [showSmall]=\"compactMode\"\n                       [tooltipVisible]=\"graphTooltipVisible(entry)\"\n                       [tooltipPopUpPosition]=\"getPopUpPosition(i)\"\n                       [extremes]=\"zoomOutOptions\"\n                       [looseXAxisLabel]=\"looseXAxisLabel\"\n                       [legendPosition]=\"chartLegendPosition\"\n                       [customizableThresholds]=\"customizableThresholds\"\n                       [keepPlotLineOnClick]=\"keepPlotLineOnClick\"\n                       (onPlotLineChanged)=\"onPlotLineChanged.emit($event)\"\n                       (onTooltipActionClicked)=\"onTooltipActionClicked.emit($event)\"\n                       [selectedPlotLineValue]=\"selectedPlotLineValue\"\n                       [actionLink]=\"actionLink\"\n                       (pointHovered)=\"onPointHovered($event)\"\n                       [pointHoveredOption]=\"pointHoveredOption\">\n      </vsan-perf-chart>\n   </div>\n</section>\n<section id=\"filteredCharts\"\n         *ngIf=\"flatData?.length > 0 && visibleGraphId\">\n   <ng-container *ngFor=\"let entry of flatData; let i = index;\">\n      <vsan-perf-chart *ngIf=\"visibleGraphId === entry.graph.id\"\n                       [graph]=\"entry.graph\"\n                       [metrics]=\"entry.metrics\"\n                       [entityRefId]=\"entry.entityRefId ? entry.entityRefId : entry.metrics.entityRefId\"\n                       (zoom)=\"onChartZoomIn($event)\"\n                       (expand)=\"onExpand(entry)\"\n                       (load)=\"onChartLoad($event, entry.graph)\"\n                       [index]=\"0\"\n                       [containerId]=\"id\"\n                       [showSmall]=\"compactMode\"\n                       [tooltipVisible]=\"graphTooltipVisible(entry)\"\n                       [tooltipPopUpPosition]=\"getPopUpPosition(0)\"\n                       [extremes]=\"zoomOutOptions\"\n                       [looseXAxisLabel]=\"looseXAxisLabel\"\n                       [legendPosition]=\"chartLegendPosition\"\n                       [customizableThresholds]=\"customizableThresholds\"\n                       [keepPlotLineOnClick]=\"keepPlotLineOnClick\"\n                       (onPlotLineChanged)=\"onPlotLineChanged.emit($event)\"\n                       (onTooltipActionClicked)=\"onTooltipActionClicked.emit($event)\"\n                       [selectedPlotLineValue]=\"selectedPlotLineValue\"\n                       [actionLink]=\"actionLink\"\n                       (pointHovered)=\"onPointHovered($event)\"\n                       [pointHoveredOption]=\"pointHoveredOption\">\n      </vsan-perf-chart>\n   </ng-container>\n</section>"],"sourceRoot":"webpack:///"}