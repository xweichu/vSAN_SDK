{"version":3,"sources":["webpack:///src/app/vsan/common/util/vsan-health-util.ts"],"names":["VsanHealthUtil","status","red","CLR_ERROR_ICON_CLASS","green","CLR_SUCCESS_ICON_CLASS","info","CLR_INFO_ICON_CLASS","yellow","CLR_WARN_ICON_CLASS","skipped","SILENT_CHECK","unknown","CLR_ERROR_STANDARD_ICON_SHAPE","CLR_SUCCESS_STANDARD_ICON_SHAPE","CLR_INFO_STANDARD_ICON_SHAPE","CLR_WARN_STANDARD_ICON_SHAPE","CLR_HELP","CLR_CIRCLE_ICON_SHAPE","getString","HEALTHY","REMOTE_ACCESSIBLE","DATA_MOVE","NON_AVAILABILITY_RELATED_RECONFIG","NON_AVAILABILITY_RELATED_INCOMPLIANCE","REDUCED_AVAILABILITY_WITH_ACTIVE_REBUILD","REDUCED_AVAILABILITY_WITH_POLICY_PENDING","NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_POLICY_PENDING","NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_POLICY_PENDING_FAILED","REDUCED_AVAILABILITY_WITH_PAUSED_REBUILD","NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_PAUSED_REBUILD","UNKNOWN","INACCESSIBLE","REDUCED_AVAILABILITY_WITH_NO_REBUILD","REDUCED_AVAILABILITY_WITH_NO_REBUILD_DELAY_TIMER","REDUCED_AVAILABILITY_WITH_POLICY_PENDING_FAILED","REDUCED_AVAILABILITY","REBUILD","COMPLIANT","INACCESSIBLE_V2","REMOTE_ACCESSIBLE_V2","REDUCED_AVAILABILITY_WITH_DURABILITY","REDUCED_AVAILABILITY_WITHOUT_DURABILITY","OTHER","ACTIVE","NONE","PAUSE","SCHEDULED","FAILED","PENDING","state","HEALTH_STATES_DANGER_ORDER","indexOf","HEALTH_STATES_WARNING_ORDER","HEALTH_STATES_SUCCESS_ORDER","isDangerHealthState","CLR_DANGER_LABEL_CLASS","isWarningHealthState","CLR_WARNING_LABEL_CLASS","isSuccessHealthState","CLR_SUCCESS_LABEL_CLASS","cell","cellValue","cellType","string","vsanObjectUuid","Float","Long","vsanObjectHealth","pspHealth","vsanObjectHealthv2","mor","HostReference","dynamic","listMor","listFloat","listLong","listString","strWithLink","date","health","healthWithString","value","type","precisionDigits","split","localizeNumber","length","getVsanObjectHealthStatusText","getVsanObjectHealthStatusIconShape","getVsanObjectHealthStatusIconClass","getVsanHealthStatusIconClass","getVsanHealthStatusIconShape","label","values","map","formatedNumber","morCellArr","Map","moUid","uid","create","object","serverGuid","set","objectName","timestamp","formatDate","INSTANCE_TIMESTAMP_OPTIONS","INSTANCE_TITLE_TIMESTAMP_OPTIONS","CEIP_TEST_ID","SUPPORT_INSIGHT_TEST_ID","COMPLIANCE_UNKNOWN","INCOMPLIANCE_UNKNOWN","REBUILD_UNKNOWN","POLICY_UNKNOWN","HEALTH_STATES_ORDER","concat","INSTANCE_MONTH_FORMAT","INSTANCE_DAY_FORMAT","month","day","hour","DEFAULT_HOUR_FORMAT","minute","DEFAULT_MINUTE_FORMAT","second","DEFAULT_SECOND_FORMAT","VsanHealthTestId"],"mappings":"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","file":"11-es5.js","sourcesContent":["/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ColumnType} from \"@generated/column-type\";\nimport {ObjectHealthComplianceState} from \"@generated/object-health-compliance-state\";\nimport {ObjectHealthIncomplianceReason} from \"@generated/object-health-incompliance-reason\";\nimport {ObjectHealthPolicyState} from \"@generated/object-health-policy-state\";\nimport {ObjectHealthRebuildState} from \"@generated/object-health-rebuild-state\";\nimport {PspObjectHealthState} from \"@generated/psp-object-health-state\";\nimport {VsanHealthInfo} from \"@generated/vsan-health-info\";\nimport {VsanHealthStatus} from \"@generated/vsan-health-status\";\nimport {VsanObjectHealthState} from \"@generated/vsan-object-health-state\";\nimport {VsanTestCell} from \"@generated/vsan-test-cell\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Icon} from \"@util/icon\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * vSAN health utilities.\n */\nexport class VsanHealthUtil {\n   static readonly CEIP_TEST_ID: string = \"com.vmware.vsan.health.test.vsancloudhealthceipexception\";\n   static readonly SUPPORT_INSIGHT_TEST_ID: string = \"com.vmware.vsan.health.test.vsanenablesupportinsight\";\n\n   private static readonly HEALTH_STATES_DANGER_ORDER: BaseHealthState[] = [\n      ObjectHealthComplianceState.INACCESSIBLE_V2,\n      ObjectHealthIncomplianceReason.REDUCED_AVAILABILITY_WITHOUT_DURABILITY, ObjectHealthRebuildState.NONE,\n      ObjectHealthRebuildState.PAUSE, ObjectHealthPolicyState.FAILED,\n      VsanObjectHealthState.INACCESSIBLE, VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_NO_REBUILD,\n      VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_NO_REBUILD_DELAY_TIMER,\n      VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_POLICY_PENDING_FAILED,\n   ];\n   private static readonly HEALTH_STATES_WARNING_ORDER: BaseHealthState[] = [\n      ObjectHealthIncomplianceReason.REDUCED_AVAILABILITY_WITH_DURABILITY, ObjectHealthIncomplianceReason.OTHER,\n      ObjectHealthPolicyState.PENDING, VsanObjectHealthState.DATA_MOVE,\n      VsanObjectHealthState.NON_AVAILABILITY_RELATED_RECONFIG,\n      VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE,\n      VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_ACTIVE_REBUILD,\n      VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_POLICY_PENDING,\n      VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_POLICY_PENDING,\n      VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_POLICY_PENDING_FAILED,\n      VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_PAUSED_REBUILD,\n      VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_PAUSED_REBUILD,\n      VsanObjectHealthState.UNKNOWN, ObjectHealthComplianceState.COMPLIANCE_UNKNOWN,\n      ObjectHealthIncomplianceReason.INCOMPLIANCE_UNKNOWN, ObjectHealthRebuildState.REBUILD_UNKNOWN,\n      ObjectHealthPolicyState.POLICY_UNKNOWN,\n   ];\n   private static readonly HEALTH_STATES_SUCCESS_ORDER: BaseHealthState[] = [\n      ObjectHealthComplianceState.REMOTE_ACCESSIBLE_V2,\n      ObjectHealthComplianceState.COMPLIANT, ObjectHealthRebuildState.SCHEDULED, ObjectHealthRebuildState.ACTIVE,\n      VsanObjectHealthState.HEALTHY, VsanObjectHealthState.REMOTE_ACCESSIBLE,\n   ];\n\n   static readonly HEALTH_STATES_ORDER: BaseHealthState[] =\n         VsanHealthUtil.HEALTH_STATES_DANGER_ORDER\n               .concat(VsanHealthUtil.HEALTH_STATES_WARNING_ORDER)\n               .concat(VsanHealthUtil.HEALTH_STATES_SUCCESS_ORDER);\n\n   // health state label classes\n   static readonly CLR_SUCCESS_LABEL_CLASS: string = \"label-success\";\n   static readonly CLR_WARNING_LABEL_CLASS: string = \"label-warning\";\n   static readonly CLR_DANGER_LABEL_CLASS: string = \"label-danger\";\n\n   private static readonly INSTANCE_MONTH_FORMAT: string = \"short\";\n   private static readonly INSTANCE_DAY_FORMAT: string = \"numeric\";\n   private static readonly INSTANCE_TIMESTAMP_OPTIONS: Intl.DateTimeFormatOptions = {\n      month: VsanHealthUtil.INSTANCE_MONTH_FORMAT,\n      day: VsanHealthUtil.INSTANCE_DAY_FORMAT,\n      hour: VsanDateTimeUtils.DEFAULT_HOUR_FORMAT,\n      minute: VsanDateTimeUtils.DEFAULT_MINUTE_FORMAT,\n      second: VsanDateTimeUtils.DEFAULT_SECOND_FORMAT,\n   };\n   private static readonly INSTANCE_TITLE_TIMESTAMP_OPTIONS: Intl.DateTimeFormatOptions = {\n      month: VsanHealthUtil.INSTANCE_MONTH_FORMAT,\n      day: VsanHealthUtil.INSTANCE_DAY_FORMAT,\n      hour: VsanDateTimeUtils.DEFAULT_HOUR_FORMAT,\n      minute: VsanDateTimeUtils.DEFAULT_MINUTE_FORMAT,\n   };\n\n   static getVsanHealthStatusIconClass(status: VsanHealthStatus): string {\n      switch (status) {\n         case VsanHealthStatus.red:\n            return Icon.CLR_ERROR_ICON_CLASS;\n         case VsanHealthStatus.green:\n            return Icon.CLR_SUCCESS_ICON_CLASS;\n         case VsanHealthStatus.info:\n            return Icon.CLR_INFO_ICON_CLASS;\n         case VsanHealthStatus.yellow:\n            return Icon.CLR_WARN_ICON_CLASS;\n         case VsanHealthStatus.skipped:\n            return Icon.SILENT_CHECK;\n         case VsanHealthStatus.unknown:\n         default:\n            return \"\";\n      }\n   }\n\n   static getVsanHealthStatusIconShape(status: VsanHealthStatus): string {\n      switch (status) {\n         case VsanHealthStatus.red:\n            return Icon.CLR_ERROR_STANDARD_ICON_SHAPE;\n         case VsanHealthStatus.green:\n            return Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE;\n         case VsanHealthStatus.info:\n            return Icon.CLR_INFO_STANDARD_ICON_SHAPE;\n         case VsanHealthStatus.yellow:\n            return Icon.CLR_WARN_STANDARD_ICON_SHAPE;\n         case VsanHealthStatus.skipped:\n            return Icon.SILENT_CHECK;\n         case VsanHealthStatus.unknown:\n            return Icon.CLR_HELP;\n         default:\n            return Icon.CLR_CIRCLE_ICON_SHAPE;\n      }\n   }\n\n   static getVsanHealthStatusBackgroundClass(status: VsanHealthStatus): string {\n      switch (status) {\n         case VsanHealthStatus.red:\n            return \"alert-danger\";\n         case VsanHealthStatus.green:\n            return \"alert-success\";\n         case VsanHealthStatus.yellow:\n            return \"alert-warning\";\n         case VsanHealthStatus.info:\n         case VsanHealthStatus.skipped:\n            return \"alert-info\";\n         case VsanHealthStatus.unknown:\n         default:\n            return \"\";\n      }\n   }\n\n   /** Returns verbose health status */\n   static getVsanHealthStatusText(status: VsanHealthStatus): string {\n      switch (status) {\n         case VsanHealthStatus.red:\n            return VsanUiUtils.getString(\"vsan.health.historical.details.status.error\");\n         case VsanHealthStatus.green:\n            return VsanUiUtils.getString(\"vsan.health.historical.details.status.success\");\n         case VsanHealthStatus.info:\n            return VsanUiUtils.getString(\"vsan.health.historical.details.status.info\");\n         case VsanHealthStatus.yellow:\n            return VsanUiUtils.getString(\"vsan.health.historical.details.status.warning\");\n         case VsanHealthStatus.skipped:\n            return VsanUiUtils.getString(\"vsan.health.historical.details.status.skipped\");\n         case VsanHealthStatus.unknown:\n            return VsanUiUtils.getString(\"vsan.health.historical.details.status.unknown\");\n         default:\n            return \"\";\n      }\n   }\n\n   static getVsanObjectHealthStatusIconClass(status: VsanObjectHealthState | string): string {\n      switch (status) {\n         case VsanObjectHealthState.HEALTHY:\n         case VsanObjectHealthState.REMOTE_ACCESSIBLE:\n            return Icon.CLR_SUCCESS_ICON_CLASS;\n         case VsanObjectHealthState.DATA_MOVE:\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_RECONFIG:\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_ACTIVE_REBUILD:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_POLICY_PENDING:\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_POLICY_PENDING:\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_POLICY_PENDING_FAILED:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_PAUSED_REBUILD:\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_PAUSED_REBUILD:\n         case VsanObjectHealthState.UNKNOWN:\n            return Icon.CLR_WARN_ICON_CLASS;\n         case VsanObjectHealthState.INACCESSIBLE:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_NO_REBUILD:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_NO_REBUILD_DELAY_TIMER:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_POLICY_PENDING_FAILED:\n            return Icon.CLR_ERROR_ICON_CLASS;\n         default:\n            return Icon.CLR_WARN_ICON_CLASS;\n      }\n   }\n\n   static getPspObjectHealthStatusText(status: PspObjectHealthState): string {\n      switch (status) {\n         case PspObjectHealthState.HEALTHY:\n            return VsanUiUtils.getString(\"vsan.pspObjectHealth.healthy\");\n         case PspObjectHealthState.REDUCED_AVAILABILITY:\n            return VsanUiUtils.getString(\"vsan.pspObjectHealth.reducedavailability\");\n         case PspObjectHealthState.REBUILD:\n            return VsanUiUtils.getString(\"vsan.pspObjectHealth.rebuild\");\n         case PspObjectHealthState.INACCESSIBLE:\n            return VsanUiUtils.getString(\"vsan.pspObjectHealth.inaccessible\");\n         default:\n            return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n   }\n\n   static getVsanObjectHealthStatusText(status: BaseHealthState | string): string {\n      switch (status) {\n         case VsanObjectHealthState.HEALTHY:\n            return VsanUiUtils.getString(\"vsan.objectHealth.healthy\");\n         case VsanObjectHealthState.DATA_MOVE:\n            return VsanUiUtils.getString(\"vsan.objectHealth.datamove\");\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_RECONFIG:\n            return VsanUiUtils.getString(\"vsan.objectHealth.nonavailabilityrelatedreconfig\");\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE:\n            return VsanUiUtils.getString(\"vsan.objectHealth.nonavailabilityrelatedincompliance\");\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_ACTIVE_REBUILD:\n            return VsanUiUtils.getString(\"vsan.objectHealth.reducedavailabilitywithactiverebuild\");\n         case VsanObjectHealthState.INACCESSIBLE:\n            return VsanUiUtils.getString(\"vsan.objectHealth.inaccessible\");\n         case VsanObjectHealthState.REMOTE_ACCESSIBLE:\n            return VsanUiUtils.getString(\"vsan.objectHealth.remoteAccessible\");\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_NO_REBUILD:\n            return VsanUiUtils.getString(\"vsan.objectHealth.reducedavailabilitywithnorebuild\");\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_NO_REBUILD_DELAY_TIMER:\n            return VsanUiUtils.getString(\"vsan.objectHealth.reducedavailabilitywithnorebuilddelaytimer\");\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_POLICY_PENDING:\n            return VsanUiUtils.getString(\"vsan.objectHealth.reducedavailabilitywithpolicypending\");\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_POLICY_PENDING_FAILED:\n            return VsanUiUtils.getString(\"vsan.objectHealth.reducedavailabilitywithpolicypendingfailed\");\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_POLICY_PENDING:\n            return VsanUiUtils.getString(\"vsan.objectHealth.nonavailabilityrelatedincompliancewithpolicypending\");\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_POLICY_PENDING_FAILED:\n            return VsanUiUtils.getString(\"vsan.objectHealth.nonavailabilityrelatedincompliancewithpolicypendingfailed\");\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_PAUSED_REBUILD:\n            return VsanUiUtils.getString(\"vsan.objectHealth.nonavailabilityrelatedincompliancewithpausedrebuild\");\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_PAUSED_REBUILD:\n            return VsanUiUtils.getString(\"vsan.objectHealth.reducedavailabilitywithpausedrebuild\");\n         case VsanObjectHealthState.UNKNOWN:\n            return VsanUiUtils.getString(\"vsan.objectHealth.unknown\");\n         case ObjectHealthComplianceState.COMPLIANT:\n            return VsanUiUtils.getString(\"vsan.objectHealth.compliancestate.compliant\");\n         case ObjectHealthComplianceState.INACCESSIBLE_V2:\n            return VsanUiUtils.getString(\"vsan.objectHealth.compliancestate.inaccessible\");\n         case ObjectHealthComplianceState.REMOTE_ACCESSIBLE_V2:\n            return VsanUiUtils.getString(\"vsan.objectHealth.remoteAccessible\");\n         case ObjectHealthIncomplianceReason.REDUCED_AVAILABILITY_WITH_DURABILITY:\n            return VsanUiUtils.getString(\"vsan.objectHealth.incompliancereason.reducedwithdurability\");\n         case ObjectHealthIncomplianceReason.REDUCED_AVAILABILITY_WITHOUT_DURABILITY:\n            return VsanUiUtils.getString(\"vsan.objectHealth.incompliancereason.reducedwithoutdurability\");\n         case ObjectHealthIncomplianceReason.OTHER:\n            return VsanUiUtils.getString(\"vsan.objectHealth.incompliancereason.other\");\n         case ObjectHealthRebuildState.ACTIVE:\n            return VsanUiUtils.getString(\"vsan.objectHealth.rebuildstate.active\");\n         case ObjectHealthRebuildState.NONE:\n            return VsanUiUtils.getString(\"vsan.objectHealth.rebuildstate.none\");\n         case ObjectHealthRebuildState.PAUSE:\n            return VsanUiUtils.getString(\"vsan.objectHealth.rebuildstate.pause\");\n         case ObjectHealthRebuildState.SCHEDULED:\n            return VsanUiUtils.getString(\"vsan.objectHealth.rebuildstate.scheduled\");\n         case ObjectHealthPolicyState.FAILED:\n            return VsanUiUtils.getString(\"vsan.objectHealth.policystate.failed\");\n         case ObjectHealthPolicyState.PENDING:\n            return VsanUiUtils.getString(\"vsan.objectHealth.policystate.pending\");\n         default:\n            return VsanUiUtils.getString(\"vsan.na.label\");\n      }\n   }\n\n   static getVsanObjectHealthStatusIconShape(status: VsanObjectHealthState | string): string {\n      switch (status) {\n         case VsanObjectHealthState.HEALTHY:\n         case VsanObjectHealthState.REMOTE_ACCESSIBLE:\n            return Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE;\n         case VsanObjectHealthState.DATA_MOVE:\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_RECONFIG:\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_ACTIVE_REBUILD:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_POLICY_PENDING:\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_POLICY_PENDING:\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_POLICY_PENDING_FAILED:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_PAUSED_REBUILD:\n         case VsanObjectHealthState.NON_AVAILABILITY_RELATED_INCOMPLIANCE_WITH_PAUSED_REBUILD:\n         case VsanObjectHealthState.UNKNOWN:\n            return Icon.CLR_WARN_STANDARD_ICON_SHAPE;\n         case VsanObjectHealthState.INACCESSIBLE:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_NO_REBUILD:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_NO_REBUILD_DELAY_TIMER:\n         case VsanObjectHealthState.REDUCED_AVAILABILITY_WITH_POLICY_PENDING_FAILED:\n            return Icon.CLR_ERROR_STANDARD_ICON_SHAPE;\n         default:\n            return Icon.CLR_CIRCLE_ICON_SHAPE;\n      }\n   }\n\n   static isDangerHealthState(state: BaseHealthState): boolean {\n      return VsanHealthUtil.HEALTH_STATES_DANGER_ORDER.indexOf(state) > -1;\n   }\n\n   static isWarningHealthState(state: BaseHealthState): boolean {\n      return VsanHealthUtil.HEALTH_STATES_WARNING_ORDER.indexOf(state) > -1;\n   }\n\n   static isSuccessHealthState(state: BaseHealthState): boolean {\n      return VsanHealthUtil.HEALTH_STATES_SUCCESS_ORDER.indexOf(state) > -1;\n   }\n\n   static getHealthStateLabelClass(status: BaseHealthState): string {\n      if (VsanHealthUtil.isDangerHealthState(status)) {\n         return VsanHealthUtil.CLR_DANGER_LABEL_CLASS;\n      }\n      if (VsanHealthUtil.isWarningHealthState(status)) {\n         return VsanHealthUtil.CLR_WARNING_LABEL_CLASS;\n      }\n      if (VsanHealthUtil.isSuccessHealthState(status)) {\n         return VsanHealthUtil.CLR_SUCCESS_LABEL_CLASS;\n      }\n      return VsanHealthUtil.CLR_DANGER_LABEL_CLASS;\n   }\n\n   static getPspHealthStateLabelClass(status: PspObjectHealthState): string {\n      if (status === PspObjectHealthState.INACCESSIBLE || status === PspObjectHealthState.UNKNOWN) {\n         return VsanHealthUtil.CLR_DANGER_LABEL_CLASS;\n      }\n      if (status === PspObjectHealthState.REBUILD || status === PspObjectHealthState.REDUCED_AVAILABILITY) {\n         return VsanHealthUtil.CLR_WARNING_LABEL_CLASS;\n      }\n      if (status === PspObjectHealthState.HEALTHY) {\n         return VsanHealthUtil.CLR_SUCCESS_LABEL_CLASS;\n      }\n      return VsanHealthUtil.CLR_DANGER_LABEL_CLASS;\n   }\n\n   static isTextCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && (cell.cellType === ColumnType.string\n            || cell.cellType === ColumnType.vsanObjectUuid);\n   }\n\n   static isNumericCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && (cell.cellType === ColumnType.Float\n            || cell.cellType === ColumnType.Long);\n   }\n\n   static isStatusCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && (cell.cellType === ColumnType.vsanObjectHealth);\n   }\n\n   static isPspHealthStateCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && (cell.cellType === ColumnType.pspHealth);\n   }\n\n   static isHealthV2StateCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && (cell.cellType === ColumnType.vsanObjectHealthv2);\n   }\n\n   static isMorCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && (cell.cellType === ColumnType.mor ||\n            cell.cellType === ColumnType.HostReference ||\n            cell.cellType === ColumnType.dynamic ||\n            cell.cellType === ColumnType.listMor);\n   }\n\n   static isPrimitiveListCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && (cell.cellType === ColumnType.listFloat ||\n            cell.cellType === ColumnType.listLong ||\n            cell.cellType === ColumnType.listString);\n   }\n\n   static isLinkCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && cell.cellType === ColumnType.strWithLink;\n   }\n\n   static isDateCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && cell.cellType === ColumnType.date;\n   }\n\n   static isHealthStatusCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && (cell.cellType === ColumnType.health);\n   }\n\n   static isHealthInfoCell(cell: VsanTestCell): boolean {\n      return cell && cell.cellValue && cell.cellType === ColumnType.healthWithString;\n   }\n\n   static formatedNumber(value: string, type: ColumnType): string {\n      if (ColumnType.Float === type) {\n         const precisionDigits: string = value.split(\".\")[1];\n         // Format the number with minimum 2 digits precision\n         return VsanUiUtils.localizeNumber(value,\n               (precisionDigits && precisionDigits.length > 2)\n                     ? precisionDigits.length\n                     : 2);\n      }\n      return VsanUiUtils.localizeNumber(value);\n   }\n\n   static getStatusLabel(cell: VsanTestCell): string {\n      return VsanHealthUtil.getVsanObjectHealthStatusText(cell.cellValue);\n   }\n\n   static getStatusShape(cell: VsanTestCell): string {\n      return VsanHealthUtil.getVsanObjectHealthStatusIconShape(cell.cellValue);\n   }\n\n   static getStatusClass(cell: VsanTestCell): string {\n      return VsanHealthUtil.getVsanObjectHealthStatusIconClass(cell.cellValue);\n   }\n\n   static getHealthStatusClass(cellValue: VsanHealthStatus): string {\n      return VsanHealthUtil.getVsanHealthStatusIconClass(cellValue);\n   }\n\n   static getHealthStatusShape(cellValue: VsanHealthStatus): string {\n      return VsanHealthUtil.getVsanHealthStatusIconShape(cellValue);\n   }\n\n   static getHealthInfoLabel(cellValue: VsanHealthInfo): string {\n      return cellValue.label;\n   }\n\n   static getListCellData(cell: VsanTestCell): string[] {\n      let values: any[] = cell.cellValue;\n      switch (cell.cellType) {\n         case ColumnType.listFloat:\n         case ColumnType.listLong:\n            values = values.map(value => VsanHealthUtil.formatedNumber(value, cell.cellType));\n      }\n      return values;\n   }\n\n   static getMorCellData(cell: VsanTestCell): Map<string, string> {\n      const morCellArr: Map<string, string> = new Map<string, string>();\n      switch (cell.cellType) {\n         case ColumnType.listMor:\n            for (const value of cell.cellValue) {\n               const moUid: string = ManagedObject.uid(ManagedObject.create(\n                     value.object.type,\n                     value.object.value,\n                     value.object.serverGuid));\n               morCellArr.set(moUid, value.objectName);\n            }\n            break;\n         case ColumnType.mor:\n         case ColumnType.dynamic:\n         case ColumnType.HostReference:\n            const uid: string = ManagedObject.uid(ManagedObject.create(\n                  cell.cellValue.object.type,\n                  cell.cellValue.object.value,\n                  cell.cellValue.object.serverGuid));\n            morCellArr.set(uid, cell.cellValue.objectName);\n            break;\n      }\n      return morCellArr;\n   }\n\n   static formatInstanceTimestamp(timestamp: number): string {\n      return VsanDateTimeUtils.formatDate(timestamp, VsanHealthUtil.INSTANCE_TIMESTAMP_OPTIONS);\n   }\n\n   static formatInstanceTitleTimestamp(timestamp: number): string {\n      return VsanDateTimeUtils.formatDate(timestamp, VsanHealthUtil.INSTANCE_TITLE_TIMESTAMP_OPTIONS);\n   }\n}\n\nexport type BaseHealthState = VsanObjectHealthState | ObjectHealthComplianceState | ObjectHealthIncomplianceReason |\n      ObjectHealthRebuildState | ObjectHealthPolicyState;\n\n/**\n * Enum that stores health subtest ids\n */\nexport enum VsanHealthTestId {\n   NETWORK_LATENCY_CHECK = \"com.vmware.vsan.health.test.hostlatencycheck\",\n   PHYSICAL_DISK_OPERATION_HEALTH = \"com.vmware.vsan.health.test.physdiskoverall\",\n}\n"]}