{"version":3,"sources":["webpack:///src/app/vsan/common/directive/clr-button-group/clr-button-base.directive.ts","webpack:///src/app/vsan/common/component/datagrid/filter/enumerated-filter.component.ts.EnumeratedFilterComponent.html","webpack:///src/app/vsan/common/component/datagrid/filter/enumerated-filter.component.ts","webpack:///src/app/vsan/common/component/datagrid/filter/enumerated-filter-item.html","webpack:///src/app/vsan/common/component/datagrid/filter/enumerated-filter-item.component.ts","webpack:///src/app/vsan/common/directive/external-link/external-link.directive.ts"],"names":["ClrButtonBaseDirective","clrButton","name","Math","random","toString","directiveHolder","directives","push","EnumeratedFilterComponent","filterContainer","MAX_ITEMS_PER_COLUMN","_selectedFilterValues","filtersCount","selectedFilterValuesChange","changes","setFilter","value","isEmpty","slice","length","next","ceil","item","selectionResolver","isSelected","indexOf","getItemValue","vsanDgField","itemIndex","findIndex","filterValue","areEquals","selectMultiple","splice","emit","some","a","b","propertiesChain","undefined","firstPropDelimiter","hasOwnProperty","prop","substring","EnumeratedFilterSelectionResolver","filterValue1","filterValue2","EnumeratedFilterItemComponent","parent","iconShape","EMPTY_ICON","iconVisible","selectItem","ExternalLinkDirective","el","resolver","renderer","navigationService","ASK_VMWARE_DEFAULT_TEXT_KEY","LEARN_MORE_DEFAULT_TEXT_KEY","CONTAINER_CLASS","NAVIGATION_EVENT_TYPE","LEAD_TO_NOWHERE_URL","HTML_ELEMENT_SPAN_NAME","HTML_ELEMENT_ICON_NAME","HTML_ELEMENT_ROLE_ATTR_NAME","HTML_ELEMENT_ROLE_ATTR_VALUE","ICON_SHAPE_ATTR_NAME","ICON_SHAPE_ATTR_VALUE","ICON_SIZE_ATTR_NAME","ICON_SIZE_ATTR_VALUE","ICON_CLASS_ATTR_NAME","ICON_CLASS_ATTR_VALUE","ICON_TITLE_ATTR_NAME","KB_URL","element","nativeElement","isLink","isButton","prepareExternalLink","button","index","addClass","setText","decorateLink","addLinkRole","initializeNavigationHandler","HTMLButtonElement","HTMLAnchorElement","span","createElement","innerText","getText","appendChild","icon","setAttribute","getString","anchorText","key","linkElement","href","style","display","addEventListener","helpId","askVMware","articleId","navigateToAddress","url"],"mappings":"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","file":"31-es5.js","sourcesContent":["/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ClrButton} from \"@clr/angular\";\n\n/**\n * Use this class as base class for directive, which handles clr-button. It will help to link the rendered button with\n * the clr-button on which the directive is applied.\n */\nexport abstract class ClrButtonBaseDirective {\n\n   constructor(private clrButton: ClrButton) {\n      if (!clrButton) {\n         return;\n      }\n      // name should be set, if not provided in template - generate one. ClrButtom#name is used to generate the name\n      // attribute of the markup button. Later the name is used to match the generated markup with the directive.\n      if (!clrButton.name) {\n         clrButton.name = Math.random().toString();\n      }\n\n      const directiveHolder: DirectiveHolder = (clrButton as DirectiveHolder);\n      directiveHolder.directives = directiveHolder.directives || [];\n      directiveHolder.directives.push(this);\n   }\n\n   /**\n    * This method will be called when the actual html button is rendered.\n    */\n   abstract resolveButton(clrButton: ClrButton, button: HTMLButtonElement, index: number);\n}\n\nexport interface DirectiveHolder extends ClrButton {\n   directives: ClrButtonBaseDirective[];\n}","<ng-content></ng-content>","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {Component, EventEmitter, HostBinding, Input, Output} from \"@angular/core\";\nimport {ClrDatagridFilter, ClrDatagridFilterInterface} from \"@clr/angular\";\nimport {Subject} from \"rxjs\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * Custom grid filter for a column with enumerable set of values\n */\n@Component({\n   selector: \"vsan-enumerated-filter\",\n   template: \"<ng-content></ng-content>\",\n   styleUrls: [\"enumerated-filter.scss\"],\n})\nexport class EnumeratedFilterComponent<T, K> implements ClrDatagridFilterInterface<T> {\n\n   private readonly MAX_ITEMS_PER_COLUMN: number = 6;\n\n   // workaround: clrDgField should inject the field's value in accept(item:any):boolean method doesn't work.\n   @Input()\n   vsanDgField: string;\n\n   @Input()\n   selectMultiple: boolean;\n\n   @Input()\n   selectionResolver: EnumeratedFilterSelectionResolver<T, K>;\n\n   private _selectedFilterValues: K[] = [];\n\n   @Input()\n   set selectedFilterValues(value: K[]) {\n      if (VsanUiUtils.isEmpty(value)) {\n         this._selectedFilterValues = [];\n      } else {\n         // creates a copy of the array\n         this._selectedFilterValues = value.slice(0, value.length);\n      }\n      this.changes.next(true);\n   }\n\n   get selectedFilterValues(): K[] {\n      return this._selectedFilterValues;\n   }\n\n   @Input()\n   filtersCount: number = 0;\n\n   @Output()\n   selectedFilterValuesChange: EventEmitter<K[]> = new EventEmitter<K[]>();\n\n   @HostBinding(\"style.column-count\")\n   get numberOfColumns(): number {\n      return Math.ceil(this.filtersCount / this.MAX_ITEMS_PER_COLUMN);\n   }\n\n   constructor(private filterContainer: ClrDatagridFilter) {\n      filterContainer.setFilter(this);\n   }\n\n   // overrides parent\n   changes: Subject<any> = new Subject<any>();\n\n   // overrides parent\n   accepts(item: T): boolean {\n      if (this.selectionResolver) {\n         return this.selectionResolver.isSelected(item, this._selectedFilterValues);\n      }\n      return this._selectedFilterValues.indexOf(this.getItemValue(item, this.vsanDgField)) > -1;\n   }\n\n   // overrides parent\n   isActive(): boolean {\n      return this._selectedFilterValues.length > 0;\n   }\n\n   selectItem(value: K): void {\n      // Deselects the filter if the same item is clicked from the template.\n      const itemIndex: number = this._selectedFilterValues.findIndex(filterValue => this.areEquals(filterValue, value));\n      if (this.selectMultiple) {\n         if (itemIndex > -1) {\n            this._selectedFilterValues.splice(itemIndex, 1);\n         } else {\n            this._selectedFilterValues.push(value);\n         }\n      } else {\n         this._selectedFilterValues = itemIndex > -1 ? [] : this._selectedFilterValues = [value];\n      }\n      this.selectedFilterValuesChange.emit(this._selectedFilterValues);\n      this.changes.next(true);\n   }\n\n   isSelected(item: K): boolean {\n      return this._selectedFilterValues.some(value => this.areEquals(value, item));\n   }\n\n   private areEquals(a: K, b: K): boolean {\n      return this.selectionResolver ?\n            this.selectionResolver.areEquals(a, b) :\n            a === b;\n   }\n\n   private getItemValue(item: T, propertiesChain: string): any {\n      if (!item) {\n         return undefined;\n      }\n      // the property may be chained, i.e. \"data.host.name\"\n      const firstPropDelimiter: number = propertiesChain.indexOf(\".\");\n      if (firstPropDelimiter < 0) {\n         // there is no chained property\n         return item.hasOwnProperty(propertiesChain) ? item[propertiesChain] : undefined;\n      }\n      // chained properties - get inner object and resolve its property\n      const prop: string = propertiesChain.substring(0, firstPropDelimiter);\n      return this.getItemValue(item[prop], propertiesChain.substring(firstPropDelimiter + 1));\n   }\n\n}\n\nexport abstract class EnumeratedFilterSelectionResolver<T, K> {\n   abstract isSelected(item: T, selectedValues: K[]): boolean;\n\n   areEquals(filterValue1: K, filterValue2: K): boolean {\n      return filterValue1 === filterValue2;\n   }\n}\n","<!-- Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<clr-checkbox-wrapper>\n   <input type=\"checkbox\" clrCheckbox [checked]=\"isSelected()\" (click)=\"onClick()\">\n   <label>\n      <clr-icon *ngIf=\"iconVisible\"\n                [attr.shape]=\"iconShape\"\n                [ngClass]=\"iconClass\"\n                aria-hidden=\"true\"\n                class=\"is-solid\" pointer>\n      </clr-icon>\n      {{label}}\n   </label>\n</clr-checkbox-wrapper>","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {Component, Host, HostListener, Input} from \"@angular/core\";\nimport {Icon} from \"@util/icon\";\nimport {EnumeratedFilterComponent} from \"@component/datagrid/filter/enumerated-filter.component\";\n\n/**\n * Part of the Enumerated Filter. Represent one of the available values to filter by.\n */\n@Component({\n   selector: \"vsan-enumerated-filter-item\",\n   templateUrl: \"enumerated-filter-item.html\",\n   styleUrls: [\"enumerated-filter-item.scss\"],\n   host: {\n      \"[class.selected-filter]\": \"this.isSelected()\",\n      \"[attr.id]\": \"this.value\",\n   },\n})\nexport class EnumeratedFilterItemComponent<T, K> {\n\n   @Input()\n   value: K;\n\n   @Input()\n   iconShape: string = Icon.EMPTY_ICON;\n\n   @Input()\n   iconVisible: boolean = true;\n\n   @Input()\n   iconClass: string;\n\n   @Input()\n   label: string;\n\n   constructor(@Host() private parent: EnumeratedFilterComponent<T, K>) {}\n\n   onClick(): void {\n      this.parent.selectItem(this.value);\n   }\n\n   isSelected(): boolean {\n      return this.parent.isSelected(this.value);\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {\n   AfterViewInit,\n   ComponentFactoryResolver,\n   Directive,\n   ElementRef,\n   Host,\n   Input,\n   Optional,\n   Renderer2,\n   Self,\n} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {NavigationService} from \"@navigation/navigation.service\";\nimport {ClrButtonBaseDirective} from \"@directive/clr-button-group/clr-button-base.directive\";\nimport {ClrButton} from \"@clr/angular\";\n\n/**\n * Decorates a button or an anchor as external link. Requires one of the optional parameters articleId, helpId or url.\n *\n * @param external-link: Optional. Localization key of the text label of the external link. If omitted default label\n * will be used - \"Learn more\" for anchors or \"Ask VMWare\" for buttons.\n * @param articleId - Optional. Id of article in knowledge base.\n * @param helpId - Optional. Help id which will redirect to Knowledge Base.\n * @param url - Optional. External URL.\n */\n@Directive({\n   selector: \"a[external-link], button[external-link], clr-button[external-link]\",\n})\nexport class ExternalLinkDirective extends ClrButtonBaseDirective implements AfterViewInit {\n   private readonly ASK_VMWARE_DEFAULT_TEXT_KEY: string = \"vsan.common.askVMware\";\n   private readonly LEARN_MORE_DEFAULT_TEXT_KEY: string = \"vsan.common.learnMore\";\n\n   private readonly CONTAINER_CLASS: string = \"icon-name-container\";\n   private readonly NAVIGATION_EVENT_TYPE: string = \"click\";\n   private readonly LEAD_TO_NOWHERE_URL: string = \"javascript://\";\n   private readonly HTML_ELEMENT_SPAN_NAME: string = \"span\";\n   private readonly HTML_ELEMENT_ICON_NAME: string = \"clr-icon\";\n   private readonly HTML_ELEMENT_ROLE_ATTR_NAME: string = \"role\";\n   private readonly HTML_ELEMENT_ROLE_ATTR_VALUE: string = \"link\";\n   private readonly ICON_SHAPE_ATTR_NAME: string = \"shape\";\n   private readonly ICON_SHAPE_ATTR_VALUE: string = \"pop-out\";\n   private readonly ICON_SIZE_ATTR_NAME: string = \"size\";\n   private readonly ICON_SIZE_ATTR_VALUE: string = \"16\";\n   private readonly ICON_CLASS_ATTR_NAME: string = \"class\";\n   private readonly ICON_CLASS_ATTR_VALUE: string = \"link\";\n   private readonly ICON_TITLE_ATTR_NAME: string = \"title\";\n\n   private readonly KB_URL: string = \"http://kb.vmware.com/kb/\";\n\n   @Input(\"external-link\")\n   anchorText: string;\n\n   @Input()\n   articleId: string;\n\n   @Input()\n   helpId: string;\n\n   @Input()\n   url: string;\n\n   constructor(private el: ElementRef<HTMLElement>,\n         private resolver: ComponentFactoryResolver,\n         private renderer: Renderer2,\n         private navigationService: NavigationService,\n         // this variable will be initialized only if the host is clr-button\n         @Host() @Self() @Optional() clrButton: ClrButton) {\n      super(clrButton);\n   }\n\n   ngAfterViewInit(): void {\n      const element: HTMLElement = this.el.nativeElement;\n      // continue only if element is HTML link or button\n      if (!this.isLink(element) && !this.isButton(element)) {\n         // element is clr-button, wait until html button for it is resolved - handled by resloveButton\n         return;\n      }\n      this.prepareExternalLink(element);\n   }\n\n   resolveButton(clrButton: ClrButton, button: HTMLButtonElement, index: number): void {\n      // only if element is clr-button. At this point the html button is already resolved. Apply on it.\n      this.prepareExternalLink(button);\n   }\n\n   private prepareExternalLink(element: HTMLElement): void {\n      this.renderer.addClass(element, this.CONTAINER_CLASS);\n\n      this.setText(element);\n      if (this.isLink(element)) {\n         this.decorateLink(element);\n      } else {\n         this.addLinkRole(element);\n      }\n\n      this.initializeNavigationHandler(element);\n   }\n\n   private isButton(element: HTMLElement): boolean {\n      return element instanceof HTMLButtonElement;\n   }\n\n   private isLink(element: HTMLElement): boolean {\n      return element instanceof HTMLAnchorElement;\n   }\n\n   private setText(element: HTMLElement): void {\n      const span: HTMLSpanElement = this.renderer.createElement(this.HTML_ELEMENT_SPAN_NAME);\n      span.innerText = this.getText(element);\n      this.renderer.appendChild(element, span);\n\n      const icon: HTMLSpanElement = this.renderer.createElement(this.HTML_ELEMENT_ICON_NAME);\n      icon.setAttribute(this.ICON_SHAPE_ATTR_NAME, this.ICON_SHAPE_ATTR_VALUE);\n      icon.setAttribute(this.ICON_SIZE_ATTR_NAME, this.ICON_SIZE_ATTR_VALUE);\n      icon.setAttribute(this.ICON_CLASS_ATTR_NAME, this.ICON_CLASS_ATTR_VALUE);\n      // Set title of the icon for screen readers clarity\n      icon.setAttribute(this.ICON_TITLE_ATTR_NAME, VsanUiUtils.getString(\"vsan.screenReader.label.externalLink.icon\"));\n      this.renderer.appendChild(element, icon);\n   }\n\n   private getText(element: HTMLElement): string {\n      if (this.anchorText) {\n         return this.anchorText;\n      }\n      const key: string = this.isButton(element) ? this.ASK_VMWARE_DEFAULT_TEXT_KEY : this.LEARN_MORE_DEFAULT_TEXT_KEY;\n      return VsanUiUtils.getString(key);\n   }\n\n   private decorateLink(element: HTMLElement): void {\n      const linkElement: HTMLLinkElement = element as HTMLLinkElement;\n      // don't use href attribute. If omitted, the link will be not visualized properly.\n      linkElement.href = this.LEAD_TO_NOWHERE_URL;\n      // display link on same line\n      linkElement.style.display = \"inline-flex\";\n   }\n\n   private initializeNavigationHandler(element: HTMLElement): void {\n      element.addEventListener(this.NAVIGATION_EVENT_TYPE, () => {\n         if (this.helpId) {\n            this.navigationService.askVMware(this.helpId);\n            return;\n         }\n         if (this.articleId) {\n            this.navigationService.navigateToAddress(`${this.KB_URL}${this.articleId}`);\n            return;\n         }\n         if (this.url) {\n            this.navigationService.navigateToAddress(this.url);\n         }\n      });\n   }\n\n   // Indicate external navigation by assigning \"link\" role\n   private addLinkRole(element: HTMLElement): void {\n      this.renderer.setAttribute(element, this.HTML_ELEMENT_ROLE_ATTR_NAME, this.HTML_ELEMENT_ROLE_ATTR_VALUE);\n   }\n}"]}