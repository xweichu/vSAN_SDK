{"version":3,"sources":["webpack:///src/app/vsan/capacity/usage/breakdown/capacity-breakdown.html","webpack:///src/app/vsan/capacity/mounted-datastores/mounted-datastores-capacity.html","webpack:///src/app/vsan/capacity/usage/breakdown/capacity-breakdown-snapshots.html","webpack:///src/app/vsan/capacity/usage/breakdown/capacity-breakdown-categories.html","webpack:///src/app/vsan/common/component/capacity/system-capacity-breakdown.html","webpack:///src/app/vsan/capacity/usage/breakdown/capacity-breakdown-pie-chart.html","webpack:///src/app/vsan/common/component/capacity/snapshot-capacity-breakdown.component.ts","webpack:///src/app/vsan/capacity/mounted-datastores/remote-datastore-capacity-card.html","webpack:///src/app/vsan/capacity/usage/capacity-overview.html","webpack:///src/app/vsan/capacity/capacity.html","webpack:///src/app/vsan/capacity/usage/capacity-analysis.html","webpack:///src/app/vsan/common/component/capacity/snapshot-capacity-breakdown.html","webpack:///src/app/vsan/capacity/usage/remote-capacity.html","webpack:///src/app/vsan/capacity/usage/capacity-datastores-overview.html","webpack:///src/app/vsan/capacity/usage/capacity-datastores-overview.component.ts","webpack:///src/app/vsan/capacity/usage/breakdown/capacity-breakdown-snapshots.component.ts","webpack:///src/app/vsan/capacity/mounted-datastores/mounted-datastores-capacity.component.ts","webpack:///src/app/vsan/capacity/capacity.component.ts","webpack:///src/app/vsan/capacity/usage/capacity-overview.component.ts","webpack:///src/app/vsan/capacity/usage/capacity-analysis.component.ts","webpack:///src/app/vsan/common/component/capacity/user-capacity-breakdown.component.ts","webpack:///src/app/vsan/common/component/capacity/vm-capacity-breakdown.html","webpack:///src/app/vsan/capacity/capacity.module.ts","webpack:///src/app/vsan/capacity/mounted-datastores/remote-datastore-capacity-card.component.ts","webpack:///src/app/vsan/capacity/usage/breakdown/capacity-breakdown-categories.component.ts","webpack:///src/app/vsan/common/component/capacity/vm-capacity-breakdown.component.ts","webpack:///src/app/vsan/capacity/usage/capacity-usage.component.ts","webpack:///src/app/vsan/capacity/usage/remote-capacity.component.ts","webpack:///src/app/vsan/capacity/usage/capacity-usage.html","webpack:///src/app/vsan/capacity/history/capacity-history.component.ts","webpack:///src/app/vsan/common/component/capacity/user-capacity-breakdown.html","webpack:///src/app/vsan/capacity/usage/capacity-analysis.service.ts","webpack:///src/app/vsan/capacity/history/capacity-history.html","webpack:///src/app/vsan/capacity/usage/breakdown/capacity-breakdown-pie-chart.component.ts","webpack:///src/app/vsan/common/util/vsan-signpost-util.ts","webpack:///src/app/vsan/capacity/usage/breakdown/capacity-breakdown.component.ts","webpack:///src/app/vsan/common/component/capacity/system-capacity-breakdown.component.ts","webpack:///src/app/vsan/common/component/capacity/capacity-breakdown-item.component.ts"],"names":["SnapshotCapacityBreakdownComponent","capacityService","CapacityDatastoresOverviewComponent","datastoreType","getString","getLocalizedDatastoreType","formatFileSize","getUsedSpace","getTotalSpace","localizeNumber","asPercentage","orderDatastoreTypes","Array","from","datastoresCapacityData","keys","get","thresholds","CLR_SUCCESS_STANDARD_ICON_SHAPE","capacityData","errorThreshold","getErrorThresholdPercentage","warningThreshold","getWarningThresholdPercentage","isUsedCapacityExceedingThreshold","CLR_ERROR_STANDARD_ICON_SHAPE","CLR_WARN_STANDARD_ICON_SHAPE","clrIconShapeClassMap","getUsedOverallCapacityIconShape","usedSpace","totalSpace","getErrorThreshold","getWarningThreshold","CapacityBreakdownSnapshotsComponent","selectedDrillDownCategory","NONE","CapacityDrillDownType","CapacityBreakdownPerspective","nonSnapshotDataUsage","getNonSnapshotDataUsage","snapshotUsageCapacity","totalUsedSpace","selectedDrillDownType","isSnapshotsCategoryExpanded","SNAPSHOTS","MountedDatastoresCapacityComponent","datastoreCapacityUsages","CapacityComponent","capacityBasicInfoService","permissionService","csdService","CapacityView","_currentView","USAGE","isHistoricalCapacitySupported","historyViewVisited","remoteDatastores","computeOnlyDatastores","view","HISTORY","fetch","reset","Promise","all","hasPermissions","contextObject","EDIT_CLUSTER","getCapacityBasicInfo","hasEditPermission","capacityBasicInfo","clusterRef","isComputeOnlyCluster","isVsanMaxEnabled","queryCapacityData","isCsdSupported","unavailableViewSpec","checkUnavailability","getMountedDatastoresSpaceUsage","promises","getCapacityDataPerDatastore","push","getRemoteDatastoresInfos","result","basicInfo","length","getTotalDatastoresCapacity","hostCount","CAPACITY_USAGE_VIEW_NO_HOSTS_COMPUTE","CAPACITY_USAGE_VIEW_NO_HOSTS","faultyHostsTotalCount","CAPACITY_USAGE_VIEW_NO_ELIGIBLE_HOSTS","CAPACITY_USAGE_NO_MOUNTED_DATASTORES","CAPACITY_USAGE_VIEW_NO_CLAIMED_DISKS","size","forEach","datastoreCapacity","srMessage","srMessageType","PAGE_TITLE","CapacityOverviewComponent","onConfigureManagement","getReservationData","parseCapacityReservationDataSections","slackSpaceCapacityData","operationSpaceReservation","rebuildToleranceReservation","isCapacityReservationSupported","enforceReservationSupported","getCapacityManagementStatus","configureReservationsPermission","upgradeData","isCustomizableThresholdsSupportedOnVc","emit","CapacityAnalysisComponent","changeDetector","policySignpostId","oversubscriptionSignpostId","hasReadPoliciesPermissions","availablePolicies","freeWhatIfSpace","uncommittedWhatIfSpace","totalAvailableSpace","_selectedPolicy","policy","updateWhatIfCapacity","hasVcPermissions","READ_POLICIES","getAvailablePolicies","showSpaceEfficiencyOption","spaceEfficiencyCapacity","initializeLabels","initializePolicy","actuallyWrittenSpace","freeSpace","whatIfAvailableCapacityLabel","considerSpaceEfficiencyLabel","spaceEfficiencyConfig","COMPRESSION","selectedPolicy","isDefault","error","getWhatIfCapacity","id","whatIfCapacity","free","uncommitted","detectChanges","errorMessage","elementId","SIGNPOST_WIDTH","SIGNPOST_HEIGHT","getPosition","isConsiderSpaceEfficiency","ratio","uncommittedSpace","WHAT_IF_CAPACITY_LOADER","msg","name","DATA","UserCapacityBreakdownComponent","routes","path","component","CapacityModule","RemoteDatastoreCapacityCardComponent","navigationService","shareableDatastore","datastore","serverCluster","navigateTo","DATASTORE_CAPACITY","moRef","CapacityBreakdownCategoriesComponent","isVmCategoryExpanded","isUserObjectsCategoryExpanded","isSystemCategoryExpanded","isDrillDown","vmCapacity","totalVmUsage","userObjectsCapacity","totalUserObjectsUsage","systemUsageCapacity","totalSystemUsage","allExpanded","srOnlyMessage","hasVmCapacity","hasUserCapacity","hasSystemCapacity","VM","USER_OBJECTS","SYSTEM_OBJECTS","VmCapacityBreakdownComponent","DatastoreType","includeTotal","showBreakdownColors","getVmdkObjectsLabel","CapacityUsageComponent","capabilitiesService","upgradeService","dataService","taskService","selectedDatastoreTypeChange","awaitTask","taskRef","getAwaitResult","then","globalRefresh","e","isVisible","managedObject","getUpgradeData","getClusterCapabilityData","getVcCapabilityData","queryClusterPermissions","clusterCapabilityData","vcCapabilityData","setDatastoreTypes","selectDatastoreType","getSelectedDatastoreType","datastoreTypes","selectedDatastoreType","queryPermissions","CONFIG_STORAGE","permissions","editClusterPermission","configureStoragePermission","eventTarget","event","target","getProperty","clusterName","context","showOldFormatInfo","isUpgradeNeeded","isCapacityCustomizableThresholdsSupported","CAPACITY_MANAGEMENT","setSize","CAPACITY_MANAGEMENT_DIALOG","width","height","setEventTarget","open","includes","VSAN","RemoteCapacityComponent","datastoreRef","CapacityHistoryComponent","perfProvider","capacityMessagesService","serverObjRef","loadingCharts","loadingBasicInfo","hasEditPrivilege","perfDisabledSpec","isEmptyCluster","isZoomed","createPerfQuerySpec","timeRange","querySpecs","dateRanges","generateDateRanges","map","range","Factory","create","CAPACITY_ENTITY_TYPE","to","days","Math","ceil","DAY_IN_MILLISECONDS","d","startTime","endTime","queryBasicInfo","graphs","basicInfoError","chartsData","getReducedCapacityMessagesForHistory","getCapacityHistoryBasicInfo","reducedCapacityMessages","capacityHistoryBasicInfo","entityTypes","HISTORICAL_SPACE_REPORT","graph","getGraphDefinition","hasEditPolicyPermission","isPerformanceServiceEnabled","PERF_DISABLED_ON_CAPACITY_VIEW","dateRange","chartsError","currentDateRange","filterChartPoints","getHistoricalSpaceReport","zoomOut","isZoomOut","zoomOption","opt","VsanCapacityAnalysisService","capacityProvider","pbmProvider","capacityUsageWarningThreshold","capacityUsageErrorThreshold","getObjectCompatibleStoragePolicies","profileId","CapacityBreakdownPieChartComponent","drillDownCategoryChange","isDrillDownChange","summaryCapacityData","capacityBreakdownPerspective","CATEGORIES","parseSummarySectionsData","parseSnapshotsSummarySectionsData","drillOut","index","VM_CAPACITY","vmBreakdownCapacityData","getDrillDownData","userBreakdownCapacityData","systemBreakdownCapacityData","SNAPSHOTS_USAGE","snapshotsBreakdownCapacityData","data","section","labelKey","breakdownCapacityData","parseBreakdownSectionsData","breakdownTotalLabel","emitDrillDownChange","VsanSignpostUtil","signpostWidth","signpostHeight","isInModal","elementBox","document","getElementById","getBoundingClientRect","modalVerticalPadding","MODAL_VERTICAL_PADDING","verticalPosition","getVerticalPosition","ARROW_SIZE","modalHorizontalPadding","MODAL_HORIZONTAL_PADDING","horizontalPosition","getHorizontalPosition","elementHeight","bodyBox","body","bottom","BOTTOM","top","TOP","MIDDLE","elementWidth","right","RIGHT","left","LEFT","CapacityBreakdownComponent","spaceEfficiencyService","currentBreakdownPerspective","_capacityData","checkCnsConfigured","CLUSTER_CNS_VOLUMES","FILE_SERVICE_SHARES","capacityTotalUsedSpace","capacityBreakdownLabel","isFileServicesConfigured","fileContainerVolumes","nativeFileShares","isCnsConfigured","blockContainerPrimaryDataUsage","blockContainerVolumes","SystemCapacityBreakdownComponent","capacitySpaceOverheadLabel","spaceEfficiency","CapacityBreakdownItemComponent","isExpandedChange","_isExpanded","val","capacity","getFormattedCapacity","value","total"],"mappings":"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","file":"68-es5.js","sourcesContent":["<!-- Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div class=\"card\">\n   <h4 class=\"card-header\">{{breakdownTitle}}</h4>\n   <div class=\"card-block\">\n      <!-- If cluster is empty(e.g. no disk groups, no data breakdown is available -->\n      <span id=\"capacity-breakdown-no-data-usage\" *ngIf=\"totalUsedSpace === 0\">\n               {{\"vsan.monitor.capacity.noSpaceUsed.label\" | localized}}\n      </span>\n      <ng-container *ngIf=\"totalUsedSpace > 0\">\n         <ng-container *ngIf=\"isVsanMaxEnabled; else vsanBreakdownCategories\">\n            <div id=\"capacity-breakdown-tabs\"\n                 role=\"tablist\"\n                 class=\"btn-group btn-outline-primary btn-sm\"\n                 [attr.aria-label]=\"'vsan.monitor.capacity.usage.breakdown.tabList.label'|localized\">\n               <button id=\"capacity-breakdown-categories-tab\"\n                       role=\"tab\"\n                       class=\"btn\"\n                       aria-controls=\"capacity-breakdown-categories\"\n                       (click)=\"currentBreakdownPerspective = CapacityBreakdownPerspective.CATEGORIES\"\n                       [attr.aria-selected]=\"CapacityBreakdownPerspective.CATEGORIES === currentBreakdownPerspective\"\n                       [ngClass]=\"{'btn-primary': CapacityBreakdownPerspective.CATEGORIES === currentBreakdownPerspective}\">\n                  {{\"vsan.monitor.capacity.usage.breakdown.categories\"|localized}}\n               </button>\n               <button id=\"capacity-breakdown-snapshots-tab\"\n                       role=\"tab\"\n                       class=\"btn\"\n                       aria-controls=\"capacity-breakdown-snapshots\"\n                       (click)=\"currentBreakdownPerspective = CapacityBreakdownPerspective.SNAPSHOTS\"\n                       [attr.aria-selected]=\"CapacityBreakdownPerspective.SNAPSHOTS === currentBreakdownPerspective\"\n                       [ngClass]=\"{'btn-primary': CapacityBreakdownPerspective.SNAPSHOTS === currentBreakdownPerspective}\">\n                  {{\"vsan.monitor.capacity.usage.breakdown.snapshots\"|localized}}\n               </button>\n            </div>\n\n            <ng-container *ngIf=\"currentBreakdownPerspective === CapacityBreakdownPerspective.CATEGORIES\">\n               <ng-container *ngTemplateOutlet=\"vsanBreakdownCategories\"></ng-container>\n            </ng-container>\n            <vsan-capacity-breakdown-snapshots *ngIf=\"currentBreakdownPerspective === CapacityBreakdownPerspective.SNAPSHOTS\"\n                                               id=\"capacity-breakdown-snapshots\"\n                                               [capacityData]=\"capacityData\"\n                                               [totalUsedSpace]=\"totalUsedSpace\">\n            </vsan-capacity-breakdown-snapshots>\n         </ng-container>\n      </ng-container>\n   </div>\n   <div class=\"card-footer\">\n      <a class=\"card-link\" id=\"cns-capacity-link\"\n         *ngIf=\"capabilityData?.isCnsVolumesSupported && isCnsConfigured\"\n         href=\"javascript://\"\n         (click)=\"navigateToCns()\">\n         {{\"vsan.monitor.capacity.usage.breakdown.category.links.containers\" | localized}}\n      </a>\n      <a class=\"card-link\" id=\"fs-capacity-link\"\n         *ngIf=\"capabilityData?.isFileServiceSupported && isFileServicesConfigured\"\n         href=\"javascript://\"\n         (click)=\"navigateToFileServices()\">\n         {{\"vsan.monitor.capacity.usage.breakdown.category.links.file.services\" | localized}}\n      </a>\n   </div>\n</div>\n\n<ng-template #vsanBreakdownCategories>\n   <vsan-capacity-breakdown-categories id=\"capacity-breakdown-categories\"\n                                       [capacityData]=\"capacityData\"\n                                       [showHeader]=\"!isVsanMaxEnabled\"\n                                       [totalUsedSpace]=\"totalUsedSpace\">\n   </vsan-capacity-breakdown-categories>\n</ng-template>","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-validation [allowClose]=\"false\"\n                 alertType=\"info\"\n                 [alert]=\"'vsan.monitor.capacity.computeOnlyCluster.infoMessage' | localized\">\n</vsan-validation>\n<div class=\"clr-row\">\n   <div *ngFor=\"let mountedDatastore of datastoreCapacityUsages\"\n        class=\"card-column clr-col-12 clr-col-lg-6\">\n      <vsan-remote-datastore-capacity-card [shareableDatastore]=\"mountedDatastore.shareableDatastore\">\n      </vsan-remote-datastore-capacity-card>\n   </div>\n</div>\n","<!-- Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div class=\"clr-row\">\n   <div class=\"clr-col-12 clr-col-lg-5\">\n      <!-- Snapshots and current data section -->\n      <vsan-snapshot-capacity-breakdown [totalUsedSpace]=\"totalUsedSpace\"\n                                        [nonSnapshotDataUsage]=\"nonSnapshotDataUsage\"\n                                        [(isExpanded)]=\"isSnapshotsCategoryExpanded\"\n                                        [isDrilldown]=\"selectedDrillDownCategory === CapacityDrillDownType.SNAPSHOTS\"\n                                        [snapshotCapacity]=\"capacityData.snapshotUsageCapacity\">\n      </vsan-snapshot-capacity-breakdown>\n   </div>\n\n   <div id=\"capacity-breakdown-snapshots-pie-chart\"\n        class=\"clr-col-12 clr-col-lg-7\">\n      <vsan-capacity-breakdown-pie-chart [capacityData]=\"capacityData\"\n                                         [capacityBreakdownPerspective]=\"CapacityBreakdownPerspective.SNAPSHOTS\"\n                                         (drillDownCategoryChange)=\"drillDownCategoryChange($event)\">\n      </vsan-capacity-breakdown-pie-chart>\n   </div>\n</div>","<!-- Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div class=\"clr-row\">\n   <div id=\"capacity-breakdown\" class=\"clr-col-12 clr-col-lg-5\">\n      <div id=\"capacity-breakdown-header\">\n         <div *ngIf=\"showHeader\">{{\"vsan.monitor.capacity.usage.breakdown.categories\"|localized}}</div>\n         <div>\n            <button class=\"btn btn-sm btn-link\" (click)=\"toggleExpanded()\">\n               <ng-container *ngIf=\"allExpanded; else collapsed\">\n                  {{\"vsan.monitor.capacity.usage.breakdown.collapse\"|localized}}\n               </ng-container>\n               <ng-template #collapsed>\n                  {{\"vsan.monitor.capacity.usage.breakdown.expand\"|localized}}\n               </ng-template>\n            </button>\n         </div>\n      </div>\n      <div id=\"vm-capacity-breakdown\" *ngIf=\"hasVmCapacity()\">\n         <vsan-vm-capacity-breakdown\n               [vmCapacity]=\"capacityData.vmCapacity\"\n               [totalSpace]=\"totalUsedSpace\"\n               [(isExpanded)]=\"isVmCategoryExpanded\"\n               [isDrilldown]=\"selectedDrillDownType === CapacityDrillDownType.VM\">\n         </vsan-vm-capacity-breakdown>\n      </div>\n      <!-- User objects breakdown -->\n      <div id=\"user-objects-capacity-breakdown\" *ngIf=\"hasUserCapacity()\">\n         <vsan-user-capacity-breakdown\n               [userObjectsCapacity]=\"capacityData.userObjectsCapacity\"\n               [totalSpace]=\"totalUsedSpace\"\n               [(isExpanded)]=\"isUserObjectsCategoryExpanded\"\n               [isDrilldown]=\"selectedDrillDownType === CapacityDrillDownType.USER_OBJECTS\">\n         </vsan-user-capacity-breakdown>\n      </div>\n      <!-- System objects breakdown -->\n      <div id=\"system-objects-capacity-breakdown\" *ngIf=\"hasSystemCapacity()\">\n         <vsan-system-capacity-breakdown\n               [systemUsageCapacity]=\"capacityData.systemUsageCapacity\"\n               [spaceEfficiency]=\"capacityData.spaceEfficiencyCapacity?.spaceEfficiencyConfig\"\n               [totalSpace]=\"totalUsedSpace\"\n               [(isExpanded)]=\"isSystemCategoryExpanded\"\n               [isDrilldown]=\"selectedDrillDownType === CapacityDrillDownType.SYSTEM_OBJECTS\">\n         </vsan-system-capacity-breakdown>\n      </div>\n   </div>\n   <div id=\"capacity-breakdown-pie-chart\"\n        class=\"clr-col-12 clr-col-lg-7\"\n        *ngIf=\"hasVmCapacity() || hasSystemCapacity() || hasUserCapacity()\">\n      <vsan-capacity-breakdown-pie-chart [capacityData]=\"capacityData\"\n                                         [capacityBreakdownPerspective]=\"CapacityBreakdownPerspective.CATEGORIES\"\n                                         [(isDrillDown)]=\"isDrillDown\"\n                                         (drillDownCategoryChange)=\"drillDownCategoryChange($event)\">\n      </vsan-capacity-breakdown-pie-chart>\n   </div>\n</div>","<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-tree>\n   <clr-tree-node>\n      <div id=\"capacity-color-system\"></div>\n      <span>\n         {{getTotalCapacityLabel(systemUsageCapacity.totalSystemUsage,\n            'vsan.monitor.capacity.usage.breakdown.category.system')}}\n      </span>\n      <ng-template [(clrIfExpanded)]=\"isExpanded\">\n         <div [ngClass]=\"{'capacity-breakdown-expanded': isDrilldown}\">\n            <!-- Performance management objects -->\n            <div id=\"performnance-capacity-breakdown\"\n                 *ngIf=\"systemUsageCapacity.performanceMgmtObjects\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.system.performance\"|localized}}</div>\n               <div>\n                  {{getFormattedCapacity(systemUsageCapacity.performanceMgmtObjects, systemUsageCapacity.totalSystemUsage)}}\n               </div>\n            </div>\n            <!-- File service overhead -->\n            <div id=\"file-service-capacity-breakdown\"\n                 *ngIf=\"systemUsageCapacity.fileServiceOverhead\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>\n                  {{\"vsan.monitor.capacity.usage.breakdown.category.system.file.system.overhead\"|localized}}\n               </div>\n               <div>\n                  {{getFormattedCapacity(systemUsageCapacity.fileServiceOverhead, systemUsageCapacity.totalSystemUsage)}}\n               </div>\n            </div>\n            <!-- HA metadata object -->\n            <div id=\"ha-metadata-object\"\n                 *ngIf=\"systemUsageCapacity.haMetadataObject\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>\n                  {{\"vsan.monitor.capacity.usage.breakdown.category.system.haMetadataObject\"|localized}}\n               </div>\n               <div>\n                  {{getFormattedCapacity(systemUsageCapacity.haMetadataObject, systemUsageCapacity.totalSystemUsage)}}\n               </div>\n            </div>\n            <!-- Checksum overhead -->\n            <div id=\"checksum-overhead-capacity-breakdown\"\n                 *ngIf=\"systemUsageCapacity.checksumOverhead\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>\n                  {{\"vsan.monitor.capacity.usage.breakdown.category.system.checksum.overhead\"|localized}}\n               </div>\n               <div>\n                  {{getFormattedCapacity(systemUsageCapacity.checksumOverhead, systemUsageCapacity.totalSystemUsage)}}\n               </div>\n            </div>\n            <!-- space efficiency overhead -->\n            <div id=\"space-efficiency-overhead-capacity-breakdown\"\n                 *ngIf=\"systemUsageCapacity.spaceEfficiencyOverhead\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>\n                  {{spaceEfficiencyOverheadLabel}}\n               </div>\n               <div>\n                  {{getFormattedCapacity(systemUsageCapacity.spaceEfficiencyOverhead, systemUsageCapacity.totalSystemUsage)}}\n               </div>\n            </div>\n            <!-- Transient space overhead -->\n            <div id=\"transient-capacity-breakdown\"\n                 *ngIf=\"systemUsageCapacity.transientSpace\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>\n                  {{\"vsan.monitor.capacity.usage.breakdown.category.system.transient\"|localized}}\n               </div>\n               <div>\n                  {{getFormattedCapacity(systemUsageCapacity.transientSpace, systemUsageCapacity.totalSystemUsage)}}\n               </div>\n            </div>\n         </div>\n      </ng-template>\n   </clr-tree-node>\n</clr-tree>\n","<!-- Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<vsan-pie-chart *ngIf=\"!isDrillDown\"\n                [sections]=\"summaryCapacityData\"\n                [innerSize]=\"'50%'\"\n                [showTotal]=\"true\"\n                [startAngle]=\"-45\"\n                (selection)=\"drillDown($event)\">\n</vsan-pie-chart>\n<!-- When user clicks on a section show a drill down of the capacity-->\n<vsan-pie-chart *ngIf=\"isDrillDown\"\n                [sections]=\"breakdownCapacityData\"\n                [innerSize]=\"'50%'\"\n                [showTotal]=\"true\"\n                [totalLabel]=\"breakdownTotalLabel\"\n                (totalClick)=\"drillOut()\"\n                [startAngle]=\"-45\">\n</vsan-pie-chart>","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, Input} from \"@angular/core\";\nimport {CapacityBreakdownItemComponent} from \"./capacity-breakdown-item.component\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {SnapshotCapacityData} from \"@generated/snapshot-capacity-data\";\n\n@Component({\n   templateUrl: \"snapshot-capacity-breakdown.html\",\n   styleUrls: [\"snapshot-capacity-breakdown.scss\"],\n   selector: \"vsan-snapshot-capacity-breakdown\",\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SnapshotCapacityBreakdownComponent extends CapacityBreakdownItemComponent {\n\n   @Input()\n   totalUsedSpace: number;\n\n   @Input()\n   nonSnapshotDataUsage: number;\n\n   @Input()\n   snapshotCapacity: SnapshotCapacityData;\n\n   constructor(capacityService: VsanCapacityService) {\n      super(capacityService);\n   }\n}","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"card\">\n   <h4 class=\"card-header\">{{getTitle()}}</h4>\n   <div class=\"card-block\">\n      <vsan-validation *ngIf=\"shareableDatastore.capacityData?.reducedCapacityMessages?.length\"\n                       [allowClose]=\"false\"\n                       alertType=\"info\"\n                       [alerts]=\"shareableDatastore.capacityData?.reducedCapacityMessages\">\n      </vsan-validation>\n      <vsan-capacity-overview-chart\n            *ngIf=\"shareableDatastore.capacityData?.totalSpace\"\n            [capacityData]=\"shareableDatastore.capacityData\"\n            [showFreeSpaceOnDisk]=\"false\">\n      </vsan-capacity-overview-chart>\n   </div>\n   <div class=\"card-footer\">\n      <button class=\"btn btn-sm btn-link\"\n              (click)=\"navigateToDatastoreCapacity()\">\n         {{'vsan.monitor.capacity.computeOnlyCluster.datastoreCard.viewDetailsButton' | localized}}\n      </button>\n   </div>\n</div>\n","<!--Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"card\" id=\"capacity-overview\">\n   <h4 class=\"card-header\">{{\"vsan.monitor.capacity.overview.title\" | localized}}</h4>\n   <div class=\"card-block\">\n      <!-- If cluster is empty(e.g. no disk groups, no data breakdown is available -->\n      <span id=\"capacity-overview-no-data-usage\" *ngIf=\"capacityData.totalSpace == 0\">\n         {{\"vsan.monitor.capacity.noSpaceUsed.label\" | localized}}\n      </span>\n      <ng-container *ngIf=\"capacityData.totalSpace > 0\">\n         <vsan-capacity-overview-chart [capacityData]=\"capacityData\"\n                                       [isVsanMaxEnabled]=\"isVsanMaxEnabled\"\n                                       [(hoveredSeries)]=\"hoveredSeries\">\n         </vsan-capacity-overview-chart>\n      </ng-container>\n   </div>\n   <div class=\"card-footer\"\n        *ngIf=\"clusterCapabilityData.isSlackSpaceReservationSupported && capacityData.slackSpaceCapacityData\">\n      <ng-container *ngIf=\"!showReservationCapacityLegend\">\n         <ng-container *ngIf=\"isCustomizableThresholdsSupportedOnVc && capacityManagementStatus.isAvailable\">\n            <span *ngIf=\"capacityManagementStatus.isCapacityReservationAvailable\">\n               {{\"vsan.monitor.capacity.overview.enforceReservationAndAlertThreshold.prompt\" | localized}}\n            </span>\n            <span *ngIf=\"!capacityManagementStatus.isCapacityReservationAvailable\">\n               {{\"vsan.monitor.capacity.overview.alertThreshold.prompt\" | localized}}\n            </span>\n         </ng-container>\n         <span *ngIf=\"!isCustomizableThresholdsSupportedOnVc\"\n               [ngClass]=\"{'disable-action': !capacityManagementStatus.isCapacityReservationAvailable}\">\n            {{\"vsan.monitor.capacity.overview.enforceReservation.prompt\" | localized}}\n         </span>\n      </ng-container>\n      <vsan-capacity-legend *ngIf=\"showReservationCapacityLegend\"\n                            [chartSectionData]=\"getReservationData()\"\n                            [used]=\"capacityData.usedSpace\"\n                            [total]=\"capacityData.totalSpace\"\n                            [hoveredSeries]=\"hoveredSeries\">\n      </vsan-capacity-legend>\n      <button class=\"btn btn-sm btn-link\"\n              [disabled]=\"!capacityManagementStatus.isAvailable\"\n              [title]=\"capacityManagementStatus.description\"\n              (click)=\"configureCapacityManagement()\">\n         {{\"vsan.services.enforcereservation.action.title\" | localized}}\n      </button>\n   </div>\n</div>\n","<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<h5 vsan-auto-focus>\n   {{\"vsan.monitor.capacity\" | localized}}\n</h5>\n\n<div *ngIf=\"loading\" class=\"spinner central-spinner\">{{\"vsan.loading\" | localized}}</div>\n\n<vsan-validation *ngIf=\"errorMessage\" [alert]=\"errorMessage\"></vsan-validation>\n\n<ng-container *ngIf=\"!loading && !errorMessage\">\n   <!--\n       Include the remote mounted datastores capacity even in case of unavailable view,\n       because the current cluster might not have capacity, but the remote ones can have.\n    -->\n   <vsan-remote-capacity *ngIf=\"!isComputeOnlyCluster && remoteDatastores.length\"\n                         [remoteDatastores]=\"remoteDatastores\">\n   </vsan-remote-capacity>\n\n   <vsan-unavailable-view *ngIf=\"unavailableViewSpec\"\n                          [unavailableViewSpec]=\"unavailableViewSpec\"\n                          [clusterRef]=\"clusterRef\"\n                          [hasEditPrivilege]=\"hasEditPermission\"\n                          [displayQuickstartBtn]=\"true\">\n   </vsan-unavailable-view>\n\n   <ng-container *ngIf=\"!unavailableViewSpec\">\n      <!-- Compute only cluster's capacity -->\n      <vsan-mounted-datastores-capacity\n            *ngIf=\"isComputeOnlyCluster && computeOnlyDatastores.length\"\n            [datastoreCapacityUsages]=\"computeOnlyDatastores\">\n      </vsan-mounted-datastores-capacity>\n\n      <!-- Regular vSAN cluster capacity -->\n      <ng-container *ngIf=\"!isComputeOnlyCluster\">\n         <div id=\"capacity-views\"\n              role=\"tablist\"\n              *ngIf=\"includeNavigation\"\n              class=\"btn-group btn-outline-primary btn-sm\"\n              [attr.aria-label]=\"'vsan.monitor.capacity.tablist.label'|localized\">\n            <button id=\"capacity-view-0\"\n                    role=\"tab\"\n                    class=\"btn\"\n                    aria-controls=\"capacity-usage-panel\"\n                    (click)=\"currentView = CapacityView.USAGE\"\n                    [attr.aria-selected]=\"CapacityView.USAGE == currentView\"\n                    [ngClass]=\"{'btn-primary': CapacityView.USAGE == currentView}\">\n               {{\"vsan.monitor.capacity.views.capacity.usage\"|localized}}\n            </button>\n            <button id=\"capacity-view-1\"\n                    role=\"tab\"\n                    class=\"btn\"\n                    aria-controls=\"capacity-history-panel\"\n                    (click)=\"currentView = CapacityView.HISTORY\"\n                    [attr.aria-selected]=\"CapacityView.HISTORY == currentView\"\n                    [ngClass]=\"{'btn-primary': CapacityView.HISTORY == currentView}\">\n               {{\"vsan.monitor.capacity.views.capacity.history\" | localized}}\n            </button>\n         </div>\n         <vsan-capacity-usage id=\"capacity-usage-panel\"\n                              role=\"tabpanel\"\n                              aria-labelledby=\"capacity-view-0\"\n                              [(selectedDatastoreType)]=\"selectedDatastoreType\"\n                              [datastoresCapacityData]=\"datastoresCapacityData\"\n                              [isVsanMaxEnabled]=\"isVsanMaxEnabled\"\n                              [isVisible]=\"currentView === CapacityView.USAGE\">\n         </vsan-capacity-usage>\n         <vsan-capacity-history *ngIf=\"isHistoricalCapacitySupported && historyViewVisited\"\n                                id=\"capacity-history-panel\"\n                                role=\"tabpanel\"\n                                aria-labelledby=\"capacity-view-1\"\n                                [isVisible]=\"currentView === CapacityView.HISTORY\">\n         </vsan-capacity-history>\n      </ng-container>\n   </ng-container>\n</ng-container>\n","<!-- Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div class=\"card\" id=\"capacity-overview\">\n   <h4 class=\"card-header\">{{'vsan.monitor.capacity.analysis.title' | localized}}</h4>\n\n   <div class=\"card-block\" *ngIf=\"loading\">\n      <span class=\"busy-backdrop\">\n         <span class=\"spinner central-spinner\">{{\"vsan.loading\" | localized }}</span>\n      </span>\n   </div>\n\n   <ng-container *ngIf=\"!loading\">\n      <div class=\"card-block\" *ngIf=\"errorMessage\">\n         <vsan-validation [alert]=\"errorMessage\" [allowClose]=\"false\"></vsan-validation>\n      </div>\n      <ng-container *ngIf=\"!errorMessage\">\n         <!-- If cluster is empty(e.g. no disk groups, no data breakdown is available -->\n         <div id=\"capacity-breakdown-no-data-usage\"\n              class=\"card-block empty-card\"\n              *ngIf=\"capacityData?.totalSpace === 0\">\n            {{'vsan.monitor.capacity.noSpaceUsed.label' | localized}}\n         </div>\n         <!-- If the user does not have permissions to read the storage policies -->\n         <div id=\"capacity-analysis-no-policy-read-permission\"\n              class=\"card-block empty-card\"\n              *ngIf=\"capacityData?.totalSpace > 0 && !hasReadPoliciesPermissions\">\n            {{'vsan.monitor.capacity.analysis.noReadPoliciesPermissions' | localized}}\n         </div>\n         <ng-container *ngIf=\"capacityData?.totalSpace > 0 && hasReadPoliciesPermissions\">\n            <!-- What-if analysis card -->\n            <div class=\"card-block\">\n               <div class=\"card-title\">\n                  {{\"vsan.monitor.capacity.analysis.policy.effectiveFreeSpace\" | localized}}\n               </div>\n               <div id=\"what-if-policy-analysis\" class=\"clr-row\">\n                  <div id=\"what-if-policy-select\" class=\"clr-col-lg-5 clr-col-12\">\n                     <clr-select-container class=\"horizontal-layout label-auto-size\">\n                        <label id=\"what-if-policy-label\" for=\"selected-policy\">\n                           {{'vsan.monitor.capacity.analysis.policy.label' | localized}}\n                        </label>\n                        <select id=\"selected-policy\" clrSelect name=\"selectedPolicy\"\n                                [disabled]=\"!availablePolicies.length\"\n                                [(ngModel)]=\"selectedPolicy\">\n                           <option *ngFor=\"let policy of availablePolicies\"\n                                   [selected]=\"policy.id == selectedPolicy.id\"\n                                   [ngValue]=\"policy\">\n                              {{policy.name}}\n                           </option>\n                        </select>\n                     </clr-select-container>\n                  </div>\n                  <div id=\"capacity-analysis\" class=\"clr-col-lg-7 clr-col-12\">\n                     <div *ngIf=\"!loadingWhatIfCapacity\">\n                        <span>\n                           {{\"vsan.monitor.capacity.analysis.estimated.label\" | localized}}\n                           <span class=\"bold-value\">{{this.freeWhatIfSpace | fileSize}}</span>\n                        </span>\n                        <clr-signpost id=\"{{policySignpostId}}\"\n                                      [vsan-signpost-title]=\"'vsan.monitor.capacity.analysis.signpost.label' | localized\">\n                           <clr-signpost-content *clrIfOpen [clrPosition]=\"getSignpostPosition(policySignpostId)\">\n                              {{\"vsan.monitor.capacity.analysis.description.tooltip\" | localized}}\n                           </clr-signpost-content>\n                        </clr-signpost>\n                     </div>\n                     <div *ngIf=\"loadingWhatIfCapacity\">\n                        <span class=\"spinner spinner-inline\"></span>\n                        <span>{{\"vsan.loading\" | localized }}</span>\n                     </div>\n                  </div>\n                  <div *ngIf=\"!availablePolicies.length\"\n                       class=\"disabled-tooltip\"\n                       [attr.title]=\"'vsan.common.nopermissions' | localized\">\n                  </div>\n               </div>\n            </div>\n            <!-- Oversubscription card -->\n            <div class=\"card-block\" *ngIf=\"vcCapabilityData.isCapacityOversubscriptionSupported\">\n               <div class=\"card-title\">\n                  <span>{{\"vsan.monitor.capacity.analysis.oversubscription.title\" | localized}}</span>\n                  <clr-signpost id=\"{{oversubscriptionSignpostId}}\"\n                                [vsan-signpost-title]=\"'vsan.monitor.capacity.analysis.oversubscription.signpost.label' | localized\">\n                     <clr-signpost-content *clrIfOpen [clrPosition]=\"getSignpostPosition(oversubscriptionSignpostId)\">\n                        <div>\n                           {{\"vsan.monitor.capacity.analysis.oversubscription.description.tooltip.capacityDetails\" | localized}}\n                        </div>\n                        <div>\n                           {{\"vsan.monitor.capacity.analysis.oversubscription.description.tooltip.brief\" | localized}}\n                        </div>\n                     </clr-signpost-content>\n                  </clr-signpost>\n               </div>\n               <vsan-validation id=\"capacity-oversubscription-info\"\n                                *ngIf=\"isConsiderSpaceEfficiency\"\n                                alert=\"{{'vsan.monitor.capacity.analysis.oversubscription.considerDedupAndComp.info' | localized}}\"\n                                [allowClose]=\"false\"\n                                [isSmall]=\"true\"\n                                alertType=\"info\">\n               </vsan-validation>\n               <div class=\"clr-row\">\n                  <clr-checkbox-wrapper *ngIf=\"showSpaceEfficiencyOption\" class=\"clr-col-lg-12\">\n                     <input id=\"checkbox-consider-space-efficiency\"\n                            type=\"checkbox\"\n                            [(ngModel)]=\"isConsiderSpaceEfficiency\"\n                            clrCheckbox/>\n                     <label>{{considerSpaceEfficiencyLabel}}</label>\n                  </clr-checkbox-wrapper>\n                  <div class=\"clr-col-lg-5 clr-col-12\">\n                     <span id=\"oversubscription-brief-description\">\n                        {{\"vsan.monitor.capacity.analysis.oversubscription.label\" | localized}}\n                     </span>\n                  </div>\n                  <div class=\"clr-col-lg-7 clr-col-12\">\n                     <span id=\"oversubscription-usage-label\">\n                        {{\"vsan.monitor.capacity.analysis.oversubscription.usage\" | localized}}\n                     </span>\n                     <span id=\"oversubscription-usage-value\" class=\"bold-value\">{{uncommittedSpace | fileSize}}</span>\n                     (<span id=\"oversubscription-uncommited-ratio\" class=\"label\">{{whatIfUncommittedRatio}}</span>\n                     <span id=\"oversubscription-available-capacity\">{{whatIfAvailableCapacityLabel}}</span>)\n                  </div>\n               </div>\n            </div>\n         </ng-container>\n      </ng-container>\n   </ng-container>\n</div>\n","<!--Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-tree *ngIf=\"snapshotCapacity?.totalUsage; else snapshotCapacityTotal\">\n   <clr-tree-node>\n      <ng-container *ngTemplateOutlet=\"snapshotCapacityTotal\"></ng-container>\n      <ng-template [(clrIfExpanded)]=\"isExpanded\">\n         <div [ngClass]=\"{'capacity-breakdown-expanded': isDrilldown}\">\n            <!-- VMDK snapshot usage -->\n            <div *ngIf=\"snapshotCapacity.vmdk\"\n                 id=\"capacity-snapshots-breakdown-vmdk\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.snapshots.vmdk\"|localized}}</div>\n               <div>{{getFormattedCapacity(snapshotCapacity.vmdk, snapshotCapacity.totalUsage)}}</div>\n            </div>\n            <!-- VM memory snapshots -->\n            <div *ngIf=\"snapshotCapacity.vmMemory\"\n                 id=\"capacity-snapshots-breakdown-vmem\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>\n                  {{\"vsan.monitor.capacity.usage.breakdown.category.vm.memory.snapshots\"|localized}}\n               </div>\n               <div>\n                  {{getFormattedCapacity(snapshotCapacity.vmMemory, snapshotCapacity.totalUsage)}}\n               </div>\n            </div>\n         </div>\n      </ng-template>\n   </clr-tree-node>\n</clr-tree>\n\n<!-- Current data section -->\n<div id=\"capacity-breakdown-snapshots-current-data\"\n     class=\"breakdown-category breakdown-item\"\n     [ngClass]=\"{'current-data-indent': snapshotCapacity?.totalUsage}\">\n   <div id=\"capacity-color-current-data\"></div>\n   <span>{{\"vsan.monitor.capacity.usage.breakdown.category.currentData\" | localized}}</span>\n   <clr-signpost id=\"capacity-breakdown-current-data-signpost\"\n                 [vsan-signpost-title]=\"'vsan.monitor.capacity.usage.breakdown.category.currentData.signpost.label' | localized\">\n      <clr-signpost-content *clrIfOpen clrPosition=\"top-right\">\n         <div>{{\"vsan.monitor.capacity.usage.breakdown.category.currentData.signpost\" | localized}}</div>\n      </clr-signpost-content>\n   </clr-signpost>\n   <div>{{getFormattedCapacity(nonSnapshotDataUsage, totalUsedSpace)}}</div>\n</div>\n\n<ng-template #snapshotCapacityTotal>\n   <div id=\"capacity-breakdown-snapshots-total\"\n        class=\"breakdown-category breakdown-item\">\n      <div id=\"capacity-color-snapshots\"></div>\n      <span>{{\"vsan.monitor.capacity.usage.breakdown.category.snapshots\" | localized}}</span>\n      <clr-signpost id=\"capacity-breakdown-snapshots-signpost\"\n                    [vsan-signpost-title]=\"'vsan.monitor.capacity.usage.breakdown.category.snapshots.signpost.label' | localized\">\n         <clr-signpost-content *clrIfOpen clrPosition=\"top-right\">\n            <div>{{\"vsan.monitor.capacity.usage.breakdown.category.snapshots.signpost\" | localized}}</div>\n         </clr-signpost-content>\n      </clr-signpost>\n      <div>{{getFormattedCapacity(snapshotCapacity?.totalUsage, totalUsedSpace)}}</div>\n   </div>\n</ng-template>\n","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-alert [clrAlertClosable]=\"false\">\n   <clr-alert-item>\n      <span class=\"alert-text\">\n         {{\"vsan.monitor.capacity.remoteDatastoresCapacity\" | localized}}\n         <ng-container *ngFor=\"let datastore of remoteDatastores; let i = index\">\n            <clr-icon [attr.shape]=\"datastore.primaryIconId\"></clr-icon>\n            <a href=\"javascript://\"\n               (click)=\"navigateToDatastoreCapacity(datastore.moRef)\">\n               {{datastore.name}}\n            </a>\n            <ng-container *ngIf=\"i < remoteDatastores.length - 1\">, </ng-container>\n         </ng-container>\n      </span>\n   </clr-alert-item>\n</clr-alert>","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<div class=\"card\">\n   <div class=\"card-block\">\n      <div *ngFor=\"let datastoreType of datastoreTypes\">\n         <clr-icon [attr.shape]=\"getUsedOverallCapacityIconShape(datastoreType)\"\n                   class=\"is-solid\"\n                   size=\"18\"\n                   [ngClass]=\"getUsedOverallCapacityIconClass(datastoreType)\">\n         </clr-icon>\n         <span>{{getDatastoreUsageLabel(datastoreType)}}</span>\n      </div>\n   </div>\n</div>","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, Input} from \"@angular/core\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {DiskMgmtUtil} from \"@util/disk-mgmt.util\";\nimport {Icon} from \"@util/icon\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   selector: \"vsan-capacity-datastores-overview\",\n   templateUrl: \"capacity-datastores-overview.html\",\n   styleUrls: [\"capacity-datastores-overview.scss\"],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CapacityDatastoresOverviewComponent {\n\n   @Input()\n   datastoresCapacityData: Map<DatastoreType, CapacityData>;\n\n   constructor(private capacityService: VsanCapacityService) {\n   }\n\n   getDatastoreUsageLabel(datastoreType: DatastoreType): string {\n      return VsanUiUtils.getString(\n            \"vsan.monitor.capacity.datastore.overview.usage\",\n            DiskMgmtUtil.getLocalizedDatastoreType(datastoreType),\n            VsanUiUtils.formatFileSize(this.getUsedSpace(datastoreType)),\n            VsanUiUtils.formatFileSize(this.getTotalSpace(datastoreType)),\n            VsanUiUtils.localizeNumber(\n                  VsanUiUtils.asPercentage(this.getUsedSpace(datastoreType), this.getTotalSpace(datastoreType))));\n   }\n\n   get datastoreTypes(): DatastoreType[] {\n      return DiskMgmtUtil.orderDatastoreTypes(Array.from(this.datastoresCapacityData.keys()));\n   }\n\n   getUsedOverallCapacityIconShape(datastoreType: DatastoreType): string {\n      // If no thresholds data is available, this could be due to no claimed disks.\n      if (!this.datastoresCapacityData.get(datastoreType).thresholds) {\n         // No thresholds to report issues against, thus returning success.\n         return Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE;\n      }\n\n      const capacityData: CapacityData = this.datastoresCapacityData.get(datastoreType);\n      const errorThreshold: number = this.getErrorThresholdPercentage(datastoreType);\n      const warningThreshold: number = this.getWarningThresholdPercentage(datastoreType);\n\n      if (this.capacityService.isUsedCapacityExceedingThreshold(capacityData, errorThreshold)) {\n         return Icon.CLR_ERROR_STANDARD_ICON_SHAPE;\n      } else if (this.capacityService.isUsedCapacityExceedingThreshold(capacityData, warningThreshold)) {\n         return Icon.CLR_WARN_STANDARD_ICON_SHAPE;\n      } else {\n         return Icon.CLR_SUCCESS_STANDARD_ICON_SHAPE;\n      }\n   }\n\n   getUsedOverallCapacityIconClass(datastoreType: DatastoreType): string {\n      return Icon.clrIconShapeClassMap[this.getUsedOverallCapacityIconShape(datastoreType)];\n   }\n\n   private getUsedSpace(datastoreType: DatastoreType): number {\n      return this.datastoresCapacityData.get(datastoreType).usedSpace;\n   }\n\n   private getTotalSpace(datastoreType: DatastoreType): number {\n      return this.datastoresCapacityData.get(datastoreType).totalSpace;\n   }\n\n   private getErrorThreshold(datastoreType: DatastoreType): number {\n      return this.datastoresCapacityData.get(datastoreType).thresholds.errorThreshold;\n   }\n\n   private getWarningThreshold(datastoreType: DatastoreType): number {\n      return this.datastoresCapacityData.get(datastoreType).thresholds.warningThreshold;\n   }\n\n   private getErrorThresholdPercentage(datastoreType: DatastoreType): number {\n      return this.getErrorThreshold(datastoreType);\n   }\n\n   private getWarningThresholdPercentage(datastoreType: DatastoreType): number {\n      return this.getWarningThreshold(datastoreType);\n   }\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {CapacityDrillDownType} from './capacity-breakdown-pie-chart.component';\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {CapacityBreakdownPerspective} from \"./capacity-breakdown.component\";\n\n@Component({\n   templateUrl: \"capacity-breakdown-snapshots.html\",\n   styleUrls: [\"capacity-breakdown-snapshots.scss\"],\n   selector: \"vsan-capacity-breakdown-snapshots\"\n})\nexport class CapacityBreakdownSnapshotsComponent implements OnInit {\n   isSnapshotsCategoryExpanded: boolean;\n   selectedDrillDownCategory: CapacityDrillDownType = CapacityDrillDownType.NONE;\n   CapacityDrillDownType: typeof CapacityDrillDownType = CapacityDrillDownType;\n   CapacityBreakdownPerspective: typeof CapacityBreakdownPerspective = CapacityBreakdownPerspective;\n\n   nonSnapshotDataUsage: number;\n\n   @Input()\n   totalUsedSpace: number;\n\n   @Input()\n   capacityData: CapacityData;\n\n   constructor(private capacityService: VsanCapacityService) {\n   }\n\n   ngOnInit(): void {\n      this.nonSnapshotDataUsage = this.capacityService.getNonSnapshotDataUsage(\n            this.capacityData.snapshotUsageCapacity, this.totalUsedSpace);\n   }\n\n   drillDownCategoryChange(selectedDrillDownType: CapacityDrillDownType) {\n      this.selectedDrillDownCategory = selectedDrillDownType;\n      switch(selectedDrillDownType) {\n         case CapacityDrillDownType.NONE:\n            this.isSnapshotsCategoryExpanded = false;\n            break;\n         case CapacityDrillDownType.SNAPSHOTS:\n            this.isSnapshotsCategoryExpanded = true;\n            break;\n      }\n   }\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnInit} from \"@angular/core\";\nimport {MountedRemoteDatastore} from \"@generated/mounted-remote-datastore\";\n\n/**\n * This component shows the details for mounted datastores on a compute only cluster.\n */\n@Component({\n   templateUrl: \"mounted-datastores-capacity.html\",\n   styleUrls: [\"mounted-datastores-capacity.scss\"],\n   selector: \"vsan-mounted-datastores-capacity\",\n})\nexport class MountedDatastoresCapacityComponent {\n   @Input()\n   datastoreCapacityUsages: MountedRemoteDatastore[] = [];\n}\n","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {UnavailableViewSpec} from \"@component/unavailable-view/unavailable-view-spec\";\nimport {CapacityBasicInfo} from \"@generated/capacity-basic-info\";\nimport {CapacityBasicInfoService} from \"@generated/capacity-basic-info-service\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {CsdService} from \"@generated/csd-service\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {InventoryNode} from \"@generated/inventory-node\";\nimport {MountedRemoteDatastore} from \"@generated/mounted-remote-datastore\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\n\n@Component({\n   templateUrl: \"capacity.html\",\n   selector: \"vsan-capacity\",\n   styleUrls: [\"capacity.scss\"],\n})\nexport class CapacityComponent implements OnInit {\n   CapacityView: typeof CapacityView = CapacityView;\n\n   private _currentView: CapacityView = CapacityView.USAGE;\n\n   set currentView(view: CapacityView) {\n      this._currentView = view;\n      if (view === CapacityView.HISTORY) {\n         this.historyViewVisited = true;\n      }\n   }\n\n   get currentView(): CapacityView {\n      return this._currentView;\n   }\n\n   datastoresCapacityData: Map<DatastoreType, CapacityData>;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   clusterRef: ManagedObject;\n   isComputeOnlyCluster: boolean;\n   isVsanMaxEnabled: boolean;\n   hasEditPermission: boolean;\n   unavailableViewSpec: UnavailableViewSpec;\n   isHistoricalCapacitySupported: boolean = false;\n   historyViewVisited: boolean = false;\n\n   @ErrorMessage()\n   errorMessage: string;\n\n   selectedDatastoreType: DatastoreType;\n\n   // When this is a regular vSAN cluster we need its remote mounted datastores\n   remoteDatastores: InventoryNode[] = [];\n\n   // When this is a compute only cluster we display capacity overview of its mounted datastores\n   computeOnlyDatastores: MountedRemoteDatastore[] = [];\n\n   constructor(private capacityService: VsanCapacityService,\n         private capacityBasicInfoService: CapacityBasicInfoService,\n         private permissionService: PermissionService,\n         private csdService: CsdService) {\n   }\n\n   ngOnInit(): void {\n      this.fetch();\n   }\n\n   @RefreshHandler\n   @Loader({\n      srMessage: \"vsan.monitor.capacity\",\n      srMessageType: SrMessageType.PAGE_TITLE,\n   })\n   async fetch(): Promise<void> {\n      this.reset();\n      let capacityBasicInfo: CapacityBasicInfo;\n      [this.hasEditPermission, capacityBasicInfo] = await Promise.all([\n         this.permissionService.hasPermissions(ManagedObject.contextObject, [Privileges.EDIT_CLUSTER()]),\n         this.capacityBasicInfoService.getCapacityBasicInfo(ManagedObject.contextObject),\n      ]);\n      this.clusterRef = capacityBasicInfo.clusterRef;\n      this.isHistoricalCapacitySupported = capacityBasicInfo.isHistoricalCapacitySupported;\n      this.isComputeOnlyCluster = capacityBasicInfo.isComputeOnlyCluster;\n      this.isVsanMaxEnabled = capacityBasicInfo.isVsanMaxEnabled;\n      await this.queryCapacityData(capacityBasicInfo.isCsdSupported);\n      this.unavailableViewSpec = this.checkUnavailability(capacityBasicInfo);\n   }\n\n   private reset(): void {\n      this.unavailableViewSpec = null;\n      this.remoteDatastores = [];\n      this.computeOnlyDatastores = [];\n      this.datastoresCapacityData = null;\n   }\n\n   private async queryCapacityData(isCsdSupported: boolean): Promise<void> {\n      if (this.isComputeOnlyCluster) {\n         this.computeOnlyDatastores = await this.capacityService.getMountedDatastoresSpaceUsage(this.clusterRef);\n         return;\n      }\n      // Query the local capacity as well as any remote datastores that are mounted.\n      const promises: Promise<any>[] = [\n         this.capacityService.getCapacityDataPerDatastore(ManagedObject.contextObject, false),\n      ];\n      // For regular vSAN clusters, we also show an info message listing the mounted datastores\n      if (isCsdSupported) {\n         promises.push(this.csdService.getRemoteDatastoresInfos(this.clusterRef));\n      }\n      const result: any[] = await Promise.all(promises);\n      this.datastoresCapacityData = result[0];\n      if (isCsdSupported) {\n         this.remoteDatastores = result[1];\n      }\n   }\n\n   private checkUnavailability(basicInfo: CapacityBasicInfo): UnavailableViewSpec {\n      if (this.computeOnlyDatastores?.length || this.getTotalDatastoresCapacity() > 0) {\n         // If there is capacity data just show it.\n         // The host count check is done next because the user might lack read permissions on them,\n         // but the API will report the capacity and we can show it (PR 2830338).\n         return null;\n      }\n      if (!basicInfo.hostCount) {\n         // No hosts in the cluster or lack of privilege to query hosts.\n         return this.isComputeOnlyCluster\n               ? UnavailableViewSpec.CAPACITY_USAGE_VIEW_NO_HOSTS_COMPUTE\n               : UnavailableViewSpec.CAPACITY_USAGE_VIEW_NO_HOSTS;\n      }\n      if (!this.isComputeOnlyCluster && basicInfo.hostCount === basicInfo.faultyHostsTotalCount) {\n         // No eligible hosts in the cluster.\n         return UnavailableViewSpec.CAPACITY_USAGE_VIEW_NO_ELIGIBLE_HOSTS;\n      }\n      if (this.isComputeOnlyCluster && !this.computeOnlyDatastores?.length) {\n         // Compute cluster with no mounted datastores\n         return UnavailableViewSpec.CAPACITY_USAGE_NO_MOUNTED_DATASTORES;\n      }\n      // No claimed or healthy disks.\n      return UnavailableViewSpec.CAPACITY_USAGE_VIEW_NO_CLAIMED_DISKS;\n   }\n\n   private getTotalDatastoresCapacity(): number {\n      if (!this.datastoresCapacityData?.size) {\n         return 0;\n      }\n      let result: number = 0;\n      this.datastoresCapacityData.forEach((datastoreCapacity: CapacityData) =>\n            result += datastoreCapacity.totalSpace);\n      return result;\n   }\n\n   get includeNavigation(): boolean {\n      // When supporting historical capacity, there are 2 views, we need the navigation tabs.\n      // Otherwise, there is only one view and we don't need it.\n      return this.isHistoricalCapacitySupported;\n   }\n}\n\nexport enum CapacityView {\n   USAGE,\n   HISTORY,\n}\n","/* Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {UpgradeData} from \"@component/upgrade/upgrade.data\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {CapacityManagementStatus, CapacityReservationUtil} from \"@util/capacity-reservation-util\";\n\n@Component({\n   templateUrl: \"capacity-overview.html\",\n   styleUrls: [\"capacity-overview.scss\"],\n   selector: \"vsan-capacity-overview\",\n})\nexport class CapacityOverviewComponent {\n\n   @Input()\n   capacityData: CapacityData;\n\n   @Input()\n   upgradeData: UpgradeData;\n\n   @Input()\n   configureReservationsPermission: boolean;\n\n   @Input()\n   clusterCapabilityData: VsanCapabilityData;\n\n   @Input()\n   isCustomizableThresholdsSupportedOnVc: boolean;\n\n   @Input()\n   isVsanMaxEnabled: boolean;\n\n   @Output()\n   onConfigureManagement: EventEmitter<void> = new EventEmitter<void>();\n\n   /**\n    * The hovered series in capacity bar chart component, used to display the corresponding legend border.\n    */\n   hoveredSeries: any;\n\n   constructor(private capacityService: VsanCapacityService) {\n   }\n\n   getReservationData = () => this.capacityService.parseCapacityReservationDataSections(this.capacityData);\n\n   get showReservationCapacityLegend(): boolean {\n      if (!this.capacityData.slackSpaceCapacityData) {\n         return false;\n      }\n      // If none of the reservations is currently enabled show an explanatory prompt to the user,\n      // otherwise an additional legend for the capacity bar chart\n      return this.capacityData.slackSpaceCapacityData.operationSpaceReservation > 0\n            || this.capacityData.slackSpaceCapacityData.rebuildToleranceReservation > 0;\n   }\n\n   get capacityManagementStatus(): CapacityManagementStatus {\n      const isCapacityReservationSupported: boolean = this.capacityData.slackSpaceCapacityData\n            && this.capacityData.slackSpaceCapacityData.enforceReservationSupported;\n      return CapacityReservationUtil.getCapacityManagementStatus(this.configureReservationsPermission,\n            this.upgradeData, isCapacityReservationSupported, this.isCustomizableThresholdsSupportedOnVc);\n   }\n\n   configureCapacityManagement() {\n      // The parent component is responsible for this component's data, so it should handle any changes\n      // after the edit operation completes.\n      this.onConfigureManagement.emit();\n   }\n}\n","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectorRef, Component, Input, OnInit} from \"@angular/core\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {SpaceEfficiencyConfig} from \"@generated/space-efficiency-config\";\nimport {StoragePolicyData} from \"@generated/storage-policy-data\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {WhatifCapacityData} from \"@generated/whatif-capacity-data\";\nimport {ErrorHandler} from \"@service/flow/error-handler.decorator\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {Logger} from \"@util/logger\";\nimport {VsanSignpostUtil} from \"@util/vsan-signpost-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanCapacityAnalysisService} from \"./capacity-analysis.service\";\n\n@Component({\n   templateUrl: \"capacity-analysis.html\",\n   styleUrls: [\"capacity-analysis.scss\"],\n   selector: \"vsan-capacity-analysis\",\n})\nexport class CapacityAnalysisComponent implements OnInit {\n   private static readonly WHAT_IF_CAPACITY_LOADER: string = \"what-if-capacity-loader\";\n\n   readonly policySignpostId: string = \"what-if-policy-signpost\";\n   readonly oversubscriptionSignpostId: string = \"capacity-oversubscription-signpost\";\n\n   constructor(private capacityService: VsanCapacityAnalysisService,\n         private permissionService: PermissionService,\n         private changeDetector: ChangeDetectorRef) {\n   }\n\n   private _selectedPolicy: StoragePolicyData;\n\n   @Input()\n   capacityData: CapacityData;\n\n   @Input()\n   vcCapabilityData: VsanCapabilityData;\n\n   @Input()\n   isVsanMaxEnabled: boolean;\n\n   set selectedPolicy(policy: StoragePolicyData) {\n      this._selectedPolicy = policy;\n      this.updateWhatIfCapacity();\n   }\n\n   get selectedPolicy(): StoragePolicyData {\n      return this._selectedPolicy;\n   }\n\n   hasReadPoliciesPermissions: boolean = false;\n   availablePolicies: StoragePolicyData[] = [];\n   freeWhatIfSpace: number = 0;\n\n   @ErrorMessage({msg: \"vsan.common.error.dataExtraction\"})\n   errorMessage: string;\n\n   isConsiderSpaceEfficiency: boolean;\n   showSpaceEfficiencyOption: boolean;\n   uncommittedWhatIfSpace: number = 0;\n   totalAvailableSpace: number = 0;\n   considerSpaceEfficiencyLabel: string;\n   whatIfAvailableCapacityLabel: string;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   @LoadingIndicator({name: CapacityAnalysisComponent.WHAT_IF_CAPACITY_LOADER})\n   loadingWhatIfCapacity: boolean;\n\n   private clusterRef: ManagedObject;\n\n   @Loader({\n      srMessage: \"vsan.monitor.capacity.analysis.title\",\n      srMessageType: SrMessageType.DATA,\n   })\n   async ngOnInit(): Promise<void> {\n      if (!this.capacityData || this.capacityData.totalSpace === 0) {\n         /* No need to load anything when the cluster hasn't capacity. */\n         return;\n      }\n\n      this.clusterRef = ManagedObject.contextObject;\n      this.hasReadPoliciesPermissions =\n            await this.permissionService.hasVcPermissions(this.clusterRef, [Privileges.READ_POLICIES()]);\n      if (this.hasReadPoliciesPermissions) {\n         this.availablePolicies = await this.capacityService.getAvailablePolicies(this.clusterRef);\n      }\n\n      // Don't show space efficiency option for vSAN Max, since the option is not available on cluster level.\n      this.showSpaceEfficiencyOption = !!this.capacityData.spaceEfficiencyCapacity && !this.isVsanMaxEnabled;\n\n      this.initializeLabels();\n      this.initializePolicy();\n   }\n\n   private initializeLabels(): void {\n      // Calculate total available space excluding reserved capacity\n      this.totalAvailableSpace = this.capacityData.actuallyWrittenSpace + this.capacityData.freeSpace;\n      this.whatIfAvailableCapacityLabel =\n            VsanUiUtils.getString(\"vsan.monitor.capacity.analysis.oversubscription.available.label\",\n                  VsanUiUtils.formatFileSize(this.totalAvailableSpace));\n      if (this.showSpaceEfficiencyOption) {\n         this.considerSpaceEfficiencyLabel =\n               this.capacityData.spaceEfficiencyCapacity.spaceEfficiencyConfig === SpaceEfficiencyConfig.COMPRESSION\n                     ? VsanUiUtils.getString(\n                     \"vsan.monitor.capacity.analysis.oversubscription.considerCompression.label\")\n                     : VsanUiUtils.getString(\n                     \"vsan.monitor.capacity.analysis.oversubscription.considerDedupAndComp.label\");\n      }\n   }\n\n   private initializePolicy(): void {\n      if (!this.selectedPolicy && this.availablePolicies.length) {\n         this.availablePolicies.forEach(policy => {\n            if (policy.isDefault) {\n               this.selectedPolicy = policy;\n            }\n         });\n         // Pre-select a policy when the default policy is missing.\n         if (!this.selectedPolicy) {\n            this.selectedPolicy = this.availablePolicies[0];\n         }\n      }\n   }\n\n   @Loader({name: CapacityAnalysisComponent.WHAT_IF_CAPACITY_LOADER})\n   async updateWhatIfCapacity(): Promise<void> {\n      if (!this.selectedPolicy) {\n         Logger.error(\"No selected policy! Cannot get what-if capacity.\");\n         return;\n      }\n\n      this.freeWhatIfSpace = 0;\n      const whatIfCapacity: WhatifCapacityData = await this.capacityService.getWhatIfCapacity(\n            this.clusterRef, this.selectedPolicy.id);\n      if (whatIfCapacity) {\n         this.freeWhatIfSpace = whatIfCapacity.free;\n         this.uncommittedWhatIfSpace = whatIfCapacity.uncommitted;\n      }\n\n      this.changeDetector.detectChanges();\n   }\n\n   @ErrorHandler({name: CapacityAnalysisComponent.WHAT_IF_CAPACITY_LOADER})\n   private handleWhatIfCapacityError(error: string): void {\n      Logger.error(\"Error getting whatif capacity\", error);\n      this.errorMessage = error;\n      this.changeDetector.detectChanges();\n   }\n\n// Fix for 2435380 - Signpost for Usable Capacity Analysis should not expand the entire page\n   getSignpostPosition(elementId: string): string {\n      const SIGNPOST_WIDTH: number = 360;\n      const SIGNPOST_HEIGHT: number = 150;\n      return VsanSignpostUtil.getPosition(elementId, SIGNPOST_WIDTH, SIGNPOST_HEIGHT);\n   }\n\n   get uncommittedSpace(): number {\n      // Consider space efficiency capacity if explicitly set or for vSAN Max case,\n      // because the space efficiency option is applied per object and should always be considered.\n      return this.isConsiderSpaceEfficiency || this.isVsanMaxEnabled\n            ? this.uncommittedWhatIfSpace / this.capacityData.spaceEfficiencyCapacity.ratio\n            : this.uncommittedWhatIfSpace;\n   }\n\n   get whatIfUncommittedRatio(): string {\n      return `${VsanUiUtils.localizeNumber((this.uncommittedSpace / this.totalAvailableSpace), 2)}x`;\n   }\n}\n","/* Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, Input} from \"@angular/core\";\nimport {UserObjectsCapacityData} from \"@generated/user-objects-capacity-data\";\nimport {CapacityBreakdownItemComponent} from \"./capacity-breakdown-item.component\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\n\n@Component({\n   templateUrl: \"user-capacity-breakdown.html\",\n   styleUrls: [\"user-capacity-breakdown.scss\"],\n   selector: \"vsan-user-capacity-breakdown\",\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserCapacityBreakdownComponent extends CapacityBreakdownItemComponent {\n\n   constructor(capacityService: VsanCapacityService) {\n      super(capacityService);\n   }\n   /**\n    * The breakdown data for the user objects capacity usage.\n    */\n   @Input()\n   userObjectsCapacity: UserObjectsCapacityData;\n}","<!--Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-tree *ngIf=\"includeTotal; else breakdown\">\n   <clr-tree-node>\n      <div id=\"capacity-color-vm\"></div>\n      <span>{{getTotalCapacityLabel(vmCapacity.totalVmUsage,\n            'vsan.monitor.capacity.usage.breakdown.category.vm')}}</span>\n      <ng-template [(clrIfExpanded)]=\"isExpanded\">\n         <ng-container *ngTemplateOutlet=\"breakdown\"></ng-container>\n      </ng-template>\n   </clr-tree-node>\n</clr-tree>\n\n<ng-template #breakdown>\n   <div [ngClass]=\"{'capacity-breakdown-expanded': isDrilldown}\">\n      <!-- VMDK usage -->\n      <div id=\"{{vmCapacity.datastoreType === DatastoreType.PMEM ? 'vmdk-and-nvdimm-capacity-breakdown' : 'vmdk-capacity-breakdown'}}\"\n           *ngIf=\"vmCapacity.vmdkPrimaryUsage\"\n           class=\"breakdown-category breakdown-item\">\n         <div vsan-show-title>{{getVmdkObjectsLabel(vmCapacity.datastoreType)}}</div>\n         <div>\n            {{getFormattedCapacity(vmCapacity.vmdkPrimaryUsage\n               + vmCapacity.vmdkPolicyOverheadUsage,\n               vmCapacity.totalVmUsage)}}\n         </div>\n      </div>\n      <div id=\"vmdk-capacity-primary\"\n           *ngIf=\"vmCapacity.vmdkPrimaryUsage\"\n           class=\"nested-breakdown-capacity breakdown-item\">\n         <div id=\"capacity-color-vm-vmdk-primary\" *ngIf=\"showBreakdownColors\"></div>\n         <span>{{\"vsan.monitor.capacity.usage.breakdown.category.vm.primary\"|localized}}</span>\n         <span>{{vmCapacity.vmdkPrimaryUsage|fileSize}}</span>\n      </div>\n      <div id=\"vmdk-capacity-policy\"\n           *ngIf=\"vmCapacity.vmdkPolicyOverheadUsage\"\n           class=\"nested-breakdown-capacity breakdown-item\">\n         <div id=\"capacity-color-vm-vmdk-policy\" *ngIf=\"showBreakdownColors\"></div>\n         <span>{{\"vsan.monitor.capacity.usage.breakdown.category.vm.policy\"|localized}}</span>\n         <span>{{vmCapacity.vmdkPolicyOverheadUsage|fileSize}}</span>\n      </div>\n      <!-- Block container volumes usage -->\n      <div id=\"block-container-capacity-breakdown\"\n           *ngIf=\"vmCapacity.blockContainerPrimaryDataUsage\"\n           class=\"breakdown-category breakdown-item\">\n         <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.vm.fcd\"|localized}}</div>\n         <div>\n            {{getFormattedCapacity(vmCapacity.blockContainerPrimaryDataUsage\n               + vmCapacity.blockContainerPolicyOverheadUsage,\n               vmCapacity.totalVmUsage)}}\n         </div>\n      </div>\n      <div id=\"vm-block-capacity-primary\"\n           *ngIf=\"vmCapacity.blockContainerPrimaryDataUsage\"\n           class=\"nested-breakdown-capacity breakdown-item\">\n         <div id=\"capacity-color-block-container-primary\" *ngIf=\"showBreakdownColors\"></div>\n         <span>{{\"vsan.monitor.capacity.usage.breakdown.category.vm.primary\"|localized}}</span>\n         <span>{{vmCapacity.blockContainerPrimaryDataUsage|fileSize}}</span>\n      </div>\n      <div id=\"vm-block-capacity-policy\"\n           *ngIf=\"vmCapacity.blockContainerPolicyOverheadUsage\"\n           class=\"nested-breakdown-capacity breakdown-item\">\n         <div id=\"capacity-color-block-container-policy\" *ngIf=\"showBreakdownColors\"></div>\n         <span>{{\"vsan.monitor.capacity.usage.breakdown.category.vm.policy\"|localized}}</span>\n         <span>{{vmCapacity.blockContainerPolicyOverheadUsage|fileSize}}</span>\n      </div>\n      <!-- VM home/namespace objects -->\n      <div id=\"namespace-capacity\"\n           *ngIf=\"vmCapacity.homeObjectsUsage\"\n           class=\"breakdown-category breakdown-item\">\n         <div id=\"capacity-color-vm-namespace\" *ngIf=\"showBreakdownColors\"></div>\n         <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.vm.home.objects\"|localized}}</div>\n         <div>\n            {{getFormattedCapacity(vmCapacity.homeObjectsUsage, vmCapacity.totalVmUsage)}}\n         </div>\n      </div>\n      <!-- Swap objects -->\n      <div id=\"swap-capacity\"\n           *ngIf=\"vmCapacity.swapObjectsUsage\"\n           class=\"breakdown-category breakdown-item\">\n         <div id=\"capacity-color-vm-swap-object\" *ngIf=\"showBreakdownColors\"></div>\n         <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.vm.swap\"|localized}}</div>\n         <div>\n            {{getFormattedCapacity(vmCapacity.swapObjectsUsage, vmCapacity.totalVmUsage)}}\n         </div>\n      </div>\n      <!-- Swap objects snapshots -->\n      <div id=\"swap-snapshot-capacity\"\n           *ngIf=\"vmCapacity.vmMemorySnapshotUsage\"\n           class=\"breakdown-category breakdown-item\">\n         <div id=\"capacity-color-vm-swap-object-snapshot\" *ngIf=\"showBreakdownColors\"></div>\n         <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.vm.memory.snapshots\"|localized}}</div>\n         <div>\n            {{getFormattedCapacity(vmCapacity.vmMemorySnapshotUsage, vmCapacity.totalVmUsage)}}\n         </div>\n      </div>\n      <!-- VR Home objects -->\n      <div id=\"vr-source-capacity\"\n           *ngIf=\"vmCapacity.vrSourceUsage\"\n           class=\"breakdown-category breakdown-item\">\n         <div id=\"capacity-color-vm-vr-source-object\" *ngIf=\"showBreakdownColors\"></div>\n         <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.vm.vr.source\"|localized}}</div>\n         <div>\n            {{getFormattedCapacity(vmCapacity.vrSourceUsage, vmCapacity.totalVmUsage)}}\n         </div>\n      </div>\n   </div>\n</ng-template>","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {VsanCommonModule} from \"app/vsan/common/vsan-common.module\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\nimport {VsanChartModule} from \"@component/chart/chart.module\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {CapacityComponent} from \"./capacity.component\";\nimport {CapacityHistoryComponent} from \"./history/capacity-history.component\";\nimport {CapacityOverviewComponent} from \"./usage/capacity-overview.component\";\nimport {CapacityUsageComponent} from \"./usage/capacity-usage.component\";\nimport {CapacityAnalysisComponent} from \"./usage/capacity-analysis.component\";\nimport {CapacityBreakdownComponent} from \"./usage/breakdown/capacity-breakdown.component\";\nimport {VsanCapacityAnalysisService} from \"./usage/capacity-analysis.service\";\nimport {CapacityCommonModule} from \"@component/capacity/capacity-common.module\";\nimport {SpaceEfficiencyService} from \"@service/space-efficiency-service\";\nimport {RemoteCapacityComponent} from \"./usage/remote-capacity.component\";\nimport {CapacityDatastoresOverviewComponent} from \"./usage/capacity-datastores-overview.component\";\nimport {UpgradeService} from \"@component/upgrade/upgrade.service\";\nimport {MountedDatastoresCapacityComponent} from \"./mounted-datastores/mounted-datastores-capacity.component\";\nimport {RemoteDatastoreCapacityCardComponent} from \"./mounted-datastores/remote-datastore-capacity-card.component\";\nimport {CapacityBreakdownCategoriesComponent} from \"./usage/breakdown/capacity-breakdown-categories.component\";\nimport {CapacityBreakdownPieChartComponent} from \"./usage/breakdown/capacity-breakdown-pie-chart.component\";\nimport {CapacityBreakdownSnapshotsComponent} from \"./usage/breakdown/capacity-breakdown-snapshots.component\";\n\nconst routes: Routes = [\n   {\n      path: \"\",\n      component: CapacityComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      VsanCommonModule,\n      UnavailableViewModule,\n      CapacityCommonModule,\n      VsanChartModule,\n      RouterModule.forChild(routes),\n   ],\n   declarations: [\n      CapacityComponent,\n      CapacityHistoryComponent,\n      CapacityOverviewComponent,\n      CapacityAnalysisComponent,\n      CapacityUsageComponent,\n      CapacityBreakdownComponent,\n      CapacityBreakdownCategoriesComponent,\n      CapacityBreakdownSnapshotsComponent,\n      CapacityBreakdownPieChartComponent,\n      RemoteCapacityComponent,\n      CapacityDatastoresOverviewComponent,\n      MountedDatastoresCapacityComponent,\n      RemoteDatastoreCapacityCardComponent,\n   ],\n   providers: [\n      VsanCapacityService,\n      VsanCapacityAnalysisService,\n      SpaceEfficiencyService,\n      UpgradeService,\n   ],\n})\nexport class CapacityModule {\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {Component, Input} from \"@angular/core\";\nimport {ShareableDatastore} from \"@generated/shareable-datastore\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"remote-datastore-capacity-card.html\",\n   styleUrls: [\"remote-datastore-capacity-card.scss\"],\n   selector: \"vsan-remote-datastore-capacity-card\",\n})\nexport class RemoteDatastoreCapacityCardComponent {\n\n   @Input()\n   shareableDatastore: ShareableDatastore;\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   getTitle(): string {\n      return VsanUiUtils.getString(\n            \"vsan.monitor.capacity.computeOnlyCluster.datastoreCard.title\",\n            this.shareableDatastore.datastore.name, this.shareableDatastore.serverCluster.name);\n   }\n\n   navigateToDatastoreCapacity(): void {\n      this.navigationService.navigateTo(PlatformExtension.DATASTORE_CAPACITY, this.shareableDatastore.datastore.moRef);\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\nimport {CapacityDrillDownType} from './capacity-breakdown-pie-chart.component';\nimport {CapacityBreakdownPerspective} from \"./capacity-breakdown.component\";\n\n@Component({\n   templateUrl: \"capacity-breakdown-categories.html\",\n   styleUrls: [\"capacity-breakdown-categories.scss\"],\n   selector: \"vsan-capacity-breakdown-categories\"\n})\nexport class CapacityBreakdownCategoriesComponent {\n   isVmCategoryExpanded: boolean = false;\n   isUserObjectsCategoryExpanded: boolean = false;\n   isSystemCategoryExpanded: boolean = false;\n\n   isDrillDown: boolean = false;\n   selectedDrillDownType: CapacityDrillDownType = CapacityDrillDownType.NONE;\n   CapacityDrillDownType: typeof CapacityDrillDownType = CapacityDrillDownType;\n\n   CapacityBreakdownPerspective: typeof CapacityBreakdownPerspective = CapacityBreakdownPerspective;\n\n   @Input()\n   totalUsedSpace: number;\n\n   @Input()\n   showHeader: boolean;\n\n   @Input()\n   capacityData: CapacityData;\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   constructor() {\n   }\n\n   hasVmCapacity(): boolean {\n      return this.capacityData &&\n            this.capacityData.vmCapacity &&\n            this.capacityData.vmCapacity.totalVmUsage > 0;\n   }\n\n   hasUserCapacity(): boolean {\n      return this.capacityData &&\n            this.capacityData.userObjectsCapacity &&\n            this.capacityData.userObjectsCapacity.totalUserObjectsUsage > 0;\n   }\n\n   hasSystemCapacity(): boolean {\n      return this.capacityData &&\n            this.capacityData.systemUsageCapacity &&\n            this.capacityData.systemUsageCapacity.totalSystemUsage > 0;\n   }\n\n   toggleExpanded(): void {\n      this.isVmCategoryExpanded =\n            this.isUserObjectsCategoryExpanded =\n                  this.isSystemCategoryExpanded = !this.allExpanded;\n      // Navigate away from drilldown in the pie chart when user clicks expand/collapse all.\n      this.isDrillDown = false;\n      this.selectedDrillDownType = CapacityDrillDownType.NONE;\n\n      this.srOnlyMessage = VsanUiUtils.getString(this.allExpanded ?\n            \"vsan.common.srMessage.expandedAll\" : \"vsan.common.srMessage.collapsedAll\");\n   }\n\n   get allExpanded() {\n      return (this.isVmCategoryExpanded || !this.hasVmCapacity()) &&\n            (this.isUserObjectsCategoryExpanded || !this.hasUserCapacity()) &&\n            (this.isSystemCategoryExpanded || !this.hasSystemCapacity());\n   }\n\n   get allCollapsed() {\n      return !this.isVmCategoryExpanded &&\n            !this.isUserObjectsCategoryExpanded &&\n            !this.isSystemCategoryExpanded;\n   }\n\n   drillDownCategoryChange(selectedDrillDownType: CapacityDrillDownType) {\n      this.selectedDrillDownType = selectedDrillDownType;\n      switch(selectedDrillDownType) {\n         case CapacityDrillDownType.NONE:\n            this.isVmCategoryExpanded = this.isUserObjectsCategoryExpanded = this.isSystemCategoryExpanded = false;\n            break;\n         case CapacityDrillDownType.VM:\n            this.isVmCategoryExpanded = true;\n            break;\n         case CapacityDrillDownType.USER_OBJECTS:\n            this.isUserObjectsCategoryExpanded = true;\n            break;\n         case CapacityDrillDownType.SYSTEM_OBJECTS:\n            this.isSystemCategoryExpanded = true;\n      }\n   }\n}","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, Input} from \"@angular/core\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {VmCapacityData} from \"@generated/vm-capacity-data\";\nimport {CapacityBreakdownItemComponent} from \"./capacity-breakdown-item.component\";\n\n@Component({\n   templateUrl: \"vm-capacity-breakdown.html\",\n   styleUrls: [\"vm-capacity-breakdown.scss\"],\n   selector: \"vsan-vm-capacity-breakdown\",\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VmCapacityBreakdownComponent extends CapacityBreakdownItemComponent {\n\n   DatastoreType: typeof DatastoreType = DatastoreType;\n\n   constructor(capacityService: VsanCapacityService) {\n      super(capacityService);\n   }\n\n   /**\n    * The breakdown data for the VM objects capacity usage.\n    */\n   @Input()\n   vmCapacity: VmCapacityData;\n\n   /**\n    * Whether to have a total with expand/collapse arrow on top of the breakdown.\n    */\n   @Input()\n   includeTotal: boolean = true;\n\n   /**\n    * Whether to show the color of the breakdown section in front of it.\n    */\n   @Input()\n   showBreakdownColors: boolean = false;\n\n   getVmdkObjectsLabel(datastoreType: DatastoreType): string {\n      return this.capacityService.getVmdkObjectsLabel(datastoreType);\n   }\n}\n","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, HostBinding, Input, OnInit, Output} from \"@angular/core\";\nimport {UpgradeData} from \"@component/upgrade/upgrade.data\";\nimport {UpgradeService} from \"@component/upgrade/upgrade.service\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {DatastoreType} from \"@generated/datastore-type\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {CapacityManagementContext} from \"@navigation/context/capacity-management-context\";\nimport {ClusterComputeResource} from \"@service/client/dataservice/data-service-property\";\nimport {DataServiceClient} from \"@service/client/dataservice/data-service.service\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ScreenReaderAnnouncer, SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {DiskMgmtUtil} from \"@util/disk-mgmt.util\";\nimport {Logger} from \"@util/logger\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {VsanDialogUtil} from \"@util/vsan-dialog-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanRoutes} from \"../../../vsan-routes\";\n\n@Component({\n   templateUrl: \"capacity-usage.html\",\n   styleUrls: [\"capacity-usage.scss\"],\n   selector: \"vsan-capacity-usage\",\n})\nexport class CapacityUsageComponent implements OnInit {\n   @ErrorMessage()\n   errorMessage: string;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   capacityData: CapacityData;\n   upgradeData: UpgradeData;\n   clusterCapabilityData: VsanCapabilityData;\n   vcCapabilityData: VsanCapabilityData;\n   configureReservationsPermission: boolean = false;\n   datastoreTypes: DatastoreType[];\n   DatastoreType: typeof DatastoreType = DatastoreType;\n\n   @Input()\n   selectedDatastoreType: DatastoreType;\n\n   @Input()\n   datastoresCapacityData: Map<DatastoreType, CapacityData>;\n\n   @Input()\n   isVsanMaxEnabled: boolean;\n\n   @Output()\n   selectedDatastoreTypeChange: EventEmitter<DatastoreType> = new EventEmitter<DatastoreType>();\n\n   @HostBinding(\"style.display\")\n   get display(): string {\n      return this.isVisible\n            ? \"flex\"\n            : \"none\";\n   }\n\n   @Input()\n   isVisible: boolean;\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   constructor(private capabilitiesService: VsanCapabilityProvider,\n         private permissionService: PermissionService,\n         private upgradeService: UpgradeService,\n         private dataService: DataServiceClient,\n         private taskService: TaskMonitorService) {\n   }\n\n   ngOnInit(): void {\n      this.fetch();\n      if (this.isVisible) {\n         this.srOnlyMessage = VsanUiUtils.getString(\"vsan.screenReader.message.page.loaded.andTabSelected\",\n               VsanUiUtils.getString(\"vsan.monitor.capacity\"),\n               VsanUiUtils.getString(\"vsan.monitor.capacity.views.capacity.usage\"));\n      }\n   }\n\n   @Loader({\n      srMessage: \"vsan.monitor.capacity.views.capacity.usage\",\n      srMessageType: SrMessageType.DATA,\n   })\n   async fetch(): Promise<void> {\n      this.reset();\n      const managedObject: ManagedObject = ManagedObject.contextObject;\n      this.upgradeService.getUpgradeData(managedObject)\n            .then(upgradeData => this.upgradeData = upgradeData)\n            .catch(error => {\n               this.errorMessage = error;\n               Logger.error(\"Unable to retrieve vsan disks upgrade data: \" + error);\n            });\n\n      [\n         this.clusterCapabilityData,\n         this.vcCapabilityData,\n         this.configureReservationsPermission,\n      ] = await Promise.all([\n         this.capabilitiesService.getClusterCapabilityData(managedObject),\n         this.capabilitiesService.getVcCapabilityData(managedObject),\n         this.queryClusterPermissions(managedObject),\n      ]);\n\n      this.setDatastoreTypes(DiskMgmtUtil.orderDatastoreTypes(Array.from(this.datastoresCapacityData.keys())));\n      this.selectDatastoreType(this.getSelectedDatastoreType(this.datastoreTypes));\n   }\n\n   private reset(): void {\n      this.configureReservationsPermission = false;\n      this.upgradeData = null;\n   }\n\n   getDatastoreTypeLabel(datastoreType: DatastoreType): string {\n      return DiskMgmtUtil.getLocalizedDatastoreType(datastoreType);\n   }\n\n   setDatastoreTypes(datastoreTypes: DatastoreType[]): void {\n      this.datastoreTypes = datastoreTypes;\n   }\n\n   selectDatastoreType(datastoreType: DatastoreType): void {\n      this.selectedDatastoreType = datastoreType;\n      this.selectedDatastoreTypeChange.emit(this.selectedDatastoreType);\n      this.capacityData = this.datastoresCapacityData.get(this.selectedDatastoreType);\n   }\n\n   async queryClusterPermissions(managedObject: ManagedObject): Promise<boolean> {\n      try {\n         const permissions: any = await this.permissionService.queryPermissions(managedObject, [\n            Privileges.EDIT_CLUSTER(),\n            Privileges.CONFIG_STORAGE(),\n         ]);\n         const editClusterPermission: boolean = permissions[Privileges.EDIT_CLUSTER()];\n         const configureStoragePermission: boolean = permissions[Privileges.CONFIG_STORAGE()];\n         return editClusterPermission && configureStoragePermission;\n      } catch (e) {\n         // Fallback to true, when we cannot determine the permission.\n         return true;\n      }\n   }\n\n   async editCapacityManagement(): Promise<void> {\n      const eventTarget: EventTarget = event.target;\n      const clusterName: string = await this.dataService\n            .getProperty(ClusterComputeResource.name, ManagedObject.contextObject);\n      const context: CapacityManagementContext = {\n         clusterName: clusterName,\n         showOldFormatInfo: this.upgradeService.isUpgradeNeeded(this.upgradeData),\n         isCapacityCustomizableThresholdsSupported: this.vcCapabilityData.isCapacityCustomizableThresholdsSupported,\n      };\n      new ModalBuilder(VsanRoutes.CAPACITY_MANAGEMENT)\n            .setSize(VsanDialogUtil.CAPACITY_MANAGEMENT_DIALOG.width, VsanDialogUtil.CAPACITY_MANAGEMENT_DIALOG.height)\n            .setEventTarget(eventTarget)\n            .open(context)\n            .then(this.awaitTask);\n   }\n\n   private getSelectedDatastoreType(datastoreTypes: DatastoreType[]): DatastoreType {\n      if (datastoreTypes.length === 1) {\n         return datastoreTypes[0];\n      }\n\n      if (!datastoreTypes.includes(this.selectedDatastoreType)) {\n         return DatastoreType.VSAN;\n      }\n\n      return this.selectedDatastoreType;\n   }\n\n   private awaitTask = (taskRef: ManagedObject) => {\n      if (!taskRef) {\n         return;\n      }\n      this.taskService.getAwaitResult(taskRef)\n            .then(VsanUiUtils.globalRefresh)\n            .catch((e) => {\n               this.errorMessage = e;\n            });\n   };\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {Component, Input} from \"@angular/core\";\nimport {InventoryNode} from \"@generated/inventory-node\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\n\n/**\n * This component is used to display any mounted remote datastores\n * on a regular(as opposed to a compute only) vSAN cluster.\n * For compute only cluster's mounted datastores see: MountedDatastoresCapacityComponent\n */\n@Component({\n   selector: \"vsan-remote-capacity\",\n   templateUrl: \"remote-capacity.html\",\n   styleUrls: [\"remote-capacity.scss\"],\n})\nexport class RemoteCapacityComponent {\n\n   @Input()\n   remoteDatastores: InventoryNode[];\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   navigateToDatastoreCapacity(datastoreRef: ManagedObject): void {\n      this.navigationService.navigateTo(PlatformExtension.DATASTORE_CAPACITY, datastoreRef);\n   }\n}","<!--Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<span *ngIf=\"loading\" class=\"busy-backdrop\">\n   <span class=\"spinner spinner-lg central-spinner\"></span>\n</span>\n<ng-container *ngIf=\"!loading\">\n   <vsan-validation id=\"validation-message\"\n                    *ngIf=\"errorMessage\"\n                    [(alert)]=\"errorMessage\"\n                    [allowReload]=\"true\"\n                    (onReload)=\"fetch()\"\n                    (onClosed)=\"errorMessage = null\">\n   </vsan-validation>\n\n   <vsan-validation id=\"no-available-capacity\"\n                    *ngIf=\"capacityData?.reducedCapacityMessages?.length\"\n                    [allowClose]=\"false\"\n                    alertType=\"info\"\n                    [alerts]=\"capacityData?.reducedCapacityMessages\">\n   </vsan-validation>\n\n   <vsan-capacity-datastores-overview *ngIf=\"datastoresCapacityData?.size > 1\"\n                                      [datastoresCapacityData]=\"datastoresCapacityData\">\n   </vsan-capacity-datastores-overview>\n\n   <clr-tabs *ngIf=\"datastoresCapacityData?.size > 1\">\n      <clr-tab *ngFor=\"let datastoreType of datastoreTypes\">\n         <button id=\"{{'datastore-type-' + datastoreType}}\"\n                 clrTabLink\n                 (click)=\"selectDatastoreType(datastoreType)\">\n            {{getDatastoreTypeLabel(datastoreType)}}\n         </button>\n         <clr-tab-content *clrIfActive=\"datastoreType === selectedDatastoreType\">\n            <ng-container *ngTemplateOutlet=\"datastoreSections\"></ng-container>\n         </clr-tab-content>\n      </clr-tab>\n   </clr-tabs>\n\n   <ng-container *ngIf=\"datastoresCapacityData?.size === 1\">\n      <ng-container *ngTemplateOutlet=\"datastoreSections\"></ng-container>\n   </ng-container>\n\n   <ng-template #datastoreSections>\n      <div id=\"datastore-sections-container\">\n         <vsan-capacity-overview [capacityData]=\"capacityData\"\n                                 [upgradeData]=\"upgradeData\"\n                                 [configureReservationsPermission]=\"configureReservationsPermission\"\n                                 [isCustomizableThresholdsSupportedOnVc]=\"vcCapabilityData.isCapacityCustomizableThresholdsSupported\"\n                                 [clusterCapabilityData]=\"clusterCapabilityData\"\n                                 [isVsanMaxEnabled]=\"isVsanMaxEnabled\"\n                                 (onConfigureManagement)=\"editCapacityManagement()\">\n         </vsan-capacity-overview>\n\n         <vsan-capacity-analysis *ngIf=\"vcCapabilityData?.isWhatIfCapacitySupported &&\n                                     selectedDatastoreType === DatastoreType.VSAN\"\n                                 [capacityData]=\"capacityData\"\n                                 [isVsanMaxEnabled]=\"isVsanMaxEnabled\"\n                                 [vcCapabilityData]=\"vcCapabilityData\">\n         </vsan-capacity-analysis>\n\n         <vsan-capacity-breakdown [capacityData]=\"capacityData\"\n                                  [capabilityData]=\"clusterCapabilityData\"\n                                  [isVsanMaxEnabled]=\"isVsanMaxEnabled\">\n         </vsan-capacity-breakdown>\n      </div>\n   </ng-template>\n</ng-container>\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, HostBinding, Input, OnInit} from \"@angular/core\";\nimport {Logger} from \"@util/logger\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {GraphMetric} from \"@component/chart/performance/graph-metrics.data\";\nimport {PerfChartDataConstants} from \"@component/chart/performance/perf-chart-util\";\nimport {PerfQuerySpec} from \"@generated/perf-query-spec\";\nimport {VsanPerfPropertyProvider} from \"@generated/vsan-perf-property-provider\";\nimport {PerfEntityStateData} from \"@generated/perf-entity-state-data\";\nimport {PerfGraph} from \"@component/chart/performance/perf-graph\";\nimport {PerfChartUtil} from \"@component/chart/performance/perf-chart-util\";\nimport {UnavailableViewSpec} from \"@component/unavailable-view/unavailable-view-spec\";\nimport {ReducedCapacityMessagesService} from \"@generated/reduced-capacity-messages-service\";\nimport {CapacityHistoryBasicInfo} from \"@generated/capacity-history-basic-info\";\nimport {DateRangeData} from \"@component/datetime-picker/date-range-picker.component\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\nimport {ChartZoomOption} from \"@component/chart/performance/chart-zoom-option\";\n\n@Component({\n   templateUrl: \"capacity-history.html\",\n   selector: \"vsan-capacity-history\",\n   styleUrls: [\"capacity-history.scss\"],\n})\nexport class CapacityHistoryComponent implements OnInit {\n   private static readonly CAPACITY_ENTITY_TYPE: string = \"vsan-cluster-capacity\";\n\n   private serverObjRef: ManagedObject = ManagedObject.contextObject; // this could be cluster or datastore\n\n   chartsError: string;\n   basicInfoError: string;\n   loadingCharts: boolean = false;\n   loadingBasicInfo: boolean = false;\n   clusterRef: ManagedObject;\n   reducedCapacityMessages: string[];\n\n   private graphs: PerfGraph[];\n   hasEditPrivilege: boolean = false;\n   perfDisabledSpec: UnavailableViewSpec = null;\n   isEmptyCluster: boolean = false;\n   currentDateRange: DateRangeData;\n\n   zoomOption: ChartZoomOption;\n   isZoomed: boolean = false;\n\n   chartsData: GraphMetric[];\n\n   @Input()\n   isVisible: boolean;\n\n   @HostBinding(\"style.display\")\n   get display(): string {\n      return this.isVisible ? \"flex\" : \"none\";\n   }\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   constructor(private perfProvider: VsanPerfPropertyProvider,\n               private capacityMessagesService: ReducedCapacityMessagesService) {}\n\n   async ngOnInit(): Promise<void> {\n      await this.queryBasicInfo();\n   }\n\n   /**\n    * Query basic info when refreshing page or entering the capacity history view for the first time.\n    */\n   @RefreshHandler\n   async queryBasicInfo(): Promise<void> {\n      this.graphs = null;\n      this.hasEditPrivilege = false;\n      this.perfDisabledSpec = null;\n      this.basicInfoError = null;\n      this.chartsData = null;\n\n      this.loadingBasicInfo = true;\n      try {\n         let capacityHistoryBasicInfo: CapacityHistoryBasicInfo;\n         [this.reducedCapacityMessages, capacityHistoryBasicInfo] = await Promise.all([\n            this.capacityMessagesService.getReducedCapacityMessagesForHistory(this.serverObjRef),\n            this.perfProvider.getCapacityHistoryBasicInfo(this.serverObjRef),\n         ]);\n\n         this.loadingBasicInfo = false;\n\n         this.graphs = capacityHistoryBasicInfo.entityTypes[PerfChartDataConstants.HISTORICAL_SPACE_REPORT].graphs\n               .map(graph => PerfChartUtil.getGraphDefinition(graph));\n         this.clusterRef = capacityHistoryBasicInfo.clusterRef;\n         this.isEmptyCluster = capacityHistoryBasicInfo.isEmptyCluster;\n         this.hasEditPrivilege = capacityHistoryBasicInfo.hasEditPolicyPermission;\n\n         if (!capacityHistoryBasicInfo.isPerformanceServiceEnabled) {\n            this.perfDisabledSpec = UnavailableViewSpec.PERF_DISABLED_ON_CAPACITY_VIEW;\n         }\n\n         if (this.isVisible) {\n            this.srOnlyMessage = VsanUiUtils.getString(\"vsan.screenReader.message.page.loaded.andTabSelected\",\n                  VsanUiUtils.getString(\"vsan.monitor.capacity\"),\n                  VsanUiUtils.getString(\"vsan.monitor.capacity.views.capacity.history\"));\n         }\n      } catch (error) {\n         this.loadingBasicInfo = false;\n         this.basicInfoError = VsanUiUtils.getString(\"vsan.monitor.capacity.history.query.basic.info.error\");\n         Logger.error(\"Unable to query basic info for capacity history. \" + error);\n      }\n   }\n\n   updateChartsData(dateRange?: DateRangeData): void {\n      if (this.isEmptyCluster) {\n         return;\n      }\n      this.chartsData = null;\n      this.chartsError = null;\n      this.loadingCharts = true;\n      if (dateRange) {\n         this.currentDateRange = dateRange;\n      }\n      const querySpecs: PerfQuerySpec[] = this.createPerfQuerySpec(this.currentDateRange);\n      // Performance collect interval is 1 minute, when the search time range is greater than one day,\n      // we need to filter some chart points for good visual effects,\n      // and in the case of small data do not need to perform this operation.\n      const filterChartPoints: boolean =\n            (Math.ceil((this.currentDateRange.to - this.currentDateRange.from) /\n                  VsanDateTimeUtils.DAY_IN_MILLISECONDS)) > 1;\n      this.perfProvider.getHistoricalSpaceReport(this.serverObjRef, querySpecs, filterChartPoints)\n            .then((chartsData: PerfEntityStateData) => {\n               this.loadingCharts = false;\n               // we only pass one entityRefId so the chartsData should has only one element.\n               this.chartsData = chartsData ? [new GraphMetric(chartsData, this.graphs)] : null;\n            }).catch(error => {\n               this.loadingCharts = false;\n               this.chartsError = VsanUiUtils.getString(\n                     \"vsan.monitor.capacity.history.query.properties.error\", error);\n               Logger.error(\"Unable to query data for historical space report. \" + error);\n            });\n   }\n\n   private createPerfQuerySpec = (timeRange: DateRangeData): PerfQuerySpec[] => {\n      const querySpecs: PerfQuerySpec[] = [];\n      const dateRanges: DateRangeData[] = this.generateDateRanges(timeRange);\n      dateRanges.map(range => {\n         querySpecs.push(PerfQuerySpec.Factory.create(\n               CapacityHistoryComponent.CAPACITY_ENTITY_TYPE, null, null, range.from, range.to, null, null));\n      });\n      return querySpecs;\n   };\n\n   /**\n    * Generate a collection of date ranges based on the selected time range, one day for each item,\n    * because the maximum length of perf chart query is 24 hours.\n    * Example:\n    *   A collection of three days beginning at 12:26:00, February 26, 2018\n    *   [ Feb 26 2018 12:26:00 - Feb 27 2018 12:26:00,\n    *     Feb 27 2018 12:26:00 - Feb 28 2018 12:26:00 ]\n    */\n   private generateDateRanges = (timeRange: DateRangeData): DateRangeData[] => {\n      // The number of days in the selected time range.\n      const days: number = Math.ceil((timeRange.to - timeRange.from) / VsanDateTimeUtils.DAY_IN_MILLISECONDS);\n      const dateRanges: DateRangeData[] = [];\n      for (let d: number = 1; d <= days; d++) {\n         const startTime: number = (d === 1) ? timeRange.from :\n               timeRange.from + (d - 1) * VsanDateTimeUtils.DAY_IN_MILLISECONDS;\n         const endTime: number = (d === days) ? timeRange.to : startTime + VsanDateTimeUtils.DAY_IN_MILLISECONDS;\n         dateRanges.push(new DateRangeData(startTime, endTime));\n      }\n      return dateRanges;\n   };\n\n   /**\n    * Reset the chart zoom level to default\n    */\n   onZoomOut(): void {\n      this.isZoomed = false;\n      const zoomOut: ChartZoomOption = new ChartZoomOption();\n      zoomOut.isZoomOut = true;\n      this.zoomOption = zoomOut;\n   }\n\n   /**\n    * Accepts the chart zoom options when user selects a range on the chart\n    */\n   onChartZoomIn(opt: ChartZoomOption): void {\n      this.isZoomed = !opt.isZoomOut;\n      this.zoomOption = opt;\n   }\n}\n","<!--Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<clr-tree>\n   <clr-tree-node>\n      <div id=\"capacity-color-user-objects\"></div>\n      <span>{{getTotalCapacityLabel(userObjectsCapacity.totalUserObjectsUsage,\n               'vsan.monitor.capacity.usage.breakdown.category.user.objects')}}</span>\n      <ng-template [(clrIfExpanded)]=\"isExpanded\">\n         <div [ngClass]=\"{'capacity-breakdown-expanded': isDrilldown}\">\n            <!-- First class disks usage -->\n            <div id=\"fcd-capacity-breakdown\"\n                 *ngIf=\"userObjectsCapacity.blockContainerVolumes > 0\n                     || userObjectsCapacity.otherFcd > 0\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.user.objects.fcd\"|localized}}</div>\n               <div>\n                  {{getFormattedCapacity(userObjectsCapacity.blockContainerVolumes\n                        + userObjectsCapacity.otherFcd,\n                        userObjectsCapacity.totalUserObjectsUsage)}}\n               </div>\n            </div>\n            <div id=\"fcd-block-capacity\"\n                 *ngIf=\"userObjectsCapacity.blockContainerVolumes\"\n                 class=\"nested-breakdown-capacity breakdown-item\">\n               <span>{{\"vsan.monitor.capacity.usage.breakdown.category.user.objects.fcd.block\"|localized}}</span>\n               <span>{{userObjectsCapacity.blockContainerVolumes|fileSize}}</span>\n            </div>\n            <div id=\"fcd-other-capacity\"\n                 *ngIf=\"userObjectsCapacity.otherFcd\"\n                 class=\"nested-breakdown-capacity breakdown-item\">\n               <span>\n                  {{\"vsan.monitor.capacity.usage.breakdown.category.user.objects.fcd.other\"|localized}}\n               </span>\n               <span>{{userObjectsCapacity.otherFcd|fileSize}}</span>\n            </div>\n            <!-- File shares usage -->\n            <div id=\"file-shares-capacity-breakdown\"\n                 *ngIf=\"userObjectsCapacity.fileContainerVolumes > 0\n                       || userObjectsCapacity.nativeFileShares > 0\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>\n                  {{\"vsan.monitor.capacity.usage.breakdown.category.user.objects.file.shares\"|localized}}\n               </div>\n               <div>\n                  {{getFormattedCapacity(userObjectsCapacity.fileContainerVolumes\n                        + userObjectsCapacity.nativeFileShares,\n                        userObjectsCapacity.totalUserObjectsUsage)}}\n               </div>\n            </div>\n            <div id=\"file-container-detached-capacity\"\n                 *ngIf=\"userObjectsCapacity.fileContainerVolumes\"\n                 class=\"nested-breakdown-capacity breakdown-item\">\n               <span>\n                  {{\"vsan.monitor.capacity.usage.breakdown.category.user.objects.file.shares.container\"|localized}}\n               </span>\n               <span>{{userObjectsCapacity.fileContainerVolumes|fileSize}}</span>\n            </div>\n            <div id=\"native-fcd-capacity\"\n                 *ngIf=\"userObjectsCapacity.nativeFileShares\"\n                 class=\"nested-breakdown-capacity breakdown-item\">\n               <span>\n                  {{\"vsan.monitor.capacity.usage.breakdown.category.user.objects.file.shares.native\"|localized}}\n               </span>\n               <span>{{userObjectsCapacity.nativeFileShares|fileSize}}</span>\n            </div>\n            <!-- iSCSI capacity -->\n            <div id=\"iscsi-capacity\"\n                 *ngIf=\"userObjectsCapacity.iSCSI\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.user.objects.iscsi\"|localized}}</div>\n               <div>\n                  {{getFormattedCapacity(userObjectsCapacity.iSCSI, userObjectsCapacity.totalUserObjectsUsage)}}\n               </div>\n            </div>\n            <!-- VR target usage -->\n            <div id=\"vr-target-capacity-breakdown\"\n                 *ngIf=\"userObjectsCapacity.vrTargetConfigsUsage || userObjectsCapacity.vrTargetDisksUsage\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.user.vr.target\"|localized}}</div>\n               <div>\n                  {{getFormattedCapacity(userObjectsCapacity.vrTargetConfigsUsage\n                     + userObjectsCapacity.vrTargetDisksUsage,\n                     userObjectsCapacity.totalUserObjectsUsage)}}\n               </div>\n            </div>\n            <div id=\"vr-target-disks-capacity\"\n                 *ngIf=\"userObjectsCapacity.vrTargetDisksUsage\"\n                 class=\"nested-breakdown-capacity breakdown-item\">\n               <span>{{\"vsan.monitor.capacity.usage.breakdown.category.user.vr.target.disks\"|localized}}</span>\n               <span>{{userObjectsCapacity.vrTargetDisksUsage|fileSize}}</span>\n            </div>\n            <div id=\"vr-target-configs-capacity\"\n                 *ngIf=\"userObjectsCapacity.vrTargetConfigsUsage\"\n                 class=\"nested-breakdown-capacity breakdown-item\">\n               <span>{{\"vsan.monitor.capacity.usage.breakdown.category.user.vr.target.configs\"|localized}}</span>\n               <span>{{userObjectsCapacity.vrTargetConfigsUsage|fileSize}}</span>\n            </div>\n            <!-- Other objects -->\n            <div id=\"other-capacity\"\n                 *ngIf=\"userObjectsCapacity.other\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>{{\"vsan.monitor.capacity.usage.breakdown.category.user.objects.other\"|localized}}</div>\n               <div>\n                  {{getFormattedCapacity(userObjectsCapacity.other, userObjectsCapacity.totalUserObjectsUsage)}}\n               </div>\n            </div>\n            <div id=\"extension-{{i + 1}}-capacity\"\n                 *ngFor=\"let extension of userObjectsCapacity.extensions | keyvalue; let i = index;\"\n                 class=\"breakdown-category breakdown-item\">\n               <div vsan-show-title>{{extension.key}}</div>\n               <div>\n                  {{getFormattedCapacity(extension.value, userObjectsCapacity.totalUserObjectsUsage)}}\n               </div>\n            </div>\n         </div>\n      </ng-template>\n   </clr-tree-node>\n</clr-tree>","/* Copyright 2018-2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Injectable} from \"@angular/core\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {PbmDataProvider} from \"@generated/pbm-data-provider\";\nimport {StoragePolicyData} from \"@generated/storage-policy-data\";\nimport {CapacityDataService} from \"@generated/capacity-data-service\";\nimport {WhatifCapacityData} from \"@generated/whatif-capacity-data\";\n\n@Injectable()\nexport class VsanCapacityAnalysisService {\n\n   /**\n    * Threshold percentage value to display a warning status in the capacity monitoring UI.\n    * TODO: Get value via server API call. Won't be part of 6.5 U2 release.\n    */\n   capacityUsageWarningThreshold: number = 70;\n\n   /**\n    * Threshold percentage value to display an error status in the capacity monitoring UI.\n    * TODO: Get value via server API call. Won't be part of 6.5 U2 release.\n    */\n   capacityUsageErrorThreshold: number = 90;\n\n   constructor(private capacityProvider: CapacityDataService,\n         private pbmProvider: PbmDataProvider) {}\n\n   getAvailablePolicies(contextObject: ManagedObject): Promise<StoragePolicyData[]> {\n      return this.pbmProvider.getObjectCompatibleStoragePolicies(contextObject);\n   }\n\n   getWhatIfCapacity(contextObject: ManagedObject, profileId: string): Promise<WhatifCapacityData> {\n      return this.capacityProvider.getWhatIfCapacity(contextObject, profileId);\n   }\n}","<!--Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<!-- busy indicator -->\n<span class=\"busy-backdrop\" *ngIf=\"loadingBasicInfo\">\n   <span class=\"spinner spinner-lg central-spinner\"></span>\n</span>\n\n<vsan-validation id=\"reduced-available-capacity\"\n                 *ngIf=\"reducedCapacityMessages?.length\"\n                 [allowClose]=\"false\"\n                 alertType=\"info\"\n                 [(alerts)]=\"reducedCapacityMessages\">\n</vsan-validation>\n\n<!-- Error fetching the view data -->\n<vsan-validation id=\"basic-info-error\"\n                 *ngIf=\"basicInfoError\"\n                 [alert]=\"basicInfoError\"\n                 [allowReload]=\"true\"\n                 [allowClose]=\"false\"\n                 (onReload)=\"queryBasicInfo()\">\n</vsan-validation>\n\n<!-- Loading the basic data is done, show the view -->\n<ng-container *ngIf=\"!loadingBasicInfo && !basicInfoError\">\n   <vsan-unavailable-view *ngIf=\"perfDisabledSpec\"\n                          [unavailableViewSpec]=\"perfDisabledSpec\"\n                          [hasEditPrivilege]=\"hasEditPrivilege\"\n                          [clusterRef]=\"clusterRef\"\n                          [ensureMasterNodeElected]=\"true\">\n   </vsan-unavailable-view>\n\n   <!-- Not disabled and not an empty cluster, show capacity history -->\n   <ng-container *ngIf=\"!perfDisabledSpec && !isEmptyCluster\">\n      <h5 id=\"capacity-history-summary\">\n         {{\"vsan.monitor.capacity.history.summary\" | localized}}\n      </h5>\n      <div class=\"actions-container\">\n         <vsan-date-range-picker id=\"capacity-history-date-picker\"\n                                 [enabled]=\"!loadingCharts\"\n                                 (changeRange)=\"updateChartsData($event)\">\n         </vsan-date-range-picker>\n         <button *ngIf=\"isZoomed\"\n                 (click)=\"onZoomOut()\"\n                 class=\"btn btn-sm btn-link\">\n            {{\"vsan.perf.chart.zoom\" | localized}}\n         </button>\n      </div>\n      <div *ngIf=\"loadingCharts\" class=\"spinner central-spinner\"></div>\n      <ng-container *ngIf=\"!loadingCharts\">\n         <vsan-validation id=\"charts-error\"\n                          *ngIf=\"chartsError\"\n                          [alert]=\"chartsError\"\n                          [allowReload]=\"true\"\n                          [allowClose]=\"false\"\n                          (onReload)=\"updateChartsData()\">\n         </vsan-validation>\n         <vsan-perf-charts-container\n               id=\"historical-capacity-charts\"\n               [data]=\"chartsData\"\n               [currentTimeRange]=\"currentDateRange\"\n               [isShowAllLinkVisible]=\"false\"\n               [isZoomButtonVisible]=\"false\"\n               [isEmptyChartsVisible]=\"!chartsError\"\n               [zoomOutOptions]=\"zoomOption\"\n               (zoom)=\"onChartZoomIn($event)\">\n         </vsan-perf-charts-container>\n      </ng-container>\n   </ng-container>\n</ng-container>\n","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {ChartSectionData} from \"@component/chart/model/chart-section.data\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {BREAKDOWN_SECTIONS, VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {CapacityBreakdownPerspective} from \"./capacity-breakdown.component\";\n\n@Component({\n   templateUrl: \"capacity-breakdown-pie-chart.html\",\n   styleUrls: [\"capacity-breakdown-pie-chart.scss\"],\n   selector: \"vsan-capacity-breakdown-pie-chart\",\n})\nexport class CapacityBreakdownPieChartComponent implements OnInit {\n   breakdownTotalLabel: string;\n   summaryCapacityData: ChartSectionData[];\n   breakdownCapacityData: ChartSectionData[];\n\n   private vmBreakdownCapacityData: ChartSectionData[];\n   private userBreakdownCapacityData: ChartSectionData[];\n   private systemBreakdownCapacityData: ChartSectionData[];\n   private snapshotsBreakdownCapacityData: ChartSectionData[];\n\n   /**\n    * Used to control drill down state from parent component\n    */\n   @Input()\n   isDrillDown: boolean;\n\n   @Input()\n   capacityBreakdownPerspective: CapacityBreakdownPerspective;\n\n   @Input()\n   capacityData: CapacityData;\n\n   @Output()\n   drillDownCategoryChange: EventEmitter<CapacityDrillDownType> = new EventEmitter();\n\n   @Output()\n   isDrillDownChange: EventEmitter<boolean> = new EventEmitter();\n\n   constructor(private capacityService: VsanCapacityService,\n         private changeDetector: ChangeDetectorRef) {\n   }\n\n   ngOnInit(): void {\n      this.summaryCapacityData = this.capacityBreakdownPerspective === CapacityBreakdownPerspective.CATEGORIES\n            ? this.capacityService.parseSummarySectionsData(this.capacityData)\n            : this.capacityService.parseSnapshotsSummarySectionsData(this.capacityData);\n\n      this.drillOut();\n   }\n\n   drillDown(index: BREAKDOWN_SECTIONS) {\n      if (index == BREAKDOWN_SECTIONS.VM_CAPACITY) {\n         this.vmBreakdownCapacityData = this.getDrillDownData(this.vmBreakdownCapacityData,\n               BREAKDOWN_SECTIONS.VM_CAPACITY,\n               \"vsan.monitor.capacity.usage.breakdown.category.vm.pie.label\");\n      } else if (index == BREAKDOWN_SECTIONS.USER_OBJECTS) {\n         this.userBreakdownCapacityData = this.getDrillDownData(this.userBreakdownCapacityData,\n               BREAKDOWN_SECTIONS.USER_OBJECTS,\n               \"vsan.monitor.capacity.usage.breakdown.category.user.pie.label\");\n      } else if (index == BREAKDOWN_SECTIONS.SYSTEM_OBJECTS) {\n         this.systemBreakdownCapacityData = this.getDrillDownData(this.systemBreakdownCapacityData,\n               BREAKDOWN_SECTIONS.SYSTEM_OBJECTS,\n               \"vsan.monitor.capacity.usage.breakdown.category.system.pie.label\");\n      } else if (index == BREAKDOWN_SECTIONS.SYSTEM_OBJECTS) {\n         this.systemBreakdownCapacityData = this.getDrillDownData(this.systemBreakdownCapacityData,\n               BREAKDOWN_SECTIONS.SYSTEM_OBJECTS,\n               \"vsan.monitor.capacity.usage.breakdown.category.system.pie.label\");\n      } else if (index == BREAKDOWN_SECTIONS.SNAPSHOTS_USAGE) {\n         this.snapshotsBreakdownCapacityData = this.getDrillDownData(this.snapshotsBreakdownCapacityData,\n               BREAKDOWN_SECTIONS.SNAPSHOTS_USAGE,\n               \"vsan.monitor.capacity.usage.breakdown.category.snapshots.pie.label\");\n      }\n      // This is needed for automation to work. They are passing a mouse click event, which triggers this method\n      // but angular doesn't update the view as there is nothing happening to its knowing.\n      // Forcing the page to redraw with detect changes.\n      this.changeDetector.detectChanges();\n   }\n\n   private getDrillDownData(data: ChartSectionData[], section: BREAKDOWN_SECTIONS,\n         labelKey: string): ChartSectionData[] {\n      if (data) {\n         // Skip breakdown of the capacity if we already have it.\n         this.breakdownCapacityData = data;\n      } else {\n         this.breakdownCapacityData = this.capacityService.parseBreakdownSectionsData(this.capacityData, section);\n      }\n      this.breakdownTotalLabel = VsanUiUtils.getString(labelKey);\n      this.isDrillDown = true;\n      this.emitDrillDownChange(section);\n      return this.breakdownCapacityData;\n   }\n\n   private emitDrillDownChange(section: BREAKDOWN_SECTIONS) {\n      this.isDrillDownChange.emit(this.isDrillDown);\n\n      switch(section) {\n         case BREAKDOWN_SECTIONS.VM_CAPACITY:\n            this.drillDownCategoryChange.emit(CapacityDrillDownType.VM);\n            break;\n         case BREAKDOWN_SECTIONS.USER_OBJECTS:\n            this.drillDownCategoryChange.emit(CapacityDrillDownType.USER_OBJECTS);\n            break;\n         case BREAKDOWN_SECTIONS.SYSTEM_OBJECTS:\n            this.drillDownCategoryChange.emit(CapacityDrillDownType.SYSTEM_OBJECTS);\n            break;\n         case BREAKDOWN_SECTIONS.SNAPSHOTS_USAGE:\n            this.drillDownCategoryChange.emit(CapacityDrillDownType.SNAPSHOTS);\n      }\n   }\n\n   drillOut() {\n      // clear the breakdown data for pie chart in order to show the summary pie chart\n      this.breakdownCapacityData = null;\n      this.isDrillDown = false;\n      this.isDrillDownChange.emit(this.isDrillDown);\n      this.drillDownCategoryChange.emit(CapacityDrillDownType.NONE);\n   }\n}\n\nexport enum CapacityDrillDownType {\n   NONE,\n   VM,\n   USER_OBJECTS,\n   SYSTEM_OBJECTS,\n   SNAPSHOTS,\n}\n","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nexport class VsanSignpostUtil {\n   // The signpost's arrow is 12px in Clarity 2.2.0\n   private static readonly ARROW_SIZE: number = 12;\n   // The modal left or right padding is 24px.\n   private static readonly MODAL_HORIZONTAL_PADDING: number = 24;\n   // The modal top padding and title height or the bottom padding and footer height is 72px.\n   private static readonly MODAL_VERTICAL_PADDING: number = 72;\n\n   private static readonly TOP: string = \"top\";\n   private static readonly LEFT: string = \"left\";\n   private static readonly RIGHT: string = \"right\";\n   private static readonly BOTTOM: string = \"bottom\";\n   private static readonly MIDDLE: string = \"middle\";\n\n   static getPosition(elementId: string, signpostWidth: number, signpostHeight: number,\n         isInModal: boolean = false): string {\n      const elementBox: DOMRect = document.getElementById(elementId).getBoundingClientRect();\n      const modalVerticalPadding: number = isInModal\n            ? VsanSignpostUtil.MODAL_VERTICAL_PADDING\n            : 0;\n      const verticalPosition: string = VsanSignpostUtil.getVerticalPosition(\n            elementBox, signpostHeight + VsanSignpostUtil.ARROW_SIZE + modalVerticalPadding);\n      const modalHorizontalPadding: number = isInModal\n            ? VsanSignpostUtil.MODAL_HORIZONTAL_PADDING\n            : 0;\n      const horizontalPosition: string = VsanSignpostUtil.getHorizontalPosition(\n            elementBox, signpostWidth + VsanSignpostUtil.ARROW_SIZE + modalHorizontalPadding);\n      return `${verticalPosition}-${horizontalPosition}`;\n   }\n\n   private static getVerticalPosition(elementBox: ClientRect, elementHeight: number): string {\n      const bodyBox: DOMRect = document.body.getBoundingClientRect();\n      if (elementBox.bottom + elementHeight < bodyBox.height) {\n         // There is enough space to fit the signpost below the trigger\n         return VsanSignpostUtil.BOTTOM;\n      } else if (elementBox.top - elementHeight > 0) {\n         return VsanSignpostUtil.TOP;\n      } else {\n         return VsanSignpostUtil.MIDDLE;\n      }\n   }\n\n   private static getHorizontalPosition(elementBox: ClientRect, elementWidth: number): string {\n      const bodyBox: DOMRect = document.body.getBoundingClientRect();\n      if (elementBox.right + elementWidth < bodyBox.width) {\n         // There is enough space to fit the signpost on the right side of the view\n         return VsanSignpostUtil.RIGHT;\n      } else if (elementBox.left - elementWidth > 0) {\n         return VsanSignpostUtil.LEFT;\n      } else {\n         return VsanSignpostUtil.MIDDLE;\n      }\n   }\n}","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input} from \"@angular/core\";\nimport {CapacityData} from \"@generated/capacity-data\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {VsanCapabilityData} from \"@generated/vsan-capability-data\";\nimport {SpaceEfficiencyService} from \"@service/space-efficiency-service\";\n\n@Component({\n   templateUrl: \"capacity-breakdown.html\",\n   styleUrls: [\"capacity-breakdown.scss\"],\n   selector: \"vsan-capacity-breakdown\"\n})\nexport class CapacityBreakdownComponent {\n   isCnsConfigured: boolean;\n   isFileServicesConfigured: boolean;\n\n   CapacityBreakdownPerspective: typeof CapacityBreakdownPerspective = CapacityBreakdownPerspective;\n   currentBreakdownPerspective: CapacityBreakdownPerspective = CapacityBreakdownPerspective.CATEGORIES;\n\n   private _capacityData: CapacityData;\n\n   @Input()\n   set capacityData(capacityData: CapacityData) {\n      this._capacityData = capacityData;\n      this.checkCnsConfigured();\n   }\n\n   get capacityData(): CapacityData {\n      return this._capacityData;\n   }\n\n   @Input()\n   capabilityData: VsanCapabilityData;\n\n   @Input()\n   isVsanMaxEnabled: boolean;\n\n   constructor(private navigationService: NavigationService,\n         private spaceEfficiencyService: SpaceEfficiencyService) {}\n\n   navigateToCns() {\n      this.navigationService.navigateTo(PlatformExtension.CLUSTER_CNS_VOLUMES)\n   }\n\n   navigateToFileServices() {\n      this.navigationService.navigateTo(PlatformExtension.FILE_SERVICE_SHARES);\n   }\n\n   /**\n    * The totalUsedSpace we used to calculate the usage percentage should be different according to the space efficiency status\n    * if space efficiency is on, we should use the value from VsanVcDiskManagementSystem.QueryClusterDataEfficiencyCapacityState\n    * (NOTE: space efficiency is not included and should be added)\n    */\n   get totalUsedSpace(): number {\n      if (!this.capacityData) {\n         return 0;\n      }\n\n      if (this.capacityData.spaceEfficiencyCapacity) {\n         return this.spaceEfficiencyService.capacityTotalUsedSpace(\n               this.capacityData.spaceEfficiencyCapacity, this.capacityData.systemUsageCapacity);\n      }\n\n      return this.capacityData.usedSpace;\n   }\n\n   get breakdownTitle(): string {\n      if (!this.capacityData || !this.capacityData.spaceEfficiencyCapacity) {\n         return VsanUiUtils.getString(\"vsan.monitor.capacity.usage.breakdown.title\");\n      }\n\n      return this.spaceEfficiencyService.capacityBreakdownLabel(\n            this.capacityData.spaceEfficiencyCapacity.spaceEfficiencyConfig);\n   }\n\n   private checkCnsConfigured(): void {\n      // Check if any CNS or FileServices are configured, based on which a link to these views is displayed\n      if (this._capacityData) {\n         this.isFileServicesConfigured = this._capacityData.userObjectsCapacity\n               && (this._capacityData.userObjectsCapacity.fileContainerVolumes > 0\n                     || this._capacityData.userObjectsCapacity.nativeFileShares > 0);\n         this.isCnsConfigured = (this._capacityData.vmCapacity\n               && this._capacityData.vmCapacity.blockContainerPrimaryDataUsage > 0)\n               || this._capacityData.userObjectsCapacity\n               && (this._capacityData.userObjectsCapacity.blockContainerVolumes > 0\n                     || this._capacityData.userObjectsCapacity.fileContainerVolumes > 0);\n      } else {\n         this.isCnsConfigured = false;\n         this.isFileServicesConfigured = false;\n      }\n   }\n}\n\nexport enum CapacityBreakdownPerspective {\n   CATEGORIES,\n   SNAPSHOTS,\n}\n","/* Copyright 2018-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectionStrategy, Component, Input} from \"@angular/core\";\nimport {SystemUsageCapacityData} from \"@generated/system-usage-capacity-data\";\nimport {CapacityBreakdownItemComponent} from \"./capacity-breakdown-item.component\";\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\nimport {SpaceEfficiencyConfig} from \"@generated/space-efficiency-config\";\nimport {SpaceEfficiencyService} from \"@service/space-efficiency-service\";\n\n@Component({\n   templateUrl: \"system-capacity-breakdown.html\",\n   styleUrls: [\"system-capacity-breakdown.scss\"],\n   selector: \"vsan-system-capacity-breakdown\",\n   changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SystemCapacityBreakdownComponent extends CapacityBreakdownItemComponent {\n\n   constructor(capacityService: VsanCapacityService, private spaceEfficiencyService: SpaceEfficiencyService) {\n      super(capacityService);\n   }\n\n   /**\n    * The breakdown data for the system capacity usage.\n    */\n   @Input()\n   systemUsageCapacity: SystemUsageCapacityData;\n\n   @Input()\n   spaceEfficiency: SpaceEfficiencyConfig;\n\n   get spaceEfficiencyOverheadLabel(): string {\n      return this.spaceEfficiencyService.capacitySpaceOverheadLabel(this.spaceEfficiency);\n   }\n}","/* Copyright 2018-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport { Input, Output, EventEmitter, Directive } from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\"\nimport {VsanCapacityService} from \"@component/capacity/capacity.service\";\n\n/**\n * Common class for breakdown sections in Cluster capacity monitoring.\n * Using Directive, instead of Component as there is no template, only behaviour here.\n * The child component define their templates, but extend the common mechanisms for determining expanded state as\n * well as drill down functionality.\n */\n@Directive()\nexport class CapacityBreakdownItemComponent {\n\n   /**\n    * Whether the breakdown tree view group is expanded or collapsed.\n    */\n   private _isExpanded: boolean;\n\n   @Input()\n   set isExpanded(val: boolean) {\n      this._isExpanded = val;\n      this.isExpandedChange.emit(this._isExpanded);\n   }\n\n   get isExpanded(): boolean {\n      return this._isExpanded;\n   }\n\n   /**\n    * Triggered when new datetime is picked by the user\n    */\n   @Output()\n   isExpandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n   /**\n    * Whether the current category is in drill down from the pie chart in the parent component.\n    * If so, we add a colored border to indicate this is currently in selected in the pie chart.\n    */\n   @Input()\n   isDrilldown: boolean;\n\n   /**\n    * The total capacity on the vSAN cluster in order to be able to show percentages.\n    */\n   @Input()\n   totalSpace: number;\n\n   constructor(protected capacityService: VsanCapacityService) {}\n\n   getTotalCapacityLabel(capacity: number, labelKey: string): string {\n      return VsanUiUtils.getString(labelKey) + \" \" + this.getFormattedCapacity(capacity, this.totalSpace);\n   }\n\n   getFormattedCapacity(value: number, total: number): string {\n      return this.capacityService.getFormattedCapacity(value, total);\n   }\n}"]}