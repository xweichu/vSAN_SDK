{"version":3,"sources":["./src/app/vsan/common/component/datagrid/comparator/pipe-comparator.ts","./src/app/vsan/file-analytics/file-dashboard/file-dashboard.component.ts","./src/app/generated/file-analytics-date-group-by.ts","./src/app/generated/file-analytics-age-distribution.ts","./src/app/vsan/file-analytics/file-dashboard/file-analytics-files-count.html","./src/app/vsan/common/component/chart/column-line-chart/column-line-chart.data.ts","./src/app/vsan/file-analytics/component/file-analytics-last-scan.component.ts","./src/app/vsan/common/component/chart/clarity-chart-colors.ts","./src/app/vsan/file-analytics/file-analytics-chart.service.ts","./src/app/vsan/common/component/chart/histogram-chart/histogram-column-chart.data.ts","./src/app/vsan/file-analytics/file-dashboard/file-analytics-files-by-size.component.ts","./src/app/vsan/common/component/datagrid/comparator/numeric-comparator.ts","./src/app/vsan/common/component/datagrid/comparator/base-comparator.ts","./src/app/vsan/file-analytics/file-dashboard/file-dashboard.html","./src/app/vsan/file-analytics/file-dashboard/file-analytics-files-by-age.html","./src/app/vsan/file-analytics/component/file-analytics-last-scan.html","./src/app/generated/file-analytics-size-distribution.ts","./src/app/vsan/common/component/chart/histogram-chart/histogram-column-chart.component.ts","./src/app/vsan/common/component/datagrid/filter/object-filter.ts","./src/app/vsan/file-analytics/file-dashboard/file-dashboard.module.ts","./src/app/vsan/common/component/chart/histogram-chart/histogram-column-chart.html","./src/app/vsan/common/component/datagrid/filter/base-filter.ts","./src/app/vsan/file-analytics/file-dashboard/file-analytics-files-by-size.html","./src/app/vsan/file-analytics/file-dashboard/file-analytics-files-by-age.component.ts","./src/app/vsan/file-analytics/file-dashboard/file-analytics-files-count.component.ts"],"names":[],"mappings":"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","file":"71-es2015.js","sourcesContent":["/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {PipeTransform} from \"@angular/core\";\nimport {BaseComparator} from \"@component/datagrid/comparator/base-comparator\";\n\n/**\n * Extends BaseComparator by allowing the consumer to provide a pipe that will be used in the filtering process.\n */\nexport class PipeComparator<T> extends BaseComparator<T> {\n\n   constructor(private pipe: PipeTransform, private dataField: string = null) {\n      super();\n   }\n\n   protected compareValue(a: T, b: T): number {\n      return this.pipe.transform(this.stringify(a, this.dataField)).toLowerCase()\n            .localeCompare(this.pipe.transform(this.stringify(b, this.dataField)).toLowerCase());\n   }\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {\n   AfterViewInit,\n   ChangeDetectorRef,\n   Component,\n   Input,\n   QueryList,\n   ViewChildren} from \"@angular/core\";\nimport {DraggableCardDirective} from \"@component/drag-and-drop/draggable-card.directive\";\nimport {CardName, CardView} from \"@component/drag-and-drop/card-view\";\nimport {CardContainer, DragCardPosition} from \"@component/drag-and-drop/drag-card-position\";\nimport {VsanFileServiceShare} from \"@generated/vsan-file-service-share\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {IllustratedMessageType} from \"@component/illustrated-message/illustrated-message.component\";\n\n@Component({\n   templateUrl: \"file-dashboard.html\",\n   styleUrls: [\"file-dashboard.scss\"],\n   selector: \"vsan-file-dashboard\",\n})\nexport class FileDashboardComponent implements AfterViewInit {\n   // File analytics \"File dashboard\" cards\n   readonly FILE_ANALYTICS_FILES_BY_AGE: string = \"fileAnalyticsFilesByAge\";\n   readonly FILE_ANALYTICS_FILES_COUNT: string = \"fileAnalyticsFilesCount\";\n   readonly FILE_ANALYTICS_FILES_BY_SIZE: string = \"fileAnalyticsFilesBySize\";\n   IllustratedMessageType: typeof IllustratedMessageType = IllustratedMessageType;\n\n   @Input()\n   fileShares: VsanFileServiceShare[];\n\n   // The service cards are defined inside templates, so they can be dragged\n   @ViewChildren(DraggableCardDirective)\n   fileDashboardTemplates: QueryList<DraggableCardDirective>;\n\n   cardView: CardView;\n\n   clusterRef: ManagedObject = ManagedObject.contextObject;\n\n   constructor(private cdRef: ChangeDetectorRef) {}\n\n   ngAfterViewInit(): void {\n      this.cardView = new CardView(CardName.FILE_DASHBOARD_ANALYTICS, this.getFileDashboardCards);\n      // For some reason the templates cannot be displayed without this manual change detection.\n      this.cdRef.detectChanges();\n   }\n\n   private getFileDashboardCards = (): Map<string, DragCardPosition> => {\n      const result: Map<string, DragCardPosition> = new Map<string, DragCardPosition>();\n      result.set(this.FILE_ANALYTICS_FILES_BY_AGE, new DragCardPosition(CardContainer.LEFT, 0));\n      result.set(this.FILE_ANALYTICS_FILES_COUNT, new DragCardPosition(CardContainer.LEFT, 1));\n      result.set(this.FILE_ANALYTICS_FILES_BY_SIZE, new DragCardPosition(CardContainer.RIGHT, 0));\n      return result;\n   };\n}\n","export enum FileAnalyticsDateGroupBy {\n   CREATED_DATE = \"created_date\",\n   ACCESSED_DATE = \"last_accessed_date\",\n   MODIFIED_DATE = \"last_modified_date\",\n}\n","export enum FileAnalyticsAgeDistribution {\n   less_than_one_month = \"less_than_one_month\",\n   one_month_to_three_months = \"one_month_to_three_months\",\n   three_months_to_six_months = \"three_months_to_six_months\",\n   six_months_to_one_year = \"six_months_to_one_year\",\n   more_than_one_year = \"more_than_one_year\",\n}\n","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"card\">\n   <div class=\"card-header cdk-drag-handle\" cdkDragHandle>\n      <span class=\"card-title\" vsan-show-title>\n         {{\"vsan.cluster.monitor.file.analytics.files.count\" | localized}}\n      </span>\n   </div>\n   <div class=\"card-block\">\n      <span id=\"loading-chart\" *ngIf=\"loading\" class=\"spinner spinner-md central-spinner\"></span>\n      <vsan-validation *ngIf=\"errorMessage\" [alert]=\"errorMessage\"></vsan-validation>\n      <ng-container *ngIf=\"!loading && !errorMessage\">\n         <vsan-illustrated-message\n               *ngIf=\"!chartData?.length\"\n               [type]=\"IllustratedMessageType.FILTER_NO_RESULT\"\n               [message]=\"'vsan.cluster.monitor.file.analytics.report.no.data.label' | localized\">\n         </vsan-illustrated-message>\n         <vsan-pie-chart *ngIf=\"chartData?.length\"\n                         [sections]=\"chartData\"\n                         [showTotal]=\"true\"\n                         [chartSize]=\"300\"\n                         [totalLabel]=\"'vsan.cluster.monitor.file.analytics.files.count.totalUsage.label' | localized\"\n                         [innerSize]=\"'60%'\"\n                         [startAngle]=\"-45\">\n         </vsan-pie-chart>\n      </ng-container>\n   </div>\n</div>","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {ClarityColors} from \"@util/clarity-colors\";\n\n/**\n * Represents the data model to be used to show a single line, or columns in a chart.\n */\nexport class ColumnLineChartData {\n\n   constructor(private _seriesName: string,\n         private _values: number[],\n         private _id: string,\n         private _color: string = ClarityColors.BLUE.getColor(),\n         private _tooltipData: Map<string, string[]>,\n         private _tooltipTitles: string[] = null) {\n   }\n\n   get seriesName(): string {\n      return this._seriesName;\n   }\n\n   /**\n    * The line's data points\n    */\n   get values(): number[] {\n      return this._values;\n   }\n\n   /**\n    * The line's color.\n    */\n   get color(): string {\n      return this._color;\n   }\n\n   get tooltipData(): Map<string, string[]> {\n      return this._tooltipData;\n   }\n\n   /**\n    * The tooltip title text in the chart tooltip\n    */\n   get tooltipTitles(): string[] {\n      return this._tooltipTitles;\n   }\n\n   get id(): string {\n      return this._id;\n   }\n\n   toSeries(type: string): any {\n      return {\n         type: type,\n         name: this.seriesName,\n         id: this.id,\n         data: this.values,\n         color: this.color,\n         custom: {\n            tooltipValues: this.tooltipData,\n            tooltipTitles: this.tooltipTitles,\n         },\n      };\n   }\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, OnInit, Output} from \"@angular/core\";\nimport {FileAnalyticsScanStatusInfo} from \"@generated/file-analytics-scan-status-info\";\nimport {Privileges} from \"@generated/privileges\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {FileAnalyticsConfigService} from \"@generated/file-analytics-config-service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\n\n@Component({\n   templateUrl: \"file-analytics-last-scan.html\",\n   styleUrls: [\"file-analytics-last-scan.scss\"],\n   selector: \"file-analytics-last-scan\",\n})\nexport class FileAnalyticsLastScanComponent implements OnInit {\n\n   @Output()\n   scanInfoReceived: EventEmitter<FileAnalyticsScanStatusInfo> = new EventEmitter();\n\n   @Output()\n   onError: EventEmitter<string> = new EventEmitter();\n\n   scanStatus: FileAnalyticsScanStatusInfo;\n   scanInProgress: boolean = false;\n   loading: boolean = true;\n   hasEditPermission: boolean = false;\n\n   constructor(private permissionService: PermissionService,\n         private taskService: TaskMonitorService,\n         private fileAnalyticsConfigService: FileAnalyticsConfigService) {\n   }\n\n   ngOnInit(): void {\n      this.permissionService.hasPermissions(ManagedObject.contextObject,\n            [Privileges.EDIT_CLUSTER()])\n            .then(hasEditPermission => this.hasEditPermission = hasEditPermission)\n            .catch(err =>  {\n               this.onError.emit(err);\n            });\n      this.fetchScanStatus();\n   }\n\n   async fetchScanStatus(): Promise<void> {\n      try {\n         this.loading = true;\n         this.scanStatus = await this.fileAnalyticsConfigService.getFileAnalyticsLastScan(ManagedObject.contextObject);\n      } catch (err) {\n         this.onError.emit(err);\n      } finally {\n         this.loading = false;\n         this.scanInfoReceived.emit(this.scanStatus);\n      }\n   }\n\n   async rescan(): Promise<void> {\n      this.scanInProgress = true;\n      try {\n         const taskRef: ManagedObject = await this.fileAnalyticsConfigService.startFileAnalyticsIndexing(\n               ManagedObject.contextObject);\n         this.awaitThenReload(taskRef);\n      } catch (e) {\n         this.scanInProgress = false;\n         this.onError.emit(e);\n      }\n   }\n\n   private awaitThenReload = (taskRef: ManagedObject) => {\n      this.taskService.getAwaitResult(taskRef)\n            .then(() =>  {\n               this.scanInProgress = false;\n               this.fetchScanStatus();\n            }).catch(e => this.onError.emit(e));\n   };\n}","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {ThemeSpecificColor} from \"@model/theme-specific-color\";\nimport {ClarityColors} from \"@util/clarity-colors\";\n\n/**\n * Clarity chart colors for the light and dark theme.\n * Values source:\n * https://www.figma.com/file/6mibaOyfkAUOnJx1CiGjvj/Clarity-Chart-Colors---light?node-id=151%3A77\n * https://www.figma.com/file/iQ9dyu55ujq5IdNCwnC1Vi/Clarity-Chart-Colors---dark?node-id=146%3A120\n */\nexport class ClarityChartColors {\n   static chartColors: ThemeSpecificColor[] = [\n      ClarityColors.BLUE,\n      ClarityColors.VIOLET,\n      ClarityColors.ORANGE,\n      ClarityColors.MAGENTA,\n      ClarityColors.GREY_COOL,\n      ClarityColors.GREEN_WARM,\n      ClarityColors.NAVY,\n      ClarityColors.YELLOW,\n      ClarityColors.PINK,\n      ClarityColors.TEAL,\n      ClarityColors.PURPLE,\n   ];\n}","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Injectable} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {FileAnalyticsAgeDistribution} from \"@generated/file-analytics-age-distribution\";\nimport {HistogramColumnChartData} from \"@component/chart/histogram-chart/histogram-column-chart.data\";\nimport {FileAnalyticsSizeDistribution} from \"@generated/file-analytics-size-distribution\";\nimport {FileAnalyticsFileTypeUsage} from \"@generated/file-analytics-file-type-usage\";\nimport {ChartSectionData} from \"@component/chart/model/chart-section.data\";\nimport {FileAnalyticsFastestGrowingShareData} from \"@generated/file-analytics-fastest-growing-share-data\";\nimport {ClarityChartColors} from \"@component/chart/clarity-chart-colors\";\nimport {Logger} from \"@util/logger\";\nimport {ColumnLineChartData} from \"@component/chart/column-line-chart/column-line-chart.data\";\nimport {FileAnalyticsShareCapacityTrending} from \"@generated/file-analytics-share-capacity-trending\";\nimport {ThemeSpecificColor} from \"@model/theme-specific-color\";\nimport {VsanFileShareUtils} from \"../file-services/shares/file-share-util\";\nimport {FileAnalyticsFileShareGrowthData} from \"@generated/file-analytics-file-share-growth-data\";\nimport {FileAnalyticsFileShareQuotaOccupancyData} from \"@generated/file-analytics-file-share-quota-occupancy-data\";\nimport {ClarityColors} from \"@util/clarity-colors\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\nimport {DateFormat} from \"@util/date-time\";\n\n@Injectable()\nexport class FileAnalyticsChartService {\n\n   // property name of 'capacity added'\n   static readonly CAPACITY_ADDED_PROPERTY: string = \"capacityAdded\";\n\n   // property name of 'capacity removed'\n   static readonly CAPACITY_REMOVED_PROPERTY: string = \"capacityRemoved\";\n\n   // property name of 'total capacity'\n   static readonly TOTAL_CAPACITY_PROPERTY: string = \"sharesTotalCapacity\";\n\n   parseFilesAgeDistributionChartData(data: Map<FileAnalyticsAgeDistribution, number>): HistogramColumnChartData[] {\n      if (!data || data.size === 0) {\n         return [];\n      }\n      const totalFilesCount: number = this.getTotalFilesCount(data);\n      const result: HistogramColumnChartData[] = [];\n      const recentData: HistogramColumnChartData = this.getRecentFiles(data, totalFilesCount);\n      if (recentData) {\n         result.push(recentData);\n      }\n      const oneMonthData: HistogramColumnChartData = this.getOneMonthOldFiles(data, totalFilesCount);\n      if (oneMonthData) {\n         result.push(oneMonthData);\n      }\n      const threeMonthsData: HistogramColumnChartData = this.getThreeMonthsOldFiles(data, totalFilesCount);\n      if (threeMonthsData) {\n         result.push(threeMonthsData);\n      }\n      const sixMonthsData: HistogramColumnChartData = this.getSixMonthsOldFiles(data, totalFilesCount);\n      if (sixMonthsData) {\n         result.push(sixMonthsData);\n      }\n      const oneYearData: HistogramColumnChartData = this.getOlderThanOneYearFiles(data, totalFilesCount);\n      if (oneYearData) {\n         result.push(oneYearData);\n      }\n      return result;\n   }\n\n   parseFileSizeDistributionChartData(data: Map<FileAnalyticsSizeDistribution, number>): HistogramColumnChartData[] {\n      if (!data || data.size === 0) {\n         return [];\n      }\n      const totalFilesCount: number = this.getTotalFilesCount(data);\n      const result: HistogramColumnChartData[] = [];\n      result.push(this.getSmallestFiles(data, totalFilesCount));\n      result.push(this.getOneToTenMbFiles(data, totalFilesCount));\n      result.push(this.getTenToHundredMbFiles(data, totalFilesCount));\n      result.push(this.getHundredMbToOneGbFiles(data, totalFilesCount));\n      result.push(this.getBiggerThanOneGbFiles(data, totalFilesCount));\n      return result;\n   }\n\n   parseFastestGrowingFileSharesData(data: FileAnalyticsFastestGrowingShareData[]): ColumnLineChartData[] {\n      if (VsanUiUtils.isEmpty(data)) {\n         return [];\n      }\n      return data.map((shareData: FileAnalyticsFastestGrowingShareData, index: number) => {\n         return this.getShareGrowthData(shareData, this.getClarityColorAtIndex(index));\n      });\n   }\n\n   parseCapacityTrendingData(data: FileAnalyticsShareCapacityTrending[]): ColumnLineChartData[] {\n      if (VsanUiUtils.isEmpty(data)) {\n         return [];\n      }\n\n      const result: ColumnLineChartData[] = [];\n      result.push(...this.getDailyCapacityTrendingData(data));\n      return result;\n   }\n\n   parseTopQuotaOccupancyFileShares(fileSharesModels: FileAnalyticsFileShareQuotaOccupancyData[]):\n         Map<string, ChartSectionData[]> {\n      const sections: Map<string, ChartSectionData[]> = new Map<string, ChartSectionData[]>();\n      for (const fileShare of fileSharesModels) {\n         sections.set(fileShare.name, this.getFileShareQuotaSection(fileShare));\n      }\n      return sections;\n   }\n\n   private getRecentFiles(data: Map<FileAnalyticsAgeDistribution, number>,\n         totalFilesCount: number): HistogramColumnChartData {\n      const filesCount: number = data.get(FileAnalyticsAgeDistribution.less_than_one_month);\n      if (VsanUiUtils.isUnset(filesCount)) {\n         return null;\n      }\n      return new HistogramColumnChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.recent\"),\n            filesCount,\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.period.before.one.month\"),\n            this.getFileCountCommonLabelData(filesCount, totalFilesCount),\n            \"lessThanOneMonth\");\n   }\n\n   private getOneMonthOldFiles(data: Map<FileAnalyticsAgeDistribution, number>,\n         totalFilesCount: number): HistogramColumnChartData {\n      const filesCount: number = data.get(FileAnalyticsAgeDistribution.one_month_to_three_months);\n      if (VsanUiUtils.isUnset(filesCount)) {\n         return null;\n      }\n      return new HistogramColumnChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.period.one.month\"),\n            filesCount,\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.period.one.to.three.months\"),\n            this.getFileCountCommonLabelData(filesCount, totalFilesCount),\n            \"oneToThreeMonths\");\n   }\n\n   private getThreeMonthsOldFiles(data: Map<FileAnalyticsAgeDistribution, number>,\n         totalFilesCount: number): HistogramColumnChartData {\n      const filesCount: number = data.get(FileAnalyticsAgeDistribution.three_months_to_six_months);\n      if (VsanUiUtils.isUnset(filesCount)) {\n         return null;\n      }\n      return new HistogramColumnChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.period.three.months\"),\n            filesCount,\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.period.three.to.six.months\"),\n            this.getFileCountCommonLabelData(filesCount, totalFilesCount),\n            \"threeToSixMonths\");\n   }\n\n   private getSixMonthsOldFiles(data: Map<FileAnalyticsAgeDistribution, number>,\n         totalFilesCount: number): HistogramColumnChartData {\n      const filesCount: number = data.get(FileAnalyticsAgeDistribution.six_months_to_one_year);\n      if (VsanUiUtils.isUnset(filesCount)) {\n         return null;\n      }\n      return new HistogramColumnChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.period.six.months\"),\n            filesCount,\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.period.six.months.to.one.year\"),\n            this.getFileCountCommonLabelData(filesCount, totalFilesCount),\n            \"sixMonthsToOneYear\");\n   }\n\n   private getOlderThanOneYearFiles(data: Map<FileAnalyticsAgeDistribution, number>,\n         totalFilesCount: number): HistogramColumnChartData {\n      const filesCount: number = data.get(FileAnalyticsAgeDistribution.more_than_one_year);\n      if (VsanUiUtils.isUnset(filesCount)) {\n         return null;\n      }\n      return new HistogramColumnChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.period.one.year\"),\n            filesCount,\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.period.older.than.one.year\"),\n            this.getFileCountCommonLabelData(filesCount, totalFilesCount),\n            \"moreThanOneYear\");\n   }\n\n   private getSmallestFiles(data: Map<FileAnalyticsSizeDistribution, number>,\n         totalFilesCount: number): HistogramColumnChartData {\n      const filesCount: number = data.get(FileAnalyticsSizeDistribution.less_than_a_mb);\n      return new HistogramColumnChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.size.zero\"),\n            filesCount,\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.size.less.than.one.mb\"),\n            this.getFileCountCommonLabelData(filesCount, totalFilesCount),\n            \"lessThanOneMb\");\n   }\n\n   private getOneToTenMbFiles(data: Map<FileAnalyticsSizeDistribution, number>,\n         totalFilesCount: number): HistogramColumnChartData {\n      const filesCount: number = data.get(FileAnalyticsSizeDistribution.one_mb_to_ten_mb);\n      return new HistogramColumnChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.size.one.mb\"),\n            filesCount,\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.size.one.to.ten.mb\"),\n            this.getFileCountCommonLabelData(filesCount, totalFilesCount),\n            \"oneToTenMB\");\n   }\n\n   private getTenToHundredMbFiles(data: Map<FileAnalyticsSizeDistribution, number>,\n         totalFilesCount: number): HistogramColumnChartData {\n      const filesCount: number = data.get(FileAnalyticsSizeDistribution.ten_mb_to_hundred_mb);\n      return new HistogramColumnChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.size.ten.mb\"),\n            filesCount,\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.size.ten.to.hundred.mb\"),\n            this.getFileCountCommonLabelData(filesCount, totalFilesCount),\n            \"tenToHundredMb\");\n   }\n\n   private getHundredMbToOneGbFiles(data: Map<FileAnalyticsSizeDistribution, number>,\n         totalFilesCount: number): HistogramColumnChartData {\n      const filesCount: number = data.get(FileAnalyticsSizeDistribution.hundred_mb_to_one_gb);\n      return new HistogramColumnChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.size.hundred.mb\"),\n            filesCount,\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.size.hundred.mb.to.one.gb\"),\n            this.getFileCountCommonLabelData(filesCount, totalFilesCount),\n            \"hundredMbToOneGb\");\n   }\n\n   private getBiggerThanOneGbFiles(data: Map<FileAnalyticsSizeDistribution, number>,\n         totalFilesCount: number): HistogramColumnChartData {\n      const filesCount: number = data.get(FileAnalyticsSizeDistribution.more_than_one_gb);\n      return new HistogramColumnChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.size.one.gb\"),\n            filesCount,\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.size.more.than.one.gb\"),\n            this.getFileCountCommonLabelData(filesCount, totalFilesCount),\n            \"moreThanOneGb\");\n   }\n\n   private getTotalFilesCount(data: Map<any, number>): number {\n      let totalFilesCount: number = 0;\n      for (const value of data.values()) {\n         totalFilesCount += value;\n      }\n      return totalFilesCount;\n   }\n\n   private getFileCountCommonLabelData(filesCount: number, totalFilesCount: number): Map<string, string> {\n      const result: Map<string, string> = new Map();\n      result.set(VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.common.count.label\"),\n            filesCount.toString());\n      result.set(VsanUiUtils.getString(\"vsan.common.percentage.label\"),\n            VsanUiUtils.getPercentage(VsanUiUtils.asPercentage(filesCount, totalFilesCount)));\n      return result;\n   }\n\n   parseFilesTypeDistributionChartData(fileTypeUsages: FileAnalyticsFileTypeUsage[]): ChartSectionData[] {\n      if (!fileTypeUsages) {\n         return [];\n      }\n      // Get the total usage\n      const totalBytes: number = fileTypeUsages\n            .map((fileTypeUsage: FileAnalyticsFileTypeUsage) => fileTypeUsage.usageInBytes)\n            .reduce((a: number, b: number) => a + b, 0);\n\n      return fileTypeUsages\n            .filter((fileTypeUsage: FileAnalyticsFileTypeUsage) => fileTypeUsage.usageInBytes > 0)\n            .sort((a, b) => b.usageInBytes - a.usageInBytes)\n            .map((fileTypeUsage: FileAnalyticsFileTypeUsage, index: number) => {\n             // Parse FileAnalyticsFileTypeUsage to ChartSectionData in order to be used in the pie chart\n             const sectionData: ChartSectionData = new ChartSectionData(\n                   fileTypeUsage.fileTypeLabel,\n                   fileTypeUsage.usageInBytes,\n                   fileTypeUsage.fileTypeLabel,\n                   true,\n                   this.getClarityColorAtIndex(index));\n             sectionData.tooltipValue = this.getFileTypeDistributionLabelData(fileTypeUsage.usageInBytes,\n                   totalBytes, fileTypeUsage.filesCount);\n             return sectionData;\n      });\n   }\n\n   private getFileTypeDistributionLabelData(usageInBytes: number, totalInBytes: number, filesCount: number):\n         Map<string, string> {\n      const result: Map<string, string> = new Map();\n      const usageValue: string =\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.count.usage.format\",\n               VsanUiUtils.formatFileSize(usageInBytes),\n               VsanUiUtils.getPercentage(VsanUiUtils.asPercentage(usageInBytes, totalInBytes)));\n      result.set(VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.count.usage.label\"),\n            usageValue);\n      result.set(VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.common.count.label\"),\n            filesCount.toString());\n      return result;\n   }\n\n   private getClarityColorAtIndex(index: number): string {\n      if (index >= ClarityChartColors.chartColors.length) {\n         Logger.warn(\"The requested index color exceeds the available predefined colors: \" + index);\n         return ClarityColors.BLUE.getColor();\n      }\n      return ClarityChartColors.chartColors[index].getColor();\n   }\n\n   private getShareGrowthData(shareData: FileAnalyticsFastestGrowingShareData, color: string): ColumnLineChartData {\n      const values: number[] = [];\n      const growthData: string[] = [];\n      const sizeData: string[] = [];\n      for (const growth of shareData.growthData) {\n         values.push(growth.shareSize);\n         growthData.push(this.getGrowthDataLabel(growth));\n         sizeData.push(VsanUiUtils.formatFileSize(growth.shareSize));\n      }\n\n      return new ColumnLineChartData(shareData.shareName,\n            values,\n            shareData.shareName,\n            color,\n            this.getShareGrowthTooltipData(growthData, sizeData),\n            this.getShareGrowthTooltipLabels(shareData),\n      );\n   }\n\n   private getGrowthDataLabel(growthData: FileAnalyticsFileShareGrowthData): string {\n      if (!VsanUiUtils.isUnset(growthData.growthPercentage)) {\n         return VsanUiUtils.getString(\n               \"vsan.cluster.monitor.file.analytics.file.share.fastest.growing.tooltip.growth.format\",\n               VsanUiUtils.formatFileSize(growthData.growthValue),\n               growthData.growthPercentage);\n      } else {\n         // For newly created shares there is no growth percentage value. Only show the growth value for these.\n         return VsanUiUtils.formatFileSize(growthData.growthValue);\n      }\n   }\n\n   private getShareGrowthTooltipData(growthData: string[], sizeData: string[]): Map<string, string[]> {\n      const tooltipData: Map<string, string[]> = new Map();\n      tooltipData.set(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.file.share.fastest.growing.tooltip.growth\"),\n            growthData);\n      tooltipData.set(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.file.share.fastest.growing.tooltip.size\"),\n            sizeData);\n\n      return tooltipData;\n   }\n\n   private getShareGrowthTooltipLabels(shareData: FileAnalyticsFastestGrowingShareData): string[] {\n      return shareData.growthData.map((data: FileAnalyticsFileShareGrowthData) => {\n         return `${shareData.shareName} - ${VsanDateTimeUtils.applyFormatting(data.date, DateFormat.SHORT_DATE)}`;\n      });\n   }\n\n   private getCapacityTrendingTooltipData(data: FileAnalyticsShareCapacityTrending[]): Map<string, string[]> {\n      const tooltipValues: Map<string, string[]> = new Map();\n\n      tooltipValues.set(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.file.share.capacity.trending.total\"),\n            data.map(dailyCapacity => VsanUiUtils.formatFileSize(Math.abs(dailyCapacity.sharesTotalCapacity))));\n      tooltipValues.set(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.file.share.capacity.trending.added\"),\n            data.map(dailyCapacity => VsanUiUtils.formatFileSize(Math.abs(dailyCapacity.capacityAdded))));\n      tooltipValues.set(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.file.share.capacity.trending.deleted\"),\n            data.map(dailyCapacity => VsanUiUtils.formatFileSize(Math.abs(dailyCapacity.capacityRemoved))));\n      return tooltipValues;\n   }\n\n   private getDailyCapacityTrendingData(data: FileAnalyticsShareCapacityTrending[]): ColumnLineChartData[] {\n      const result: ColumnLineChartData[] = [];\n      const tooltipValues: Map<string, string[]> = this.getCapacityTrendingTooltipData(data);\n      result.push(new ColumnLineChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.file.share.capacity.trending.added\"),\n            data.map(dailyData => dailyData.capacityAdded),\n            FileAnalyticsChartService.CAPACITY_ADDED_PROPERTY,\n            ClarityColors.GREEN_WARM.getColor(),\n            tooltipValues,\n            data.map(dailyData => VsanDateTimeUtils.applyFormatting(dailyData.date, DateFormat.SHORT_DATE))));\n\n      result.push(new ColumnLineChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.file.share.capacity.trending.deleted\"),\n            data.map(dailyData => dailyData.capacityRemoved),\n            FileAnalyticsChartService.CAPACITY_REMOVED_PROPERTY,\n            ClarityColors.MAGENTA.getColor(),\n            tooltipValues,\n            data.map(dailyData => VsanDateTimeUtils.applyFormatting(dailyData.date, DateFormat.SHORT_DATE))));\n\n      result.push(new ColumnLineChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.file.share.capacity.trending.total\"),\n            data.map(dailyData => dailyData.sharesTotalCapacity),\n            FileAnalyticsChartService.TOTAL_CAPACITY_PROPERTY,\n            ClarityColors.BLUE.getColor(),\n            tooltipValues,\n            data.map(dailyData => VsanDateTimeUtils.applyFormatting(dailyData.date, DateFormat.SHORT_DATE))));\n\n      return result;\n   }\n\n   private getFileShareQuotaSection(fileShare: FileAnalyticsFileShareQuotaOccupancyData): ChartSectionData[] {\n      const color: ThemeSpecificColor = this.getSectionColorBasedOnQuotaUsage(fileShare);\n      // Build the tooltip content\n      const tooltipValues: Map<string, string> = new Map<string, string>([\n         [VsanUiUtils.getString(\n               \"vsan.cluster.monitor.file.analytics.file.share.top.quota.usage.tooltip.usage.label\"),\n          VsanUiUtils.formatFileSize(fileShare.currentUsage)],\n         [VsanUiUtils.getString(\"\" +\n               \"vsan.cluster.monitor.file.analytics.file.share.top.quota.usage.tooltip.softQuota.label\"),\n          VsanUiUtils.formatFileSize(VsanUiUtils.fromPercentage(fileShare.softQuotaPercentage, fileShare.hardQuota))],\n         [VsanUiUtils.getString(\n               \"vsan.cluster.monitor.file.analytics.file.share.top.quota.usage.tooltip.hardQuota.label\"),\n          VsanUiUtils.formatFileSize(fileShare.hardQuota)],\n      ]);\n\n      const currentUsageChartSection: ChartSectionData =\n            new ChartSectionData(\"currentUsage\", fileShare.currentUsage);\n      currentUsageChartSection.customSectionColor = color;\n      currentUsageChartSection.tooltipValue = tooltipValues;\n\n      const freeSpace: number = fileShare.hardQuota - fileShare.currentUsage;\n      const hardQuotaRemainderChartSection: ChartSectionData =\n            new ChartSectionData(\"hardQuotaRemainder\", freeSpace);\n      hardQuotaRemainderChartSection.customSectionColor = color.getFadedColor(0.5);\n      hardQuotaRemainderChartSection.tooltipValue = tooltipValues;\n\n      return [currentUsageChartSection, hardQuotaRemainderChartSection];\n   }\n\n   private getSectionColorBasedOnQuotaUsage(fileShare: FileAnalyticsFileShareQuotaOccupancyData):\n         ThemeSpecificColor {\n      if (fileShare.usageOverHardQuotaPercentage < fileShare.softQuotaPercentage) {\n         return ClarityColors.BLUE;\n      }\n      if (fileShare.usageOverHardQuotaPercentage >= VsanFileShareUtils.FILE_SHARE_QUOTA_RED_THRESHOLD) {\n         return ClarityColors.RED;\n      }\n      return ClarityColors.YELLOW_WARM;\n   }\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\n\n/**\n * Represents the column data in a histogram column chart.\n * It is used to create the highcharts properties and series objects and feed the histogram chart.\n */\nexport class HistogramColumnChartData {\n\n   constructor(private _label: string,\n         private _value: number,\n         private _tooltipLabel: string,\n         private _labelData: Map<string, string>,\n         private _id: string = \"\") {\n   }\n\n   get label(): string {\n      return this._label;\n   }\n\n   get value(): number {\n      return this._value;\n   }\n\n   get tooltipLabel(): string {\n      return this._tooltipLabel;\n   }\n\n   get labelData(): Map<string, string> {\n      return this._labelData;\n   }\n\n   get id(): string {\n      return this._id;\n   }\n\n   toSeries(): any {\n      return {\n         name: this.tooltipLabel,\n         id: this.id,\n         y: this.value,\n         custom: {\n            tooltipValues: this.labelData,\n         },\n      };\n   }\n}","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnChanges} from \"@angular/core\";\nimport {HistogramColumnChartData} from \"@component/chart/histogram-chart/histogram-column-chart.data\";\nimport {IllustratedMessageType} from \"@component/illustrated-message/illustrated-message.component\";\nimport {FileAnalyticsDashboardService} from \"@generated/file-analytics-dashboard-service\";\nimport {FileAnalyticsSizeDistribution} from \"@generated/file-analytics-size-distribution\";\nimport {VsanFileServiceShare} from \"@generated/vsan-file-service-share\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ArrayUtils} from \"@util/array-util\";\nimport {ClarityColors} from \"@util/clarity-colors\";\nimport {Logger} from \"@util/logger\";\nimport {MapUtil} from \"@util/map-util\";\nimport {FileAnalyticsChartService} from \"../file-analytics-chart.service\";\n\n@Component({\n   templateUrl: \"file-analytics-files-by-size.html\",\n   styleUrls: [\"file-analytics-files-by-size.scss\", \"../file-analytics-common.scss\"],\n   selector: \"vsan-file-analytics-files-by-size\",\n})\nexport class FileAnalyticsFilesBySizeComponent implements OnChanges {\n\n   @Input()\n   fileShares: VsanFileServiceShare[];\n\n   loading: boolean = true;\n   errorMessage: string;\n   chartData: HistogramColumnChartData[];\n   chartColor: string = ClarityColors.GREEN_WARM.getColor();\n\n   IllustratedMessageType: typeof IllustratedMessageType = IllustratedMessageType;\n   private readonly SIZE_DISTRIBUTION_KEY_GENERATOR = (propKey: string) => FileAnalyticsSizeDistribution[propKey];\n\n   constructor(private dashboardService: FileAnalyticsDashboardService,\n         private fileAnalyticsChartService: FileAnalyticsChartService) {\n   }\n\n   ngOnChanges(): void {\n      if (!this.fileShares) {\n         return;\n      }\n      this.fetch();\n   }\n\n   @RefreshHandler\n   async fetch(): Promise<void> {\n      this.loading = true;\n      this.errorMessage = null;\n      this.chartData = null;\n      try {\n         const fileSharesUuidsBefore: string[] = this.fileShares.map(share => share.uuid);\n         const result: any = await this.dashboardService.queryFilesBySize(ManagedObject.contextObject,\n               fileSharesUuidsBefore);\n         if (!ArrayUtils.equalsIgnoreOrder(fileSharesUuidsBefore, this.fileShares.map(share => share.uuid))) {\n            // The parent dashboard has already changed the selection of file shares, ignore processing this result.\n            Logger.debug(\"Ignoring queryFilesBySize result due to new selection.\");\n            return;\n         }\n         const filesCountBySizeData: Map<FileAnalyticsSizeDistribution, number> =\n               MapUtil.toMap<FileAnalyticsSizeDistribution, number>(result, this.SIZE_DISTRIBUTION_KEY_GENERATOR);\n         this.chartData = this.fileAnalyticsChartService.parseFileSizeDistributionChartData(filesCountBySizeData);\n      } catch (e) {\n         Logger.error(e);\n         this.errorMessage = e;\n      } finally {\n         this.loading = false;\n      }\n   }\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {BaseComparator} from \"@component/datagrid/comparator/base-comparator\";\n\nexport class NumericComparator<T> extends BaseComparator<T> {\n   constructor(private dataField: string) {\n      super();\n   }\n\n   protected compareValue(a: T, b: T): number {\n      return a[this.dataField] - b[this.dataField];\n   }\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ClrDatagridComparatorInterface} from \"@clr/angular\";\nimport { VsanUiUtils } from '@util/vsan-util';\n\n/**\n * Basic comparator, the child component should override the compareValue method\n * We don't expect the compared value to be json format\n */\nexport class BaseComparator<T> implements ClrDatagridComparatorInterface<T> {\n   protected stringify(data: T, field: string): string {\n      return VsanUiUtils.stringify(data, field);\n   }\n\n   protected compareValue(a: T, b: T): number {\n      throw new Error(\"Method not implemented\");\n   }\n\n   compare(a: T, b: T): number {\n      return this.compareValue(a, b);\n   }\n}","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-drag-and-drop *ngIf=\"fileDashboardTemplates?.length > 0 && fileShares.length > 0\"\n                    [view]=\"cardView\"\n                    [cardTemplates]=\"fileDashboardTemplates\">\n</vsan-drag-and-drop>\n\n<vsan-illustrated-message\n      *ngIf=\"fileShares.length === 0\"\n      [type]=\"IllustratedMessageType.MISSING_SELECTION\"\n      [message]=\"'vsan.cluster.monitor.file.analytics.files.share.none.selected.label' | localized\">\n</vsan-illustrated-message>\n<ng-template vsan-drag-service=\"{{FILE_ANALYTICS_FILES_BY_AGE}}\">\n   <vsan-file-analytics-files-by-age [fileShares]=\"fileShares\"></vsan-file-analytics-files-by-age>\n</ng-template>\n<ng-template vsan-drag-service=\"{{FILE_ANALYTICS_FILES_COUNT}}\">\n   <vsan-file-analytics-files-count [fileShares]=\"fileShares\"></vsan-file-analytics-files-count>\n</ng-template>\n<ng-template vsan-drag-service=\"{{FILE_ANALYTICS_FILES_BY_SIZE}}\">\n   <vsan-file-analytics-files-by-size [fileShares]=\"fileShares\"></vsan-file-analytics-files-by-size>\n</ng-template>\n\n","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"card\">\n   <div class=\"card-header cdk-drag-handle\" cdkDragHandle>\n      <span class=\"card-title\" vsan-show-title>\n         {{\"vsan.cluster.monitor.file.analytics.files.by.age\" | localized}}\n      </span>\n      <select id=\"file-analytics-files-by-age-grouping\"\n              *ngIf=\"!errorMessage && chartData?.length\"\n              clrSelect\n              name=\"groupBy\"\n              [(ngModel)]=\"groupBy\"\n              (change)=\"updateChartData()\">\n         <option *ngFor=\"let group of Object.values(FileAnalyticsDateGroupBy)\"\n                 [ngValue]=\"group\"\n                 [selected]=\"groupBy === group\">\n            {{getGroupByLabel(group)}}\n         </option>\n      </select>\n   </div>\n   <div class=\"card-block\">\n      <span id=\"loading-chart\" *ngIf=\"loading\" class=\"spinner spinner-md central-spinner\"></span>\n      <vsan-validation *ngIf=\"errorMessage\" [alert]=\"errorMessage\" [allowClose]=\"false\"> </vsan-validation>\n      <ng-container *ngIf=\"!loading && !errorMessage\">\n         <vsan-illustrated-message\n               *ngIf=\"!chartData?.length\"\n               [type]=\"IllustratedMessageType.FILTER_NO_RESULT\"\n               [message]=\"'vsan.cluster.monitor.file.analytics.report.no.data.label' | localized\">\n         </vsan-illustrated-message>\n         <vsan-histogram-column-chart\n               *ngIf=\"chartData?.length\"\n               [columns]=\"chartData\"\n               [valuesTitle]=\"'vsan.cluster.monitor.file.analytics.files.common.count.label' | localized\"\n               [lastColumnTitle]=\"'vsan.cluster.monitor.file.analytics.files.by.age.older' | localized\">\n         </vsan-histogram-column-chart>\n      </ng-container>\n   </div>\n</div>","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<span id=\"last-scan-info\" class=\"p7\">\n   {{\"vsan.cluster.monitor.file.analytics.last.scan.label\" | localized : (scanStatus?.lastScanTime | l10nDate)}}\n</span>\n<button id=\"rescan-action\"\n        *ngIf=\"!scanInProgress && !loading\"\n        class=\"btn btn-link btn-sm\"\n        [disabled]=\"!hasEditPermission\"\n        (click)=\"rescan()\">\n   {{\"vsan.cluster.monitor.file.analytics.last.rescan.button\" | localized}}\n</button>\n<!-- Wrap the spinner inside a div in order to add some width to it.-->\n<div *ngIf=\"loading || scanInProgress\"><span class=\"spinner spinner-inline\"></span></div>","export enum FileAnalyticsSizeDistribution {\n   less_than_a_mb = \"less_than_a_mb\",\n   one_mb_to_ten_mb = \"one_mb_to_ten_mb\",\n   ten_mb_to_hundred_mb = \"ten_mb_to_hundred_mb\",\n   hundred_mb_to_one_gb = \"hundred_mb_to_one_gb\",\n   more_than_one_gb = \"more_than_one_gb\",\n}\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterViewInit, Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild} from \"@angular/core\";\nimport {HistogramColumnChartData} from \"@component/chart/histogram-chart/histogram-column-chart.data\";\nimport {HighchartsPropertiesService} from \"@component/chart/highcharts-properties.service\";\nimport {ReferenceWatcher} from \"@util/reference-watcher\";\nimport {HighchartsThemeService} from \"@component/chart/highcharts-theme.service\";\nimport * as Highcharts from \"highcharts\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {HighchartsTooltipUtil} from \"@component/chart/highcharts-tooltip.util\";\nimport {ClarityColors} from \"@util/clarity-colors\";\n\n@Component({\n   selector: \"vsan-histogram-column-chart\",\n   templateUrl: \"histogram-column-chart.html\",\n   styleUrls: [\"histogram-column-chart.scss\"],\n   providers: [ReferenceWatcher],\n})\nexport class HistogramColumnChartComponent implements AfterViewInit, OnChanges {\n\n   /**\n    * Data for the columns to be displayed in the chart\n    */\n   @Input()\n   columns: HistogramColumnChartData[];\n\n   /**\n    * The title associated with the values.\n    * Will be shown on the left side of the chart. E.g. yAxis title.\n    */\n   @Input()\n   valuesTitle: string;\n\n   /**\n    * The chart's series color.\n    */\n   @Input()\n   chartColor: string = ClarityColors.BLUE.getColor();\n\n   /**\n    * The histogram chart shows the colum labels between the columns, thus the last label is\n    * shown at the beginning of the last column. In case an extra label is needed after it, pass it here.\n    * Example \"Past\" in the \"Files by age\" chart.\n    */\n   @Input()\n   lastColumnTitle: string;\n\n   /**\n    * Whether or not to show the series legend.\n    */\n   @Input()\n   showLegend: boolean = false;\n\n   @ViewChild(\"chart\")\n   chartElement: ElementRef;\n   chart: Highcharts.Chart;\n\n   private highchartOptions: any;\n\n   constructor(private highchartsService: HighchartsPropertiesService,\n         private highchartsThemeService: HighchartsThemeService,\n         private refWatcher: ReferenceWatcher) {\n      this.refWatcher.watchSubscriptionRef(\n            this.highchartsThemeService.whenThemeChanged.subscribe(theme => this.onThemeChanged()));\n   }\n\n   ngAfterViewInit(): void {\n      this.render();\n   }\n\n   ngOnChanges(changes: SimpleChanges): void {\n      this.applyHighchartOptions();\n      this.populateHighchartSeries();\n      this.render();\n   }\n\n   private onThemeChanged(): void {\n      this.applyHighchartOptions();\n      this.update();\n   }\n\n   private applyHighchartOptions(): void {\n      if (!this.columns) {\n         return;\n      }\n      this.highchartOptions = this.highchartsService.getColumnHistogramChartOptions();\n      this.highchartOptions.yAxis.title.text = this.valuesTitle;\n      this.highchartOptions.xAxis.categories = this.columns.map(seriesData => seriesData.label);\n\n      // Use the xAxis title as a fake last column label, which is otherwise not displayed.\n      if (this.lastColumnTitle) {\n         this.highchartOptions.xAxis.title.text = this.lastColumnTitle;\n         this.highchartOptions.xAxis.title.align = \"high\";\n         this.highchartOptions.xAxis.title.margin = -16;\n      }\n\n      this.highchartOptions.legend.enabled = this.showLegend;\n   }\n\n   private populateHighchartSeries(): void {\n      if ( !this.columns || !this.highchartOptions) {\n         return;\n      }\n      const seriesData: any[] = this.getHistogramSeriesData(this.columns);\n      this.highchartOptions.series = [{\n         name: this.valuesTitle,\n         color: this.chartColor,\n         data: seriesData,\n      }];\n   }\n\n   private render(): void {\n      if (!this.chartElement || !this.highchartOptions) {\n         return;\n      }\n      this.highchartOptions.chart.renderTo = this.chartElement.nativeElement;\n      this.chart = Highcharts.chart(this.highchartOptions);\n      this.highchartsService.applyScreenReaderMessage(this.chartElement.nativeElement);\n      this.refWatcher.watchChartRef(this.chart);\n      // The chartData is needed for QE tests, related to charts verification\n      this.attachTestingData();\n   }\n\n   private update(): void {\n      if (this.chart) {\n         this.chart.update(this.highchartOptions);\n      }\n   }\n\n   private getHistogramSeriesData(seriesData: HistogramColumnChartData[]): any[] {\n      if (!seriesData) {\n         return [];\n      }\n      return seriesData.map((sectionData: HistogramColumnChartData) => sectionData.toSeries());\n   }\n\n   private attachTestingData(): void {\n      const testData: any = {\n         columns: this.columns,\n      };\n\n      // We have the tooltip data in every ColumnLineChart object, so take it from the first available one.\n      if (!VsanUiUtils.isEmpty(this.columns)) {\n         testData.tooltipData = HighchartsTooltipUtil.getHistogramTestingTooltipData(this.columns);\n      }\n      this.chartElement.nativeElement.chartData = testData;\n   }\n}\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {BaseFilter} from \"./base-filter\";\nimport {VsanUiUtils} from '@util/vsan-util';\n\n/**\n * Extends BaseFilter by allowing the consumer to filter the hierarchical data field.\n * It tries to find the final string value of the data field by visiting the attribute hirarchy.\n */\nexport class ObjectFilter<T> extends BaseFilter<T> {\n   constructor(protected dataField: string){\n      super();\n   }\n\n   protected stringify(data: T): string {\n      return VsanUiUtils.stringify(data, this.dataField);\n   }\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\nimport {DragAndDropModule} from \"@component/drag-and-drop/drag-and-drop.module\";\nimport {VsanCommonModule} from \"../../common/vsan-common.module\";\nimport {MasterDetailModule} from \"@component/master-detail/master-detail.module\";\nimport {VsanChartModule} from \"@component/chart/chart.module\";\nimport {FileDashboardComponent} from \"./file-dashboard.component\";\nimport {FileAnalyticsFilesByAgeComponent} from \"./file-analytics-files-by-age.component\";\nimport {FileAnalyticsFilesCountComponent} from \"./file-analytics-files-count.component\";\nimport {FileAnalyticsFilesBySizeComponent} from \"./file-analytics-files-by-size.component\";\nimport {FileAnalyticsChartService} from \"../file-analytics-chart.service\";\nimport {FileAnalyticsLastScanComponent} from \"../component/file-analytics-last-scan.component\";\nimport {IllustratedMessageModule} from \"@component/illustrated-message/illustrated-message.module\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      UnavailableViewModule,\n      DragAndDropModule,\n      VsanCommonModule,\n      MasterDetailModule,\n      VsanChartModule,\n      IllustratedMessageModule,\n   ],\n   declarations: [\n      FileDashboardComponent,\n      FileAnalyticsLastScanComponent,\n      FileAnalyticsFilesByAgeComponent,\n      FileAnalyticsFilesCountComponent,\n      FileAnalyticsFilesBySizeComponent,\n   ],\n   exports: [\n      FileDashboardComponent,\n      FileAnalyticsLastScanComponent,\n   ],\n   providers: [\n      FileAnalyticsChartService,\n   ],\n})\nexport class FileDashboardModule {\n}","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div #chart class=\"chart\"></div>\n\n","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {Filter, TreeDatagridRow} from \"../tree-datagrid\";\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\n\n/**\n * Abstract filter class that needs to be extended in order to implement custom filtration.\n * The class has a single abstract method that takes an object of type T and returns its\n * string representation.\n */\nexport class BaseFilter<T> implements ClrDatagridStringFilterInterface<T>, Filter {\n\n   accepts(data: T, search: string): boolean {\n      // Handle correctly TreeDatagrid components\n      if (data instanceof TreeDatagridRow) {\n         data = data.data;\n      }\n\n      let label: string = this.stringify(data);\n      if (label) {\n         // Compare ignoring the case\n         return label.toLowerCase().indexOf(search.toLowerCase()) != -1;\n      } else {\n         return false;\n      }\n   }\n\n   match(data: T, search: string): boolean {\n      return this.accepts(data, search);\n   }\n\n   protected stringify(data: T): string  {\n      return data + \"\";\n   }\n\n}\n\n","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"card\">\n   <div class=\"card-header cdk-drag-handle\" cdkDragHandle>\n      <span class=\"card-title\" vsan-show-title>\n         {{\"vsan.cluster.monitor.file.analytics.files.by.size\" | localized}}\n      </span>\n   </div>\n   <div class=\"card-block\">\n      <span id=\"loading-chart\" *ngIf=\"loading\" class=\"spinner spinner-md central-spinner\"></span>\n      <vsan-validation *ngIf=\"errorMessage\" [alert]=\"errorMessage\" [allowClose]=\"false\"></vsan-validation>\n      <ng-container *ngIf=\"!loading && !errorMessage\">\n         <vsan-illustrated-message\n               *ngIf=\"!chartData?.length\"\n               [type]=\"IllustratedMessageType.FILTER_NO_RESULT\"\n               [message]=\"'vsan.cluster.monitor.file.analytics.report.no.data.label' | localized\">\n         </vsan-illustrated-message>\n         <vsan-histogram-column-chart\n               *ngIf=\"chartData?.length\"\n               [columns]=\"chartData\"\n               [chartColor]=\"chartColor\"\n               [valuesTitle]=\"'vsan.cluster.monitor.file.analytics.files.common.count.label' | localized\">\n         </vsan-histogram-column-chart>\n      </ng-container>\n   </div>\n</div>","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnChanges} from \"@angular/core\";\nimport {HistogramColumnChartData} from \"@component/chart/histogram-chart/histogram-column-chart.data\";\nimport {IllustratedMessageType} from \"@component/illustrated-message/illustrated-message.component\";\nimport {FileAnalyticsAgeDistribution} from \"@generated/file-analytics-age-distribution\";\nimport {FileAnalyticsDashboardService} from \"@generated/file-analytics-dashboard-service\";\nimport {FileAnalyticsDateGroupBy} from \"@generated/file-analytics-date-group-by\";\nimport {FileAnalyticsFilesByAgeData} from \"@generated/file-analytics-files-by-age-data\";\nimport {VsanFileServiceShare} from \"@generated/vsan-file-service-share\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ArrayUtils} from \"@util/array-util\";\nimport {Logger} from \"@util/logger\";\nimport {MapUtil} from \"@util/map-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {FileAnalyticsChartService} from \"../file-analytics-chart.service\";\n\n@Component({\n   templateUrl: \"file-analytics-files-by-age.html\",\n   styleUrls: [\"file-analytics-files-by-age.scss\", \"../file-analytics-common.scss\"],\n   selector: \"vsan-file-analytics-files-by-age\",\n})\nexport class FileAnalyticsFilesByAgeComponent implements OnChanges {\n\n   @Input()\n   fileShares: VsanFileServiceShare[];\n\n   FileAnalyticsDateGroupBy: typeof FileAnalyticsDateGroupBy = FileAnalyticsDateGroupBy;\n   IllustratedMessageType: typeof IllustratedMessageType = IllustratedMessageType;\n   Object: typeof Object = Object;\n\n   loading: boolean = true;\n   errorMessage: string;\n   chartData: HistogramColumnChartData[];\n   groupBy: FileAnalyticsDateGroupBy = FileAnalyticsDateGroupBy.CREATED_DATE;\n\n   private filesCountByAgeData: FileAnalyticsFilesByAgeData;\n   private readonly AGE_DISTRIBUTION_KEY_GENERATOR = (propKey: string) => FileAnalyticsAgeDistribution[propKey];\n\n   constructor(private dashboardService: FileAnalyticsDashboardService,\n         private fileAnalyticsChartService: FileAnalyticsChartService) {\n   }\n\n   ngOnChanges(): void {\n      if (!this.fileShares) {\n         return;\n      }\n      this.fetch();\n   }\n\n   @RefreshHandler\n   async fetch(): Promise<void> {\n      this.loading = true;\n      this.errorMessage = null;\n      this.chartData = null;\n      try {\n         const fileSharesUuidsBefore: string[] = this.fileShares.map(share => share.uuid);\n         this.filesCountByAgeData = await this.dashboardService.queryFilesByAge(ManagedObject.contextObject,\n               fileSharesUuidsBefore);\n         if (!ArrayUtils.equalsIgnoreOrder(fileSharesUuidsBefore, this.fileShares.map(share => share.uuid))) {\n            // The parent dashboard has already changed the selection of file shares, ignore processing this result.\n            Logger.debug(\"Ignoring queryFilesByAge result due to new selection.\");\n            return;\n         }\n         this.updateChartData();\n      } catch (e) {\n         Logger.error(e);\n         this.errorMessage = e;\n      } finally {\n         this.loading = false;\n      }\n   }\n\n   updateChartData(): void {\n      let data: Map<FileAnalyticsAgeDistribution, number>;\n      switch (this.groupBy) {\n         case FileAnalyticsDateGroupBy.CREATED_DATE:\n            data = MapUtil.toMap<FileAnalyticsAgeDistribution, number>(\n                  this.filesCountByAgeData.ageDistributionByCreatedDate,\n                  this.AGE_DISTRIBUTION_KEY_GENERATOR);\n            break;\n         case FileAnalyticsDateGroupBy.ACCESSED_DATE:\n            data = data = MapUtil.toMap<FileAnalyticsAgeDistribution, number>(\n                  this.filesCountByAgeData.ageDistributionByLastAccessedDate,\n                  this.AGE_DISTRIBUTION_KEY_GENERATOR);\n            break;\n         case FileAnalyticsDateGroupBy.MODIFIED_DATE:\n            data = data = MapUtil.toMap<FileAnalyticsAgeDistribution, number>(\n                  this.filesCountByAgeData.ageDistributionByModifiedDate,\n                  this.AGE_DISTRIBUTION_KEY_GENERATOR);\n            break;\n      }\n      this.chartData = this.fileAnalyticsChartService.parseFilesAgeDistributionChartData(data);\n   }\n\n   getGroupByLabel(group: FileAnalyticsDateGroupBy): string {\n      switch (group) {\n         case FileAnalyticsDateGroupBy.CREATED_DATE:\n            return VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.created.date.label\");\n         case FileAnalyticsDateGroupBy.ACCESSED_DATE:\n            return VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.accessed.date.label\");\n         case FileAnalyticsDateGroupBy.MODIFIED_DATE:\n            return VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.modified.date.label\");\n      }\n   }\n}\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnChanges} from \"@angular/core\";\nimport {ChartSectionData} from \"@component/chart/model/chart-section.data\";\nimport {IllustratedMessageType} from \"@component/illustrated-message/illustrated-message.component\";\nimport {FileAnalyticsDashboardService} from \"@generated/file-analytics-dashboard-service\";\nimport {FileAnalyticsFileTypeUsage} from \"@generated/file-analytics-file-type-usage\";\nimport {VsanFileServiceShare} from \"@generated/vsan-file-service-share\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ArrayUtils} from \"@util/array-util\";\nimport {Logger} from \"@util/logger\";\nimport {FileAnalyticsChartService} from \"../file-analytics-chart.service\";\n\n@Component({\n   templateUrl: \"file-analytics-files-count.html\",\n   styleUrls: [\"file-analytics-files-count.scss\", \"../file-analytics-common.scss\"],\n   selector: \"vsan-file-analytics-files-count\",\n})\nexport class FileAnalyticsFilesCountComponent implements OnChanges {\n\n   @Input()\n   fileShares: VsanFileServiceShare[];\n\n   loading: boolean = true;\n   errorMessage: string;\n   chartData: ChartSectionData[];\n\n   IllustratedMessageType: typeof IllustratedMessageType = IllustratedMessageType;\n\n   constructor(private fileAnalyticsDashboardService: FileAnalyticsDashboardService,\n         private fileAnalyticsChartService: FileAnalyticsChartService) {\n   }\n\n   ngOnChanges(): void {\n      if (!this.fileShares) {\n         return;\n      }\n      this.fetch();\n   }\n\n   @RefreshHandler\n   async fetch(): Promise<void> {\n      this.loading = true;\n      this.errorMessage = null;\n      this.chartData = null;\n      try {\n         const fileSharesUuidsBefore: string[] = this.fileShares.map(share => share.uuid);\n         // Load file type usages data\n         const fileTypeUsages: FileAnalyticsFileTypeUsage[] =\n               await this.fileAnalyticsDashboardService.queryFileTypeUsage(ManagedObject.contextObject,\n                     fileSharesUuidsBefore);\n         if (!ArrayUtils.equalsIgnoreOrder(fileSharesUuidsBefore, this.fileShares.map(share => share.uuid))) {\n            // The parent dashboard has already changed the selection of file shares, ignore processing this result.\n            Logger.debug(\"Ignoring queryFileTypeUsage result due to new selection.\");\n            return;\n         }\n         // Parse the fetched data to the pie chart sections\n         this.chartData = this.fileAnalyticsChartService.parseFilesTypeDistributionChartData(fileTypeUsages);\n      } catch (e) {\n         Logger.error(e);\n         this.errorMessage = e;\n      } finally {\n         this.loading = false;\n      }\n   }\n}\n"],"sourceRoot":"webpack:///"}