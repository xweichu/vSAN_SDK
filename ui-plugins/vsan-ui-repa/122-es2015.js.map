{"version":3,"sources":["./src/app/vsan/vm/io-diagnostics/dialog/IoLatencyPipe.ts","./src/app/vsan/vm/io-diagnostics/dialog/latency-export-dialog.html","./src/app/vsan/common/util/reactive-form-util.ts","./src/app/vsan/vm/io-diagnostics/dialog/latency-details-dialog.component.ts","./src/app/vsan/common/service/navigation/model/knowledge-base-id.ts","./src/app/vsan/vm/io-diagnostics/dialog/run-instance-dialog.html","./src/app/vsan/vm/io-diagnostics/dialog/run-instance-dialog.component.ts","./src/app/vsan/vm/io-diagnostics/dialog/io-diagnostics-dialog.module.ts","./src/app/vsan/vm/io-diagnostics/dialog/latency-details-dialog.html","./src/app/vsan/vm/io-diagnostics/dialog/latency-export-dialog.component.ts","./src/app/vsan/common/component/datagrid/filter/base-filter.ts","./src/app/vsan/common/util/dom-util.ts","./src/app/vsan/common/component/datagrid/tree-datagrid.ts"],"names":[],"mappings":"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","file":"122-es2015.js","sourcesContent":["/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {IoDiagnosticsUtil} from \"../io-diagnostics.util\";\n\n@Pipe({name: 'ioLatency'})\nexport class IoLatencyPipe implements PipeTransform {\n   transform(latency: number): string {\n      return IoDiagnosticsUtil.formatLatency(latency);\n   }\n}","<!--Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-default-prompt\n      [title]=\"'vsan.monitor.vm.iodiagnostics.export.dialog.title' | localized\"\n      [confirmText]=\"'vsan.monitor.vm.iodiagnostics.export.dialog.export' | localized\"\n      (onConfirm)=\"onConfirm()\">\n   <div class=\"dialog-container\">\n      <vsan-validation id=\"validation-message\"\n                       *ngIf=\"hasError\"\n                       [alert]=\"'vsan.monitor.vm.iodiagnostics.export.dialog.validation.noSelection' | localized\"\n                       (onClosed)=\"hasError = false\">\n      </vsan-validation>\n      <div>{{\"vsan.monitor.vm.iodiagnostics.export.dialog.description\" | localized}}</div>\n      <div>{{\"vsan.monitor.vm.iodiagnostics.export.dialog.label\" | localized}}</div>\n      <div class=\"checkbox-container\">\n         <clr-checkbox-container *ngFor=\"let vmdkIdentifier of vmdksIdentifiers\">\n            <clr-checkbox-wrapper>\n               <input type=\"checkbox\"\n                      clrCheckbox\n                      id=\"{{vmdkIdentifier.id}}\"\n                      name=\"{{vmdkIdentifier.id}}\"\n                      [ngModel]=\"selectedVmdksIdentifiers.get(vmdkIdentifier.id)\"\n                      (ngModelChange)=\"selectedVmdksIdentifiers.set(vmdkIdentifier.id, $event)\"/>\n               <label>{{vmdkIdentifier.name}}</label>\n            </clr-checkbox-wrapper>\n         </clr-checkbox-container>\n      </div>\n   </div>\n</vsan-default-prompt>","/* Copyright 2017 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {FormArray, FormControl, FormGroup} from \"@angular/forms\";\n\nexport class ReactiveFormUtil {\n\n   private static readonly FORM_CONTROLS_DELIMITER: string = \".\";\n\n   /*\n    * Trigger validation on all controls in a form group and mark them as touched to display errors\n    */\n   static validateAllFormFields = (formGroup: FormGroup): void => {\n      formGroup.markAsTouched();\n      Object.keys(formGroup.controls).forEach(field => {\n         const control = formGroup.get(field);\n         control.markAsTouched({ onlySelf: true });\n         if (control instanceof FormGroup) {\n            ReactiveFormUtil.validateAllFormFields(control);\n         } else if (control instanceof FormArray) {\n            control.controls.forEach(\n                  (childControl: FormGroup) => ReactiveFormUtil.validateAllFormFields(childControl));\n         } else if (control instanceof FormControl) {\n            ReactiveFormUtil.validateControls([control]);\n         }\n      });\n   };\n\n   static validateControls = (controls: FormControl[]): void => {\n      controls.forEach((control) => {\n         control.markAsTouched({onlySelf: true});\n         control.updateValueAndValidity({\n            onlySelf: false,\n            emitEvent: true\n         });\n      });\n   };\n\n   /**\n    * Trigger updateValueAndValidity() to call ValidatorFn and update validity of all controls in a form group.\n    */\n   static updateFormControlsValueAndValidity = (formGroup: FormGroup) => {\n      Object.keys(formGroup.controls).forEach(control => {\n         if (formGroup.get(control) instanceof FormControl) {\n            formGroup.get(control).updateValueAndValidity();\n         }\n      })\n   };\n\n   static getFormControlPath = (...parts: string[]): string => {\n      return parts.join(ReactiveFormUtil.FORM_CONTROLS_DELIMITER);\n   };\n}\n","/* Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {PipeFilter} from \"@component/datagrid/filter/pipe-filter\";\nimport {VsanIoLatencyType} from \"@generated/vsan-io-latency-type\";\nimport {HealthContext} from \"@navigation/context/health-context\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {StringUtil} from \"@util/string-util\";\nimport {VsanHealthTestId} from \"@util/vsan-health-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {IoDiagnosticsUtil} from \"../io-diagnostics.util\";\nimport {VirtualDiskLatency} from \"../model/virtual-disk-latency\";\nimport {IoLatencyPipe} from \"./IoLatencyPipe\";\nimport {LatencyDetailsModalContextData} from \"./latency-details-modal-context.data\";\n\n@Component({\n   templateUrl: \"latency-details-dialog.html\",\n   styleUrls: [\"latency-details-dialog.scss\"],\n   selector: \"vsan-latency-details-dialog\",\n})\nexport class LatencyDetailsDialogComponent implements OnInit {\n\n   clsRef: ManagedObject;\n   latencies: VirtualDiskLatency[];\n   title: string = \"\";\n   avgReadFilter: PipeFilter<any> = new PipeFilter<any>(new IoLatencyPipe(), \"avgRead\");\n   stddevReadFilter: PipeFilter<any> = new PipeFilter<any>(new IoLatencyPipe(), \"stddevRead\");\n   avgWriteFilter: PipeFilter<any> = new PipeFilter<any>(new IoLatencyPipe(), \"avgWrite\");\n   stddevWriteFilter: PipeFilter<any> = new PipeFilter<any>(new IoLatencyPipe(), \"stddevWrite\");\n\n   constructor(private navigationService: NavigationService) {\n   }\n\n   ngOnInit(): void {\n      const context: LatencyDetailsModalContextData = VsanUiUtils.getModalContext();\n      this.latencies = context.latenciesStats;\n      this.title = StringUtil.sentenceCase(this.latencies[0].typeLabel);\n      this.clsRef = context.clsRef;\n   }\n\n   getCause(): string {\n      let localizationKey: string = \"\";\n      switch (this.getLatencyType()) {\n         case VsanIoLatencyType.DOM_OWNER:\n         case VsanIoLatencyType.PERF_DOM_OWNER:\n         case VsanIoLatencyType.CAPACITY_DOM_OWNER:\n            localizationKey = \"vsan.monitor.vm.iodiagnostics.graph.edge.dialog.latency.domOwner.cause\";\n            break;\n         case VsanIoLatencyType.NETWORK:\n         case VsanIoLatencyType.PERF_NETWORK:\n         case VsanIoLatencyType.CAPACITY_NETWORK:\n            localizationKey = \"vsan.monitor.vm.iodiagnostics.graph.edge.dialog.latency.network.cause\";\n            break;\n         case VsanIoLatencyType.LSOM:\n         case VsanIoLatencyType.PERF_LSOM:\n         case VsanIoLatencyType.CAPACITY_LSOM:\n            localizationKey = \"vsan.monitor.vm.iodiagnostics.graph.edge.dialog.latency.lsom.cause\";\n            break;\n      }\n      return VsanUiUtils.getString(localizationKey);\n   }\n\n   getTroubleshoot(): string {\n      let localizationKey: string = \"\";\n      switch (this.getLatencyType()) {\n         case VsanIoLatencyType.NETWORK:\n         case VsanIoLatencyType.PERF_NETWORK:\n         case VsanIoLatencyType.CAPACITY_NETWORK:\n            localizationKey = \"vsan.monitor.vm.iodiagnostics.graph.edge.dialog.latency.network.troubleshoot\";\n            break;\n         case VsanIoLatencyType.LSOM:\n         case VsanIoLatencyType.PERF_LSOM:\n         case VsanIoLatencyType.CAPACITY_LSOM:\n            localizationKey = \"vsan.monitor.vm.iodiagnostics.graph.edge.dialog.latency.lsom.troubleshoot\";\n            break;\n      }\n      return VsanUiUtils.getString(localizationKey);\n   }\n\n   formatLatency(latency: number): string {\n      return IoDiagnosticsUtil.formatLatency(latency);\n   }\n\n   isNotDomOwner(): boolean {\n      return !IoDiagnosticsUtil.isDomOwner(this.latencies?.[0].type);\n   }\n\n   navigateToHealthPage = () => {\n      const context: HealthContext = {\n         selectedSubTestId: this.getHealthTestId(),\n      };\n      this.navigationService.navigateTo(PlatformExtension.CLUSTER_HEALTH, this.clsRef, context);\n      this.closeModal();\n   };\n\n   getHealthTestId(): VsanHealthTestId {\n      switch (this.getLatencyType()) {\n         case VsanIoLatencyType.NETWORK:\n         case VsanIoLatencyType.PERF_NETWORK:\n         case VsanIoLatencyType.CAPACITY_NETWORK:\n            return VsanHealthTestId.NETWORK_LATENCY_CHECK;\n            break;\n         case VsanIoLatencyType.LSOM:\n         case VsanIoLatencyType.PERF_LSOM:\n         case VsanIoLatencyType.CAPACITY_LSOM:\n            return VsanHealthTestId.PHYSICAL_DISK_OPERATION_HEALTH;\n            break;\n      }\n   }\n\n   getHealthActionLabel(): string {\n      let localizationKey: string = \"\";\n      switch (this.getLatencyType()) {\n         case VsanIoLatencyType.NETWORK:\n         case VsanIoLatencyType.PERF_NETWORK:\n         case VsanIoLatencyType.CAPACITY_NETWORK:\n            localizationKey = \"vsan.monitor.vm.iodiagnostics.graph.edge.dialog.latency.network.view\";\n            break;\n         case VsanIoLatencyType.LSOM:\n         case VsanIoLatencyType.PERF_LSOM:\n         case VsanIoLatencyType.CAPACITY_LSOM:\n            localizationKey = \"vsan.monitor.vm.iodiagnostics.graph.edge.dialog.latency.lsom.view\";\n            break;\n      }\n      return VsanUiUtils.getString(localizationKey);\n   }\n\n   private getLatencyType(): VsanIoLatencyType {\n      return this.latencies?.[0].type;\n   }\n\n   closeModal(): void {\n      VsanUiUtils.closeModalDialog();\n   }\n}","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n/**\n * IDs used in external KB link navigation\n */\nexport enum KnowledgeBaseId {\n   PRECHECK_PCP = \"83954\",\n   VIRTUAL_OBJECTS = \"2108319\",\n   UPGRADE = \"2148493\",\n   PERFORMANCE_DIAGNOSTICS = \"2148770\",\n   SUPPORT_INSIGHT = \"60206\",\n}\n","<!--Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-default-prompt\n      [title]=\"'vsan.monitor.vm.iodiagnostics.dialog.runInstance.title' | localized\"\n      [(alertMessage)]=\"errorMessage\"\n      [confirmText]=\"'vsan.monitor.vm.iodiagnostics.action.runInstance.action' | localized\"\n      [blockContent]=\"loading\"\n      [blockButton]=\"loading || isPrecheckFailed() || form.invalid\"\n      (onConfirm)=\"confirm()\">\n   <vsan-run-instance-validation *ngIf=\"precheckResult?.failedChecks?.length\"\n                                 [clsRef]=\"clsRef\"\n                                 [failedChecks]=\"precheckResult?.failedChecks\"\n                                 [onPerfServiceEnabled]=\"awaitThenReload\">\n   </vsan-run-instance-validation>\n   <form [formGroup]=\"form\" *ngIf=\"!isPrecheckFailed()\">\n      <clr-input-container class=\"horizontal-layout\">\n         <label>{{\"vsan.monitor.vm.iodiagnostics.dialog.runInstance.analyze.label\" | localized}}</label>\n         <input id=\"duration-number\"\n                [formControlName]=\"durationInputFormControl\"\n                type=\"number\"\n                name=\"duration-number\"\n                clrInput\n                [min]=\"MIN_MINUTES\"\n                [max]=\"MAX_MINUTES\"\n                (change)=\"setDuration(durationInputFormControl)\" />\n         <clr-control-helper>\n            {{\"vsan.monitor.vm.iodiagnostics.dialog.runInstance.analyze.description\" | localized}}\n         </clr-control-helper>\n         <clr-control-error>{{intervalConstraints}}</clr-control-error>\n      </clr-input-container>\n      <clr-range-container [clrRangeHasProgress]=\"true\">\n         <input id=\"duration-range\"\n                [formControlName]=\"durationSliderFormControl\"\n                type=\"range\"\n                clrRange\n                [min]=\"MIN_MINUTES\"\n                [max]=\"MAX_MINUTES\"\n                (change)=\"setDuration(durationSliderFormControl)\"\n                [step]=\"STEP_IN_MINUTES\"\n                [title]=\"durationInMinutes\"/>\n         <clr-control-helper class=\"interval-text\">\n            <div>{{intervalMinConstraint}}</div>\n            <div>{{intervalMaxConstraint}}</div>\n         </clr-control-helper>\n      </clr-range-container>\n   </form>\n</vsan-default-prompt>\n","/* Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {IoDiagnosticsService} from \"@generated/io-diagnostics-service\";\nimport {VsanIODiagnosticsPrecheckResult} from \"@generated/vsan-i-o-diagnostics-precheck-result\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {ReactiveFormUtil} from \"@util/reactive-form-util\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {RunInstanceModalContextData} from \"./run-instance-modal-context.data\";\n\n@Component({\n   templateUrl: \"run-instance-dialog.html\",\n   styleUrls: [\"run-instance-dialog.scss\"],\n   selector: \"vsan-run-instance-dialog\",\n})\nexport class RunInstanceDialogComponent implements OnInit {\n\n   @ErrorMessage()\n   errorMessage: string;\n\n   @LoadingIndicator()\n   loading: boolean;\n\n   clsRef: ManagedObject;\n   vmRef: ManagedObject;\n   precheckResult: VsanIODiagnosticsPrecheckResult;\n\n   MIN_MINUTES: number = 5;\n   MAX_MINUTES: number = 60;\n   STEP_IN_MINUTES: number = 5;\n   durationInMinutes: number = 5;\n\n   form: FormGroup;\n   durationInputFormControl: string = \"duration-number\";\n   durationSliderFormControl: string = \"duration-range\";\n\n   constructor(private ioDiagnosticsService: IoDiagnosticsService,\n         private taskService: TaskMonitorService,\n         private formBuilder: FormBuilder) {\n   }\n\n   ngOnInit(): void {\n      this.form = this.formBuilder.group({\n         [this.durationInputFormControl]: new FormControl(this.durationInMinutes, [\n            Validators.required,\n            Validators.min(this.MIN_MINUTES),\n            Validators.max(this.MAX_MINUTES),\n         ]),\n         [this.durationSliderFormControl]: new FormControl(this.durationInMinutes, [\n            Validators.required,\n            Validators.min(this.MIN_MINUTES),\n            Validators.max(this.MAX_MINUTES),\n         ]),\n      });\n      const context: RunInstanceModalContextData = VsanUiUtils.getModalContext();\n      this.clsRef = context.clsRef;\n      this.vmRef = context.vmRef;\n      this.runPrecheck();\n   }\n\n   setDuration(controlName: string): void {\n      ReactiveFormUtil.validateAllFormFields(this.form);\n      const currentInput: AbstractControl = this.form.get(controlName);\n      if (currentInput.invalid) {\n         return;\n      }\n      this.durationInMinutes = VsanUiUtils.toNumber(currentInput.value);\n      this.form.get(this.durationInputFormControl).setValue(this.durationInMinutes);\n      this.form.get(this.durationSliderFormControl).setValue(this.durationInMinutes);\n   }\n\n   @Loader({rethrow: true})\n   async runPrecheck(): Promise<void> {\n      this.precheckResult = await this.ioDiagnosticsService.runIODiagnosticsPrecheck(this.clsRef, this.vmRef);\n   }\n\n   @Loader({rethrow: true})\n   async confirm(): Promise<void> {\n      if (this.form.invalid) {\n         return;\n      }\n      const durationInSeconds: number = this.durationInMinutes * VsanDateTimeUtils.SECONDS_IN_MINUTE;\n      const taskRef: ManagedObject =\n            await this.ioDiagnosticsService.runIoDiagnosticsInstance(this.clsRef, this.vmRef, durationInSeconds);\n      VsanUiUtils.closeModalDialog(taskRef);\n   }\n\n   get intervalMinConstraint(): string {\n      return VsanUiUtils.getString(\"vsan.monitor.vm.iodiagnostics.dialog.runInstance.constraints.min.helperText\",\n            this.MIN_MINUTES);\n   }\n\n   get intervalMaxConstraint(): string {\n      return VsanUiUtils.getString(\"vsan.monitor.vm.iodiagnostics.dialog.runInstance.constraints.max.helperText\",\n            this.MAX_MINUTES);\n   }\n\n   get intervalConstraints(): string {\n      return VsanUiUtils.getString(\"vsan.monitor.vm.iodiagnostics.dialog.runInstance.analyze.interval.error\",\n            this.MIN_MINUTES, this.MAX_MINUTES);\n   }\n\n   isPrecheckFailed(): boolean {\n      return this.precheckResult && !this.precheckResult.supported;\n   }\n\n   awaitThenReload = (taskRef: ManagedObject) => {\n      this.taskService.getAwaitResult(taskRef)\n            .then(() => this.runPrecheck());\n   };\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RunInstanceDialogComponent} from \"./run-instance-dialog.component\";\nimport {LatencyDetailsDialogComponent} from \"./latency-details-dialog.component\";\nimport {IoDiagnosticsCommonModule} from \"../io-diagnostics-common.module\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {LatencyExportDialogComponent} from \"./latency-export-dialog.component\";\nimport {IoLatencyPipe} from \"./IoLatencyPipe\";\n\nconst routes: Routes = [\n   {\n      path: \"runInstance\",\n      component: RunInstanceDialogComponent,\n   },\n   {\n      path: \"latencyDetails\",\n      component: LatencyDetailsDialogComponent,\n   },\n   {\n      path: \"latencyExport\",\n      component: LatencyExportDialogComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      PromptModule,\n      CommonPipeModule,\n      CommonDirectiveModule,\n      FormsModule,\n      IoDiagnosticsCommonModule,\n      ReactiveFormsModule,\n      RouterModule.forChild(routes),\n   ],\n   declarations: [\n      RunInstanceDialogComponent,\n      LatencyDetailsDialogComponent,\n      LatencyExportDialogComponent,\n      IoLatencyPipe,\n   ],\n})\nexport class IoDiagnosticsDialogModule {\n}\n","<!--Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-default-prompt [title]=\"title\"\n                     [cancelText]=\"null\"\n                     (onConfirm)=\"closeModal()\"\n                     [additionalButtonText]=\"isNotDomOwner() ? getHealthActionLabel() : null\"\n                     (onAdditionalAction)=\"navigateToHealthPage()\">\n   <clr-datagrid #dataGrid class=\"datagrid-compact\">\n      <clr-dg-column *ngIf=\"isNotDomOwner()\"\n                     [clrDgField]=\"'domComponentUuid'\"\n                     vsan-show-title\n                     class=\"small-column\">\n         {{\"vsan.monitor.vm.iodiagnostics.grid.column.domComponentUuid\" | localized}}\n      </clr-dg-column>\n      <clr-dg-column [clrDgField]=\"'avgRead'\">\n         {{\"vsan.monitor.vm.iodiagnostics.grid.column.readLatencyAvg\" | localized}}\n         <clr-dg-string-filter [clrDgStringFilter]=\"avgReadFilter\"></clr-dg-string-filter>\n      </clr-dg-column>\n      <clr-dg-column [clrDgField]=\"'stddevRead'\">\n         {{\"vsan.monitor.vm.iodiagnostics.grid.column.readLatencyStddev\" | localized}}\n         <clr-dg-string-filter [clrDgStringFilter]=\"stddevReadFilter\"></clr-dg-string-filter>\n      </clr-dg-column>\n      <clr-dg-column [clrDgField]=\"'avgWrite'\">\n         {{\"vsan.monitor.vm.iodiagnostics.grid.column.writeLatencyAvg\" | localized}}\n         <clr-dg-string-filter [clrDgStringFilter]=\"avgWriteFilter\"></clr-dg-string-filter>\n      </clr-dg-column>\n      <clr-dg-column [clrDgField]=\"'stddevWrite'\">\n         {{\"vsan.monitor.vm.iodiagnostics.grid.column.writeLatencyStddev\" | localized}}\n         <clr-dg-string-filter [clrDgStringFilter]=\"stddevWriteFilter\"></clr-dg-string-filter>\n      </clr-dg-column>\n      <clr-dg-row *clrDgItems=\"let latency of latencies\" [clrDgItem]=\"latency\">\n         <clr-dg-cell *ngIf=\"isNotDomOwner()\" vsan-show-title>{{latency.domComponentUuid}}</clr-dg-cell>\n         <clr-dg-cell class=\"right-align-cell\">{{latency.avgRead | ioLatency}}</clr-dg-cell>\n         <clr-dg-cell class=\"right-align-cell\">{{latency.stddevRead | ioLatency}}</clr-dg-cell>\n         <clr-dg-cell class=\"right-align-cell\">{{latency.avgWrite | ioLatency}}</clr-dg-cell>\n         <clr-dg-cell class=\"right-align-cell\">{{latency.stddevWrite | ioLatency}}</clr-dg-cell>\n      </clr-dg-row>\n   </clr-datagrid>\n   <section class=\"cause-section\">\n      <h4 class=\"bold\">{{\"vsan.monitor.vm.iodiagnostics.graph.edge.dialog.latency.cause\" | localized}}</h4>\n      <div>{{getCause()}}</div>\n   </section>\n   <section *ngIf=\"isNotDomOwner()\" class=\"troubleshoot-section\">\n      <h4 class=\"bold\">{{\"vsan.monitor.vm.iodiagnostics.graph.edge.dialog.latency.troubleshoot\" | localized}}</h4>\n      <div>{{getTroubleshoot()}}</div>\n   </section>\n</vsan-default-prompt>","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {LatencyExportModalContextData} from \"./latency-export-modal-context.data\";\nimport {VirtualDiskIdentifier} from \"../model/virtual-disk-identifier\";\n\n@Component({\n   templateUrl: \"latency-export-dialog.html\",\n   styleUrls: [\"latency-export-dialog.scss\"],\n   selector: \"vsan-latency-export-dialog\",\n})\nexport class LatencyExportDialogComponent implements OnInit {\n   vmdksIdentifiers: VirtualDiskIdentifier[] = [];\n   selectedVmdksIdentifiers: Map<string, boolean> = new Map<string, boolean>();\n   hasError: boolean = false;\n\n   ngOnInit(): void {\n      const context: LatencyExportModalContextData = VsanUiUtils.getModalContext();\n      this.vmdksIdentifiers = context.vmdksIdentifiers;\n      context.vmdksIdentifiers.forEach(vmdkIdentifier => {\n         this.selectedVmdksIdentifiers.set(vmdkIdentifier.id, true);\n      });\n   }\n\n   onConfirm(): void {\n      this.hasError = false;\n      const result: string[] = [];\n      this.selectedVmdksIdentifiers.forEach((value: boolean, key: string) => {\n         if (value) {\n            result.push(key);\n         }\n      });\n      if (VsanUiUtils.isEmpty(result)) {\n         this.hasError = true;\n         return;\n      }\n      VsanUiUtils.closeModalDialog(result);\n   }\n}","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {Filter, TreeDatagridRow} from \"../tree-datagrid\";\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\n\n/**\n * Abstract filter class that needs to be extended in order to implement custom filtration.\n * The class has a single abstract method that takes an object of type T and returns its\n * string representation.\n */\nexport class BaseFilter<T> implements ClrDatagridStringFilterInterface<T>, Filter {\n\n   accepts(data: T, search: string): boolean {\n      // Handle correctly TreeDatagrid components\n      if (data instanceof TreeDatagridRow) {\n         data = data.data;\n      }\n\n      let label: string = this.stringify(data);\n      if (label) {\n         // Compare ignoring the case\n         return label.toLowerCase().indexOf(search.toLowerCase()) != -1;\n      } else {\n         return false;\n      }\n   }\n\n   match(data: T, search: string): boolean {\n      return this.accepts(data, search);\n   }\n\n   protected stringify(data: T): string  {\n      return data + \"\";\n   }\n\n}\n\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n/**\n * Util methods for manipulating DOM\n */\nexport class DomUtil {\n   static onClick(element: HTMLElement, callback: () => any): void {\n      element.addEventListener(\"click\", () => callback());\n   }\n\n   static onEnterKeyUp(element: HTMLElement, callback: () => any): void {\n      element.addEventListener(\"keyup\", (event) => {\n         // Handle \"Enter\" key on the keyboard\n         if (event.keyCode === 13) {\n            callback();\n         }\n      });\n   }\n\n   static onMouseOver(element: HTMLElement, callback: () => any): void {\n      element.addEventListener(\"mouseover\", () => callback());\n   }\n\n   static onMouseOut(element: HTMLElement, callback: () => any): void {\n      element.addEventListener(\"mouseout\", () => callback());\n   }\n\n   /**\n    * Causes the DOM elements matching the given selector to be redrawn by the browser's layout enging.\n    * This is useful when the browser fails to render some elements correctly and by redrawing them, this is fixed.\n    */\n   static redraw(selector: string): void {\n      setTimeout(() => {\n         $(selector).hide().show(0);\n      }, 100);\n   }\n\n   static domElementExists(elementName: string): boolean {\n      return !!document.getElementById(elementName);\n   }\n}","/* Copyright 2016 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {BehaviorSubject} from \"rxjs\";\nimport {ClrDatagridFilterInterface} from \"@clr/angular\";\n\n/**\n * Hierarchical data provider.\n * This is a additional structure to the Clarity Datagrid that supports hierarchical data rendering.\n */\nexport class TreeDatagrid {\n\n   public static forChildProperty(childField: string, rowData?: any[]) {\n      return new TreeDatagrid(item => item[childField], rowData);\n   }\n\n   /**\n    * The data objects that are to be rendered as first-level rows.\n    */\n   protected roots: any[];\n\n   /**\n    * The flat row structure consisting of the root objects and their children\n    * in case the parents are expanded. Sorting and filtering are reflected here.\n    */\n   protected content: TreeDatagridRow[];\n\n   /**\n    * List of filters to be applied on the data.\n    */\n   protected filters: TreeFilter[] = [];\n\n   /**\n    * The comparator to be used to sort the items and their children.\n    */\n   public comparator: (item1: any, item2: any) => number;\n\n   /**\n    * Sorting direction.\n    */\n   public sortAscending: boolean;\n\n   /**\n    * @param childItems lambda for extracting the children of a given data object\n    * @param rootItems (optional) the initial data objects\n    */\n   constructor(private childItems: (parent: any) => any[], rootItems?: any[]) {\n      this.rootItems = rootItems;\n   }\n\n   /**\n    * Removes all items.\n    */\n   public clear = () => this.rootItems = [];\n\n   /**\n    * Sets the given data objects as content.\n    */\n   public refreshGrid = (rowData: any[]) => this.rootItems = rowData;\n\n   public set rootItems(value: any[]) {\n      this.roots = value ? value : [];\n      this.content = this.flatten(this.roots);\n   }\n\n   /**\n    * root data objects\n    */\n   public get rootItems(): any[] {\n      return this.roots;\n   }\n\n   /**\n    * The flat row structure consisting of the root objects and their children\n    * in case the parents are expanded. Sorting and filtering are reflected here.\n    */\n   public get rows(): TreeDatagridRow[] {\n      return this.content;\n   }\n\n   /**\n    * Registers a new filter in the data provider.\n    * Initially the filter will accept all items.\n    * The consumer can assign a predicate to the TreeFilter object\n    * to add filtering rule. All registered filters' predicates are\n    * evaluated using AND operator.\n    */\n   public registerFilter(): TreeFilter {\n      let filter: TreeFilter = new TreeFilter(() => this.content = this.flatten(this.rootItems));\n      this.filters.push(filter);\n      return filter;\n   }\n\n   public unregisterFilter(value: TreeFilter) {\n      let index: number = this.filters.indexOf(value);\n      if (index != -1) {\n         this.filters.splice(index, 1);\n      }\n   }\n\n   /**\n    * Applies sorting comparator and direction for the data provider.\n    */\n   public sort(comparator: (item1: any, item2: any) => number, ascending: boolean = true) {\n      this.comparator = comparator;\n      this.sortAscending = ascending;\n\n      // refresh content, will expand all nodes\n      this.content = this.flatten(this.rootItems);\n   }\n\n   public collapseAll = () => this.rows.forEach(r => this.collapse(r));\n\n   public expandAll = () => this.rows.forEach(r => this.expand(r));\n\n   protected expand(row: TreeDatagridRow) {\n      if (row.isExpanded) {\n         // already expanded\n         return;\n      }\n\n      let rowIndex = this.content.indexOf(row);\n      if (rowIndex == -1) {\n         // row is filtered out\n         return;\n      }\n\n      let flattenedChildren: TreeDatagridRow[] = this.flatten(this.childItems(row.data), row.depth + 1);\n      if (flattenedChildren.length > 0) {\n         this.content.splice(rowIndex + 1, 0, ... flattenedChildren);\n      }\n\n      row.isExpanded = true;\n   }\n\n   protected collapse(row: TreeDatagridRow) {\n      if (!row.isExpanded) {\n         // already collapsed\n         row.isExpanded = false;\n         return;\n      }\n\n      let rowIndex = this.content.indexOf(row);\n      if (rowIndex == -1) {\n         // row is filtered out\n         return;\n      }\n\n      let removeCount: number = 0;\n      for (let i = rowIndex + 1; i < this.content.length && row.depth < this.content[i].depth; i++) {\n         removeCount ++;\n      }\n\n      this.content.splice(rowIndex + 1, removeCount);\n      row.isExpanded = false;\n   }\n\n   // returns flattened list of the specified items and their children (and their children);\n   // sorting and filter are applied;\n   // items are returned in expanded state\n   protected flatten(items: any[], depth: number = 0, parent?: any): TreeDatagridRow[] {\n      if (!items) {\n         return [];\n      }\n\n      let sortedItems: any[] = [... items];\n      if (this.comparator) {\n         sortedItems.sort((item1: any, item2: any) => (this.sortAscending ? 1 : -1) * this.comparator(item1, item2));\n      }\n\n      let result: TreeDatagridRow[] = [];\n\n      for (let item of sortedItems) {\n\n         let childItems: any[] = this.childItems(item);\n\n         // flattened children, including their children\n         let children: TreeDatagridRow[] = this.flatten(childItems, depth + 1, item);\n\n         let filteredOut: boolean = false;\n         for (let filter of this.filters) {\n            // filter out items only if the filter is not applicable for the item or it's parent\n            const matchFilter: boolean = filter.predicate(item) || (!!parent && filter.predicate(parent));\n            if (!matchFilter) {\n               filteredOut = true;\n            }\n         }\n         if (!filteredOut || children.length > 0) {\n            let row: TreeDatagridRow = new TreeDatagridRow();\n            row.data = item;\n            row.toggle = () => row.isExpanded ? this.collapse(row) : this.expand(row);\n            row.depth = depth;\n            row.isExpanded = true;\n            row.isExpandable = childItems && childItems.length > 0;\n\n            result.push(row, ... children);\n         }\n      }\n\n      return result;\n   }\n\n}\n\n/**\n * Represents a single row in a flattened tree data provider.\n */\nexport class TreeDatagridRow {\n\n   /**\n    * The data object for the row\n    */\n   public data: any;\n\n   /**\n    * Will be true if the row has children\n    */\n   public isExpandable: boolean;\n\n   /**\n    * Will be true if the row is currently expanded\n    */\n   public isExpanded: boolean;\n\n   /**\n    * Will flip the row's expanded/collapsed state\n    */\n   public toggle: () => void;\n\n   /**\n    * The nesting level the row is rendered at\n    */\n   public depth: number;\n\n}\n\nexport interface Filter  {\n   match(data: any, filter:string): boolean;\n}\n\n/**\n * Allows specifying filtering predicate for the data provider.\n * @see TreeDatagrid.registerFilter\n */\nexport class TreeFilter implements ClrDatagridFilterInterface<any> {\n\n   private _predicate: (item: any) => boolean;\n   changes = new BehaviorSubject<boolean>(false);\n\n   constructor(private apply: () => void) {\n      this.clear();\n   }\n\n   public clear() {\n      this._predicate = (item: any) => true;\n      this.apply();\n   }\n\n   public set predicate(predicate: (item: any) => boolean) {\n      if (!predicate) {\n         this.clear();\n      } else {\n         this._predicate = predicate;\n         this.apply();\n      }\n   }\n\n   public get predicate(): (item: any) => boolean {\n      return this._predicate;\n   }\n\n   // Used by clarity filter\n   isActive(): boolean {\n      return this.changes.getValue();\n   }\n\n   // Used by clarity filter\n   accepts(val: any): boolean {\n      return true;\n   }\n}"],"sourceRoot":"webpack:///"}