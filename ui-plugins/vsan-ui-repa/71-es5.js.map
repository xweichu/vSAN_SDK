{"version":3,"sources":["webpack:///src/app/vsan/common/component/datagrid/comparator/pipe-comparator.ts","webpack:///src/app/vsan/file-analytics/file-dashboard/file-dashboard.component.ts","webpack:///src/app/generated/file-analytics-date-group-by.ts","webpack:///src/app/generated/file-analytics-age-distribution.ts","webpack:///src/app/vsan/file-analytics/file-dashboard/file-analytics-files-count.html","webpack:///src/app/vsan/common/component/chart/column-line-chart/column-line-chart.data.ts","webpack:///src/app/vsan/file-analytics/component/file-analytics-last-scan.component.ts","webpack:///src/app/vsan/common/component/chart/clarity-chart-colors.ts","webpack:///src/app/vsan/file-analytics/file-analytics-chart.service.ts","webpack:///src/app/vsan/common/component/chart/histogram-chart/histogram-column-chart.data.ts","webpack:///src/app/vsan/file-analytics/file-dashboard/file-analytics-files-by-size.component.ts","webpack:///src/app/vsan/common/component/datagrid/comparator/numeric-comparator.ts","webpack:///src/app/vsan/common/component/datagrid/comparator/base-comparator.ts","webpack:///src/app/vsan/file-analytics/file-dashboard/file-dashboard.html","webpack:///src/app/vsan/file-analytics/file-dashboard/file-analytics-files-by-age.html","webpack:///src/app/vsan/file-analytics/component/file-analytics-last-scan.html","webpack:///src/app/generated/file-analytics-size-distribution.ts","webpack:///src/app/vsan/common/component/chart/histogram-chart/histogram-column-chart.component.ts","webpack:///src/app/vsan/common/component/datagrid/filter/object-filter.ts","webpack:///src/app/vsan/file-analytics/file-dashboard/file-dashboard.module.ts","webpack:///src/app/vsan/common/component/chart/histogram-chart/histogram-column-chart.html","webpack:///src/app/vsan/common/component/datagrid/filter/base-filter.ts","webpack:///src/app/vsan/file-analytics/file-dashboard/file-analytics-files-by-size.html","webpack:///src/app/vsan/file-analytics/file-dashboard/file-analytics-files-by-age.component.ts","webpack:///src/app/vsan/file-analytics/file-dashboard/file-analytics-files-count.component.ts"],"names":["PipeComparator","pipe","dataField","a","b","transform","stringify","toLowerCase","localeCompare","FileDashboardComponent","cdRef","FILE_ANALYTICS_FILES_BY_AGE","FILE_ANALYTICS_FILES_COUNT","FILE_ANALYTICS_FILES_BY_SIZE","IllustratedMessageType","clusterRef","contextObject","getFileDashboardCards","result","Map","set","LEFT","RIGHT","cardView","FILE_DASHBOARD_ANALYTICS","detectChanges","FileAnalyticsDateGroupBy","FileAnalyticsAgeDistribution","ColumnLineChartData","_seriesName","_values","_id","_color","BLUE","getColor","_tooltipData","_tooltipTitles","type","name","seriesName","id","data","values","color","custom","tooltipValues","tooltipData","tooltipTitles","FileAnalyticsLastScanComponent","permissionService","taskService","fileAnalyticsConfigService","scanInfoReceived","onError","scanInProgress","loading","hasEditPermission","awaitThenReload","taskRef","getAwaitResult","then","fetchScanStatus","e","emit","hasPermissions","EDIT_CLUSTER","err","getFileAnalyticsLastScan","scanStatus","startFileAnalyticsIndexing","ClarityChartColors","chartColors","VIOLET","ORANGE","MAGENTA","GREY_COOL","GREEN_WARM","NAVY","YELLOW","PINK","TEAL","PURPLE","FileAnalyticsChartService","size","totalFilesCount","getTotalFilesCount","recentData","getRecentFiles","push","oneMonthData","getOneMonthOldFiles","threeMonthsData","getThreeMonthsOldFiles","sixMonthsData","getSixMonthsOldFiles","oneYearData","getOlderThanOneYearFiles","getSmallestFiles","getOneToTenMbFiles","getTenToHundredMbFiles","getHundredMbToOneGbFiles","getBiggerThanOneGbFiles","isEmpty","map","shareData","index","getShareGrowthData","getClarityColorAtIndex","getDailyCapacityTrendingData","fileSharesModels","sections","fileShare","getFileShareQuotaSection","filesCount","get","less_than_one_month","isUnset","getString","getFileCountCommonLabelData","one_month_to_three_months","three_months_to_six_months","six_months_to_one_year","more_than_one_year","less_than_a_mb","one_mb_to_ten_mb","ten_mb_to_hundred_mb","hundred_mb_to_one_gb","more_than_one_gb","value","toString","getPercentage","asPercentage","fileTypeUsages","totalBytes","fileTypeUsage","usageInBytes","reduce","filter","sort","sectionData","fileTypeLabel","tooltipValue","getFileTypeDistributionLabelData","totalInBytes","usageValue","formatFileSize","length","warn","growthData","sizeData","growth","shareSize","getGrowthDataLabel","shareName","getShareGrowthTooltipData","getShareGrowthTooltipLabels","growthPercentage","growthValue","applyFormatting","date","SHORT_DATE","dailyCapacity","Math","abs","sharesTotalCapacity","capacityAdded","capacityRemoved","getCapacityTrendingTooltipData","dailyData","CAPACITY_ADDED_PROPERTY","CAPACITY_REMOVED_PROPERTY","TOTAL_CAPACITY_PROPERTY","getSectionColorBasedOnQuotaUsage","currentUsage","fromPercentage","softQuotaPercentage","hardQuota","currentUsageChartSection","customSectionColor","freeSpace","hardQuotaRemainderChartSection","getFadedColor","usageOverHardQuotaPercentage","FILE_SHARE_QUOTA_RED_THRESHOLD","RED","YELLOW_WARM","HistogramColumnChartData","_label","_value","_tooltipLabel","_labelData","tooltipLabel","y","labelData","FileAnalyticsFilesBySizeComponent","dashboardService","fileAnalyticsChartService","chartColor","SIZE_DISTRIBUTION_KEY_GENERATOR","propKey","fileShares","fetch","errorMessage","chartData","fileSharesUuidsBefore","share","uuid","queryFilesBySize","equalsIgnoreOrder","debug","filesCountBySizeData","toMap","parseFileSizeDistributionChartData","error","NumericComparator","BaseComparator","field","Error","compareValue","FileAnalyticsSizeDistribution","HistogramColumnChartComponent","highchartsService","highchartsThemeService","refWatcher","showLegend","watchSubscriptionRef","whenThemeChanged","subscribe","theme","onThemeChanged","render","changes","applyHighchartOptions","populateHighchartSeries","update","columns","highchartOptions","getColumnHistogramChartOptions","yAxis","title","text","valuesTitle","xAxis","categories","seriesData","label","lastColumnTitle","align","margin","legend","enabled","getHistogramSeriesData","series","chartElement","chart","renderTo","nativeElement","applyScreenReaderMessage","watchChartRef","attachTestingData","toSeries","testData","getHistogramTestingTooltipData","ObjectFilter","FileDashboardModule","BaseFilter","search","indexOf","accepts","FileAnalyticsFilesByAgeComponent","Object","groupBy","CREATED_DATE","AGE_DISTRIBUTION_KEY_GENERATOR","queryFilesByAge","filesCountByAgeData","updateChartData","ageDistributionByCreatedDate","ACCESSED_DATE","ageDistributionByLastAccessedDate","MODIFIED_DATE","ageDistributionByModifiedDate","parseFilesAgeDistributionChartData","group","FileAnalyticsFilesCountComponent","fileAnalyticsDashboardService","queryFileTypeUsage","parseFilesTypeDistributionChartData"],"mappings":"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","file":"71-es5.js","sourcesContent":["/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {PipeTransform} from \"@angular/core\";\nimport {BaseComparator} from \"@component/datagrid/comparator/base-comparator\";\n\n/**\n * Extends BaseComparator by allowing the consumer to provide a pipe that will be used in the filtering process.\n */\nexport class PipeComparator<T> extends BaseComparator<T> {\n\n   constructor(private pipe: PipeTransform, private dataField: string = null) {\n      super();\n   }\n\n   protected compareValue(a: T, b: T): number {\n      return this.pipe.transform(this.stringify(a, this.dataField)).toLowerCase()\n            .localeCompare(this.pipe.transform(this.stringify(b, this.dataField)).toLowerCase());\n   }\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {\n   AfterViewInit,\n   ChangeDetectorRef,\n   Component,\n   Input,\n   QueryList,\n   ViewChildren} from \"@angular/core\";\nimport {DraggableCardDirective} from \"@component/drag-and-drop/draggable-card.directive\";\nimport {CardName, CardView} from \"@component/drag-and-drop/card-view\";\nimport {CardContainer, DragCardPosition} from \"@component/drag-and-drop/drag-card-position\";\nimport {VsanFileServiceShare} from \"@generated/vsan-file-service-share\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {IllustratedMessageType} from \"@component/illustrated-message/illustrated-message.component\";\n\n@Component({\n   templateUrl: \"file-dashboard.html\",\n   styleUrls: [\"file-dashboard.scss\"],\n   selector: \"vsan-file-dashboard\",\n})\nexport class FileDashboardComponent implements AfterViewInit {\n   // File analytics \"File dashboard\" cards\n   readonly FILE_ANALYTICS_FILES_BY_AGE: string = \"fileAnalyticsFilesByAge\";\n   readonly FILE_ANALYTICS_FILES_COUNT: string = \"fileAnalyticsFilesCount\";\n   readonly FILE_ANALYTICS_FILES_BY_SIZE: string = \"fileAnalyticsFilesBySize\";\n   IllustratedMessageType: typeof IllustratedMessageType = IllustratedMessageType;\n\n   @Input()\n   fileShares: VsanFileServiceShare[];\n\n   // The service cards are defined inside templates, so they can be dragged\n   @ViewChildren(DraggableCardDirective)\n   fileDashboardTemplates: QueryList<DraggableCardDirective>;\n\n   cardView: CardView;\n\n   clusterRef: ManagedObject = ManagedObject.contextObject;\n\n   constructor(private cdRef: ChangeDetectorRef) {}\n\n   ngAfterViewInit(): void {\n      this.cardView = new CardView(CardName.FILE_DASHBOARD_ANALYTICS, this.getFileDashboardCards);\n      // For some reason the templates cannot be displayed without this manual change detection.\n      this.cdRef.detectChanges();\n   }\n\n   private getFileDashboardCards = (): Map<string, DragCardPosition> => {\n      const result: Map<string, DragCardPosition> = new Map<string, DragCardPosition>();\n      result.set(this.FILE_ANALYTICS_FILES_BY_AGE, new DragCardPosition(CardContainer.LEFT, 0));\n      result.set(this.FILE_ANALYTICS_FILES_COUNT, new DragCardPosition(CardContainer.LEFT, 1));\n      result.set(this.FILE_ANALYTICS_FILES_BY_SIZE, new DragCardPosition(CardContainer.RIGHT, 0));\n      return result;\n   };\n}\n","export enum FileAnalyticsDateGroupBy {\n   CREATED_DATE = \"created_date\",\n   ACCESSED_DATE = \"last_accessed_date\",\n   MODIFIED_DATE = \"last_modified_date\",\n}\n","export enum FileAnalyticsAgeDistribution {\n   less_than_one_month = \"less_than_one_month\",\n   one_month_to_three_months = \"one_month_to_three_months\",\n   three_months_to_six_months = \"three_months_to_six_months\",\n   six_months_to_one_year = \"six_months_to_one_year\",\n   more_than_one_year = \"more_than_one_year\",\n}\n","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"card\">\n   <div class=\"card-header cdk-drag-handle\" cdkDragHandle>\n      <span class=\"card-title\" vsan-show-title>\n         {{\"vsan.cluster.monitor.file.analytics.files.count\" | localized}}\n      </span>\n   </div>\n   <div class=\"card-block\">\n      <span id=\"loading-chart\" *ngIf=\"loading\" class=\"spinner spinner-md central-spinner\"></span>\n      <vsan-validation *ngIf=\"errorMessage\" [alert]=\"errorMessage\"></vsan-validation>\n      <ng-container *ngIf=\"!loading && !errorMessage\">\n         <vsan-illustrated-message\n               *ngIf=\"!chartData?.length\"\n               [type]=\"IllustratedMessageType.FILTER_NO_RESULT\"\n               [message]=\"'vsan.cluster.monitor.file.analytics.report.no.data.label' | localized\">\n         </vsan-illustrated-message>\n         <vsan-pie-chart *ngIf=\"chartData?.length\"\n                         [sections]=\"chartData\"\n                         [showTotal]=\"true\"\n                         [chartSize]=\"300\"\n                         [totalLabel]=\"'vsan.cluster.monitor.file.analytics.files.count.totalUsage.label' | localized\"\n                         [innerSize]=\"'60%'\"\n                         [startAngle]=\"-45\">\n         </vsan-pie-chart>\n      </ng-container>\n   </div>\n</div>","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {ClarityColors} from \"@util/clarity-colors\";\n\n/**\n * Represents the data model to be used to show a single line, or columns in a chart.\n */\nexport class ColumnLineChartData {\n\n   constructor(private _seriesName: string,\n         private _values: number[],\n         private _id: string,\n         private _color: string = ClarityColors.BLUE.getColor(),\n         private _tooltipData: Map<string, string[]>,\n         private _tooltipTitles: string[] = null) {\n   }\n\n   get seriesName(): string {\n      return this._seriesName;\n   }\n\n   /**\n    * The line's data points\n    */\n   get values(): number[] {\n      return this._values;\n   }\n\n   /**\n    * The line's color.\n    */\n   get color(): string {\n      return this._color;\n   }\n\n   get tooltipData(): Map<string, string[]> {\n      return this._tooltipData;\n   }\n\n   /**\n    * The tooltip title text in the chart tooltip\n    */\n   get tooltipTitles(): string[] {\n      return this._tooltipTitles;\n   }\n\n   get id(): string {\n      return this._id;\n   }\n\n   toSeries(type: string): any {\n      return {\n         type: type,\n         name: this.seriesName,\n         id: this.id,\n         data: this.values,\n         color: this.color,\n         custom: {\n            tooltipValues: this.tooltipData,\n            tooltipTitles: this.tooltipTitles,\n         },\n      };\n   }\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, EventEmitter, OnInit, Output} from \"@angular/core\";\nimport {FileAnalyticsScanStatusInfo} from \"@generated/file-analytics-scan-status-info\";\nimport {Privileges} from \"@generated/privileges\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {FileAnalyticsConfigService} from \"@generated/file-analytics-config-service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\n\n@Component({\n   templateUrl: \"file-analytics-last-scan.html\",\n   styleUrls: [\"file-analytics-last-scan.scss\"],\n   selector: \"file-analytics-last-scan\",\n})\nexport class FileAnalyticsLastScanComponent implements OnInit {\n\n   @Output()\n   scanInfoReceived: EventEmitter<FileAnalyticsScanStatusInfo> = new EventEmitter();\n\n   @Output()\n   onError: EventEmitter<string> = new EventEmitter();\n\n   scanStatus: FileAnalyticsScanStatusInfo;\n   scanInProgress: boolean = false;\n   loading: boolean = true;\n   hasEditPermission: boolean = false;\n\n   constructor(private permissionService: PermissionService,\n         private taskService: TaskMonitorService,\n         private fileAnalyticsConfigService: FileAnalyticsConfigService) {\n   }\n\n   ngOnInit(): void {\n      this.permissionService.hasPermissions(ManagedObject.contextObject,\n            [Privileges.EDIT_CLUSTER()])\n            .then(hasEditPermission => this.hasEditPermission = hasEditPermission)\n            .catch(err =>  {\n               this.onError.emit(err);\n            });\n      this.fetchScanStatus();\n   }\n\n   async fetchScanStatus(): Promise<void> {\n      try {\n         this.loading = true;\n         this.scanStatus = await this.fileAnalyticsConfigService.getFileAnalyticsLastScan(ManagedObject.contextObject);\n      } catch (err) {\n         this.onError.emit(err);\n      } finally {\n         this.loading = false;\n         this.scanInfoReceived.emit(this.scanStatus);\n      }\n   }\n\n   async rescan(): Promise<void> {\n      this.scanInProgress = true;\n      try {\n         const taskRef: ManagedObject = await this.fileAnalyticsConfigService.startFileAnalyticsIndexing(\n               ManagedObject.contextObject);\n         this.awaitThenReload(taskRef);\n      } catch (e) {\n         this.scanInProgress = false;\n         this.onError.emit(e);\n      }\n   }\n\n   private awaitThenReload = (taskRef: ManagedObject) => {\n      this.taskService.getAwaitResult(taskRef)\n            .then(() =>  {\n               this.scanInProgress = false;\n               this.fetchScanStatus();\n            }).catch(e => this.onError.emit(e));\n   };\n}","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {ThemeSpecificColor} from \"@model/theme-specific-color\";\nimport {ClarityColors} from \"@util/clarity-colors\";\n\n/**\n * Clarity chart colors for the light and dark theme.\n * Values source:\n * https://www.figma.com/file/6mibaOyfkAUOnJx1CiGjvj/Clarity-Chart-Colors---light?node-id=151%3A77\n * https://www.figma.com/file/iQ9dyu55ujq5IdNCwnC1Vi/Clarity-Chart-Colors---dark?node-id=146%3A120\n */\nexport class ClarityChartColors {\n   static chartColors: ThemeSpecificColor[] = [\n      ClarityColors.BLUE,\n      ClarityColors.VIOLET,\n      ClarityColors.ORANGE,\n      ClarityColors.MAGENTA,\n      ClarityColors.GREY_COOL,\n      ClarityColors.GREEN_WARM,\n      ClarityColors.NAVY,\n      ClarityColors.YELLOW,\n      ClarityColors.PINK,\n      ClarityColors.TEAL,\n      ClarityColors.PURPLE,\n   ];\n}","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Injectable} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {FileAnalyticsAgeDistribution} from \"@generated/file-analytics-age-distribution\";\nimport {HistogramColumnChartData} from \"@component/chart/histogram-chart/histogram-column-chart.data\";\nimport {FileAnalyticsSizeDistribution} from \"@generated/file-analytics-size-distribution\";\nimport {FileAnalyticsFileTypeUsage} from \"@generated/file-analytics-file-type-usage\";\nimport {ChartSectionData} from \"@component/chart/model/chart-section.data\";\nimport {FileAnalyticsFastestGrowingShareData} from \"@generated/file-analytics-fastest-growing-share-data\";\nimport {ClarityChartColors} from \"@component/chart/clarity-chart-colors\";\nimport {Logger} from \"@util/logger\";\nimport {ColumnLineChartData} from \"@component/chart/column-line-chart/column-line-chart.data\";\nimport {FileAnalyticsShareCapacityTrending} from \"@generated/file-analytics-share-capacity-trending\";\nimport {ThemeSpecificColor} from \"@model/theme-specific-color\";\nimport {VsanFileShareUtils} from \"../file-services/shares/file-share-util\";\nimport {FileAnalyticsFileShareGrowthData} from \"@generated/file-analytics-file-share-growth-data\";\nimport {FileAnalyticsFileShareQuotaOccupancyData} from \"@generated/file-analytics-file-share-quota-occupancy-data\";\nimport {ClarityColors} from \"@util/clarity-colors\";\nimport {VsanDateTimeUtils} from \"@util/vsan-dateteime-util\";\nimport {DateFormat} from \"@util/date-time\";\n\n@Injectable()\nexport class FileAnalyticsChartService {\n\n   // property name of 'capacity added'\n   static readonly CAPACITY_ADDED_PROPERTY: string = \"capacityAdded\";\n\n   // property name of 'capacity removed'\n   static readonly CAPACITY_REMOVED_PROPERTY: string = \"capacityRemoved\";\n\n   // property name of 'total capacity'\n   static readonly TOTAL_CAPACITY_PROPERTY: string = \"sharesTotalCapacity\";\n\n   parseFilesAgeDistributionChartData(data: Map<FileAnalyticsAgeDistribution, number>): HistogramColumnChartData[] {\n      if (!data || data.size === 0) {\n         return [];\n      }\n      const totalFilesCount: number = this.getTotalFilesCount(data);\n      const result: HistogramColumnChartData[] = [];\n      const recentData: HistogramColumnChartData = this.getRecentFiles(data, totalFilesCount);\n      if (recentData) {\n         result.push(recentData);\n      }\n      const oneMonthData: HistogramColumnChartData = this.getOneMonthOldFiles(data, totalFilesCount);\n      if (oneMonthData) {\n         result.push(oneMonthData);\n      }\n      const threeMonthsData: HistogramColumnChartData = this.getThreeMonthsOldFiles(data, totalFilesCount);\n      if (threeMonthsData) {\n         result.push(threeMonthsData);\n      }\n      const sixMonthsData: HistogramColumnChartData = this.getSixMonthsOldFiles(data, totalFilesCount);\n      if (sixMonthsData) {\n         result.push(sixMonthsData);\n      }\n      const oneYearData: HistogramColumnChartData = this.getOlderThanOneYearFiles(data, totalFilesCount);\n      if (oneYearData) {\n         result.push(oneYearData);\n      }\n      return result;\n   }\n\n   parseFileSizeDistributionChartData(data: Map<FileAnalyticsSizeDistribution, number>): HistogramColumnChartData[] {\n      if (!data || data.size === 0) {\n         return [];\n      }\n      const totalFilesCount: number = this.getTotalFilesCount(data);\n      const result: HistogramColumnChartData[] = [];\n      result.push(this.getSmallestFiles(data, totalFilesCount));\n      result.push(this.getOneToTenMbFiles(data, totalFilesCount));\n      result.push(this.getTenToHundredMbFiles(data, totalFilesCount));\n      result.push(this.getHundredMbToOneGbFiles(data, totalFilesCount));\n      result.push(this.getBiggerThanOneGbFiles(data, totalFilesCount));\n      return result;\n   }\n\n   parseFastestGrowingFileSharesData(data: FileAnalyticsFastestGrowingShareData[]): ColumnLineChartData[] {\n      if (VsanUiUtils.isEmpty(data)) {\n         return [];\n      }\n      return data.map((shareData: FileAnalyticsFastestGrowingShareData, index: number) => {\n         return this.getShareGrowthData(shareData, this.getClarityColorAtIndex(index));\n      });\n   }\n\n   parseCapacityTrendingData(data: FileAnalyticsShareCapacityTrending[]): ColumnLineChartData[] {\n      if (VsanUiUtils.isEmpty(data)) {\n         return [];\n      }\n\n      const result: ColumnLineChartData[] = [];\n      result.push(...this.getDailyCapacityTrendingData(data));\n      return result;\n   }\n\n   parseTopQuotaOccupancyFileShares(fileSharesModels: FileAnalyticsFileShareQuotaOccupancyData[]):\n         Map<string, ChartSectionData[]> {\n      const sections: Map<string, ChartSectionData[]> = new Map<string, ChartSectionData[]>();\n      for (const fileShare of fileSharesModels) {\n         sections.set(fileShare.name, this.getFileShareQuotaSection(fileShare));\n      }\n      return sections;\n   }\n\n   private getRecentFiles(data: Map<FileAnalyticsAgeDistribution, number>,\n         totalFilesCount: number): HistogramColumnChartData {\n      const filesCount: number = data.get(FileAnalyticsAgeDistribution.less_than_one_month);\n      if (VsanUiUtils.isUnset(filesCount)) {\n         return null;\n      }\n      return new HistogramColumnChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.recent\"),\n            filesCount,\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.period.before.one.month\"),\n            this.getFileCountCommonLabelData(filesCount, totalFilesCount),\n            \"lessThanOneMonth\");\n   }\n\n   private getOneMonthOldFiles(data: Map<FileAnalyticsAgeDistribution, number>,\n         totalFilesCount: number): HistogramColumnChartData {\n      const filesCount: number = data.get(FileAnalyticsAgeDistribution.one_month_to_three_months);\n      if (VsanUiUtils.isUnset(filesCount)) {\n         return null;\n      }\n      return new HistogramColumnChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.period.one.month\"),\n            filesCount,\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.period.one.to.three.months\"),\n            this.getFileCountCommonLabelData(filesCount, totalFilesCount),\n            \"oneToThreeMonths\");\n   }\n\n   private getThreeMonthsOldFiles(data: Map<FileAnalyticsAgeDistribution, number>,\n         totalFilesCount: number): HistogramColumnChartData {\n      const filesCount: number = data.get(FileAnalyticsAgeDistribution.three_months_to_six_months);\n      if (VsanUiUtils.isUnset(filesCount)) {\n         return null;\n      }\n      return new HistogramColumnChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.period.three.months\"),\n            filesCount,\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.period.three.to.six.months\"),\n            this.getFileCountCommonLabelData(filesCount, totalFilesCount),\n            \"threeToSixMonths\");\n   }\n\n   private getSixMonthsOldFiles(data: Map<FileAnalyticsAgeDistribution, number>,\n         totalFilesCount: number): HistogramColumnChartData {\n      const filesCount: number = data.get(FileAnalyticsAgeDistribution.six_months_to_one_year);\n      if (VsanUiUtils.isUnset(filesCount)) {\n         return null;\n      }\n      return new HistogramColumnChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.period.six.months\"),\n            filesCount,\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.period.six.months.to.one.year\"),\n            this.getFileCountCommonLabelData(filesCount, totalFilesCount),\n            \"sixMonthsToOneYear\");\n   }\n\n   private getOlderThanOneYearFiles(data: Map<FileAnalyticsAgeDistribution, number>,\n         totalFilesCount: number): HistogramColumnChartData {\n      const filesCount: number = data.get(FileAnalyticsAgeDistribution.more_than_one_year);\n      if (VsanUiUtils.isUnset(filesCount)) {\n         return null;\n      }\n      return new HistogramColumnChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.period.one.year\"),\n            filesCount,\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.period.older.than.one.year\"),\n            this.getFileCountCommonLabelData(filesCount, totalFilesCount),\n            \"moreThanOneYear\");\n   }\n\n   private getSmallestFiles(data: Map<FileAnalyticsSizeDistribution, number>,\n         totalFilesCount: number): HistogramColumnChartData {\n      const filesCount: number = data.get(FileAnalyticsSizeDistribution.less_than_a_mb);\n      return new HistogramColumnChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.size.zero\"),\n            filesCount,\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.size.less.than.one.mb\"),\n            this.getFileCountCommonLabelData(filesCount, totalFilesCount),\n            \"lessThanOneMb\");\n   }\n\n   private getOneToTenMbFiles(data: Map<FileAnalyticsSizeDistribution, number>,\n         totalFilesCount: number): HistogramColumnChartData {\n      const filesCount: number = data.get(FileAnalyticsSizeDistribution.one_mb_to_ten_mb);\n      return new HistogramColumnChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.size.one.mb\"),\n            filesCount,\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.size.one.to.ten.mb\"),\n            this.getFileCountCommonLabelData(filesCount, totalFilesCount),\n            \"oneToTenMB\");\n   }\n\n   private getTenToHundredMbFiles(data: Map<FileAnalyticsSizeDistribution, number>,\n         totalFilesCount: number): HistogramColumnChartData {\n      const filesCount: number = data.get(FileAnalyticsSizeDistribution.ten_mb_to_hundred_mb);\n      return new HistogramColumnChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.size.ten.mb\"),\n            filesCount,\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.size.ten.to.hundred.mb\"),\n            this.getFileCountCommonLabelData(filesCount, totalFilesCount),\n            \"tenToHundredMb\");\n   }\n\n   private getHundredMbToOneGbFiles(data: Map<FileAnalyticsSizeDistribution, number>,\n         totalFilesCount: number): HistogramColumnChartData {\n      const filesCount: number = data.get(FileAnalyticsSizeDistribution.hundred_mb_to_one_gb);\n      return new HistogramColumnChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.size.hundred.mb\"),\n            filesCount,\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.size.hundred.mb.to.one.gb\"),\n            this.getFileCountCommonLabelData(filesCount, totalFilesCount),\n            \"hundredMbToOneGb\");\n   }\n\n   private getBiggerThanOneGbFiles(data: Map<FileAnalyticsSizeDistribution, number>,\n         totalFilesCount: number): HistogramColumnChartData {\n      const filesCount: number = data.get(FileAnalyticsSizeDistribution.more_than_one_gb);\n      return new HistogramColumnChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.size.one.gb\"),\n            filesCount,\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.size.more.than.one.gb\"),\n            this.getFileCountCommonLabelData(filesCount, totalFilesCount),\n            \"moreThanOneGb\");\n   }\n\n   private getTotalFilesCount(data: Map<any, number>): number {\n      let totalFilesCount: number = 0;\n      for (const value of data.values()) {\n         totalFilesCount += value;\n      }\n      return totalFilesCount;\n   }\n\n   private getFileCountCommonLabelData(filesCount: number, totalFilesCount: number): Map<string, string> {\n      const result: Map<string, string> = new Map();\n      result.set(VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.common.count.label\"),\n            filesCount.toString());\n      result.set(VsanUiUtils.getString(\"vsan.common.percentage.label\"),\n            VsanUiUtils.getPercentage(VsanUiUtils.asPercentage(filesCount, totalFilesCount)));\n      return result;\n   }\n\n   parseFilesTypeDistributionChartData(fileTypeUsages: FileAnalyticsFileTypeUsage[]): ChartSectionData[] {\n      if (!fileTypeUsages) {\n         return [];\n      }\n      // Get the total usage\n      const totalBytes: number = fileTypeUsages\n            .map((fileTypeUsage: FileAnalyticsFileTypeUsage) => fileTypeUsage.usageInBytes)\n            .reduce((a: number, b: number) => a + b, 0);\n\n      return fileTypeUsages\n            .filter((fileTypeUsage: FileAnalyticsFileTypeUsage) => fileTypeUsage.usageInBytes > 0)\n            .sort((a, b) => b.usageInBytes - a.usageInBytes)\n            .map((fileTypeUsage: FileAnalyticsFileTypeUsage, index: number) => {\n             // Parse FileAnalyticsFileTypeUsage to ChartSectionData in order to be used in the pie chart\n             const sectionData: ChartSectionData = new ChartSectionData(\n                   fileTypeUsage.fileTypeLabel,\n                   fileTypeUsage.usageInBytes,\n                   fileTypeUsage.fileTypeLabel,\n                   true,\n                   this.getClarityColorAtIndex(index));\n             sectionData.tooltipValue = this.getFileTypeDistributionLabelData(fileTypeUsage.usageInBytes,\n                   totalBytes, fileTypeUsage.filesCount);\n             return sectionData;\n      });\n   }\n\n   private getFileTypeDistributionLabelData(usageInBytes: number, totalInBytes: number, filesCount: number):\n         Map<string, string> {\n      const result: Map<string, string> = new Map();\n      const usageValue: string =\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.count.usage.format\",\n               VsanUiUtils.formatFileSize(usageInBytes),\n               VsanUiUtils.getPercentage(VsanUiUtils.asPercentage(usageInBytes, totalInBytes)));\n      result.set(VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.count.usage.label\"),\n            usageValue);\n      result.set(VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.common.count.label\"),\n            filesCount.toString());\n      return result;\n   }\n\n   private getClarityColorAtIndex(index: number): string {\n      if (index >= ClarityChartColors.chartColors.length) {\n         Logger.warn(\"The requested index color exceeds the available predefined colors: \" + index);\n         return ClarityColors.BLUE.getColor();\n      }\n      return ClarityChartColors.chartColors[index].getColor();\n   }\n\n   private getShareGrowthData(shareData: FileAnalyticsFastestGrowingShareData, color: string): ColumnLineChartData {\n      const values: number[] = [];\n      const growthData: string[] = [];\n      const sizeData: string[] = [];\n      for (const growth of shareData.growthData) {\n         values.push(growth.shareSize);\n         growthData.push(this.getGrowthDataLabel(growth));\n         sizeData.push(VsanUiUtils.formatFileSize(growth.shareSize));\n      }\n\n      return new ColumnLineChartData(shareData.shareName,\n            values,\n            shareData.shareName,\n            color,\n            this.getShareGrowthTooltipData(growthData, sizeData),\n            this.getShareGrowthTooltipLabels(shareData),\n      );\n   }\n\n   private getGrowthDataLabel(growthData: FileAnalyticsFileShareGrowthData): string {\n      if (!VsanUiUtils.isUnset(growthData.growthPercentage)) {\n         return VsanUiUtils.getString(\n               \"vsan.cluster.monitor.file.analytics.file.share.fastest.growing.tooltip.growth.format\",\n               VsanUiUtils.formatFileSize(growthData.growthValue),\n               growthData.growthPercentage);\n      } else {\n         // For newly created shares there is no growth percentage value. Only show the growth value for these.\n         return VsanUiUtils.formatFileSize(growthData.growthValue);\n      }\n   }\n\n   private getShareGrowthTooltipData(growthData: string[], sizeData: string[]): Map<string, string[]> {\n      const tooltipData: Map<string, string[]> = new Map();\n      tooltipData.set(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.file.share.fastest.growing.tooltip.growth\"),\n            growthData);\n      tooltipData.set(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.file.share.fastest.growing.tooltip.size\"),\n            sizeData);\n\n      return tooltipData;\n   }\n\n   private getShareGrowthTooltipLabels(shareData: FileAnalyticsFastestGrowingShareData): string[] {\n      return shareData.growthData.map((data: FileAnalyticsFileShareGrowthData) => {\n         return `${shareData.shareName} - ${VsanDateTimeUtils.applyFormatting(data.date, DateFormat.SHORT_DATE)}`;\n      });\n   }\n\n   private getCapacityTrendingTooltipData(data: FileAnalyticsShareCapacityTrending[]): Map<string, string[]> {\n      const tooltipValues: Map<string, string[]> = new Map();\n\n      tooltipValues.set(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.file.share.capacity.trending.total\"),\n            data.map(dailyCapacity => VsanUiUtils.formatFileSize(Math.abs(dailyCapacity.sharesTotalCapacity))));\n      tooltipValues.set(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.file.share.capacity.trending.added\"),\n            data.map(dailyCapacity => VsanUiUtils.formatFileSize(Math.abs(dailyCapacity.capacityAdded))));\n      tooltipValues.set(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.file.share.capacity.trending.deleted\"),\n            data.map(dailyCapacity => VsanUiUtils.formatFileSize(Math.abs(dailyCapacity.capacityRemoved))));\n      return tooltipValues;\n   }\n\n   private getDailyCapacityTrendingData(data: FileAnalyticsShareCapacityTrending[]): ColumnLineChartData[] {\n      const result: ColumnLineChartData[] = [];\n      const tooltipValues: Map<string, string[]> = this.getCapacityTrendingTooltipData(data);\n      result.push(new ColumnLineChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.file.share.capacity.trending.added\"),\n            data.map(dailyData => dailyData.capacityAdded),\n            FileAnalyticsChartService.CAPACITY_ADDED_PROPERTY,\n            ClarityColors.GREEN_WARM.getColor(),\n            tooltipValues,\n            data.map(dailyData => VsanDateTimeUtils.applyFormatting(dailyData.date, DateFormat.SHORT_DATE))));\n\n      result.push(new ColumnLineChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.file.share.capacity.trending.deleted\"),\n            data.map(dailyData => dailyData.capacityRemoved),\n            FileAnalyticsChartService.CAPACITY_REMOVED_PROPERTY,\n            ClarityColors.MAGENTA.getColor(),\n            tooltipValues,\n            data.map(dailyData => VsanDateTimeUtils.applyFormatting(dailyData.date, DateFormat.SHORT_DATE))));\n\n      result.push(new ColumnLineChartData(\n            VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.file.share.capacity.trending.total\"),\n            data.map(dailyData => dailyData.sharesTotalCapacity),\n            FileAnalyticsChartService.TOTAL_CAPACITY_PROPERTY,\n            ClarityColors.BLUE.getColor(),\n            tooltipValues,\n            data.map(dailyData => VsanDateTimeUtils.applyFormatting(dailyData.date, DateFormat.SHORT_DATE))));\n\n      return result;\n   }\n\n   private getFileShareQuotaSection(fileShare: FileAnalyticsFileShareQuotaOccupancyData): ChartSectionData[] {\n      const color: ThemeSpecificColor = this.getSectionColorBasedOnQuotaUsage(fileShare);\n      // Build the tooltip content\n      const tooltipValues: Map<string, string> = new Map<string, string>([\n         [VsanUiUtils.getString(\n               \"vsan.cluster.monitor.file.analytics.file.share.top.quota.usage.tooltip.usage.label\"),\n          VsanUiUtils.formatFileSize(fileShare.currentUsage)],\n         [VsanUiUtils.getString(\"\" +\n               \"vsan.cluster.monitor.file.analytics.file.share.top.quota.usage.tooltip.softQuota.label\"),\n          VsanUiUtils.formatFileSize(VsanUiUtils.fromPercentage(fileShare.softQuotaPercentage, fileShare.hardQuota))],\n         [VsanUiUtils.getString(\n               \"vsan.cluster.monitor.file.analytics.file.share.top.quota.usage.tooltip.hardQuota.label\"),\n          VsanUiUtils.formatFileSize(fileShare.hardQuota)],\n      ]);\n\n      const currentUsageChartSection: ChartSectionData =\n            new ChartSectionData(\"currentUsage\", fileShare.currentUsage);\n      currentUsageChartSection.customSectionColor = color;\n      currentUsageChartSection.tooltipValue = tooltipValues;\n\n      const freeSpace: number = fileShare.hardQuota - fileShare.currentUsage;\n      const hardQuotaRemainderChartSection: ChartSectionData =\n            new ChartSectionData(\"hardQuotaRemainder\", freeSpace);\n      hardQuotaRemainderChartSection.customSectionColor = color.getFadedColor(0.5);\n      hardQuotaRemainderChartSection.tooltipValue = tooltipValues;\n\n      return [currentUsageChartSection, hardQuotaRemainderChartSection];\n   }\n\n   private getSectionColorBasedOnQuotaUsage(fileShare: FileAnalyticsFileShareQuotaOccupancyData):\n         ThemeSpecificColor {\n      if (fileShare.usageOverHardQuotaPercentage < fileShare.softQuotaPercentage) {\n         return ClarityColors.BLUE;\n      }\n      if (fileShare.usageOverHardQuotaPercentage >= VsanFileShareUtils.FILE_SHARE_QUOTA_RED_THRESHOLD) {\n         return ClarityColors.RED;\n      }\n      return ClarityColors.YELLOW_WARM;\n   }\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\n\n/**\n * Represents the column data in a histogram column chart.\n * It is used to create the highcharts properties and series objects and feed the histogram chart.\n */\nexport class HistogramColumnChartData {\n\n   constructor(private _label: string,\n         private _value: number,\n         private _tooltipLabel: string,\n         private _labelData: Map<string, string>,\n         private _id: string = \"\") {\n   }\n\n   get label(): string {\n      return this._label;\n   }\n\n   get value(): number {\n      return this._value;\n   }\n\n   get tooltipLabel(): string {\n      return this._tooltipLabel;\n   }\n\n   get labelData(): Map<string, string> {\n      return this._labelData;\n   }\n\n   get id(): string {\n      return this._id;\n   }\n\n   toSeries(): any {\n      return {\n         name: this.tooltipLabel,\n         id: this.id,\n         y: this.value,\n         custom: {\n            tooltipValues: this.labelData,\n         },\n      };\n   }\n}","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnChanges} from \"@angular/core\";\nimport {HistogramColumnChartData} from \"@component/chart/histogram-chart/histogram-column-chart.data\";\nimport {IllustratedMessageType} from \"@component/illustrated-message/illustrated-message.component\";\nimport {FileAnalyticsDashboardService} from \"@generated/file-analytics-dashboard-service\";\nimport {FileAnalyticsSizeDistribution} from \"@generated/file-analytics-size-distribution\";\nimport {VsanFileServiceShare} from \"@generated/vsan-file-service-share\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ArrayUtils} from \"@util/array-util\";\nimport {ClarityColors} from \"@util/clarity-colors\";\nimport {Logger} from \"@util/logger\";\nimport {MapUtil} from \"@util/map-util\";\nimport {FileAnalyticsChartService} from \"../file-analytics-chart.service\";\n\n@Component({\n   templateUrl: \"file-analytics-files-by-size.html\",\n   styleUrls: [\"file-analytics-files-by-size.scss\", \"../file-analytics-common.scss\"],\n   selector: \"vsan-file-analytics-files-by-size\",\n})\nexport class FileAnalyticsFilesBySizeComponent implements OnChanges {\n\n   @Input()\n   fileShares: VsanFileServiceShare[];\n\n   loading: boolean = true;\n   errorMessage: string;\n   chartData: HistogramColumnChartData[];\n   chartColor: string = ClarityColors.GREEN_WARM.getColor();\n\n   IllustratedMessageType: typeof IllustratedMessageType = IllustratedMessageType;\n   private readonly SIZE_DISTRIBUTION_KEY_GENERATOR = (propKey: string) => FileAnalyticsSizeDistribution[propKey];\n\n   constructor(private dashboardService: FileAnalyticsDashboardService,\n         private fileAnalyticsChartService: FileAnalyticsChartService) {\n   }\n\n   ngOnChanges(): void {\n      if (!this.fileShares) {\n         return;\n      }\n      this.fetch();\n   }\n\n   @RefreshHandler\n   async fetch(): Promise<void> {\n      this.loading = true;\n      this.errorMessage = null;\n      this.chartData = null;\n      try {\n         const fileSharesUuidsBefore: string[] = this.fileShares.map(share => share.uuid);\n         const result: any = await this.dashboardService.queryFilesBySize(ManagedObject.contextObject,\n               fileSharesUuidsBefore);\n         if (!ArrayUtils.equalsIgnoreOrder(fileSharesUuidsBefore, this.fileShares.map(share => share.uuid))) {\n            // The parent dashboard has already changed the selection of file shares, ignore processing this result.\n            Logger.debug(\"Ignoring queryFilesBySize result due to new selection.\");\n            return;\n         }\n         const filesCountBySizeData: Map<FileAnalyticsSizeDistribution, number> =\n               MapUtil.toMap<FileAnalyticsSizeDistribution, number>(result, this.SIZE_DISTRIBUTION_KEY_GENERATOR);\n         this.chartData = this.fileAnalyticsChartService.parseFileSizeDistributionChartData(filesCountBySizeData);\n      } catch (e) {\n         Logger.error(e);\n         this.errorMessage = e;\n      } finally {\n         this.loading = false;\n      }\n   }\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {BaseComparator} from \"@component/datagrid/comparator/base-comparator\";\n\nexport class NumericComparator<T> extends BaseComparator<T> {\n   constructor(private dataField: string) {\n      super();\n   }\n\n   protected compareValue(a: T, b: T): number {\n      return a[this.dataField] - b[this.dataField];\n   }\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ClrDatagridComparatorInterface} from \"@clr/angular\";\nimport { VsanUiUtils } from '@util/vsan-util';\n\n/**\n * Basic comparator, the child component should override the compareValue method\n * We don't expect the compared value to be json format\n */\nexport class BaseComparator<T> implements ClrDatagridComparatorInterface<T> {\n   protected stringify(data: T, field: string): string {\n      return VsanUiUtils.stringify(data, field);\n   }\n\n   protected compareValue(a: T, b: T): number {\n      throw new Error(\"Method not implemented\");\n   }\n\n   compare(a: T, b: T): number {\n      return this.compareValue(a, b);\n   }\n}","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-drag-and-drop *ngIf=\"fileDashboardTemplates?.length > 0 && fileShares.length > 0\"\n                    [view]=\"cardView\"\n                    [cardTemplates]=\"fileDashboardTemplates\">\n</vsan-drag-and-drop>\n\n<vsan-illustrated-message\n      *ngIf=\"fileShares.length === 0\"\n      [type]=\"IllustratedMessageType.MISSING_SELECTION\"\n      [message]=\"'vsan.cluster.monitor.file.analytics.files.share.none.selected.label' | localized\">\n</vsan-illustrated-message>\n<ng-template vsan-drag-service=\"{{FILE_ANALYTICS_FILES_BY_AGE}}\">\n   <vsan-file-analytics-files-by-age [fileShares]=\"fileShares\"></vsan-file-analytics-files-by-age>\n</ng-template>\n<ng-template vsan-drag-service=\"{{FILE_ANALYTICS_FILES_COUNT}}\">\n   <vsan-file-analytics-files-count [fileShares]=\"fileShares\"></vsan-file-analytics-files-count>\n</ng-template>\n<ng-template vsan-drag-service=\"{{FILE_ANALYTICS_FILES_BY_SIZE}}\">\n   <vsan-file-analytics-files-by-size [fileShares]=\"fileShares\"></vsan-file-analytics-files-by-size>\n</ng-template>\n\n","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"card\">\n   <div class=\"card-header cdk-drag-handle\" cdkDragHandle>\n      <span class=\"card-title\" vsan-show-title>\n         {{\"vsan.cluster.monitor.file.analytics.files.by.age\" | localized}}\n      </span>\n      <select id=\"file-analytics-files-by-age-grouping\"\n              *ngIf=\"!errorMessage && chartData?.length\"\n              clrSelect\n              name=\"groupBy\"\n              [(ngModel)]=\"groupBy\"\n              (change)=\"updateChartData()\">\n         <option *ngFor=\"let group of Object.values(FileAnalyticsDateGroupBy)\"\n                 [ngValue]=\"group\"\n                 [selected]=\"groupBy === group\">\n            {{getGroupByLabel(group)}}\n         </option>\n      </select>\n   </div>\n   <div class=\"card-block\">\n      <span id=\"loading-chart\" *ngIf=\"loading\" class=\"spinner spinner-md central-spinner\"></span>\n      <vsan-validation *ngIf=\"errorMessage\" [alert]=\"errorMessage\" [allowClose]=\"false\"> </vsan-validation>\n      <ng-container *ngIf=\"!loading && !errorMessage\">\n         <vsan-illustrated-message\n               *ngIf=\"!chartData?.length\"\n               [type]=\"IllustratedMessageType.FILTER_NO_RESULT\"\n               [message]=\"'vsan.cluster.monitor.file.analytics.report.no.data.label' | localized\">\n         </vsan-illustrated-message>\n         <vsan-histogram-column-chart\n               *ngIf=\"chartData?.length\"\n               [columns]=\"chartData\"\n               [valuesTitle]=\"'vsan.cluster.monitor.file.analytics.files.common.count.label' | localized\"\n               [lastColumnTitle]=\"'vsan.cluster.monitor.file.analytics.files.by.age.older' | localized\">\n         </vsan-histogram-column-chart>\n      </ng-container>\n   </div>\n</div>","<!-- Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<span id=\"last-scan-info\" class=\"p7\">\n   {{\"vsan.cluster.monitor.file.analytics.last.scan.label\" | localized : (scanStatus?.lastScanTime | l10nDate)}}\n</span>\n<button id=\"rescan-action\"\n        *ngIf=\"!scanInProgress && !loading\"\n        class=\"btn btn-link btn-sm\"\n        [disabled]=\"!hasEditPermission\"\n        (click)=\"rescan()\">\n   {{\"vsan.cluster.monitor.file.analytics.last.rescan.button\" | localized}}\n</button>\n<!-- Wrap the spinner inside a div in order to add some width to it.-->\n<div *ngIf=\"loading || scanInProgress\"><span class=\"spinner spinner-inline\"></span></div>","export enum FileAnalyticsSizeDistribution {\n   less_than_a_mb = \"less_than_a_mb\",\n   one_mb_to_ten_mb = \"one_mb_to_ten_mb\",\n   ten_mb_to_hundred_mb = \"ten_mb_to_hundred_mb\",\n   hundred_mb_to_one_gb = \"hundred_mb_to_one_gb\",\n   more_than_one_gb = \"more_than_one_gb\",\n}\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterViewInit, Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild} from \"@angular/core\";\nimport {HistogramColumnChartData} from \"@component/chart/histogram-chart/histogram-column-chart.data\";\nimport {HighchartsPropertiesService} from \"@component/chart/highcharts-properties.service\";\nimport {ReferenceWatcher} from \"@util/reference-watcher\";\nimport {HighchartsThemeService} from \"@component/chart/highcharts-theme.service\";\nimport * as Highcharts from \"highcharts\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {HighchartsTooltipUtil} from \"@component/chart/highcharts-tooltip.util\";\nimport {ClarityColors} from \"@util/clarity-colors\";\n\n@Component({\n   selector: \"vsan-histogram-column-chart\",\n   templateUrl: \"histogram-column-chart.html\",\n   styleUrls: [\"histogram-column-chart.scss\"],\n   providers: [ReferenceWatcher],\n})\nexport class HistogramColumnChartComponent implements AfterViewInit, OnChanges {\n\n   /**\n    * Data for the columns to be displayed in the chart\n    */\n   @Input()\n   columns: HistogramColumnChartData[];\n\n   /**\n    * The title associated with the values.\n    * Will be shown on the left side of the chart. E.g. yAxis title.\n    */\n   @Input()\n   valuesTitle: string;\n\n   /**\n    * The chart's series color.\n    */\n   @Input()\n   chartColor: string = ClarityColors.BLUE.getColor();\n\n   /**\n    * The histogram chart shows the colum labels between the columns, thus the last label is\n    * shown at the beginning of the last column. In case an extra label is needed after it, pass it here.\n    * Example \"Past\" in the \"Files by age\" chart.\n    */\n   @Input()\n   lastColumnTitle: string;\n\n   /**\n    * Whether or not to show the series legend.\n    */\n   @Input()\n   showLegend: boolean = false;\n\n   @ViewChild(\"chart\")\n   chartElement: ElementRef;\n   chart: Highcharts.Chart;\n\n   private highchartOptions: any;\n\n   constructor(private highchartsService: HighchartsPropertiesService,\n         private highchartsThemeService: HighchartsThemeService,\n         private refWatcher: ReferenceWatcher) {\n      this.refWatcher.watchSubscriptionRef(\n            this.highchartsThemeService.whenThemeChanged.subscribe(theme => this.onThemeChanged()));\n   }\n\n   ngAfterViewInit(): void {\n      this.render();\n   }\n\n   ngOnChanges(changes: SimpleChanges): void {\n      this.applyHighchartOptions();\n      this.populateHighchartSeries();\n      this.render();\n   }\n\n   private onThemeChanged(): void {\n      this.applyHighchartOptions();\n      this.update();\n   }\n\n   private applyHighchartOptions(): void {\n      if (!this.columns) {\n         return;\n      }\n      this.highchartOptions = this.highchartsService.getColumnHistogramChartOptions();\n      this.highchartOptions.yAxis.title.text = this.valuesTitle;\n      this.highchartOptions.xAxis.categories = this.columns.map(seriesData => seriesData.label);\n\n      // Use the xAxis title as a fake last column label, which is otherwise not displayed.\n      if (this.lastColumnTitle) {\n         this.highchartOptions.xAxis.title.text = this.lastColumnTitle;\n         this.highchartOptions.xAxis.title.align = \"high\";\n         this.highchartOptions.xAxis.title.margin = -16;\n      }\n\n      this.highchartOptions.legend.enabled = this.showLegend;\n   }\n\n   private populateHighchartSeries(): void {\n      if ( !this.columns || !this.highchartOptions) {\n         return;\n      }\n      const seriesData: any[] = this.getHistogramSeriesData(this.columns);\n      this.highchartOptions.series = [{\n         name: this.valuesTitle,\n         color: this.chartColor,\n         data: seriesData,\n      }];\n   }\n\n   private render(): void {\n      if (!this.chartElement || !this.highchartOptions) {\n         return;\n      }\n      this.highchartOptions.chart.renderTo = this.chartElement.nativeElement;\n      this.chart = Highcharts.chart(this.highchartOptions);\n      this.highchartsService.applyScreenReaderMessage(this.chartElement.nativeElement);\n      this.refWatcher.watchChartRef(this.chart);\n      // The chartData is needed for QE tests, related to charts verification\n      this.attachTestingData();\n   }\n\n   private update(): void {\n      if (this.chart) {\n         this.chart.update(this.highchartOptions);\n      }\n   }\n\n   private getHistogramSeriesData(seriesData: HistogramColumnChartData[]): any[] {\n      if (!seriesData) {\n         return [];\n      }\n      return seriesData.map((sectionData: HistogramColumnChartData) => sectionData.toSeries());\n   }\n\n   private attachTestingData(): void {\n      const testData: any = {\n         columns: this.columns,\n      };\n\n      // We have the tooltip data in every ColumnLineChart object, so take it from the first available one.\n      if (!VsanUiUtils.isEmpty(this.columns)) {\n         testData.tooltipData = HighchartsTooltipUtil.getHistogramTestingTooltipData(this.columns);\n      }\n      this.chartElement.nativeElement.chartData = testData;\n   }\n}\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {BaseFilter} from \"./base-filter\";\nimport {VsanUiUtils} from '@util/vsan-util';\n\n/**\n * Extends BaseFilter by allowing the consumer to filter the hierarchical data field.\n * It tries to find the final string value of the data field by visiting the attribute hirarchy.\n */\nexport class ObjectFilter<T> extends BaseFilter<T> {\n   constructor(protected dataField: string){\n      super();\n   }\n\n   protected stringify(data: T): string {\n      return VsanUiUtils.stringify(data, this.dataField);\n   }\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\nimport {DragAndDropModule} from \"@component/drag-and-drop/drag-and-drop.module\";\nimport {VsanCommonModule} from \"../../common/vsan-common.module\";\nimport {MasterDetailModule} from \"@component/master-detail/master-detail.module\";\nimport {VsanChartModule} from \"@component/chart/chart.module\";\nimport {FileDashboardComponent} from \"./file-dashboard.component\";\nimport {FileAnalyticsFilesByAgeComponent} from \"./file-analytics-files-by-age.component\";\nimport {FileAnalyticsFilesCountComponent} from \"./file-analytics-files-count.component\";\nimport {FileAnalyticsFilesBySizeComponent} from \"./file-analytics-files-by-size.component\";\nimport {FileAnalyticsChartService} from \"../file-analytics-chart.service\";\nimport {FileAnalyticsLastScanComponent} from \"../component/file-analytics-last-scan.component\";\nimport {IllustratedMessageModule} from \"@component/illustrated-message/illustrated-message.module\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      UnavailableViewModule,\n      DragAndDropModule,\n      VsanCommonModule,\n      MasterDetailModule,\n      VsanChartModule,\n      IllustratedMessageModule,\n   ],\n   declarations: [\n      FileDashboardComponent,\n      FileAnalyticsLastScanComponent,\n      FileAnalyticsFilesByAgeComponent,\n      FileAnalyticsFilesCountComponent,\n      FileAnalyticsFilesBySizeComponent,\n   ],\n   exports: [\n      FileDashboardComponent,\n      FileAnalyticsLastScanComponent,\n   ],\n   providers: [\n      FileAnalyticsChartService,\n   ],\n})\nexport class FileDashboardModule {\n}","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div #chart class=\"chart\"></div>\n\n","/* Copyright 2017-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {Filter, TreeDatagridRow} from \"../tree-datagrid\";\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\n\n/**\n * Abstract filter class that needs to be extended in order to implement custom filtration.\n * The class has a single abstract method that takes an object of type T and returns its\n * string representation.\n */\nexport class BaseFilter<T> implements ClrDatagridStringFilterInterface<T>, Filter {\n\n   accepts(data: T, search: string): boolean {\n      // Handle correctly TreeDatagrid components\n      if (data instanceof TreeDatagridRow) {\n         data = data.data;\n      }\n\n      let label: string = this.stringify(data);\n      if (label) {\n         // Compare ignoring the case\n         return label.toLowerCase().indexOf(search.toLowerCase()) != -1;\n      } else {\n         return false;\n      }\n   }\n\n   match(data: T, search: string): boolean {\n      return this.accepts(data, search);\n   }\n\n   protected stringify(data: T): string  {\n      return data + \"\";\n   }\n\n}\n\n","<!--Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<div class=\"card\">\n   <div class=\"card-header cdk-drag-handle\" cdkDragHandle>\n      <span class=\"card-title\" vsan-show-title>\n         {{\"vsan.cluster.monitor.file.analytics.files.by.size\" | localized}}\n      </span>\n   </div>\n   <div class=\"card-block\">\n      <span id=\"loading-chart\" *ngIf=\"loading\" class=\"spinner spinner-md central-spinner\"></span>\n      <vsan-validation *ngIf=\"errorMessage\" [alert]=\"errorMessage\" [allowClose]=\"false\"></vsan-validation>\n      <ng-container *ngIf=\"!loading && !errorMessage\">\n         <vsan-illustrated-message\n               *ngIf=\"!chartData?.length\"\n               [type]=\"IllustratedMessageType.FILTER_NO_RESULT\"\n               [message]=\"'vsan.cluster.monitor.file.analytics.report.no.data.label' | localized\">\n         </vsan-illustrated-message>\n         <vsan-histogram-column-chart\n               *ngIf=\"chartData?.length\"\n               [columns]=\"chartData\"\n               [chartColor]=\"chartColor\"\n               [valuesTitle]=\"'vsan.cluster.monitor.file.analytics.files.common.count.label' | localized\">\n         </vsan-histogram-column-chart>\n      </ng-container>\n   </div>\n</div>","/* Copyright 2020-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnChanges} from \"@angular/core\";\nimport {HistogramColumnChartData} from \"@component/chart/histogram-chart/histogram-column-chart.data\";\nimport {IllustratedMessageType} from \"@component/illustrated-message/illustrated-message.component\";\nimport {FileAnalyticsAgeDistribution} from \"@generated/file-analytics-age-distribution\";\nimport {FileAnalyticsDashboardService} from \"@generated/file-analytics-dashboard-service\";\nimport {FileAnalyticsDateGroupBy} from \"@generated/file-analytics-date-group-by\";\nimport {FileAnalyticsFilesByAgeData} from \"@generated/file-analytics-files-by-age-data\";\nimport {VsanFileServiceShare} from \"@generated/vsan-file-service-share\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ArrayUtils} from \"@util/array-util\";\nimport {Logger} from \"@util/logger\";\nimport {MapUtil} from \"@util/map-util\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {FileAnalyticsChartService} from \"../file-analytics-chart.service\";\n\n@Component({\n   templateUrl: \"file-analytics-files-by-age.html\",\n   styleUrls: [\"file-analytics-files-by-age.scss\", \"../file-analytics-common.scss\"],\n   selector: \"vsan-file-analytics-files-by-age\",\n})\nexport class FileAnalyticsFilesByAgeComponent implements OnChanges {\n\n   @Input()\n   fileShares: VsanFileServiceShare[];\n\n   FileAnalyticsDateGroupBy: typeof FileAnalyticsDateGroupBy = FileAnalyticsDateGroupBy;\n   IllustratedMessageType: typeof IllustratedMessageType = IllustratedMessageType;\n   Object: typeof Object = Object;\n\n   loading: boolean = true;\n   errorMessage: string;\n   chartData: HistogramColumnChartData[];\n   groupBy: FileAnalyticsDateGroupBy = FileAnalyticsDateGroupBy.CREATED_DATE;\n\n   private filesCountByAgeData: FileAnalyticsFilesByAgeData;\n   private readonly AGE_DISTRIBUTION_KEY_GENERATOR = (propKey: string) => FileAnalyticsAgeDistribution[propKey];\n\n   constructor(private dashboardService: FileAnalyticsDashboardService,\n         private fileAnalyticsChartService: FileAnalyticsChartService) {\n   }\n\n   ngOnChanges(): void {\n      if (!this.fileShares) {\n         return;\n      }\n      this.fetch();\n   }\n\n   @RefreshHandler\n   async fetch(): Promise<void> {\n      this.loading = true;\n      this.errorMessage = null;\n      this.chartData = null;\n      try {\n         const fileSharesUuidsBefore: string[] = this.fileShares.map(share => share.uuid);\n         this.filesCountByAgeData = await this.dashboardService.queryFilesByAge(ManagedObject.contextObject,\n               fileSharesUuidsBefore);\n         if (!ArrayUtils.equalsIgnoreOrder(fileSharesUuidsBefore, this.fileShares.map(share => share.uuid))) {\n            // The parent dashboard has already changed the selection of file shares, ignore processing this result.\n            Logger.debug(\"Ignoring queryFilesByAge result due to new selection.\");\n            return;\n         }\n         this.updateChartData();\n      } catch (e) {\n         Logger.error(e);\n         this.errorMessage = e;\n      } finally {\n         this.loading = false;\n      }\n   }\n\n   updateChartData(): void {\n      let data: Map<FileAnalyticsAgeDistribution, number>;\n      switch (this.groupBy) {\n         case FileAnalyticsDateGroupBy.CREATED_DATE:\n            data = MapUtil.toMap<FileAnalyticsAgeDistribution, number>(\n                  this.filesCountByAgeData.ageDistributionByCreatedDate,\n                  this.AGE_DISTRIBUTION_KEY_GENERATOR);\n            break;\n         case FileAnalyticsDateGroupBy.ACCESSED_DATE:\n            data = data = MapUtil.toMap<FileAnalyticsAgeDistribution, number>(\n                  this.filesCountByAgeData.ageDistributionByLastAccessedDate,\n                  this.AGE_DISTRIBUTION_KEY_GENERATOR);\n            break;\n         case FileAnalyticsDateGroupBy.MODIFIED_DATE:\n            data = data = MapUtil.toMap<FileAnalyticsAgeDistribution, number>(\n                  this.filesCountByAgeData.ageDistributionByModifiedDate,\n                  this.AGE_DISTRIBUTION_KEY_GENERATOR);\n            break;\n      }\n      this.chartData = this.fileAnalyticsChartService.parseFilesAgeDistributionChartData(data);\n   }\n\n   getGroupByLabel(group: FileAnalyticsDateGroupBy): string {\n      switch (group) {\n         case FileAnalyticsDateGroupBy.CREATED_DATE:\n            return VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.created.date.label\");\n         case FileAnalyticsDateGroupBy.ACCESSED_DATE:\n            return VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.accessed.date.label\");\n         case FileAnalyticsDateGroupBy.MODIFIED_DATE:\n            return VsanUiUtils.getString(\"vsan.cluster.monitor.file.analytics.files.by.age.modified.date.label\");\n      }\n   }\n}\n","/* Copyright 2020-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, Input, OnChanges} from \"@angular/core\";\nimport {ChartSectionData} from \"@component/chart/model/chart-section.data\";\nimport {IllustratedMessageType} from \"@component/illustrated-message/illustrated-message.component\";\nimport {FileAnalyticsDashboardService} from \"@generated/file-analytics-dashboard-service\";\nimport {FileAnalyticsFileTypeUsage} from \"@generated/file-analytics-file-type-usage\";\nimport {VsanFileServiceShare} from \"@generated/vsan-file-service-share\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {ArrayUtils} from \"@util/array-util\";\nimport {Logger} from \"@util/logger\";\nimport {FileAnalyticsChartService} from \"../file-analytics-chart.service\";\n\n@Component({\n   templateUrl: \"file-analytics-files-count.html\",\n   styleUrls: [\"file-analytics-files-count.scss\", \"../file-analytics-common.scss\"],\n   selector: \"vsan-file-analytics-files-count\",\n})\nexport class FileAnalyticsFilesCountComponent implements OnChanges {\n\n   @Input()\n   fileShares: VsanFileServiceShare[];\n\n   loading: boolean = true;\n   errorMessage: string;\n   chartData: ChartSectionData[];\n\n   IllustratedMessageType: typeof IllustratedMessageType = IllustratedMessageType;\n\n   constructor(private fileAnalyticsDashboardService: FileAnalyticsDashboardService,\n         private fileAnalyticsChartService: FileAnalyticsChartService) {\n   }\n\n   ngOnChanges(): void {\n      if (!this.fileShares) {\n         return;\n      }\n      this.fetch();\n   }\n\n   @RefreshHandler\n   async fetch(): Promise<void> {\n      this.loading = true;\n      this.errorMessage = null;\n      this.chartData = null;\n      try {\n         const fileSharesUuidsBefore: string[] = this.fileShares.map(share => share.uuid);\n         // Load file type usages data\n         const fileTypeUsages: FileAnalyticsFileTypeUsage[] =\n               await this.fileAnalyticsDashboardService.queryFileTypeUsage(ManagedObject.contextObject,\n                     fileSharesUuidsBefore);\n         if (!ArrayUtils.equalsIgnoreOrder(fileSharesUuidsBefore, this.fileShares.map(share => share.uuid))) {\n            // The parent dashboard has already changed the selection of file shares, ignore processing this result.\n            Logger.debug(\"Ignoring queryFileTypeUsage result due to new selection.\");\n            return;\n         }\n         // Parse the fetched data to the pie chart sections\n         this.chartData = this.fileAnalyticsChartService.parseFilesTypeDistributionChartData(fileTypeUsages);\n      } catch (e) {\n         Logger.error(e);\n         this.errorMessage = e;\n      } finally {\n         this.loading = false;\n      }\n   }\n}\n"]}