{"version":3,"sources":["./src/app/vsan/common/service/flow/loading-indicator.decorator.ts","./src/app/vsan/common/service/flow/error-handler.decorator.ts","./src/app/vsan/common/service/flow/loader.decorator.ts","./src/app/vsan/common/util/modal-builder.ts","./src/app/vsan/common/service/flow/loading-flow-wrapper.data.ts"],"names":[],"mappings":"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","file":"140-es2015.js","sourcesContent":["/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\n\n\nimport {LoadingFlowWrapper} from \"@service/flow/loading-flow-wrapper.data\";\n\n/**\n * This property decorator is supposed to be used along with the @Loader decorator.\n * As the @Loader decorator keeps track of all the active loading operations,\n * we can easily know if all the loading is completed. If there are any ongoing loading\n * operations, the property decorated with @LoadingIndicator will be set to \"true\", otherwise - it will be \"false\".\n * You can have as many properties decorated with @LoadingIndicator as you want, but they need to have different names.\n * The LoadingIndicator will show the loading state of the Loader methods with the same name.\n *\n * <pre>\n * @Loader()\n * loadDataSync(): any {\n *    // Load some data\n * }\n *\n * @Loader()\n * loadDataAsync(): Promise<any> {\n *    // Load some data\n * }\n *\n * @LoadingIndicator\n * isLoading: boolean; // The field will be set to \"false\" when the both the methods are complete and the Promise is resolved.\n * </pre>\n */\nexport function LoadingIndicator(props?: LoadingIndicatorProperties): PropertyDecorator {\n   props = props || {};\n   return (targetClass: any, propertyKey: string): void => {\n      Object.defineProperty(targetClass, propertyKey, {\n         get: function (): boolean {\n            if (Array.isArray(props.name)) {\n               return props.name.some((loaderName: string) => (new LoadingFlowWrapper(this, loaderName)).isLoading);\n            }\n\n            return (new LoadingFlowWrapper(this, props.name)).isLoading;\n         },\n      });\n   };\n}\n\nexport interface LoadingIndicatorProperties {\n   name?: string | string[];\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {LoadingFlowWrapper} from \"@service/flow/loading-flow-wrapper.data\";\n\n/**\n * This property decorator is supposed to be used along with the @Loader decorator.\n * If an exception is thrown during the execution of the method decorated with @Loader\n * the ErrorHandler method will be invoked. You can define as many ErrorHandlers as you want,\n * but they must be with different names. The name can be provided as input to the decorator.\n * If a name is set to the ErrorHandler it will handle only the errors thrown by Loader functions\n * with the same name. If no name is passed to the ErrorHandler, it will handle only the errors\n * from Loader functions with no name.\n *\n * <pre>\n * // Example 1:\n * @Loader()\n * loadSyncData(): any {\n *    throw new Error(\"Failed to load sync data\");\n * }\n *\n * @ErrorHandler()\n * handleError(err: any) {\n *    // handle the error.\n * }\n *...\n *\n * // Example 2\n *\n * @Loader({name: \"data-loading-flow})\n * async loadAsyncData(): Promise<any> {\n *    return Promise.reject(\"Failed to load async data\");\n * }\n *\n * @ErrorHandler({name: \"data-loading-flow})\n * handleError(err: any) {\n *    // handle the error.\n * }\n * ...\n * </pre>\n */\nexport function ErrorHandler(props?: ErrorHandlerProperties): MethodDecorator {\n   props = props || {};\n   return (targetClass: any, functionName: string, descriptor: PropertyDescriptor): void => {\n      (new LoadingFlowWrapper(targetClass, props.name)).errorHandler = descriptor.value;\n   };\n}\n\n/**\n * Properties of the ErrorHandler decorator.\n */\nexport interface ErrorHandlerProperties {\n\n   /**\n    * Indicates which @Loder should be handled by this @ErrorHandler\n    */\n   name?: string;\n}\n","/* Copyright 2021-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ErrorContext, FunctionWrapper} from \"@service/flow/function-wrapper\";\nimport {LoadingFlowWrapper} from \"@service/flow/loading-flow-wrapper.data\";\nimport {ScreenReaderAnnouncerService, SrEvent, SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {Reflection} from \"@util/reflection\";\nimport {GlobalLogger} from \"../../../../vsan-app.module\";\n\n/**\n * Method decorator that does the following:\n *  - watches for errors and if such appear:\n *       - the error is logged in the browser's console\n *       - the error is logged in the H5C server log\n *       - the related @ErrorMessage fields are populated\n *       - the related @ErrorHandler methods are invoked\n *  - Updates the @LoadingIndicator decorated fields\n *  - Invokes the screen reader service once the loading operation completes successfully\n */\nexport function Loader(params?: LoaderParams): MethodDecorator {\n   // If no params are passed, initialize the variable in order to avoid multiple null-checks\n   params = params || {};\n   return (targetClass: any, functionName: string, descriptor: PropertyDescriptor): void => {\n      // Use the component name as tag in order easily find where the error was thrown.\n      const tag: string = Reflection.getClassName(targetClass);\n      const loaderName: string = params.name;\n      const originalFn: any = descriptor.value;\n\n      descriptor.value = function (): any {\n         const loadingFlowWrapper: LoadingFlowWrapper = new LoadingFlowWrapper(this, loaderName);\n         return (new FunctionWrapper(originalFn))\n               .preExecute(() => {\n                  loadingFlowWrapper.error = undefined;\n                  loadingFlowWrapper.incrementLoads();\n                  ScreenReaderAnnouncerService.invoke(\n                        params.preLoadSrMessage || params.srMessage,\n                        params.srMessageType, SrEvent.LOADING);\n               })\n               .postExecute(() => {\n                  ScreenReaderAnnouncerService.invoke(params.srMessage, params.srMessageType, SrEvent.LOADED);\n               })\n               .onError((ex: any) => {\n                  processError(loadingFlowWrapper, tag, ex);\n                  const rethrow: boolean = shouldRethrow(loadingFlowWrapper, params);\n                  if (!rethrow) {\n                     ex = invokeErrorHandler(loadingFlowWrapper, ex);\n                  }\n                  return new ErrorContext(rethrow, ex);\n               })\n               .finally(() => {\n                  loadingFlowWrapper.decrementLoads();\n               })\n               .invoke(loadingFlowWrapper.backingObject, arguments);\n      };\n   };\n}\n\n/**\n * Parameters for the @Loader decorator\n */\nexport interface LoaderParams {\n\n   /**\n    * The name of the loader by which will be resolved te @LoadingIndicator, @ErrorHandler and @ErrorMessage\n    */\n   name?: string;\n\n   /**\n    * Indicates if the error should be rethrown after being processed by the @ErrorHandlers\n    */\n   rethrow?: boolean;\n\n   /**\n    * Used along with srMessageType to create the screen reader message to be announced after the loading\n    * operation completes successfully.\n    * If preLoadSrMessage is not set, srMessage will also be announced when the loading operation starts.\n    */\n   srMessage?: string;\n\n   /**\n    * Used when the message in preExecute() should be different than the one in postExecute().\n    * If not set, srMessage will be used in both places.\n    * Should be given a value when the srMessageType is set to CUSTOM,\n    * because otherwise the exact same message will be announced in preExecute() and postExecute().\n    */\n   preLoadSrMessage?: string;\n\n   /**\n    * The screen reader message type. Used for creating an appropriate message.\n    */\n   srMessageType?: SrMessageType;\n}\n\n/**\n * Handles the given error by:\n *  - logging the error in the browsers console\n *  - logging the error in the H5C backend log\n *  - updates all @ErrorMessage fields\n */\nfunction processError(wrapper: LoadingFlowWrapper, tag: string, ex: any): void {\n   // Log the error to the backend\n   GlobalLogger.error(tag, ex);\n\n   // Cache the error so it can be retrieved by @ErrorMessage decorated fields\n   wrapper.error = ex;\n}\n\n/**\n * Invokes the error handler (if defined)\n */\nfunction invokeErrorHandler(wrapper: LoadingFlowWrapper, ex: any): any {\n   const handler: any = wrapper.errorHandler;\n   return !!handler\n         ? handler.call(wrapper.backingObject, ex)\n         : null;\n}\n\n/**\n * Reject the promise only if:\n * 1. there are no handlers declared\n * 2. the components has explicitly requested the error to be rethrown\n */\nfunction shouldRethrow(wrapper: LoadingFlowWrapper, params: LoaderParams): boolean {\n   return !wrapper.errorHandler && !wrapper.errorMessageGetter\n         || !!params.rethrow;\n}\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {environment} from \"@env/environment\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Logger} from \"./logger\";\nimport {WebPlatform} from \"./platform\";\nimport {VsanUiUtils} from \"./vsan-util\";\n\nexport class ModalBuilder {\n\n   static readonly WIDTH: number = 0;\n   static readonly HEIGHT: number = 1;\n\n   static readonly DEFAULT_SIZE: number[] = [1000, 530];\n   static readonly WIZARD_XL: number[] = [1200, 700];\n\n   static readonly APP_URL: string = (environment.repa && environment.repaExtension)\n         ? \"index.html\"\n         : \"/ui/h5-vsan-ui/\";\n\n   private size: number[] = ModalBuilder.DEFAULT_SIZE;\n\n   // When null, the modal dialog will be headless and the docked\n   // view is expected to provide a title bar.\n   private title: string = null;\n\n   private accessibilityTitle: string = null;\n\n   private urlParams: any = {};\n\n   private eventTarget: EventTarget;\n\n   constructor(private appId: string) {\n   }\n\n   setDimensions(dimensions: number[]): ModalBuilder {\n      if (!dimensions || dimensions.length !== 2) {\n         Logger.warn(\"invalid modal dimensions\", dimensions);\n         dimensions = ModalBuilder.DEFAULT_SIZE;\n      }\n      return this.setSize(dimensions[ModalBuilder.WIDTH], dimensions[ModalBuilder.HEIGHT]);\n   }\n\n   setSize(width: number, height: number): ModalBuilder {\n      this.size = [width, height];\n      return this;\n   }\n\n   setUrlParameters(params: any): ModalBuilder {\n      this.urlParams = params;\n      return this;\n   }\n\n   /**\n    * Set to null if the view provides its own title bar\n    */\n   setTitle(title: string): ModalBuilder {\n      this.title = title;\n      return this;\n   }\n\n   setAccessibilityTitle(accessibilityTitle: string): ModalBuilder {\n      this.accessibilityTitle = accessibilityTitle;\n      return this;\n   }\n\n   /**\n    * Set explicit event target if it is changed before opening the modal.\n    * For example when making a preceding request the event target is the XMLHttpRequest object.\n    */\n   setEventTarget(eventTarget: EventTarget): ModalBuilder {\n      this.eventTarget = eventTarget;\n      return this;\n   }\n\n   /**\n    * Opens a modal dialog and returns a promise to collect the result; On close the target element is focused.\n    * @param context - any JS data object, can be retrieved by WebPlatform.getModalContext()\n    * @returns {Promise<any>} - Invoked if the dialog invokes WebPlatform.closeModalDialog(arg)\n    *       with non-null arg. The promise is never rejected.\n    */\n   open(context?: any): Promise<any> {\n      return new Promise<any>((accept) => {\n         VsanUiUtils.pluginContext.targetElement = this.eventTarget ? this.eventTarget :\n               (event && event.target ? event.target : null);\n         VsanUiUtils.pluginContext.modalResultHandler = (data?: any) => {\n            if (typeof data !== \"undefined\") {\n               // Deep copy of the object was required to resolve an issue with object's prototype overriding when\n               // passing complex objects in IE11/Edge; Keep it for safety.\n               accept(JSON.parse(JSON.stringify(data)));\n            } else if (VsanUiUtils.pluginContext.targetElement && VsanUiUtils.pluginContext.targetElement.focus) {\n               // On cancel just focus the target element. Timeout is required as otherwise the focus may be\n               // consumed by the mouse click.\n               setTimeout(() => VsanUiUtils.pluginContext.targetElement.focus(), 100);\n            }\n         };\n\n         let actionUrl: string = `${ModalBuilder.APP_URL}?viewId=${this.appId}`;\n\n         let separator: string = \"?\";\n         for (const param in this.urlParams) {\n            actionUrl += separator + param + \"=\" + this.urlParams[param];\n            separator = \"&\";\n         }\n\n         WebPlatform.openModalDialog(this.title,\n               actionUrl,\n               ManagedObject.contextObjectUid,\n               this.size[0], this.size[1],\n               this.title != null,\n               VsanUiUtils.pluginContext.modalResultHandler /* onClose */,\n               context /* retrieve with Platform.getModalContext() */,\n               this.accessibilityTitle);\n      });\n   }\n\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\n/**\n * This class is used internally by the @Loader decorator and the decorators related to it.\n * It encapsulates the logic for accessing internal properties needed for the decorators to work.\n * The state of this class is kept in the \"backingObject\" passed to the constructor. This allows\n * the wrapper class to be easily recreated wherever it is needed without worrying about keeping its reference.\n *\n * <pre>\n * const obj: any = {};\n *\n * // Create a new LoadingFlowWrapper over obj\n * const wrapper1: LoadingFlowWrapper = new LoadingFlowWrapper(obj);\n * // Set the error field to \"alabala\" string\n * wrapper1.error = \"alabala\";\n *\n * // Create a new LoadingFlowWrapper over obj\n * const wrapper2: LoadingFlowWrapper = new LoadingFlowWrapper(obj);\n * console.log(wrapper2.error); // Prints \"alabala\" because the backing object is the same\n * </pre>\n */\nexport class LoadingFlowWrapper {\n\n   private static readonly ERROR_HOLDER: string = \"__ex__\";\n   private static readonly ERROR_HANDLERS_REF_HOLDER: string = \"__errorHandlers__\";\n   private static readonly ERROR_MESSAGE_GETTERS_REF_HOLDER: string = \"__errorMessageGetters__\";\n   private static readonly LOADS_COUNT_HOLDER: string = \"__loadsCount__\";\n\n   private static readonly DEFAULT_NAME: string = \"default-loader\";\n\n   constructor(private _backingObject: any,\n         private loaderName: string) {\n      this.loaderName = loaderName || LoadingFlowWrapper.DEFAULT_NAME;\n\n      // Init all collections\n      this.initCollection(LoadingFlowWrapper.ERROR_HOLDER);\n      this.initCollection(LoadingFlowWrapper.ERROR_HANDLERS_REF_HOLDER);\n      this.initCollection(LoadingFlowWrapper.ERROR_MESSAGE_GETTERS_REF_HOLDER);\n      this.initCollection(LoadingFlowWrapper.LOADS_COUNT_HOLDER);\n   }\n\n   private initCollection(collectionName: string): void {\n      // Check first if the collection hasn't been initialized by another wrapper.\n      // If so, do nothing as we don't want to override the data already set.\n      if (!this.backingObject[collectionName]) {\n         this.backingObject[collectionName] = [];\n      }\n   }\n\n   /**\n    * The original object which methods/properties were decorated\n    */\n   get backingObject(): any {\n      return this._backingObject;\n   }\n\n   /**\n    * Returns the thrown error\n    */\n   get error(): any {\n      return this.backingObject[LoadingFlowWrapper.ERROR_HOLDER][this.loaderName];\n   }\n\n   /**\n    * Sets the thrown error\n    */\n   set error(val: any) {\n      this.backingObject[LoadingFlowWrapper.ERROR_HOLDER][this.loaderName] = val;\n   }\n\n   /**\n    * Returns the number of active loading operations\n    */\n   private get loadsCount(): number {\n      return this.backingObject[LoadingFlowWrapper.LOADS_COUNT_HOLDER][this.loaderName];\n   }\n\n   /**\n    * Returns true if there are running loader methods or promises.\n    */\n   get isLoading(): boolean {\n      return !!this.loadsCount;\n   }\n\n   /**\n    * Increase the number of active loading operations by one\n    */\n   incrementLoads(): void {\n      // Initialize the counter if it hasn't been initialized yet\n      if (!this.loadsCount) {\n         this.backingObject[LoadingFlowWrapper.LOADS_COUNT_HOLDER][this.loaderName] = 0;\n      }\n      this.backingObject[LoadingFlowWrapper.LOADS_COUNT_HOLDER][this.loaderName] += 1;\n   }\n\n   /**\n    * Decreases the number of active loading operations by one\n    */\n   decrementLoads(): void {\n      this.backingObject[LoadingFlowWrapper.LOADS_COUNT_HOLDER][this.loaderName] -= 1;\n   }\n\n   get errorHandler(): any {\n      return this.backingObject[LoadingFlowWrapper.ERROR_HANDLERS_REF_HOLDER][this.loaderName];\n   }\n\n   /**\n    * Registers a new error handler.\n    */\n   set errorHandler(errorHandler: any) {\n      if (!!this.errorHandler) {\n         throw new Error(`ErrorHandler for loader \"${this.loaderName}\" already registered!`);\n      }\n      this.backingObject[LoadingFlowWrapper.ERROR_HANDLERS_REF_HOLDER][this.loaderName] = errorHandler;\n   }\n\n   get errorMessageGetter(): any {\n      return this.backingObject[LoadingFlowWrapper.ERROR_MESSAGE_GETTERS_REF_HOLDER][this.loaderName];\n   }\n\n   set errorMessageGetter(getter: any) {\n      if (!!this.errorMessageGetter) {\n         throw new Error(`ErrorMessage for loader \"${this.loaderName}\" already registered!`);\n      }\n      this.backingObject[LoadingFlowWrapper.ERROR_MESSAGE_GETTERS_REF_HOLDER][this.loaderName] = getter;\n   }\n}\n"],"sourceRoot":"webpack:///"}