{"version":3,"sources":["./src/app/vsan/common/directive/clr-button-group/clr-button-base.directive.ts","./src/app/vsan/common/component/datagrid/filter/enumerated-filter.component.ts.EnumeratedFilterComponent.html","./src/app/vsan/common/component/datagrid/filter/enumerated-filter.component.ts","./src/app/vsan/common/component/datagrid/filter/enumerated-filter-item.html","./src/app/vsan/common/component/datagrid/filter/enumerated-filter-item.component.ts","./src/app/vsan/common/directive/external-link/external-link.directive.ts"],"names":[],"mappings":"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","file":"31-es2015.js","sourcesContent":["/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ClrButton} from \"@clr/angular\";\n\n/**\n * Use this class as base class for directive, which handles clr-button. It will help to link the rendered button with\n * the clr-button on which the directive is applied.\n */\nexport abstract class ClrButtonBaseDirective {\n\n   constructor(private clrButton: ClrButton) {\n      if (!clrButton) {\n         return;\n      }\n      // name should be set, if not provided in template - generate one. ClrButtom#name is used to generate the name\n      // attribute of the markup button. Later the name is used to match the generated markup with the directive.\n      if (!clrButton.name) {\n         clrButton.name = Math.random().toString();\n      }\n\n      const directiveHolder: DirectiveHolder = (clrButton as DirectiveHolder);\n      directiveHolder.directives = directiveHolder.directives || [];\n      directiveHolder.directives.push(this);\n   }\n\n   /**\n    * This method will be called when the actual html button is rendered.\n    */\n   abstract resolveButton(clrButton: ClrButton, button: HTMLButtonElement, index: number);\n}\n\nexport interface DirectiveHolder extends ClrButton {\n   directives: ClrButtonBaseDirective[];\n}","<ng-content></ng-content>","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {Component, EventEmitter, HostBinding, Input, Output} from \"@angular/core\";\nimport {ClrDatagridFilter, ClrDatagridFilterInterface} from \"@clr/angular\";\nimport {Subject} from \"rxjs\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * Custom grid filter for a column with enumerable set of values\n */\n@Component({\n   selector: \"vsan-enumerated-filter\",\n   template: \"<ng-content></ng-content>\",\n   styleUrls: [\"enumerated-filter.scss\"],\n})\nexport class EnumeratedFilterComponent<T, K> implements ClrDatagridFilterInterface<T> {\n\n   private readonly MAX_ITEMS_PER_COLUMN: number = 6;\n\n   // workaround: clrDgField should inject the field's value in accept(item:any):boolean method doesn't work.\n   @Input()\n   vsanDgField: string;\n\n   @Input()\n   selectMultiple: boolean;\n\n   @Input()\n   selectionResolver: EnumeratedFilterSelectionResolver<T, K>;\n\n   private _selectedFilterValues: K[] = [];\n\n   @Input()\n   set selectedFilterValues(value: K[]) {\n      if (VsanUiUtils.isEmpty(value)) {\n         this._selectedFilterValues = [];\n      } else {\n         // creates a copy of the array\n         this._selectedFilterValues = value.slice(0, value.length);\n      }\n      this.changes.next(true);\n   }\n\n   get selectedFilterValues(): K[] {\n      return this._selectedFilterValues;\n   }\n\n   @Input()\n   filtersCount: number = 0;\n\n   @Output()\n   selectedFilterValuesChange: EventEmitter<K[]> = new EventEmitter<K[]>();\n\n   @HostBinding(\"style.column-count\")\n   get numberOfColumns(): number {\n      return Math.ceil(this.filtersCount / this.MAX_ITEMS_PER_COLUMN);\n   }\n\n   constructor(private filterContainer: ClrDatagridFilter) {\n      filterContainer.setFilter(this);\n   }\n\n   // overrides parent\n   changes: Subject<any> = new Subject<any>();\n\n   // overrides parent\n   accepts(item: T): boolean {\n      if (this.selectionResolver) {\n         return this.selectionResolver.isSelected(item, this._selectedFilterValues);\n      }\n      return this._selectedFilterValues.indexOf(this.getItemValue(item, this.vsanDgField)) > -1;\n   }\n\n   // overrides parent\n   isActive(): boolean {\n      return this._selectedFilterValues.length > 0;\n   }\n\n   selectItem(value: K): void {\n      // Deselects the filter if the same item is clicked from the template.\n      const itemIndex: number = this._selectedFilterValues.findIndex(filterValue => this.areEquals(filterValue, value));\n      if (this.selectMultiple) {\n         if (itemIndex > -1) {\n            this._selectedFilterValues.splice(itemIndex, 1);\n         } else {\n            this._selectedFilterValues.push(value);\n         }\n      } else {\n         this._selectedFilterValues = itemIndex > -1 ? [] : this._selectedFilterValues = [value];\n      }\n      this.selectedFilterValuesChange.emit(this._selectedFilterValues);\n      this.changes.next(true);\n   }\n\n   isSelected(item: K): boolean {\n      return this._selectedFilterValues.some(value => this.areEquals(value, item));\n   }\n\n   private areEquals(a: K, b: K): boolean {\n      return this.selectionResolver ?\n            this.selectionResolver.areEquals(a, b) :\n            a === b;\n   }\n\n   private getItemValue(item: T, propertiesChain: string): any {\n      if (!item) {\n         return undefined;\n      }\n      // the property may be chained, i.e. \"data.host.name\"\n      const firstPropDelimiter: number = propertiesChain.indexOf(\".\");\n      if (firstPropDelimiter < 0) {\n         // there is no chained property\n         return item.hasOwnProperty(propertiesChain) ? item[propertiesChain] : undefined;\n      }\n      // chained properties - get inner object and resolve its property\n      const prop: string = propertiesChain.substring(0, firstPropDelimiter);\n      return this.getItemValue(item[prop], propertiesChain.substring(firstPropDelimiter + 1));\n   }\n\n}\n\nexport abstract class EnumeratedFilterSelectionResolver<T, K> {\n   abstract isSelected(item: T, selectedValues: K[]): boolean;\n\n   areEquals(filterValue1: K, filterValue2: K): boolean {\n      return filterValue1 === filterValue2;\n   }\n}\n","<!-- Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential -->\n<clr-checkbox-wrapper>\n   <input type=\"checkbox\" clrCheckbox [checked]=\"isSelected()\" (click)=\"onClick()\">\n   <label>\n      <clr-icon *ngIf=\"iconVisible\"\n                [attr.shape]=\"iconShape\"\n                [ngClass]=\"iconClass\"\n                aria-hidden=\"true\"\n                class=\"is-solid\" pointer>\n      </clr-icon>\n      {{label}}\n   </label>\n</clr-checkbox-wrapper>","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nimport {Component, Host, HostListener, Input} from \"@angular/core\";\nimport {Icon} from \"@util/icon\";\nimport {EnumeratedFilterComponent} from \"@component/datagrid/filter/enumerated-filter.component\";\n\n/**\n * Part of the Enumerated Filter. Represent one of the available values to filter by.\n */\n@Component({\n   selector: \"vsan-enumerated-filter-item\",\n   templateUrl: \"enumerated-filter-item.html\",\n   styleUrls: [\"enumerated-filter-item.scss\"],\n   host: {\n      \"[class.selected-filter]\": \"this.isSelected()\",\n      \"[attr.id]\": \"this.value\",\n   },\n})\nexport class EnumeratedFilterItemComponent<T, K> {\n\n   @Input()\n   value: K;\n\n   @Input()\n   iconShape: string = Icon.EMPTY_ICON;\n\n   @Input()\n   iconVisible: boolean = true;\n\n   @Input()\n   iconClass: string;\n\n   @Input()\n   label: string;\n\n   constructor(@Host() private parent: EnumeratedFilterComponent<T, K>) {}\n\n   onClick(): void {\n      this.parent.selectItem(this.value);\n   }\n\n   isSelected(): boolean {\n      return this.parent.isSelected(this.value);\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {\n   AfterViewInit,\n   ComponentFactoryResolver,\n   Directive,\n   ElementRef,\n   Host,\n   Input,\n   Optional,\n   Renderer2,\n   Self,\n} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {NavigationService} from \"@navigation/navigation.service\";\nimport {ClrButtonBaseDirective} from \"@directive/clr-button-group/clr-button-base.directive\";\nimport {ClrButton} from \"@clr/angular\";\n\n/**\n * Decorates a button or an anchor as external link. Requires one of the optional parameters articleId, helpId or url.\n *\n * @param external-link: Optional. Localization key of the text label of the external link. If omitted default label\n * will be used - \"Learn more\" for anchors or \"Ask VMWare\" for buttons.\n * @param articleId - Optional. Id of article in knowledge base.\n * @param helpId - Optional. Help id which will redirect to Knowledge Base.\n * @param url - Optional. External URL.\n */\n@Directive({\n   selector: \"a[external-link], button[external-link], clr-button[external-link]\",\n})\nexport class ExternalLinkDirective extends ClrButtonBaseDirective implements AfterViewInit {\n   private readonly ASK_VMWARE_DEFAULT_TEXT_KEY: string = \"vsan.common.askVMware\";\n   private readonly LEARN_MORE_DEFAULT_TEXT_KEY: string = \"vsan.common.learnMore\";\n\n   private readonly CONTAINER_CLASS: string = \"icon-name-container\";\n   private readonly NAVIGATION_EVENT_TYPE: string = \"click\";\n   private readonly LEAD_TO_NOWHERE_URL: string = \"javascript://\";\n   private readonly HTML_ELEMENT_SPAN_NAME: string = \"span\";\n   private readonly HTML_ELEMENT_ICON_NAME: string = \"clr-icon\";\n   private readonly HTML_ELEMENT_ROLE_ATTR_NAME: string = \"role\";\n   private readonly HTML_ELEMENT_ROLE_ATTR_VALUE: string = \"link\";\n   private readonly ICON_SHAPE_ATTR_NAME: string = \"shape\";\n   private readonly ICON_SHAPE_ATTR_VALUE: string = \"pop-out\";\n   private readonly ICON_SIZE_ATTR_NAME: string = \"size\";\n   private readonly ICON_SIZE_ATTR_VALUE: string = \"16\";\n   private readonly ICON_CLASS_ATTR_NAME: string = \"class\";\n   private readonly ICON_CLASS_ATTR_VALUE: string = \"link\";\n   private readonly ICON_TITLE_ATTR_NAME: string = \"title\";\n\n   private readonly KB_URL: string = \"http://kb.vmware.com/kb/\";\n\n   @Input(\"external-link\")\n   anchorText: string;\n\n   @Input()\n   articleId: string;\n\n   @Input()\n   helpId: string;\n\n   @Input()\n   url: string;\n\n   constructor(private el: ElementRef<HTMLElement>,\n         private resolver: ComponentFactoryResolver,\n         private renderer: Renderer2,\n         private navigationService: NavigationService,\n         // this variable will be initialized only if the host is clr-button\n         @Host() @Self() @Optional() clrButton: ClrButton) {\n      super(clrButton);\n   }\n\n   ngAfterViewInit(): void {\n      const element: HTMLElement = this.el.nativeElement;\n      // continue only if element is HTML link or button\n      if (!this.isLink(element) && !this.isButton(element)) {\n         // element is clr-button, wait until html button for it is resolved - handled by resloveButton\n         return;\n      }\n      this.prepareExternalLink(element);\n   }\n\n   resolveButton(clrButton: ClrButton, button: HTMLButtonElement, index: number): void {\n      // only if element is clr-button. At this point the html button is already resolved. Apply on it.\n      this.prepareExternalLink(button);\n   }\n\n   private prepareExternalLink(element: HTMLElement): void {\n      this.renderer.addClass(element, this.CONTAINER_CLASS);\n\n      this.setText(element);\n      if (this.isLink(element)) {\n         this.decorateLink(element);\n      } else {\n         this.addLinkRole(element);\n      }\n\n      this.initializeNavigationHandler(element);\n   }\n\n   private isButton(element: HTMLElement): boolean {\n      return element instanceof HTMLButtonElement;\n   }\n\n   private isLink(element: HTMLElement): boolean {\n      return element instanceof HTMLAnchorElement;\n   }\n\n   private setText(element: HTMLElement): void {\n      const span: HTMLSpanElement = this.renderer.createElement(this.HTML_ELEMENT_SPAN_NAME);\n      span.innerText = this.getText(element);\n      this.renderer.appendChild(element, span);\n\n      const icon: HTMLSpanElement = this.renderer.createElement(this.HTML_ELEMENT_ICON_NAME);\n      icon.setAttribute(this.ICON_SHAPE_ATTR_NAME, this.ICON_SHAPE_ATTR_VALUE);\n      icon.setAttribute(this.ICON_SIZE_ATTR_NAME, this.ICON_SIZE_ATTR_VALUE);\n      icon.setAttribute(this.ICON_CLASS_ATTR_NAME, this.ICON_CLASS_ATTR_VALUE);\n      // Set title of the icon for screen readers clarity\n      icon.setAttribute(this.ICON_TITLE_ATTR_NAME, VsanUiUtils.getString(\"vsan.screenReader.label.externalLink.icon\"));\n      this.renderer.appendChild(element, icon);\n   }\n\n   private getText(element: HTMLElement): string {\n      if (this.anchorText) {\n         return this.anchorText;\n      }\n      const key: string = this.isButton(element) ? this.ASK_VMWARE_DEFAULT_TEXT_KEY : this.LEARN_MORE_DEFAULT_TEXT_KEY;\n      return VsanUiUtils.getString(key);\n   }\n\n   private decorateLink(element: HTMLElement): void {\n      const linkElement: HTMLLinkElement = element as HTMLLinkElement;\n      // don't use href attribute. If omitted, the link will be not visualized properly.\n      linkElement.href = this.LEAD_TO_NOWHERE_URL;\n      // display link on same line\n      linkElement.style.display = \"inline-flex\";\n   }\n\n   private initializeNavigationHandler(element: HTMLElement): void {\n      element.addEventListener(this.NAVIGATION_EVENT_TYPE, () => {\n         if (this.helpId) {\n            this.navigationService.askVMware(this.helpId);\n            return;\n         }\n         if (this.articleId) {\n            this.navigationService.navigateToAddress(`${this.KB_URL}${this.articleId}`);\n            return;\n         }\n         if (this.url) {\n            this.navigationService.navigateToAddress(this.url);\n         }\n      });\n   }\n\n   // Indicate external navigation by assigning \"link\" role\n   private addLinkRole(element: HTMLElement): void {\n      this.renderer.setAttribute(element, this.HTML_ELEMENT_ROLE_ATTR_NAME, this.HTML_ELEMENT_ROLE_ATTR_VALUE);\n   }\n}"],"sourceRoot":"webpack:///"}