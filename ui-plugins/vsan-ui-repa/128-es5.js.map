{"version":3,"sources":["webpack:///src/app/vsan/common/directive/signpost-title/signpost-title.directive.ts","webpack:///src/app/vsan/virtualobjects/virtual-objects.component.ts","webpack:///src/app/vsan/common/service/navigation/model/knowledge-base-id.ts","webpack:///src/app/vsan/common/util/modal-builder.ts","webpack:///src/app/vsan/virtualobjects/view/placement-details-dialog.html","webpack:///src/app/vsan/virtualobjects/virtual-objects.module.ts","webpack:///src/app/vsan/common/directive/clr-button-group/clr-button-group-common.directive.ts","webpack:///src/app/vsan/performance/model/perf-monitor-view-type.model.ts","webpack:///src/app/vsan/virtualobjects/view/placement-details-dialog.component.ts","webpack:///src/app/vsan/virtualobjects/virtual-objects.html"],"names":["SignpostTitleDirective","el","renderer","BUTTON_TAG_NAME","CLR_ICON_TAG_NAME","TITLE_ATTRIBUTE","ARIA_EXPANDED_ATTRIBUTE","ARIA_LABEL_ATTRIBUTE","signpostTitle","signpostIcon","nativeElement","getElementsByTagName","item","setAttribute","getString","button","VirtualObjectsComponent","service","diskMgmtService","capabilityProvider","changeDetector","KnowledgeBaseId","virtualObjectsloading","Icon","VsanUiUtils","objectIdentitiesSupported","capabilityCheckLoading","fetch","preselectContextData","getCapabilities","clusterRef","contextObject","Promise","all","listVirtualObjects","hasNetworkPartitionsOrDisconnectedMembers","allItems","showWarning","srOnlyMessage","handleDataError","detectChanges","context","getNavigationData","presentVirtualObjectUuids","initialNameFilter","filterName","initialFilteredTypes","filterTypes","initialFilteredHealthStates","filterHealthStates","getIsObjectIdentitiesSupportedOnCluster","error","debug","generalError","ModalBuilder","appId","size","DEFAULT_SIZE","title","accessibilityTitle","urlParams","dimensions","length","warn","setSize","WIDTH","HEIGHT","width","height","params","eventTarget","accept","pluginContext","targetElement","event","target","modalResultHandler","data","JSON","parse","stringify","focus","setTimeout","actionUrl","APP_URL","separator","param","openModalDialog","contextObjectUid","WIZARD_XL","repa","repaExtension","routes","path","component","VirtualObjectsModule","ClrButtonGroupCommonDirective","elRef","allButtons","querySelectorAll","clrButtons","filter","clrButton","directives","forEach","index","buttonFound","findButtonByName","name","directive","resolveButton","buttons","i","PerfMonitorViewType","PlacementDetailsDialogComponent","virtualObjectService","virtualObjects","selectedVirtualObjects","isGrouped","selectedVirtualMachines","handleVirtualObjects","result","filterVMs","getSelectedVirtualObjects","getModalContext","loadData","updateSubTitle","promises","isEmpty","listVirtualObjectsPromise","then","push","hadNetworkPartitionsPromise","hasNetworkPartitioning","virtualObject","some","selectedVM","areEqual","vmRef","children","subtitle","getDisplayName","srMessage","srMessageType","PAGE_TITLE"],"mappings":"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","file":"128-es5.js","sourcesContent":["/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterViewInit, Directive, ElementRef, Input, Renderer2} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n/**\n * Attribute directive for setting a custom title to the clr-icon inside a clr-signpost.\n * It also adds aria-label with the same value and aria-expanded=\"false\" to the button, holding the icon.\n * Used for changing the title when a clr-icon is not explicitly added inside a clr-signpost.\n */\n@Directive({\n   selector: \"clr-signpost\",\n})\nexport class SignpostTitleDirective implements AfterViewInit {\n   private readonly BUTTON_TAG_NAME: string = \"button\";\n   private readonly CLR_ICON_TAG_NAME: string = \"clr-icon\";\n\n   private readonly TITLE_ATTRIBUTE: string = \"title\";\n   private readonly ARIA_EXPANDED_ATTRIBUTE: string = \"aria-expanded\";\n   private readonly ARIA_LABEL_ATTRIBUTE: string = \"aria-label\";\n\n   @Input(\"vsan-signpost-title\")\n   signpostTitle: string;\n\n   constructor(private el: ElementRef<HTMLElement>,\n         private renderer: Renderer2) {\n   }\n\n   ngAfterViewInit(): void {\n      if (!this.signpostTitle) {\n         return;\n      }\n\n      const signpostIcon: Element = this.el.nativeElement.getElementsByTagName(this.CLR_ICON_TAG_NAME).item(0);\n      if (signpostIcon) {\n         this.renderer.setAttribute(signpostIcon, this.TITLE_ATTRIBUTE, VsanUiUtils.getString(this.signpostTitle));\n      }\n      const button: Element = this.el.nativeElement.getElementsByTagName(this.BUTTON_TAG_NAME).item(0);\n      if (button) {\n         this.renderer.setAttribute(button, this.ARIA_EXPANDED_ATTRIBUTE, \"false\");\n         this.renderer.setAttribute(button, this.ARIA_LABEL_ATTRIBUTE, VsanUiUtils.getString(this.signpostTitle));\n      }\n   }\n}\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ChangeDetectorRef, Component, OnInit} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {Icon} from \"@util/icon\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {VirtualObjectsService} from \"@generated/virtual-objects-service\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {DiskManagementService} from \"@generated/disk-management-service\";\nimport {Logger} from \"@util/logger\";\nimport {VirtualObjectsContext} from \"@navigation/context/virtual-objects-context\";\nimport {ScreenReaderAnnouncer} from \"@service/screen-reader-announcer.service\";\nimport {BaseHealthState} from \"@util/vsan-health-util\";\nimport {VirtualObjectType} from \"@generated/virtual-object-type\";\nimport {KnowledgeBaseId} from '@service/navigation/model/knowledge-base-id';\n\n@Component({\n   selector: \"vsan-virtual-objects\",\n   templateUrl: \"virtual-objects.html\",\n   styleUrls: [\"virtual-objects.scss\"],\n})\nexport class VirtualObjectsComponent implements OnInit {\n\n   readonly KnowledgeBaseId: typeof KnowledgeBaseId = KnowledgeBaseId;\n\n   virtualObjectsloading: boolean = true;\n\n   // Enable Enums for direct use in html template.\n   Icon: typeof Icon = Icon;\n   VsanUiUtils: typeof VsanUiUtils = VsanUiUtils;\n\n   // Shows a warning when there are disconnected hosts or network partitioning in the cluster\n   showWarning: boolean;\n\n   // data retrieval error\n   generalError: string;\n\n   allItems: VirtualObjectModel[];\n\n   objectIdentitiesSupported: boolean = false;\n   capabilityCheckLoading: boolean = true;\n\n   presentVirtualObjectUuids: string[];\n   initialNameFilter: string;\n   initialFilteredTypes: VirtualObjectType[];\n   initialFilteredHealthStates: BaseHealthState[];\n\n   @ScreenReaderAnnouncer()\n   srOnlyMessage: string;\n\n   constructor(\n         private service: VirtualObjectsService,\n         private diskMgmtService: DiskManagementService,\n         private capabilityProvider: VsanCapabilityProvider,\n         private changeDetector: ChangeDetectorRef) {\n   }\n\n   ngOnInit(): void {\n      this.fetch();\n   }\n\n   @RefreshHandler\n   async fetch(): Promise<void> {\n      this.preselectContextData();\n\n      await this.getCapabilities();\n      if (!this.objectIdentitiesSupported) {\n         return;\n      }\n\n      // Start loading the virtual objects data\n      try {\n         this.virtualObjectsloading = true;\n         const clusterRef: ManagedObject = ManagedObject.contextObject;\n         [this.allItems, this.showWarning] = await Promise.all([\n            this.service.listVirtualObjects(clusterRef, null),\n            this.diskMgmtService.hasNetworkPartitionsOrDisconnectedMembers(clusterRef),\n         ]);\n\n         this.srOnlyMessage = VsanUiUtils.getString(\"vsan.screenReader.message.page.loaded\",\n               VsanUiUtils.getString(\"vsan.monitor.virtualObjects\"));\n      } catch (error) {\n         this.handleDataError(error);\n      } finally {\n         this.virtualObjectsloading = false;\n         this.changeDetector.detectChanges();\n      }\n   }\n\n   private preselectContextData(): void {\n      const context: VirtualObjectsContext = VsanUiUtils.getNavigationData();\n      if (context) {\n         this.presentVirtualObjectUuids = context.presentVirtualObjectUuids;\n         this.initialNameFilter = context.filterName;\n         this.initialFilteredTypes = context.filterTypes;\n         this.initialFilteredHealthStates = context.filterHealthStates;\n      } else {\n         this.presentVirtualObjectUuids = null;\n         this.initialNameFilter = null;\n         this.initialFilteredTypes = null;\n         this.initialFilteredHealthStates = null;\n      }\n   }\n\n   private async getCapabilities(): Promise<void> {\n      this.capabilityCheckLoading = true;\n      try {\n         this.objectIdentitiesSupported = await this.capabilityProvider\n               .getIsObjectIdentitiesSupportedOnCluster(ManagedObject.contextObject);\n      } catch (error) {\n         this.handleDataError(error);\n      }\n      this.capabilityCheckLoading = false;\n   }\n\n   private handleDataError(error: string): void {\n      Logger.debug(\"Error loading virtual objects data: \" + error);\n      this.generalError = error;\n   }\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n/**\n * IDs used in external KB link navigation\n */\nexport enum KnowledgeBaseId {\n   PRECHECK_PCP = \"83954\",\n   VIRTUAL_OBJECTS = \"2108319\",\n   UPGRADE = \"2148493\",\n   PERFORMANCE_DIAGNOSTICS = \"2148770\",\n   SUPPORT_INSIGHT = \"60206\",\n}\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {environment} from \"@env/environment\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Logger} from \"./logger\";\nimport {WebPlatform} from \"./platform\";\nimport {VsanUiUtils} from \"./vsan-util\";\n\nexport class ModalBuilder {\n\n   static readonly WIDTH: number = 0;\n   static readonly HEIGHT: number = 1;\n\n   static readonly DEFAULT_SIZE: number[] = [1000, 530];\n   static readonly WIZARD_XL: number[] = [1200, 700];\n\n   static readonly APP_URL: string = (environment.repa && environment.repaExtension)\n         ? \"index.html\"\n         : \"/ui/h5-vsan-ui/\";\n\n   private size: number[] = ModalBuilder.DEFAULT_SIZE;\n\n   // When null, the modal dialog will be headless and the docked\n   // view is expected to provide a title bar.\n   private title: string = null;\n\n   private accessibilityTitle: string = null;\n\n   private urlParams: any = {};\n\n   private eventTarget: EventTarget;\n\n   constructor(private appId: string) {\n   }\n\n   setDimensions(dimensions: number[]): ModalBuilder {\n      if (!dimensions || dimensions.length !== 2) {\n         Logger.warn(\"invalid modal dimensions\", dimensions);\n         dimensions = ModalBuilder.DEFAULT_SIZE;\n      }\n      return this.setSize(dimensions[ModalBuilder.WIDTH], dimensions[ModalBuilder.HEIGHT]);\n   }\n\n   setSize(width: number, height: number): ModalBuilder {\n      this.size = [width, height];\n      return this;\n   }\n\n   setUrlParameters(params: any): ModalBuilder {\n      this.urlParams = params;\n      return this;\n   }\n\n   /**\n    * Set to null if the view provides its own title bar\n    */\n   setTitle(title: string): ModalBuilder {\n      this.title = title;\n      return this;\n   }\n\n   setAccessibilityTitle(accessibilityTitle: string): ModalBuilder {\n      this.accessibilityTitle = accessibilityTitle;\n      return this;\n   }\n\n   /**\n    * Set explicit event target if it is changed before opening the modal.\n    * For example when making a preceding request the event target is the XMLHttpRequest object.\n    */\n   setEventTarget(eventTarget: EventTarget): ModalBuilder {\n      this.eventTarget = eventTarget;\n      return this;\n   }\n\n   /**\n    * Opens a modal dialog and returns a promise to collect the result; On close the target element is focused.\n    * @param context - any JS data object, can be retrieved by WebPlatform.getModalContext()\n    * @returns {Promise<any>} - Invoked if the dialog invokes WebPlatform.closeModalDialog(arg)\n    *       with non-null arg. The promise is never rejected.\n    */\n   open(context?: any): Promise<any> {\n      return new Promise<any>((accept) => {\n         VsanUiUtils.pluginContext.targetElement = this.eventTarget ? this.eventTarget :\n               (event && event.target ? event.target : null);\n         VsanUiUtils.pluginContext.modalResultHandler = (data?: any) => {\n            if (typeof data !== \"undefined\") {\n               // Deep copy of the object was required to resolve an issue with object's prototype overriding when\n               // passing complex objects in IE11/Edge; Keep it for safety.\n               accept(JSON.parse(JSON.stringify(data)));\n            } else if (VsanUiUtils.pluginContext.targetElement && VsanUiUtils.pluginContext.targetElement.focus) {\n               // On cancel just focus the target element. Timeout is required as otherwise the focus may be\n               // consumed by the mouse click.\n               setTimeout(() => VsanUiUtils.pluginContext.targetElement.focus(), 100);\n            }\n         };\n\n         let actionUrl: string = `${ModalBuilder.APP_URL}?viewId=${this.appId}`;\n\n         let separator: string = \"?\";\n         for (const param in this.urlParams) {\n            actionUrl += separator + param + \"=\" + this.urlParams[param];\n            separator = \"&\";\n         }\n\n         WebPlatform.openModalDialog(this.title,\n               actionUrl,\n               ManagedObject.contextObjectUid,\n               this.size[0], this.size[1],\n               this.title != null,\n               VsanUiUtils.pluginContext.modalResultHandler /* onClose */,\n               context /* retrieve with Platform.getModalContext() */,\n               this.accessibilityTitle);\n      });\n   }\n\n}\n","<!--Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<vsan-info-prompt [title]=\"'vsan.monitor.cluster.virtualObjects.action.viewDetails.title' | localized\"\n                  [subtitle]=\"subtitle\"\n                  [(alertMessage)]=\"error\">\n   <div class=\"dialog-container\">\n      <vsan-validation id=\"host-netowrk-partitioning-warning\"\n                       *ngIf=\"hasNetworkPartitioning\"\n                       [alert]=\"'vsan.monitor.virtualDisks.networkPartitionLabel' | localized\"\n                       [alertType]=\"'warning'\"\n                       [allowClose]=\"false\">\n      </vsan-validation>\n      <vsan-placement-details\n            [loadingObjects]=\"virtualObjectsLoading\"\n            [clusterRef]=\"clusterRef\"\n            [selectedVirtualObjects]=\"selectedVirtualObjects\"\n            [virtualObjects]=\"virtualObjects\"\n            [isGrouped]=\"isGrouped\">\n      </vsan-placement-details>\n   </div>\n</vsan-info-prompt>\n","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {VsanCommonModule} from \"app/vsan/common/vsan-common.module\";\nimport {VirtualObjectsComponent} from \"./virtual-objects.component\";\nimport {PlacementDetailsDialogComponent} from \"./view/placement-details-dialog.component\";\nimport {PlacementDetailsModule} from \"@component/placement-details/placement-details.module\";\nimport {VirtualObjectsTableModule} from \"@component/virtual-objects-table/virtual-objects-table.module\";\n\nconst routes: Routes = [\n   {\n      path: \"\",\n      component: VirtualObjectsComponent,\n   },\n   {\n      path: \"physicalPlacementDialog\",\n      component: PlacementDetailsDialogComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      VsanCommonModule,\n      PlacementDetailsModule,\n      VirtualObjectsTableModule,\n      RouterModule.forChild(routes),\n   ],\n   declarations: [\n      VirtualObjectsComponent,\n      PlacementDetailsDialogComponent,\n   ],\n})\nexport class VirtualObjectsModule {\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterContentInit, ContentChildren, Directive, ElementRef} from \"@angular/core\";\nimport {ClrButton} from \"@clr/angular\";\nimport {ClrButtonBaseDirective, DirectiveHolder} from \"@directive/clr-button-group/clr-button-base.directive\";\n\n/**\n * Applies on every clr-button-group and help to link the clr-button with directive applieds on it,  which extends\n * {@link ClrButtonBaseDirective}, to the actual rendered html button.\n */\n@Directive({\n   selector: \"clr-button-group\",\n})\nexport class ClrButtonGroupCommonDirective implements AfterContentInit {\n\n   @ContentChildren(ClrButton, {descendants: true})\n   clrButtons: ClrButton[];\n\n   constructor(private elRef: ElementRef) {}\n\n   ngAfterContentInit(): void {\n      setTimeout(() => {\n         const allButtons: NodeListOf<HTMLButtonElement> = this.elRef.nativeElement.querySelectorAll(\"button\");\n         // match button with clrButton and notify directives\n         this.clrButtons.filter(clrButton => !!(clrButton as DirectiveHolder).directives)\n               .forEach((clrButton, index) => {\n                  const buttonFound: HTMLButtonElement = this.findButtonByName(clrButton.name, allButtons);\n                  if (buttonFound) {\n                     (clrButton as DirectiveHolder).directives.forEach(directive => {\n                        directive.resolveButton(clrButton, buttonFound, index);\n                     });\n                  }\n               });\n      });\n   }\n\n   private findButtonByName(name: string, buttons: NodeListOf<HTMLButtonElement>): HTMLButtonElement {\n      for (let i: number = 0; i < buttons.length; i++) {\n         if (buttons.item(i).name === name) {\n            return buttons.item(i);\n         }\n      }\n      return null;\n   }\n\n}","/* Copyright 2017-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\n\nexport enum PerfMonitorViewType {\n\n   // Cluster\n   CLUSTER_VM_CONSUMPTION,\n   CLUSTER_COMPUTE_ONLY_VM_REMOTE_CONSUMPTION,\n   CLUSTER_VM_REMOTE_CONSUMPTION,\n   CLUSTER_BACKEND,\n   CLUSTER_ISCSI,\n   CLUSTER_FILE_SERVICE,\n   CLUSTER_IO_INSIGHT,\n   CLUSTER_PMEM,\n   CLUSTER_VSAN_DIRECT,\n\n   // Host\n   HOST_VM_CONSUMPTION,\n   HOST_BACKEND,\n   HOST_DISK,\n   HOST_PHYSICAL_ADAPTER,\n   HOST_VIRTUAL_ADAPTER,\n   HOST_ISCSI,\n   HOST_IO_INSIGHT,\n   HOST_VSAN_DIRECT,\n   HOST_PMEM,\n\n   // Virtual Machine\n   VM_CONSUMPTION,\n   VM_VIRTUAL_DISK,\n}\n","/* Copyright 2018-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {VirtualObjectsTypeUtil} from \"@component/virtual-objects-table/virtual-objects-type.util\";\nimport {DiskManagementService} from \"@generated/disk-management-service\";\nimport {VirtualObjectModel} from \"@generated/virtual-object-model\";\nimport {VirtualObjectsService} from \"@generated/virtual-objects-service\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {SrMessageType} from \"@service/screen-reader-announcer.service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {PlacementDetailsDialogContext} from \"./placement-details-dialog-context\";\n\n@Component({\n   templateUrl: \"placement-details-dialog.html\",\n   selector: \"vsan-placement-details-dialog\",\n   styleUrls: [\"placement-details-dialog.scss\"],\n})\nexport class PlacementDetailsDialogComponent implements OnInit {\n\n   clusterRef: ManagedObject;\n   virtualObjects: VirtualObjectModel[] = [];\n   selectedVirtualObjects: VirtualObjectModel[] = [];\n   subtitle: string;\n   hasNetworkPartitioning: boolean;\n\n   @LoadingIndicator()\n   virtualObjectsLoading: boolean;\n\n   isGrouped: boolean = false;\n   selectedVirtualMachines: ManagedObject[] = [];\n\n   // data retrieval error\n   @ErrorMessage()\n   error: string;\n\n   constructor(private diskMgmtService: DiskManagementService,\n         private virtualObjectService: VirtualObjectsService) {\n   }\n\n   async ngOnInit(): Promise<void> {\n      // Modal window - get the data from modal context\n      const context: PlacementDetailsDialogContext = VsanUiUtils.getModalContext();\n      this.clusterRef = context.clusterRef;\n      this.virtualObjects = context.virtualObjects;\n      this.selectedVirtualObjects = context.selectedVirtualObjects;\n      this.isGrouped = context.isGrouped;\n      this.selectedVirtualMachines = context.selectedVirtualMachines;\n      await this.loadData();\n      this.updateSubTitle();\n   }\n\n   @Loader({\n      srMessage: \"vsan.monitor.cluster.virtualObjects.action.viewDetails.title\",\n      srMessageType: SrMessageType.PAGE_TITLE,\n   })\n   private async loadData(): Promise<void> {\n      const promises: any[] = [];\n      if (VsanUiUtils.isEmpty(this.virtualObjects)) {\n         const listVirtualObjectsPromise: Promise<void> = this.virtualObjectService\n               .listVirtualObjects(this.clusterRef, [])\n               .then(result => this.handleVirtualObjects(result));\n         promises.push(listVirtualObjectsPromise);\n      }\n      const hadNetworkPartitionsPromise: Promise<boolean> = this.diskMgmtService\n            .hasNetworkPartitionsOrDisconnectedMembers(this.clusterRef)\n            .then(result => this.hasNetworkPartitioning = result);\n      promises.push(hadNetworkPartitionsPromise);\n\n      await Promise.all(promises);\n   }\n\n   private handleVirtualObjects = (result: VirtualObjectModel[]) => {\n      if (!result) {\n         return;\n      }\n      this.virtualObjects = this.filterVMs(result);\n      this.selectedVirtualObjects = this.getSelectedVirtualObjects();\n   };\n\n   private filterVMs(virtualObjects: VirtualObjectModel[]): VirtualObjectModel[] {\n      if (!VsanUiUtils.isEmpty(this.selectedVirtualMachines)) {\n         return virtualObjects.filter(virtualObject => this.selectedVirtualMachines\n               .some(selectedVM => ManagedObject.areEqual(selectedVM, virtualObject.vmRef)));\n      }\n\n      return virtualObjects;\n   }\n\n   private getSelectedVirtualObjects(): VirtualObjectModel[] {\n      const result: VirtualObjectModel[] = [];\n      for (const virtualObject of this.virtualObjects) {\n         if (!!virtualObject.children) {\n            result.push(...virtualObject.children);\n         }\n      }\n      return result;\n   }\n\n   private updateSubTitle(): void {\n      if (this.selectedVirtualObjects.length === 1) {\n         this.subtitle = VirtualObjectsTypeUtil.getDisplayName(this.selectedVirtualObjects[0]);\n      } else {\n         this.subtitle = VsanUiUtils.getString(\"vsan.monitor.cluster.virtualObjects.action.viewDetails.subtitle\",\n               this.selectedVirtualObjects.length);\n      }\n   }\n}\n","<!-- Copyright 2017-2020 VMware, Inc. All rights reserved. VMware Confidential -->\n<h5 vsan-auto-focus>\n   {{\"vsan.monitor.virtualObjects\" | localized}}\n</h5>\n<vsan-validation id=\"validation-message\"\n                 *ngIf=\"generalError\"\n                 [alert]=\"generalError\"\n                 [allowReload]=\"true\"\n                 (onReload)=\"fetch()\"\n                 (onClosed)=\"generalError = null\">\n</vsan-validation>\n\n<vsan-validation id=\"host-error\"\n                 *ngIf=\"!generalError && showWarning\"\n                 [alert]=\"'vsan.monitor.virtualDisks.networkPartitionLabel' | localized\"\n                 [alertType]=\"'warning'\"\n                 [allowClose]=\"false\">\n</vsan-validation>\n\n<ng-container *ngIf=\"objectIdentitiesSupported\">\n   <span>\n      {{\"vsan.monitor.cluster.virtualObjects.header\" | localized}}\n      <a [external-link]=\"'vsan.monitor.cluster.virtualObjects.link' | localized\"\n         [articleId]=\"KnowledgeBaseId.VIRTUAL_OBJECTS\"></a>\n   </span>\n   <vsan-virtual-objects-filterable-table id=\"virtual-objects-table\"\n                                          [loading]=\"virtualObjectsloading\"\n                                          [presentVirtualObjectUuids]=\"presentVirtualObjectUuids\"\n                                          [initiallyFilteredName]=\"initialNameFilter\"\n                                          [initiallyFilteredTypes]=\"initialFilteredTypes\"\n                                          [initialFilteredHealthStates]=\"initialFilteredHealthStates\"\n                                          [virtualObjects]=\"allItems\">\n   </vsan-virtual-objects-filterable-table>\n</ng-container>\n<span class=\"spinner central-spinner\" *ngIf=\"capabilityCheckLoading\"></span>\n<!-- Not supported -->\n<span class=\"bold-no-selection\" *ngIf=\"!capabilityCheckLoading && !objectIdentitiesSupported\">\n   {{'vsan.monitor.cluster.virtualObjects.objectIdentitiesNotSupported' | localized}}\n</span>"]}