{"version":3,"sources":["./src/app/vsan/file-services/shares/file-share-util.ts","./src/app/vsan/performance/model/file-share-entity.ts","./src/app/vsan/common/pipe/file-share-protocol-pipe.ts"],"names":[],"mappings":"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","file":"40-es2015.js","sourcesContent":["/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {VsanFileShareOwnerType} from \"@generated/vsan-file-share-owner-type\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanFileShareProtocol} from \"@generated/vsan-file-share-protocol\";\nimport {VsanFileServiceShare} from \"@generated/vsan-file-service-share\";\nimport {VsanFileShareNfsSecurityType} from \"@generated/vsan-file-share-nfs-security-type\";\nimport {SmbEncryptionOption} from \"@generated/smb-encryption-option\";\nimport {Icon} from \"@util/icon\";\nimport {FileShareEntity} from \"../../performance/model/file-share-entity\";\nimport {PerfChartDataConstants} from \"@component/chart/performance/perf-chart-util\";\nimport {VsanFileServiceShareSize} from \"@generated/vsan-file-service-share-size\";\nimport {Logger} from \"@util/logger\";\nimport {FileShareProtocolPipe} from \"@pipe/file-share-protocol-pipe\";\n\nexport class VsanFileShareUtils {\n   /**\n    * Default soft quota (warning threshold) for file share\n    */\n   static readonly FILE_SHARE_QUOTA_RED_THRESHOLD: number = 80;\n\n   // File share fields\n   static readonly NAME_FIELD: string = \"config.name\";\n   static readonly LABELS_FIELD: string = \"config.labels\";\n   static readonly QUOTA_FIELD: string = \"config.quota\";\n   static readonly QUOTA_SIZE_FIELD: string = \"config.quotaSize\";\n   static readonly SOFT_QUOTA_FIELD: string = \"config.softQuota\";\n   static readonly SOFT_QUOTA_SIZE_FIELD: string = \"config.softQuotaSize\";\n   static readonly USED_CAPACITY_FIELD: string = \"usedCapacity\";\n   static readonly OWNER_TYPE_FIELD: string = \"managedBy\";\n   static readonly PROTOCOL_FIELD: string = \"config.protocol\";\n   static readonly POLICY_FIELD: string = \"config.policyId\";\n   static readonly USAGE_OVER_QUOTA_FIELD: string = \"usageOverQuota\";\n   static readonly INVALID_CHARS: RegExp = /[\\s~`!@#$%^&*(){}\\[\\];:\"'<,.>?\\\\\\/|+=]/;\n   // allow space in the OU name\n   static readonly INVALID_OU_CHARS: RegExp = /[\\t\\n\\r\\f\\v~`!@#$%^&*(){}\\[\\];:\"'<,.>?\\\\\\/|+=]/;\n\n   // MMC (Microsoft Management Console) is a windows command to manage the SMB file share\n   // To get a full command, we need to append this in front of the file server FQDN\n   private static readonly MMC_HEAD: string = \"fsmgmt.msc /computer:\\\\\\\\\";\n\n   /**\n    * Get the string value of the file share owner type\n    */\n   static getShareOwnerType(type: VsanFileShareOwnerType): string {\n      switch (type) {\n         case VsanFileShareOwnerType.USER:\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.col.owner.type.user\");\n         case VsanFileShareOwnerType.CNS:\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.col.owner.type.cns\");\n         default:\n            return VsanUiUtils.getString(\"vsan.common.unknown\");\n      }\n   }\n\n   static getShareProtocolLabel(protocol: VsanFileShareProtocol): string {\n      return new FileShareProtocolPipe().transform(protocol);\n   }\n\n   static getExportPathLabel(protocol: string): string {\n      switch (protocol.toLocaleLowerCase()) {\n         case \"nfsv3\":\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.grid.details.nfs3.path\");\n         case \"nfsv4.1\":\n         case \"nfsv4\":\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.grid.details.nfs4.path\");\n         case \"smb\":\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.grid.details.smb.path\");\n      }\n   }\n\n   static getExportPathMenuLabel(protocol: string): string {\n      switch (protocol.toLocaleLowerCase()) {\n         case \"nfsv3\":\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.nfs3\");\n         case \"nfsv4.1\":\n         case \"nfsv4\":\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.nfs41\");\n         case \"smb\":\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.smb\");\n      }\n   }\n\n   static getProgressTitle(share: VsanFileServiceShare): string {\n      if (share.isOverRedThreshold) {\n         return VsanUiUtils.getString(\"vsan.fileservices.shares.title.error\");\n      } else if (share.isOverSoftQuota) {\n         return VsanUiUtils.getString(\"vsan.fileservices.shares.title.warn\");\n      } else {\n         return VsanUiUtils.getString(\"vsan.fileservices.shares.title.info\");\n      }\n   }\n\n   static getProgressClass(share: VsanFileServiceShare): string {\n      if (share.isOverRedThreshold) {\n         return \"error\";\n      } else if (share.isOverSoftQuota) {\n         return \"warn\";\n      } else {\n         return \"info\";\n      }\n   }\n\n   static getSecurityModeText(securityType: VsanFileShareNfsSecurityType): string {\n      if (securityType === VsanFileShareNfsSecurityType.AUTH_SYS) {\n         return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.security.authSys\");\n      }\n      return VsanUiUtils.getString(\"vsan.services.fileservices.wizard.activeDirectoryPage.security.kerberos\");\n   }\n\n   static getKerberosText(securityType: VsanFileShareNfsSecurityType): string {\n      switch (securityType) {\n         case VsanFileShareNfsSecurityType.KRB5:\n            return VsanUiUtils.getString(\n                  \"vsan.services.fileservices.wizard.activeDirectoryPage.security.kerberos.krb5\");\n         case VsanFileShareNfsSecurityType.KRB5I:\n            return VsanUiUtils.getString(\n                  \"vsan.services.fileservices.wizard.activeDirectoryPage.security.kerberos.krb5i\");\n         case VsanFileShareNfsSecurityType.KRB5P:\n            return VsanUiUtils.getString(\n                  \"vsan.services.fileservices.wizard.activeDirectoryPage.security.kerberos.krb5p\");\n      }\n   }\n\n   static getSmbEncryptionText(smbEncryptionOption: SmbEncryptionOption): string {\n      switch (smbEncryptionOption) {\n         case SmbEncryptionOption.DISABLED:\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.smb.encryption.none\");\n         case SmbEncryptionOption.MANDATORY:\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.smb.mandatory\");\n      }\n   }\n\n   static getSmbAbeOptionText(enabled: boolean): string {\n      return enabled\n            ? VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.smb.abe.enabled\")\n            : VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.smb.abe.disabled\");\n   }\n\n   static getMmcCommand(share: VsanFileServiceShare): string {\n      return VsanFileShareUtils.MMC_HEAD + share.fileServerFqdn;\n   }\n\n   static getShareIcon(share: VsanFileServiceShare): string {\n      switch (share.managedBy) {\n         case VsanFileShareOwnerType.CNS:\n            return Icon.CNS_FILE_VOLUME;\n         case VsanFileShareOwnerType.USER:\n            return Icon.FOLDER;\n         case VsanFileShareOwnerType.UNKNOWN:\n            return Icon.EMPTY_ICON;\n      }\n   }\n\n   /**\n    * Get the perf entity for a file share. If smb share is not supported, then it's a 70 VC and we only support\n    * nfs perf; If smb is supported but the smb protocol perf is not supported, then it's a 70u1 VC, and we\n    * support nfs & vdfs perf; After 70u1 we support both smb & vdfs perf;\n    *\n    * @param share: file share object\n    * @param isSmbShareSupported: if the smb share is supported (since 70u1 release).\n    * @param isSmbProtocolPerfSupported: if the smb protocol layer performance is supported (since 70u2 release).\n    */\n   static getFileShareEntity(share: VsanFileServiceShare, isSmbShareSupported: boolean,\n         isSmbProtocolPerfSupported: boolean = false): FileShareEntity {\n      // Only display the NFS layer metrics if SMB is not supported, even it's a NFS share\n      // Because the backend support for vdfs layer comes with SMB support\n      if (!isSmbShareSupported) {\n         return this.createFileShareEntity(share, FileShareEntityType.NFS);\n      }\n      const entity: FileShareEntity = this.createFileShareEntity(share, FileShareEntityType.VDFS);\n      if (share.config.protocol !== VsanFileShareProtocol.SMB) {\n         entity.protocolEntity = this.createFileShareEntity(share, FileShareEntityType.NFS);\n      } else if (isSmbProtocolPerfSupported) {\n         entity.protocolEntity = this.createFileShareEntity(share, FileShareEntityType.SMB);\n      }\n      return entity;\n   }\n\n   static createFileShareEntity(share: VsanFileServiceShare, entityType: FileShareEntityType): FileShareEntity {\n      const entity: FileShareEntity = new FileShareEntity();\n      entity.entityId = PerfChartDataConstants.CLUSTER_FILE_SERVICE_ENTITY;\n      entity.entityName = share.config.name;\n      entity.entityLabelName = this.getFileShareEntityLabel(entityType);\n      entity.entityUuid = this.getFileShareEntityUuid(share, entityType);\n      entity.icon = VsanFileShareUtils.getShareIcon(share);\n      return entity;\n   }\n\n   static getFileShareEntityUuid(share: VsanFileServiceShare,\n         entityType: FileShareEntityType = FileShareEntityType.VDFS): string {\n      const baseEntityUuid: string = `${share.config.domainName}|${share.config.name}`;\n      switch (entityType) {\n         case FileShareEntityType.NFS:\n            return baseEntityUuid;\n         case FileShareEntityType.SMB:\n            return `${baseEntityUuid}|smb`;\n         case FileShareEntityType.VDFS:\n         default:\n            return `${baseEntityUuid}|vdfs`;\n      }\n   }\n\n   static getSizeLabel(size: VsanFileServiceShareSize): string {\n      switch (size) {\n         case VsanFileServiceShareSize.GB:\n            return VsanUiUtils.getString(\"vsan.common.gigabytes\");\n         case VsanFileServiceShareSize.MB:\n            return VsanUiUtils.getString(\"vsan.common.megabytes\");\n         case VsanFileServiceShareSize.TB:\n            return VsanUiUtils.getString(\"vsan.common.terabytes\");\n         default:\n            Logger.error(\"unsupported size type: \" + size);\n            return \"\";\n      }\n   }\n\n   private static getFileShareEntityLabel(entityType: FileShareEntityType): string {\n      switch (entityType) {\n         case FileShareEntityType.NFS:\n            return VsanUiUtils.getString(\"vsan.monitor.cluster.performance.fileServices.nfs.section.title\");\n         case FileShareEntityType.SMB:\n            return VsanUiUtils.getString(\"vsan.monitor.cluster.performance.fileServices.smb.section.title\");\n         case FileShareEntityType.VDFS:\n         default:\n            return VsanUiUtils.getString(\"vsan.monitor.cluster.performance.fileServices.vdfs.section.title\");\n      }\n   }\n}\n\nexport enum FileShareEntityType {\n   VDFS,\n   NFS,\n   SMB,\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {BasePerfEntity} from \"./base-perf-entity\";\n\nexport class FileShareEntity extends BasePerfEntity {\n   protocolEntity: BasePerfEntity;\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {VsanFileShareProtocol} from \"@generated/vsan-file-share-protocol\";\n\n/**\n * transform the file share protocol to string.\n * Currently this pipe is used in both File service and File service analytics feature\n */\n@Pipe({\n   name: \"shareProtocol\",\n})\nexport class FileShareProtocolPipe implements PipeTransform {\n   transform(protocol: VsanFileShareProtocol, ...args: any[]): string {\n      switch (protocol) {\n         case VsanFileShareProtocol.NFSv3:\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.nfs3\");\n         case VsanFileShareProtocol.NFSv4:\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.nfs41\");\n         case VsanFileShareProtocol.SMB:\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.smb\");\n         default:\n            return VsanUiUtils.getString(\"vsan.fileservices.shares.create.protocol.nfsv3_and_nfsv41\");\n      }\n   }\n}\n"],"sourceRoot":"webpack:///"}