{"version":3,"sources":["./src/app/vsan/common/component/datagrid/tree-datagrid.module.ts","./src/app/vsan/common/service/navigation/model/knowledge-base-id.ts","./src/app/vsan/common/util/modal-builder.ts","./src/app/vsan/common/component/action-button/button-title.directive.ts","./src/app/vsan/common/component/popup-list/popup-list.module.ts","./src/app/vsan/common/directive/clr-button-group/clr-button-group-common.directive.ts","./src/app/vsan/csd/csd.module.ts","./src/app/vsan/common/component/navigation/vsan-breadcrumb.module.ts","./src/app/vsan/common/component/action-button/button-group.directive.ts","./src/app/vsan/common/component/unavailable-view/unavailable-view.module.ts","./src/app/vsan/csd/view/datastore-sharing.html","./src/app/vsan/common/component/cell/common-cells.module.ts","./src/app/vsan/csd/view/datastore-sharing.component.ts","./src/app/vsan/csd/modal/unmount/unmount-remote-datastore-modal.component.ts","./src/app/vsan/common/vsan-common.module.ts","./src/app/vsan/common/component/action-button/action-button.module.ts","./src/app/vsan/csd/modal/unmount/unmount-remote-datastore-modal.component.ts.UnmountRemoteDatastoreModalComponent.html"],"names":[],"mappings":"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","file":"118-es2015.js","sourcesContent":["/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {TreeExpanderComponent} from \"@component/datagrid/tree-expander.component\";\nimport {TreeColumnComponent} from \"@component/datagrid/tree-column.component\";\nimport {EnumeratedFilterComponent} from \"./filter/enumerated-filter.component\";\nimport {EnumeratedFilterItemComponent} from \"./filter/enumerated-filter-item.component\";\nimport {EnumFilterComponent} from \"@component/datagrid/filter/enum-filter.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n   ],\n   declarations: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumeratedFilterComponent,\n      EnumFilterComponent,\n   ],\n   exports: [\n      TreeColumnComponent,\n      TreeExpanderComponent,\n      EnumeratedFilterComponent,\n      EnumeratedFilterItemComponent,\n      EnumFilterComponent,\n   ],\n})\nexport class TreeDatagridModule {\n}\n","/* Copyright 2021 VMware, Inc. All rights reserved. -- VMware Confidential */\n/**\n * IDs used in external KB link navigation\n */\nexport enum KnowledgeBaseId {\n   PRECHECK_PCP = \"83954\",\n   VIRTUAL_OBJECTS = \"2108319\",\n   UPGRADE = \"2148493\",\n   PERFORMANCE_DIAGNOSTICS = \"2148770\",\n   SUPPORT_INSIGHT = \"60206\",\n}\n","/* Copyright 2017-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {environment} from \"@env/environment\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {Logger} from \"./logger\";\nimport {WebPlatform} from \"./platform\";\nimport {VsanUiUtils} from \"./vsan-util\";\n\nexport class ModalBuilder {\n\n   static readonly WIDTH: number = 0;\n   static readonly HEIGHT: number = 1;\n\n   static readonly DEFAULT_SIZE: number[] = [1000, 530];\n   static readonly WIZARD_XL: number[] = [1200, 700];\n\n   static readonly APP_URL: string = (environment.repa && environment.repaExtension)\n         ? \"index.html\"\n         : \"/ui/h5-vsan-ui/\";\n\n   private size: number[] = ModalBuilder.DEFAULT_SIZE;\n\n   // When null, the modal dialog will be headless and the docked\n   // view is expected to provide a title bar.\n   private title: string = null;\n\n   private accessibilityTitle: string = null;\n\n   private urlParams: any = {};\n\n   private eventTarget: EventTarget;\n\n   constructor(private appId: string) {\n   }\n\n   setDimensions(dimensions: number[]): ModalBuilder {\n      if (!dimensions || dimensions.length !== 2) {\n         Logger.warn(\"invalid modal dimensions\", dimensions);\n         dimensions = ModalBuilder.DEFAULT_SIZE;\n      }\n      return this.setSize(dimensions[ModalBuilder.WIDTH], dimensions[ModalBuilder.HEIGHT]);\n   }\n\n   setSize(width: number, height: number): ModalBuilder {\n      this.size = [width, height];\n      return this;\n   }\n\n   setUrlParameters(params: any): ModalBuilder {\n      this.urlParams = params;\n      return this;\n   }\n\n   /**\n    * Set to null if the view provides its own title bar\n    */\n   setTitle(title: string): ModalBuilder {\n      this.title = title;\n      return this;\n   }\n\n   setAccessibilityTitle(accessibilityTitle: string): ModalBuilder {\n      this.accessibilityTitle = accessibilityTitle;\n      return this;\n   }\n\n   /**\n    * Set explicit event target if it is changed before opening the modal.\n    * For example when making a preceding request the event target is the XMLHttpRequest object.\n    */\n   setEventTarget(eventTarget: EventTarget): ModalBuilder {\n      this.eventTarget = eventTarget;\n      return this;\n   }\n\n   /**\n    * Opens a modal dialog and returns a promise to collect the result; On close the target element is focused.\n    * @param context - any JS data object, can be retrieved by WebPlatform.getModalContext()\n    * @returns {Promise<any>} - Invoked if the dialog invokes WebPlatform.closeModalDialog(arg)\n    *       with non-null arg. The promise is never rejected.\n    */\n   open(context?: any): Promise<any> {\n      return new Promise<any>((accept) => {\n         VsanUiUtils.pluginContext.targetElement = this.eventTarget ? this.eventTarget :\n               (event && event.target ? event.target : null);\n         VsanUiUtils.pluginContext.modalResultHandler = (data?: any) => {\n            if (typeof data !== \"undefined\") {\n               // Deep copy of the object was required to resolve an issue with object's prototype overriding when\n               // passing complex objects in IE11/Edge; Keep it for safety.\n               accept(JSON.parse(JSON.stringify(data)));\n            } else if (VsanUiUtils.pluginContext.targetElement && VsanUiUtils.pluginContext.targetElement.focus) {\n               // On cancel just focus the target element. Timeout is required as otherwise the focus may be\n               // consumed by the mouse click.\n               setTimeout(() => VsanUiUtils.pluginContext.targetElement.focus(), 100);\n            }\n         };\n\n         let actionUrl: string = `${ModalBuilder.APP_URL}?viewId=${this.appId}`;\n\n         let separator: string = \"?\";\n         for (const param in this.urlParams) {\n            actionUrl += separator + param + \"=\" + this.urlParams[param];\n            separator = \"&\";\n         }\n\n         WebPlatform.openModalDialog(this.title,\n               actionUrl,\n               ManagedObject.contextObjectUid,\n               this.size[0], this.size[1],\n               this.title != null,\n               VsanUiUtils.pluginContext.modalResultHandler /* onClose */,\n               context /* retrieve with Platform.getModalContext() */,\n               this.accessibilityTitle);\n      });\n   }\n\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Directive, Input, OnInit} from '@angular/core';\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {ClrButton} from \"@clr/angular\";\n\n/**\n * Attribute directive for detecting button title change and storing title.\n * Only used for clr-button in clr-button-group.\n * @title - The title of clr-button\n */\n@Directive({\n   selector: \"clr-button[vsan-button-title]\"\n})\nexport class ButtonTitleDirective implements OnInit {\n\n   constructor(public host: ClrButton) {}\n\n   private _title: string;\n\n   @Input(\"vsan-button-title\")\n   set title(value: string) {\n      if (this._title !== value) {\n         this.titleChange.next(value);\n      }\n      this._title = value;\n   }\n\n   get title(): string {\n      return this._title;\n   }\n\n   private titleChange: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n\n   get titleChangeEvent(): Observable<string> {\n      return this.titleChange.asObservable();\n   }\n\n   ngOnInit(): void {\n      // name should be set, if not provided in template - generate one. ClrButtom#name is used to generate the name\n      // attribute of the markup button. Later the name is used to match the generated markup with the directive.\n      if (!this.host.name) {\n         this.host.name = Math.random().toString();\n      }\n   }\n\n   ngOnDestroy() {\n      this.titleChange.unsubscribe();\n   }\n}","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {PopupListComponent} from \"@component/popup-list/popup-list.component\";\nimport {PopupListItemDirective} from \"@component/popup-list/popup-list-item.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      CommonPipeModule\n   ],\n   declarations: [\n      PopupListComponent,\n      PopupListItemDirective\n   ],\n   exports: [\n      PopupListComponent,\n      PopupListItemDirective\n   ]\n})\nexport class PopupListModule {\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {AfterContentInit, ContentChildren, Directive, ElementRef} from \"@angular/core\";\nimport {ClrButton} from \"@clr/angular\";\nimport {ClrButtonBaseDirective, DirectiveHolder} from \"@directive/clr-button-group/clr-button-base.directive\";\n\n/**\n * Applies on every clr-button-group and help to link the clr-button with directive applieds on it,  which extends\n * {@link ClrButtonBaseDirective}, to the actual rendered html button.\n */\n@Directive({\n   selector: \"clr-button-group\",\n})\nexport class ClrButtonGroupCommonDirective implements AfterContentInit {\n\n   @ContentChildren(ClrButton, {descendants: true})\n   clrButtons: ClrButton[];\n\n   constructor(private elRef: ElementRef) {}\n\n   ngAfterContentInit(): void {\n      setTimeout(() => {\n         const allButtons: NodeListOf<HTMLButtonElement> = this.elRef.nativeElement.querySelectorAll(\"button\");\n         // match button with clrButton and notify directives\n         this.clrButtons.filter(clrButton => !!(clrButton as DirectiveHolder).directives)\n               .forEach((clrButton, index) => {\n                  const buttonFound: HTMLButtonElement = this.findButtonByName(clrButton.name, allButtons);\n                  if (buttonFound) {\n                     (clrButton as DirectiveHolder).directives.forEach(directive => {\n                        directive.resolveButton(clrButton, buttonFound, index);\n                     });\n                  }\n               });\n      });\n   }\n\n   private findButtonByName(name: string, buttons: NodeListOf<HTMLButtonElement>): HTMLButtonElement {\n      for (let i: number = 0; i < buttons.length; i++) {\n         if (buttons.item(i).name === name) {\n            return buttons.item(i);\n         }\n      }\n      return null;\n   }\n\n}","/* Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {DatastoreSharingComponent} from \"./view/datastore-sharing.component\";\nimport {PopupListModule} from \"@component/popup-list/popup-list.module\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {VsanCommonModule} from \"../common/vsan-common.module\";\nimport {UnmountRemoteDatastoreModalComponent} from \"./modal/unmount/unmount-remote-datastore-modal.component\";\nimport {InventoryBrowserModule} from \"@component/inventory/inventory-browser.module\";\nimport {UnavailableViewModule} from \"@component/unavailable-view/unavailable-view.module\";\n\nconst csdRoutes: Routes = [\n   {\n      path: \"\",\n      component: DatastoreSharingComponent,\n   },\n   {\n      path: \"unmountRemoteDatastore\",\n      component: UnmountRemoteDatastoreModalComponent,\n   },\n];\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      VsanCommonModule,\n      CommonPipeModule,\n      ValidationModule,\n      PopupListModule,\n      UnavailableViewModule,\n      CommonDirectiveModule,\n      InventoryBrowserModule,\n      RouterModule.forChild(csdRoutes),\n   ],\n   declarations: [\n      DatastoreSharingComponent,\n      UnmountRemoteDatastoreModalComponent,\n   ],\n})\nexport class CsdModule {\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {VsanBreadcrumbNavComponent} from \"./vsan-breadcrumb-nav.component\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\n\n@NgModule({\n   imports: [CommonModule, ClarityModule, CommonDirectiveModule, CommonPipeModule],\n   declarations: [VsanBreadcrumbNavComponent],\n   exports: [\n      VsanBreadcrumbNavComponent,\n   ],\n})\nexport class VsanBreadcrumbModule {}\n","/* Copyright 2019-2022 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {ContentChildren, Directive, ElementRef, Input} from \"@angular/core\";\nimport {ClrButton} from \"@clr/angular\";\nimport {ButtonTitleDirective} from \"./button-title.directive\";\n\n/**\n * Attribute directive used to dynamically arrange child buttons, align some horizontally and\n * put the others into the drop-down list, this directive also add title attribute to the buttons.\n * It can only used on clr-button-group and there should be clr-button in the button group.\n * @maximumInlineActions - The maximum value of inline buttons.\n */\n@Directive({\n   selector: \"clr-button-group[vsan-button-group]\",\n})\nexport class ButtonGroupDirective {\n\n   private static readonly TOGGLE_MENU_BUTTON_SELECTOR: string = \"button.btn.dropdown-toggle\";\n   private static readonly VISIBLE_BUTTON_ELEMENTS_SELECTOR: string = \"button\";\n   private static readonly IN_MENU_BUTTON_ELEMENTS_SELECTOR: string = \"div.clr-button-group-menu > button\";\n\n   // Set the maximum value to 10 to display all buttons inline when there is enough space.\n   private _maximumInlineActions: number = 10;\n\n   @Input(\"vsan-button-group\")\n   set maximumInlineActions(value: number) {\n      if (!!value) {\n         this._maximumInlineActions = value;\n      }\n   }\n\n   private _buttonTitleDirectives: ButtonTitleDirective[] = [];\n\n   @ContentChildren(ButtonTitleDirective, {descendants: true})\n   set buttons(value: ButtonTitleDirective[]) {\n      this._buttonTitleDirectives = value;\n      this._buttonTitleDirectives.forEach(titleDirective => {\n         // Update button title when its title in directive changes.\n         titleDirective.titleChangeEvent.subscribe(() => {\n            setTimeout(this.updateButtonTitles);\n         });\n      });\n\n      // when action buttons with directive are changed (added / removed) some of them may go to the menu with\n      // additional actions. There is no other way found to handle toggle menu event, but click on the toggle button.\n      this.subscribeToggleButtonClick();\n   }\n\n   private _btns: ClrButton[];\n\n   @ContentChildren(ClrButton, {descendants: true})\n   set clrButtons(btns: ClrButton[]) {\n      this._btns = btns;\n      this.updateInMenuButtons();\n   }\n\n   constructor(private elRef: ElementRef) {\n   }\n\n   private updateInMenuButtons(): void {\n      const groupWithMenu: boolean = this._btns.length > this._maximumInlineActions;\n      this._btns.forEach((btn, index) => {\n         if (groupWithMenu) {\n            // When the number of buttons exceeds the maximum and the button overflows, place the button in the menu.\n            btn.inMenu = index >= this._maximumInlineActions - 1;\n         } else {\n            btn.inMenu = false;\n         }\n      });\n   }\n\n   private updateButtonTitles = (): void => {\n      const allButtons: HTMLButtonElement[] = this.getVisibleButtons().concat(this.getInMenuButtons());\n      if (!allButtons.length) {\n         return;\n      }\n\n      // if there is a rendered button for the directive - update its title.\n      this._buttonTitleDirectives.forEach(titleDirective => {\n         allButtons.forEach((button: HTMLElement) => {\n            if (button.getAttribute(\"name\") === titleDirective.host.name) {\n               button.title = titleDirective.title;\n            }\n         });\n      });\n   };\n\n   private subscribeToggleButtonClick(): void {\n      // If there is menu with additional buttons, find the toggle button and update button names on click.\n      setTimeout(() => {\n         const toggleButton: HTMLElement | null = this.getToggleButton();\n\n         // if there is a toggle button set function to handle the click event only once.\n         if (toggleButton && !toggleButton.onclick) {\n            toggleButton.onclick = this.updateButtonTitles;\n         }\n      });\n   }\n\n   // the buttons are visible buttons in button group, toggle menu button\n   private getVisibleButtons(): HTMLButtonElement[] {\n      return Array.from(this.elRef.nativeElement.querySelectorAll(\n            ButtonGroupDirective.VISIBLE_BUTTON_ELEMENTS_SELECTOR));\n   }\n\n   // inMenu buttons are rendered outside of the elRef, get them directly from the document\n   private getInMenuButtons(): HTMLButtonElement[] {\n      return Array.from(this.elRef.nativeElement.ownerDocument.querySelectorAll(\n            ButtonGroupDirective.IN_MENU_BUTTON_ELEMENTS_SELECTOR));\n   }\n\n   private getToggleButton(): HTMLElement | null {\n      return this.elRef.nativeElement.querySelector(ButtonGroupDirective.TOGGLE_MENU_BUTTON_SELECTOR);\n   }\n}","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {CommonModule} from \"@angular/common\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {UnavailableViewComponent} from \"@component/unavailable-view/unavailable-view.component\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n      CommonPipeModule,\n      ValidationModule,\n      CommonDirectiveModule,\n   ],\n   declarations: [\n      UnavailableViewComponent,\n   ],\n   exports: [\n      UnavailableViewComponent,\n   ],\n})\nexport class UnavailableViewModule {\n}\n","<!--Copyright 2019-2020 VMware, Inc. All rights reserved. -- VMware Confidential-->\n<h5 vsan-auto-focus>\n   {{\"vsan.csd.datastoreSharing.title\" | localized}}\n</h5>\n<span>{{\"vsan.csd.datastoreSharing.subtitle\" | localized}}</span>\n\n<div *ngIf=\"loading\" class=\"spinner central-spinner\">{{\"vsan.loading\" | localized}}</div>\n\n<ng-container *ngIf=\"!loading\">\n   <vsan-validation *ngIf=\"errorMessage\"\n                    [allowClose]=\"true\"\n                    [alert]=\"errorMessage\"\n                    (onClosed)=\"errorMessage = null\"\n                    id=\"data-loading-error\">\n   </vsan-validation>\n\n   <vsan-unavailable-view *ngIf=\"unavailableView\"\n                          [unavailableViewSpec]=\"unavailableView\"\n                          [clusterRef]=\"ManagedObject.contextObject\"\n                          [hasEditPrivilege]=\"hasEditClusterPermission\">\n   </vsan-unavailable-view>\n\n   <vsan-validation *ngIf=\"!isCsdSupportedOnCluster && !unavailableView\"\n                    alertType=\"info\"\n                    [allowClose]=\"false\"\n                    [alert]=\"csdNotSupportedMessage\">\n   </vsan-validation>\n\n   <ng-container *ngIf=\"isCsdSupportedOnCluster && !unavailableView\">\n      <clr-button-group class=\"btn-link\" vsan-button-group>\n         <clr-button class=\"btn btn-sm\"\n                     [vsan-button-title]=\"mountDatastoreTooltip\"\n                     [disabled]=\"!hasEditClusterPermission\"\n                     (click)=\"openMountWizard()\">\n            {{\"vsan.csd.datastoreSharing.actions.mount\" | localized}}\n         </clr-button>\n         <clr-button class=\"btn btn-sm\"\n                     [vsan-button-title]=\"unmountDatastoreTooltip\"\n                     [disabled]=\"!isUnmountEnabled()\"\n                     (click)=\"openUnmountDialog()\">\n            {{\"vsan.csd.datastoreSharing.actions.unmount\" | localized}}\n         </clr-button>\n      </clr-button-group>\n\n      <clr-datagrid [clrDgLoading]=\"loading\" [(clrDgSingleSelected)]=\"selectedDatastore\">\n         <clr-dg-column class=\"datastore-column\">\n            {{\"vsan.csd.datastoreSharing.grid.datastore\" | localized}}\n         </clr-dg-column>\n         <clr-dg-column class=\"server-cluster-column\">\n            {{\"vsan.csd.datastoreSharing.grid.serverCluster\" | localized}}\n         </clr-dg-column>\n         <clr-dg-column class=\"storage-size-column\">\n            {{\"vsan.csd.datastoreSharing.grid.capacity\" | localized}}\n         </clr-dg-column>\n         <clr-dg-column class=\"storage-size-column\">\n            {{\"vsan.csd.datastoreSharing.grid.freeSpace\" | localized}}\n         </clr-dg-column>\n         <clr-dg-column class=\"vm-count-column\">\n            {{\"vsan.csd.datastoreSharing.grid.vmCount\" | localized}}\n            <clr-icon\n                  shape=\"info-standard\"\n                  class=\"is-solid\"\n                  tabindex=\"0\"\n                  title=\"{{'vsan.csd.datastoreSharing.grid.vmCount.tooltip' | localized}}\"\n                  [attr.aria-label]=\"'vsan.csd.datastoreSharing.grid.vmCount.tooltip' | localized\">\n            </clr-icon>\n         </clr-dg-column>\n         <clr-dg-column>\n            {{\"vsan.csd.datastoreSharing.grid.clientClusters\" | localized}}\n         </clr-dg-column>\n\n         <clr-dg-row\n               *ngFor=\"let datastore of datastores\"\n               [clrDgItem]=\"datastore\"\n               class=\"signpost-row-height-fix\">\n            <clr-dg-cell class=\"icon-name-container\" vsan-show-title>\n               <clr-icon [attr.shape]=\"datastore.shareableDatastore.datastore.primaryIconId\"></clr-icon>\n               <span *ngIf=\"datastore.isLocal\">\n               {{\"vsan.csd.localTag\" | localized}} {{datastore.shareableDatastore.datastore.name}}\n            </span>\n               <a *ngIf=\"!datastore.isLocal\"\n                  href=\"javascript://\"\n                  (click)=\"navigateToMor(datastore.shareableDatastore.datastore.moRef)\">\n                  {{datastore.shareableDatastore.datastore.name}}\n               </a>\n            </clr-dg-cell>\n            <clr-dg-cell class=\"icon-name-container\" vsan-show-title>\n               <ng-container *ngIf=\"datastore.shareableDatastore.serverCluster\">\n                  <clr-icon [attr.shape]=\"datastore.shareableDatastore.serverCluster.primaryIconId\"></clr-icon>\n                  <span *ngIf=\"datastore.isLocal\">\n                     {{datastore.shareableDatastore.serverCluster.name}}\n                  </span>\n                  <a *ngIf=\"!datastore.isLocal\"\n                     href=\"javascript://\"\n                     (click)=\"navigateToMor(datastore.shareableDatastore.serverCluster.moRef)\">\n                     {{datastore.shareableDatastore.serverCluster.name}}\n                  </a>\n               </ng-container>\n               <!-- When vSAN is turned off the server cluster can't be fetched -->\n               <span *ngIf=\"!datastore.shareableDatastore.serverCluster\">{{\"vsan.na.label\" | localized }}</span>\n            </clr-dg-cell>\n            <clr-dg-cell>\n               <a href=\"javascript://\"\n                  (click)=\"navigateToDatastoreCapacity(datastore.shareableDatastore.datastore.moRef)\">\n                  {{datastore.shareableDatastore.capacityB | fileSize}}\n               </a>\n            </clr-dg-cell>\n            <clr-dg-cell>\n               {{datastore.shareableDatastore.freeSpaceB | fileSize}}\n            </clr-dg-cell>\n            <clr-dg-cell>\n               {{datastore.registeredVMCount}}\n            </clr-dg-cell>\n            <clr-dg-cell>\n               <vsan-popup-list [shownItemsCount]=\"2\" signpostPosition=\"left-bottom\">\n                  <ng-template vsan-popup-list-item\n                               *ngFor=\"let clientCluster of datastore.shareableDatastore.clientClusters\">\n                     <div class=\"icon-name-container\" vsan-show-title>\n                        <clr-icon [attr.shape]=\"clientCluster.primaryIconId\"></clr-icon>\n                        <span *ngIf=\"isClusterLocal(clientCluster.moRef)\">{{clientCluster.name}}</span>\n                        <a *ngIf=\"!isClusterLocal(clientCluster.moRef)\"\n                           href=\"javascript://\"\n                           (click)=\"navigateToMor(clientCluster.moRef)\">\n                           {{clientCluster.name}}\n                        </a>\n                     </div>\n                  </ng-template>\n               </vsan-popup-list>\n            </clr-dg-cell>\n         </clr-dg-row>\n         <clr-dg-footer>\n         </clr-dg-footer>\n      </clr-datagrid>\n   </ng-container>\n</ng-container>\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {HealthStatusCell} from \"@component/cell/health-status-cell.component\";\nimport {LabelCell} from \"@component/cell/label-cell.component\";\nimport {StoragePolicyCell} from \"@component/cell/storage-policy-cell.component\";\nimport {MorCell} from \"@component/cell/mor-cell.component\";\nimport {IconItemComponent} from \"@component/cell/icon-item.component\";\nimport {HealthStateItemComponent} from \"@component/cell/health-state-item.component\";\nimport {ListCell} from \"@component/cell/list-cell.component\";\nimport {PspHealthStateItemComponent} from \"@component/cell/psp-health-state-item.component\";\nimport {HealthTestValueComponent} from \"@component/cell/health-test-value.component\";\nimport {HealthLinkCellComponent} from \"@component/cell/health-link-cell.component\";\nimport {HealthMorCellComponent} from \"@component/cell/health-mor-cell.component\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      FormsModule,\n      ClarityModule,\n      ValidationModule,\n      CommonPipeModule,\n      CommonDirectiveModule,\n   ],\n   // TODO: (vasilevd) Move health specific components to a separate common health module\n   declarations: [\n      HealthStatusCell,\n      HealthTestValueComponent,\n      LabelCell,\n      StoragePolicyCell,\n      MorCell,\n      HealthMorCellComponent,\n      ListCell,\n      IconItemComponent,\n      HealthStateItemComponent,\n      PspHealthStateItemComponent,\n      HealthLinkCellComponent,\n   ],\n   exports: [\n      HealthStatusCell,\n      HealthTestValueComponent,\n      LabelCell,\n      StoragePolicyCell,\n      MorCell,\n      HealthMorCellComponent,\n      ListCell,\n      IconItemComponent,\n      HealthStateItemComponent,\n      PspHealthStateItemComponent,\n      HealthLinkCellComponent,\n   ],\n})\nexport class CommonCellsModule {\n}\n","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component, OnInit} from \"@angular/core\";\nimport {UnavailableViewSpec} from \"@component/unavailable-view/unavailable-view-spec\";\nimport {CsdService} from \"@generated/csd-service\";\nimport {MountedRemoteDatastore} from \"@generated/mounted-remote-datastore\";\nimport {PermissionService} from \"@generated/permission-service\";\nimport {Privileges} from \"@generated/privileges\";\nimport {VsanCapabilityProvider} from \"@generated/vsan-capability-provider\";\nimport {NavigationService, PlatformExtension} from \"@navigation/navigation.service\";\nimport {ClusterComputeResource} from \"@service/client/dataservice/data-service-property\";\nimport {DataServiceClient} from \"@service/client/dataservice/data-service.service\";\nimport {ErrorMessage} from \"@service/flow/error-message.decorator\";\nimport {Loader} from \"@service/flow/loader.decorator\";\nimport {LoadingIndicator} from \"@service/flow/loading-indicator.decorator\";\nimport {RefreshHandler} from \"@service/global-refresh.service\";\nimport {ManagedObject} from \"@service/managed-object\";\nimport {TaskMonitorService} from \"@service/task-monitor-service\";\nimport {Logger} from \"@util/logger\";\nimport {ModalBuilder} from \"@util/modal-builder\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\n\n@Component({\n   templateUrl: \"datastore-sharing.html\",\n   styleUrls: [\"datastore-sharing.scss\"],\n   selector: \"vsan-datastore-sharing\",\n})\nexport class DatastoreSharingComponent implements OnInit {\n   readonly ManagedObject: typeof ManagedObject = ManagedObject;\n\n   @LoadingIndicator()\n   loading: boolean;\n   @ErrorMessage()\n   errorMessage: string;\n   isCsdSupportedOnCluster: boolean = false;\n   unavailableView: UnavailableViewSpec = null;\n   hasEditClusterPermission: boolean = false;\n   csdNotSupportedMessage: string = VsanUiUtils.getString(\"vsan.csd.notSupportedOnCluster\");\n\n   datastores: MountedRemoteDatastore[] = [];\n   selectedDatastore: MountedRemoteDatastore = null;\n\n   constructor(\n         private capabilityProvider: VsanCapabilityProvider,\n         private dataService: DataServiceClient,\n         private permissionService: PermissionService,\n         private csdService: CsdService,\n         private navigationService: NavigationService,\n         private taskMonitorService: TaskMonitorService) {\n   }\n\n   async ngOnInit(): Promise<void> {\n      this.isCsdSupportedOnCluster = await this.checkCsdSupportedOnCluster();\n      await Promise.all([\n         this.fetch(),\n         this.permissionService.hasPermissions(ManagedObject.contextObject, [\n            Privileges.EDIT_CLUSTER(), Privileges.CONFIG_STORAGE(),\n         ]).then(res => this.hasEditClusterPermission = res),\n      ]);\n   }\n\n   @RefreshHandler\n   @Loader({srMessage: \"vsan.csd.datastoreSharing.title\"})\n   async fetch(): Promise<void> {\n      await this.checkNumberOfHosts();\n      if (this.isCsdSupportedOnCluster) {\n         await this.fetchMountedDatastores();\n      }\n   }\n\n   @Loader()\n   async fetchMountedDatastores(): Promise<void> {\n      const previouslySelectedDatastore: MountedRemoteDatastore = this.selectedDatastore;\n      this.datastores = await this.csdService.getMountedDatastores(ManagedObject.contextObject);\n      if (previouslySelectedDatastore) {\n         this.selectedDatastore = this.datastores.find(ds =>\n               ManagedObject.areEqual(ds.shareableDatastore.datastore.moRef,\n                     previouslySelectedDatastore.shareableDatastore.datastore.moRef));\n      }\n   }\n\n   @Loader()\n   private async checkCsdSupportedOnCluster(): Promise<boolean> {\n      return await this.capabilityProvider.getIsCsdSupported(ManagedObject.contextObject);\n   }\n\n   @Loader()\n   private async checkNumberOfHosts(): Promise<void> {\n      const numberOfHosts: number = await this.dataService\n            .getProperty(ClusterComputeResource.host.length, ManagedObject.contextObject);\n      if (!numberOfHosts) {\n         this.unavailableView = UnavailableViewSpec.DATASTORE_SHARING_VIEW_NO_HOSTS;\n      } else {\n         this.unavailableView = null;\n      }\n   }\n\n   navigateToMor(morRef: ManagedObject): void {\n      this.navigationService.navigateTo(PlatformExtension.LAST_VISITED_PAGE, morRef);\n   }\n\n   navigateToDatastoreCapacity(datastoreRef: ManagedObject): void {\n      this.navigationService.navigateTo(PlatformExtension.DATASTORE_CAPACITY, datastoreRef);\n   }\n\n   isUnmountEnabled(): boolean {\n      return this.hasEditClusterPermission &&\n            this.selectedDatastore &&\n            !this.selectedDatastore.isLocal &&\n            !this.selectedDatastore.registeredVMCount;\n   }\n\n   get mountDatastoreTooltip(): string {\n      return this.hasEditClusterPermission ? \"\" : VsanUiUtils.getString(\"vsan.common.nopermissions\");\n   }\n\n   get unmountDatastoreTooltip(): string {\n      if (!this.hasEditClusterPermission) {\n         return VsanUiUtils.getString(\"vsan.common.nopermissions\");\n      }\n      if (!this.isUnmountEnabled() && !!this.selectedDatastore) {\n         if (this.selectedDatastore.isLocal) {\n            return VsanUiUtils.getString(\"vsan.csd.datastoreSharing.actions.unmountLocalDatastoreImpossible\");\n         }\n         return VsanUiUtils.getString(\"vsan.csd.datastoreSharing.actions.vmBlocksUnmount\");\n      }\n      return \"\";\n   }\n\n   isClusterLocal = (clusterRef: ManagedObject): boolean =>\n         ManagedObject.areEqual(clusterRef, ManagedObject.contextObject);\n\n   async openUnmountDialog(): Promise<void> {\n      const modalTask: ManagedObject = await new ModalBuilder(\"datastoreSharing/unmountRemoteDatastore\")\n            .setDimensions([600, 250])\n            .open({\n               clusterRef: ManagedObject.contextObject,\n               datastore: this.selectedDatastore.shareableDatastore.datastore,\n            });\n      await this.handleTask(modalTask);\n      this.selectedDatastore = null;\n      this.fetchMountedDatastores();\n   }\n\n   async openMountWizard(): Promise<void> {\n      const modalTask: ManagedObject = await new ModalBuilder(\"mountRemoteDatastore\")\n            .setDimensions([1200, 605])\n            .open({\n               clusterRef: ManagedObject.contextObject,\n            });\n      await this.handleTask(modalTask);\n      this.fetchMountedDatastores();\n   }\n\n   private async handleTask(task: ManagedObject): Promise<any> {\n      try {\n         return await this.taskMonitorService.getAwaitResult(task);\n      } catch (err) {\n         Logger.error(err);\n         this.errorMessage = err;\n      }\n   }\n}\n","/* Copyright 2020 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {Component} from \"@angular/core\";\nimport {CsdService} from \"@generated/csd-service\";\nimport {VsanUiUtils} from \"@util/vsan-util\";\nimport {UnmountRemoteDatastoreContext} from \"@navigation/context/unmount-remote-datastore-context\";\nimport {ManagedObject} from \"@service/managed-object\";\n\n@Component({\n   selector: \"vsan-mount-remote-datastore-wizard\",\n   template: `\n      <vsan-delete-prompt [title]=\"'vsan.csd.unmountDialog.title' | localized\"\n                          [subtitle]=\"context.datastore.name\"\n                          [confirmText]=\"'vsan.csd.unmountDialog.confirmButton' | localized\"\n                          (onConfirm)=\"unmount()\"\n                          [(alertMessages)]=\"errors\"\n                          [allowAlertClose]=\"false\"\n                          [blockButton]=\"blockButton\"\n                          [blockContent]=\"blockButton\">\n         <p>{{\"vsan.csd.unmountDialog.confirmText\" | localized : context.datastore.name}}</p>\n      </vsan-delete-prompt>\n   `\n})\nexport class UnmountRemoteDatastoreModalComponent {\n   context: UnmountRemoteDatastoreContext = VsanUiUtils.getModalContext();\n\n   errors: string[] = [];\n   blockButton: boolean = false;\n\n   constructor(private csdService: CsdService) {\n   }\n\n   async unmount() {\n      try {\n         this.blockButton = true;\n         const unmountTask: ManagedObject = await this.csdService.unmountRemoteDatastore(\n               this.context.clusterRef, this.context.datastore.moRef);\n         VsanUiUtils.closeModalDialog(unmountTask);\n      } catch (err) {\n         this.errors.push(err);\n      }\n   }\n}\n","/* Copyright 2019 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonDirectiveModule} from \"@directive/common-directive.module\";\nimport {CommonPipeModule} from \"@pipe/common-pipe.module\";\nimport {ValidationModule} from \"@component/validation/validation.module\";\nimport {ActionButtonModule} from \"@component/action-button/action-button.module\";\nimport {PromptModule} from \"@component/dialog/prompt/prompt.module\";\nimport {CommonCellsModule} from \"@component/cell/common-cells.module\";\nimport {InventoryBrowserModule} from \"@component/inventory/inventory-browser.module\";\nimport {SearchModule} from \"@component/search/search.module\";\nimport {TreeDatagridModule} from \"@component/datagrid/tree-datagrid.module\";\nimport {DatetimePickerModule} from \"@component/datetime-picker/datetime-picker.module\";\nimport {PopupListModule} from \"@component/popup-list/popup-list.module\";\nimport {VsanBreadcrumbModule} from \"@component/navigation/vsan-breadcrumb.module\";\n\n@NgModule({\n   imports: [\n         CommonDirectiveModule,\n         CommonPipeModule,\n         ValidationModule,\n         ActionButtonModule,\n         PromptModule,\n         CommonCellsModule,\n         InventoryBrowserModule,\n         SearchModule,\n         TreeDatagridModule,\n         DatetimePickerModule,\n         PopupListModule,\n         VsanBreadcrumbModule,\n   ],\n   exports: [\n      CommonDirectiveModule,\n      CommonPipeModule,\n      ValidationModule,\n      ActionButtonModule,\n      PromptModule,\n      CommonCellsModule,\n      InventoryBrowserModule,\n      SearchModule,\n      TreeDatagridModule,\n      DatetimePickerModule,\n      PopupListModule,\n      VsanBreadcrumbModule,\n   ],\n})\nexport class VsanCommonModule { }","/* Copyright 2019-2021 VMware, Inc. All rights reserved. -- VMware Confidential */\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ActionButtonSeparatorComponent} from \"@component/action-button/action-button-separator.component\";\nimport {ButtonTitleDirective} from \"@component/action-button/button-title.directive\";\nimport {ButtonGroupDirective} from \"@component/action-button/button-group.directive\";\nimport {ButtonGroupWrapDirective} from \"@component/action-button/button-group-wrap.directive\";\n\n@NgModule({\n   imports: [\n      CommonModule,\n      ClarityModule,\n   ],\n   declarations: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ],\n   exports: [\n      ActionButtonSeparatorComponent,\n      ButtonGroupDirective,\n      ButtonGroupWrapDirective,\n      ButtonTitleDirective,\n   ]\n})\nexport class ActionButtonModule {\n}\n","\n      <vsan-delete-prompt [title]=\"'vsan.csd.unmountDialog.title' | localized\"\n                          [subtitle]=\"context.datastore.name\"\n                          [confirmText]=\"'vsan.csd.unmountDialog.confirmButton' | localized\"\n                          (onConfirm)=\"unmount()\"\n                          [(alertMessages)]=\"errors\"\n                          [allowAlertClose]=\"false\"\n                          [blockButton]=\"blockButton\"\n                          [blockContent]=\"blockButton\">\n         <p>{{\"vsan.csd.unmountDialog.confirmText\" | localized : context.datastore.name}}</p>\n      </vsan-delete-prompt>\n   "],"sourceRoot":"webpack:///"}